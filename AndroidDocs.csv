"android.accessibilityservice.AccessibilityService.performGlobalAction (int action) "," Performs a global action. <br /><br />"
"android.accessibilityservice.AccessibilityService.getWindows () "," Gets the windows on the screen. <br /><br />"
"android.accessibilityservice.AccessibilityService.getServiceInfo () "," Gets the an AccessibilityServiceInfo describing this AccessibilityService. <br /><br />"
"android.accessibilityservice.AccessibilityService.onInterrupt () "," Callback for interrupting the accessibility feedback. <br /><br />"
"android.accessibilityservice.AccessibilityService.getSystemService (String name) "," Return the handle to a system-level service by name. <br /><br />"
"android.accessibilityservice.AccessibilityService.getRootInActiveWindow () "," Gets the root node in the currently active window if this service can retrieve window content. <br /><br />"
"android.accessibilityservice.AccessibilityService.onAccessibilityEvent (AccessibilityEvent event) "," Callback for AccessibilityEvents. <br /><br />"
"android.accessibilityservice.AccessibilityService.setServiceInfo (AccessibilityServiceInfo info) "," Sets the AccessibilityServiceInfo that describes this service. <br /><br />"
"android.accessibilityservice.AccessibilityService.onBind (Intent intent) "," Implement to return the implementation of the internal accessibility service interface. <br /><br />"
"android.accessibilityservice.AccessibilityService.findFocus (int focus) "," Find the view that has the specified focus type. <br /><br />"
"android.accessibilityservice.AccessibilityServiceInfo.writeToParcel (Parcel parcel, int flagz) "," Flatten this object in to a Parcel. <br /><br />"
"android.accessibilityservice.AccessibilityServiceInfo.feedbackTypeToString (int feedbackType) "," Returns the string representation of a feedback type. <br /><br />"
"android.accessibilityservice.AccessibilityServiceInfo.getSettingsActivityName () "," The settings activity name. <br /><br />"
"android.accessibilityservice.AccessibilityServiceInfo.getCapabilities () "," Returns the bit mask of capabilities this accessibility service has such as being able to retrieve the active window content, etc. <br /><br />"
"android.accessibilityservice.AccessibilityServiceInfo.loadDescription (PackageManager packageManager) "," The localized description of the accessibility service. <br /><br />"
"android.accessibilityservice.AccessibilityServiceInfo.getCanRetrieveWindowContent ()    This method was deprecated in API level 18. Use getCapabilities () "," This method was deprecated in API level 18. Use getCapabilities(). <br /><br />"
"android.accessibilityservice.AccessibilityServiceInfo.getResolveInfo () "," The service ResolveInfo. <br /><br />"
"android.accessibilityservice.AccessibilityServiceInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.accessibilityservice.AccessibilityServiceInfo.flagToString (int flag) "," Returns the string representation of a flag. <br /><br />"
"android.accessibilityservice.AccessibilityServiceInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.accessibilityservice.AccessibilityServiceInfo.getDescription ()    This method was deprecated in API level 16. Use loadDescription (PackageManager) "," This method was deprecated in API level 16. Use loadDescription(PackageManager). <br /><br />"
"android.accessibilityservice.AccessibilityServiceInfo.getId () "," The accessibility service id. <br /><br />"
"android.accessibilityservice.AccessibilityServiceInfo.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.accessibilityservice.AccessibilityServiceInfo.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.accessibilityservice.AccessibilityServiceInfo.capabilityToString (int capability) "," Returns the string representation of a capability. <br /><br />"
"android.accounts.AbstractAccountAuthenticator.updateCredentials (AccountAuthenticatorResponse response, Account account, String authTokenType, Bundle options) "," Update the locally stored credentials for an account. <br /><br />"
"android.accounts.AbstractAccountAuthenticator.getAccountRemovalAllowed (AccountAuthenticatorResponse response, Account account) "," Checks if the removal of this account is allowed. <br /><br />"
"android.accounts.AbstractAccountAuthenticator.hasFeatures (AccountAuthenticatorResponse response, Account account, String[] features) "," Checks if the account supports all the specified authenticator specific features. <br /><br />"
"android.accounts.AbstractAccountAuthenticator.getAuthTokenLabel (String authTokenType) "," Ask the authenticator for a localized label for the given authTokenType. <br /><br />"
"android.accounts.AbstractAccountAuthenticator.getIBinder () "," no description <br /><br />"
"android.accounts.AbstractAccountAuthenticator.confirmCredentials (AccountAuthenticatorResponse response, Account account, Bundle options) "," Checks that the user knows the credentials of an account. <br /><br />"
"android.accounts.AbstractAccountAuthenticator.getAuthToken (AccountAuthenticatorResponse response, Account account, String authTokenType, Bundle options) "," Gets the authtoken for an account. <br /><br />"
"android.accounts.AbstractAccountAuthenticator.getAccountCredentialsForCloning (AccountAuthenticatorResponse response, Account account) "," Returns a Bundle that contains whatever is required to clone the account on a different user. <br /><br />"
"android.accounts.AbstractAccountAuthenticator.addAccountFromCredentials (AccountAuthenticatorResponse response, Account account, Bundle accountCredentials) "," Creates an account based on credentials provided by the authenticator instance of another user on the device, who has chosen to share the account with this user. <br /><br />"
"android.accounts.AbstractAccountAuthenticator.editProperties (AccountAuthenticatorResponse response, String accountType) "," Returns a Bundle that contains the Intent of the activity that can be used to edit the properties. <br /><br />"
"android.accounts.AbstractAccountAuthenticator.addAccount (AccountAuthenticatorResponse response, String accountType, String authTokenType, String[] requiredFeatures, Bundle options) "," Adds an account of the specified accountType. <br /><br />"
"android.accounts.Account.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.accounts.Account.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.accounts.Account.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.accounts.Account.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.accounts.Account.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.accounts.AccountAuthenticatorActivity.finish () "," Sends the result or a Constants.ERROR_CODE_CANCELED error if a result isn't present. <br /><br />"
"android.accounts.AccountAuthenticatorActivity.setAccountAuthenticatorResult (Bundle result) "," Set the result that is to be sent as the result of the request that caused this Activity to be launched. <br /><br />"
"android.accounts.AccountAuthenticatorResponse.onResult (Bundle result) "," no description <br /><br />"
"android.accounts.AccountAuthenticatorResponse.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.accounts.AccountAuthenticatorResponse.onRequestContinued () "," no description <br /><br />"
"android.accounts.AccountAuthenticatorResponse.onError (int errorCode, String errorMessage) "," no description <br /><br />"
"android.accounts.AccountAuthenticatorResponse.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.accounts.AccountManager.getAccountsByType (String type) "," Lists all accounts of a particular type. <br /><br />"
"android.accounts.AccountManager.getPassword (Account account) "," Gets the saved password associated with the account. <br /><br />"
"android.accounts.AccountManager.invalidateAuthToken (String accountType, String authToken) "," Removes an auth token from the AccountManager's cache. <br /><br />"
"android.accounts.AccountManager.setPassword (Account account, String password) "," Sets or forgets a saved password. <br /><br />"
"android.accounts.AccountManager.removeOnAccountsUpdatedListener (OnAccountsUpdateListener listener)   Removes an OnAccountsUpdateListener previously registered with addOnAccountsUpdatedListener (OnAccountsUpdateListener, Handler, boolean) "," Removes an OnAccountsUpdateListener previously registered with addOnAccountsUpdatedListener(OnAccountsUpdateListener, Handler, boolean). <br /><br />"
"android.accounts.AccountManager.clearPassword (Account account) "," Forgets a saved password. <br /><br />"
"android.accounts.AccountManager.setAuthToken (Account account, String authTokenType, String authToken) "," Adds an auth token to the AccountManager cache for an account. <br /><br />"
"android.accounts.AccountManager.getAuthTokenByFeatures (String accountType, String authTokenType, String[] features, Activity activity, Bundle addAccountOptions, Bundle getAuthTokenOptions, AccountManagerCallback< Bundle> callback, Handler handler)   This convenience helper combines the functionality of getAccountsByTypeAndFeatures (String, String[], AccountManagerCallback  , Handler) , getAuthToken (Account, String, Bundle, Activity, AccountManagerCallback  , Handler) , and addAccount (String, String, String[], Bundle, Activity, AccountManagerCallback  , Handler) "," This convenience helper combines the functionality of getAccountsByTypeAndFeatures(String, String[], AccountManagerCallback  , Handler) , getAuthToken(Account, String, Bundle, Activity, AccountManagerCallback  , Handler) , and addAccount(String, String, String[], Bundle, Activity, AccountManagerCallback  , Handler) . <br /><br />"
"android.accounts.AccountManager.get (Context context) "," Gets an AccountManager instance associated with a Context. <br /><br />"
"android.accounts.AccountManager.getAccountsByTypeAndFeatures (String type, String[] features, AccountManagerCallback< Account[]> callback, Handler handler) "," Lists all accounts of a type which have certain features. <br /><br />"
"android.accounts.AccountManager.confirmCredentials (Account account, Bundle options, Activity activity, AccountManagerCallback< Bundle> callback, Handler handler) "," Confirms that the user knows the password for an account to make extra sure they are the owner of the account. <br /><br />"
"android.accounts.AccountManager.editProperties (String accountType, Activity activity, AccountManagerCallback< Bundle> callback, Handler handler) "," Offers the user an opportunity to change an authenticator's settings. <br /><br />"
"android.accounts.AccountManager.getPreviousName (Account account) "," Gets the previous name associated with the account or null, if none. <br /><br />"
"android.accounts.AccountManager.getAccountsByTypeForPackage (String type, String packageName) "," Returns the accounts visible to the specified package, in an environment where some apps are not authorized to view all accounts. <br /><br />"
"android.accounts.AccountManager.setUserData (Account account, String key, String value) "," Sets one userdata key for an account. <br /><br />"
"android.accounts.AccountManager.blockingGetAuthToken (Account account, String authTokenType, boolean notifyAuthFailure)   This convenience helper synchronously gets an auth token with getAuthToken (Account, String, boolean, AccountManagerCallback, Handler) "," This convenience helper synchronously gets an auth token with getAuthToken(Account, String, boolean, AccountManagerCallback, Handler). <br /><br />"
"android.accounts.AccountManager.addAccount (String accountType, String authTokenType, String[] requiredFeatures, Bundle addAccountOptions, Activity activity, AccountManagerCallback< Bundle> callback, Handler handler) "," Asks the user to add an account of a specified type. <br /><br />"
"android.accounts.AccountManager.peekAuthToken (Account account, String authTokenType) "," Gets an auth token from the AccountManager's cache. <br /><br />"
"android.accounts.AccountManager.getAuthToken (Account account, String authTokenType, boolean notifyAuthFailure, AccountManagerCallback< Bundle> callback, Handler handler)    This method was deprecated in API level 14. use getAuthToken (Account, String, android.os.Bundle, boolean, AccountManagerCallback, android.os.Handler) "," This method was deprecated in API level 14. use getAuthToken(Account, String, android.os.Bundle, boolean, AccountManagerCallback, android.os.Handler) instead <br /><br />"
"android.accounts.AccountManager.removeAccountExplicitly (Account account) "," Removes an account directly. <br /><br />"
"android.accounts.AccountManager.newChooseAccountIntent (Account selectedAccount, ArrayList< Account> allowableAccounts, String[] allowableAccountTypes, boolean alwaysPromptForAccount, String descriptionOverrideText, String addAccountAuthTokenType, String[] addAccountRequiredFeatures, Bundle addAccountOptions) "," Returns an intent to an Activity that prompts the user to choose from a list of accounts. <br /><br />"
"android.accounts.AccountManager.renameAccount (Account account, String newName, AccountManagerCallback< Account> callback, Handler handler) "," Rename the specified Account. <br /><br />"
"android.accounts.AccountManager.getAccounts () "," Lists all accounts of any type registered on the device. <br /><br />"
"android.accounts.AccountManager.getUserData (Account account, String key) "," Gets the user data named by 'key' associated with the account. <br /><br />"
"android.accounts.AccountManager.hasFeatures (Account account, String[] features, AccountManagerCallback< Boolean> callback, Handler handler) "," Finds out whether a particular account has all the specified features. <br /><br />"
"android.accounts.AccountManager.addOnAccountsUpdatedListener (OnAccountsUpdateListener listener, Handler handler, boolean updateImmediately) "," Adds an OnAccountsUpdateListener to this instance of the AccountManager. <br /><br />"
"android.accounts.AccountManager.updateCredentials (Account account, String authTokenType, Bundle options, Activity activity, AccountManagerCallback< Bundle> callback, Handler handler) "," Asks the user to enter a new password for an account, updating the saved credentials for the account. <br /><br />"
"android.accounts.AccountManager.getAuthToken (Account account, String authTokenType, Bundle options, Activity activity, AccountManagerCallback< Bundle> callback, Handler handler) "," Gets an auth token of the specified type for a particular account, prompting the user for credentials if necessary. <br /><br />"
"android.accounts.AccountManager.getAuthenticatorTypes () "," Lists the currently registered authenticators. <br /><br />"
"android.accounts.AccountManager.getAuthToken (Account account, String authTokenType, Bundle options, boolean notifyAuthFailure, AccountManagerCallback< Bundle> callback, Handler handler) "," Gets an auth token of the specified type for a particular account, optionally raising a notification if the user must enter credentials. <br /><br />"
"android.accounts.AccountManager.removeAccount (Account account, Activity activity, AccountManagerCallback< Bundle> callback, Handler handler) "," Removes an account from the AccountManager. <br /><br />"
"android.accounts.AccountManager.addAccountExplicitly (Account account, String password, Bundle userdata) "," Adds an account directly to the AccountManager. <br /><br />"
"android.accounts.AccountManager.removeAccount (Account account, AccountManagerCallback< Boolean> callback, Handler handler)    This method is deprecated. use removeAccount (Account, Activity, AccountManagerCallback, Handler) "," This method is deprecated. use removeAccount(Account, Activity, AccountManagerCallback, Handler) instead <br /><br />"
"android.accounts.AccountManagerCallback<V>.run (AccountManagerFuture<V> future) "," no description <br /><br />"
"android.accounts.AccountManagerFuture<V>.getResult () "," Accessor for the future result the AccountManagerFuture represents. <br /><br />"
"android.accounts.AccountManagerFuture<V>.isDone () "," Returns true if this task completed. <br /><br />"
"android.accounts.AccountManagerFuture<V>.cancel (boolean mayInterruptIfRunning) "," Attempts to cancel execution of this task. <br /><br />"
"android.accounts.AccountManagerFuture<V>.getResult (long timeout, TimeUnit unit) "," Accessor for the future result the AccountManagerFuture represents. <br /><br />"
"android.accounts.AccountManagerFuture<V>.isCancelled () "," Returns true if this task was cancelled before it completed normally. <br /><br />"
"android.accounts.AuthenticatorDescription.newKey (String type) "," A factory method for creating an AuthenticatorDescription that can be used as a key to identify the authenticator by its type. <br /><br />"
"android.accounts.AuthenticatorDescription.hashCode () "," Returns the hashcode of the type only. <br /><br />"
"android.accounts.AuthenticatorDescription.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.accounts.AuthenticatorDescription.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.accounts.AuthenticatorDescription.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.accounts.AuthenticatorDescription.equals (Object o) "," Compares the type only, suitable for key comparisons. <br /><br />"
"android.accounts.OnAccountsUpdateListener.onAccountsUpdated (Account[] accounts) "," This invoked when the AccountManager starts up and whenever the account set changes. <br /><br />"
"android.animation.Animator.AnimatorListener.onAnimationCancel (Animator animation) "," Notifies the cancellation of the animation. <br /><br />"
"android.animation.Animator.AnimatorListener.onAnimationEnd (Animator animation) "," Notifies the end of the animation. <br /><br />"
"android.animation.Animator.AnimatorListener.onAnimationStart (Animator animation) "," Notifies the start of the animation. <br /><br />"
"android.animation.Animator.AnimatorListener.onAnimationRepeat (Animator animation) "," Notifies the repetition of the animation. <br /><br />"
"android.animation.Animator.AnimatorPauseListener.onAnimationPause (Animator animation) "," Notifies that the animation was paused. <br /><br />"
"android.animation.Animator.AnimatorPauseListener.onAnimationResume (Animator animation) "," Notifies that the animation was resumed, after being previously paused. <br /><br />"
"android.animation.Animator.setTarget (Object target) "," Sets the target object whose property will be animated by this animation. <br /><br />"
"android.animation.Animator.isStarted () "," Returns whether this Animator has been started and not yet ended. <br /><br />"
"android.animation.Animator.setDuration (long duration) "," Sets the duration of the animation. <br /><br />"
"android.animation.Animator.setStartDelay (long startDelay)   The amount of time, in milliseconds, to delay processing the animation after start () "," The amount of time, in milliseconds, to delay processing the animation after start() is called. <br /><br />"
"android.animation.Animator.end () "," Ends the animation. <br /><br />"
"android.animation.Animator.removePauseListener (Animator.AnimatorPauseListener listener) "," Removes a pause listener from the set listening to this animation. <br /><br />"
"android.animation.Animator.start () "," Starts this animation. <br /><br />"
"android.animation.Animator.isPaused () "," Returns whether this animator is currently in a paused state. <br /><br />"
"android.animation.Animator.removeAllListeners ()   Removes all listeners and "," Removes all listeners and pauseListeners from this object. <br /><br />"
"android.animation.Animator.getListeners () "," Gets the set of Animator.AnimatorListener objects that are currently listening for events on this Animator object. <br /><br />"
"android.animation.Animator.getStartDelay ()   The amount of time, in milliseconds, to delay processing the animation after start () "," The amount of time, in milliseconds, to delay processing the animation after start() is called. <br /><br />"
"android.animation.Animator.removeListener (Animator.AnimatorListener listener) "," Removes a listener from the set listening to this animation. <br /><br />"
"android.animation.Animator.setupStartValues () "," This method tells the object to use appropriate information to extract starting values for the animation. <br /><br />"
"android.animation.Animator.resume () "," Resumes a paused animation, causing the animator to pick up where it left off when it was paused. <br /><br />"
"android.animation.Animator.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.animation.Animator.getInterpolator () "," Returns the timing interpolator that this animation uses. <br /><br />"
"android.animation.Animator.isRunning ()   Returns whether this Animator is currently running  (having been started and gone past any initial startDelay period and not yet ended) "," Returns whether this Animator is currently running (having been started and gone past any initial startDelay period and not yet ended). <br /><br />"
"android.animation.Animator.setInterpolator (TimeInterpolator value) "," The time interpolator used in calculating the elapsed fraction of the animation. <br /><br />"
"android.animation.Animator.addListener (Animator.AnimatorListener listener) "," Adds a listener to the set of listeners that are sent events through the life of an animation, such as start, repeat, and end. <br /><br />"
"android.animation.Animator.cancel () "," Cancels the animation. <br /><br />"
"android.animation.Animator.pause () "," Pauses a running animation. <br /><br />"
"android.animation.Animator.addPauseListener (Animator.AnimatorPauseListener listener) "," Adds a pause listener to this animator. <br /><br />"
"android.animation.Animator.setupEndValues () "," This method tells the object to use appropriate information to extract ending values for the animation. <br /><br />"
"android.animation.Animator.getDuration () "," Gets the duration of the animation. <br /><br />"
"android.animation.AnimatorInflater.loadStateListAnimator (Context context, int id) "," no description <br /><br />"
"android.animation.AnimatorInflater.loadAnimator (Context context, int id) "," Loads an Animator object from a resource <br /><br />"
"android.animation.AnimatorListenerAdapter.onAnimationPause (Animator animation) "," Notifies that the animation was paused. <br /><br />"
"android.animation.AnimatorListenerAdapter.onAnimationCancel (Animator animation) "," Notifies the cancellation of the animation. <br /><br />"
"android.animation.AnimatorListenerAdapter.onAnimationEnd (Animator animation) "," Notifies the end of the animation. <br /><br />"
"android.animation.AnimatorListenerAdapter.onAnimationStart (Animator animation) "," Notifies the start of the animation. <br /><br />"
"android.animation.AnimatorListenerAdapter.onAnimationRepeat (Animator animation) "," Notifies the repetition of the animation. <br /><br />"
"android.animation.AnimatorListenerAdapter.onAnimationResume (Animator animation) "," Notifies that the animation was resumed, after being previously paused. <br /><br />"
"android.animation.AnimatorSet.Builder.before (Animator anim)   Sets up the given animation to play when the animation supplied in the play (Animator) "," Sets up the given animation to play when the animation supplied in the play(Animator) call that created this Builder object ends. <br /><br />"
"android.animation.AnimatorSet.Builder.after (long delay)   Sets up the animation supplied in the play (Animator) "," Sets up the animation supplied in the play(Animator) call that created this Builder object to play when the given amount of time elapses. <br /><br />"
"android.animation.AnimatorSet.Builder.with (Animator anim)   Sets up the given animation to play at the same time as the animation supplied in the play (Animator) "," Sets up the given animation to play at the same time as the animation supplied in the play(Animator) call that created this Builder object. <br /><br />"
"android.animation.AnimatorSet.Builder.after (Animator anim)   Sets up the given animation to play when the animation supplied in the play (Animator) "," Sets up the given animation to play when the animation supplied in the play(Animator) call that created this Builder object to start when the animation supplied in this method call ends. <br /><br />"
"android.animation.AnimatorSet.isStarted () "," Returns whether this Animator has been started and not yet ended. <br /><br />"
"android.animation.AnimatorSet.play (Animator anim) "," This method creates a Builder object, which is used to set up playing constraints. <br /><br />"
"android.animation.AnimatorSet.setDuration (long duration) "," Sets the length of each of the current child animations of this AnimatorSet. <br /><br />"
"android.animation.AnimatorSet.getChildAnimations () "," Returns the current list of child Animator objects controlled by this AnimatorSet. <br /><br />"
"android.animation.AnimatorSet.end () "," Ends the animation. Note that ending a AnimatorSet also ends all of the animations that it is responsible for. <br /><br />"
"android.animation.AnimatorSet.start () "," Starts this animation. Starting this AnimatorSet will, in turn, start the animations for which it is responsible. <br /><br />"
"android.animation.AnimatorSet.playTogether (Collection< Animator> items) "," Sets up this AnimatorSet to play all of the supplied animations at the same time. <br /><br />"
"android.animation.AnimatorSet.playSequentially (List< Animator> items) "," Sets up this AnimatorSet to play each of the supplied animations when the previous animation ends. <br /><br />"
"android.animation.AnimatorSet.setTarget (Object target)   Sets the target object for all current child animations of this AnimatorSet that take targets  ( ObjectAnimator and AnimatorSet) "," Sets the target object for all current child animations of this AnimatorSet that take targets ( ObjectAnimator and AnimatorSet). <br /><br />"
"android.animation.AnimatorSet.playSequentially (Animator... items) "," Sets up this AnimatorSet to play each of the supplied animations when the previous animation ends. <br /><br />"
"android.animation.AnimatorSet.isRunning () "," Returns true if any of the child animations of this AnimatorSet have been started and have not yet ended. <br /><br />"
"android.animation.AnimatorSet.setStartDelay (long startDelay)   The amount of time, in milliseconds, to delay starting the animation after start () "," The amount of time, in milliseconds, to delay starting the animation after start() is called. <br /><br />"
"android.animation.AnimatorSet.setInterpolator (TimeInterpolator interpolator)   Sets the TimeInterpolator for all current "," Sets the TimeInterpolator for all current child animations of this AnimatorSet. <br /><br />"
"android.animation.AnimatorSet.setupStartValues () "," This method tells the object to use appropriate information to extract starting values for the animation. <br /><br />"
"android.animation.AnimatorSet.resume () "," Resumes a paused animation, causing the animator to pick up where it left off when it was paused. <br /><br />"
"android.animation.AnimatorSet.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.animation.AnimatorSet.getInterpolator () "," Returns the timing interpolator that this animation uses. <br /><br />"
"android.animation.AnimatorSet.cancel () "," Cancels the animation. Note that canceling a AnimatorSet also cancels all of the animations that it is responsible for. <br /><br />"
"android.animation.AnimatorSet.getStartDelay ()   The amount of time, in milliseconds, to delay starting the animation after start () "," The amount of time, in milliseconds, to delay starting the animation after start() is called. <br /><br />"
"android.animation.AnimatorSet.pause () "," Pauses a running animation. <br /><br />"
"android.animation.AnimatorSet.playTogether (Animator... items) "," Sets up this AnimatorSet to play all of the supplied animations at the same time. <br /><br />"
"android.animation.AnimatorSet.setupEndValues () "," This method tells the object to use appropriate information to extract ending values for the animation. <br /><br />"
"android.animation.AnimatorSet.getDuration () "," Gets the length of each of the child animations of this AnimatorSet. <br /><br />"
"android.animation.ArgbEvaluator.evaluate (float fraction, Object startValue, Object endValue) "," This function returns the calculated in-between value for a color given integers that represent the start and end values in the four bytes of the 32-bit int. <br /><br />"
"android.animation.BidirectionalTypeConverter<T, V>.invert () "," Returns the inverse of this converter, where the from and to classes are reversed. <br /><br />"
"android.animation.BidirectionalTypeConverter<T, V>.convertBack (V value) "," Does a conversion from the target type back to the source type. <br /><br />"
"android.animation.FloatArrayEvaluator.evaluate (float fraction, float[] startValue, float[] endValue) "," Interpolates the value at each index by the fraction. <br /><br />"
"android.animation.FloatEvaluator.evaluate (float fraction, Number startValue, Number endValue) "," This function returns the result of linearly interpolating the start and end values, with fraction representing the proportion between the start and end values. <br /><br />"
"android.animation.IntArrayEvaluator.evaluate (float fraction, int[] startValue, int[] endValue) "," Interpolates the value at each index by the fraction. <br /><br />"
"android.animation.IntEvaluator.evaluate (float fraction, Integer startValue, Integer endValue) "," This function returns the result of linearly interpolating the start and end values, with fraction representing the proportion between the start and end values. <br /><br />"
"android.animation.Keyframe.ofInt (float fraction, int value) "," Constructs a Keyframe object with the given time and value. <br /><br />"
"android.animation.Keyframe.setValue (Object value) "," Sets the value for this Keyframe. <br /><br />"
"android.animation.Keyframe.getType () "," Gets the type of keyframe. <br /><br />"
"android.animation.Keyframe.ofFloat (float fraction) "," Constructs a Keyframe object with the given time. <br /><br />"
"android.animation.Keyframe.setFraction (float fraction) "," Sets the time for this keyframe, as a fraction of the overall animation duration. <br /><br />"
"android.animation.Keyframe.getValue () "," Gets the value for this Keyframe. <br /><br />"
"android.animation.Keyframe.ofObject (float fraction) "," Constructs a Keyframe object with the given time. <br /><br />"
"android.animation.Keyframe.setInterpolator (TimeInterpolator interpolator) "," Sets the optional interpolator for this Keyframe. <br /><br />"
"android.animation.Keyframe.ofInt (float fraction) "," Constructs a Keyframe object with the given time. <br /><br />"
"android.animation.Keyframe.getFraction () "," Gets the time for this keyframe, as a fraction of the overall animation duration. <br /><br />"
"android.animation.Keyframe.hasValue () "," Indicates whether this keyframe has a valid value. <br /><br />"
"android.animation.Keyframe.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.animation.Keyframe.getInterpolator () "," Gets the optional interpolator for this Keyframe. <br /><br />"
"android.animation.Keyframe.ofObject (float fraction, Object value) "," Constructs a Keyframe object with the given time and value. <br /><br />"
"android.animation.Keyframe.ofFloat (float fraction, float value) "," Constructs a Keyframe object with the given time and value. <br /><br />"
"android.animation.LayoutTransition.removeChild (ViewGroup parent, View child) "," This method is called by ViewGroup when a child view is about to be removed from the container. <br /><br />"
"android.animation.LayoutTransition.setAnimateParentHierarchy (boolean animateParentHierarchy) "," This flag controls whether CHANGE_APPEARING or CHANGE_DISAPPEARING animations will cause the default changing animation to be run on the parent hierarchy as well. <br /><br />"
"android.animation.LayoutTransition.setDuration (long duration) "," Sets the duration to be used by all animations of this transition object. <br /><br />"
"android.animation.LayoutTransition.addTransitionListener (LayoutTransition.TransitionListener listener) "," Add a listener that will be called when the bounds of the view change due to layout processing. <br /><br />"
"android.animation.LayoutTransition.showChild (ViewGroup parent, View child, int oldVisibility) "," This method is called by ViewGroup when a child view is about to be made visible in the container. <br /><br />"
"android.animation.LayoutTransition.getStartDelay (int transitionType) "," Gets the start delay on one of the animation objects used by this transition. <br /><br />"
"android.animation.LayoutTransition.getTransitionListeners () "," Gets the current list of listeners for layout changes. <br /><br />"
"android.animation.LayoutTransition.isChangingLayout () "," Returns true if animations are running which animate layout-related properties. <br /><br />"
"android.animation.LayoutTransition.getAnimator (int transitionType) "," Gets the animation used during one of the transition types that may run. <br /><br />"
"android.animation.LayoutTransition.setStartDelay (int transitionType, long delay) "," Sets the start delay on one of the animation objects used by this transition. <br /><br />"
"android.animation.LayoutTransition.isTransitionTypeEnabled (int transitionType) "," Returns whether the specified transitionType is enabled for this LayoutTransition object. <br /><br />"
"android.animation.LayoutTransition.removeTransitionListener (LayoutTransition.TransitionListener listener) "," Remove a listener for layout changes. <br /><br />"
"android.animation.LayoutTransition.setDuration (int transitionType, long duration) "," Sets the duration on one of the animation objects used by this transition. <br /><br />"
"android.animation.LayoutTransition.isRunning () "," Returns true if any of the animations in this transition are currently running. <br /><br />"
"android.animation.LayoutTransition.showChild (ViewGroup parent, View child)    This method was deprecated in API level 16. Use showChild (android.view.ViewGroup, android.view.View, int) "," This method was deprecated in API level 16. Use showChild(android.view.ViewGroup, android.view.View, int). <br /><br />"
"android.animation.LayoutTransition.getStagger (int transitionType) "," Gets the length of time to delay between starting each animation during one of the change animations. <br /><br />"
"android.animation.LayoutTransition.addChild (ViewGroup parent, View child) "," This method is called by ViewGroup when a child view is about to be added to the container. <br /><br />"
"android.animation.LayoutTransition.hideChild (ViewGroup parent, View child)    This method was deprecated in API level 16. Use hideChild (android.view.ViewGroup, android.view.View, int) "," This method was deprecated in API level 16. Use hideChild(android.view.ViewGroup, android.view.View, int). <br /><br />"
"android.animation.LayoutTransition.disableTransitionType (int transitionType) "," Disables the specified transitionType for this LayoutTransition object. <br /><br />"
"android.animation.LayoutTransition.setAnimator (int transitionType, Animator animator) "," Sets the animation used during one of the transition types that may run. <br /><br />"
"android.animation.LayoutTransition.setInterpolator (int transitionType, TimeInterpolator interpolator) "," Sets the interpolator on one of the animation objects used by this transition. <br /><br />"
"android.animation.LayoutTransition.getInterpolator (int transitionType) "," Gets the interpolator on one of the animation objects used by this transition. <br /><br />"
"android.animation.LayoutTransition.enableTransitionType (int transitionType) "," Enables the specified transitionType for this LayoutTransition object. <br /><br />"
"android.animation.LayoutTransition.getDuration (int transitionType) "," Gets the duration on one of the animation objects used by this transition. <br /><br />"
"android.animation.LayoutTransition.setStagger (int transitionType, long duration) "," Sets the length of time to delay between starting each animation during one of the change animations. <br /><br />"
"android.animation.LayoutTransition.hideChild (ViewGroup parent, View child, int newVisibility) "," This method is called by ViewGroup when a child view is about to be hidden in container. <br /><br />"
"android.animation.LayoutTransition.TransitionListener.endTransition (LayoutTransition transition, ViewGroup container, View view, int transitionType) "," This event is sent to listeners when any type of transition animation ends. <br /><br />"
"android.animation.LayoutTransition.TransitionListener.startTransition (LayoutTransition transition, ViewGroup container, View view, int transitionType) "," This event is sent to listeners when any type of transition animation begins. <br /><br />"
"android.animation.ObjectAnimator.setDuration (long duration) "," Sets the length of the animation. <br /><br />"
"android.animation.ObjectAnimator.ofMultiInt (Object target, String propertyName, TypeConverter<T, int[]> converter, TypeEvaluator<T> evaluator, T... values) "," Constructs and returns an ObjectAnimator that animates over values for a multiple int parameters setter. <br /><br />"
"android.animation.ObjectAnimator.ofInt (Object target, String propertyName, int... values) "," Constructs and returns an ObjectAnimator that animates between int values. <br /><br />"
"android.animation.ObjectAnimator.setIntValues (int... values) "," Sets int values that will be animated between. <br /><br />"
"android.animation.ObjectAnimator.ofMultiFloat (Object target, String propertyName, float[][] values) "," Constructs and returns an ObjectAnimator that animates over float values for a multiple parameters setter. <br /><br />"
"android.animation.ObjectAnimator.ofMultiFloat (Object target, String propertyName, Path path) "," Constructs and returns an ObjectAnimator that animates the target using a multi-float setter along the given Path. <br /><br />"
"android.animation.ObjectAnimator.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.animation.ObjectAnimator.ofFloat (Object target, String xPropertyName, String yPropertyName, Path path) "," Constructs and returns an ObjectAnimator that animates coordinates along a Path using two properties. <br /><br />"
"android.animation.ObjectAnimator.ofArgb (T target, Property<T,  Integer> property, int... values) "," Constructs and returns an ObjectAnimator that animates between color values. <br /><br />"
"android.animation.ObjectAnimator.setFloatValues (float... values) "," Sets float values that will be animated between. <br /><br />"
"android.animation.ObjectAnimator.ofPropertyValuesHolder (Object target, PropertyValuesHolder... values) "," Constructs and returns an ObjectAnimator that animates between the sets of values specified in PropertyValueHolder objects. <br /><br />"
"android.animation.ObjectAnimator.setObjectValues (Object... values) "," Sets the values to animate between for this animation. <br /><br />"
"android.animation.ObjectAnimator.setupEndValues () "," This method tells the object to use appropriate information to extract ending values for the animation. <br /><br />"
"android.animation.ObjectAnimator.ofInt (T target, Property<T,  Integer> property, int... values) "," Constructs and returns an ObjectAnimator that animates between int values. <br /><br />"
"android.animation.ObjectAnimator.setTarget (Object target) "," Sets the target object whose property will be animated by this animation. <br /><br />"
"android.animation.ObjectAnimator.ofMultiFloat (Object target, String propertyName, TypeConverter<T, float[]> converter, TypeEvaluator<T> evaluator, T... values) "," Constructs and returns an ObjectAnimator that animates over values for a multiple float parameters setter. <br /><br />"
"android.animation.ObjectAnimator.ofFloat (T target, Property<T,  Float> xProperty, Property<T,  Float> yProperty, Path path) "," Constructs and returns an ObjectAnimator that animates coordinates along a Path using two properties. <br /><br />"
"android.animation.ObjectAnimator.ofInt (T target, Property<T,  Integer> xProperty, Property<T,  Integer> yProperty, Path path) "," Constructs and returns an ObjectAnimator that animates coordinates along a Path using two properties. <br /><br />"
"android.animation.ObjectAnimator.ofArgb (Object target, String propertyName, int... values) "," Constructs and returns an ObjectAnimator that animates between color values. <br /><br />"
"android.animation.ObjectAnimator.ofMultiInt (Object target, String propertyName, int[][] values) "," Constructs and returns an ObjectAnimator that animates over int values for a multiple parameters setter. <br /><br />"
"android.animation.ObjectAnimator.ofObject (Object target, String propertyName, TypeEvaluator evaluator, Object... values) "," Constructs and returns an ObjectAnimator that animates between Object values. <br /><br />"
"android.animation.ObjectAnimator.setAutoCancel (boolean cancel) "," autoCancel controls whether an ObjectAnimator will be canceled automatically when any other ObjectAnimator with the same target and properties is started. <br /><br />"
"android.animation.ObjectAnimator.start () "," Starts this animation. <br /><br />"
"android.animation.ObjectAnimator.ofObject (T target, Property<T, P> property, TypeConverter<V, P> converter, TypeEvaluator<V> evaluator, V... values) "," Constructs and returns an ObjectAnimator that animates between Object values. <br /><br />"
"android.animation.ObjectAnimator.ofFloat (T target, Property<T,  Float> property, float... values) "," Constructs and returns an ObjectAnimator that animates between float values. <br /><br />"
"android.animation.ObjectAnimator.ofFloat (Object target, String propertyName, float... values) "," Constructs and returns an ObjectAnimator that animates between float values. <br /><br />"
"android.animation.ObjectAnimator.setPropertyName (String propertyName) "," Sets the name of the property that will be animated. <br /><br />"
"android.animation.ObjectAnimator.ofObject (Object target, String propertyName, TypeConverter< PointF, ?> converter, Path path) "," Constructs and returns an ObjectAnimator that animates a property along a Path. <br /><br />"
"android.animation.ObjectAnimator.setProperty (Property property) "," Sets the property that will be animated. <br /><br />"
"android.animation.ObjectAnimator.ofObject (T target, Property<T, V> property, TypeEvaluator<V> evaluator, V... values) "," Constructs and returns an ObjectAnimator that animates between Object values. <br /><br />"
"android.animation.ObjectAnimator.ofObject (T target, Property<T, V> property, TypeConverter< PointF, V> converter, Path path) "," Constructs and returns an ObjectAnimator that animates a property along a Path. <br /><br />"
"android.animation.ObjectAnimator.setupStartValues () "," This method tells the object to use appropriate information to extract starting values for the animation. <br /><br />"
"android.animation.ObjectAnimator.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.animation.ObjectAnimator.ofInt (Object target, String xPropertyName, String yPropertyName, Path path) "," Constructs and returns an ObjectAnimator that animates coordinates along a Path using two properties. <br /><br />"
"android.animation.ObjectAnimator.getPropertyName () "," Gets the name of the property that will be animated. <br /><br />"
"android.animation.ObjectAnimator.ofMultiInt (Object target, String propertyName, Path path) "," Constructs and returns an ObjectAnimator that animates the target using a multi-int setter along the given Path. <br /><br />"
"android.animation.ObjectAnimator.getTarget () "," The target object whose property will be animated by this animation <br /><br />"
"android.animation.PointFEvaluator.evaluate (float fraction, PointF startValue, PointF endValue) "," This function returns the result of linearly interpolating the start and end PointF values, with fraction representing the proportion between the start and end values. <br /><br />"
"android.animation.PropertyValuesHolder.ofKeyframe (String propertyName, Keyframe... values) "," Constructs and returns a PropertyValuesHolder object with the specified property name and set of values. <br /><br />"
"android.animation.PropertyValuesHolder.ofMultiFloat (String propertyName, TypeConverter<T, float[]> converter, TypeEvaluator<T> evaluator, Keyframe... values) "," Constructs and returns a PropertyValuesHolder object with the specified property name or setter name for use in a multi-float setter function using ObjectAnimator. <br /><br />"
"android.animation.PropertyValuesHolder.ofObject (String propertyName, TypeEvaluator evaluator, Object... values) "," Constructs and returns a PropertyValuesHolder with a given property name and set of Object values. <br /><br />"
"android.animation.PropertyValuesHolder.setKeyframes (Keyframe... values) "," Set the animated values for this object to this set of Keyframes. <br /><br />"
"android.animation.PropertyValuesHolder.ofMultiInt (String propertyName, TypeConverter<V, int[]> converter, TypeEvaluator<V> evaluator, V... values) "," Constructs and returns a PropertyValuesHolder with a given property and set of Object values for use with ObjectAnimator multi-value setters. <br /><br />"
"android.animation.PropertyValuesHolder.setIntValues (int... values) "," Set the animated values for this object to this set of ints. <br /><br />"
"android.animation.PropertyValuesHolder.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.animation.PropertyValuesHolder.ofMultiInt (String propertyName, TypeConverter<T, int[]> converter, TypeEvaluator<T> evaluator, Keyframe... values) "," Constructs and returns a PropertyValuesHolder object with the specified property name or setter name for use in a multi-int setter function using ObjectAnimator. <br /><br />"
"android.animation.PropertyValuesHolder.ofObject (Property<?, V> property, TypeConverter< PointF, V> converter, Path path) "," Constructs and returns a PropertyValuesHolder with a given property and a Path along which the values should be animated. <br /><br />"
"android.animation.PropertyValuesHolder.ofMultiFloat (String propertyName, Path path) "," Constructs and returns a PropertyValuesHolder with a given property name to use as a multi-float setter. <br /><br />"
"android.animation.PropertyValuesHolder.ofKeyframe (Property property, Keyframe... values) "," Constructs and returns a PropertyValuesHolder object with the specified property and set of values. <br /><br />"
"android.animation.PropertyValuesHolder.setFloatValues (float... values) "," Set the animated values for this object to this set of floats. <br /><br />"
"android.animation.PropertyValuesHolder.setObjectValues (Object... values) "," Set the animated values for this object to this set of Objects. <br /><br />"
"android.animation.PropertyValuesHolder.ofFloat (String propertyName, float... values) "," Constructs and returns a PropertyValuesHolder with a given property name and set of float values. <br /><br />"
"android.animation.PropertyValuesHolder.ofMultiInt (String propertyName, Path path) "," Constructs and returns a PropertyValuesHolder with a given property name to use as a multi-int setter. <br /><br />"
"android.animation.PropertyValuesHolder.ofFloat (Property<?,  Float> property, float... values) "," Constructs and returns a PropertyValuesHolder with a given property and set of float values. <br /><br />"
"android.animation.PropertyValuesHolder.ofMultiFloat (String propertyName, float[][] values) "," Constructs and returns a PropertyValuesHolder with a given property name and set of float[] values. <br /><br />"
"android.animation.PropertyValuesHolder.ofObject (String propertyName, TypeConverter< PointF, ?> converter, Path path) "," Constructs and returns a PropertyValuesHolder with a given property name and a Path along which the values should be animated. <br /><br />"
"android.animation.PropertyValuesHolder.setEvaluator (TypeEvaluator evaluator) "," The TypeEvaluator will be automatically determined based on the type of values supplied to PropertyValuesHolder. <br /><br />"
"android.animation.PropertyValuesHolder.setConverter (TypeConverter converter) "," Sets the converter to convert from the values type to the setter's parameter type. <br /><br />"
"android.animation.PropertyValuesHolder.ofObject (Property<?, V> property, TypeConverter<T, V> converter, TypeEvaluator<T> evaluator, T... values) "," Constructs and returns a PropertyValuesHolder with a given property and set of Object values. <br /><br />"
"android.animation.PropertyValuesHolder.ofInt (String propertyName, int... values) "," Constructs and returns a PropertyValuesHolder with a given property name and set of int values. <br /><br />"
"android.animation.PropertyValuesHolder.setPropertyName (String propertyName) "," Sets the name of the property that will be animated. <br /><br />"
"android.animation.PropertyValuesHolder.setProperty (Property property) "," Sets the property that will be animated. <br /><br />"
"android.animation.PropertyValuesHolder.ofMultiInt (String propertyName, int[][] values) "," Constructs and returns a PropertyValuesHolder with a given property name and set of int[] values. <br /><br />"
"android.animation.PropertyValuesHolder.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.animation.PropertyValuesHolder.getPropertyName () "," Gets the name of the property that will be animated. <br /><br />"
"android.animation.PropertyValuesHolder.ofObject (Property property, TypeEvaluator<V> evaluator, V... values) "," Constructs and returns a PropertyValuesHolder with a given property and set of Object values. <br /><br />"
"android.animation.PropertyValuesHolder.ofMultiFloat (String propertyName, TypeConverter<V, float[]> converter, TypeEvaluator<V> evaluator, V... values) "," Constructs and returns a PropertyValuesHolder with a given property and set of Object values for use with ObjectAnimator multi-value setters. <br /><br />"
"android.animation.PropertyValuesHolder.ofInt (Property<?,  Integer> property, int... values) "," Constructs and returns a PropertyValuesHolder with a given property and set of int values. <br /><br />"
"android.animation.RectEvaluator.evaluate (float fraction, Rect startValue, Rect endValue) "," This function returns the result of linearly interpolating the start and end Rect values, with fraction representing the proportion between the start and end values. <br /><br />"
"android.animation.StateListAnimator.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.animation.StateListAnimator.addState (int[] specs, Animator animator) "," Associates the given animator with the provided drawable state specs so that it will be run when the View's drawable state matches the specs. <br /><br />"
"android.animation.StateListAnimator.jumpToCurrentState () "," If there is an animation running for a recent state change, ends it. <br /><br />"
"android.animation.TimeAnimator.setCurrentPlayTime (long playTime) "," Sets the position of the animation to the specified point in time. <br /><br />"
"android.animation.TimeAnimator.start () "," Starts this animation. <br /><br />"
"android.animation.TimeAnimator.setTimeListener (TimeAnimator.TimeListener listener) "," Sets a listener that is sent update events throughout the life of an animation. <br /><br />"
"android.animation.TimeAnimator.TimeListener.onTimeUpdate (TimeAnimator animation, long totalTime, long deltaTime) "," Notifies listeners of the occurrence of another frame of the animation, along with information about the elapsed time. <br /><br />"
"android.animation.TimeInterpolator.getInterpolation (float input) "," Maps a value representing the elapsed fraction of an animation to a value that represents the interpolated fraction. <br /><br />"
"android.animation.TypeConverter<T, V>.convert (T value) "," Converts a value from one type to another. <br /><br />"
"android.animation.TypeEvaluator<T>.evaluate (float fraction, T startValue, T endValue) "," This function returns the result of linearly interpolating the start and end values, with fraction representing the proportion between the start and end values. <br /><br />"
"android.animation.ValueAnimator.AnimatorUpdateListener.onAnimationUpdate (ValueAnimator animation) "," Notifies the occurrence of another frame of the animation. <br /><br />"
"android.animation.ValueAnimator.ofFloat (float... values) "," Constructs and returns a ValueAnimator that animates between float values. <br /><br />"
"android.animation.ValueAnimator.setDuration (long duration) "," Sets the length of the animation. <br /><br />"
"android.animation.ValueAnimator.getRepeatCount () "," Defines how many times the animation should repeat. <br /><br />"
"android.animation.ValueAnimator.reverse () "," Plays the ValueAnimator in reverse. <br /><br />"
"android.animation.ValueAnimator.setFrameDelay (long frameDelay) "," The amount of time, in milliseconds, between each frame of the animation. <br /><br />"
"android.animation.ValueAnimator.setCurrentFraction (float fraction) "," Sets the position of the animation to the specified fraction. <br /><br />"
"android.animation.ValueAnimator.getFrameDelay () "," The amount of time, in milliseconds, between each frame of the animation. <br /><br />"
"android.animation.ValueAnimator.setRepeatCount (int value) "," Sets how many times the animation should be repeated. <br /><br />"
"android.animation.ValueAnimator.setIntValues (int... values) "," Sets int values that will be animated between. <br /><br />"
"android.animation.ValueAnimator.ofInt (int... values) "," Constructs and returns a ValueAnimator that animates between int values. <br /><br />"
"android.animation.ValueAnimator.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.animation.ValueAnimator.setEvaluator (TypeEvaluator value) "," The type evaluator to be used when calculating the animated values of this animation. <br /><br />"
"android.animation.ValueAnimator.setCurrentPlayTime (long playTime) "," Sets the position of the animation to the specified point in time. <br /><br />"
"android.animation.ValueAnimator.setStartDelay (long startDelay)   The amount of time, in milliseconds, to delay starting the animation after start () "," The amount of time, in milliseconds, to delay starting the animation after start() is called. <br /><br />"
"android.animation.ValueAnimator.resume () "," Resumes a paused animation, causing the animator to pick up where it left off when it was paused. <br /><br />"
"android.animation.ValueAnimator.isRunning ()   Returns whether this Animator is currently running  (having been started and gone past any initial startDelay period and not yet ended) "," Returns whether this Animator is currently running (having been started and gone past any initial startDelay period and not yet ended). <br /><br />"
"android.animation.ValueAnimator.setInterpolator (TimeInterpolator value) "," The time interpolator used in calculating the elapsed fraction of this animation. <br /><br />"
"android.animation.ValueAnimator.setFloatValues (float... values) "," Sets float values that will be animated between. <br /><br />"
"android.animation.ValueAnimator.cancel () "," Cancels the animation. <br /><br />"
"android.animation.ValueAnimator.setObjectValues (Object... values) "," Sets the values to animate between for this animation. <br /><br />"
"android.animation.ValueAnimator.getAnimatedValue () "," The most recent value calculated by this ValueAnimator when there is just one property being animated. <br /><br />"
"android.animation.ValueAnimator.setValues (PropertyValuesHolder... values) "," Sets the values, per property, being animated between. <br /><br />"
"android.animation.ValueAnimator.getDuration () "," Gets the length of the animation. <br /><br />"
"android.animation.ValueAnimator.isStarted () "," Returns whether this Animator has been started and not yet ended. <br /><br />"
"android.animation.ValueAnimator.ofObject (TypeEvaluator evaluator, Object... values) "," Constructs and returns a ValueAnimator that animates between Object values. <br /><br />"
"android.animation.ValueAnimator.getRepeatMode () "," Defines what this animation should do when it reaches the end. <br /><br />"
"android.animation.ValueAnimator.end () "," Ends the animation. <br /><br />"
"android.animation.ValueAnimator.ofArgb (int... values) "," Constructs and returns a ValueAnimator that animates between color values. <br /><br />"
"android.animation.ValueAnimator.start () "," Starts this animation. <br /><br />"
"android.animation.ValueAnimator.getValues () "," Returns the values that this ValueAnimator animates between. <br /><br />"
"android.animation.ValueAnimator.getInterpolator () "," Returns the timing interpolator that this ValueAnimator uses. <br /><br />"
"android.animation.ValueAnimator.getAnimatedFraction () "," Returns the current animation fraction, which is the elapsed/interpolated fraction used in the most recent frame update on the animation. <br /><br />"
"android.animation.ValueAnimator.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.animation.ValueAnimator.getCurrentPlayTime () "," Gets the current position of the animation in time, which is equal to the current time minus the time that the animation started. <br /><br />"
"android.animation.ValueAnimator.setRepeatMode (int value) "," Defines what this animation should do when it reaches the end. <br /><br />"
"android.animation.ValueAnimator.getAnimatedValue (String propertyName) "," The most recent value calculated by this ValueAnimator for propertyName. <br /><br />"
"android.animation.ValueAnimator.addUpdateListener (ValueAnimator.AnimatorUpdateListener listener) "," Adds a listener to the set of listeners that are sent update events through the life of an animation. <br /><br />"
"android.animation.ValueAnimator.ofPropertyValuesHolder (PropertyValuesHolder... values) "," Constructs and returns a ValueAnimator that animates between the values specified in the PropertyValuesHolder objects. <br /><br />"
"android.animation.ValueAnimator.removeUpdateListener (ValueAnimator.AnimatorUpdateListener listener) "," Removes a listener from the set listening to frame updates for this animation. <br /><br />"
"android.animation.ValueAnimator.getStartDelay ()   The amount of time, in milliseconds, to delay starting the animation after start () "," The amount of time, in milliseconds, to delay starting the animation after start() is called. <br /><br />"
"android.animation.ValueAnimator.pause () "," Pauses a running animation. <br /><br />"
"android.animation.ValueAnimator.removeAllUpdateListeners () "," Removes all listeners from the set listening to frame updates for this animation. <br /><br />"
"android.app.ActionBar.setDisplayHomeAsUpEnabled (boolean showHomeAsUp) "," Set whether home should be displayed as an 'up' affordance. <br /><br />"
"android.app.ActionBar.setHomeAsUpIndicator (int resId) "," Set an alternate drawable to display next to the icon/logo/title when DISPLAY_HOME_AS_UP is enabled. <br /><br />"
"android.app.ActionBar.addTab (ActionBar.Tab tab) "," This method was deprecated in API level 21. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.app.ActionBar.setBackgroundDrawable (Drawable d) "," Set the ActionBar's background. <br /><br />"
"android.app.ActionBar.setIcon (Drawable icon) "," Set the icon to display in the 'home' section of the action bar. <br /><br />"
"android.app.ActionBar.setListNavigationCallbacks (SpinnerAdapter adapter, ActionBar.OnNavigationListener callback) "," This method was deprecated in API level 21. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.app.ActionBar.setHomeAsUpIndicator (Drawable indicator) "," Set an alternate drawable to display next to the icon/logo/title when DISPLAY_HOME_AS_UP is enabled. <br /><br />"
"android.app.ActionBar.setSubtitle (CharSequence subtitle) "," Set the action bar's subtitle. <br /><br />"
"android.app.ActionBar.setDisplayOptions (int options) "," Set display options. <br /><br />"
"android.app.ActionBar.setSelectedNavigationItem (int position) "," This method was deprecated in API level 21. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.app.ActionBar.isShowing () "," no description <br /><br />"
"android.app.ActionBar.getHeight () "," Retrieve the current height of the ActionBar. <br /><br />"
"android.app.ActionBar.getNavigationMode () "," This method was deprecated in API level 21. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.app.ActionBar.setLogo (int resId) "," Set the logo to display in the 'home' section of the action bar. <br /><br />"
"android.app.ActionBar.removeTab (ActionBar.Tab tab) "," This method was deprecated in API level 21. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.app.ActionBar.setIcon (int resId) "," Set the icon to display in the 'home' section of the action bar. <br /><br />"
"android.app.ActionBar.getTitle () "," Returns the current ActionBar title in standard mode. <br /><br />"
"android.app.ActionBar.setDisplayShowCustomEnabled (boolean showCustom) "," Set whether a custom view should be displayed, if set. <br /><br />"
"android.app.ActionBar.addOnMenuVisibilityListener (ActionBar.OnMenuVisibilityListener listener) "," Add a listener that will respond to menu visibility change events. <br /><br />"
"android.app.ActionBar.setCustomView (View view, ActionBar.LayoutParams layoutParams) "," Set the action bar into custom navigation mode, supplying a view for custom navigation. <br /><br />"
"android.app.ActionBar.getHideOffset () "," Return the current vertical offset of the action bar. <br /><br />"
"android.app.ActionBar.setHideOffset (int offset) "," Set the current hide offset of the action bar. <br /><br />"
"android.app.ActionBar.getTabCount () "," This method was deprecated in API level 21. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.app.ActionBar.setLogo (Drawable logo) "," Set the logo to display in the 'home' section of the action bar. <br /><br />"
"android.app.ActionBar.newTab () "," This method was deprecated in API level 21. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.app.ActionBar.setStackedBackgroundDrawable (Drawable d) "," Set the ActionBar's stacked background. <br /><br />"
"android.app.ActionBar.setHomeButtonEnabled (boolean enabled) "," Enable or disable the 'home' button in the corner of the action bar. <br /><br />"
"android.app.ActionBar.setHomeActionContentDescription (CharSequence description) "," Set an alternate description for the Home/Up action, when enabled. <br /><br />"
"android.app.ActionBar.removeOnMenuVisibilityListener (ActionBar.OnMenuVisibilityListener listener) "," Remove a menu visibility listener. <br /><br />"
"android.app.ActionBar.setHideOnContentScrollEnabled (boolean hideOnContentScroll) "," Enable hiding the action bar on content scroll. <br /><br />"
"android.app.ActionBar.addTab (ActionBar.Tab tab, int position) "," This method was deprecated in API level 21. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.app.ActionBar.getNavigationItemCount () "," This method was deprecated in API level 21. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.app.ActionBar.removeTabAt (int position) "," This method was deprecated in API level 21. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.app.ActionBar.selectTab (ActionBar.Tab tab) "," This method was deprecated in API level 21. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.app.ActionBar.addTab (ActionBar.Tab tab, int position, boolean setSelected) "," This method was deprecated in API level 21. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.app.ActionBar.setNavigationMode (int mode) "," This method was deprecated in API level 21. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.app.ActionBar.setDisplayOptions (int options, int mask) "," Set selected display options. <br /><br />"
"android.app.ActionBar.setSubtitle (int resId) "," Set the action bar's subtitle. <br /><br />"
"android.app.ActionBar.setElevation (float elevation) "," Set the Z-axis elevation of the action bar in pixels. <br /><br />"
"android.app.ActionBar.getThemedContext () "," Returns a Context with an appropriate theme for creating views that will appear in the action bar. <br /><br />"
"android.app.ActionBar.setCustomView (View view) "," Set the action bar into custom navigation mode, supplying a view for custom navigation. <br /><br />"
"android.app.ActionBar.setTitle (int resId) "," Set the action bar's title. <br /><br />"
"android.app.ActionBar.getTabAt (int index) "," This method was deprecated in API level 21. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.app.ActionBar.getSubtitle () "," Returns the current ActionBar subtitle in standard mode. <br /><br />"
"android.app.ActionBar.hide () "," Hide the ActionBar if it is currently showing. <br /><br />"
"android.app.ActionBar.getSelectedNavigationIndex () "," This method was deprecated in API level 21. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.app.ActionBar.getCustomView () "," no description <br /><br />"
"android.app.ActionBar.getDisplayOptions () "," no description <br /><br />"
"android.app.ActionBar.setSplitBackgroundDrawable (Drawable d) "," Set the ActionBar's split background. <br /><br />"
"android.app.ActionBar.setHomeActionContentDescription (int resId) "," Set an alternate description for the Home/Up action, when enabled. <br /><br />"
"android.app.ActionBar.setDisplayShowHomeEnabled (boolean showHome) "," Set whether to include the application home affordance in the action bar. <br /><br />"
"android.app.ActionBar.setCustomView (int resId) "," Set the action bar into custom navigation mode, supplying a view for custom navigation. <br /><br />"
"android.app.ActionBar.setDisplayShowTitleEnabled (boolean showTitle) "," Set whether an activity title/subtitle should be displayed. <br /><br />"
"android.app.ActionBar.isHideOnContentScrollEnabled ()   Return whether the action bar is configured to scroll out of sight along with a "," Return whether the action bar is configured to scroll out of sight along with a nested scrolling child. <br /><br />"
"android.app.ActionBar.getElevation () "," Get the Z-axis elevation of the action bar in pixels. <br /><br />"
"android.app.ActionBar.getSelectedTab () "," This method was deprecated in API level 21. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.app.ActionBar.show () "," Show the ActionBar if it is not currently showing. <br /><br />"
"android.app.ActionBar.addTab (ActionBar.Tab tab, boolean setSelected) "," This method was deprecated in API level 21. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.app.ActionBar.setDisplayUseLogoEnabled (boolean useLogo) "," Set whether to display the activity logo rather than the activity icon. <br /><br />"
"android.app.ActionBar.removeAllTabs () "," This method was deprecated in API level 21. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.app.ActionBar.setTitle (CharSequence title) "," Set the action bar's title. <br /><br />"
"android.app.ActionBar.OnMenuVisibilityListener.onMenuVisibilityChanged (boolean isVisible) "," Called when an action bar menu is shown or hidden. <br /><br />"
"android.app.ActionBar.OnNavigationListener.onNavigationItemSelected (int itemPosition, long itemId) "," This method is called whenever a navigation item in your action bar is selected. <br /><br />"
"android.app.ActionBar.Tab.setTag (Object obj) "," Give this Tab an arbitrary object to hold for later use. <br /><br />"
"android.app.ActionBar.Tab.getIcon () "," Return the icon associated with this tab. <br /><br />"
"android.app.ActionBar.Tab.select () "," Select this tab. <br /><br />"
"android.app.ActionBar.Tab.getTag () "," no description <br /><br />"
"android.app.ActionBar.Tab.setText (CharSequence text) "," Set the text displayed on this tab. <br /><br />"
"android.app.ActionBar.Tab.setText (int resId) "," Set the text displayed on this tab. <br /><br />"
"android.app.ActionBar.Tab.setIcon (Drawable icon) "," Set the icon displayed on this tab. <br /><br />"
"android.app.ActionBar.Tab.getText () "," Return the text of this tab. <br /><br />"
"android.app.ActionBar.Tab.setCustomView (View view) "," Set a custom view to be used for this tab. <br /><br />"
"android.app.ActionBar.Tab.setTabListener (ActionBar.TabListener listener) "," Set the ActionBar.TabListener that will handle switching to and from this tab. <br /><br />"
"android.app.ActionBar.Tab.getCustomView () "," Retrieve a previously set custom view for this tab. <br /><br />"
"android.app.ActionBar.Tab.setContentDescription (int resId) "," Set a description of this tab's content for use in accessibility support. <br /><br />"
"android.app.ActionBar.Tab.setContentDescription (CharSequence contentDesc) "," Set a description of this tab's content for use in accessibility support. <br /><br />"
"android.app.ActionBar.Tab.setIcon (int resId) "," Set the icon displayed on this tab. <br /><br />"
"android.app.ActionBar.Tab.getPosition () "," Return the current position of this tab in the action bar. <br /><br />"
"android.app.ActionBar.Tab.setCustomView (int layoutResId) "," Set a custom view to be used for this tab. <br /><br />"
"android.app.ActionBar.Tab.getContentDescription () "," Gets a brief description of this tab's content for use in accessibility support. <br /><br />"
"android.app.ActionBar.TabListener.onTabUnselected (ActionBar.Tab tab, FragmentTransaction ft) "," Called when a tab exits the selected state. <br /><br />"
"android.app.ActionBar.TabListener.onTabReselected (ActionBar.Tab tab, FragmentTransaction ft) "," Called when a tab that is already selected is chosen again by the user. <br /><br />"
"android.app.ActionBar.TabListener.onTabSelected (ActionBar.Tab tab, FragmentTransaction ft) "," Called when a tab enters the selected state. <br /><br />"
"android.app.Activity.onRestoreInstanceState (Bundle savedInstanceState, PersistableBundle persistentState)   This is the same as onRestoreInstanceState (Bundle) "," This is the same as onRestoreInstanceState(Bundle) but is called for activities created with the attribute persistableMode set to persistAcrossReboots. <br /><br />"
"android.app.Activity.onMenuItemSelected (int featureId, MenuItem item)   Default implementation of onMenuItemSelected (int, MenuItem) "," Default implementation of onMenuItemSelected(int, MenuItem) for activities. <br /><br />"
"android.app.Activity.getIntent () "," Return the intent that started this activity. <br /><br />"
"android.app.Activity.startActivityForResult (Intent intent, int requestCode, Bundle options) "," Launch an activity for which you would like a result when it finished. <br /><br />"
"android.app.Activity.startPostponedEnterTransition ()   Begin postponed transitions after postponeEnterTransition () "," Begin postponed transitions after postponeEnterTransition() was called. <br /><br />"
"android.app.Activity.startIntentSenderFromChild (Activity child, IntentSender intent, int requestCode, Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags)   Same as calling startIntentSenderFromChild (Activity, IntentSender, int, Intent, int, int, int, Bundle) "," Same as calling startIntentSenderFromChild(Activity, IntentSender, int, Intent, int, int, int, Bundle) with no options. <br /><br />"
"android.app.Activity.getSystemService (String name) "," Return the handle to a system-level service by name. <br /><br />"
"android.app.Activity.startActivityFromChild (Activity child, Intent intent, int requestCode)   Same as calling startActivityFromChild (Activity, Intent, int, Bundle) "," Same as calling startActivityFromChild(Activity, Intent, int, Bundle) with no options. <br /><br />"
"android.app.Activity.setContentTransitionManager (TransitionManager tm) "," Set the TransitionManager to use for default transitions in this window. <br /><br />"
"android.app.Activity.onNavigateUp () "," This method is called whenever the user chooses to navigate Up within your application's activity hierarchy from the action bar. <br /><br />"
"android.app.Activity.postponeEnterTransition ()   Postpone the entering activity transition when Activity was started with makeSceneTransitionAnimation (Activity, android.util.Pair[]) "," Postpone the entering activity transition when Activity was started with makeSceneTransitionAnimation(Activity, android.util.Pair[]). <br /><br />"
"android.app.Activity.setProgress (int progress) "," Sets the progress for the progress bars in the title. <br /><br />"
"android.app.Activity.onSaveInstanceState (Bundle outState, PersistableBundle outPersistentState)   This is the same as onSaveInstanceState (Bundle) "," This is the same as onSaveInstanceState(Bundle) but is called for activities created with the attribute persistableMode set to persistAcrossReboots. <br /><br />"
"android.app.Activity.getPreferences (int mode) "," Retrieve a SharedPreferences object for accessing preferences that are private to this activity. <br /><br />"
"android.app.Activity.getCallingActivity () "," Return the name of the activity that invoked this activity. <br /><br />"
"android.app.Activity.getTaskId () "," Return the identifier of the task this activity is in. <br /><br />"
"android.app.Activity.getContentTransitionManager () "," Retrieve the TransitionManager responsible for default transitions in this window. <br /><br />"
"android.app.Activity.setProgressBarVisibility (boolean visible) "," Sets the visibility of the progress bar in the title. <br /><br />"
"android.app.Activity.getApplication () "," Return the application that owns this activity. <br /><br />"
"android.app.Activity.getCurrentFocus ()   Calls getCurrentFocus () "," Calls getCurrentFocus() on the Window of this Activity to return the currently focused view. <br /><br />"
"android.app.Activity.dispatchKeyShortcutEvent (KeyEvent event) "," Called to process a key shortcut event. <br /><br />"
"android.app.Activity.onCreate (Bundle savedInstanceState, PersistableBundle persistentState)   Same as onCreate (android.os.Bundle) "," Same as onCreate(android.os.Bundle) but called for those activities created with the attribute persistableMode set to persistAcrossReboots. <br /><br />"
"android.app.Activity.recreate () "," Cause this Activity to be recreated with a new instance. <br /><br />"
"android.app.Activity.onKeyLongPress (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyLongPress (): always returns false  (doesn't handle the event) "," Default implementation of KeyEvent.Callback.onKeyLongPress(): always returns false (doesn't handle the event). <br /><br />"
"android.app.Activity.onContextItemSelected (MenuItem item) "," This hook is called whenever an item in a context menu is selected. <br /><br />"
"android.app.Activity.onSearchRequested () "," This hook is called when the user signals the desire to start a search. <br /><br />"
"android.app.Activity.setFeatureDrawableUri (int featureId, Uri uri)   Convenience for calling setFeatureDrawableUri (int, Uri) "," Convenience for calling setFeatureDrawableUri(int, Uri). <br /><br />"
"android.app.Activity.takeKeyEvents (boolean get) "," Request that key events come to this activity. <br /><br />"
"android.app.Activity.closeOptionsMenu () "," Progammatically closes the options menu. <br /><br />"
"android.app.Activity.showDialog (int id) "," This method was deprecated in API level 13. Use the new DialogFragment class with FragmentManager instead; this is also available on older platforms through the Android compatibility package. <br /><br />"
"android.app.Activity.getActionBar () "," Retrieve a reference to this activity's ActionBar. <br /><br />"
"android.app.Activity.managedQuery (Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) "," This method was deprecated in API level 11. Use CursorLoader instead. <br /><br />"
"android.app.Activity.runOnUiThread (Runnable action) "," Runs the specified action on the UI thread. <br /><br />"
"android.app.Activity.getLastNonConfigurationInstance ()    This method was deprecated in API level 13. Use the new Fragment API setRetainInstance (boolean) "," This method was deprecated in API level 13. Use the new Fragment API setRetainInstance(boolean) instead; this is also available on older platforms through the Android compatibility package. <br /><br />"
"android.app.Activity.finishFromChild (Activity child)   This is called when a child activity of this one calls its finish () "," This is called when a child activity of this one calls its finish() method. <br /><br />"
"android.app.Activity.createPendingResult (int requestCode, Intent data, int flags)   Create a new PendingIntent object which you can hand to others for them to use to send result data back to your onActivityResult (int, int, Intent) "," Create a new PendingIntent object which you can hand to others for them to use to send result data back to your onActivityResult(int, int, Intent) callback. <br /><br />"
"android.app.Activity.stopLockTask () "," Allow the user to switch away from the current task. <br /><br />"
"android.app.Activity.onCreateContextMenu (ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) "," Called when a context menu for the view is about to be shown. <br /><br />"
"android.app.Activity.onKeyUp (int keyCode, KeyEvent event) "," Called when a key was released and not handled by any of the views inside of the activity. <br /><br />"
"android.app.Activity.onOptionsItemSelected (MenuItem item) "," This hook is called whenever an item in your options menu is selected. <br /><br />"
"android.app.Activity.finish () "," Call this when your activity is done and should be closed. <br /><br />"
"android.app.Activity.getReferrer () "," Return information about who launched this activity. <br /><br />"
"android.app.Activity.triggerSearch (String query, Bundle appSearchData)   Similar to startSearch (String, boolean, Bundle, boolean) "," Similar to startSearch(String, boolean, Bundle, boolean), but actually fires off the search query after invoking the search dialog. <br /><br />"
"android.app.Activity.startIntentSenderForResult (IntentSender intent, int requestCode, Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags, Bundle options)   Like startActivityForResult (Intent, int) "," Like startActivityForResult(Intent, int), but allowing you to use a IntentSender to describe the activity to be started. <br /><br />"
"android.app.Activity.registerForContextMenu (View view)   Registers a context menu to be shown for the given view  (multiple views can show the context menu) "," Registers a context menu to be shown for the given view (multiple views can show the context menu). <br /><br />"
"android.app.Activity.getMenuInflater () "," Returns a MenuInflater with this context. <br /><br />"
"android.app.Activity.onPrepareNavigateUpTaskStack (TaskStackBuilder builder) "," Prepare the synthetic task stack that will be generated during Up navigation from a different task. <br /><br />"
"android.app.Activity.setImmersive (boolean i) "," Adjust the current immersive mode setting. <br /><br />"
"android.app.Activity.onCreatePanelMenu (int featureId, Menu menu)   Default implementation of onCreatePanelMenu (int, Menu) "," Default implementation of onCreatePanelMenu(int, Menu) for activities. <br /><br />"
"android.app.Activity.onPostCreate (Bundle savedInstanceState, PersistableBundle persistentState)   This is the same as onPostCreate (Bundle) "," This is the same as onPostCreate(Bundle) but is called for activities created with the attribute persistableMode set to persistAcrossReboots. <br /><br />"
"android.app.Activity.stopManagingCursor (Cursor c) "," This method was deprecated in API level 11. Use the new CursorLoader class with LoaderManager instead; this is also available on older platforms through the Android compatibility package. <br /><br />"
"android.app.Activity.setEnterSharedElementCallback (SharedElementCallback callback)   When makeSceneTransitionAnimation (Activity, android.view.View, String) "," When makeSceneTransitionAnimation(Activity, android.view.View, String) was used to start an Activity, callback will be called to handle shared elements on the launched Activity. <br /><br />"
"android.app.Activity.startLockTask () "," Request to put this Activity in a mode where the user is locked to the current task. <br /><br />"
"android.app.Activity.removeDialog (int id) "," This method was deprecated in API level 13. Use the new DialogFragment class with FragmentManager instead; this is also available on older platforms through the Android compatibility package. <br /><br />"
"android.app.Activity.isFinishing ()   Check to see whether this activity is in the process of finishing, either because you called finish () "," Check to see whether this activity is in the process of finishing, either because you called finish() on it or someone else has requested that it finished. <br /><br />"
"android.app.Activity.getLocalClassName () "," Returns class name for this activity with the package prefix removed. <br /><br />"
"android.app.Activity.unregisterForContextMenu (View view) "," Prevents a context menu to be shown for the given view. <br /><br />"
"android.app.Activity.startActionMode (ActionMode.Callback callback) "," Start an action mode. <br /><br />"
"android.app.Activity.requestVisibleBehind (boolean visible)   Activities that want to remain visible behind a translucent activity above them must call this method anytime between the start of onResume () and the return from onPause () "," Activities that want to remain visible behind a translucent activity above them must call this method anytime between the start of onResume() and the return from onPause(). <br /><br />"
"android.app.Activity.overridePendingTransition (int enterAnim, int exitAnim)   Call immediately after one of the flavors of startActivity (Intent) or finish () "," Call immediately after one of the flavors of startActivity(Intent) or finish() to specify an explicit transition animation to perform next. <br /><br />"
"android.app.Activity.onProvideAssistData (Bundle data) "," This is called when the user is requesting an assist, to build a full ACTION_ASSIST Intent with all of the context of the current application. <br /><br />"
"android.app.Activity.onKeyDown (int keyCode, KeyEvent event) "," Called when a key was pressed down and not handled by any of the views inside of the activity. <br /><br />"
"android.app.Activity.setProgressBarIndeterminate (boolean indeterminate)   Sets whether the horizontal progress bar in the title should be indeterminate  (the circular is always indeterminate) "," Sets whether the horizontal progress bar in the title should be indeterminate (the circular is always indeterminate). <br /><br />"
"android.app.Activity.moveTaskToBack (boolean nonRoot) "," Move the task containing this activity to the back of the activity stack. <br /><br />"
"android.app.Activity.onContextMenuClosed (Menu menu)   This hook is called whenever the context menu is being closed  (either by the user canceling the menu with the back/menu button, or when an item is selected) "," This hook is called whenever the context menu is being closed (either by the user canceling the menu with the back/menu button, or when an item is selected). <br /><br />"
"android.app.Activity.reportFullyDrawn ()   Report to the system that your app is now fully drawn, purely for diagnostic purposes  (calling it does not impact the visible behavior of the activity) "," Report to the system that your app is now fully drawn, purely for diagnostic purposes (calling it does not impact the visible behavior of the activity). <br /><br />"
"android.app.Activity.onKeyMultiple (int keyCode, int repeatCount, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyMultiple (): always returns false  (doesn't handle the event) "," Default implementation of KeyEvent.Callback.onKeyMultiple(): always returns false (doesn't handle the event). <br /><br />"
"android.app.Activity.onAttachFragment (Fragment fragment)   Called when a Fragment is being attached to this activity, immediately after the call to its Fragment.onAttach () method and before Fragment.onCreate () "," Called when a Fragment is being attached to this activity, immediately after the call to its Fragment.onAttach() method and before Fragment.onCreate(). <br /><br />"
"android.app.Activity.setVisible (boolean visible) "," Control whether this activity's main window is visible. <br /><br />"
"android.app.Activity.getLoaderManager () "," Return the LoaderManager for this activity, creating it if needed. <br /><br />"
"android.app.Activity.setVolumeControlStream (int streamType) "," Suggests an audio stream whose volume should be changed by the hardware volume controls. <br /><br />"
"android.app.Activity.setTitleColor (int textColor) "," This method was deprecated in API level 21. Use action bar styles instead. <br /><br />"
"android.app.Activity.onNavigateUpFromChild (Activity child) "," This is called when a child activity of this one attempts to navigate up. <br /><br />"
"android.app.Activity.dispatchKeyEvent (KeyEvent event) "," Called to process key events. <br /><br />"
"android.app.Activity.invalidateOptionsMenu () "," Declare that the options menu has changed, so should be recreated. <br /><br />"
"android.app.Activity.setTitle (int titleId) "," Change the title associated with this activity. <br /><br />"
"android.app.Activity.openOptionsMenu () "," Programmatically opens the options menu. <br /><br />"
"android.app.Activity.setExitSharedElementCallback (SharedElementCallback callback)   When makeSceneTransitionAnimation (Activity, android.view.View, String) "," When makeSceneTransitionAnimation(Activity, android.view.View, String) was used to start an Activity, callback will be called to handle shared elements on the launching Activity. <br /><br />"
"android.app.Activity.onCreateNavigateUpTaskStack (TaskStackBuilder builder) "," Define the synthetic task stack that will be generated during Up navigation from a different task. <br /><br />"
"android.app.Activity.onCreateView (View parent, String name, Context context, AttributeSet attrs)   Standard implementation of onCreateView (View, String, Context, AttributeSet) used when inflating with the LayoutInflater returned by getSystemService (String) "," Standard implementation of onCreateView(View, String, Context, AttributeSet) used when inflating with the LayoutInflater returned by getSystemService(String). <br /><br />"
"android.app.Activity.setFeatureDrawable (int featureId, Drawable drawable)   Convenience for calling setFeatureDrawable (int, Drawable) "," Convenience for calling setFeatureDrawable(int, Drawable). <br /><br />"
"android.app.Activity.startIntentSenderFromChild (Activity child, IntentSender intent, int requestCode, Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags, Bundle options)   Like startActivityFromChild (Activity, Intent, int), but taking a IntentSender; see startIntentSenderForResult (IntentSender, int, Intent, int, int, int) "," Like startActivityFromChild(Activity, Intent, int), but taking a IntentSender; see startIntentSenderForResult(IntentSender, int, Intent, int, int, int) for more information. <br /><br />"
"android.app.Activity.startActivityIfNeeded (Intent intent, int requestCode)   Same as calling startActivityIfNeeded (Intent, int, Bundle) "," Same as calling startActivityIfNeeded(Intent, int, Bundle) with no options. <br /><br />"
"android.app.Activity.isChild () "," Is this activity embedded inside of another activity? <br /><br />"
"android.app.Activity.startActivity (Intent intent)   Same as startActivity (Intent, Bundle) "," Same as startActivity(Intent, Bundle) with no options specified. <br /><br />"
"android.app.Activity.onPreparePanel (int featureId, View view, Menu menu)   Default implementation of onPreparePanel (int, View, Menu) "," Default implementation of onPreparePanel(int, View, Menu) for activities. <br /><br />"
"android.app.Activity.onDetachedFromWindow () "," Called when the main window associated with the activity has been detached from the window manager. <br /><br />"
"android.app.Activity.setContentView (int layoutResID) "," Set the activity content from a layout resource. <br /><br />"
"android.app.Activity.onWindowStartingActionMode (ActionMode.Callback callback) "," Give the Activity a chance to control the UI for an action mode requested by the system. <br /><br />"
"android.app.Activity.startActivityIfNeeded (Intent intent, int requestCode, Bundle options) "," A special variation to launch an activity only if a new activity instance is needed to handle the given Intent. <br /><br />"
"android.app.Activity.setContentView (View view, ViewGroup.LayoutParams params) "," Set the activity content to an explicit view. <br /><br />"
"android.app.Activity.onWindowAttributesChanged (WindowManager.LayoutParams params) "," This is called whenever the current window attributes change. <br /><br />"
"android.app.Activity.dispatchTrackballEvent (MotionEvent ev) "," Called to process trackball events. <br /><br />"
"android.app.Activity.findViewById (int id)   Finds a view that was identified by the id attribute from the XML that was processed in onCreate (Bundle) "," Finds a view that was identified by the id attribute from the XML that was processed in onCreate(Bundle). <br /><br />"
"android.app.Activity.onCreateDescription () "," Generate a new description for this activity. <br /><br />"
"android.app.Activity.startNextMatchingActivity (Intent intent, Bundle options) "," Special version of starting an activity, for use when you are replacing other activity components. <br /><br />"
"android.app.Activity.startActivities (Intent[] intents, Bundle options) "," Launch a new activity. <br /><br />"
"android.app.Activity.startActivityFromFragment (Fragment fragment, Intent intent, int requestCode)   Same as calling startActivityFromFragment (Fragment, Intent, int, Bundle) "," Same as calling startActivityFromFragment(Fragment, Intent, int, Bundle) with no options. <br /><br />"
"android.app.Activity.startIntentSenderForResult (IntentSender intent, int requestCode, Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags)   Same as calling startIntentSenderForResult (IntentSender, int, Intent, int, int, int, Bundle) "," Same as calling startIntentSenderForResult(IntentSender, int, Intent, int, int, int, Bundle) with no options. <br /><br />"
"android.app.Activity.getVolumeControlStream () "," Gets the suggested audio stream whose volume should be changed by the hardware volume controls. <br /><br />"
"android.app.Activity.dump (String prefix, FileDescriptor fd, PrintWriter writer, String[] args) "," Print the Activity's state into the given stream. <br /><br />"
"android.app.Activity.finishActivityFromChild (Activity child, int requestCode)   This is called when a child activity of this one calls its finishActivity () "," This is called when a child activity of this one calls its finishActivity(). <br /><br />"
"android.app.Activity.startActivities (Intent[] intents)   Same as startActivities (Intent[], Bundle) "," Same as startActivities(Intent[], Bundle) with no options specified. <br /><br />"
"android.app.Activity.getComponentName () "," Returns complete component name of this activity. <br /><br />"
"android.app.Activity.onBackPressed () "," Called when the activity has detected the user's press of the back key. <br /><br />"
"android.app.Activity.shouldUpRecreateTask (Intent targetIntent) "," Returns true if the app should recreate the task when navigating 'up' from this activity by using targetIntent. <br /><br />"
"android.app.Activity.onActionModeFinished (ActionMode mode) "," Notifies the activity that an action mode has finished. <br /><br />"
"android.app.Activity.finishAndRemoveTask () "," Call this when your activity is done and should be closed and the task should be completely removed as a part of finishing the Activity. <br /><br />"
"android.app.Activity.getFragmentManager () "," Return the FragmentManager for interacting with fragments associated with this activity. <br /><br />"
"android.app.Activity.finishAfterTransition () "," Reverses the Activity Scene entry Transition and triggers the calling Activity to reverse its exit Transition. <br /><br />"
"android.app.Activity.startActivityFromChild (Activity child, Intent intent, int requestCode, Bundle options)   This is called when a child activity of this one calls its startActivity (Intent) or startActivityForResult (Intent, int) "," This is called when a child activity of this one calls its startActivity(Intent) or startActivityForResult(Intent, int) method. <br /><br />"
"android.app.Activity.setFinishOnTouchOutside (boolean finish) "," Sets whether this activity is finished when touched outside its window's bounds. <br /><br />"
"android.app.Activity.isImmersive () "," Bit indicating that this activity is 'immersive' and should not be interrupted by notifications if possible. <br /><br />"
"android.app.Activity.openContextMenu (View view) "," Programmatically opens the context menu for a particular view. <br /><br />"
"android.app.Activity.onEnterAnimationComplete () "," Activities cannot draw during the period that their windows are animating in. <br /><br />"
"android.app.Activity.getMediaController () "," Gets the controller which should be receiving media key and volume events while this activity is in the foreground. <br /><br />"
"android.app.Activity.dismissDialog (int id) "," This method was deprecated in API level 13. Use the new DialogFragment class with FragmentManager instead; this is also available on older platforms through the Android compatibility package. <br /><br />"
"android.app.Activity.onCreateView (String name, Context context, AttributeSet attrs)   Standard implementation of onCreateView (String, Context, AttributeSet) used when inflating with the LayoutInflater returned by getSystemService (String) "," Standard implementation of onCreateView(String, Context, AttributeSet) used when inflating with the LayoutInflater returned by getSystemService(String). <br /><br />"
"android.app.Activity.startIntentSender (IntentSender intent, Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags)   Same as calling startIntentSender (IntentSender, Intent, int, int, int, Bundle) "," Same as calling startIntentSender(IntentSender, Intent, int, int, int, Bundle) with no options. <br /><br />"
"android.app.Activity.onAttachedToWindow () "," Called when the main window associated with the activity has been attached to the window manager. <br /><br />"
"android.app.Activity.onCreatePanelView (int featureId)   Default implementation of onCreatePanelView (int) "," Default implementation of onCreatePanelView(int) for activities. <br /><br />"
"android.app.Activity.navigateUpTo (Intent upIntent) "," Navigate from this activity to the activity specified by upIntent, finishing this activity in the process. <br /><br />"
"android.app.Activity.setActionBar (Toolbar toolbar) "," Set a Toolbar to act as the ActionBar for this Activity window. <br /><br />"
"android.app.Activity.getTitle () "," no description <br /><br />"
"android.app.Activity.getParentActivityIntent () "," Obtain an Intent that will launch an explicit target activity specified by this activity's logical parent. <br /><br />"
"android.app.Activity.dispatchGenericMotionEvent (MotionEvent ev) "," Called to process generic motion events. <br /><br />"
"android.app.Activity.isDestroyed ()   Returns true if the final onDestroy () "," Returns true if the final onDestroy() call has been made on the Activity, so this instance is now dead. <br /><br />"
"android.app.Activity.startActivityFromFragment (Fragment fragment, Intent intent, int requestCode, Bundle options)   This is called when a Fragment in this activity calls its startActivity (Intent) or startActivityForResult (Intent, int) "," This is called when a Fragment in this activity calls its startActivity(Intent) or startActivityForResult(Intent, int) method. <br /><br />"
"android.app.Activity.setSecondaryProgress (int secondaryProgress) "," Sets the secondary progress for the progress bar in the title. <br /><br />"
"android.app.Activity.getLayoutInflater ()   Convenience for calling getLayoutInflater () "," Convenience for calling getLayoutInflater(). <br /><br />"
"android.app.Activity.getTitleColor () "," no description <br /><br />"
"android.app.Activity.setDefaultKeyMode (int mode) "," Select the default key handling for this activity. <br /><br />"
"android.app.Activity.isChangingConfigurations () "," Check to see whether this activity is in the process of being destroyed in order to be recreated with a new configuration. <br /><br />"
"android.app.Activity.onActionModeStarted (ActionMode mode) "," Notifies the Activity that an action mode has been started. <br /><br />"
"android.app.Activity.onCreateThumbnail (Bitmap outBitmap, Canvas canvas) "," Generate a new thumbnail for this activity. <br /><br />"
"android.app.Activity.onTrackballEvent (MotionEvent event) "," Called when the trackball was moved and not handled by any of the views inside of the activity. <br /><br />"
"android.app.Activity.onTrimMemory (int level) "," Called when the operating system has determined that it is a good time for a process to trim unneeded memory from its process. <br /><br />"
"android.app.Activity.setTaskDescription (ActivityManager.TaskDescription taskDescription) "," Sets information describing the task with this activity for presentation inside the Recents System UI. <br /><br />"
"android.app.Activity.onLowMemory () "," This is called when the overall system is running low on memory, and actively running processes should trim their memory usage. <br /><br />"
"android.app.Activity.setResult (int resultCode, Intent data) "," Call this to set the result that your activity will return to its caller. <br /><br />"
"android.app.Activity.getWindowManager () "," Retrieve the window manager for showing custom windows. <br /><br />"
"android.app.Activity.onGenericMotionEvent (MotionEvent event) "," Called when a generic motion event was not handled by any of the views inside of the activity. <br /><br />"
"android.app.Activity.getWindow () "," Retrieve the current Window for the activity. <br /><br />"
"android.app.Activity.startIntentSender (IntentSender intent, Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags, Bundle options)   Like startActivity (Intent, Bundle), but taking a IntentSender to start; see startIntentSenderForResult (IntentSender, int, Intent, int, int, int, Bundle) "," Like startActivity(Intent, Bundle), but taking a IntentSender to start; see startIntentSenderForResult(IntentSender, int, Intent, int, int, int, Bundle) for more information. <br /><br />"
"android.app.Activity.onOptionsMenuClosed (Menu menu)   This hook is called whenever the options menu is being closed  (either by the user canceling the menu with the back/menu button, or when an item is selected) "," This hook is called whenever the options menu is being closed (either by the user canceling the menu with the back/menu button, or when an item is selected). <br /><br />"
"android.app.Activity.hasWindowFocus () "," Returns true if this activity's main window currently has window focus. <br /><br />"
"android.app.Activity.setMediaController (MediaController controller) "," Sets a MediaController to send media keys and volume changes to. <br /><br />"
"android.app.Activity.requestWindowFeature (int featureId) "," Enable extended window features. <br /><br />"
"android.app.Activity.startManagingCursor (Cursor c) "," This method was deprecated in API level 11. Use the new CursorLoader class with LoaderManager instead; this is also available on older platforms through the Android compatibility package. <br /><br />"
"android.app.Activity.dispatchPopulateAccessibilityEvent (AccessibilityEvent event) "," Called to process population of AccessibilityEvents. <br /><br />"
"android.app.Activity.getRequestedOrientation () "," Return the current requested orientation of the activity. <br /><br />"
"android.app.Activity.onContentChanged ()   This hook is called whenever the content view of the screen changes  (due to a call to Window.setContentView or Window.addContentView) "," This hook is called whenever the content view of the screen changes (due to a call to Window.setContentView or Window.addContentView). <br /><br />"
"android.app.Activity.onActivityReenter (int resultCode, Intent data) "," Called when an activity you launched with an activity transition exposes this Activity through a returning activity transition, giving you the resultCode and any additional data from it. <br /><br />"
"android.app.Activity.onConfigurationChanged (Configuration newConfig) "," Called by the system when the device configuration changes while your activity is running. <br /><br />"
"android.app.Activity.onCreateOptionsMenu (Menu menu) "," Initialize the contents of the Activity's standard options menu. <br /><br />"
"android.app.Activity.setProgressBarIndeterminateVisibility (boolean visible) "," Sets the visibility of the indeterminate progress bar in the title. <br /><br />"
"android.app.Activity.setFeatureDrawableAlpha (int featureId, int alpha)   Convenience for calling setFeatureDrawableAlpha (int, int) "," Convenience for calling setFeatureDrawableAlpha(int, int). <br /><br />"
"android.app.Activity.onWindowFocusChanged (boolean hasFocus) "," Called when the current Window of the activity gains or loses focus. <br /><br />"
"android.app.Activity.setResult (int resultCode) "," Call this to set the result that your activity will return to its caller. <br /><br />"
"android.app.Activity.setRequestedOrientation (int requestedOrientation) "," Change the desired orientation of this activity. <br /><br />"
"android.app.Activity.releaseInstance () "," Ask that the local app instance of this activity be released to free up its memory. <br /><br />"
"android.app.Activity.setIntent (Intent newIntent)   Change the intent returned by getIntent () "," Change the intent returned by getIntent(). <br /><br />"
"android.app.Activity.dispatchTouchEvent (MotionEvent ev) "," Called to process touch screen events. <br /><br />"
"android.app.Activity.onTouchEvent (MotionEvent event) "," Called when a touch screen event was not handled by any of the views under it. <br /><br />"
"android.app.Activity.closeContextMenu () "," Programmatically closes the most recently opened context menu, if showing. <br /><br />"
"android.app.Activity.getContentScene () "," Retrieve the Scene representing this window's current content. <br /><br />"
"android.app.Activity.addContentView (View view, ViewGroup.LayoutParams params) "," Add an additional content view to the activity. <br /><br />"
"android.app.Activity.startSearch (String initialQuery, boolean selectInitialQuery, Bundle appSearchData, boolean globalSearch) "," This hook is called to launch the search UI. <br /><br />"
"android.app.Activity.finishActivity (int requestCode)   Force finish another activity that you had previously started with startActivityForResult (Intent, int) "," Force finish another activity that you had previously started with startActivityForResult(Intent, int). <br /><br />"
"android.app.Activity.onMenuOpened (int featureId, Menu menu) "," Called when a panel's menu is opened by the user. <br /><br />"
"android.app.Activity.showDialog (int id, Bundle args) "," This method was deprecated in API level 13. Use the new DialogFragment class with FragmentManager instead; this is also available on older platforms through the Android compatibility package. <br /><br />"
"android.app.Activity.getChangingConfigurations ()   If this activity is being destroyed because it can not handle a configuration parameter being changed  (and thus its onConfigurationChanged (Configuration) method is not being called) "," If this activity is being destroyed because it can not handle a configuration parameter being changed (and thus its onConfigurationChanged(Configuration) method is not being called), then you can use this method to discover the set of changes that have occurred while in the process of being destroyed. <br /><br />"
"android.app.Activity.startActivityForResult (Intent intent, int requestCode)   Same as calling startActivityForResult (Intent, int, Bundle) "," Same as calling startActivityForResult(Intent, int, Bundle) with no options. <br /><br />"
"android.app.Activity.setFeatureDrawableResource (int featureId, int resId)   Convenience for calling setFeatureDrawableResource (int, int) "," Convenience for calling setFeatureDrawableResource(int, int). <br /><br />"
"android.app.Activity.onRetainNonConfigurationInstance ()    This method was deprecated in API level 13. Use the new Fragment API setRetainInstance (boolean) "," This method was deprecated in API level 13. Use the new Fragment API setRetainInstance(boolean) instead; this is also available on older platforms through the Android compatibility package. <br /><br />"
"android.app.Activity.navigateUpToFromChild (Activity child, Intent upIntent)   This is called when a child activity of this one calls its navigateUpTo (Intent) "," This is called when a child activity of this one calls its navigateUpTo(Intent) method. <br /><br />"
"android.app.Activity.startActivity (Intent intent, Bundle options) "," Launch a new activity. <br /><br />"
"android.app.Activity.getCallingPackage () "," Return the name of the package that invoked this activity. <br /><br />"
"android.app.Activity.startNextMatchingActivity (Intent intent)   Same as calling startNextMatchingActivity (Intent, Bundle) "," Same as calling startNextMatchingActivity(Intent, Bundle) with no options. <br /><br />"
"android.app.Activity.setContentView (View view) "," Set the activity content to an explicit view. <br /><br />"
"android.app.Activity.onUserInteraction () "," Called whenever a key, touch, or trackball event is dispatched to the activity. <br /><br />"
"android.app.Activity.isTaskRoot () "," Return whether this activity is the root of a task. <br /><br />"
"android.app.Activity.onVisibleBehindCanceled () "," Called when a translucent activity over this activity is becoming opaque or another activity is being launched. <br /><br />"
"android.app.Activity.getParent () "," Return the parent activity if this view is an embedded child. <br /><br />"
"android.app.Activity.finishAffinity () "," Finish this activity as well as all activities immediately below it in the current task that have the same affinity. <br /><br />"
"android.app.Activity.onPrepareOptionsMenu (Menu menu) "," Prepare the Screen's standard options menu to be displayed. <br /><br />"
"android.app.Activity.setTitle (CharSequence title) "," Change the title associated with this activity. <br /><br />"
"android.app.Activity.onPanelClosed (int featureId, Menu menu)   Default implementation of onPanelClosed (int, Menu) "," Default implementation of onPanelClosed(int, Menu) for activities. <br /><br />"
"android.app.Activity.onKeyShortcut (int keyCode, KeyEvent event) "," Called when a key shortcut event is not handled by any of the views in the Activity. <br /><br />"
"android.app.ActivityGroup.getLocalActivityManager () "," no description <br /><br />"
"android.app.ActivityGroup.getCurrentActivity () "," no description <br /><br />"
"android.app.ActivityManager.AppTask.moveToFront () "," Bring this task to the foreground. <br /><br />"
"android.app.ActivityManager.AppTask.startActivity (Context context, Intent intent, Bundle options) "," Start an activity in this task. <br /><br />"
"android.app.ActivityManager.AppTask.finishAndRemoveTask () "," Finishes all activities in this task and removes it from the recent tasks list. <br /><br />"
"android.app.ActivityManager.AppTask.setExcludeFromRecents (boolean exclude) "," Modify the FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS flag in the root Intent of this AppTask. <br /><br />"
"android.app.ActivityManager.AppTask.getTaskInfo () "," Get the RecentTaskInfo associated with this task. <br /><br />"
"android.app.ActivityManager.getRunningTasks (int maxNum) "," This method was deprecated in API level 21. As of LOLLIPOP, this method is no longer available to third party applications: the introduction of document-centric recents means it can leak person information to the caller. For backwards compatibility, it will still retu rn a small subset of its data: at least the caller's own tasks, and possibly some other tasks such as home that are known to not be sensitive. <br /><br />"
"android.app.ActivityManager.getRunningServiceControlPanel (ComponentName service) "," Returns a PendingIntent you can start to show a control panel for the given running service. <br /><br />"
"android.app.ActivityManager.clearApplicationUserData () "," Permits an application to erase its own data from disk. <br /><br />"
"android.app.ActivityManager.getMemoryClass () "," Return the approximate per-application memory class of the current device. <br /><br />"
"android.app.ActivityManager.isInLockTaskMode () "," Return whether currently in lock task mode. <br /><br />"
"android.app.ActivityManager.getRunningServices (int maxNum) "," Return a list of the services that are currently running. <br /><br />"
"android.app.ActivityManager.getMemoryInfo (ActivityManager.MemoryInfo outInfo) "," Return general information about the memory state of the system. <br /><br />"
"android.app.ActivityManager.isUserAMonkey () "," Returns 'true' if the user interface is currently being messed with by a monkey. <br /><br />"
"android.app.ActivityManager.getAppTasks () "," Get the list of tasks associated with the calling application. <br /><br />"
"android.app.ActivityManager.getProcessesInErrorState () "," Returns a list of any processes that are currently in an error condition. <br /><br />"
"android.app.ActivityManager.getDeviceConfigurationInfo () "," Get the device configuration attributes. <br /><br />"
"android.app.ActivityManager.getAppTaskThumbnailSize ()   Return the current design dimensions for ActivityManager.AppTask thumbnails, for use with addAppTask (Activity, Intent, ActivityManager.TaskDescription, Bitmap) "," Return the current design dimensions for ActivityManager.AppTask thumbnails, for use with addAppTask(Activity, Intent, ActivityManager.TaskDescription, Bitmap). <br /><br />"
"android.app.ActivityManager.moveTaskToFront (int taskId, int flags, Bundle options) "," Ask that the task associated with a given task ID be moved to the front of the stack, so it is now visible to the user. <br /><br />"
"android.app.ActivityManager.restartPackage (String packageName)    This method was deprecated in API level 8. This is now just a wrapper for killBackgroundProcesses (String) "," This method was deprecated in API level 8. This is now just a wrapper for killBackgroundProcesses(String); the previous behavior here is no longer available to applications because it allows them to break other applications by removing their alarms, stopping their services, etc. <br /><br />"
"android.app.ActivityManager.getLauncherLargeIconSize () "," Get the preferred launcher icon size. <br /><br />"
"android.app.ActivityManager.getRecentTasks (int maxNum, int flags)    This method was deprecated in API level 21. As of LOLLIPOP, this method is no longer available to third party applications: the introduction of document-centric recents means it can leak personal information to the caller. For backwards compatibility, it will still return a small subset of its data: at least the caller's own tasks  (though see getAppTasks () for the correct supported way to retrieve that information) "," This method was deprecated in API level 21. As of LOLLIPOP, this method is no longer available to third party applications: the introduction of document-centric recents means it can leak personal information to the caller. For backwards compatibility, it will still return a small subset of its data: at least the caller's own tasks (though see getAppTasks() for the correct supported way to retrieve that information), and possibly some other tasks such as home that are known to not be sensitive. <br /><br />"
"android.app.ActivityManager.killBackgroundProcesses (String packageName) "," Have the system immediately kill all background processes associated with the given package. <br /><br />"
"android.app.ActivityManager.dumpPackageState (FileDescriptor fd, String packageName) "," Perform a system dump of various state associated with the given application package name. <br /><br />"
"android.app.ActivityManager.isRunningInTestHarness () "," Returns 'true' if device is running in a test harness. <br /><br />"
"android.app.ActivityManager.addAppTask (Activity activity, Intent intent, ActivityManager.TaskDescription description, Bitmap thumbnail) "," Add a new ActivityManager.AppTask for the calling application. <br /><br />"
"android.app.ActivityManager.isLowRamDevice () "," Returns true if this is a low-RAM device. <br /><br />"
"android.app.ActivityManager.moveTaskToFront (int taskId, int flags)   Equivalent to calling moveTaskToFront (int, int, Bundle) "," Equivalent to calling moveTaskToFront(int, int, Bundle) with a null options argument. <br /><br />"
"android.app.ActivityManager.getLauncherLargeIconDensity () "," Get the preferred density of icons for the launcher. <br /><br />"
"android.app.ActivityManager.getLargeMemoryClass () "," Return the approximate per-application memory class of the current device when an application is running with a large heap. <br /><br />"
"android.app.ActivityManager.getRunningAppProcesses () "," Returns a list of application processes that are running on the device. <br /><br />"
"android.app.ActivityManager.getMyMemoryState (ActivityManager.RunningAppProcessInfo outState) "," Return global memory state information for the calling process. <br /><br />"
"android.app.ActivityManager.getProcessMemoryInfo (int[] pids) "," Return information about the memory usage of one or more processes. <br /><br />"
"android.app.ActivityManager.MemoryInfo.readFromParcel (Parcel source) "," no description <br /><br />"
"android.app.ActivityManager.MemoryInfo.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.app.ActivityManager.MemoryInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.ActivityManager.ProcessErrorStateInfo.readFromParcel (Parcel source) "," no description <br /><br />"
"android.app.ActivityManager.ProcessErrorStateInfo.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.app.ActivityManager.ProcessErrorStateInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.ActivityManager.RecentTaskInfo.readFromParcel (Parcel source) "," no description <br /><br />"
"android.app.ActivityManager.RecentTaskInfo.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.app.ActivityManager.RecentTaskInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.ActivityManager.RunningAppProcessInfo.readFromParcel (Parcel source) "," no description <br /><br />"
"android.app.ActivityManager.RunningAppProcessInfo.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.app.ActivityManager.RunningAppProcessInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.ActivityManager.RunningServiceInfo.readFromParcel (Parcel source) "," no description <br /><br />"
"android.app.ActivityManager.RunningServiceInfo.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.app.ActivityManager.RunningServiceInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.ActivityManager.RunningTaskInfo.readFromParcel (Parcel source) "," no description <br /><br />"
"android.app.ActivityManager.RunningTaskInfo.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.app.ActivityManager.RunningTaskInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.ActivityManager.TaskDescription.readFromParcel (Parcel source) "," no description <br /><br />"
"android.app.ActivityManager.TaskDescription.getIcon () "," no description <br /><br />"
"android.app.ActivityManager.TaskDescription.getPrimaryColor () "," no description <br /><br />"
"android.app.ActivityManager.TaskDescription.getLabel () "," no description <br /><br />"
"android.app.ActivityManager.TaskDescription.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.app.ActivityManager.TaskDescription.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.ActivityManager.TaskDescription.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.app.ActivityOptions.toBundle ()   Returns the created options as a Bundle, which can be passed to Context.startActivity (Intent, Bundle) "," Returns the created options as a Bundle, which can be passed to Context.startActivity(Intent, Bundle) and related methods. <br /><br />"
"android.app.ActivityOptions.makeScaleUpAnimation (View source, int startX, int startY, int width, int height) "," Create an ActivityOptions specifying an animation where the new activity is scaled from a small originating area of the screen to its final full representation. <br /><br />"
"android.app.ActivityOptions.makeTaskLaunchBehind () "," If set along with Intent.FLAG_ACTIVITY_NEW_DOCUMENT then the task being launched will not be presented to the user but will instead be only available through the recents task list. <br /><br />"
"android.app.ActivityOptions.makeSceneTransitionAnimation (Activity activity, Pair...< View,  String> sharedElements) "," Create an ActivityOptions to transition between Activities using cross-Activity scene animations. <br /><br />"
"android.app.ActivityOptions.makeThumbnailScaleUpAnimation (View source, Bitmap thumbnail, int startX, int startY) "," Create an ActivityOptions specifying an animation where a thumbnail is scaled from a given position to the new activity window that is being started. <br /><br />"
"android.app.ActivityOptions.makeSceneTransitionAnimation (Activity activity, View sharedElement, String sharedElementName) "," Create an ActivityOptions to transition between Activities using cross-Activity scene animations. <br /><br />"
"android.app.ActivityOptions.update (ActivityOptions otherOptions) "," Update the current values in this ActivityOptions from those supplied in otherOptions. <br /><br />"
"android.app.ActivityOptions.makeCustomAnimation (Context context, int enterResId, int exitResId) "," Create an ActivityOptions specifying a custom animation to run when the activity is displayed. <br /><br />"
"android.app.admin.DeviceAdminInfo.loadLabel (PackageManager pm) "," Load the user-displayed label for this device admin. <br /><br />"
"android.app.admin.DeviceAdminInfo.getActivityInfo () "," Return the raw information about the receiver implementing this device admin. <br /><br />"
"android.app.admin.DeviceAdminInfo.getPackageName () "," Return the .apk package that implements this device admin. <br /><br />"
"android.app.admin.DeviceAdminInfo.getTagForPolicy (int policyIdent) "," Return the XML tag name for the given policy identifier. <br /><br />"
"android.app.admin.DeviceAdminInfo.dump (Printer pw, String prefix) "," no description <br /><br />"
"android.app.admin.DeviceAdminInfo.isVisible () "," Returns whether this device admin would like to be visible to the user, even when it is not enabled. <br /><br />"
"android.app.admin.DeviceAdminInfo.loadDescription (PackageManager pm) "," Load user-visible description associated with this device admin. <br /><br />"
"android.app.admin.DeviceAdminInfo.getReceiverName () "," Return the class name of the receiver component that implements this device admin. <br /><br />"
"android.app.admin.DeviceAdminInfo.getComponent () "," Return the component of the receiver that implements this device admin. <br /><br />"
"android.app.admin.DeviceAdminInfo.writeToParcel (Parcel dest, int flags) "," Used to package this object into a Parcel. <br /><br />"
"android.app.admin.DeviceAdminInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.admin.DeviceAdminInfo.usesPolicy (int policyIdent) "," Return true if the device admin has requested that it be able to use the given policy control. <br /><br />"
"android.app.admin.DeviceAdminInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.app.admin.DeviceAdminInfo.loadIcon (PackageManager pm) "," Load the user-displayed icon for this device admin. <br /><br />"
"android.app.admin.DeviceAdminReceiver.onPasswordChanged (Context context, Intent intent) "," Called after the user has changed their password, as a result of receiving ACTION_PASSWORD_CHANGED. <br /><br />"
"android.app.admin.DeviceAdminReceiver.onDisabled (Context context, Intent intent) "," Called prior to the administrator being disabled, as a result of receiving ACTION_DEVICE_ADMIN_DISABLED. <br /><br />"
"android.app.admin.DeviceAdminReceiver.getWho (Context context) "," Retrieve the ComponentName describing who this device administrator is, for use in DevicePolicyManager APIs that require the administrator to identify itself. <br /><br />"
"android.app.admin.DeviceAdminReceiver.onPasswordExpiring (Context context, Intent intent) "," Called periodically when the password is about to expire or has expired. <br /><br />"
"android.app.admin.DeviceAdminReceiver.onLockTaskModeExiting (Context context, Intent intent)   Called when a device is exiting lock task mode by a package authorized by isLockTaskPermitted (String) "," Called when a device is exiting lock task mode by a package authorized by isLockTaskPermitted(String) <br /><br />"
"android.app.admin.DeviceAdminReceiver.onReceive (Context context, Intent intent) "," Intercept standard device administrator broadcasts. <br /><br />"
"android.app.admin.DeviceAdminReceiver.onPasswordSucceeded (Context context, Intent intent) "," Called after the user has succeeded at entering their current password, as a result of receiving ACTION_PASSWORD_SUCCEEDED. <br /><br />"
"android.app.admin.DeviceAdminReceiver.onPasswordFailed (Context context, Intent intent) "," Called after the user has failed at entering their current password, as a result of receiving ACTION_PASSWORD_FAILED. <br /><br />"
"android.app.admin.DeviceAdminReceiver.onProfileProvisioningComplete (Context context, Intent intent) "," Called when provisioning of a managed profile or managed device has completed successfully. <br /><br />"
"android.app.admin.DeviceAdminReceiver.onDisableRequested (Context context, Intent intent) "," Called when the user has asked to disable the administrator, as a result of receiving ACTION_DEVICE_ADMIN_DISABLE_REQUESTED, giving you a chance to present a warning message to them. <br /><br />"
"android.app.admin.DeviceAdminReceiver.onLockTaskModeEntering (Context context, Intent intent, String pkg)   Called when a device is entering lock task mode by a package authorized by isLockTaskPermitted (String) "," Called when a device is entering lock task mode by a package authorized by isLockTaskPermitted(String) <br /><br />"
"android.app.admin.DeviceAdminReceiver.onEnabled (Context context, Intent intent) "," Called after the administrator is first enabled, as a result of receiving ACTION_DEVICE_ADMIN_ENABLED. <br /><br />"
"android.app.admin.DeviceAdminReceiver.getManager (Context context) "," Retrieve the DevicePolicyManager interface for this administrator to work with the system. <br /><br />"
"android.app.admin.DevicePolicyManager.enableSystemApp (ComponentName admin, String packageName) "," Called by profile or device owner to re-enable a system app that was disabled by default when the user was initialized. <br /><br />"
"android.app.admin.DevicePolicyManager.setPasswordHistoryLength (ComponentName admin, int length) "," Called by an application that is administering the device to set the length of the password history. <br /><br />"
"android.app.admin.DevicePolicyManager.setRestrictionsProvider (ComponentName admin, ComponentName provider) "," Designates a specific service component as the provider for making permission requests of a local or remote administrator of the user. <br /><br />"
"android.app.admin.DevicePolicyManager.hasGrantedPolicy (ComponentName admin, int usesPolicy) "," Returns true if an administrator has been granted a particular device policy. <br /><br />"
"android.app.admin.DevicePolicyManager.setAccountManagementDisabled (ComponentName admin, String accountType, boolean disabled) "," Called by a device owner or profile owner to disable account management for a specific type of account. <br /><br />"
"android.app.admin.DevicePolicyManager.getMaximumTimeToLock (ComponentName admin) "," Retrieve the current maximum time to unlock for all admins of this user and its profiles or a particular one. <br /><br />"
"android.app.admin.DevicePolicyManager.getPasswordMinimumLetters (ComponentName admin) "," Retrieve the current number of letters required in the password for all admins or a particular one. <br /><br />"
"android.app.admin.DevicePolicyManager.addCrossProfileWidgetProvider (ComponentName admin, String packageName) "," Called by the profile owner of a managed profile to enable widget providers from a given package to be available in the parent profile. <br /><br />"
"android.app.admin.DevicePolicyManager.getCurrentFailedPasswordAttempts () "," Retrieve the number of times the user has failed at entering a password since that last successful password entry. <br /><br />"
"android.app.admin.DevicePolicyManager.setPasswordMinimumLetters (ComponentName admin, int length) "," Called by an application that is administering the device to set the minimum number of letters required in the password. <br /><br />"
"android.app.admin.DevicePolicyManager.getPasswordQuality (ComponentName admin) "," Retrieve the current minimum password quality for all admins of this user and its profiles or a particular one. <br /><br />"
"android.app.admin.DevicePolicyManager.getScreenCaptureDisabled (ComponentName admin) "," Determine whether or not screen capture has been disabled by the current admin, if specified, or all admins. <br /><br />"
"android.app.admin.DevicePolicyManager.clearCrossProfileIntentFilters (ComponentName admin) "," Called by a profile owner of a managed profile to remove the cross-profile intent filters that go from the managed profile to the parent, or from the parent to the managed profile. <br /><br />"
"android.app.admin.DevicePolicyManager.setMaximumTimeToLock (ComponentName admin, long timeMs) "," Called by an application that is administering the device to set the maximum time for user activity until the device will lock. <br /><br />"
"android.app.admin.DevicePolicyManager.setProfileEnabled (ComponentName admin) "," Sets the enabled state of the profile. <br /><br />"
"android.app.admin.DevicePolicyManager.uninstallAllUserCaCerts (ComponentName admin) "," Uninstalls all custom trusted CA certificates from the profile. <br /><br />"
"android.app.admin.DevicePolicyManager.setMaximumFailedPasswordsForWipe (ComponentName admin, int num) "," Setting this to a value greater than zero enables a built-in policy that will perform a device wipe after too many incorrect device-unlock passwords have been entered. <br /><br />"
"android.app.admin.DevicePolicyManager.isProfileOwnerApp (String packageName) "," Used to determine if a particular package is registered as the profile owner for the current user. <br /><br />"
"android.app.admin.DevicePolicyManager.createAndInitializeUser (ComponentName admin, String name, String ownerName, ComponentName profileOwnerComponent, Bundle adminExtras) "," Called by a device owner to create a user with the specified name. <br /><br />"
"android.app.admin.DevicePolicyManager.isUninstallBlocked (ComponentName admin, String packageName) "," Check whether the current user has been blocked by device policy from uninstalling a package. <br /><br />"
"android.app.admin.DevicePolicyManager.getAutoTimeRequired () "," no description <br /><br />"
"android.app.admin.DevicePolicyManager.setPasswordMinimumLowerCase (ComponentName admin, int length) "," Called by an application that is administering the device to set the minimum number of lower case letters required in the password. <br /><br />"
"android.app.admin.DevicePolicyManager.wipeData (int flags) "," Ask the user data be wiped. <br /><br />"
"android.app.admin.DevicePolicyManager.setApplicationHidden (ComponentName admin, String packageName, boolean hidden) "," Called by device or profile owner to hide or unhide packages. <br /><br />"
"android.app.admin.DevicePolicyManager.addCrossProfileIntentFilter (ComponentName admin, IntentFilter filter, int flags) "," Called by the profile owner of a managed profile so that some intents sent in the managed profile can also be resolved in the parent, or vice versa. <br /><br />"
"android.app.admin.DevicePolicyManager.setRecommendedGlobalProxy (ComponentName admin, ProxyInfo proxyInfo) "," Set a network-independent global HTTP proxy. <br /><br />"
"android.app.admin.DevicePolicyManager.getPasswordMaximumLength (int quality) "," Return the maximum password length that the device supports for a particular password quality. <br /><br />"
"android.app.admin.DevicePolicyManager.getInstalledCaCerts (ComponentName admin) "," Returns all CA certificates that are currently trusted, excluding system CA certificates. <br /><br />"
"android.app.admin.DevicePolicyManager.setLockTaskPackages (ComponentName admin, String[] packages) "," Sets which packages may enter lock task mode. <br /><br />"
"android.app.admin.DevicePolicyManager.getPasswordExpiration (ComponentName admin) "," Get the current password expiration time for the given admin or an aggregate of all admins of this user and its profiles if admin is null. <br /><br />"
"android.app.admin.DevicePolicyManager.removeCrossProfileWidgetProvider (ComponentName admin, String packageName) "," Called by the profile owner of a managed profile to disable widget providers from a given package to be available in the parent profile. <br /><br />"
"android.app.admin.DevicePolicyManager.removeActiveAdmin (ComponentName who) "," Remove a current administration component. <br /><br />"
"android.app.admin.DevicePolicyManager.clearPackagePersistentPreferredActivities (ComponentName admin, String packageName)   Called by a profile owner or device owner to remove all persistent intent handler preferences associated with the given package that were set by addPersistentPreferredActivity (ComponentName, IntentFilter, ComponentName) "," Called by a profile owner or device owner to remove all persistent intent handler preferences associated with the given package that were set by addPersistentPreferredActivity(ComponentName, IntentFilter, ComponentName). <br /><br />"
"android.app.admin.DevicePolicyManager.resetPassword (String password, int flags)   Force a new device unlock password  (the password needed to access the entire device, not for individual accounts) "," Force a new device unlock password (the password needed to access the entire device, not for individual accounts) on the user. <br /><br />"
"android.app.admin.DevicePolicyManager.isMasterVolumeMuted (ComponentName admin) "," Called by profile or device owners to check whether the master volume mute is on or off. <br /><br />"
"android.app.admin.DevicePolicyManager.getPasswordMinimumNonLetter (ComponentName admin) "," Retrieve the current number of non-letter characters required in the password for all admins of this user and its profiles or a particular one. <br /><br />"
"android.app.admin.DevicePolicyManager.addUserRestriction (ComponentName admin, String key) "," Called by a profile or device owner to set a user restriction specified by the key. <br /><br />"
"android.app.admin.DevicePolicyManager.getCrossProfileWidgetProviders (ComponentName admin) "," Called by the profile owner of a managed profile to query providers from which packages are available in the parent profile. <br /><br />"
"android.app.admin.DevicePolicyManager.setPasswordMinimumNumeric (ComponentName admin, int length) "," Called by an application that is administering the device to set the minimum number of numerical digits required in the password. <br /><br />"
"android.app.admin.DevicePolicyManager.getStorageEncryptionStatus () "," Called by an application that is administering the device to determine the current encryption status of the device. <br /><br />"
"android.app.admin.DevicePolicyManager.hasCaCertInstalled (ComponentName admin, byte[] certBuffer) "," Returns whether this certificate is installed as a trusted CA. <br /><br />"
"android.app.admin.DevicePolicyManager.getPasswordMinimumLowerCase (ComponentName admin) "," Retrieve the current number of lower case letters required in the password for all admins of this user and its profiles or a particular one. <br /><br />"
"android.app.admin.DevicePolicyManager.getKeyguardDisabledFeatures (ComponentName admin) "," Determine whether or not features have been disabled in keyguard either by the current admin, if specified, or all admins. <br /><br />"
"android.app.admin.DevicePolicyManager.clearDeviceOwnerApp (String packageName) "," Clears the current device owner. <br /><br />"
"android.app.admin.DevicePolicyManager.setAutoTimeRequired (ComponentName admin, boolean required) "," Called by a device owner to set whether auto time is required. <br /><br />"
"android.app.admin.DevicePolicyManager.setProfileName (ComponentName who, String profileName) "," Sets the name of the profile. <br /><br />"
"android.app.admin.DevicePolicyManager.setSecureSetting (ComponentName admin, String setting, String value) "," Called by profile or device owners to update Settings.Secure settings. <br /><br />"
"android.app.admin.DevicePolicyManager.getPasswordMinimumUpperCase (ComponentName admin) "," Retrieve the current number of upper case letters required in the password for all admins of this user and its profiles or a particular one. <br /><br />"
"android.app.admin.DevicePolicyManager.getPasswordHistoryLength (ComponentName admin) "," Retrieve the current password history length for all admins of this user and its profiles or a particular one. <br /><br />"
"android.app.admin.DevicePolicyManager.setPasswordMinimumSymbols (ComponentName admin, int length) "," Called by an application that is administering the device to set the minimum number of symbols required in the password. <br /><br />"
"android.app.admin.DevicePolicyManager.getActiveAdmins () "," Return a list of all currently active device administrator's component names. <br /><br />"
"android.app.admin.DevicePolicyManager.setMasterVolumeMuted (ComponentName admin, boolean on) "," Called by profile or device owners to set the master volume mute on or off. <br /><br />"
"android.app.admin.DevicePolicyManager.getApplicationRestrictions (ComponentName admin, String packageName) "," Called by a profile or device owner to get the application restrictions for a given target application running in the profile. <br /><br />"
"android.app.admin.DevicePolicyManager.isApplicationHidden (ComponentName admin, String packageName) "," Called by device or profile owner to determine if a package is hidden. <br /><br />"
"android.app.admin.DevicePolicyManager.createUser (ComponentName admin, String name) "," Called by a device owner to create a user with the specified name. <br /><br />"
"android.app.admin.DevicePolicyManager.isAdminActive (ComponentName who)   Return true if the given administrator component is currently active  (enabled) "," Return true if the given administrator component is currently active (enabled) in the system. <br /><br />"
"android.app.admin.DevicePolicyManager.isLockTaskPermitted (String pkg) "," This function lets the caller know whether the given component is allowed to start the lock task mode. <br /><br />"
"android.app.admin.DevicePolicyManager.installKeyPair (ComponentName who, PrivateKey privKey, Certificate cert, String alias) "," Called by a device or profile owner to install a certificate and private key pair. <br /><br />"
"android.app.admin.DevicePolicyManager.getCrossProfileCallerIdDisabled (ComponentName who) "," Called by a profile owner of a managed profile to determine whether or not caller-Id information has been disabled. <br /><br />"
"android.app.admin.DevicePolicyManager.getPasswordMinimumNumeric (ComponentName admin) "," Retrieve the current number of numerical digits required in the password for all admins of this user and its profiles or a particular one. <br /><br />"
"android.app.admin.DevicePolicyManager.addPersistentPreferredActivity (ComponentName admin, IntentFilter filter, ComponentName activity) "," Called by a profile owner or device owner to add a default intent handler activity for intents that match a certain intent filter. <br /><br />"
"android.app.admin.DevicePolicyManager.getPasswordMinimumLength (ComponentName admin) "," Retrieve the current minimum password length for all admins of this user and its profiles or a particular one. <br /><br />"
"android.app.admin.DevicePolicyManager.getPermittedAccessibilityServices (ComponentName admin) "," Returns the list of permitted accessibility services set by this device or profile owner. <br /><br />"
"android.app.admin.DevicePolicyManager.setStorageEncryption (ComponentName admin, boolean encrypt) "," Called by an application that is administering the device to request that the storage system be encrypted. <br /><br />"
"android.app.admin.DevicePolicyManager.setGlobalSetting (ComponentName admin, String setting, String value) "," Called by device owners to update Settings.Global settings. <br /><br />"
"android.app.admin.DevicePolicyManager.getPasswordExpirationTimeout (ComponentName admin) "," Get the password expiration timeout for the given admin. <br /><br />"
"android.app.admin.DevicePolicyManager.installCaCert (ComponentName admin, byte[] certBuffer) "," Installs the given certificate as a user CA. <br /><br />"
"android.app.admin.DevicePolicyManager.setPermittedInputMethods (ComponentName admin, List< String> packageNames) "," Called by a profile or device owner to set the permitted input methods services. <br /><br />"
"android.app.admin.DevicePolicyManager.isDeviceOwnerApp (String packageName) "," Used to determine if a particular package has been registered as a Device Owner app. <br /><br />"
"android.app.admin.DevicePolicyManager.enableSystemApp (ComponentName admin, Intent intent) "," Called by profile or device owner to re-enable system apps by intent that were disabled by default when the user was initialized. <br /><br />"
"android.app.admin.DevicePolicyManager.getTrustAgentConfiguration (ComponentName admin, ComponentName agent)   Gets configuration for the given trust agent based on aggregating all calls to setTrustAgentConfiguration (ComponentName, ComponentName, PersistableBundle) "," Gets configuration for the given trust agent based on aggregating all calls to setTrustAgentConfiguration(ComponentName, ComponentName, PersistableBundle) for all device admins. <br /><br />"
"android.app.admin.DevicePolicyManager.setPasswordMinimumNonLetter (ComponentName admin, int length)   Called by an application that is administering the device to set the minimum number of non-letter characters  (numerical digits or symbols) "," Called by an application that is administering the device to set the minimum number of non-letter characters (numerical digits or symbols) required in the password. <br /><br />"
"android.app.admin.DevicePolicyManager.setCameraDisabled (ComponentName admin, boolean disabled) "," Called by an application that is administering the device to disable all cameras on the device, for this user. <br /><br />"
"android.app.admin.DevicePolicyManager.setPasswordQuality (ComponentName admin, int quality) "," Called by an application that is administering the device to set the password restrictions it is imposing. <br /><br />"
"android.app.admin.DevicePolicyManager.lockNow () "," Make the device lock immediately, as if the lock screen timeout has expired at the point of this call. <br /><br />"
"android.app.admin.DevicePolicyManager.setCrossProfileCallerIdDisabled (ComponentName who, boolean disabled) "," Called by a profile owner of a managed profile to set whether caller-Id information from the managed profile will be shown in the parent profile, for incoming calls. <br /><br />"
"android.app.admin.DevicePolicyManager.setApplicationRestrictions (ComponentName admin, String packageName, Bundle settings) "," Called by a profile or device owner to set the application restrictions for a given target application running in the profile. <br /><br />"
"android.app.admin.DevicePolicyManager.removeUser (ComponentName admin, UserHandle userHandle) "," Called by a device owner to remove a user and all associated data. <br /><br />"
"android.app.admin.DevicePolicyManager.setKeyguardDisabledFeatures (ComponentName admin, int which) "," Called by an application that is administering the device to disable keyguard customizations, such as widgets. <br /><br />"
"android.app.admin.DevicePolicyManager.getAccountTypesWithManagementDisabled () "," Gets the array of accounts for which account management is disabled by the profile owner. <br /><br />"
"android.app.admin.DevicePolicyManager.setScreenCaptureDisabled (ComponentName admin, boolean disabled) "," Called by a device/profile owner to set whether the screen capture is disabled. <br /><br />"
"android.app.admin.DevicePolicyManager.getCameraDisabled (ComponentName admin) "," Determine whether or not the device's cameras have been disabled for this user, either by the current admin, if specified, or all admins. <br /><br />"
"android.app.admin.DevicePolicyManager.getStorageEncryption (ComponentName admin) "," Called by an application that is administering the device to determine the requested setting for secure storage. <br /><br />"
"android.app.admin.DevicePolicyManager.getPermittedInputMethods (ComponentName admin) "," Returns the list of permitted input methods set by this device or profile owner. <br /><br />"
"android.app.admin.DevicePolicyManager.setPasswordMinimumUpperCase (ComponentName admin, int length) "," Called by an application that is administering the device to set the minimum number of upper case letters required in the password. <br /><br />"
"android.app.admin.DevicePolicyManager.uninstallCaCert (ComponentName admin, byte[] certBuffer) "," Uninstalls the given certificate from trusted user CAs, if present. <br /><br />"
"android.app.admin.DevicePolicyManager.setTrustAgentConfiguration (ComponentName admin, ComponentName target, PersistableBundle configuration) "," Sets a list of configuration features to enable for a TrustAgent component. <br /><br />"
"android.app.admin.DevicePolicyManager.setPermittedAccessibilityServices (ComponentName admin, List< String> packageNames) "," Called by a profile or device owner to set the permitted accessibility services. <br /><br />"
"android.app.admin.DevicePolicyManager.getMaximumFailedPasswordsForWipe (ComponentName admin) "," Retrieve the current maximum number of login attempts that are allowed before the device wipes itself, for all admins of this user and its profiles or a particular one. <br /><br />"
"android.app.admin.DevicePolicyManager.setUninstallBlocked (ComponentName admin, String packageName, boolean uninstallBlocked) "," Called by profile or device owners to change whether a user can uninstall a package. <br /><br />"
"android.app.admin.DevicePolicyManager.setPasswordExpirationTimeout (ComponentName admin, long timeout) "," Called by a device admin to set the password expiration timeout. <br /><br />"
"android.app.admin.DevicePolicyManager.getPasswordMinimumSymbols (ComponentName admin) "," Retrieve the current number of symbols required in the password for all admins or a particular one. <br /><br />"
"android.app.admin.DevicePolicyManager.switchUser (ComponentName admin, UserHandle userHandle) "," Called by a device owner to switch the specified user to the foreground. <br /><br />"
"android.app.admin.DevicePolicyManager.setPasswordMinimumLength (ComponentName admin, int length) "," Called by an application that is administering the device to set the minimum allowed password length. <br /><br />"
"android.app.admin.DevicePolicyManager.isActivePasswordSufficient ()   Determine whether the current password the user has set is sufficient to meet the policy requirements  (quality, minimum length) "," Determine whether the current password the user has set is sufficient to meet the policy requirements (quality, minimum length) that have been requested by the admins of this user and its profiles. <br /><br />"
"android.app.admin.DevicePolicyManager.clearUserRestriction (ComponentName admin, String key) "," Called by a profile or device owner to clear a user restriction specified by the key. <br /><br />"
"android.app.AlarmManager.AlarmClockInfo.getTriggerTime () "," Returns the time at which the alarm is going to trigger. <br /><br />"
"android.app.AlarmManager.AlarmClockInfo.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.app.AlarmManager.AlarmClockInfo.getShowIntent () "," Returns an intent intent that can be used to show or edit details of the alarm clock in the application that scheduled it. <br /><br />"
"android.app.AlarmManager.AlarmClockInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.AlarmManager.setWindow (int type, long windowStartMillis, long windowLengthMillis, PendingIntent operation) "," Schedule an alarm to be delivered within a given window of time. <br /><br />"
"android.app.AlarmManager.setInexactRepeating (int type, long triggerAtMillis, long intervalMillis, PendingIntent operation) "," Schedule a repeating alarm that has inexact trigger time requirements; for example, an alarm that repeats every hour, but not necessarily at the top of every hour. <br /><br />"
"android.app.AlarmManager.setExact (int type, long triggerAtMillis, PendingIntent operation) "," Schedule an alarm to be delivered precisely at the stated time. <br /><br />"
"android.app.AlarmManager.getNextAlarmClock () "," Gets information about the next alarm clock currently scheduled. <br /><br />"
"android.app.AlarmManager.setTime (long millis) "," Set the system wall clock time. <br /><br />"
"android.app.AlarmManager.setRepeating (int type, long triggerAtMillis, long intervalMillis, PendingIntent operation) "," Schedule a repeating alarm. <br /><br />"
"android.app.AlarmManager.set (int type, long triggerAtMillis, PendingIntent operation) "," Schedule an alarm. <br /><br />"
"android.app.AlarmManager.setTimeZone (String timeZone) "," Set the system default time zone. <br /><br />"
"android.app.AlarmManager.setAlarmClock (AlarmManager.AlarmClockInfo info, PendingIntent operation) "," Schedule an alarm that represents an alarm clock. <br /><br />"
"android.app.AlarmManager.cancel (PendingIntent operation) "," Remove any alarms with a matching Intent. <br /><br />"
"android.app.AlertDialog.Builder.setIcon (int iconId) "," Set the resource id of the Drawable to be used in the title. <br /><br />"
"android.app.AlertDialog.Builder.setMultiChoiceItems (int itemsId, boolean[] checkedItems, DialogInterface.OnMultiChoiceClickListener listener) "," Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. <br /><br />"
"android.app.AlertDialog.Builder.setMessage (int messageId) "," Set the message to display using the given resource id. <br /><br />"
"android.app.AlertDialog.Builder.setPositiveButton (CharSequence text, DialogInterface.OnClickListener listener) "," Set a listener to be invoked when the positive button of the dialog is pressed. <br /><br />"
"android.app.AlertDialog.Builder.setIcon (Drawable icon) "," Set the Drawable to be used in the title. <br /><br />"
"android.app.AlertDialog.Builder.setMultiChoiceItems (CharSequence[] items, boolean[] checkedItems, DialogInterface.OnMultiChoiceClickListener listener) "," Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. <br /><br />"
"android.app.AlertDialog.Builder.setIconAttribute (int attrId) "," Set an icon as supplied by a theme attribute. <br /><br />"
"android.app.AlertDialog.Builder.setSingleChoiceItems (CharSequence[] items, int checkedItem, DialogInterface.OnClickListener listener) "," Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. <br /><br />"
"android.app.AlertDialog.Builder.setNegativeButton (CharSequence text, DialogInterface.OnClickListener listener) "," Set a listener to be invoked when the negative button of the dialog is pressed. <br /><br />"
"android.app.AlertDialog.Builder.create () "," Creates a AlertDialog with the arguments supplied to this builder. <br /><br />"
"android.app.AlertDialog.Builder.setNeutralButton (CharSequence text, DialogInterface.OnClickListener listener) "," Set a listener to be invoked when the neutral button of the dialog is pressed. <br /><br />"
"android.app.AlertDialog.Builder.setCustomTitle (View customTitleView) "," Set the title using the custom view customTitleView. <br /><br />"
"android.app.AlertDialog.Builder.setOnItemSelectedListener (AdapterView.OnItemSelectedListener listener) "," Sets a listener to be invoked when an item in the list is selected. <br /><br />"
"android.app.AlertDialog.Builder.setCancelable (boolean cancelable) "," Sets whether the dialog is cancelable or not. <br /><br />"
"android.app.AlertDialog.Builder.setView (int layoutResId) "," Set a custom view resource to be the contents of the Dialog. <br /><br />"
"android.app.AlertDialog.Builder.setSingleChoiceItems (Cursor cursor, int checkedItem, String labelColumn, DialogInterface.OnClickListener listener) "," Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. <br /><br />"
"android.app.AlertDialog.Builder.setOnDismissListener (DialogInterface.OnDismissListener onDismissListener) "," Sets the callback that will be called when the dialog is dismissed for any reason. <br /><br />"
"android.app.AlertDialog.Builder.setItems (int itemsId, DialogInterface.OnClickListener listener) "," Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. <br /><br />"
"android.app.AlertDialog.Builder.setCursor (Cursor cursor, DialogInterface.OnClickListener listener, String labelColumn) "," Set a list of items, which are supplied by the given Cursor, to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. <br /><br />"
"android.app.AlertDialog.Builder.setOnKeyListener (DialogInterface.OnKeyListener onKeyListener) "," Sets the callback that will be called if a key is dispatched to the dialog. <br /><br />"
"android.app.AlertDialog.Builder.setNeutralButton (int textId, DialogInterface.OnClickListener listener) "," Set a listener to be invoked when the neutral button of the dialog is pressed. <br /><br />"
"android.app.AlertDialog.Builder.getContext () "," Returns a Context with the appropriate theme for dialogs created by this Builder. <br /><br />"
"android.app.AlertDialog.Builder.setSingleChoiceItems (ListAdapter adapter, int checkedItem, DialogInterface.OnClickListener listener) "," Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. <br /><br />"
"android.app.AlertDialog.Builder.setMessage (CharSequence message) "," Set the message to display. <br /><br />"
"android.app.AlertDialog.Builder.setTitle (int titleId) "," Set the title using the given resource id. <br /><br />"
"android.app.AlertDialog.Builder.show ()   Creates a AlertDialog with the arguments supplied to this builder and show () "," Creates a AlertDialog with the arguments supplied to this builder and show()'s the dialog. <br /><br />"
"android.app.AlertDialog.Builder.setView (View view) "," Set a custom view to be the contents of the Dialog. <br /><br />"
"android.app.AlertDialog.Builder.setSingleChoiceItems (int itemsId, int checkedItem, DialogInterface.OnClickListener listener) "," Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. <br /><br />"
"android.app.AlertDialog.Builder.setOnCancelListener (DialogInterface.OnCancelListener onCancelListener) "," Sets the callback that will be called if the dialog is canceled. <br /><br />"
"android.app.AlertDialog.Builder.setNegativeButton (int textId, DialogInterface.OnClickListener listener) "," Set a listener to be invoked when the negative button of the dialog is pressed. <br /><br />"
"android.app.AlertDialog.Builder.setAdapter (ListAdapter adapter, DialogInterface.OnClickListener listener) "," Set a list of items, which are supplied by the given ListAdapter, to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. <br /><br />"
"android.app.AlertDialog.Builder.setMultiChoiceItems (Cursor cursor, String isCheckedColumn, String labelColumn, DialogInterface.OnMultiChoiceClickListener listener) "," Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. <br /><br />"
"android.app.AlertDialog.Builder.setInverseBackgroundForced (boolean useInverseBackground) "," Sets the Dialog to use the inverse background, regardless of what the contents is. <br /><br />"
"android.app.AlertDialog.Builder.setTitle (CharSequence title) "," Set the title displayed in the Dialog. <br /><br />"
"android.app.AlertDialog.Builder.setItems (CharSequence[] items, DialogInterface.OnClickListener listener) "," Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. <br /><br />"
"android.app.AlertDialog.Builder.setPositiveButton (int textId, DialogInterface.OnClickListener listener) "," Set a listener to be invoked when the positive button of the dialog is pressed. <br /><br />"
"android.app.AlertDialog.setMessage (CharSequence message) "," no description <br /><br />"
"android.app.AlertDialog.setButton3 (CharSequence text, Message msg)    This method was deprecated in API level 3. Use setButton (int, CharSequence, Message) "," This method was deprecated in API level 3. Use setButton(int, CharSequence, Message) with BUTTON_NEUTRAL. <br /><br />"
"android.app.AlertDialog.getListView () "," Gets the list view used in the dialog. <br /><br />"
"android.app.AlertDialog.setButton2 (CharSequence text, Message msg)    This method was deprecated in API level 3. Use setButton (int, CharSequence, Message) "," This method was deprecated in API level 3. Use setButton(int, CharSequence, Message) with BUTTON_NEGATIVE. <br /><br />"
"android.app.AlertDialog.onKeyUp (int keyCode, KeyEvent event) "," A key was released. <br /><br />"
"android.app.AlertDialog.setView (View view) "," Set the view to display in that dialog. <br /><br />"
"android.app.AlertDialog.setIcon (Drawable icon) "," no description <br /><br />"
"android.app.AlertDialog.setButton3 (CharSequence text, DialogInterface.OnClickListener listener)    This method was deprecated in API level 3. Use setButton (int, CharSequence, android.content.DialogInterface.OnClickListener) "," This method was deprecated in API level 3. Use setButton(int, CharSequence, android.content.DialogInterface.OnClickListener) with BUTTON_POSITIVE <br /><br />"
"android.app.AlertDialog.setIconAttribute (int attrId) "," Set an icon as supplied by a theme attribute. <br /><br />"
"android.app.AlertDialog.setButton2 (CharSequence text, DialogInterface.OnClickListener listener)    This method was deprecated in API level 3. Use setButton (int, CharSequence, android.content.DialogInterface.OnClickListener) "," This method was deprecated in API level 3. Use setButton(int, CharSequence, android.content.DialogInterface.OnClickListener) with BUTTON_NEGATIVE <br /><br />"
"android.app.AlertDialog.onKeyDown (int keyCode, KeyEvent event) "," A key was pressed down. <br /><br />"
"android.app.AlertDialog.setCustomTitle (View customTitleView) "," no description <br /><br />"
"android.app.AlertDialog.setIcon (int resId) "," Set resId to 0 if you don't want an icon. <br /><br />"
"android.app.AlertDialog.setView (View view, int viewSpacingLeft, int viewSpacingTop, int viewSpacingRight, int viewSpacingBottom) "," Set the view to display in that dialog, specifying the spacing to appear around that view. <br /><br />"
"android.app.AlertDialog.setInverseBackgroundForced (boolean forceInverseBackground) "," no description <br /><br />"
"android.app.AlertDialog.setButton (CharSequence text, Message msg)    This method was deprecated in API level 3. Use setButton (int, CharSequence, Message) "," This method was deprecated in API level 3. Use setButton(int, CharSequence, Message) with BUTTON_POSITIVE. <br /><br />"
"android.app.AlertDialog.setButton (CharSequence text, DialogInterface.OnClickListener listener)    This method was deprecated in API level 3. Use setButton (int, CharSequence, android.content.DialogInterface.OnClickListener) "," This method was deprecated in API level 3. Use setButton(int, CharSequence, android.content.DialogInterface.OnClickListener) with BUTTON_POSITIVE <br /><br />"
"android.app.AlertDialog.setButton (int whichButton, CharSequence text, Message msg) "," Set a message to be sent when a button is pressed. <br /><br />"
"android.app.AlertDialog.setButton (int whichButton, CharSequence text, DialogInterface.OnClickListener listener) "," Set a listener to be invoked when the positive button of the dialog is pressed. <br /><br />"
"android.app.AlertDialog.setTitle (CharSequence title) "," Set the title text for this dialog's window. <br /><br />"
"android.app.AlertDialog.getButton (int whichButton) "," Gets one of the buttons used in the dialog. <br /><br />"
"android.app.Application.ActivityLifecycleCallbacks.onActivitySaveInstanceState (Activity activity, Bundle outState) "," no description <br /><br />"
"android.app.Application.ActivityLifecycleCallbacks.onActivityDestroyed (Activity activity) "," no description <br /><br />"
"android.app.Application.ActivityLifecycleCallbacks.onActivityStopped (Activity activity) "," no description <br /><br />"
"android.app.Application.ActivityLifecycleCallbacks.onActivityPaused (Activity activity) "," no description <br /><br />"
"android.app.Application.ActivityLifecycleCallbacks.onActivityResumed (Activity activity) "," no description <br /><br />"
"android.app.Application.ActivityLifecycleCallbacks.onActivityCreated (Activity activity, Bundle savedInstanceState) "," no description <br /><br />"
"android.app.Application.ActivityLifecycleCallbacks.onActivityStarted (Activity activity) "," no description <br /><br />"
"android.app.Application.registerComponentCallbacks (ComponentCallbacks callback) "," Add a new ComponentCallbacks to the base application of the Context, which will be called at the same times as the ComponentCallbacks methods of activities and other components are called. <br /><br />"
"android.app.Application.onConfigurationChanged (Configuration newConfig) "," Called by the system when the device configuration changes while your component is running. <br /><br />"
"android.app.Application.unregisterActivityLifecycleCallbacks (Application.ActivityLifecycleCallbacks callback) "," no description <br /><br />"
"android.app.Application.unregisterOnProvideAssistDataListener (Application.OnProvideAssistDataListener callback) "," no description <br /><br />"
"android.app.Application.registerOnProvideAssistDataListener (Application.OnProvideAssistDataListener callback) "," no description <br /><br />"
"android.app.Application.onTerminate () "," This method is for use in emulated process environments. <br /><br />"
"android.app.Application.registerActivityLifecycleCallbacks (Application.ActivityLifecycleCallbacks callback) "," no description <br /><br />"
"android.app.Application.onTrimMemory (int level) "," Called when the operating system has determined that it is a good time for a process to trim unneeded memory from its process. <br /><br />"
"android.app.Application.unregisterComponentCallbacks (ComponentCallbacks callback)   Remove a ComponentCallbacks object that was previously registered with registerComponentCallbacks (ComponentCallbacks) "," Remove a ComponentCallbacks object that was previously registered with registerComponentCallbacks(ComponentCallbacks). <br /><br />"
"android.app.Application.onLowMemory () "," This is called when the overall system is running low on memory, and actively running processes should trim their memory usage. <br /><br />"
"android.app.Application.onCreate ()   Called when the application is starting, before any activity, service, or receiver objects  (excluding content providers) "," Called when the application is starting, before any activity, service, or receiver objects (excluding content providers) have been created. <br /><br />"
"android.app.Application.OnProvideAssistDataListener.onProvideAssistData (Activity activity, Bundle data) "," This is called when the user is requesting an assist, to build a full ACTION_ASSIST Intent with all of the context of the current application. <br /><br />"
"android.app.ApplicationErrorReport.AnrInfo.dump (Printer pw, String prefix) "," Dump an AnrInfo instance to a Printer. <br /><br />"
"android.app.ApplicationErrorReport.AnrInfo.writeToParcel (Parcel dest, int flags) "," Save an AnrInfo instance to a parcel. <br /><br />"
"android.app.ApplicationErrorReport.BatteryInfo.dump (Printer pw, String prefix) "," Dump a BatteryInfo instance to a Printer. <br /><br />"
"android.app.ApplicationErrorReport.BatteryInfo.writeToParcel (Parcel dest, int flags) "," Save a BatteryInfo instance to a parcel. <br /><br />"
"android.app.ApplicationErrorReport.CrashInfo.dump (Printer pw, String prefix) "," Dump a CrashInfo instance to a Printer. <br /><br />"
"android.app.ApplicationErrorReport.CrashInfo.writeToParcel (Parcel dest, int flags) "," Save a CrashInfo instance to a parcel. <br /><br />"
"android.app.ApplicationErrorReport.dump (Printer pw, String prefix) "," Dump the report to a Printer. <br /><br />"
"android.app.ApplicationErrorReport.getErrorReportReceiver (Context context, String packageName, int appFlags) "," no description <br /><br />"
"android.app.ApplicationErrorReport.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.app.ApplicationErrorReport.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.ApplicationErrorReport.readFromParcel (Parcel in) "," no description <br /><br />"
"android.app.ApplicationErrorReport.RunningServiceInfo.dump (Printer pw, String prefix) "," Dump a BatteryInfo instance to a Printer. <br /><br />"
"android.app.ApplicationErrorReport.RunningServiceInfo.writeToParcel (Parcel dest, int flags) "," Save a RunningServiceInfo instance to a parcel. <br /><br />"
"android.app.AppOpsManager.checkOp (String op, int uid, String packageName) "," Do a quick check for whether an application might be able to perform an operation. <br /><br />"
"android.app.AppOpsManager.checkPackage (int uid, String packageName) "," Do a quick check to validate if a package name belongs to a UID. <br /><br />"
"android.app.AppOpsManager.checkOpNoThrow (String op, int uid, String packageName)   Like checkOp (String, int, String) "," Like checkOp(String, int, String) but instead of throwing a SecurityException it returns MODE_ERRORED. <br /><br />"
"android.app.AppOpsManager.startOp (String op, int uid, String packageName) "," Report that an application has started executing a long-running operation. <br /><br />"
"android.app.AppOpsManager.noteOp (String op, int uid, String packageName) "," Make note of an application performing an operation. <br /><br />"
"android.app.AppOpsManager.stopWatchingMode (AppOpsManager.OnOpChangedListener callback)   Stop monitoring that was previously started with startWatchingMode (String, String, AppOpsManager.OnOpChangedListener) "," Stop monitoring that was previously started with startWatchingMode(String, String, AppOpsManager.OnOpChangedListener). <br /><br />"
"android.app.AppOpsManager.startOpNoThrow (String op, int uid, String packageName)   Like startOp (String, int, String) "," Like startOp(String, int, String) but instead of throwing a SecurityException it returns MODE_ERRORED. <br /><br />"
"android.app.AppOpsManager.finishOp (String op, int uid, String packageName)   Report that an application is no longer performing an operation that had previously been started with startOp (String, int, String) "," Report that an application is no longer performing an operation that had previously been started with startOp(String, int, String). <br /><br />"
"android.app.AppOpsManager.startWatchingMode (String op, String packageName, AppOpsManager.OnOpChangedListener callback) "," Monitor for changes to the operating mode for the given op in the given app package. <br /><br />"
"android.app.AppOpsManager.noteOpNoThrow (String op, int uid, String packageName)   Like noteOp (String, int, String) "," Like noteOp(String, int, String) but instead of throwing a SecurityException it returns MODE_ERRORED. <br /><br />"
"android.app.AppOpsManager.OnOpChangedListener.onOpChanged (String op, String packageName) "," no description <br /><br />"
"android.app.backup.BackupAgent.onRestoreFile (ParcelFileDescriptor data, long size, File destination, int type, long mode, long mtime) "," Handle the data delivered via the given file descriptor during a full restore operation. <br /><br />"
"android.app.backup.BackupAgent.fullBackupFile (File file, FullBackupDataOutput output) "," Write an entire file as part of a full-backup operation. <br /><br />"
"android.app.backup.BackupAgent.onRestore (BackupDataInput data, int appVersionCode, ParcelFileDescriptor newState) "," The application is being restored from backup and should replace any existing data with the contents of the backup. <br /><br />"
"android.app.backup.BackupAgent.onCreate () "," Provided as a convenience for agent implementations that need an opportunity to do one-time initialization before the actual backup or restore operation is begun. <br /><br />"
"android.app.backup.BackupAgent.onFullBackup (FullBackupDataOutput data) "," The application is having its entire file system contents backed up. <br /><br />"
"android.app.backup.BackupAgent.onDestroy () "," Provided as a convenience for agent implementations that need to do some sort of shutdown process after backup or restore is completed. <br /><br />"
"android.app.backup.BackupAgent.onBackup (ParcelFileDescriptor oldState, BackupDataOutput data, ParcelFileDescriptor newState) "," The application is being asked to write any data changed since the last time it performed a backup operation. <br /><br />"
"android.app.backup.BackupAgent.onRestoreFinished () "," The application's restore operation has completed. <br /><br />"
"android.app.backup.BackupAgentHelper.onRestore (BackupDataInput data, int appVersionCode, ParcelFileDescriptor newState) "," Run the restore process on each of the configured handlers. <br /><br />"
"android.app.backup.BackupAgentHelper.addHelper (String keyPrefix, BackupHelper helper) "," Add a helper for a given data subset to the agent's configuration. <br /><br />"
"android.app.backup.BackupAgentHelper.onBackup (ParcelFileDescriptor oldState, BackupDataOutput data, ParcelFileDescriptor newState) "," Run the backup process on each of the configured handlers. <br /><br />"
"android.app.backup.BackupDataInput.readEntityData (byte[] data, int offset, int size) "," Read a record's raw data from the restore stream. <br /><br />"
"android.app.backup.BackupDataInput.skipEntityData () "," Consume the current entity's data without extracting it into a buffer for further processing. <br /><br />"
"android.app.backup.BackupDataInput.readNextHeader () "," Extract the next entity header from the restore stream. <br /><br />"
"android.app.backup.BackupDataInput.getKey () "," Report the key associated with the current entity in the restore stream <br /><br />"
"android.app.backup.BackupDataInput.getDataSize () "," Report the size in bytes of the data associated with the current entity in the restore stream. <br /><br />"
"android.app.backup.BackupDataInputStream.read () "," Read one byte of entity data from the stream, returning it as an integer value. <br /><br />"
"android.app.backup.BackupDataInputStream.size () "," Report the total number of bytes of data available for the current entity. <br /><br />"
"android.app.backup.BackupDataInputStream.getKey () "," Report the key string associated with this entity within the backup data set. <br /><br />"
"android.app.backup.BackupDataInputStream.read (byte[] b) "," Read enough entity data into a byte array to fill the array. <br /><br />"
"android.app.backup.BackupDataInputStream.read (byte[] b, int offset, int size) "," Read up to size bytes of data into a byte array, beginning at position offset within the array. <br /><br />"
"android.app.backup.BackupDataOutput.writeEntityHeader (String key, int dataSize) "," Mark the beginning of one record in the backup data stream. <br /><br />"
"android.app.backup.BackupDataOutput.writeEntityData (byte[] data, int size) "," Write a chunk of data under the current entity to the backup transport. <br /><br />"
"android.app.backup.BackupHelper.restoreEntity (BackupDataInputStream data) "," Called by BackupAgentHelper to restore a single entity from the restore data set. <br /><br />"
"android.app.backup.BackupHelper.performBackup (ParcelFileDescriptor oldState, BackupDataOutput data, ParcelFileDescriptor newState) "," Based on oldState, determine what application content needs to be backed up, write it to data, and fill in newState with the complete state as it exists now. <br /><br />"
"android.app.backup.BackupHelper.writeNewStateDescription (ParcelFileDescriptor newState) "," Called by BackupAgentHelper after a restore operation to write the backup state file corresponding to the data as processed by the helper. <br /><br />"
"android.app.backup.BackupManager.dataChanged () "," Notifies the Android backup system that your application wishes to back up new changes to its data. <br /><br />"
"android.app.backup.BackupManager.dataChanged (String packageName) "," Convenience method for callers who need to indicate that some other package needs a backup pass. <br /><br />"
"android.app.backup.BackupManager.requestRestore (RestoreObserver observer) "," Restore the calling application from backup. <br /><br />"
"android.app.backup.FileBackupHelper.restoreEntity (BackupDataInputStream data) "," Restore one record [representing a single file] from the restore dataset. <br /><br />"
"android.app.backup.FileBackupHelper.performBackup (ParcelFileDescriptor oldState, BackupDataOutput data, ParcelFileDescriptor newState) "," Based on oldState, determine which of the files from the application's data directory need to be backed up, write them to the data stream, and fill in newState with the state as it exists now. <br /><br />"
"android.app.backup.FileBackupHelper.writeNewStateDescription (ParcelFileDescriptor fd) "," Called by BackupAgentHelper after a restore operation to write the backup state file corresponding to the data as processed by the helper. <br /><br />"
"android.app.backup.RestoreObserver.restoreStarting (int numPackages) "," The restore operation has begun. <br /><br />"
"android.app.backup.RestoreObserver.onUpdate (int nowBeingRestored, String currentPackage)   An indication of which package is being restored currently, out of the total number provided in the restoreStarting (int) "," An indication of which package is being restored currently, out of the total number provided in the restoreStarting(int) callback. <br /><br />"
"android.app.backup.RestoreObserver.restoreFinished (int error) "," The restore process has completed. <br /><br />"
"android.app.backup.SharedPreferencesBackupHelper.restoreEntity (BackupDataInputStream data) "," Restores one entity from the restore data stream to its proper shared preferences file store. <br /><br />"
"android.app.backup.SharedPreferencesBackupHelper.performBackup (ParcelFileDescriptor oldState, BackupDataOutput data, ParcelFileDescriptor newState) "," Backs up the configured SharedPreferences groups. <br /><br />"
"android.app.backup.SharedPreferencesBackupHelper.writeNewStateDescription (ParcelFileDescriptor fd) "," Called by BackupAgentHelper after a restore operation to write the backup state file corresponding to the data as processed by the helper. <br /><br />"
"android.app.DatePickerDialog.onSaveInstanceState () "," Saves the state of the dialog into a bundle. <br /><br />"
"android.app.DatePickerDialog.onClick (DialogInterface dialog, int which) "," This method will be invoked when a button in the dialog is clicked. <br /><br />"
"android.app.DatePickerDialog.onRestoreInstanceState (Bundle savedInstanceState) "," Restore the state of the dialog from a previously saved bundle. <br /><br />"
"android.app.DatePickerDialog.onDateChanged (DatePicker view, int year, int month, int day) "," Called upon a date change. <br /><br />"
"android.app.DatePickerDialog.updateDate (int year, int monthOfYear, int dayOfMonth) "," Sets the current date. <br /><br />"
"android.app.DatePickerDialog.getDatePicker () "," Gets the DatePicker contained in this dialog. <br /><br />"
"android.app.DatePickerDialog.OnDateSetListener.onDateSet (DatePicker view, int year, int monthOfYear, int dayOfMonth) "," no description <br /><br />"
"android.app.Dialog.onBackPressed () "," Called when the dialog has detected the user's press of the back key. <br /><br />"
"android.app.Dialog.onActionModeFinished (ActionMode mode)   Called when an action mode has been finished. Note that if you override this method you should always call through to the superclass implementation by calling super.onActionModeFinished (mode) "," Called when an action mode has been finished. Note that if you override this method you should always call through to the superclass implementation by calling super.onActionModeFinished(mode). <br /><br />"
"android.app.Dialog.onPanelClosed (int featureId, Menu menu) "," Called when a panel is being closed. <br /><br />"
"android.app.Dialog.onRestoreInstanceState (Bundle savedInstanceState) "," Restore the state of the dialog from a previously saved bundle. <br /><br />"
"android.app.Dialog.onPrepareOptionsMenu (Menu menu)   It is usually safe to proxy this call to the owner activity's onPrepareOptionsMenu (Menu) "," It is usually safe to proxy this call to the owner activity's onPrepareOptionsMenu(Menu) if the client desires the same menu for this Dialog. <br /><br />"
"android.app.Dialog.openContextMenu (View view) "," no description <br /><br />"
"android.app.Dialog.registerForContextMenu (View view) "," no description <br /><br />"
"android.app.Dialog.setDismissMessage (Message msg) "," Set a message to be sent when the dialog is dismissed. <br /><br />"
"android.app.Dialog.create () "," Forces immediate creation of the dialog. <br /><br />"
"android.app.Dialog.onPreparePanel (int featureId, View view, Menu menu) "," Prepare a panel to be displayed. <br /><br />"
"android.app.Dialog.isShowing () "," no description <br /><br />"
"android.app.Dialog.dismiss () "," Dismiss this dialog, removing it from the screen. <br /><br />"
"android.app.Dialog.setCancelMessage (Message msg) "," Set a message to be sent when the dialog is canceled. <br /><br />"
"android.app.Dialog.onAttachedToWindow () "," Called when the window has been attached to the window manager. <br /><br />"
"android.app.Dialog.cancel () "," Cancel the dialog. <br /><br />"
"android.app.Dialog.dispatchGenericMotionEvent (MotionEvent ev) "," Called to process generic motion events. <br /><br />"
"android.app.Dialog.dispatchKeyShortcutEvent (KeyEvent event) "," Called to process a key shortcut event. <br /><br />"
"android.app.Dialog.onKeyLongPress (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyLongPress (): always returns false  (doesn't handle the event) "," Default implementation of KeyEvent.Callback.onKeyLongPress(): always returns false (doesn't handle the event). <br /><br />"
"android.app.Dialog.onContextItemSelected (MenuItem item) "," no description <br /><br />"
"android.app.Dialog.getContext () "," Retrieve the Context this Dialog is running in. <br /><br />"
"android.app.Dialog.onSearchRequested () "," This hook is called when the user signals the desire to start a search. <br /><br />"
"android.app.Dialog.setFeatureDrawableUri (int featureId, Uri uri)   Convenience for calling setFeatureDrawableUri (int, Uri) "," Convenience for calling setFeatureDrawableUri(int, Uri). <br /><br />"
"android.app.Dialog.takeKeyEvents (boolean get) "," Request that key events come to this dialog. <br /><br />"
"android.app.Dialog.onCreatePanelMenu (int featureId, Menu menu) "," Initialize the contents of the menu for panel 'featureId'. <br /><br />"
"android.app.Dialog.getOwnerActivity () "," Returns the Activity that owns this Dialog. <br /><br />"
"android.app.Dialog.closeOptionsMenu () "," no description <br /><br />"
"android.app.Dialog.getActionBar () "," Retrieve the ActionBar attached to this dialog, if present. <br /><br />"
"android.app.Dialog.onCreateContextMenu (ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) "," Called when the context menu for this view is being built. <br /><br />"
"android.app.Dialog.onKeyUp (int keyCode, KeyEvent event) "," A key was released. <br /><br />"
"android.app.Dialog.onTrackballEvent (MotionEvent event) "," Called when the trackball was moved and not handled by any of the views inside of the activity. <br /><br />"
"android.app.Dialog.onContextMenuClosed (Menu menu) "," no description <br /><br />"
"android.app.Dialog.onOptionsItemSelected (MenuItem item) "," no description <br /><br />"
"android.app.Dialog.onGenericMotionEvent (MotionEvent event) "," Called when a generic motion event was not handled by any of the views inside of the dialog. <br /><br />"
"android.app.Dialog.getWindow () "," Retrieve the current Window for the activity. <br /><br />"
"android.app.Dialog.onCreatePanelView (int featureId) "," Instantiate the view to display in the panel for 'featureId'. <br /><br />"
"android.app.Dialog.getLayoutInflater () "," no description <br /><br />"
"android.app.Dialog.requestWindowFeature (int featureId) "," Enable extended window features. <br /><br />"
"android.app.Dialog.setOwnerActivity (Activity activity) "," Sets the Activity that owns this dialog. <br /><br />"
"android.app.Dialog.dispatchPopulateAccessibilityEvent (AccessibilityEvent event) "," Called to process population of AccessibilityEvents. <br /><br />"
"android.app.Dialog.setOnCancelListener (DialogInterface.OnCancelListener listener) "," Set a listener to be invoked when the dialog is canceled. <br /><br />"
"android.app.Dialog.onOptionsMenuClosed (Menu menu) "," no description <br /><br />"
"android.app.Dialog.setOnDismissListener (DialogInterface.OnDismissListener listener) "," Set a listener to be invoked when the dialog is dismissed. <br /><br />"
"android.app.Dialog.onContentChanged ()   This hook is called whenever the content view of the screen changes  (due to a call to Window.setContentView or Window.addContentView) "," This hook is called whenever the content view of the screen changes (due to a call to Window.setContentView or Window.addContentView). <br /><br />"
"android.app.Dialog.onActionModeStarted (ActionMode mode)   Called when an action mode has been started. Note that if you override this method you should always call through to the superclass implementation by calling super.onActionModeStarted (mode) "," Called when an action mode has been started. Note that if you override this method you should always call through to the superclass implementation by calling super.onActionModeStarted(mode). <br /><br />"
"android.app.Dialog.unregisterForContextMenu (View view) "," no description <br /><br />"
"android.app.Dialog.onCreateOptionsMenu (Menu menu)   It is usually safe to proxy this call to the owner activity's onCreateOptionsMenu (Menu) "," It is usually safe to proxy this call to the owner activity's onCreateOptionsMenu(Menu) if the client desires the same menu for this Dialog. <br /><br />"
"android.app.Dialog.onSaveInstanceState () "," Saves the state of the dialog into a bundle. <br /><br />"
"android.app.Dialog.hide () "," Hide the dialog, but do not dismiss it. <br /><br />"
"android.app.Dialog.setFeatureDrawableAlpha (int featureId, int alpha)   Convenience for calling setFeatureDrawableAlpha (int, int) "," Convenience for calling setFeatureDrawableAlpha(int, int). <br /><br />"
"android.app.Dialog.onWindowFocusChanged (boolean hasFocus) "," This hook is called whenever the window focus changes. <br /><br />"
"android.app.Dialog.onKeyDown (int keyCode, KeyEvent event) "," A key was pressed down. <br /><br />"
"android.app.Dialog.onKeyMultiple (int keyCode, int repeatCount, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyMultiple (): always returns false  (doesn't handle the event) "," Default implementation of KeyEvent.Callback.onKeyMultiple(): always returns false (doesn't handle the event). <br /><br />"
"android.app.Dialog.dispatchTouchEvent (MotionEvent ev) "," Called to process touch screen events. <br /><br />"
"android.app.Dialog.setOnShowListener (DialogInterface.OnShowListener listener) "," Sets a listener to be invoked when the dialog is shown. <br /><br />"
"android.app.Dialog.onTouchEvent (MotionEvent event) "," Called when a touch screen event was not handled by any of the views under it. <br /><br />"
"android.app.Dialog.setVolumeControlStream (int streamType) "," By default, this will use the owner Activity's suggested stream type. <br /><br />"
"android.app.Dialog.setOnKeyListener (DialogInterface.OnKeyListener onKeyListener) "," Sets the callback that will be called if a key is dispatched to the dialog. <br /><br />"
"android.app.Dialog.addContentView (View view, ViewGroup.LayoutParams params) "," Add an additional content view to the screen. <br /><br />"
"android.app.Dialog.onMenuOpened (int featureId, Menu menu) "," Called when a panel's menu is opened by the user. <br /><br />"
"android.app.Dialog.onMenuItemSelected (int featureId, MenuItem item) "," Called when a panel's menu item has been selected by the user. <br /><br />"
"android.app.Dialog.invalidateOptionsMenu () "," no description <br /><br />"
"android.app.Dialog.dispatchKeyEvent (KeyEvent event) "," Called to process key events. <br /><br />"
"android.app.Dialog.setTitle (int titleId) "," Set the title text for this dialog's window. <br /><br />"
"android.app.Dialog.openOptionsMenu () "," no description <br /><br />"
"android.app.Dialog.setFeatureDrawableResource (int featureId, int resId)   Convenience for calling setFeatureDrawableResource (int, int) "," Convenience for calling setFeatureDrawableResource(int, int). <br /><br />"
"android.app.Dialog.setFeatureDrawable (int featureId, Drawable drawable)   Convenience for calling setFeatureDrawable (int, Drawable) "," Convenience for calling setFeatureDrawable(int, Drawable). <br /><br />"
"android.app.Dialog.setContentView (View view) "," Set the screen content to an explicit view. <br /><br />"
"android.app.Dialog.setCancelable (boolean flag) "," Sets whether this dialog is cancelable with the BACK key. <br /><br />"
"android.app.Dialog.show () "," Start the dialog and display it on screen. <br /><br />"
"android.app.Dialog.setCanceledOnTouchOutside (boolean cancel) "," Sets whether this dialog is canceled when touched outside the window's bounds. <br /><br />"
"android.app.Dialog.onDetachedFromWindow () "," Called when the window has been attached to the window manager. <br /><br />"
"android.app.Dialog.setContentView (int layoutResID) "," Set the screen content from a layout resource. <br /><br />"
"android.app.Dialog.onWindowStartingActionMode (ActionMode.Callback callback) "," Called when an action mode is being started for this window. <br /><br />"
"android.app.Dialog.getCurrentFocus ()   Call getCurrentFocus () "," Call getCurrentFocus() on the Window if this Activity to return the currently focused view. <br /><br />"
"android.app.Dialog.setContentView (View view, ViewGroup.LayoutParams params) "," Set the screen content to an explicit view. <br /><br />"
"android.app.Dialog.onWindowAttributesChanged (WindowManager.LayoutParams params) "," This is called whenever the current window attributes change. <br /><br />"
"android.app.Dialog.dispatchTrackballEvent (MotionEvent ev) "," Called to process trackball events. <br /><br />"
"android.app.Dialog.findViewById (int id) "," Finds a child view with the given identifier. <br /><br />"
"android.app.Dialog.setTitle (CharSequence title) "," Set the title text for this dialog's window. <br /><br />"
"android.app.Dialog.onKeyShortcut (int keyCode, KeyEvent event) "," Called when a key shortcut event is not handled by any of the views in the Dialog. <br /><br />"
"android.app.Dialog.getVolumeControlStream () "," no description <br /><br />"
"android.app.DialogFragment.show (FragmentManager manager, String tag) "," Display the dialog, adding the fragment to the given FragmentManager. <br /><br />"
"android.app.DialogFragment.onActivityCreated (Bundle savedInstanceState) "," Called when the fragment's activity has been created and this fragment's view hierarchy instantiated. <br /><br />"
"android.app.DialogFragment.onDetach () "," Called when the fragment is no longer attached to its activity. <br /><br />"
"android.app.DialogFragment.onDestroyView () "," Remove dialog. <br /><br />"
"android.app.DialogFragment.onSaveInstanceState (Bundle outState) "," Called to ask the fragment to save its current dynamic state, so it can later be reconstructed in a new instance of its process is restarted. <br /><br />"
"android.app.DialogFragment.onCancel (DialogInterface dialog) "," This method will be invoked when the dialog is canceled. <br /><br />"
"android.app.DialogFragment.isCancelable ()   Return the current value of setCancelable (boolean) "," Return the current value of setCancelable(boolean). <br /><br />"
"android.app.DialogFragment.onStart () "," Called when the Fragment is visible to the user. <br /><br />"
"android.app.DialogFragment.onCreateDialog (Bundle savedInstanceState) "," Override to build your own custom Dialog container. <br /><br />"
"android.app.DialogFragment.onAttach (Activity activity) "," Called when a fragment is first attached to its activity. <br /><br />"
"android.app.DialogFragment.setShowsDialog (boolean showsDialog) "," Controls whether this fragment should be shown in a dialog. <br /><br />"
"android.app.DialogFragment.onStop () "," Called when the Fragment is no longer started. <br /><br />"
"android.app.DialogFragment.getShowsDialog ()   Return the current value of setShowsDialog (boolean) "," Return the current value of setShowsDialog(boolean). <br /><br />"
"android.app.DialogFragment.dismiss () "," Dismiss the fragment and its dialog. <br /><br />"
"android.app.DialogFragment.getTheme () "," no description <br /><br />"
"android.app.DialogFragment.onCreate (Bundle savedInstanceState) "," Called to do initial creation of a fragment. <br /><br />"
"android.app.DialogFragment.show (FragmentTransaction transaction, String tag) "," Display the dialog, adding the fragment using an existing transaction and then committing the transaction. <br /><br />"
"android.app.DialogFragment.onDismiss (DialogInterface dialog) "," This method will be invoked when the dialog is dismissed. <br /><br />"
"android.app.DialogFragment.setCancelable (boolean cancelable) "," Control whether the shown Dialog is cancelable. <br /><br />"
"android.app.DialogFragment.getDialog () "," no description <br /><br />"
"android.app.DialogFragment.dismissAllowingStateLoss ()   Version of dismiss () that uses FragmentTransaction.commitAllowingStateLoss () "," Version of dismiss() that uses FragmentTransaction.commitAllowingStateLoss(). <br /><br />"
"android.app.DialogFragment.setStyle (int style, int theme) "," Call to customize the basic appearance and behavior of the fragment's dialog. <br /><br />"
"android.app.DialogFragment.dump (String prefix, FileDescriptor fd, PrintWriter writer, String[] args) "," Print the Fragments's state into the given stream. <br /><br />"
"android.app.DownloadManager.getUriForDownloadedFile (long id) "," Returns the Uri of the given downloaded file id, if the file is downloaded successfully. <br /><br />"
"android.app.DownloadManager.enqueue (DownloadManager.Request request) "," Enqueue a new download. <br /><br />"
"android.app.DownloadManager.addCompletedDownload (String title, String description, boolean isMediaScannerScannable, String mimeType, String path, long length, boolean showNotification)   Adds a file to the downloads database system, so it could appear in Downloads App  (and thus become eligible for management by the Downloads App) "," Adds a file to the downloads database system, so it could appear in Downloads App (and thus become eligible for management by the Downloads App). <br /><br />"
"android.app.DownloadManager.query (DownloadManager.Query query) "," Query the download manager about downloads that have been requested. <br /><br />"
"android.app.DownloadManager.getMimeTypeForDownloadedFile (long id) "," Returns the media type of the given downloaded file id, if the file was downloaded successfully. <br /><br />"
"android.app.DownloadManager.getRecommendedMaxBytesOverMobile (Context context) "," Returns recommended maximum size, in bytes, of downloads that may go over a mobile connection; or null if there's no recommended limit. <br /><br />"
"android.app.DownloadManager.getMaxBytesOverMobile (Context context) "," Returns maximum size, in bytes, of downloads that may go over a mobile connection; or null if there's no limit <br /><br />"
"android.app.DownloadManager.remove (long... ids) "," Cancel downloads and remove them from the download manager. <br /><br />"
"android.app.DownloadManager.openDownloadedFile (long id) "," Open a downloaded file for reading. <br /><br />"
"android.app.DownloadManager.Query.setFilterById (long... ids) "," Include only the downloads with the given IDs. <br /><br />"
"android.app.DownloadManager.Query.setFilterByStatus (int flags) "," Include only downloads with status matching any the given status flags. <br /><br />"
"android.app.DownloadManager.Request.setDestinationUri (Uri uri) "," Set the local destination for the downloaded file. <br /><br />"
"android.app.DownloadManager.Request.setAllowedNetworkTypes (int flags) "," Restrict the types of networks over which this download may proceed. <br /><br />"
"android.app.DownloadManager.Request.setDestinationInExternalFilesDir (Context context, String dirType, String subPath)   Set the local destination for the downloaded file to a path within the application's external files directory  (as returned by getExternalFilesDir (String) "," Set the local destination for the downloaded file to a path within the application's external files directory (as returned by getExternalFilesDir(String). <br /><br />"
"android.app.DownloadManager.Request.setNotificationVisibility (int visibility) "," Control whether a system notification is posted by the download manager while this download is running or when it is completed. <br /><br />"
"android.app.DownloadManager.Request.allowScanningByMediaScanner ()   If the file to be downloaded is to be scanned by MediaScanner, this method should be called before enqueue (Request) "," If the file to be downloaded is to be scanned by MediaScanner, this method should be called before enqueue(Request) is called. <br /><br />"
"android.app.DownloadManager.Request.setTitle (CharSequence title)   Set the title of this download, to be displayed in notifications  (if enabled) "," Set the title of this download, to be displayed in notifications (if enabled). <br /><br />"
"android.app.DownloadManager.Request.setAllowedOverRoaming (boolean allowed) "," Set whether this download may proceed over a roaming connection. <br /><br />"
"android.app.DownloadManager.Request.setDescription (CharSequence description)   Set a description of this download, to be displayed in notifications  (if enabled) "," Set a description of this download, to be displayed in notifications (if enabled) <br /><br />"
"android.app.DownloadManager.Request.setMimeType (String mimeType) "," Set the MIME content type of this download. <br /><br />"
"android.app.DownloadManager.Request.setVisibleInDownloadsUi (boolean isVisible) "," Set whether this download should be displayed in the system's Downloads UI. <br /><br />"
"android.app.DownloadManager.Request.setDestinationInExternalPublicDir (String dirType, String subPath)   Set the local destination for the downloaded file to a path within the public external storage directory  (as returned by getExternalStoragePublicDirectory (String)) "," Set the local destination for the downloaded file to a path within the public external storage directory (as returned by getExternalStoragePublicDirectory(String)). <br /><br />"
"android.app.DownloadManager.Request.addRequestHeader (String header, String value) "," Add an HTTP header to be included with the download request. <br /><br />"
"android.app.DownloadManager.Request.setAllowedOverMetered (boolean allow) "," Set whether this download may proceed over a metered network connection. <br /><br />"
"android.app.DownloadManager.Request.setShowRunningNotification (boolean show)    This method was deprecated in API level 11. use setNotificationVisibility (int) "," This method was deprecated in API level 11. use setNotificationVisibility(int) <br /><br />"
"android.app.ExpandableListActivity.getExpandableListAdapter () "," Get the ExpandableListAdapter associated with this activity's ExpandableListView. <br /><br />"
"android.app.ExpandableListActivity.onGroupExpand (int groupPosition) "," Override this for receiving callbacks when a group has been expanded. <br /><br />"
"android.app.ExpandableListActivity.setSelectedGroup (int groupPosition) "," Sets the selection to the specified group. <br /><br />"
"android.app.ExpandableListActivity.onChildClick (ExpandableListView parent, View v, int groupPosition, int childPosition, long id) "," Override this for receiving callbacks when a child has been clicked. <br /><br />"
"android.app.ExpandableListActivity.getSelectedPosition ()   Gets the position  (in packed position representation) "," Gets the position (in packed position representation) of the currently selected group or child. <br /><br />"
"android.app.ExpandableListActivity.getExpandableListView () "," Get the activity's expandable list view widget. <br /><br />"
"android.app.ExpandableListActivity.onCreateContextMenu (ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) "," Override this to populate the context menu when an item is long pressed. <br /><br />"
"android.app.ExpandableListActivity.onGroupCollapse (int groupPosition) "," Override this for receiving callbacks when a group has been collapsed. <br /><br />"
"android.app.ExpandableListActivity.onContentChanged ()   Updates the screen state  (current list and other views) "," Updates the screen state (current list and other views) when the content changes. <br /><br />"
"android.app.ExpandableListActivity.setSelectedChild (int groupPosition, int childPosition, boolean shouldExpandGroup) "," Sets the selection to the specified child. <br /><br />"
"android.app.ExpandableListActivity.getSelectedId () "," Gets the ID of the currently selected group or child. <br /><br />"
"android.app.ExpandableListActivity.setListAdapter (ExpandableListAdapter adapter) "," Provide the adapter for the expandable list. <br /><br />"
"android.app.Fragment.getView ()   Get the root view for the fragment's layout  (the one returned by onCreateView (LayoutInflater, ViewGroup, Bundle)) "," Get the root view for the fragment's layout (the one returned by onCreateView(LayoutInflater, ViewGroup, Bundle)), if provided. <br /><br />"
"android.app.Fragment.getTargetRequestCode ()   Return the target request code set by setTargetFragment (Fragment, int) "," Return the target request code set by setTargetFragment(Fragment, int). <br /><br />"
"android.app.Fragment.getExitTransition () "," Returns the Transition that will be used to move Views out of the scene when the fragment is removed, hidden, or detached when not popping the back stack. <br /><br />"
"android.app.Fragment.getTag () "," Get the tag name of the fragment, if specified. <br /><br />"
"android.app.Fragment.getSharedElementEnterTransition () "," Returns the Transition that will be used for shared elements transferred into the content Scene. <br /><br />"
"android.app.Fragment.onPause () "," Called when the Fragment is no longer resumed. <br /><br />"
"android.app.Fragment.getFragmentManager () "," Return the FragmentManager for interacting with fragments associated with this fragment's activity. <br /><br />"
"android.app.Fragment.onSaveInstanceState (Bundle outState) "," Called to ask the fragment to save its current dynamic state, so it can later be reconstructed in a new instance of its process is restarted. <br /><br />"
"android.app.Fragment.hashCode ()   Subclasses can not override hashCode () "," Subclasses can not override hashCode(). <br /><br />"
"android.app.Fragment.instantiate (Context context, String fname)   Like instantiate (Context, String, Bundle) "," Like instantiate(Context, String, Bundle) but with a null argument Bundle. <br /><br />"
"android.app.Fragment.setEnterSharedElementCallback (SharedElementCallback callback) "," When custom transitions are used with Fragments, the enter transition callback is called when this Fragment is attached or detached when not popping the back stack. <br /><br />"
"android.app.Fragment.onStop () "," Called when the Fragment is no longer started. <br /><br />"
"android.app.Fragment.onDestroyView ()   Called when the view previously created by onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called when the view previously created by onCreateView(LayoutInflater, ViewGroup, Bundle) has been detached from the fragment. <br /><br />"
"android.app.Fragment.getRetainInstance () "," no description <br /><br />"
"android.app.Fragment.setExitTransition (Transition transition) "," Sets the Transition that will be used to move Views out of the scene when the fragment is removed, hidden, or detached when not popping the back stack. <br /><br />"
"android.app.Fragment.onDestroy () "," Called when the fragment is no longer in use. <br /><br />"
"android.app.Fragment.getUserVisibleHint () "," no description <br /><br />"
"android.app.Fragment.isRemoving () "," Return true if this fragment is currently being removed from its activity. <br /><br />"
"android.app.Fragment.onInflate (AttributeSet attrs, Bundle savedInstanceState)    This method was deprecated in API level 12. Use onInflate (Activity, AttributeSet, Bundle) "," This method was deprecated in API level 12. Use onInflate(Activity, AttributeSet, Bundle) instead. <br /><br />"
"android.app.Fragment.getTargetFragment ()   Return the target fragment set by setTargetFragment (Fragment, int) "," Return the target fragment set by setTargetFragment(Fragment, int). <br /><br />"
"android.app.Fragment.onResume () "," Called when the fragment is visible to the user and actively running. <br /><br />"
"android.app.Fragment.onContextItemSelected (MenuItem item) "," This hook is called whenever an item in a context menu is selected. <br /><br />"
"android.app.Fragment.setReturnTransition (Transition transition) "," Sets the Transition that will be used to move Views out of the scene when the Fragment is preparing to be removed, hidden, or detached because of popping the back stack. <br /><br />"
"android.app.Fragment.setAllowEnterTransitionOverlap (boolean allow) "," Sets whether the the exit transition and enter transition overlap or not. <br /><br />"
"android.app.Fragment.setRetainInstance (boolean retain)   Control whether a fragment instance is retained across Activity re-creation  (such as from a configuration change) "," Control whether a fragment instance is retained across Activity re-creation (such as from a configuration change). <br /><br />"
"android.app.Fragment.getAllowEnterTransitionOverlap () "," Returns whether the the exit transition and enter transition overlap or not. <br /><br />"
"android.app.Fragment.onCreateContextMenu (ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) "," Called when a context menu for the view is about to be shown. <br /><br />"
"android.app.Fragment.setExitSharedElementCallback (SharedElementCallback callback) "," When custom transitions are used with Fragments, the exit transition callback is called when this Fragment is attached or detached when popping the back stack. <br /><br />"
"android.app.Fragment.onTrimMemory (int level) "," Called when the operating system has determined that it is a good time for a process to trim unneeded memory from its process. <br /><br />"
"android.app.Fragment.onStart () "," Called when the Fragment is visible to the user. <br /><br />"
"android.app.Fragment.onDestroyOptionsMenu () "," Called when this fragment's option menu items are no longer being included in the overall options menu. <br /><br />"
"android.app.Fragment.getText (int resId) "," Return a localized, styled CharSequence from the application's package's default string table. <br /><br />"
"android.app.Fragment.onOptionsItemSelected (MenuItem item) "," This hook is called whenever an item in your options menu is selected. <br /><br />"
"android.app.Fragment.onLowMemory () "," This is called when the overall system is running low on memory, and actively running processes should trim their memory usage. <br /><br />"
"android.app.Fragment.setEnterTransition (Transition transition) "," Sets the Transition that will be used to move Views into the initial scene. <br /><br />"
"android.app.Fragment.onCreate (Bundle savedInstanceState) "," Called to do initial creation of a fragment. <br /><br />"
"android.app.Fragment.getParentFragment () "," Returns the parent Fragment containing this Fragment. <br /><br />"
"android.app.Fragment.startActivityForResult (Intent intent, int requestCode, Bundle options)   Call startActivityForResult (Intent, int, Bundle) "," Call startActivityForResult(Intent, int, Bundle) from the fragment's containing Activity. <br /><br />"
"android.app.Fragment.getId () "," Return the identifier this fragment is known by. <br /><br />"
"android.app.Fragment.getEnterTransition () "," Returns the Transition that will be used to move Views into the initial scene. <br /><br />"
"android.app.Fragment.onCreateOptionsMenu (Menu menu, MenuInflater inflater) "," Initialize the contents of the Activity's standard options menu. <br /><br />"
"android.app.Fragment.startActivity (Intent intent)   Call startActivity (Intent) "," Call startActivity(Intent) from the fragment's containing Activity. <br /><br />"
"android.app.Fragment.onOptionsMenuClosed (Menu menu)   This hook is called whenever the options menu is being closed  (either by the user canceling the menu with the back/menu button, or when an item is selected) "," This hook is called whenever the options menu is being closed (either by the user canceling the menu with the back/menu button, or when an item is selected). <br /><br />"
"android.app.Fragment.registerForContextMenu (View view)   Registers a context menu to be shown for the given view  (multiple views can show the context menu) "," Registers a context menu to be shown for the given view (multiple views can show the context menu). <br /><br />"
"android.app.Fragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Called to have the fragment instantiate its user interface view. <br /><br />"
"android.app.Fragment.getReturnTransition () "," Returns the Transition that will be used to move Views out of the scene when the Fragment is preparing to be removed, hidden, or detached because of popping the back stack. <br /><br />"
"android.app.Fragment.setUserVisibleHint (boolean isVisibleToUser) "," Set a hint to the system about whether this fragment's UI is currently visible to the user. <br /><br />"
"android.app.Fragment.onDetach () "," Called when the fragment is no longer attached to its activity. <br /><br />"
"android.app.Fragment.isVisible () "," Return true if the fragment is currently visible to the user. <br /><br />"
"android.app.Fragment.setAllowReturnTransitionOverlap (boolean allow) "," Sets whether the the return transition and reenter transition overlap or not. <br /><br />"
"android.app.Fragment.unregisterForContextMenu (View view) "," Prevents a context menu to be shown for the given view. <br /><br />"
"android.app.Fragment.onHiddenChanged (boolean hidden)   Called when the hidden state  (as returned by isHidden () "," Called when the hidden state (as returned by isHidden() of the fragment has changed. <br /><br />"
"android.app.Fragment.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.app.Fragment.onConfigurationChanged (Configuration newConfig) "," Called by the system when the device configuration changes while your component is running. <br /><br />"
"android.app.Fragment.setInitialSavedState (Fragment.SavedState state)   Set the initial saved state that this Fragment should restore itself from when first being constructed, as returned by "," Set the initial saved state that this Fragment should restore itself from when first being constructed, as returned by FragmentManager.saveFragmentInstanceState. <br /><br />"
"android.app.Fragment.getResources ()   Return getActivity ().getResources () "," Return getActivity().getResources(). <br /><br />"
"android.app.Fragment.setHasOptionsMenu (boolean hasMenu)   Report that this fragment would like to participate in populating the options menu by receiving a call to onCreateOptionsMenu (Menu, MenuInflater) "," Report that this fragment would like to participate in populating the options menu by receiving a call to onCreateOptionsMenu(Menu, MenuInflater) and related methods. <br /><br />"
"android.app.Fragment.getAllowReturnTransitionOverlap () "," Returns whether the the return transition and reenter transition overlap or not. <br /><br />"
"android.app.Fragment.getReenterTransition () "," Returns the Transition that will be used to move Views in to the scene when returning due to popping a back stack. <br /><br />"
"android.app.Fragment.getString (int resId) "," Return a localized string from the application's package's default string table. <br /><br />"
"android.app.Fragment.startActivityForResult (Intent intent, int requestCode)   Call startActivityForResult (Intent, int) "," Call startActivityForResult(Intent, int) from the fragment's containing Activity. <br /><br />"
"android.app.Fragment.getLoaderManager () "," Return the LoaderManager for this fragment, creating it if needed. <br /><br />"
"android.app.Fragment.isResumed () "," Return true if the fragment is in the resumed state. <br /><br />"
"android.app.Fragment.getChildFragmentManager () "," Return a private FragmentManager for placing and managing Fragments inside of this Fragment. <br /><br />"
"android.app.Fragment.setTargetFragment (Fragment fragment, int requestCode) "," Optional target for this fragment. <br /><br />"
"android.app.Fragment.equals (Object o)   Subclasses can not override equals () "," Subclasses can not override equals(). <br /><br />"
"android.app.Fragment.onActivityCreated (Bundle savedInstanceState) "," Called when the fragment's activity has been created and this fragment's view hierarchy instantiated. <br /><br />"
"android.app.Fragment.onActivityResult (int requestCode, int resultCode, Intent data)   Receive the result from a previous call to startActivityForResult (Intent, int) "," Receive the result from a previous call to startActivityForResult(Intent, int). <br /><br />"
"android.app.Fragment.onViewCreated (View view, Bundle savedInstanceState)   Called immediately after onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called immediately after onCreateView(LayoutInflater, ViewGroup, Bundle) has returned, but before any saved state has been restored in to the view. <br /><br />"
"android.app.Fragment.getString (int resId, Object... formatArgs)   Return a localized formatted string from the application's package's default string table, substituting the format arguments as defined in Formatter and format (String, Object...) "," Return a localized formatted string from the application's package's default string table, substituting the format arguments as defined in Formatter and format(String, Object...). <br /><br />"
"android.app.Fragment.getActivity () "," Return the Activity this fragment is currently associated with. <br /><br />"
"android.app.Fragment.isInLayout () "," Return true if the layout is included as part of an activity view hierarchy via the <fragment> tag. <br /><br />"
"android.app.Fragment.startActivity (Intent intent, Bundle options)   Call startActivity (Intent, Bundle) "," Call startActivity(Intent, Bundle) from the fragment's containing Activity. <br /><br />"
"android.app.Fragment.instantiate (Context context, String fname, Bundle args) "," Create a new instance of a Fragment with the given class name. <br /><br />"
"android.app.Fragment.isAdded () "," Return true if the fragment is currently added to its activity. <br /><br />"
"android.app.Fragment.onCreateAnimator (int transit, boolean enter, int nextAnim) "," Called when a fragment loads an animation. <br /><br />"
"android.app.Fragment.setReenterTransition (Transition transition) "," Sets the Transition that will be used to move Views in to the scene when returning due to popping a back stack. <br /><br />"
"android.app.Fragment.onAttach (Activity activity) "," Called when a fragment is first attached to its activity. <br /><br />"
"android.app.Fragment.setSharedElementReturnTransition (Transition transition) "," Sets the Transition that will be used for shared elements transferred back during a pop of the back stack. <br /><br />"
"android.app.Fragment.isDetached () "," Return true if the fragment has been explicitly detached from the UI. <br /><br />"
"android.app.Fragment.onViewStateRestored (Bundle savedInstanceState) "," Called when all saved state has been restored into the view hierarchy of the fragment. <br /><br />"
"android.app.Fragment.setMenuVisibility (boolean menuVisible) "," Set a hint for whether this fragment's menu should be visible. <br /><br />"
"android.app.Fragment.getSharedElementReturnTransition () "," Return the Transition that will be used for shared elements transferred back during a pop of the back stack. <br /><br />"
"android.app.Fragment.getArguments () "," Return the arguments supplied when the fragment was instantiated, if any. <br /><br />"
"android.app.Fragment.onInflate (Activity activity, AttributeSet attrs, Bundle savedInstanceState) "," Called when a fragment is being created as part of a view layout inflation, typically from setting the content view of an activity. <br /><br />"
"android.app.Fragment.onPrepareOptionsMenu (Menu menu) "," Prepare the Screen's standard options menu to be displayed. <br /><br />"
"android.app.Fragment.isHidden () "," Return true if the fragment has been hidden. <br /><br />"
"android.app.Fragment.setSharedElementEnterTransition (Transition transition) "," Sets the Transition that will be used for shared elements transferred into the content Scene. <br /><br />"
"android.app.Fragment.setArguments (Bundle args) "," Supply the construction arguments for this fragment. <br /><br />"
"android.app.Fragment.dump (String prefix, FileDescriptor fd, PrintWriter writer, String[] args) "," Print the Fragments's state into the given stream. <br /><br />"
"android.app.Fragment.SavedState.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.app.Fragment.SavedState.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.FragmentBreadCrumbs.setParentTitle (CharSequence title, CharSequence shortTitle, View.OnClickListener listener) "," Inserts an optional parent entry at the first position in the breadcrumbs. <br /><br />"
"android.app.FragmentBreadCrumbs.setOnBreadCrumbClickListener (FragmentBreadCrumbs.OnBreadCrumbClickListener listener) "," Sets a listener for clicks on the bread crumbs. <br /><br />"
"android.app.FragmentBreadCrumbs.setMaxVisible (int visibleCrumbs) "," The maximum number of breadcrumbs to show. <br /><br />"
"android.app.FragmentBreadCrumbs.onBackStackChanged () "," Called whenever the contents of the back stack change. <br /><br />"
"android.app.FragmentBreadCrumbs.setTitle (CharSequence title, CharSequence shortTitle) "," Set a custom title for the bread crumbs. <br /><br />"
"android.app.FragmentBreadCrumbs.setActivity (Activity a) "," Attach the bread crumbs to their activity. <br /><br />"
"android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener.onBreadCrumbClick (FragmentManager.BackStackEntry backStack, int flags) "," Called when a bread crumb is clicked. <br /><br />"
"android.app.FragmentManager.BackStackEntry.getName ()   Get the name that was supplied to FragmentTransaction.addToBackStack (String) "," Get the name that was supplied to FragmentTransaction.addToBackStack(String) when creating this entry. <br /><br />"
"android.app.FragmentManager.BackStackEntry.getBreadCrumbShortTitleRes () "," Return the short bread crumb title resource identifier for the entry, or 0 if it does not have one. <br /><br />"
"android.app.FragmentManager.BackStackEntry.getId () "," Return the unique identifier for the entry. <br /><br />"
"android.app.FragmentManager.BackStackEntry.getBreadCrumbTitle () "," Return the full bread crumb title for the entry, or null if it does not have one. <br /><br />"
"android.app.FragmentManager.BackStackEntry.getBreadCrumbTitleRes () "," Return the full bread crumb title resource identifier for the entry, or 0 if it does not have one. <br /><br />"
"android.app.FragmentManager.BackStackEntry.getBreadCrumbShortTitle () "," Return the short bread crumb title for the entry, or null if it does not have one. <br /><br />"
"android.app.FragmentManager.putFragment (Bundle bundle, String key, Fragment fragment) "," Put a reference to a fragment in a Bundle. <br /><br />"
"android.app.FragmentManager.findFragmentById (int id) "," Finds a fragment that was identified by the given id either when inflated from XML or as the container ID when added in a transaction. <br /><br />"
"android.app.FragmentManager.invalidateOptionsMenu () "," Invalidate the attached activity's options menu as necessary. <br /><br />"
"android.app.FragmentManager.removeOnBackStackChangedListener (FragmentManager.OnBackStackChangedListener listener)   Remove a listener that was previously added with addOnBackStackChangedListener (OnBackStackChangedListener) "," Remove a listener that was previously added with addOnBackStackChangedListener(OnBackStackChangedListener). <br /><br />"
"android.app.FragmentManager.getBackStackEntryCount () "," Return the number of entries currently in the back stack. <br /><br />"
"android.app.FragmentManager.popBackStackImmediate ()   Like popBackStack () "," Like popBackStack(), but performs the operation immediately inside of the call. <br /><br />"
"android.app.FragmentManager.popBackStack () "," Pop the top state off the back stack. <br /><br />"
"android.app.FragmentManager.beginTransaction () "," Start a series of edit operations on the Fragments associated with this FragmentManager. <br /><br />"
"android.app.FragmentManager.getFragment (Bundle bundle, String key)   Retrieve the current Fragment instance for a reference previously placed with putFragment (Bundle, String, Fragment) "," Retrieve the current Fragment instance for a reference previously placed with putFragment(Bundle, String, Fragment). <br /><br />"
"android.app.FragmentManager.popBackStackImmediate (String name, int flags)   Like popBackStack (String, int) "," Like popBackStack(String, int), but performs the operation immediately inside of the call. <br /><br />"
"android.app.FragmentManager.popBackStackImmediate (int id, int flags)   Like popBackStack (int, int) "," Like popBackStack(int, int), but performs the operation immediately inside of the call. <br /><br />"
"android.app.FragmentManager.addOnBackStackChangedListener (FragmentManager.OnBackStackChangedListener listener) "," Add a new listener for changes to the fragment back stack. <br /><br />"
"android.app.FragmentManager.popBackStack (String name, int flags) "," Pop the last fragment transition from the manager's fragment back stack. <br /><br />"
"android.app.FragmentManager.popBackStack (int id, int flags) "," Pop all back stack states up to the one with the given identifier. <br /><br />"
"android.app.FragmentManager.isDestroyed ()   Returns true if the final Activity.onDestroy () "," Returns true if the final Activity.onDestroy() call has been made on the FragmentManager's Activity, so this instance is now dead. <br /><br />"
"android.app.FragmentManager.enableDebugLogging (boolean enabled) "," Control whether the framework's internal fragment manager debugging logs are turned on. <br /><br />"
"android.app.FragmentManager.findFragmentByTag (String tag) "," Finds a fragment that was identified by the given tag either when inflated from XML or as supplied when added in a transaction. <br /><br />"
"android.app.FragmentManager.getBackStackEntryAt (int index) "," Return the BackStackEntry at index index in the back stack; entries start index 0 being the bottom of the stack. <br /><br />"
"android.app.FragmentManager.saveFragmentInstanceState (Fragment f) "," Save the current instance state of the given Fragment. <br /><br />"
"android.app.FragmentManager.executePendingTransactions ()   After a FragmentTransaction is committed with FragmentTransaction.commit () "," After a FragmentTransaction is committed with FragmentTransaction.commit(), it is scheduled to be executed asynchronously on the process's main thread. <br /><br />"
"android.app.FragmentManager.dump (String prefix, FileDescriptor fd, PrintWriter writer, String[] args) "," Print the FragmentManager's state into the given stream. <br /><br />"
"android.app.FragmentManager.OnBackStackChangedListener.onBackStackChanged () "," Called whenever the contents of the back stack change. <br /><br />"
"android.app.FragmentTransaction.commit () "," Schedules a commit of this transaction. <br /><br />"
"android.app.FragmentTransaction.setBreadCrumbShortTitle (int res) "," Set the short title to show as a bread crumb when this transaction is on the back stack, as used by FragmentBreadCrumbs. <br /><br />"
"android.app.FragmentTransaction.add (int containerViewId, Fragment fragment)   Calls add (int, Fragment, String) "," Calls add(int, Fragment, String) with a null tag. <br /><br />"
"android.app.FragmentTransaction.add (Fragment fragment, String tag)   Calls add (int, Fragment, String) "," Calls add(int, Fragment, String) with a 0 containerViewId. <br /><br />"
"android.app.FragmentTransaction.setCustomAnimations (int enter, int exit, int popEnter, int popExit) "," Set specific animation resources to run for the fragments that are entering and exiting in this transaction. <br /><br />"
"android.app.FragmentTransaction.setBreadCrumbTitle (int res) "," Set the full title to show as a bread crumb when this transaction is on the back stack, as used by FragmentBreadCrumbs. <br /><br />"
"android.app.FragmentTransaction.add (int containerViewId, Fragment fragment, String tag) "," Add a fragment to the activity state. <br /><br />"
"android.app.FragmentTransaction.setBreadCrumbTitle (CharSequence text)   Like setBreadCrumbTitle (int) "," Like setBreadCrumbTitle(int) but taking a raw string; this method is not recommended, as the string can not be changed later if the locale changes. <br /><br />"
"android.app.FragmentTransaction.replace (int containerViewId, Fragment fragment)   Calls replace (int, Fragment, String) "," Calls replace(int, Fragment, String) with a null tag. <br /><br />"
"android.app.FragmentTransaction.detach (Fragment fragment) "," Detach the given fragment from the UI. <br /><br />"
"android.app.FragmentTransaction.addToBackStack (String name) "," Add this transaction to the back stack. <br /><br />"
"android.app.FragmentTransaction.setCustomAnimations (int enter, int exit) "," Set specific animation resources to run for the fragments that are entering and exiting in this transaction. <br /><br />"
"android.app.FragmentTransaction.disallowAddToBackStack ()   Disallow calls to addToBackStack (String) "," Disallow calls to addToBackStack(String). <br /><br />"
"android.app.FragmentTransaction.attach (Fragment fragment)   Re-attach a fragment after it had previously been detached from the UI with detach (Fragment) "," Re-attach a fragment after it had previously been detached from the UI with detach(Fragment). <br /><br />"
"android.app.FragmentTransaction.commitAllowingStateLoss ()   Like commit () "," Like commit() but allows the commit to be executed after an activity's state is saved. <br /><br />"
"android.app.FragmentTransaction.replace (int containerViewId, Fragment fragment, String tag) "," Replace an existing fragment that was added to a container. <br /><br />"
"android.app.FragmentTransaction.setBreadCrumbShortTitle (CharSequence text)   Like setBreadCrumbShortTitle (int) "," Like setBreadCrumbShortTitle(int) but taking a raw string; this method is not recommended, as the string can not be changed later if the locale changes. <br /><br />"
"android.app.FragmentTransaction.addSharedElement (View sharedElement, String name) "," Used with to map a View from a removed or hidden Fragment to a View from a shown or added Fragment. <br /><br />"
"android.app.FragmentTransaction.isEmpty () "," no description <br /><br />"
"android.app.FragmentTransaction.isAddToBackStackAllowed () "," Returns true if this FragmentTransaction is allowed to be added to the back stack. <br /><br />"
"android.app.FragmentTransaction.hide (Fragment fragment) "," Hides an existing fragment. <br /><br />"
"android.app.FragmentTransaction.show (Fragment fragment) "," Shows a previously hidden fragment. <br /><br />"
"android.app.FragmentTransaction.remove (Fragment fragment) "," Remove an existing fragment. <br /><br />"
"android.app.FragmentTransaction.setTransition (int transit) "," Select a standard transition animation for this transaction. <br /><br />"
"android.app.FragmentTransaction.setTransitionStyle (int styleRes) "," Set a custom style resource that will be used for resolving transit animations. <br /><br />"
"android.app.Instrumentation.ActivityMonitor.getLastActivity () "," Retrieve the most recent activity class that was seen by this monitor. <br /><br />"
"android.app.Instrumentation.ActivityMonitor.getResult () "," Retrieve the result associated with this ActivityMonitor, or null if none. <br /><br />"
"android.app.Instrumentation.ActivityMonitor.getHits () "," Retrieve the number of times the monitor has been hit so far. <br /><br />"
"android.app.Instrumentation.ActivityMonitor.isBlocking ()   Check whether this monitor blocks activity starts  (not allowing the actual activity to run) "," Check whether this monitor blocks activity starts (not allowing the actual activity to run) or allows them to execute normally. <br /><br />"
"android.app.Instrumentation.ActivityMonitor.waitForActivity () "," Block until an Activity is created that matches this monitor, returning the resulting activity. <br /><br />"
"android.app.Instrumentation.ActivityMonitor.waitForActivityWithTimeout (long timeOut) "," Block until an Activity is created that matches this monitor, returning the resulting activity or till the timeOut period expires. <br /><br />"
"android.app.Instrumentation.ActivityMonitor.getFilter () "," Retrieve the filter associated with this ActivityMonitor. <br /><br />"
"android.app.Instrumentation.ActivityResult.getResultCode () "," Retrieve the result code contained in this result. <br /><br />"
"android.app.Instrumentation.ActivityResult.getResultData () "," Retrieve the data contained in this result. <br /><br />"
"android.app.Instrumentation.getComponentName () "," Returns complete component name of this instrumentation. <br /><br />"
"android.app.Instrumentation.callActivityOnRestoreInstanceState (Activity activity, Bundle savedInstanceState, PersistableBundle persistentState)   Perform calling of an activity's onRestoreInstanceState (Bundle) "," Perform calling of an activity's onRestoreInstanceState(Bundle) method. <br /><br />"
"android.app.Instrumentation.addMonitor (IntentFilter filter, Instrumentation.ActivityResult result, boolean block)   A convenience wrapper for addMonitor (ActivityMonitor) "," A convenience wrapper for addMonitor(ActivityMonitor) that creates an intent filter matching Instrumentation.ActivityMonitor for you and returns it. <br /><br />"
"android.app.Instrumentation.callActivityOnNewIntent (Activity activity, Intent intent)   Perform calling of an activity's onNewIntent (Intent) "," Perform calling of an activity's onNewIntent(Intent) method. <br /><br />"
"android.app.Instrumentation.onException (Object obj, Throwable e) "," This is called whenever the system captures an unhandled exception that was thrown by the application. <br /><br />"
"android.app.Instrumentation.removeMonitor (Instrumentation.ActivityMonitor monitor)   Remove an Instrumentation.ActivityMonitor that was previously added with addMonitor (Instrumentation.ActivityMonitor) "," Remove an Instrumentation.ActivityMonitor that was previously added with addMonitor(Instrumentation.ActivityMonitor). <br /><br />"
"android.app.Instrumentation.sendCharacterSync (int keyCode) "," Higher-level method for sending both the down and up key events for a particular character key code. <br /><br />"
"android.app.Instrumentation.stopAllocCounting () "," no description <br /><br />"
"android.app.Instrumentation.waitForMonitor (Instrumentation.ActivityMonitor monitor) "," Wait for an existing Instrumentation.ActivityMonitor to be hit. <br /><br />"
"android.app.Instrumentation.startAllocCounting () "," no description <br /><br />"
"android.app.Instrumentation.callActivityOnCreate (Activity activity, Bundle icicle)   Perform calling of an activity's onCreate (Bundle) "," Perform calling of an activity's onCreate(Bundle) method. <br /><br />"
"android.app.Instrumentation.newApplication (Class<?> clazz, Context context) "," Perform instantiation of the process's Application object. <br /><br />"
"android.app.Instrumentation.callActivityOnCreate (Activity activity, Bundle icicle, PersistableBundle persistentState)   Perform calling of an activity's onCreate (Bundle) "," Perform calling of an activity's onCreate(Bundle) method. <br /><br />"
"android.app.Instrumentation.onCreate (Bundle arguments) "," Called when the instrumentation is starting, before any application code has been loaded. <br /><br />"
"android.app.Instrumentation.callApplicationOnCreate (Application app)   Perform calling of the application's onCreate () "," Perform calling of the application's onCreate() method. <br /><br />"
"android.app.Instrumentation.onDestroy () "," Called when the instrumented application is stopping, after all of the normal application cleanup has occurred. <br /><br />"
"android.app.Instrumentation.newActivity (ClassLoader cl, String className, Intent intent) "," Perform instantiation of the process's Activity object. <br /><br />"
"android.app.Instrumentation.getContext () "," Return the Context of this instrumentation's package. <br /><br />"
"android.app.Instrumentation.addMonitor (Instrumentation.ActivityMonitor monitor) "," Add a new Instrumentation.ActivityMonitor that will be checked whenever an activity is started. <br /><br />"
"android.app.Instrumentation.callActivityOnPostCreate (Activity activity, Bundle icicle, PersistableBundle persistentState)   Perform calling of an activity's onPostCreate (Bundle) "," Perform calling of an activity's onPostCreate(Bundle) method. <br /><br />"
"android.app.Instrumentation.callActivityOnRestart (Activity activity)   Perform calling of an activity's onRestart () "," Perform calling of an activity's onRestart() method. <br /><br />"
"android.app.Instrumentation.callActivityOnSaveInstanceState (Activity activity, Bundle outState, PersistableBundle outPersistentState)   Perform calling of an activity's onSaveInstanceState (Bundle) "," Perform calling of an activity's onSaveInstanceState(Bundle) method. <br /><br />"
"android.app.Instrumentation.startPerformanceSnapshot () "," no description <br /><br />"
"android.app.Instrumentation.sendKeyDownUpSync (int key) "," Sends an up and down key event sync to the currently focused window. <br /><br />"
"android.app.Instrumentation.getBinderCounts () "," Returns a bundle with the counts for various binder counts for this process. <br /><br />"
"android.app.Instrumentation.startActivitySync (Intent intent) "," Start a new activity and wait for it to begin running before returning. <br /><br />"
"android.app.Instrumentation.onStart () "," Method where the instrumentation thread enters execution. <br /><br />"
"android.app.Instrumentation.callActivityOnRestoreInstanceState (Activity activity, Bundle savedInstanceState)   Perform calling of an activity's onRestoreInstanceState (Bundle) "," Perform calling of an activity's onRestoreInstanceState(Bundle) method. <br /><br />"
"android.app.Instrumentation.invokeContextMenuAction (Activity targetActivity, int id, int flag) "," Show the context menu for the currently focused view and executes a particular context menu item. <br /><br />"
"android.app.Instrumentation.startProfiling ()   This method will start profiling if isProfiling () "," This method will start profiling if isProfiling() returns true. <br /><br />"
"android.app.Instrumentation.waitForIdleSync () "," Synchronously wait for the application to be idle. <br /><br />"
"android.app.Instrumentation.waitForIdle (Runnable recipient)   Schedule a callback for when the application's main thread goes idle  (has no more events to process) "," Schedule a callback for when the application's main thread goes idle (has no more events to process). <br /><br />"
"android.app.Instrumentation.finish (int resultCode, Bundle results) "," Terminate instrumentation of the application. <br /><br />"
"android.app.Instrumentation.sendTrackballEventSync (MotionEvent event) "," Dispatch a trackball event. <br /><br />"
"android.app.Instrumentation.getUiAutomation () "," Gets the UiAutomation instance. <br /><br />"
"android.app.Instrumentation.sendPointerSync (MotionEvent event) "," Dispatch a pointer event. <br /><br />"
"android.app.Instrumentation.callActivityOnPause (Activity activity)   Perform calling of an activity's onPause () "," Perform calling of an activity's onPause() method. <br /><br />"
"android.app.Instrumentation.newActivity (Class<?> clazz, Context context, IBinder token, Application application, Intent intent, ActivityInfo info, CharSequence title, Activity parent, String id, Object lastNonConfigurationInstance) "," Perform instantiation of an Activity object. <br /><br />"
"android.app.Instrumentation.stopProfiling ()   Stops profiling if isProfiling () "," Stops profiling if isProfiling() returns true. <br /><br />"
"android.app.Instrumentation.callActivityOnDestroy (Activity activity) "," no description <br /><br />"
"android.app.Instrumentation.sendKeySync (KeyEvent event) "," Send a key event to the currently focused window/view and wait for it to be processed. <br /><br />"
"android.app.Instrumentation.runOnMainSync (Runnable runner) "," Execute a call on the application's main thread, blocking until it is complete. <br /><br />"
"android.app.Instrumentation.setInTouchMode (boolean inTouch) "," Force the global system in or out of touch mode. <br /><br />"
"android.app.Instrumentation.callActivityOnPostCreate (Activity activity, Bundle icicle)   Perform calling of an activity's onPostCreate (Bundle) "," Perform calling of an activity's onPostCreate(Bundle) method. <br /><br />"
"android.app.Instrumentation.newApplication (ClassLoader cl, String className, Context context) "," Perform instantiation of the process's Application object. <br /><br />"
"android.app.Instrumentation.addMonitor (String cls, Instrumentation.ActivityResult result, boolean block)   A convenience wrapper for addMonitor (ActivityMonitor) "," A convenience wrapper for addMonitor(ActivityMonitor) that creates a class matching Instrumentation.ActivityMonitor for you and returns it. <br /><br />"
"android.app.Instrumentation.callActivityOnUserLeaving (Activity activity)   Perform calling of an activity's onUserLeaveHint () "," Perform calling of an activity's onUserLeaveHint() method. <br /><br />"
"android.app.Instrumentation.callActivityOnResume (Activity activity)   Perform calling of an activity's onResume () "," Perform calling of an activity's onResume() method. <br /><br />"
"android.app.Instrumentation.setAutomaticPerformanceSnapshots () "," no description <br /><br />"
"android.app.Instrumentation.getTargetContext () "," Return a Context for the target application being instrumented. <br /><br />"
"android.app.Instrumentation.sendStringSync (String text) "," Sends the key events corresponding to the text to the app being instrumented. <br /><br />"
"android.app.Instrumentation.start () "," Create and start a new thread in which to run instrumentation. <br /><br />"
"android.app.Instrumentation.sendStatus (int resultCode, Bundle results) "," Provide a status report about the application. <br /><br />"
"android.app.Instrumentation.invokeMenuActionSync (Activity targetActivity, int id, int flag) "," Execute a particular menu item. <br /><br />"
"android.app.Instrumentation.checkMonitorHit (Instrumentation.ActivityMonitor monitor, int minHits) "," Test whether an existing Instrumentation.ActivityMonitor has been hit. <br /><br />"
"android.app.Instrumentation.endPerformanceSnapshot () "," no description <br /><br />"
"android.app.Instrumentation.callActivityOnStart (Activity activity)   Perform calling of an activity's onStart () "," Perform calling of an activity's onStart() method. <br /><br />"
"android.app.Instrumentation.isProfiling () "," Check whether this instrumentation was started with profiling enabled. <br /><br />"
"android.app.Instrumentation.getAllocCounts () "," Returns a bundle with the current results from the allocation counting. <br /><br />"
"android.app.Instrumentation.waitForMonitorWithTimeout (Instrumentation.ActivityMonitor monitor, long timeOut) "," Wait for an existing Instrumentation.ActivityMonitor to be hit till the timeout expires. <br /><br />"
"android.app.Instrumentation.callActivityOnSaveInstanceState (Activity activity, Bundle outState)   Perform calling of an activity's onSaveInstanceState (Bundle) "," Perform calling of an activity's onSaveInstanceState(Bundle) method. <br /><br />"
"android.app.Instrumentation.callActivityOnStop (Activity activity)   Perform calling of an activity's onStop () "," Perform calling of an activity's onStop() method. <br /><br />"
"android.app.IntentService.onStart (Intent intent, int startId)    This method is deprecated. Implement onStartCommand (Intent, int, int) "," This method is deprecated. Implement onStartCommand(Intent, int, int) instead. <br /><br />"
"android.app.IntentService.onStartCommand (Intent intent, int flags, int startId) "," You should not override this method for your IntentService. <br /><br />"
"android.app.IntentService.onCreate () "," Called by the system when the service is first created. <br /><br />"
"android.app.IntentService.onDestroy () "," Called by the system to notify a Service that it is no longer used and is being removed. <br /><br />"
"android.app.IntentService.onBind (Intent intent) "," Unless you provide binding for your service, you don't need to implement this method, because the default implementation returns null. <br /><br />"
"android.app.IntentService.setIntentRedelivery (boolean enabled) "," Sets intent redelivery preferences. <br /><br />"
"android.app.job.JobInfo.Builder.setBackoffCriteria (long initialBackoffMillis, int backoffPolicy) "," Set up the back-off/retry policy. <br /><br />"
"android.app.job.JobInfo.Builder.setRequiresCharging (boolean requiresCharging) "," Specify that to run this job, the device needs to be plugged in. <br /><br />"
"android.app.job.JobInfo.Builder.setMinimumLatency (long minLatencyMillis) "," Specify that this job should be delayed by the provided amount of time. <br /><br />"
"android.app.job.JobInfo.Builder.setRequiresDeviceIdle (boolean requiresDeviceIdle) "," Specify that to run, the job needs the device to be in idle mode. <br /><br />"
"android.app.job.JobInfo.Builder.setRequiredNetworkType (int networkType) "," Set some description of the kind of network type your job needs to have. <br /><br />"
"android.app.job.JobInfo.Builder.setPeriodic (long intervalMillis) "," Specify that this job should recur with the provided interval, not more than once per period. <br /><br />"
"android.app.job.JobInfo.Builder.build () "," no description <br /><br />"
"android.app.job.JobInfo.Builder.setPersisted (boolean isPersisted) "," Set whether or not to persist this job across device reboots. <br /><br />"
"android.app.job.JobInfo.Builder.setOverrideDeadline (long maxExecutionDelayMillis) "," Set deadline which is the maximum scheduling latency. <br /><br />"
"android.app.job.JobInfo.Builder.setExtras (PersistableBundle extras) "," Set optional extras. <br /><br />"
"android.app.job.JobInfo.getIntervalMillis () "," Set to the interval between occurrences of this job. <br /><br />"
"android.app.job.JobInfo.getNetworkType () "," One of NETWORK_TYPE_ANY, NETWORK_TYPE_NONE, or NETWORK_TYPE_UNMETERED. <br /><br />"
"android.app.job.JobInfo.getMinLatencyMillis () "," Set for a job that does not recur periodically, to specify a delay after which the job will be eligible for execution. <br /><br />"
"android.app.job.JobInfo.getBackoffPolicy () "," One of either BACKOFF_POLICY_EXPONENTIAL, or BACKOFF_POLICY_LINEAR, depending on which criteria you set when creating this job. <br /><br />"
"android.app.job.JobInfo.isRequireCharging () "," Whether this job needs the device to be plugged in. <br /><br />"
"android.app.job.JobInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.job.JobInfo.getService () "," Name of the service endpoint that will be called back into by the JobScheduler. <br /><br />"
"android.app.job.JobInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.app.job.JobInfo.isRequireDeviceIdle () "," Whether this job needs the device to be in an Idle maintenance window. <br /><br />"
"android.app.job.JobInfo.getExtras () "," Bundle of extras which are returned to your application at execution time. <br /><br />"
"android.app.job.JobInfo.getMaxExecutionDelayMillis ()   See setOverrideDeadline (long) "," See setOverrideDeadline(long). <br /><br />"
"android.app.job.JobInfo.isPeriodic () "," Track whether this job will repeat with a given period. <br /><br />"
"android.app.job.JobInfo.getId () "," Unique job id associated with this class. <br /><br />"
"android.app.job.JobInfo.getInitialBackoffMillis () "," The amount of time the JobScheduler will wait before rescheduling a failed job. <br /><br />"
"android.app.job.JobInfo.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.app.job.JobInfo.isPersisted () "," no description <br /><br />"
"android.app.job.JobParameters.getExtras () "," no description <br /><br />"
"android.app.job.JobParameters.getJobId () "," no description <br /><br />"
"android.app.job.JobParameters.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.app.job.JobParameters.isOverrideDeadlineExpired ()   For jobs with setOverrideDeadline (long) "," For jobs with setOverrideDeadline(long) set, this provides an easy way to tell whether the job is being executed due to the deadline expiring. <br /><br />"
"android.app.job.JobParameters.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.job.JobScheduler.getAllPendingJobs () "," no description <br /><br />"
"android.app.job.JobScheduler.schedule (JobInfo job) "," no description <br /><br />"
"android.app.job.JobScheduler.cancelAll () "," Cancel all jobs that have been registered with the JobScheduler by this package. <br /><br />"
"android.app.job.JobScheduler.cancel (int jobId) "," Cancel a job that is pending in the JobScheduler. <br /><br />"
"android.app.job.JobService.onStartJob (JobParameters params) "," Override this method with the callback logic for your job. <br /><br />"
"android.app.job.JobService.jobFinished (JobParameters params, boolean needsReschedule) "," Callback to inform the JobManager you've finished executing. <br /><br />"
"android.app.job.JobService.onStopJob (JobParameters params)   This method is called if the system has determined that you must stop execution of your job even before you've had a chance to call jobFinished (JobParameters, boolean) "," This method is called if the system has determined that you must stop execution of your job even before you've had a chance to call jobFinished(JobParameters, boolean). <br /><br />"
"android.app.KeyguardManager.KeyguardLock.reenableKeyguard () "," Reenable the keyguard. <br /><br />"
"android.app.KeyguardManager.KeyguardLock.disableKeyguard () "," Disable the keyguard from showing. <br /><br />"
"android.app.KeyguardManager.OnKeyguardExitResult.onKeyguardExitResult (boolean success) "," no description <br /><br />"
"android.app.LauncherActivity.setTitle (int titleId) "," Change the title associated with this activity. <br /><br />"
"android.app.LauncherActivity.makeListItems () "," Perform the query to determine which results to show and return a list of them. <br /><br />"
"android.app.LauncherActivity.setTitle (CharSequence title) "," Change the title associated with this activity. <br /><br />"
"android.app.LauncherActivity.IconResizer.createIconThumbnail (Drawable icon) "," Returns a Drawable representing the thumbnail of the specified Drawable. <br /><br />"
"android.app.ListActivity.getListView () "," Get the activity's list view widget. <br /><br />"
"android.app.ListActivity.getSelectedItemPosition () "," Get the position of the currently selected list item. <br /><br />"
"android.app.ListActivity.getListAdapter () "," Get the ListAdapter associated with this activity's ListView. <br /><br />"
"android.app.ListActivity.setListAdapter (ListAdapter adapter) "," Provide the cursor for the list view. <br /><br />"
"android.app.ListActivity.getSelectedItemId () "," Get the cursor row ID of the currently selected list item. <br /><br />"
"android.app.ListActivity.setSelection (int position) "," Set the currently selected list item to the specified position with the adapter's data <br /><br />"
"android.app.ListActivity.onContentChanged ()   Updates the screen state  (current list and other views) "," Updates the screen state (current list and other views) when the content changes. <br /><br />"
"android.app.ListFragment.onListItemClick (ListView l, View v, int position, long id) "," This method will be called when an item in the list is selected. <br /><br />"
"android.app.ListFragment.onViewCreated (View view, Bundle savedInstanceState) "," Attach to list view once the view hierarchy has been created. <br /><br />"
"android.app.ListFragment.getListView () "," Get the activity's list view widget. <br /><br />"
"android.app.ListFragment.getSelectedItemPosition () "," Get the position of the currently selected list item. <br /><br />"
"android.app.ListFragment.getListAdapter () "," Get the ListAdapter associated with this activity's ListView. <br /><br />"
"android.app.ListFragment.onDestroyView () "," Detach from list view. <br /><br />"
"android.app.ListFragment.setListShownNoAnimation (boolean shown)   Like setListShown (boolean) "," Like setListShown(boolean), but no animation is used when transitioning from the previous state. <br /><br />"
"android.app.ListFragment.setListShown (boolean shown) "," Control whether the list is being displayed. <br /><br />"
"android.app.ListFragment.setListAdapter (ListAdapter adapter) "," Provide the cursor for the list view. <br /><br />"
"android.app.ListFragment.setEmptyText (CharSequence text) "," The default content for a ListFragment has a TextView that can be shown when the list is empty. <br /><br />"
"android.app.ListFragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Provide default implementation to return a simple list view. <br /><br />"
"android.app.ListFragment.getSelectedItemId () "," Get the cursor row ID of the currently selected list item. <br /><br />"
"android.app.ListFragment.setSelection (int position) "," Set the currently selected list item to the specified position with the adapter's data <br /><br />"
"android.app.LoaderManager.enableDebugLogging (boolean enabled) "," Control whether the framework's internal loader manager debugging logs are turned on. <br /><br />"
"android.app.LoaderManager.destroyLoader (int id) "," Stops and removes the loader with the given ID. <br /><br />"
"android.app.LoaderManager.restartLoader (int id, Bundle args, LoaderCallbacks<D> callback)   Starts a new or restarts an existing Loader in this manager, registers the callbacks to it, and  (if the activity/fragment is currently started) "," Starts a new or restarts an existing Loader in this manager, registers the callbacks to it, and (if the activity/fragment is currently started) starts loading it. <br /><br />"
"android.app.LoaderManager.initLoader (int id, Bundle args, LoaderCallbacks<D> callback) "," Ensures a loader is initialized and active. <br /><br />"
"android.app.LoaderManager.getLoader (int id) "," Return the Loader with the given id or null if no matching Loader is found. <br /><br />"
"android.app.LoaderManager.dump (String prefix, FileDescriptor fd, PrintWriter writer, String[] args) "," Print the LoaderManager's state into the given stream. <br /><br />"
"android.app.LoaderManager.LoaderCallbacks<D>.onLoadFinished (Loader<D> loader, D data) "," Called when a previously created loader has finished its load. <br /><br />"
"android.app.LoaderManager.LoaderCallbacks<D>.onLoaderReset (Loader<D> loader) "," Called when a previously created loader is being reset, and thus making its data unavailable. <br /><br />"
"android.app.LoaderManager.LoaderCallbacks<D>.onCreateLoader (int id, Bundle args) "," Instantiate and return a new Loader for the given ID. <br /><br />"
"android.app.LocalActivityManager.dispatchCreate (Bundle state)   Restore a state that was previously returned by saveInstanceState () "," Restore a state that was previously returned by saveInstanceState(). <br /><br />"
"android.app.LocalActivityManager.dispatchDestroy (boolean finishing)   Called by the container activity in its onDestroy () "," Called by the container activity in its onDestroy() so that LocalActivityManager can perform the corresponding action on the activities it holds. <br /><br />"
"android.app.LocalActivityManager.getActivity (String id) "," Return the Activity object associated with a string ID. <br /><br />"
"android.app.LocalActivityManager.getCurrentId () "," Retrieve the ID of the activity that is currently running. <br /><br />"
"android.app.LocalActivityManager.dispatchPause (boolean finishing)   Called by the container activity in its onPause () "," Called by the container activity in its onPause() so that LocalActivityManager can perform the corresponding action on the activities it holds. <br /><br />"
"android.app.LocalActivityManager.startActivity (String id, Intent intent) "," Start a new activity running in the group. <br /><br />"
"android.app.LocalActivityManager.getCurrentActivity () "," Retrieve the Activity that is currently running. <br /><br />"
"android.app.LocalActivityManager.removeAllActivities ()   Remove all activities from this LocalActivityManager, performing an onDestroy () "," Remove all activities from this LocalActivityManager, performing an onDestroy() on any that are currently instantiated. <br /><br />"
"android.app.LocalActivityManager.saveInstanceState () "," Retrieve the state of all activities known by the group. <br /><br />"
"android.app.LocalActivityManager.dispatchResume ()   Called by the container activity in its onResume () "," Called by the container activity in its onResume() so that LocalActivityManager can perform the corresponding action on the activities it holds. <br /><br />"
"android.app.LocalActivityManager.dispatchStop ()   Called by the container activity in its onStop () "," Called by the container activity in its onStop() so that LocalActivityManager can perform the corresponding action on the activities it holds. <br /><br />"
"android.app.LocalActivityManager.destroyActivity (String id, boolean finish) "," Destroy the activity associated with a particular id. <br /><br />"
"android.app.MediaRouteActionProvider.onPerformDefaultAction () "," Performs an optional default action. <br /><br />"
"android.app.MediaRouteActionProvider.onCreateActionView ()    This method is deprecated. use onCreateActionView (MenuItem) "," This method is deprecated. use onCreateActionView(MenuItem) <br /><br />"
"android.app.MediaRouteActionProvider.setExtendedSettingsClickListener (View.OnClickListener listener) "," no description <br /><br />"
"android.app.MediaRouteActionProvider.overridesItemVisibility ()   The result of this method determines whether or not isVisible () "," The result of this method determines whether or not isVisible() will be used by the MenuItem this ActionProvider is bound to help determine its visibility. <br /><br />"
"android.app.MediaRouteActionProvider.isVisible ()   If overridesItemVisibility () "," If overridesItemVisibility() returns true, the return value of this method will help determine the visibility of the MenuItem this ActionProvider is bound to. <br /><br />"
"android.app.MediaRouteActionProvider.onCreateActionView (MenuItem item) "," Factory method called by the Android framework to create new action views. <br /><br />"
"android.app.MediaRouteActionProvider.setRouteTypes (int types) "," Sets the types of routes that will be shown in the media route chooser dialog launched by this button. <br /><br />"
"android.app.MediaRouteButton.performLongClick () "," Call this view's OnLongClickListener, if it is defined. <br /><br />"
"android.app.MediaRouteButton.jumpDrawablesToCurrentState ()   Call Drawable.jumpToCurrentState () "," Call Drawable.jumpToCurrentState() on all Drawable objects associated with this view. <br /><br />"
"android.app.MediaRouteButton.onDetachedFromWindow () "," This is called when the view is detached from a window. <br /><br />"
"android.app.MediaRouteButton.setVisibility (int visibility) "," Set the enabled state of this view. <br /><br />"
"android.app.MediaRouteButton.performClick () "," Call this view's OnClickListener, if it is defined. <br /><br />"
"android.app.MediaRouteButton.onAttachedToWindow () "," This is called when the view is attached to a window. <br /><br />"
"android.app.MediaRouteButton.setExtendedSettingsClickListener (View.OnClickListener listener) "," no description <br /><br />"
"android.app.MediaRouteButton.showDialog () "," Show the route chooser or controller dialog. <br /><br />"
"android.app.MediaRouteButton.getRouteTypes () "," Gets the media route types for filtering the routes that the user can select using the media route chooser dialog. <br /><br />"
"android.app.MediaRouteButton.setRouteTypes (int types) "," Sets the types of routes that will be shown in the media route chooser dialog launched by this button. <br /><br />"
"android.app.NativeActivity.onInputQueueDestroyed (InputQueue queue) "," Called when the given InputQueue is no longer associated with the thread and thus not dispatching events. <br /><br />"
"android.app.NativeActivity.onConfigurationChanged (Configuration newConfig) "," Called by the system when the device configuration changes while your activity is running. <br /><br />"
"android.app.NativeActivity.onWindowFocusChanged (boolean hasFocus) "," Called when the current Window of the activity gains or loses focus. <br /><br />"
"android.app.NativeActivity.onInputQueueCreated (InputQueue queue) "," Called when the given InputQueue is now associated with the thread making this call, so it can start receiving events from it. <br /><br />"
"android.app.NativeActivity.surfaceRedrawNeeded (SurfaceHolder holder) "," Called when the application needs to redraw the content of its surface, after it is resized or for some other reason. <br /><br />"
"android.app.NativeActivity.surfaceChanged (SurfaceHolder holder, int format, int width, int height)   This is called immediately after any structural changes  (format or size) "," This is called immediately after any structural changes (format or size) have been made to the surface. <br /><br />"
"android.app.NativeActivity.surfaceDestroyed (SurfaceHolder holder) "," This is called immediately before a surface is being destroyed. <br /><br />"
"android.app.NativeActivity.surfaceCreated (SurfaceHolder holder) "," This is called immediately after the surface is first created. <br /><br />"
"android.app.NativeActivity.onGlobalLayout () "," Callback method to be invoked when the global layout state or the visibility of views within the view tree changes <br /><br />"
"android.app.NativeActivity.onLowMemory () "," This is called when the overall system is running low on memory, and actively running processes should trim their memory usage. <br /><br />"
"android.app.Notification.Action.Builder.getExtras () "," Get the metadata Bundle used by this Builder. <br /><br />"
"android.app.Notification.Action.Builder.addRemoteInput (RemoteInput remoteInput) "," Add an input to be collected from the user when this action is sent. <br /><br />"
"android.app.Notification.Action.Builder.addExtras (Bundle extras) "," Merge additional metadata into this builder. <br /><br />"
"android.app.Notification.Action.Builder.extend (Notification.Action.Extender extender) "," Apply an extender to this action builder. <br /><br />"
"android.app.Notification.Action.Builder.build () "," Combine all of the options that have been set and return a new Notification.Action object. <br /><br />"
"android.app.Notification.Action.Extender.extend (Notification.Action.Builder builder) "," Apply this extender to a notification action builder. <br /><br />"
"android.app.Notification.Action.getExtras () "," Get additional metadata carried around with this Action. <br /><br />"
"android.app.Notification.Action.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.app.Notification.Action.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.app.Notification.Action.getRemoteInputs () "," Get the list of inputs to be collected from the user when this action is sent. <br /><br />"
"android.app.Notification.Action.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.Notification.Action.WearableExtender.setAvailableOffline (boolean availableOffline) "," Set whether this action is available when the wearable device is not connected to a companion device. <br /><br />"
"android.app.Notification.Action.WearableExtender.getInProgressLabel () "," Get the label to display while the wearable is preparing to automatically execute the action. <br /><br />"
"android.app.Notification.Action.WearableExtender.getCancelLabel () "," Get the label to display to cancel the action. <br /><br />"
"android.app.Notification.Action.WearableExtender.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.app.Notification.Action.WearableExtender.setInProgressLabel (CharSequence label) "," Set a label to display while the wearable is preparing to automatically execute the action. <br /><br />"
"android.app.Notification.Action.WearableExtender.getConfirmLabel () "," Get the label to display to confirm that the action should be executed. <br /><br />"
"android.app.Notification.Action.WearableExtender.setConfirmLabel (CharSequence label) "," Set a label to display to confirm that the action should be executed. <br /><br />"
"android.app.Notification.Action.WearableExtender.setCancelLabel (CharSequence label) "," Set a label to display to cancel the action. <br /><br />"
"android.app.Notification.Action.WearableExtender.isAvailableOffline () "," Get whether this action is available when the wearable device is not connected to a companion device. <br /><br />"
"android.app.Notification.Action.WearableExtender.extend (Notification.Action.Builder builder) "," Apply wearable extensions to a notification action that is being built. <br /><br />"
"android.app.Notification.BigPictureStyle.setBigContentTitle (CharSequence title) "," Overrides ContentTitle in the big form of the template. <br /><br />"
"android.app.Notification.BigPictureStyle.bigPicture (Bitmap b) "," Provide the bitmap to be used as the payload for the BigPicture notification. <br /><br />"
"android.app.Notification.BigPictureStyle.setSummaryText (CharSequence cs) "," Set the first line of text after the detail section in the big form of the template. <br /><br />"
"android.app.Notification.BigPictureStyle.bigLargeIcon (Bitmap b) "," Override the large icon when the big notification is shown. <br /><br />"
"android.app.Notification.BigTextStyle.setBigContentTitle (CharSequence title) "," Overrides ContentTitle in the big form of the template. <br /><br />"
"android.app.Notification.BigTextStyle.bigText (CharSequence cs) "," Provide the longer text to be displayed in the big form of the template in place of the content text. <br /><br />"
"android.app.Notification.BigTextStyle.setSummaryText (CharSequence cs) "," Set the first line of text after the detail section in the big form of the template. <br /><br />"
"android.app.Notification.Builder.setSubText (CharSequence text) "," Set the third line of text in the platform notification template. <br /><br />"
"android.app.Notification.Builder.setVibrate (long[] pattern) "," Set the vibration pattern to use. <br /><br />"
"android.app.Notification.Builder.setNumber (int number) "," Set the large number at the right-hand side of the notification. <br /><br />"
"android.app.Notification.Builder.setStyle (Notification.Style style) "," Add a rich notification style to be applied at build time. <br /><br />"
"android.app.Notification.Builder.setOnlyAlertOnce (boolean onlyAlertOnce) "," Set this flag if you would only like the sound, vibrate and ticker to be played if the notification is not already showing. <br /><br />"
"android.app.Notification.Builder.setContentTitle (CharSequence title) "," Set the first line of text in the platform notification template. <br /><br />"
"android.app.Notification.Builder.setDefaults (int defaults) "," Set which notification properties will be inherited from system defaults. <br /><br />"
"android.app.Notification.Builder.setAutoCancel (boolean autoCancel) "," Make this notification automatically dismissed when the user touches it. <br /><br />"
"android.app.Notification.Builder.setSound (Uri sound) "," Set the sound to play. <br /><br />"
"android.app.Notification.Builder.build () "," Combine all of the options that have been set and return a new Notification object. <br /><br />"
"android.app.Notification.Builder.setSmallIcon (int icon, int level)   A variant of setSmallIcon (int) "," A variant of setSmallIcon(int) that takes an additional level parameter for when the icon is a LevelListDrawable. <br /><br />"
"android.app.Notification.Builder.setLights (int argb, int onMs, int offMs)   Set the desired color for the indicator LED on the device, as well as the blink duty cycle  (specified in milliseconds) "," Set the desired color for the indicator LED on the device, as well as the blink duty cycle (specified in milliseconds). <br /><br />"
"android.app.Notification.Builder.setGroup (String groupKey) "," Set this notification to be part of a group of notifications sharing the same key. <br /><br />"
"android.app.Notification.Builder.setExtras (Bundle extras) "," Set metadata for this notification. <br /><br />"
"android.app.Notification.Builder.setPriority (int pri) "," Set the priority of this notification. <br /><br />"
"android.app.Notification.Builder.setWhen (long when)   Add a timestamp pertaining to the notification  (usually the time the event occurred) "," Add a timestamp pertaining to the notification (usually the time the event occurred). <br /><br />"
"android.app.Notification.Builder.setCategory (String category) "," Set the notification category. <br /><br />"
"android.app.Notification.Builder.setContentInfo (CharSequence info) "," A small piece of additional information pertaining to this notification. <br /><br />"
"android.app.Notification.Builder.setProgress (int max, int progress, boolean indeterminate) "," Set the progress this notification represents. <br /><br />"
"android.app.Notification.Builder.addPerson (String uri) "," Add a person that is relevant to this notification. <br /><br />"
"android.app.Notification.Builder.addAction (Notification.Action action) "," Add an action to this notification. <br /><br />"
"android.app.Notification.Builder.addExtras (Bundle extras) "," Merge additional metadata into this notification. <br /><br />"
"android.app.Notification.Builder.setPublicVersion (Notification n) "," Supply a replacement Notification whose contents should be shown in insecure contexts (i.e. <br /><br />"
"android.app.Notification.Builder.setVisibility (int visibility) "," Specify the value of visibility. <br /><br />"
"android.app.Notification.Builder.setSound (Uri sound, AudioAttributes audioAttributes) "," Set the sound to play, along with specific audio attributes to use during playback. <br /><br />"
"android.app.Notification.Builder.setContentText (CharSequence text) "," Set the second line of text in the platform notification template. <br /><br />"
"android.app.Notification.Builder.getNotification ()    This method was deprecated in API level 16. Use build () "," This method was deprecated in API level 16. Use build() instead. <br /><br />"
"android.app.Notification.Builder.extend (Notification.Extender extender) "," Apply an extender to this notification builder. <br /><br />"
"android.app.Notification.Builder.addAction (int icon, CharSequence title, PendingIntent intent) "," Add an action to this notification. <br /><br />"
"android.app.Notification.Builder.setDeleteIntent (PendingIntent intent) "," Supply a PendingIntent to send when the notification is cleared explicitly by the user. <br /><br />"
"android.app.Notification.Builder.setSound (Uri sound, int streamType)    This method was deprecated in API level 21. use setSound (Uri, AudioAttributes) "," This method was deprecated in API level 21. use setSound(Uri, AudioAttributes) instead. <br /><br />"
"android.app.Notification.Builder.setShowWhen (boolean show)   Control whether the timestamp set with "," Control whether the timestamp set with setWhen is shown in the content view. <br /><br />"
"android.app.Notification.Builder.setGroupSummary (boolean isGroupSummary) "," Set this notification to be the group summary for a group of notifications. <br /><br />"
"android.app.Notification.Builder.setLargeIcon (Bitmap icon)   Add a large icon to the notification  (and the ticker on some devices) "," Add a large icon to the notification (and the ticker on some devices). <br /><br />"
"android.app.Notification.Builder.setTicker (CharSequence tickerText, RemoteViews views)   Obsolete version of setTicker (CharSequence) "," Obsolete version of setTicker(CharSequence). <br /><br />"
"android.app.Notification.Builder.getExtras () "," Get the current metadata Bundle used by this notification Builder. <br /><br />"
"android.app.Notification.Builder.setSortKey (String sortKey) "," Set a sort key that orders this notification among other notifications from the same package. <br /><br />"
"android.app.Notification.Builder.setColor (int argb) "," Sets color. <br /><br />"
"android.app.Notification.Builder.setTicker (CharSequence tickerText) "," Set the 'ticker' text which is sent to accessibility services. <br /><br />"
"android.app.Notification.Builder.setContentIntent (PendingIntent intent) "," Supply a PendingIntent to be sent when the notification is clicked. <br /><br />"
"android.app.Notification.Builder.setSmallIcon (int icon) "," Set the small icon resource, which will be used to represent the notification in the status bar. <br /><br />"
"android.app.Notification.Builder.setContent (RemoteViews views) "," Supply a custom RemoteViews to use instead of the platform template. <br /><br />"
"android.app.Notification.Builder.setFullScreenIntent (PendingIntent intent, boolean highPriority) "," An intent to launch instead of posting the notification to the status bar. <br /><br />"
"android.app.Notification.Builder.setLocalOnly (boolean localOnly) "," Set whether or not this notification should not bridge to other devices. <br /><br />"
"android.app.Notification.Builder.setUsesChronometer (boolean b) "," Show the when field as a stopwatch. <br /><br />"
"android.app.Notification.Builder.setOngoing (boolean ongoing) "," Set whether this is an 'ongoing' notification. <br /><br />"
"android.app.Notification.Extender.extend (Notification.Builder builder) "," Apply this extender to a notification builder. <br /><br />"
"android.app.Notification.setLatestEventInfo (Context context, CharSequence contentTitle, CharSequence contentText, PendingIntent contentIntent) "," This method was deprecated in API level 11. Use Notification.Builder instead. <br /><br />"
"android.app.Notification.writeToParcel (Parcel parcel, int flags) "," Flatten this notification from a parcel. <br /><br />"
"android.app.Notification.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.app.Notification.getSortKey () "," Get a sort key that orders this notification among other notifications from the same package. <br /><br />"
"android.app.Notification.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.Notification.getGroup () "," Get the key used to group this notification into a cluster or stack with other notifications on devices which support such rendering. <br /><br />"
"android.app.Notification.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.app.Notification.InboxStyle.setBigContentTitle (CharSequence title) "," Overrides ContentTitle in the big form of the template. <br /><br />"
"android.app.Notification.InboxStyle.setSummaryText (CharSequence cs) "," Set the first line of text after the detail section in the big form of the template. <br /><br />"
"android.app.Notification.InboxStyle.addLine (CharSequence cs) "," Append a line to the digest section of the Inbox notification. <br /><br />"
"android.app.Notification.MediaStyle.setShowActionsInCompactView (int... actions)   Request up to 3 actions  (by index in the order of addition) "," Request up to 3 actions (by index in the order of addition) to be shown in the compact notification view. <br /><br />"
"android.app.Notification.MediaStyle.setMediaSession (MediaSession.Token token) "," Attach a MediaSession.Token to this Notification to provide additional playback information and control to the SystemUI. <br /><br />"
"android.app.Notification.Style.setBuilder (Notification.Builder builder) "," no description <br /><br />"
"android.app.Notification.Style.build ()   Calls build () "," Calls build() on the Builder this Style is attached to. <br /><br />"
"android.app.Notification.WearableExtender.getContentIcon () "," Get an icon that goes with the content of this notification. <br /><br />"
"android.app.Notification.WearableExtender.extend (Notification.Builder builder) "," Apply wearable extensions to a notification that is being built. <br /><br />"
"android.app.Notification.WearableExtender.setContentIconGravity (int contentIconGravity) "," Set the gravity that the content icon should have within the notification display. <br /><br />"
"android.app.Notification.WearableExtender.getStartScrollBottom () "," Get whether the scrolling position for the contents of this notification should start at the bottom of the contents instead of the top when the contents are too long to display within the screen. <br /><br />"
"android.app.Notification.WearableExtender.setDisplayIntent (PendingIntent intent) "," Set an intent to launch inside of an activity view when displaying this notification. <br /><br />"
"android.app.Notification.WearableExtender.setContentAction (int actionIndex) "," Set an action from this notification's actions to be clickable with the content of this notification. <br /><br />"
"android.app.Notification.WearableExtender.setHintScreenTimeout (int timeout) "," Set a hint that the screen should remain on for at least this duration when this notification is displayed on the screen. <br /><br />"
"android.app.Notification.WearableExtender.getContentIntentAvailableOffline () "," Get whether the content intent is available when the wearable device is not connected to a companion device. <br /><br />"
"android.app.Notification.WearableExtender.setStartScrollBottom (boolean startScrollBottom) "," Set whether the scrolling position for the contents of this notification should start at the bottom of the contents instead of the top when the contents are too long to display within the screen. <br /><br />"
"android.app.Notification.WearableExtender.setCustomContentHeight (int height) "," Set the custom height in pixels for the display of this notification's content. <br /><br />"
"android.app.Notification.WearableExtender.setHintHideIcon (boolean hintHideIcon) "," Set a hint that this notification's icon should not be displayed. <br /><br />"
"android.app.Notification.WearableExtender.addPage (Notification page) "," Add an additional page of content to display with this notification. <br /><br />"
"android.app.Notification.WearableExtender.setCustomSizePreset (int sizePreset) "," Set the custom size preset for the display of this notification out of the available presets found in Notification.WearableExtender, e.g. <br /><br />"
"android.app.Notification.WearableExtender.addPages (List< Notification> pages) "," Add additional pages of content to display with this notification. <br /><br />"
"android.app.Notification.WearableExtender.getHintShowBackgroundOnly () "," Get a visual hint that only the background image of this notification should be displayed, and other semantic content should be hidden. <br /><br />"
"android.app.Notification.WearableExtender.setGravity (int gravity) "," Set the gravity that this notification should have within the available viewport space. <br /><br />"
"android.app.Notification.WearableExtender.getCustomContentHeight () "," Get the custom height in pixels for the display of this notification's content. <br /><br />"
"android.app.Notification.WearableExtender.getHintAvoidBackgroundClipping () "," Get a hint that this notification's background should not be clipped if possible, and should instead be resized to fully display on the screen, retaining the aspect ratio of the image. <br /><br />"
"android.app.Notification.WearableExtender.getDisplayIntent () "," Get the intent to launch inside of an activity view when displaying this notification. <br /><br />"
"android.app.Notification.WearableExtender.getHintScreenTimeout () "," Get the duration, in milliseconds, that the screen should remain on for when this notification is displayed. <br /><br />"
"android.app.Notification.WearableExtender.addActions (List< Notification.Action> actions) "," Adds wearable actions to this notification. <br /><br />"
"android.app.Notification.WearableExtender.addAction (Notification.Action action) "," Add a wearable action to this notification. <br /><br />"
"android.app.Notification.WearableExtender.setContentIntentAvailableOffline (boolean contentIntentAvailableOffline) "," Set whether the content intent is available when the wearable device is not connected to a companion device. <br /><br />"
"android.app.Notification.WearableExtender.getCustomSizePreset () "," Get the custom size preset for the display of this notification out of the available presets found in Notification.WearableExtender, e.g. <br /><br />"
"android.app.Notification.WearableExtender.clearPages () "," Clear all additional pages present on this builder. <br /><br />"
"android.app.Notification.WearableExtender.setContentIcon (int icon) "," Set an icon that goes with the content of this notification. <br /><br />"
"android.app.Notification.WearableExtender.getContentAction () "," Get the index of the notification action, if any, that was specified as being clickable with the content of this notification. <br /><br />"
"android.app.Notification.WearableExtender.getPages () "," Get the array of additional pages of content for displaying this notification. <br /><br />"
"android.app.Notification.WearableExtender.setHintShowBackgroundOnly (boolean hintShowBackgroundOnly) "," Set a visual hint that only the background image of this notification should be displayed, and other semantic content should be hidden. <br /><br />"
"android.app.Notification.WearableExtender.setHintAvoidBackgroundClipping (boolean hintAvoidBackgroundClipping) "," Set a hint that this notification's background should not be clipped if possible, and should instead be resized to fully display on the screen, retaining the aspect ratio of the image. <br /><br />"
"android.app.Notification.WearableExtender.getContentIconGravity () "," Get the gravity that the content icon should have within the notification display. <br /><br />"
"android.app.Notification.WearableExtender.getGravity () "," Get the gravity that this notification should have within the available viewport space. <br /><br />"
"android.app.Notification.WearableExtender.getActions () "," Get the wearable actions present on this notification. <br /><br />"
"android.app.Notification.WearableExtender.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.app.Notification.WearableExtender.getHintHideIcon () "," Get a hint that this notification's icon should not be displayed. <br /><br />"
"android.app.Notification.WearableExtender.setBackground (Bitmap background) "," Set a background image to be displayed behind the notification content. <br /><br />"
"android.app.Notification.WearableExtender.getBackground () "," Get a background image to be displayed behind the notification content. <br /><br />"
"android.app.Notification.WearableExtender.clearActions () "," Clear all wearable actions present on this builder. <br /><br />"
"android.app.NotificationManager.notify (int id, Notification notification) "," Post a notification to be shown in the status bar. <br /><br />"
"android.app.NotificationManager.cancel (String tag, int id) "," Cancel a previously shown notification. <br /><br />"
"android.app.NotificationManager.cancel (int id) "," Cancel a previously shown notification. <br /><br />"
"android.app.NotificationManager.cancelAll () "," Cancel all previously shown notifications. <br /><br />"
"android.app.NotificationManager.notify (String tag, int id, Notification notification) "," Post a notification to be shown in the status bar. <br /><br />"
"android.app.PendingIntent.getCreatorUid () "," Return the uid of the application that created this PendingIntent, that is the identity under which you will actually be sending the Intent. <br /><br />"
"android.app.PendingIntent.send (Context context, int code, Intent intent) "," Perform the operation associated with this PendingIntent, allowing the caller to specify information about the Intent to use. <br /><br />"
"android.app.PendingIntent.send (int code) "," Perform the operation associated with this PendingIntent. <br /><br />"
"android.app.PendingIntent.getIntentSender () "," Retrieve a IntentSender object that wraps the existing sender of the PendingIntent <br /><br />"
"android.app.PendingIntent.getBroadcast (Context context, int requestCode, Intent intent, int flags)   Retrieve a PendingIntent that will perform a broadcast, like calling Context.sendBroadcast () "," Retrieve a PendingIntent that will perform a broadcast, like calling Context.sendBroadcast(). <br /><br />"
"android.app.PendingIntent.getCreatorUserHandle () "," Return the user handle of the application that created this PendingIntent, that is the user under which you will actually be sending the Intent. <br /><br />"
"android.app.PendingIntent.getService (Context context, int requestCode, Intent intent, int flags)   Retrieve a PendingIntent that will start a service, like calling Context.startService () "," Retrieve a PendingIntent that will start a service, like calling Context.startService(). <br /><br />"
"android.app.PendingIntent.getTargetPackage ()    This method was deprecated in API level 17. Renamed to getCreatorPackage () "," This method was deprecated in API level 17. Renamed to getCreatorPackage(). <br /><br />"
"android.app.PendingIntent.writePendingIntentOrNullToParcel (PendingIntent sender, Parcel out) "," Convenience function for writing either a PendingIntent or null pointer to a Parcel. <br /><br />"
"android.app.PendingIntent.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.app.PendingIntent.getActivity (Context context, int requestCode, Intent intent, int flags, Bundle options)   Retrieve a PendingIntent that will start a new activity, like calling Context.startActivity (Intent) "," Retrieve a PendingIntent that will start a new activity, like calling Context.startActivity(Intent). <br /><br />"
"android.app.PendingIntent.getActivity (Context context, int requestCode, Intent intent, int flags)   Retrieve a PendingIntent that will start a new activity, like calling Context.startActivity (Intent) "," Retrieve a PendingIntent that will start a new activity, like calling Context.startActivity(Intent). <br /><br />"
"android.app.PendingIntent.readPendingIntentOrNullFromParcel (Parcel in) "," Convenience function for reading either a Messenger or null pointer from a Parcel. <br /><br />"
"android.app.PendingIntent.cancel () "," Cancel a currently active PendingIntent. <br /><br />"
"android.app.PendingIntent.equals (Object otherObj) "," Comparison operator on two PendingIntent objects, such that true is returned then they both represent the same operation from the same package. <br /><br />"
"android.app.PendingIntent.getActivities (Context context, int requestCode, Intent[] intents, int flags, Bundle options)   Like getActivity (Context, int, Intent, int) "," Like getActivity(Context, int, Intent, int), but allows an array of Intents to be supplied. <br /><br />"
"android.app.PendingIntent.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.PendingIntent.getCreatorPackage () "," Return the package name of the application that created this PendingIntent, that is the identity under which you will actually be sending the Intent. <br /><br />"
"android.app.PendingIntent.send (Context context, int code, Intent intent, PendingIntent.OnFinished onFinished, Handler handler) "," Perform the operation associated with this PendingIntent, allowing the caller to specify information about the Intent to use and be notified when the send has completed. <br /><br />"
"android.app.PendingIntent.getActivities (Context context, int requestCode, Intent[] intents, int flags)   Like getActivity (Context, int, Intent, int) "," Like getActivity(Context, int, Intent, int), but allows an array of Intents to be supplied. <br /><br />"
"android.app.PendingIntent.send () "," Perform the operation associated with this PendingIntent. <br /><br />"
"android.app.PendingIntent.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.app.PendingIntent.send (Context context, int code, Intent intent, PendingIntent.OnFinished onFinished, Handler handler, String requiredPermission) "," Perform the operation associated with this PendingIntent, allowing the caller to specify information about the Intent to use and be notified when the send has completed. <br /><br />"
"android.app.PendingIntent.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.app.PendingIntent.send (int code, PendingIntent.OnFinished onFinished, Handler handler) "," Perform the operation associated with this PendingIntent, allowing the caller to be notified when the send has completed. <br /><br />"
"android.app.PendingIntent.OnFinished.onSendFinished (PendingIntent pendingIntent, Intent intent, int resultCode, String resultData, Bundle resultExtras) "," Called when a send operation as completed. <br /><br />"
"android.app.Presentation.getResources () "," Gets the Resources that should be used to inflate the layout of this presentation. <br /><br />"
"android.app.Presentation.show ()   Inherited from show () "," Inherited from show(). <br /><br />"
"android.app.Presentation.getDisplay () "," Gets the Display that this presentation appears on. <br /><br />"
"android.app.Presentation.onDisplayRemoved () "," Called by the system when the Display to which the presentation is attached has been removed. <br /><br />"
"android.app.Presentation.onDisplayChanged () "," Called by the system when the properties of the Display to which the presentation is attached have changed. <br /><br />"
"android.app.ProgressDialog.getSecondaryProgress () "," no description <br /><br />"
"android.app.ProgressDialog.setMessage (CharSequence message) "," no description <br /><br />"
"android.app.ProgressDialog.setIndeterminate (boolean indeterminate) "," no description <br /><br />"
"android.app.ProgressDialog.show (Context context, CharSequence title, CharSequence message) "," no description <br /><br />"
"android.app.ProgressDialog.show (Context context, CharSequence title, CharSequence message, boolean indeterminate) "," no description <br /><br />"
"android.app.ProgressDialog.setProgressNumberFormat (String format) "," Change the format of the small text showing current and maximum units of progress. <br /><br />"
"android.app.ProgressDialog.getMax () "," no description <br /><br />"
"android.app.ProgressDialog.getProgress () "," no description <br /><br />"
"android.app.ProgressDialog.setProgressStyle (int style) "," no description <br /><br />"
"android.app.ProgressDialog.onStart () "," Called when the dialog is starting. <br /><br />"
"android.app.ProgressDialog.setIndeterminateDrawable (Drawable d) "," no description <br /><br />"
"android.app.ProgressDialog.setProgress (int value) "," no description <br /><br />"
"android.app.ProgressDialog.setProgressPercentFormat (NumberFormat format) "," Change the format of the small text showing the percentage of progress. <br /><br />"
"android.app.ProgressDialog.show (Context context, CharSequence title, CharSequence message, boolean indeterminate, boolean cancelable) "," no description <br /><br />"
"android.app.ProgressDialog.show (Context context, CharSequence title, CharSequence message, boolean indeterminate, boolean cancelable, DialogInterface.OnCancelListener cancelListener) "," no description <br /><br />"
"android.app.ProgressDialog.setProgressDrawable (Drawable d) "," no description <br /><br />"
"android.app.ProgressDialog.incrementProgressBy (int diff) "," no description <br /><br />"
"android.app.ProgressDialog.isIndeterminate () "," no description <br /><br />"
"android.app.ProgressDialog.setMax (int max) "," no description <br /><br />"
"android.app.ProgressDialog.setSecondaryProgress (int secondaryProgress) "," no description <br /><br />"
"android.app.ProgressDialog.incrementSecondaryProgressBy (int diff) "," no description <br /><br />"
"android.app.RemoteInput.Builder.getExtras () "," Get the metadata Bundle used by this Builder. <br /><br />"
"android.app.RemoteInput.Builder.addExtras (Bundle extras) "," Merge additional metadata into this builder. <br /><br />"
"android.app.RemoteInput.Builder.setLabel (CharSequence label) "," Set a label to be displayed to the user when collecting this input. <br /><br />"
"android.app.RemoteInput.Builder.setChoices (CharSequence[] choices) "," Specifies choices available to the user to satisfy this input. <br /><br />"
"android.app.RemoteInput.Builder.build () "," Combine all of the options that have been set and return a new RemoteInput object. <br /><br />"
"android.app.RemoteInput.Builder.setAllowFreeFormInput (boolean allowFreeFormInput) "," Specifies whether the user can provide arbitrary values. <br /><br />"
"android.app.RemoteInput.getExtras () "," Get additional metadata carried around with this remote input. <br /><br />"
"android.app.RemoteInput.addResultsToIntent (RemoteInput[] remoteInputs, Intent intent, Bundle results) "," Populate an intent object with the results gathered from remote input. <br /><br />"
"android.app.RemoteInput.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.app.RemoteInput.getResultsFromIntent (Intent intent) "," Get the remote input results bundle from an intent. <br /><br />"
"android.app.RemoteInput.getLabel () "," Get the label to display to users when collecting this input. <br /><br />"
"android.app.RemoteInput.getAllowFreeFormInput () "," Get whether or not users can provide an arbitrary value for input. <br /><br />"
"android.app.RemoteInput.getResultKey ()   Get the key that the result of this input will be set in from the Bundle returned by getResultsFromIntent (Intent) "," Get the key that the result of this input will be set in from the Bundle returned by getResultsFromIntent(Intent) when the PendingIntent is sent. <br /><br />"
"android.app.RemoteInput.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.RemoteInput.getChoices () "," Get possible input choices. <br /><br />"
"android.app.SearchableInfo.getVoiceLanguageModeId () "," Gets the resource id of the voice search language model string. <br /><br />"
"android.app.SearchableInfo.getInputType () "," Gets the input type as specified in the searchable attributes. <br /><br />"
"android.app.SearchableInfo.getSuggestThreshold () "," Gets the suggestion threshold. <br /><br />"
"android.app.SearchableInfo.getSuggestPackage () "," Gets the name of the package where the suggestion provider lives, or null. <br /><br />"
"android.app.SearchableInfo.getImeOptions () "," Gets the input method options specified in the searchable attributes. <br /><br />"
"android.app.SearchableInfo.getSearchActivity () "," Gets the component name of the searchable activity. <br /><br />"
"android.app.SearchableInfo.queryAfterZeroResults () "," Checks whether this searchable activity should be queried for suggestions if a prefix of the query has returned no results. <br /><br />"
"android.app.SearchableInfo.getSuggestIntentData () "," Gets the optional intent data for use with these suggestions. <br /><br />"
"android.app.SearchableInfo.getSuggestIntentAction () "," Gets the optional intent action for use with these suggestions. <br /><br />"
"android.app.SearchableInfo.autoUrlDetect () "," Checks whether this searchable activity has auto URL detection turned on. <br /><br />"
"android.app.SearchableInfo.getVoiceMaxResults () "," The maximum number of voice recognition results to return. <br /><br />"
"android.app.SearchableInfo.getVoiceLanguageId () "," Gets the resource id of the spoken language to recognize in voice search. <br /><br />"
"android.app.SearchableInfo.getHintId () "," Gets the resource id of the hint text. <br /><br />"
"android.app.SearchableInfo.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.app.SearchableInfo.getSuggestSelection () "," Gets the selection for obtaining search suggestions. <br /><br />"
"android.app.SearchableInfo.shouldRewriteQueryFromData () "," Checks whether the text in the query field should come from the suggestion intent data. <br /><br />"
"android.app.SearchableInfo.getSuggestPath () "," Gets the content provider path for obtaining search suggestions. <br /><br />"
"android.app.SearchableInfo.getVoiceSearchLaunchRecognizer () "," Checks if voice search should start in-app search. <br /><br />"
"android.app.SearchableInfo.getVoicePromptTextId () "," Gets the resource id of the voice prompt text string. <br /><br />"
"android.app.SearchableInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.SearchableInfo.getVoiceSearchLaunchWebSearch () "," Checks if voice search should start web search. <br /><br />"
"android.app.SearchableInfo.shouldRewriteQueryFromText () "," Checks whether the text in the query field should come from the suggestion title. <br /><br />"
"android.app.SearchableInfo.getSuggestAuthority () "," Gets the search suggestion content provider authority. <br /><br />"
"android.app.SearchableInfo.shouldIncludeInGlobalSearch () "," Checks whether the searchable should be included in global search. <br /><br />"
"android.app.SearchableInfo.getSettingsDescriptionId () "," Gets the resource id of the description string to use for this source in system search settings, or 0 if none has been specified. <br /><br />"
"android.app.SearchableInfo.getVoiceSearchEnabled () "," Checks if the searchable activity wants the voice search button to be shown. <br /><br />"
"android.app.SearchManager.triggerSearch (String query, ComponentName launchActivity, Bundle appSearchData)   Similar to startSearch (String, boolean, ComponentName, Bundle, boolean) "," Similar to startSearch(String, boolean, ComponentName, Bundle, boolean) but actually fires off the search query after invoking the search dialog. <br /><br />"
"android.app.SearchManager.onDismiss (DialogInterface dialog) "," This method was deprecated in API level 4. This method is an obsolete internal implementation detail. Do not use. <br /><br />"
"android.app.SearchManager.getSearchableInfo (ComponentName componentName) "," Gets information about a searchable activity. <br /><br />"
"android.app.SearchManager.getGlobalSearchActivity () "," Gets the name of the global search activity. <br /><br />"
"android.app.SearchManager.stopSearch () "," Terminate search UI. <br /><br />"
"android.app.SearchManager.onCancel (DialogInterface dialog) "," This method was deprecated in API level 4. This method is an obsolete internal implementation detail. Do not use. <br /><br />"
"android.app.SearchManager.startSearch (String initialQuery, boolean selectInitialQuery, ComponentName launchActivity, Bundle appSearchData, boolean globalSearch) "," Launch search UI. <br /><br />"
"android.app.SearchManager.setOnCancelListener (SearchManager.OnCancelListener listener) "," Set or clear the callback that will be invoked whenever the search UI is canceled. <br /><br />"
"android.app.SearchManager.setOnDismissListener (SearchManager.OnDismissListener listener) "," Set or clear the callback that will be invoked whenever the search UI is dismissed. <br /><br />"
"android.app.SearchManager.getSearchablesInGlobalSearch () "," Returns a list of the searchable activities that can be included in global search. <br /><br />"
"android.app.SearchManager.OnCancelListener.onCancel () "," This method will be called when the search UI is canceled. <br /><br />"
"android.app.SearchManager.OnDismissListener.onDismiss () "," This method will be called when the search UI is dismissed. <br /><br />"
"android.app.Service.stopSelf () "," Stop the service, if it was previously started. <br /><br />"
"android.app.Service.onTaskRemoved (Intent rootIntent) "," This is called if the service is currently running and the user has removed a task that comes from the service's application. <br /><br />"
"android.app.Service.stopSelfResult (int startId) "," Stop the service if the most recent time it was started was startId. <br /><br />"
"android.app.Service.onCreate () "," Called by the system when the service is first created. <br /><br />"
"android.app.Service.onStart (Intent intent, int startId)    This method was deprecated in API level 5. Implement onStartCommand (Intent, int, int) "," This method was deprecated in API level 5. Implement onStartCommand(Intent, int, int) instead. <br /><br />"
"android.app.Service.onUnbind (Intent intent) "," Called when all clients have disconnected from a particular interface published by the service. <br /><br />"
"android.app.Service.stopForeground (boolean removeNotification) "," Remove this service from foreground state, allowing it to be killed if more memory is needed. <br /><br />"
"android.app.Service.stopSelf (int startId)   Old version of stopSelfResult (int) "," Old version of stopSelfResult(int) that doesn't return a result. <br /><br />"
"android.app.Service.onStartCommand (Intent intent, int flags, int startId)   Called by the system every time a client explicitly starts the service by calling startService (Intent) "," Called by the system every time a client explicitly starts the service by calling startService(Intent), providing the arguments it supplied and a unique integer token representing the start request. <br /><br />"
"android.app.Service.onTrimMemory (int level) "," Called when the operating system has determined that it is a good time for a process to trim unneeded memory from its process. <br /><br />"
"android.app.Service.onBind (Intent intent) "," Return the communication channel to the service. <br /><br />"
"android.app.Service.startForeground (int id, Notification notification) "," Make this service run in the foreground, supplying the ongoing notification to be shown to the user while in this state. <br /><br />"
"android.app.Service.onLowMemory () "," This is called when the overall system is running low on memory, and actively running processes should trim their memory usage. <br /><br />"
"android.app.Service.onConfigurationChanged (Configuration newConfig) "," Called by the system when the device configuration changes while your component is running. <br /><br />"
"android.app.Service.onRebind (Intent intent)   Called when new clients have connected to the service, after it had previously been notified that all had disconnected in its onUnbind (Intent) "," Called when new clients have connected to the service, after it had previously been notified that all had disconnected in its onUnbind(Intent). <br /><br />"
"android.app.Service.onDestroy () "," Called by the system to notify a Service that it is no longer used and is being removed. <br /><br />"
"android.app.Service.getApplication () "," Return the application that owns this service. <br /><br />"
"android.app.SharedElementCallback.onMapSharedElements (List< String> names, Map< String,  View> sharedElements) "," Lets the SharedElementCallback adjust the mapping of shared element names to Views. <br /><br />"
"android.app.SharedElementCallback.onCreateSnapshotView (Context context, Parcelable snapshot)   Reconstitutes a snapshot View from a Parcelable returned in onCaptureSharedElementSnapshot (android.view.View, android.graphics.Matrix, android.graphics.RectF) to be used in onSharedElementStart (java.util.List, java.util.List, java.util.List) and onSharedElementEnd (java.util.List, java.util.List, java.util.List) "," Reconstitutes a snapshot View from a Parcelable returned in onCaptureSharedElementSnapshot(android.view.View, android.graphics.Matrix, android.graphics.RectF) to be used in onSharedElementStart(java.util.List, java.util.List, java.util.List) and onSharedElementEnd(java.util.List, java.util.List, java.util.List). <br /><br />"
"android.app.SharedElementCallback.onRejectSharedElements (List< View> rejectedSharedElements)   Called after onMapSharedElements (java.util.List, java.util.Map) "," Called after onMapSharedElements(java.util.List, java.util.Map) when transferring shared elements in. <br /><br />"
"android.app.SharedElementCallback.onSharedElementEnd (List< String> sharedElementNames, List< View> sharedElements, List< View> sharedElementSnapshots) "," Called after the end state is set for the shared element, but before the end state is captured by the shared element transition. <br /><br />"
"android.app.SharedElementCallback.onSharedElementStart (List< String> sharedElementNames, List< View> sharedElements, List< View> sharedElementSnapshots) "," Called immediately after the start state is set for the shared element. <br /><br />"
"android.app.SharedElementCallback.onCaptureSharedElementSnapshot (View sharedElement, Matrix viewToGlobalMatrix, RectF screenBounds)   Creates a snapshot of a shared element to be used by the remote Activity and reconstituted with onCreateSnapshotView (android.content.Context, android.os.Parcelable) "," Creates a snapshot of a shared element to be used by the remote Activity and reconstituted with onCreateSnapshotView(android.content.Context, android.os.Parcelable). <br /><br />"
"android.app.TabActivity.setDefaultTab (String tag) "," Sets the default tab that is the first tab highlighted. <br /><br />"
"android.app.TabActivity.getTabWidget () "," Returns the TabWidget the activity is using to draw the actual tabs. <br /><br />"
"android.app.TabActivity.getTabHost () "," Returns the TabHost the activity is using to host its tabs. <br /><br />"
"android.app.TabActivity.setDefaultTab (int index) "," Sets the default tab that is the first tab highlighted. <br /><br />"
"android.app.TabActivity.onContentChanged ()   Updates the screen state  (current list and other views) "," Updates the screen state (current list and other views) when the content changes. <br /><br />"
"android.app.TaskStackBuilder.getIntentCount () "," no description <br /><br />"
"android.app.TaskStackBuilder.getIntents () "," Return an array containing the intents added to this builder. <br /><br />"
"android.app.TaskStackBuilder.addParentStack (ComponentName sourceActivityName)   Add the activity parent chain as specified by the parentActivityName attribute of the activity  (or activity-alias) "," Add the activity parent chain as specified by the parentActivityName attribute of the activity (or activity-alias) element in the application's manifest to the task stack builder. <br /><br />"
"android.app.TaskStackBuilder.addNextIntent (Intent nextIntent) "," Add a new Intent to the task stack. <br /><br />"
"android.app.TaskStackBuilder.getPendingIntent (int requestCode, int flags, Bundle options) "," Obtain a PendingIntent for launching the task constructed by this builder so far. <br /><br />"
"android.app.TaskStackBuilder.startActivities (Bundle options) "," Start the task stack constructed by this builder. <br /><br />"
"android.app.TaskStackBuilder.addNextIntentWithParentStack (Intent nextIntent) "," Add a new Intent with the resolved chain of parents for the target activity to the task stack. <br /><br />"
"android.app.TaskStackBuilder.create (Context context) "," Return a new TaskStackBuilder for launching a fresh task stack consisting of a series of activities. <br /><br />"
"android.app.TaskStackBuilder.getPendingIntent (int requestCode, int flags) "," Obtain a PendingIntent for launching the task constructed by this builder so far. <br /><br />"
"android.app.TaskStackBuilder.addParentStack (Class<?> sourceActivityClass)   Add the activity parent chain as specified by the parentActivityName attribute of the activity  (or activity-alias) "," Add the activity parent chain as specified by the parentActivityName attribute of the activity (or activity-alias) element in the application's manifest to the task stack builder. <br /><br />"
"android.app.TaskStackBuilder.editIntentAt (int index) "," Return the intent at the specified index for modification. <br /><br />"
"android.app.TaskStackBuilder.startActivities () "," Start the task stack constructed by this builder. <br /><br />"
"android.app.TaskStackBuilder.addParentStack (Activity sourceActivity)   Add the activity parent chain as specified by the getParentActivityIntent () method of the activity specified and the parentActivityName attributes of each successive activity  (or activity-alias) "," Add the activity parent chain as specified by the getParentActivityIntent() method of the activity specified and the parentActivityName attributes of each successive activity (or activity-alias) element in the application's manifest to the task stack builder. <br /><br />"
"android.app.TimePickerDialog.onSaveInstanceState () "," Saves the state of the dialog into a bundle. <br /><br />"
"android.app.TimePickerDialog.onClick (DialogInterface dialog, int which) "," This method will be invoked when a button in the dialog is clicked. <br /><br />"
"android.app.TimePickerDialog.onTimeChanged (TimePicker view, int hourOfDay, int minute) "," no description <br /><br />"
"android.app.TimePickerDialog.onRestoreInstanceState (Bundle savedInstanceState) "," Restore the state of the dialog from a previously saved bundle. <br /><br />"
"android.app.TimePickerDialog.updateTime (int hourOfDay, int minuteOfHour) "," Sets the current time. <br /><br />"
"android.app.TimePickerDialog.OnTimeSetListener.onTimeSet (TimePicker view, int hourOfDay, int minute) "," no description <br /><br />"
"android.app.UiAutomation.AccessibilityEventFilter.accept (AccessibilityEvent event) "," Callback for determining whether an event is accepted or it is filtered out. <br /><br />"
"android.app.UiAutomation.clearWindowAnimationFrameStats () "," Clears the window animation rendering statistics. <br /><br />"
"android.app.UiAutomation.setOnAccessibilityEventListener (UiAutomation.OnAccessibilityEventListener listener) "," Sets a callback for observing the stream of AccessibilityEvents. <br /><br />"
"android.app.UiAutomation.getServiceInfo () "," Gets the an AccessibilityServiceInfo describing this UiAutomation. <br /><br />"
"android.app.UiAutomation.takeScreenshot () "," Takes a screenshot. <br /><br />"
"android.app.UiAutomation.waitForIdle (long idleTimeoutMillis, long globalTimeoutMillis) "," Waits for the accessibility event stream to become idle, which is not to have received an accessibility event within idleTimeoutMillis. <br /><br />"
"android.app.UiAutomation.setRotation (int rotation) "," Sets the device rotation. <br /><br />"
"android.app.UiAutomation.getRootInActiveWindow () "," Gets the root AccessibilityNodeInfo in the active window. <br /><br />"
"android.app.UiAutomation.injectInputEvent (InputEvent event, boolean sync) "," A method for injecting an arbitrary input event. <br /><br />"
"android.app.UiAutomation.performGlobalAction (int action) "," Performs a global action. <br /><br />"
"android.app.UiAutomation.setRunAsMonkey (boolean enable) "," Sets whether this UiAutomation to run in a 'monkey' mode. <br /><br />"
"android.app.UiAutomation.getWindowAnimationFrameStats () "," Gets the window animation frame statistics. <br /><br />"
"android.app.UiAutomation.getWindows () "," Gets the windows on the screen. <br /><br />"
"android.app.UiAutomation.executeAndWaitForEvent (Runnable command, UiAutomation.AccessibilityEventFilter filter, long timeoutMillis) "," Executes a command and waits for a specific accessibility event up to a given wait timeout. <br /><br />"
"android.app.UiAutomation.getWindowContentFrameStats (int windowId) "," Gets the frame statistics for a given window. <br /><br />"
"android.app.UiAutomation.executeShellCommand (String command) "," Executes a shell command. <br /><br />"
"android.app.UiAutomation.clearWindowContentFrameStats (int windowId) "," Clears the frame statistics for the content of a given window. <br /><br />"
"android.app.UiAutomation.setServiceInfo (AccessibilityServiceInfo info) "," Sets the AccessibilityServiceInfo that describes how this UiAutomation will be handled by the platform accessibility layer. <br /><br />"
"android.app.UiAutomation.findFocus (int focus) "," Find the view that has the specified focus type. <br /><br />"
"android.app.UiAutomation.OnAccessibilityEventListener.onAccessibilityEvent (AccessibilityEvent event) "," Callback for receiving an AccessibilityEvent. <br /><br />"
"android.app.UiModeManager.setNightMode (int mode) "," Sets the night mode. <br /><br />"
"android.app.UiModeManager.disableCarMode (int flags) "," Turn off special mode if currently in car mode. <br /><br />"
"android.app.UiModeManager.enableCarMode (int flags) "," Force device into car mode, like it had been placed in the car dock. <br /><br />"
"android.app.UiModeManager.getNightMode () "," Returns the currently configured night mode. <br /><br />"
"android.app.UiModeManager.getCurrentModeType () "," Return the current running mode type. <br /><br />"
"android.app.usage.ConfigurationStats.getLastTimeStamp () "," Get the end of the time range this ConfigurationStats represents, measured in milliseconds since the epoch. <br /><br />"
"android.app.usage.ConfigurationStats.getConfiguration () "," no description <br /><br />"
"android.app.usage.ConfigurationStats.getTotalTimeActive () "," Get the total time this configuration was active, measured in milliseconds. <br /><br />"
"android.app.usage.ConfigurationStats.getActivationCount () "," Get the number of times this configuration was active. <br /><br />"
"android.app.usage.ConfigurationStats.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.app.usage.ConfigurationStats.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.usage.ConfigurationStats.getLastTimeActive () "," Get the last time this configuration was active, measured in milliseconds since the epoch. <br /><br />"
"android.app.usage.ConfigurationStats.getFirstTimeStamp () "," Get the beginning of the time range this ConfigurationStats represents, measured in milliseconds since the epoch. <br /><br />"
"android.app.usage.UsageEvents.Event.getClassName () "," The class name of the source of this event. <br /><br />"
"android.app.usage.UsageEvents.Event.getPackageName () "," The package name of the source of this event. <br /><br />"
"android.app.usage.UsageEvents.Event.getEventType () "," The event type. <br /><br />"
"android.app.usage.UsageEvents.Event.getTimeStamp () "," The time at which this event occurred, measured in milliseconds since the epoch. <br /><br />"
"android.app.usage.UsageEvents.Event.getConfiguration () "," Returns a Configuration for this event if the event is of type CONFIGURATION_CHANGE, otherwise it returns null. <br /><br />"
"android.app.usage.UsageEvents.hasNextEvent ()   Returns whether or not there are more events to read using getNextEvent (android.app.usage.UsageEvents.Event) "," Returns whether or not there are more events to read using getNextEvent(android.app.usage.UsageEvents.Event). <br /><br />"
"android.app.usage.UsageEvents.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.app.usage.UsageEvents.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.usage.UsageEvents.getNextEvent (UsageEvents.Event eventOut) "," Retrieve the next UsageEvents.Event from the collection and put the resulting data into eventOut. <br /><br />"
"android.app.usage.UsageStats.getLastTimeStamp () "," Get the end of the time range this UsageStats represents, measured in milliseconds since the epoch. <br /><br />"
"android.app.usage.UsageStats.getPackageName () "," no description <br /><br />"
"android.app.usage.UsageStats.add (UsageStats right) "," Add the statistics from the right UsageStats to the left. <br /><br />"
"android.app.usage.UsageStats.getTotalTimeInForeground () "," Get the total time this package spent in the foreground, measured in milliseconds. <br /><br />"
"android.app.usage.UsageStats.getLastTimeUsed () "," Get the last time this package was used, measured in milliseconds since the epoch. <br /><br />"
"android.app.usage.UsageStats.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.app.usage.UsageStats.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.usage.UsageStats.getFirstTimeStamp () "," Get the beginning of the time range this UsageStats represents, measured in milliseconds since the epoch. <br /><br />"
"android.app.usage.UsageStatsManager.queryConfigurations (int intervalType, long beginTime, long endTime) "," Gets the hardware configurations the device was in for the given time range, aggregated by the specified interval. <br /><br />"
"android.app.usage.UsageStatsManager.queryUsageStats (int intervalType, long beginTime, long endTime) "," Gets application usage stats for the given time range, aggregated by the specified interval. <br /><br />"
"android.app.usage.UsageStatsManager.queryAndAggregateUsageStats (long beginTime, long endTime)   A convenience method that queries for all stats in the given range  (using the best interval for that range) "," A convenience method that queries for all stats in the given range (using the best interval for that range), merges the resulting data, and keys it by package name. <br /><br />"
"android.app.usage.UsageStatsManager.queryEvents (long beginTime, long endTime) "," Query for events in the given time range. <br /><br />"
"android.app.WallpaperInfo.loadLabel (PackageManager pm) "," Load the user-displayed label for this wallpaper. <br /><br />"
"android.app.WallpaperInfo.getPackageName () "," Return the .apk package that implements this wallpaper. <br /><br />"
"android.app.WallpaperInfo.dump (Printer pw, String prefix) "," no description <br /><br />"
"android.app.WallpaperInfo.getServiceInfo () "," Return the raw information about the Service implementing this wallpaper. <br /><br />"
"android.app.WallpaperInfo.loadDescription (PackageManager pm) "," Return a brief summary of this wallpaper's behavior. <br /><br />"
"android.app.WallpaperInfo.getComponent () "," Return the component of the service that implements this wallpaper. <br /><br />"
"android.app.WallpaperInfo.loadThumbnail (PackageManager pm) "," Load the thumbnail image for this wallpaper. <br /><br />"
"android.app.WallpaperInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.app.WallpaperInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.app.WallpaperInfo.getSettingsActivity () "," Return the class name of an activity that provides a settings UI for the wallpaper. <br /><br />"
"android.app.WallpaperInfo.loadAuthor (PackageManager pm)   Return a string indicating the author (s) "," Return a string indicating the author(s) of this wallpaper. <br /><br />"
"android.app.WallpaperInfo.writeToParcel (Parcel dest, int flags) "," Used to package this object into a Parcel. <br /><br />"
"android.app.WallpaperInfo.getServiceName () "," Return the class name of the service component that implements this wallpaper. <br /><br />"
"android.app.WallpaperInfo.loadIcon (PackageManager pm) "," Load the user-displayed icon for this wallpaper. <br /><br />"
"android.app.WallpaperManager.getFastDrawable ()   Like getDrawable () "," Like getDrawable(), but the returned Drawable has a number of limitations to reduce its overhead as much as possible. <br /><br />"
"android.app.WallpaperManager.getInstance (Context context) "," Retrieve a WallpaperManager associated with the given Context. <br /><br />"
"android.app.WallpaperManager.setWallpaperOffsetSteps (float xStep, float yStep) "," For applications that use multiple virtual screens showing a wallpaper, specify the step size between virtual screens. <br /><br />"
"android.app.WallpaperManager.setResource (int resid) "," Change the current system wallpaper to the bitmap in the given resource. <br /><br />"
"android.app.WallpaperManager.getDesiredMinimumWidth () "," Returns the desired minimum width for the wallpaper. <br /><br />"
"android.app.WallpaperManager.getDrawable () "," Retrieve the current system wallpaper; if no wallpaper is set, the system built-in static wallpaper is returned. <br /><br />"
"android.app.WallpaperManager.sendWallpaperCommand (IBinder windowToken, String action, int x, int y, int z, Bundle extras) "," Send an arbitrary command to the current active wallpaper. <br /><br />"
"android.app.WallpaperManager.getBuiltInDrawable (int outWidth, int outHeight, boolean scaleToFit, float horizontalAlignment, float verticalAlignment) "," Returns a drawable for the system built-in static wallpaper. <br /><br />"
"android.app.WallpaperManager.getBuiltInDrawable () "," Returns a drawable for the system built-in static wallpaper . <br /><br />"
"android.app.WallpaperManager.clear () "," Remove any currently set wallpaper, reverting to the system's built-in wallpaper. <br /><br />"
"android.app.WallpaperManager.clearWallpaperOffsets (IBinder windowToken)   Clear the offsets previously associated with this window through setWallpaperOffsets (IBinder, float, float) "," Clear the offsets previously associated with this window through setWallpaperOffsets(IBinder, float, float). <br /><br />"
"android.app.WallpaperManager.getDesiredMinimumHeight () "," Returns the desired minimum height for the wallpaper. <br /><br />"
"android.app.WallpaperManager.hasResourceWallpaper (int resid) "," Return whether any users are currently set to use the wallpaper with the given resource ID. <br /><br />"
"android.app.WallpaperManager.suggestDesiredDimensions (int minimumWidth, int minimumHeight) "," For use only by the current home application, to specify the size of wallpaper it would like to use. <br /><br />"
"android.app.WallpaperManager.setWallpaperOffsets (IBinder windowToken, float xOffset, float yOffset) "," Set the position of the current wallpaper within any larger space, when that wallpaper is visible behind the given window. <br /><br />"
"android.app.WallpaperManager.setStream (InputStream data) "," Change the current system wallpaper to a specific byte stream. <br /><br />"
"android.app.WallpaperManager.peekDrawable () "," Retrieve the current system wallpaper; if there is no wallpaper set, a null pointer is returned. <br /><br />"
"android.app.WallpaperManager.getWallpaperInfo () "," If the current wallpaper is a live wallpaper component, return the information about that wallpaper. <br /><br />"
"android.app.WallpaperManager.setBitmap (Bitmap bitmap) "," Change the current system wallpaper to a bitmap. <br /><br />"
"android.app.WallpaperManager.peekFastDrawable ()   Like getFastDrawable () "," Like getFastDrawable(), but if there is no wallpaper set, a null pointer is returned. <br /><br />"
"android.app.WallpaperManager.forgetLoadedWallpaper () "," Remove all internal references to the last loaded wallpaper. <br /><br />"
"android.app.WallpaperManager.getCropAndSetWallpaperIntent (Uri imageUri) "," Gets an Intent that will launch an activity that crops the given image and sets the device's wallpaper. <br /><br />"
"android.appwidget.AppWidgetHost.startAppWidgetConfigureActivityForResult (Activity activity, int appWidgetId, int intentFlags, int requestCode, Bundle options) "," Starts an app widget provider configure activity for result on behalf of the caller. <br /><br />"
"android.appwidget.AppWidgetHost.startListening () "," Start receiving onAppWidgetChanged calls for your AppWidgets. <br /><br />"
"android.appwidget.AppWidgetHost.allocateAppWidgetId () "," Get a appWidgetId for a host in the calling process. <br /><br />"
"android.appwidget.AppWidgetHost.deleteAppWidgetId (int appWidgetId) "," Stop listening to changes for this AppWidget. <br /><br />"
"android.appwidget.AppWidgetHost.createView (Context context, int appWidgetId, AppWidgetProviderInfo appWidget) "," Create the AppWidgetHostView for the given widget. <br /><br />"
"android.appwidget.AppWidgetHost.stopListening () "," Stop receiving onAppWidgetChanged calls for your AppWidgets. <br /><br />"
"android.appwidget.AppWidgetHost.deleteHost () "," Remove all records about this host from the AppWidget manager. <br /><br />"
"android.appwidget.AppWidgetHost.deleteAllHosts () "," Remove all records about all hosts for your package. <br /><br />"
"android.appwidget.AppWidgetHostView.getAppWidgetId () "," no description <br /><br />"
"android.appwidget.AppWidgetHostView.getAppWidgetInfo () "," no description <br /><br />"
"android.appwidget.AppWidgetHostView.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.appwidget.AppWidgetHostView.updateAppWidgetSize (Bundle newOptions, int minWidth, int minHeight, int maxWidth, int maxHeight) "," Provide guidance about the size of this widget to the AppWidgetManager. <br /><br />"
"android.appwidget.AppWidgetHostView.getDefaultPaddingForWidget (Context context, ComponentName component, Rect padding) "," As of ICE_CREAM_SANDWICH we are automatically adding padding to widgets targeting ICE_CREAM_SANDWICH and higher. <br /><br />"
"android.appwidget.AppWidgetHostView.updateAppWidgetOptions (Bundle options) "," Specify some extra information for the widget provider. <br /><br />"
"android.appwidget.AppWidgetHostView.updateAppWidget (RemoteViews remoteViews) "," Process a set of RemoteViews coming in as an update from the AppWidget provider. <br /><br />"
"android.appwidget.AppWidgetHostView.setAppWidget (int appWidgetId, AppWidgetProviderInfo info) "," Set the AppWidget that will be displayed by this view. <br /><br />"
"android.appwidget.AppWidgetHostView.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.appwidget.AppWidgetManager.getAppWidgetIds (ComponentName provider) "," Get the list of appWidgetIds that have been bound to the given AppWidget provider. <br /><br />"
"android.appwidget.AppWidgetManager.partiallyUpdateAppWidget (int appWidgetId, RemoteViews views) "," Perform an incremental update or command on the widget specified by appWidgetId. <br /><br />"
"android.appwidget.AppWidgetManager.updateAppWidgetOptions (int appWidgetId, Bundle options) "," Update the extras for a given widget instance. <br /><br />"
"android.appwidget.AppWidgetManager.partiallyUpdateAppWidget (int[] appWidgetIds, RemoteViews views)   Perform an incremental update or command on the widget (s) "," Perform an incremental update or command on the widget(s) specified by appWidgetIds. <br /><br />"
"android.appwidget.AppWidgetManager.updateAppWidget (int[] appWidgetIds, RemoteViews views) "," Set the RemoteViews to use for the specified appWidgetIds. <br /><br />"
"android.appwidget.AppWidgetManager.getInstance (Context context) "," Get the AppWidgetManager instance to use for the supplied Context object. <br /><br />"
"android.appwidget.AppWidgetManager.getAppWidgetOptions (int appWidgetId) "," Get the extras associated with a given widget instance. <br /><br />"
"android.appwidget.AppWidgetManager.bindAppWidgetIdIfAllowed (int appWidgetId, ComponentName provider, Bundle options) "," Set the component for a given appWidgetId. <br /><br />"
"android.appwidget.AppWidgetManager.getInstalledProvidersForProfile (UserHandle profile) "," Gets the AppWidget providers for the given user profile. <br /><br />"
"android.appwidget.AppWidgetManager.updateAppWidget (int appWidgetId, RemoteViews views) "," Set the RemoteViews to use for the specified appWidgetId. <br /><br />"
"android.appwidget.AppWidgetManager.bindAppWidgetIdIfAllowed (int appWidgetId, ComponentName provider) "," Set the component for a given appWidgetId. <br /><br />"
"android.appwidget.AppWidgetManager.getAppWidgetInfo (int appWidgetId) "," Get the available info about the AppWidget. <br /><br />"
"android.appwidget.AppWidgetManager.notifyAppWidgetViewDataChanged (int[] appWidgetIds, int viewId) "," Notifies the specified collection view in all the specified AppWidget instances to invalidate their data. <br /><br />"
"android.appwidget.AppWidgetManager.updateAppWidget (ComponentName provider, RemoteViews views) "," Set the RemoteViews to use for all AppWidget instances for the supplied AppWidget provider. <br /><br />"
"android.appwidget.AppWidgetManager.notifyAppWidgetViewDataChanged (int appWidgetId, int viewId) "," Notifies the specified collection view in the specified AppWidget instance to invalidate its data. <br /><br />"
"android.appwidget.AppWidgetManager.getInstalledProviders () "," Return a list of the AppWidget providers that are currently installed. <br /><br />"
"android.appwidget.AppWidgetManager.bindAppWidgetIdIfAllowed (int appWidgetId, UserHandle user, ComponentName provider, Bundle options) "," Set the provider for a given appWidgetId if the caller has a permission. <br /><br />"
"android.appwidget.AppWidgetProvider.onReceive (Context context, Intent intent)   Implements onReceive (Context, Intent) "," Implements onReceive(Context, Intent) to dispatch calls to the various other methods on AppWidgetProvider. <br /><br />"
"android.appwidget.AppWidgetProvider.onDisabled (Context context) "," Called in response to the ACTION_APPWIDGET_DISABLED broadcast, which is sent when the last AppWidget instance for this provider is deleted. Override this method to implement your own AppWidget functionality. <br /><br />"
"android.appwidget.AppWidgetProvider.onDeleted (Context context, int[] appWidgetIds) "," Called in response to the ACTION_APPWIDGET_DELETED broadcast when one or more AppWidget instances have been deleted. Override this method to implement your own AppWidget functionality. <br /><br />"
"android.appwidget.AppWidgetProvider.onEnabled (Context context) "," Called in response to the ACTION_APPWIDGET_ENABLED broadcast when the a AppWidget for this provider is instantiated. Override this method to implement your own AppWidget functionality. <br /><br />"
"android.appwidget.AppWidgetProvider.onRestored (Context context, int[] oldWidgetIds, int[] newWidgetIds)   Called in response to the ACTION_APPWIDGET_RESTORED broadcast when instances of this AppWidget provider have been restored from backup. If your provider maintains any persistent data about its widget instances, override this method to remap the old AppWidgetIds to the new values and update any other app state that may be relevant. This callback will be followed immediately by a call to onUpdate (Context, AppWidgetManager, int[]) "," Called in response to the ACTION_APPWIDGET_RESTORED broadcast when instances of this AppWidget provider have been restored from backup. If your provider maintains any persistent data about its widget instances, override this method to remap the old AppWidgetIds to the new values and update any other app state that may be relevant. This callback will be followed immediately by a call to onUpdate(Context, AppWidgetManager, int[]) so your provider can immediately generate new RemoteViews suitable for its newly-restored set of instances. <br /><br />"
"android.appwidget.AppWidgetProvider.onAppWidgetOptionsChanged (Context context, AppWidgetManager appWidgetManager, int appWidgetId, Bundle newOptions) "," Called in response to the ACTION_APPWIDGET_OPTIONS_CHANGED broadcast when this widget has been layed out at a new size. <br /><br />"
"android.appwidget.AppWidgetProvider.onUpdate (Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds) "," Called in response to the ACTION_APPWIDGET_UPDATE and ACTION_APPWIDGET_RESTORED broadcasts when this AppWidget provider is being asked to provide RemoteViews for a set of AppWidgets. Override this method to implement your own AppWidget functionality. <br /><br />"
"android.appwidget.AppWidgetProviderInfo.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.appwidget.AppWidgetProviderInfo.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.appwidget.AppWidgetProviderInfo.loadIcon (Context context, int density) "," Loads the icon to display for this AppWidget in the AppWidget picker. <br /><br />"
"android.appwidget.AppWidgetProviderInfo.getProfile () "," Gets the user profile in which the provider resides. <br /><br />"
"android.appwidget.AppWidgetProviderInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.appwidget.AppWidgetProviderInfo.loadPreviewImage (Context context, int density) "," Loads a preview of what the AppWidget will look like after it's configured. <br /><br />"
"android.appwidget.AppWidgetProviderInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.appwidget.AppWidgetProviderInfo.loadLabel (PackageManager packageManager) "," Loads the localized label to display to the user in the AppWidget picker. <br /><br />"
"android.bluetooth.BluetoothA2dp.finalize () "," Invoked when the garbage collector has detected that this instance is no longer reachable. <br /><br />"
"android.bluetooth.BluetoothA2dp.getConnectedDevices () "," Get connected devices for this specific profile. <br /><br />"
"android.bluetooth.BluetoothA2dp.getDevicesMatchingConnectionStates (int[] states) "," Get a list of devices that match any of the given connection states. <br /><br />"
"android.bluetooth.BluetoothA2dp.isA2dpPlaying (BluetoothDevice device) "," Check if A2DP profile is streaming music. <br /><br />"
"android.bluetooth.BluetoothA2dp.getConnectionState (BluetoothDevice device) "," Get the current connection state of the profile Requires BLUETOOTH permission. <br /><br />"
"android.bluetooth.BluetoothAdapter.enable () "," Turn on the local Bluetooth adapter do not use without explicit user action to turn on Bluetooth. <br /><br />"
"android.bluetooth.BluetoothAdapter.getRemoteDevice (String address) "," Get a BluetoothDevice object for the given Bluetooth hardware address. <br /><br />"
"android.bluetooth.BluetoothAdapter.getProfileProxy (Context context, BluetoothProfile.ServiceListener listener, int profile) "," Get the profile proxy object associated with the profile. <br /><br />"
"android.bluetooth.BluetoothAdapter.getBluetoothLeScanner () "," Returns a BluetoothLeScanner object for Bluetooth LE scan operations. <br /><br />"
"android.bluetooth.BluetoothAdapter.listenUsingInsecureRfcommWithServiceRecord (String name, UUID uuid) "," Create a listening, insecure RFCOMM Bluetooth socket with Service Record. <br /><br />"
"android.bluetooth.BluetoothAdapter.startLeScan (UUID[] serviceUuids, BluetoothAdapter.LeScanCallback callback)    This method was deprecated in API level 21. use startScan (List, ScanSettings, ScanCallback) "," This method was deprecated in API level 21. use startScan(List, ScanSettings, ScanCallback) instead. <br /><br />"
"android.bluetooth.BluetoothAdapter.getAddress () "," Returns the hardware address of the local Bluetooth adapter. <br /><br />"
"android.bluetooth.BluetoothAdapter.checkBluetoothAddress (String address) "," Validate a String Bluetooth address, such as '00:43:A8:23:10:F0' Alphabetic characters must be uppercase to be valid. <br /><br />"
"android.bluetooth.BluetoothAdapter.closeProfileProxy (int profile, BluetoothProfile proxy) "," Close the connection of the profile proxy to the Service. <br /><br />"
"android.bluetooth.BluetoothAdapter.listenUsingRfcommWithServiceRecord (String name, UUID uuid) "," Create a listening, secure RFCOMM Bluetooth socket with Service Record. <br /><br />"
"android.bluetooth.BluetoothAdapter.stopLeScan (BluetoothAdapter.LeScanCallback callback)    This method was deprecated in API level 21. Use stopScan (ScanCallback) "," This method was deprecated in API level 21. Use stopScan(ScanCallback) instead. <br /><br />"
"android.bluetooth.BluetoothAdapter.getName () "," Get the friendly Bluetooth name of the local Bluetooth adapter. <br /><br />"
"android.bluetooth.BluetoothAdapter.isOffloadedFilteringSupported () "," Return true if offloaded filters are supported <br /><br />"
"android.bluetooth.BluetoothAdapter.getScanMode () "," Get the current Bluetooth scan mode of the local Bluetooth adapter. <br /><br />"
"android.bluetooth.BluetoothAdapter.getBondedDevices ()   Return the set of BluetoothDevice objects that are bonded  (paired) "," Return the set of BluetoothDevice objects that are bonded (paired) to the local adapter. <br /><br />"
"android.bluetooth.BluetoothAdapter.isMultipleAdvertisementSupported () "," Return true if the multi advertisement is supported by the chipset <br /><br />"
"android.bluetooth.BluetoothAdapter.startDiscovery () "," Start the remote device discovery process. <br /><br />"
"android.bluetooth.BluetoothAdapter.getState () "," Get the current state of the local Bluetooth adapter. <br /><br />"
"android.bluetooth.BluetoothAdapter.getDefaultAdapter () "," Get a handle to the default local Bluetooth adapter. <br /><br />"
"android.bluetooth.BluetoothAdapter.disable () "," Turn off the local Bluetooth adapter do not use without explicit user action to turn off Bluetooth. <br /><br />"
"android.bluetooth.BluetoothAdapter.isDiscovering () "," Return true if the local Bluetooth adapter is currently in the device discovery process. <br /><br />"
"android.bluetooth.BluetoothAdapter.cancelDiscovery () "," Cancel the current device discovery process. <br /><br />"
"android.bluetooth.BluetoothAdapter.setName (String name) "," Set the friendly Bluetooth name of the local Bluetooth adapter. <br /><br />"
"android.bluetooth.BluetoothAdapter.isEnabled () "," Return true if Bluetooth is currently enabled and ready for use. <br /><br />"
"android.bluetooth.BluetoothAdapter.getRemoteDevice (byte[] address) "," Get a BluetoothDevice object for the given Bluetooth hardware address. <br /><br />"
"android.bluetooth.BluetoothAdapter.isOffloadedScanBatchingSupported () "," Return true if offloaded scan batching is supported <br /><br />"
"android.bluetooth.BluetoothAdapter.startLeScan (BluetoothAdapter.LeScanCallback callback)    This method was deprecated in API level 21. use startScan (List, ScanSettings, ScanCallback) "," This method was deprecated in API level 21. use startScan(List, ScanSettings, ScanCallback) instead. <br /><br />"
"android.bluetooth.BluetoothAdapter.getProfileConnectionState (int profile) "," Get the current connection state of a profile. <br /><br />"
"android.bluetooth.BluetoothAdapter.getBluetoothLeAdvertiser () "," Returns a BluetoothLeAdvertiser object for Bluetooth LE Advertising operations. <br /><br />"
"android.bluetooth.BluetoothAdapter.LeScanCallback.onLeScan (BluetoothDevice device, int rssi, byte[] scanRecord)   Callback reporting an LE device found during a device scan initiated by the startLeScan (BluetoothAdapter.LeScanCallback) "," Callback reporting an LE device found during a device scan initiated by the startLeScan(BluetoothAdapter.LeScanCallback) function. <br /><br />"
"android.bluetooth.BluetoothClass.getMajorDeviceClass () "," Return the major device class component of this BluetoothClass. <br /><br />"
"android.bluetooth.BluetoothClass.getDeviceClass ()   Return the  (major and minor) "," Return the (major and minor) device class component of this BluetoothClass. <br /><br />"
"android.bluetooth.BluetoothClass.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.bluetooth.BluetoothClass.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.bluetooth.BluetoothClass.hasService (int service) "," Return true if the specified service class is supported by this BluetoothClass. <br /><br />"
"android.bluetooth.BluetoothClass.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.bluetooth.BluetoothClass.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.bluetooth.BluetoothClass.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.bluetooth.BluetoothDevice.createInsecureRfcommSocketToServiceRecord (UUID uuid) "," Create an RFCOMM BluetoothSocket socket ready to start an insecure outgoing connection to this remote device using SDP lookup of uuid. <br /><br />"
"android.bluetooth.BluetoothDevice.getType () "," Get the Bluetooth device type of the remote device. <br /><br />"
"android.bluetooth.BluetoothDevice.setPairingConfirmation (boolean confirm) "," Confirm passkey for PAIRING_VARIANT_PASSKEY_CONFIRMATION pairing. <br /><br />"
"android.bluetooth.BluetoothDevice.fetchUuidsWithSdp () "," Perform a service discovery on the remote device to get the UUIDs supported. <br /><br />"
"android.bluetooth.BluetoothDevice.getAddress () "," Returns the hardware address of this BluetoothDevice. <br /><br />"
"android.bluetooth.BluetoothDevice.getUuids ()   Returns the supported features  (UUIDs) "," Returns the supported features (UUIDs) of the remote device. <br /><br />"
"android.bluetooth.BluetoothDevice.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.bluetooth.BluetoothDevice.toString () "," Returns a string representation of this BluetoothDevice. <br /><br />"
"android.bluetooth.BluetoothDevice.getName () "," Get the friendly Bluetooth name of the remote device. <br /><br />"
"android.bluetooth.BluetoothDevice.createBond ()   Start the bonding  (pairing) "," Start the bonding (pairing) process with the remote device. <br /><br />"
"android.bluetooth.BluetoothDevice.getBluetoothClass () "," Get the Bluetooth class of the remote device. <br /><br />"
"android.bluetooth.BluetoothDevice.setPin (byte[] pin) "," Set the pin during pairing when the pairing method is PAIRING_VARIANT_PIN Requires BLUETOOTH_ADMIN. <br /><br />"
"android.bluetooth.BluetoothDevice.getBondState () "," Get the bond state of the remote device. <br /><br />"
"android.bluetooth.BluetoothDevice.createRfcommSocketToServiceRecord (UUID uuid) "," Create an RFCOMM BluetoothSocket ready to start a secure outgoing connection to this remote device using SDP lookup of uuid. <br /><br />"
"android.bluetooth.BluetoothDevice.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.bluetooth.BluetoothDevice.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.bluetooth.BluetoothDevice.connectGatt (Context context, boolean autoConnect, BluetoothGattCallback callback) "," Connect to GATT Server hosted by this device. <br /><br />"
"android.bluetooth.BluetoothDevice.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.bluetooth.BluetoothGatt.readCharacteristic (BluetoothGattCharacteristic characteristic) "," Reads the requested characteristic from the associated remote device. <br /><br />"
"android.bluetooth.BluetoothGatt.getConnectedDevices ()   Not supported - please use getConnectedDevices (int) "," Not supported - please use getConnectedDevices(int) with GATT as argument <br /><br />"
"android.bluetooth.BluetoothGatt.discoverServices () "," Discovers services offered by a remote device as well as their characteristics and descriptors. <br /><br />"
"android.bluetooth.BluetoothGatt.getService (UUID uuid) "," Returns a BluetoothGattService, if the requested UUID is supported by the remote device. <br /><br />"
"android.bluetooth.BluetoothGatt.close () "," Close this Bluetooth GATT client. <br /><br />"
"android.bluetooth.BluetoothGatt.beginReliableWrite () "," Initiates a reliable write transaction for a given remote device. <br /><br />"
"android.bluetooth.BluetoothGatt.getConnectionState (BluetoothDevice device)   Not supported - please use getConnectedDevices (int) "," Not supported - please use getConnectedDevices(int) with GATT as argument <br /><br />"
"android.bluetooth.BluetoothGatt.getDevicesMatchingConnectionStates (int[] states)   Not supported - please use getDevicesMatchingConnectionStates (int, int[]) "," Not supported - please use getDevicesMatchingConnectionStates(int, int[]) with GATT as first argument <br /><br />"
"android.bluetooth.BluetoothGatt.writeDescriptor (BluetoothGattDescriptor descriptor) "," Write the value of a given descriptor to the associated remote device. <br /><br />"
"android.bluetooth.BluetoothGatt.setCharacteristicNotification (BluetoothGattCharacteristic characteristic, boolean enable) "," Enable or disable notifications/indications for a given characteristic. <br /><br />"
"android.bluetooth.BluetoothGatt.abortReliableWrite (BluetoothDevice mDevice)    This method was deprecated in API level 19. Use abortReliableWrite () "," This method was deprecated in API level 19. Use abortReliableWrite() <br /><br />"
"android.bluetooth.BluetoothGatt.requestConnectionPriority (int connectionPriority) "," Request a connection parameter update. <br /><br />"
"android.bluetooth.BluetoothGatt.readDescriptor (BluetoothGattDescriptor descriptor) "," Reads the value for a given descriptor from the associated remote device. <br /><br />"
"android.bluetooth.BluetoothGatt.getDevice () "," Return the remote bluetooth device this GATT client targets to <br /><br />"
"android.bluetooth.BluetoothGatt.writeCharacteristic (BluetoothGattCharacteristic characteristic) "," Writes a given characteristic and its values to the associated remote device. <br /><br />"
"android.bluetooth.BluetoothGatt.readRemoteRssi () "," Read the RSSI for a connected remote device. <br /><br />"
"android.bluetooth.BluetoothGatt.abortReliableWrite () "," Cancels a reliable write transaction for a given device. <br /><br />"
"android.bluetooth.BluetoothGatt.connect () "," Connect back to remote device. <br /><br />"
"android.bluetooth.BluetoothGatt.requestMtu (int mtu) "," Request an MTU size used for a given connection. <br /><br />"
"android.bluetooth.BluetoothGatt.executeReliableWrite () "," Executes a reliable write transaction for a given remote device. <br /><br />"
"android.bluetooth.BluetoothGatt.getServices () "," Returns a list of GATT services offered by the remote device. <br /><br />"
"android.bluetooth.BluetoothGatt.disconnect () "," Disconnects an established connection, or cancels a connection attempt currently in progress. <br /><br />"
"android.bluetooth.BluetoothGattCallback.onDescriptorRead (BluetoothGatt gatt, BluetoothGattDescriptor descriptor, int status) "," Callback reporting the result of a descriptor read operation. <br /><br />"
"android.bluetooth.BluetoothGattCallback.onDescriptorWrite (BluetoothGatt gatt, BluetoothGattDescriptor descriptor, int status) "," Callback indicating the result of a descriptor write operation. <br /><br />"
"android.bluetooth.BluetoothGattCallback.onCharacteristicWrite (BluetoothGatt gatt, BluetoothGattCharacteristic characteristic, int status) "," Callback indicating the result of a characteristic write operation. <br /><br />"
"android.bluetooth.BluetoothGattCallback.onReliableWriteCompleted (BluetoothGatt gatt, int status) "," Callback invoked when a reliable write transaction has been completed. <br /><br />"
"android.bluetooth.BluetoothGattCallback.onMtuChanged (BluetoothGatt gatt, int mtu, int status) "," Callback indicating the MTU for a given device connection has changed. <br /><br />"
"android.bluetooth.BluetoothGattCallback.onConnectionStateChange (BluetoothGatt gatt, int status, int newState) "," Callback indicating when GATT client has connected/disconnected to/from a remote GATT server. <br /><br />"
"android.bluetooth.BluetoothGattCallback.onServicesDiscovered (BluetoothGatt gatt, int status) "," Callback invoked when the list of remote services, characteristics and descriptors for the remote device have been updated, ie new services have been discovered. <br /><br />"
"android.bluetooth.BluetoothGattCallback.onCharacteristicChanged (BluetoothGatt gatt, BluetoothGattCharacteristic characteristic) "," Callback triggered as a result of a remote characteristic notification. <br /><br />"
"android.bluetooth.BluetoothGattCallback.onReadRemoteRssi (BluetoothGatt gatt, int rssi, int status) "," Callback reporting the RSSI for a remote device connection. <br /><br />"
"android.bluetooth.BluetoothGattCallback.onCharacteristicRead (BluetoothGatt gatt, BluetoothGattCharacteristic characteristic, int status) "," Callback reporting the result of a characteristic read operation. <br /><br />"
"android.bluetooth.BluetoothGattCharacteristic.setValue (int value, int formatType, int offset) "," Set the locally stored value of this characteristic. <br /><br />"
"android.bluetooth.BluetoothGattCharacteristic.getUuid () "," Returns the UUID of this characteristic <br /><br />"
"android.bluetooth.BluetoothGattCharacteristic.getDescriptor (UUID uuid) "," Returns a descriptor with a given UUID out of the list of descriptors for this characteristic. <br /><br />"
"android.bluetooth.BluetoothGattCharacteristic.setValue (String value) "," Set the locally stored value of this characteristic. <br /><br />"
"android.bluetooth.BluetoothGattCharacteristic.getFloatValue (int formatType, int offset) "," Return the stored value of this characteristic. <br /><br />"
"android.bluetooth.BluetoothGattCharacteristic.getInstanceId () "," Returns the instance ID for this characteristic. <br /><br />"
"android.bluetooth.BluetoothGattCharacteristic.getProperties () "," Returns the properties of this characteristic. <br /><br />"
"android.bluetooth.BluetoothGattCharacteristic.getDescriptors () "," Returns a list of descriptors for this characteristic. <br /><br />"
"android.bluetooth.BluetoothGattCharacteristic.getService () "," Returns the service this characteristic belongs to. <br /><br />"
"android.bluetooth.BluetoothGattCharacteristic.getIntValue (int formatType, int offset) "," Return the stored value of this characteristic. <br /><br />"
"android.bluetooth.BluetoothGattCharacteristic.getValue () "," Get the stored value for this characteristic. <br /><br />"
"android.bluetooth.BluetoothGattCharacteristic.getPermissions () "," Returns the permissions for this characteristic. <br /><br />"
"android.bluetooth.BluetoothGattCharacteristic.getWriteType () "," Gets the write type for this characteristic. <br /><br />"
"android.bluetooth.BluetoothGattCharacteristic.addDescriptor (BluetoothGattDescriptor descriptor) "," Adds a descriptor to this characteristic. <br /><br />"
"android.bluetooth.BluetoothGattCharacteristic.setValue (byte[] value) "," Updates the locally stored value of this characteristic. <br /><br />"
"android.bluetooth.BluetoothGattCharacteristic.setWriteType (int writeType)   Set the write type for this characteristic Setting the write type of a characteristic determines how the writeCharacteristic (BluetoothGattCharacteristic) "," Set the write type for this characteristic Setting the write type of a characteristic determines how the writeCharacteristic(BluetoothGattCharacteristic) function write this characteristic. <br /><br />"
"android.bluetooth.BluetoothGattCharacteristic.setValue (int mantissa, int exponent, int formatType, int offset) "," Set the locally stored value of this characteristic. <br /><br />"
"android.bluetooth.BluetoothGattCharacteristic.getStringValue (int offset) "," Return the stored value of this characteristic. <br /><br />"
"android.bluetooth.BluetoothGattDescriptor.getValue ()   Returns the stored value for this descriptor This function returns the stored value for this descriptor as retrieved by calling readDescriptor (BluetoothGattDescriptor) "," Returns the stored value for this descriptor This function returns the stored value for this descriptor as retrieved by calling readDescriptor(BluetoothGattDescriptor). <br /><br />"
"android.bluetooth.BluetoothGattDescriptor.getUuid () "," Returns the UUID of this descriptor. <br /><br />"
"android.bluetooth.BluetoothGattDescriptor.getPermissions () "," Returns the permissions for this descriptor. <br /><br />"
"android.bluetooth.BluetoothGattDescriptor.setValue (byte[] value) "," Updates the locally stored value of this descriptor. <br /><br />"
"android.bluetooth.BluetoothGattDescriptor.getCharacteristic () "," Returns the characteristic this descriptor belongs to. <br /><br />"
"android.bluetooth.BluetoothGattServer.getConnectedDevices ()   Not supported - please use getConnectedDevices (int) "," Not supported - please use getConnectedDevices(int) with GATT as argument <br /><br />"
"android.bluetooth.BluetoothGattServer.connect (BluetoothDevice device, boolean autoConnect) "," Initiate a connection to a Bluetooth GATT capable device. <br /><br />"
"android.bluetooth.BluetoothGattServer.clearServices () "," Remove all services from the list of provided services. <br /><br />"
"android.bluetooth.BluetoothGattServer.getService (UUID uuid) "," Returns a BluetoothGattService from the list of services offered by this device. <br /><br />"
"android.bluetooth.BluetoothGattServer.close () "," Close this GATT server instance. <br /><br />"
"android.bluetooth.BluetoothGattServer.notifyCharacteristicChanged (BluetoothDevice device, BluetoothGattCharacteristic characteristic, boolean confirm) "," Send a notification or indication that a local characteristic has been updated. <br /><br />"
"android.bluetooth.BluetoothGattServer.removeService (BluetoothGattService service) "," Removes a service from the list of services to be provided. <br /><br />"
"android.bluetooth.BluetoothGattServer.addService (BluetoothGattService service) "," Add a service to the list of services to be hosted. <br /><br />"
"android.bluetooth.BluetoothGattServer.getConnectionState (BluetoothDevice device)   Not supported - please use getConnectedDevices (int) "," Not supported - please use getConnectedDevices(int) with GATT as argument <br /><br />"
"android.bluetooth.BluetoothGattServer.getServices () "," Returns a list of GATT services offered by this device. <br /><br />"
"android.bluetooth.BluetoothGattServer.getDevicesMatchingConnectionStates (int[] states)   Not supported - please use getDevicesMatchingConnectionStates (int, int[]) "," Not supported - please use getDevicesMatchingConnectionStates(int, int[]) with GATT as first argument <br /><br />"
"android.bluetooth.BluetoothGattServer.cancelConnection (BluetoothDevice device) "," Disconnects an established connection, or cancels a connection attempt currently in progress. <br /><br />"
"android.bluetooth.BluetoothGattServer.sendResponse (BluetoothDevice device, int requestId, int status, int offset, byte[] value) "," Send a response to a read or write request to a remote device. <br /><br />"
"android.bluetooth.BluetoothGattServerCallback.onDescriptorWriteRequest (BluetoothDevice device, int requestId, BluetoothGattDescriptor descriptor, boolean preparedWrite, boolean responseNeeded, int offset, byte[] value) "," A remote client has requested to write to a local descriptor. <br /><br />"
"android.bluetooth.BluetoothGattServerCallback.onCharacteristicWriteRequest (BluetoothDevice device, int requestId, BluetoothGattCharacteristic characteristic, boolean preparedWrite, boolean responseNeeded, int offset, byte[] value) "," A remote client has requested to write to a local characteristic. <br /><br />"
"android.bluetooth.BluetoothGattServerCallback.onConnectionStateChange (BluetoothDevice device, int status, int newState) "," Callback indicating when a remote device has been connected or disconnected. <br /><br />"
"android.bluetooth.BluetoothGattServerCallback.onServiceAdded (int status, BluetoothGattService service) "," Indicates whether a local service has been added successfully. <br /><br />"
"android.bluetooth.BluetoothGattServerCallback.onDescriptorReadRequest (BluetoothDevice device, int requestId, int offset, BluetoothGattDescriptor descriptor) "," A remote client has requested to read a local descriptor. <br /><br />"
"android.bluetooth.BluetoothGattServerCallback.onCharacteristicReadRequest (BluetoothDevice device, int requestId, int offset, BluetoothGattCharacteristic characteristic) "," A remote client has requested to read a local characteristic. <br /><br />"
"android.bluetooth.BluetoothGattServerCallback.onMtuChanged (BluetoothDevice device, int mtu) "," Callback indicating the MTU for a given device connection has changed. <br /><br />"
"android.bluetooth.BluetoothGattServerCallback.onExecuteWrite (BluetoothDevice device, int requestId, boolean execute) "," Execute all pending write operations for this device. <br /><br />"
"android.bluetooth.BluetoothGattServerCallback.onNotificationSent (BluetoothDevice device, int status) "," Callback invoked when a notification or indication has been sent to a remote device. <br /><br />"
"android.bluetooth.BluetoothGattService.getUuid () "," Returns the UUID of this service <br /><br />"
"android.bluetooth.BluetoothGattService.getIncludedServices () "," Get the list of included GATT services for this service. <br /><br />"
"android.bluetooth.BluetoothGattService.getCharacteristics () "," Returns a list of characteristics included in this service. <br /><br />"
"android.bluetooth.BluetoothGattService.addCharacteristic (BluetoothGattCharacteristic characteristic) "," Add a characteristic to this service. <br /><br />"
"android.bluetooth.BluetoothGattService.getInstanceId () "," Returns the instance ID for this service If a remote device offers multiple services with the same UUID (ex. <br /><br />"
"android.bluetooth.BluetoothGattService.getCharacteristic (UUID uuid) "," Returns a characteristic with a given UUID out of the list of characteristics offered by this service. <br /><br />"
"android.bluetooth.BluetoothGattService.addService (BluetoothGattService service) "," Add an included service to this service. <br /><br />"
"android.bluetooth.BluetoothGattService.getType ()   Get the type of this service  (primary/secondary) "," Get the type of this service (primary/secondary) <br /><br />"
"android.bluetooth.BluetoothHeadset.stopVoiceRecognition (BluetoothDevice device) "," Stop Bluetooth Voice Recognition mode, and shut down the Bluetooth audio path. <br /><br />"
"android.bluetooth.BluetoothHeadset.sendVendorSpecificResultCode (BluetoothDevice device, String command, String arg) "," Sends a vendor-specific unsolicited result code to the headset. <br /><br />"
"android.bluetooth.BluetoothHeadset.isAudioConnected (BluetoothDevice device) "," Check if Bluetooth SCO audio is connected. <br /><br />"
"android.bluetooth.BluetoothHeadset.getConnectedDevices () "," Get connected devices for this specific profile. <br /><br />"
"android.bluetooth.BluetoothHeadset.getDevicesMatchingConnectionStates (int[] states) "," Get a list of devices that match any of the given connection states. <br /><br />"
"android.bluetooth.BluetoothHeadset.startVoiceRecognition (BluetoothDevice device) "," Start Bluetooth voice recognition. <br /><br />"
"android.bluetooth.BluetoothHeadset.getConnectionState (BluetoothDevice device) "," Get the current connection state of the profile Requires BLUETOOTH permission. <br /><br />"
"android.bluetooth.BluetoothHealth.connectChannelToSource (BluetoothDevice device, BluetoothHealthAppConfiguration config) "," Connect to a health device which has the SOURCE_ROLE. <br /><br />"
"android.bluetooth.BluetoothHealth.disconnectChannel (BluetoothDevice device, BluetoothHealthAppConfiguration config, int channelId) "," Disconnect a connected health channel. <br /><br />"
"android.bluetooth.BluetoothHealth.getConnectedDevices () "," Get connected devices for the health profile. <br /><br />"
"android.bluetooth.BluetoothHealth.unregisterAppConfiguration (BluetoothHealthAppConfiguration config)   Unregister an application configuration that has been registered using registerSinkAppConfiguration (String, int, BluetoothHealthCallback) "," Unregister an application configuration that has been registered using registerSinkAppConfiguration(String, int, BluetoothHealthCallback) Requires BLUETOOTH permission. <br /><br />"
"android.bluetooth.BluetoothHealth.registerSinkAppConfiguration (String name, int dataType, BluetoothHealthCallback callback) "," Register an application configuration that acts as a Health SINK. <br /><br />"
"android.bluetooth.BluetoothHealth.getDevicesMatchingConnectionStates (int[] states) "," Get a list of devices that match any of the given connection states. <br /><br />"
"android.bluetooth.BluetoothHealth.getMainChannelFd (BluetoothDevice device, BluetoothHealthAppConfiguration config) "," Get the file descriptor of the main channel associated with the remote device and application configuration. <br /><br />"
"android.bluetooth.BluetoothHealth.getConnectionState (BluetoothDevice device) "," Get the current connection state of the profile. <br /><br />"
"android.bluetooth.BluetoothHealthAppConfiguration.getName () "," Return the name of the application configuration. <br /><br />"
"android.bluetooth.BluetoothHealthAppConfiguration.getRole () "," Return the role associated with this application configuration. <br /><br />"
"android.bluetooth.BluetoothHealthAppConfiguration.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.bluetooth.BluetoothHealthAppConfiguration.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.bluetooth.BluetoothHealthAppConfiguration.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.bluetooth.BluetoothHealthAppConfiguration.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.bluetooth.BluetoothHealthAppConfiguration.getDataType () "," Return the data type associated with this application configuration. <br /><br />"
"android.bluetooth.BluetoothHealthAppConfiguration.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.bluetooth.BluetoothHealthCallback.onHealthChannelStateChange (BluetoothHealthAppConfiguration config, BluetoothDevice device, int prevState, int newState, ParcelFileDescriptor fd, int channelId) "," Callback to inform change in channel state. <br /><br />"
"android.bluetooth.BluetoothHealthCallback.onHealthAppConfigurationStatusChange (BluetoothHealthAppConfiguration config, int status) "," Callback to inform change in registration state of the health application. <br /><br />"
"android.bluetooth.BluetoothManager.openGattServer (Context context, BluetoothGattServerCallback callback) "," Open a GATT Server The callback is used to deliver results to Caller, such as connection status as well as the results of any other GATT server operations. <br /><br />"
"android.bluetooth.BluetoothManager.getDevicesMatchingConnectionStates (int profile, int[] states) "," Get a list of devices that match any of the given connection states. <br /><br />"
"android.bluetooth.BluetoothManager.getConnectionState (BluetoothDevice device, int profile) "," Get the current connection state of the profile to the remote device. <br /><br />"
"android.bluetooth.BluetoothManager.getConnectedDevices (int profile) "," Get connected devices for the specified profile. <br /><br />"
"android.bluetooth.BluetoothManager.getAdapter () "," Get the default BLUETOOTH Adapter for this device. <br /><br />"
"android.bluetooth.BluetoothProfile.getConnectedDevices () "," Get connected devices for this specific profile. <br /><br />"
"android.bluetooth.BluetoothProfile.getDevicesMatchingConnectionStates (int[] states) "," Get a list of devices that match any of the given connection states. <br /><br />"
"android.bluetooth.BluetoothProfile.getConnectionState (BluetoothDevice device) "," Get the current connection state of the profile Requires BLUETOOTH permission. <br /><br />"
"android.bluetooth.BluetoothProfile.ServiceListener.onServiceConnected (int profile, BluetoothProfile proxy) "," Called to notify the client when the proxy object has been connected to the service. <br /><br />"
"android.bluetooth.BluetoothProfile.ServiceListener.onServiceDisconnected (int profile) "," Called to notify the client that this proxy object has been disconnected from the service. <br /><br />"
"android.bluetooth.BluetoothServerSocket.accept (int timeout) "," Block until a connection is established, with timeout. <br /><br />"
"android.bluetooth.BluetoothServerSocket.close () "," Immediately close this socket, and release all associated resources. <br /><br />"
"android.bluetooth.BluetoothServerSocket.accept () "," Block until a connection is established. <br /><br />"
"android.bluetooth.BluetoothSocket.connect () "," Attempt to connect to a remote device. <br /><br />"
"android.bluetooth.BluetoothSocket.getOutputStream () "," Get the output stream associated with this socket. <br /><br />"
"android.bluetooth.BluetoothSocket.isConnected () "," Get the connection status of this socket, ie, whether there is an active connection with remote device. <br /><br />"
"android.bluetooth.BluetoothSocket.close () "," Closes the object and release any system resources it holds. <br /><br />"
"android.bluetooth.BluetoothSocket.getRemoteDevice () "," Get the remote device this socket is connecting, or connected, to. <br /><br />"
"android.bluetooth.BluetoothSocket.getInputStream () "," Get the input stream associated with this socket. <br /><br />"
"android.bluetooth.le.AdvertiseCallback.onStartSuccess (AdvertiseSettings settingsInEffect)   Callback triggered in response to startAdvertising (AdvertiseSettings, AdvertiseData, AdvertiseCallback) "," Callback triggered in response to startAdvertising(AdvertiseSettings, AdvertiseData, AdvertiseCallback) indicating that the advertising has been started successfully. <br /><br />"
"android.bluetooth.le.AdvertiseCallback.onStartFailure (int errorCode) "," Callback when advertising could not be started. <br /><br />"
"android.bluetooth.le.AdvertiseData.Builder.addServiceUuid (ParcelUuid serviceUuid) "," Add a service UUID to advertise data. <br /><br />"
"android.bluetooth.le.AdvertiseData.Builder.addServiceData (ParcelUuid serviceDataUuid, byte[] serviceData) "," Add service data to advertise data. <br /><br />"
"android.bluetooth.le.AdvertiseData.Builder.addManufacturerData (int manufacturerId, byte[] manufacturerSpecificData) "," Add manufacturer specific data. <br /><br />"
"android.bluetooth.le.AdvertiseData.Builder.setIncludeTxPowerLevel (boolean includeTxPowerLevel) "," Whether the transmission power level should be included in the advertise packet. <br /><br />"
"android.bluetooth.le.AdvertiseData.Builder.setIncludeDeviceName (boolean includeDeviceName) "," Set whether the device name should be included in advertise packet. <br /><br />"
"android.bluetooth.le.AdvertiseData.Builder.build () "," Build the AdvertiseData. <br /><br />"
"android.bluetooth.le.AdvertiseData.getIncludeTxPowerLevel () "," Whether the transmission power level will be included in the advertisement packet. <br /><br />"
"android.bluetooth.le.AdvertiseData.getManufacturerSpecificData () "," Returns an array of manufacturer Id and the corresponding manufacturer specific data. <br /><br />"
"android.bluetooth.le.AdvertiseData.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.bluetooth.le.AdvertiseData.getIncludeDeviceName () "," Whether the device name will be included in the advertisement packet. <br /><br />"
"android.bluetooth.le.AdvertiseData.getServiceData () "," Returns a map of 16-bit UUID and its corresponding service data. <br /><br />"
"android.bluetooth.le.AdvertiseData.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.bluetooth.le.AdvertiseData.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.bluetooth.le.AdvertiseData.getServiceUuids () "," Returns a list of service UUIDs within the advertisement that are used to identify the Bluetooth GATT services. <br /><br />"
"android.bluetooth.le.AdvertiseSettings.Builder.setTimeout (int timeoutMillis) "," Limit advertising to a given amount of time. <br /><br />"
"android.bluetooth.le.AdvertiseSettings.Builder.setTxPowerLevel (int txPowerLevel) "," Set advertise TX power level to control the transmission power level for the advertising. <br /><br />"
"android.bluetooth.le.AdvertiseSettings.Builder.setAdvertiseMode (int advertiseMode) "," Set advertise mode to control the advertising power and latency. <br /><br />"
"android.bluetooth.le.AdvertiseSettings.Builder.setConnectable (boolean connectable) "," Set whether the advertisement type should be connectable or non-connectable. <br /><br />"
"android.bluetooth.le.AdvertiseSettings.Builder.build () "," Build the AdvertiseSettings object. <br /><br />"
"android.bluetooth.le.AdvertiseSettings.isConnectable () "," Returns whether the advertisement will indicate connectable. <br /><br />"
"android.bluetooth.le.AdvertiseSettings.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.bluetooth.le.AdvertiseSettings.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.bluetooth.le.AdvertiseSettings.getTxPowerLevel () "," Returns the TX power level for advertising. <br /><br />"
"android.bluetooth.le.AdvertiseSettings.getTimeout () "," Returns the advertising time limit in milliseconds. <br /><br />"
"android.bluetooth.le.AdvertiseSettings.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.bluetooth.le.AdvertiseSettings.getMode () "," Returns the advertise mode. <br /><br />"
"android.bluetooth.le.BluetoothLeAdvertiser.startAdvertising (AdvertiseSettings settings, AdvertiseData advertiseData, AdvertiseData scanResponse, AdvertiseCallback callback) "," Start Bluetooth LE Advertising. <br /><br />"
"android.bluetooth.le.BluetoothLeAdvertiser.stopAdvertising (AdvertiseCallback callback) "," Stop Bluetooth LE advertising. <br /><br />"
"android.bluetooth.le.BluetoothLeAdvertiser.startAdvertising (AdvertiseSettings settings, AdvertiseData advertiseData, AdvertiseCallback callback) "," Start Bluetooth LE Advertising. <br /><br />"
"android.bluetooth.le.BluetoothLeScanner.stopScan (ScanCallback callback) "," Stops an ongoing Bluetooth LE scan. <br /><br />"
"android.bluetooth.le.BluetoothLeScanner.flushPendingScanResults (ScanCallback callback) "," Flush pending batch scan results stored in Bluetooth controller. <br /><br />"
"android.bluetooth.le.BluetoothLeScanner.startScan (List< ScanFilter> filters, ScanSettings settings, ScanCallback callback) "," Start Bluetooth LE scan. <br /><br />"
"android.bluetooth.le.BluetoothLeScanner.startScan (ScanCallback callback) "," Start Bluetooth LE scan with default parameters and no filters. <br /><br />"
"android.bluetooth.le.ScanCallback.onScanFailed (int errorCode) "," Callback when scan could not be started. <br /><br />"
"android.bluetooth.le.ScanCallback.onBatchScanResults (List< ScanResult> results) "," Callback when batch results are delivered. <br /><br />"
"android.bluetooth.le.ScanCallback.onScanResult (int callbackType, ScanResult result) "," Callback when a BLE advertisement has been found. <br /><br />"
"android.bluetooth.le.ScanFilter.Builder.setServiceData (ParcelUuid serviceDataUuid, byte[] serviceData) "," Set filtering on service data. <br /><br />"
"android.bluetooth.le.ScanFilter.Builder.setDeviceAddress (String deviceAddress) "," Set filter on device address. <br /><br />"
"android.bluetooth.le.ScanFilter.Builder.setServiceUuid (ParcelUuid serviceUuid, ParcelUuid uuidMask) "," Set filter on partial service uuid. <br /><br />"
"android.bluetooth.le.ScanFilter.Builder.setServiceUuid (ParcelUuid serviceUuid) "," Set filter on service uuid. <br /><br />"
"android.bluetooth.le.ScanFilter.Builder.setManufacturerData (int manufacturerId, byte[] manufacturerData) "," Set filter on on manufacturerData. <br /><br />"
"android.bluetooth.le.ScanFilter.Builder.setDeviceName (String deviceName) "," Set filter on device name. <br /><br />"
"android.bluetooth.le.ScanFilter.Builder.build () "," Build ScanFilter. <br /><br />"
"android.bluetooth.le.ScanFilter.Builder.setManufacturerData (int manufacturerId, byte[] manufacturerData, byte[] manufacturerDataMask) "," Set filter on partial manufacture data. <br /><br />"
"android.bluetooth.le.ScanFilter.Builder.setServiceData (ParcelUuid serviceDataUuid, byte[] serviceData, byte[] serviceDataMask) "," Set partial filter on service data. <br /><br />"
"android.bluetooth.le.ScanFilter.getManufacturerId () "," Returns the manufacturer id. <br /><br />"
"android.bluetooth.le.ScanFilter.getServiceUuidMask () "," no description <br /><br />"
"android.bluetooth.le.ScanFilter.getServiceDataMask () "," no description <br /><br />"
"android.bluetooth.le.ScanFilter.getManufacturerData () "," no description <br /><br />"
"android.bluetooth.le.ScanFilter.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.bluetooth.le.ScanFilter.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.bluetooth.le.ScanFilter.getDeviceName () "," Returns the filter set the device name field of Bluetooth advertisement data. <br /><br />"
"android.bluetooth.le.ScanFilter.getDeviceAddress () "," no description <br /><br />"
"android.bluetooth.le.ScanFilter.getManufacturerDataMask () "," no description <br /><br />"
"android.bluetooth.le.ScanFilter.matches (ScanResult scanResult) "," Check if the scan filter matches a scanResult. <br /><br />"
"android.bluetooth.le.ScanFilter.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.bluetooth.le.ScanFilter.getServiceDataUuid () "," no description <br /><br />"
"android.bluetooth.le.ScanFilter.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.bluetooth.le.ScanFilter.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.bluetooth.le.ScanFilter.getServiceData () "," no description <br /><br />"
"android.bluetooth.le.ScanFilter.getServiceUuid () "," Returns the filter set on the service uuid. <br /><br />"
"android.bluetooth.le.ScanRecord.getManufacturerSpecificData () "," Returns a sparse array of manufacturer identifier and its corresponding manufacturer specific data. <br /><br />"
"android.bluetooth.le.ScanRecord.getServiceData (ParcelUuid serviceDataUuid) "," Returns the service data byte array associated with the serviceUuid. <br /><br />"
"android.bluetooth.le.ScanRecord.getManufacturerSpecificData (int manufacturerId) "," Returns the manufacturer specific data associated with the manufacturer id. <br /><br />"
"android.bluetooth.le.ScanRecord.getBytes () "," Returns raw bytes of scan record. <br /><br />"
"android.bluetooth.le.ScanRecord.getServiceData () "," Returns a map of service UUID and its corresponding service data. <br /><br />"
"android.bluetooth.le.ScanRecord.getAdvertiseFlags () "," Returns the advertising flags indicating the discoverable mode and capability of the device. <br /><br />"
"android.bluetooth.le.ScanRecord.getTxPowerLevel () "," Returns the transmission power level of the packet in dBm. <br /><br />"
"android.bluetooth.le.ScanRecord.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.bluetooth.le.ScanRecord.getServiceUuids () "," Returns a list of service UUIDs within the advertisement that are used to identify the bluetooth GATT services. <br /><br />"
"android.bluetooth.le.ScanRecord.getDeviceName () "," Returns the local name of the BLE device. <br /><br />"
"android.bluetooth.le.ScanResult.getRssi () "," Returns the received signal strength in dBm. <br /><br />"
"android.bluetooth.le.ScanResult.getDevice () "," Returns the remote bluetooth device identified by the bluetooth device address. <br /><br />"
"android.bluetooth.le.ScanResult.getScanRecord () "," Returns the scan record, which is a combination of advertisement and scan response. <br /><br />"
"android.bluetooth.le.ScanResult.getTimestampNanos () "," Returns timestamp since boot when the scan record was observed. <br /><br />"
"android.bluetooth.le.ScanResult.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.bluetooth.le.ScanResult.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.bluetooth.le.ScanResult.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.bluetooth.le.ScanResult.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.bluetooth.le.ScanResult.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.bluetooth.le.ScanSettings.Builder.setReportDelay (long reportDelayMillis) "," Set report delay timestamp for Bluetooth LE scan. <br /><br />"
"android.bluetooth.le.ScanSettings.Builder.setScanMode (int scanMode) "," Set scan mode for Bluetooth LE scan. <br /><br />"
"android.bluetooth.le.ScanSettings.Builder.build () "," Build ScanSettings. <br /><br />"
"android.bluetooth.le.ScanSettings.getScanMode () "," no description <br /><br />"
"android.bluetooth.le.ScanSettings.getReportDelayMillis () "," Returns report delay timestamp based on the device clock. <br /><br />"
"android.bluetooth.le.ScanSettings.getCallbackType () "," no description <br /><br />"
"android.bluetooth.le.ScanSettings.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.bluetooth.le.ScanSettings.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.bluetooth.le.ScanSettings.getScanResultType () "," no description <br /><br />"
"android.content.AbstractThreadedSyncAdapter.onSyncCanceled (Thread thread) "," Indicates that a sync operation has been canceled. <br /><br />"
"android.content.AbstractThreadedSyncAdapter.onPerformSync (Account account, Bundle extras, String authority, ContentProviderClient provider, SyncResult syncResult) "," Perform a sync for this account. <br /><br />"
"android.content.AbstractThreadedSyncAdapter.getSyncAdapterBinder () "," no description <br /><br />"
"android.content.AbstractThreadedSyncAdapter.onSyncCanceled () "," Indicates that a sync operation has been canceled. <br /><br />"
"android.content.AbstractThreadedSyncAdapter.getContext () "," no description <br /><br />"
"android.content.AsyncQueryHandler.startDelete (int token, Object cookie, Uri uri, String selection, String[] selectionArgs) "," This method begins an asynchronous delete. <br /><br />"
"android.content.AsyncQueryHandler.startUpdate (int token, Object cookie, Uri uri, ContentValues values, String selection, String[] selectionArgs) "," This method begins an asynchronous update. <br /><br />"
"android.content.AsyncQueryHandler.startInsert (int token, Object cookie, Uri uri, ContentValues initialValues) "," This method begins an asynchronous insert. <br /><br />"
"android.content.AsyncQueryHandler.handleMessage (Message msg) "," Subclasses must implement this to receive messages. <br /><br />"
"android.content.AsyncQueryHandler.startQuery (int token, Object cookie, Uri uri, String[] projection, String selection, String[] selectionArgs, String orderBy) "," This method begins an asynchronous query. <br /><br />"
"android.content.AsyncQueryHandler.cancelOperation (int token) "," Attempts to cancel operation that has not already started. <br /><br />"
"android.content.AsyncQueryHandler.WorkerHandler.handleMessage (Message msg) "," Subclasses must implement this to receive messages. <br /><br />"
"android.content.AsyncTaskLoader<D>.setUpdateThrottle (long delayMS) "," Set amount to throttle updates by. <br /><br />"
"android.content.AsyncTaskLoader<D>.onCanceled (D data) "," Called if the task was canceled before it was completed. <br /><br />"
"android.content.AsyncTaskLoader<D>.cancelLoadInBackground () "," Called on the main thread to abort a load in progress. <br /><br />"
"android.content.AsyncTaskLoader<D>.loadInBackground () "," Called on a worker thread to perform the actual load and to return the result of the load operation. <br /><br />"
"android.content.AsyncTaskLoader<D>.isLoadInBackgroundCanceled ()   Returns true if the current invocation of loadInBackground () "," Returns true if the current invocation of loadInBackground() is being canceled. <br /><br />"
"android.content.AsyncTaskLoader<D>.dump (String prefix, FileDescriptor fd, PrintWriter writer, String[] args) "," Print the Loader's state into the given stream. <br /><br />"
"android.content.BroadcastReceiver.goAsync ()   This can be called by an application in onReceive (Context, Intent) "," This can be called by an application in onReceive(Context, Intent) to allow it to keep the broadcast active after returning from that function. <br /><br />"
"android.content.BroadcastReceiver.clearAbortBroadcast () "," Clears the flag indicating that this receiver should abort the current broadcast. <br /><br />"
"android.content.BroadcastReceiver.isInitialStickyBroadcast () "," Returns true if the receiver is currently processing the initial value of a sticky broadcast -- that is, the value that was last broadcast and is currently held in the sticky cache, so this is not directly the result of a broadcast right now. <br /><br />"
"android.content.BroadcastReceiver.setResult (int code, String data, Bundle extras)   Change all of the result data returned from this broadcasts; only works with broadcasts sent through "," Change all of the result data returned from this broadcasts; only works with broadcasts sent through Context.sendOrderedBroadcast. <br /><br />"
"android.content.BroadcastReceiver.getAbortBroadcast () "," Returns the flag indicating whether or not this receiver should abort the current broadcast. <br /><br />"
"android.content.BroadcastReceiver.getDebugUnregister ()   Return the last value given to setDebugUnregister (boolean) "," Return the last value given to setDebugUnregister(boolean). <br /><br />"
"android.content.BroadcastReceiver.setResultExtras (Bundle extras)   Change the current result extras of this broadcast; only works with broadcasts sent through "," Change the current result extras of this broadcast; only works with broadcasts sent through Context.sendOrderedBroadcast. <br /><br />"
"android.content.BroadcastReceiver.setOrderedHint (boolean isOrdered) "," For internal use, sets the hint about whether this BroadcastReceiver is running in ordered mode. <br /><br />"
"android.content.BroadcastReceiver.onReceive (Context context, Intent intent) "," This method is called when the BroadcastReceiver is receiving an Intent broadcast. <br /><br />"
"android.content.BroadcastReceiver.setDebugUnregister (boolean debug)   Control inclusion of debugging help for mismatched calls to Context.registerReceiver () "," Control inclusion of debugging help for mismatched calls to Context.registerReceiver(). <br /><br />"
"android.content.BroadcastReceiver.getResultCode () "," Retrieve the current result code, as set by the previous receiver. <br /><br />"
"android.content.BroadcastReceiver.getResultExtras (boolean makeMap) "," Retrieve the current result extra data, as set by the previous receiver. <br /><br />"
"android.content.BroadcastReceiver.peekService (Context myContext, Intent service) "," Provide a binder to an already-running service. <br /><br />"
"android.content.BroadcastReceiver.setResultCode (int code)   Change the current result code of this broadcast; only works with broadcasts sent through "," Change the current result code of this broadcast; only works with broadcasts sent through Context.sendOrderedBroadcast. <br /><br />"
"android.content.BroadcastReceiver.abortBroadcast ()   Sets the flag indicating that this receiver should abort the current broadcast; only works with broadcasts sent through "," Sets the flag indicating that this receiver should abort the current broadcast; only works with broadcasts sent through Context.sendOrderedBroadcast. <br /><br />"
"android.content.BroadcastReceiver.getResultData () "," Retrieve the current result data, as set by the previous receiver. <br /><br />"
"android.content.BroadcastReceiver.isOrderedBroadcast () "," Returns true if the receiver is currently processing an ordered broadcast. <br /><br />"
"android.content.BroadcastReceiver.setResultData (String data)   Change the current result data of this broadcast; only works with broadcasts sent through "," Change the current result data of this broadcast; only works with broadcasts sent through Context.sendOrderedBroadcast. <br /><br />"
"android.content.BroadcastReceiver.PendingResult.setResultExtras (Bundle extras)   Version of BroadcastReceiver.setResultExtras (Bundle) "," Version of BroadcastReceiver.setResultExtras(Bundle) for asynchronous broadcast handling. <br /><br />"
"android.content.BroadcastReceiver.PendingResult.finish () "," Finish the broadcast. <br /><br />"
"android.content.BroadcastReceiver.PendingResult.getResultData ()   Version of BroadcastReceiver.getResultData () "," Version of BroadcastReceiver.getResultData() for asynchronous broadcast handling. <br /><br />"
"android.content.BroadcastReceiver.PendingResult.clearAbortBroadcast ()   Version of BroadcastReceiver.clearAbortBroadcast () "," Version of BroadcastReceiver.clearAbortBroadcast() for asynchronous broadcast handling. <br /><br />"
"android.content.BroadcastReceiver.PendingResult.setResultData (String data)   Version of BroadcastReceiver.setResultData (String) "," Version of BroadcastReceiver.setResultData(String) for asynchronous broadcast handling. <br /><br />"
"android.content.BroadcastReceiver.PendingResult.getAbortBroadcast ()   Version of BroadcastReceiver.getAbortBroadcast () "," Version of BroadcastReceiver.getAbortBroadcast() for asynchronous broadcast handling. <br /><br />"
"android.content.BroadcastReceiver.PendingResult.setResult (int code, String data, Bundle extras)   Version of BroadcastReceiver.setResult (int, String, Bundle) "," Version of BroadcastReceiver.setResult(int, String, Bundle) for asynchronous broadcast handling. <br /><br />"
"android.content.BroadcastReceiver.PendingResult.abortBroadcast ()   Version of BroadcastReceiver.abortBroadcast () "," Version of BroadcastReceiver.abortBroadcast() for asynchronous broadcast handling. <br /><br />"
"android.content.BroadcastReceiver.PendingResult.getResultCode ()   Version of BroadcastReceiver.getResultCode () "," Version of BroadcastReceiver.getResultCode() for asynchronous broadcast handling. <br /><br />"
"android.content.BroadcastReceiver.PendingResult.getResultExtras (boolean makeMap)   Version of BroadcastReceiver.getResultExtras (boolean) "," Version of BroadcastReceiver.getResultExtras(boolean) for asynchronous broadcast handling. <br /><br />"
"android.content.BroadcastReceiver.PendingResult.setResultCode (int code)   Version of BroadcastReceiver.setResultCode (int) "," Version of BroadcastReceiver.setResultCode(int) for asynchronous broadcast handling. <br /><br />"
"android.content.ClipboardManager.OnPrimaryClipChangedListener.onPrimaryClipChanged () "," Callback that is invoked by ClipboardManager when the primary clip changes. <br /><br />"
"android.content.ClipData.newUri (ContentResolver resolver, CharSequence label, Uri uri) "," Create a new ClipData holding a URI. <br /><br />"
"android.content.ClipData.newIntent (CharSequence label, Intent intent) "," Create a new ClipData holding an Intent with MIME type MIMETYPE_TEXT_INTENT. <br /><br />"
"android.content.ClipData.getDescription () "," Return the ClipDescription associated with this data, describing what it contains. <br /><br />"
"android.content.ClipData.newHtmlText (CharSequence label, CharSequence text, String htmlText) "," Create a new ClipData holding data of the type MIMETYPE_TEXT_HTML. <br /><br />"
"android.content.ClipData.newRawUri (CharSequence label, Uri uri) "," Create a new ClipData holding an URI with MIME type MIMETYPE_TEXT_URILIST. <br /><br />"
"android.content.ClipData.getItemAt (int index) "," Return a single item inside of the clip data. <br /><br />"
"android.content.ClipData.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.ClipData.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.ClipData.getItemCount () "," Return the number of items in the clip data. <br /><br />"
"android.content.ClipData.addItem (ClipData.Item item) "," Add a new Item to the overall ClipData container. <br /><br />"
"android.content.ClipData.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.ClipData.newPlainText (CharSequence label, CharSequence text) "," Create a new ClipData holding data of the type MIMETYPE_TEXT_PLAIN. <br /><br />"
"android.content.ClipData.Item.getIntent () "," Retrieve the raw Intent contained in this Item. <br /><br />"
"android.content.ClipData.Item.coerceToHtmlText (Context context) "," Turn this item into HTML text, regardless of the type of data it actually contains. <br /><br />"
"android.content.ClipData.Item.coerceToText (Context context) "," Turn this item into text, regardless of the type of data it actually contains. <br /><br />"
"android.content.ClipData.Item.getHtmlText () "," Retrieve the raw HTML text contained in this Item. <br /><br />"
"android.content.ClipData.Item.coerceToStyledText (Context context)   Like coerceToHtmlText (Context) "," Like coerceToHtmlText(Context), but any text that would be returned as HTML formatting will be returned as text with style spans. <br /><br />"
"android.content.ClipData.Item.getText () "," Retrieve the raw text contained in this Item. <br /><br />"
"android.content.ClipData.Item.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.ClipData.Item.getUri () "," Retrieve the raw URI contained in this Item. <br /><br />"
"android.content.ClipDescription.getMimeTypeCount () "," Return the number of MIME types the clip is available in. <br /><br />"
"android.content.ClipDescription.getMimeType (int index) "," Return one of the possible clip MIME types. <br /><br />"
"android.content.ClipDescription.compareMimeTypes (String concreteType, String desiredType) "," Helper to compare two MIME types, where one may be a pattern. <br /><br />"
"android.content.ClipDescription.getLabel () "," Return the label for this clip. <br /><br />"
"android.content.ClipDescription.filterMimeTypes (String mimeType) "," Filter the clip description MIME types by the given MIME type. <br /><br />"
"android.content.ClipDescription.hasMimeType (String mimeType) "," Check whether the clip description contains the given MIME type. <br /><br />"
"android.content.ClipDescription.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.ClipDescription.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.ClipDescription.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.ComponentCallbacks.onConfigurationChanged (Configuration newConfig) "," Called by the system when the device configuration changes while your component is running. <br /><br />"
"android.content.ComponentCallbacks.onLowMemory () "," This is called when the overall system is running low on memory, and actively running processes should trim their memory usage. <br /><br />"
"android.content.ComponentCallbacks2.onTrimMemory (int level) "," Called when the operating system has determined that it is a good time for a process to trim unneeded memory from its process. <br /><br />"
"android.content.ComponentName.getClassName () "," Return the class name of this component. <br /><br />"
"android.content.ComponentName.writeToParcel (ComponentName c, Parcel out) "," Write a ComponentName to a Parcel, handling null pointers. <br /><br />"
"android.content.ComponentName.compareTo (ComponentName that) "," no description <br /><br />"
"android.content.ComponentName.getPackageName () "," Return the package name of this component. <br /><br />"
"android.content.ComponentName.flattenToString () "," Return a String that unambiguously describes both the package and class names contained in the ComponentName. <br /><br />"
"android.content.ComponentName.readFromParcel (Parcel in)   Read a ComponentName from a Parcel that was previously written with writeToParcel (ComponentName, Parcel) "," Read a ComponentName from a Parcel that was previously written with writeToParcel(ComponentName, Parcel), returning either a null or new object as appropriate. <br /><br />"
"android.content.ComponentName.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.ComponentName.unflattenFromString (String str)   Recover a ComponentName from a String that was previously created with flattenToString () "," Recover a ComponentName from a String that was previously created with flattenToString(). <br /><br />"
"android.content.ComponentName.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.ComponentName.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.content.ComponentName.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.ComponentName.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.content.ComponentName.flattenToShortString ()   The same as flattenToString () "," The same as flattenToString(), but abbreviates the class name if it is a suffix of the package. <br /><br />"
"android.content.ComponentName.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.content.ComponentName.getShortClassName ()   Return the class name, either fully qualified or in a shortened form  (with a leading '.') "," Return the class name, either fully qualified or in a shortened form (with a leading '.') if it is a suffix of the package. <br /><br />"
"android.content.ComponentName.toShortString () "," Return string representation of this class without the class's name as a prefix. <br /><br />"
"android.content.ContentProvider.getReadPermission () "," Return the name of the permission required for read-only access to this content provider. <br /><br />"
"android.content.ContentProvider.openAssetFile (Uri uri, String mode, CancellationSignal signal)   This is like openFile (Uri, String) "," This is like openFile(Uri, String), but can be implemented by providers that need to be able to return sub-sections of files, often assets inside of their .apk. <br /><br />"
"android.content.ContentProvider.onCreate () "," Implement this to initialize your content provider on startup. <br /><br />"
"android.content.ContentProvider.bulkInsert (Uri uri, ContentValues[] values)   Override this to handle requests to insert a set of new rows, or the default implementation will iterate over the values and call insert (Uri, ContentValues) "," Override this to handle requests to insert a set of new rows, or the default implementation will iterate over the values and call insert(Uri, ContentValues) on each of them. <br /><br />"
"android.content.ContentProvider.shutdown () "," Implement this to shut down the ContentProvider instance. <br /><br />"
"android.content.ContentProvider.getPathPermissions () "," Return the path-based permissions required for read and/or write access to this content provider. <br /><br />"
"android.content.ContentProvider.update (Uri uri, ContentValues values, String selection, String[] selectionArgs) "," Implement this to handle requests to update one or more rows. <br /><br />"
"android.content.ContentProvider.insert (Uri uri, ContentValues values) "," Implement this to handle requests to insert a new row. <br /><br />"
"android.content.ContentProvider.onConfigurationChanged (Configuration newConfig) "," Called by the system when the device configuration changes while your component is running. This method is always called on the application main thread, and must not perform lengthy operations. <br /><br />"
"android.content.ContentProvider.getType (Uri uri) "," Implement this to handle requests for the MIME type of the data at the given URI. <br /><br />"
"android.content.ContentProvider.canonicalize (Uri url) "," Implement this to support canonicalization of URIs that refer to your content provider. <br /><br />"
"android.content.ContentProvider.getContext () "," Retrieves the Context this provider is running in. <br /><br />"
"android.content.ContentProvider.openFile (Uri uri, String mode, CancellationSignal signal) "," Override this to handle requests to open a file blob. <br /><br />"
"android.content.ContentProvider.getWritePermission () "," Return the name of the permission required for read/write access to this content provider. <br /><br />"
"android.content.ContentProvider.query (Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder, CancellationSignal cancellationSignal) "," Implement this to handle query requests from clients with support for cancellation. <br /><br />"
"android.content.ContentProvider.delete (Uri uri, String selection, String[] selectionArgs) "," Implement this to handle requests to delete one or more rows. <br /><br />"
"android.content.ContentProvider.openFile (Uri uri, String mode) "," Override this to handle requests to open a file blob. <br /><br />"
"android.content.ContentProvider.getStreamTypes (Uri uri, String mimeTypeFilter) "," Called by a client to determine the types of data streams that this content provider supports for the given URI. <br /><br />"
"android.content.ContentProvider.call (String method, String arg, Bundle extras) "," Call a provider-defined method. <br /><br />"
"android.content.ContentProvider.openPipeHelper (Uri uri, String mimeType, Bundle opts, T args, PipeDataWriter<T> func)   A helper function for implementing openTypedAssetFile (Uri, String, Bundle) "," A helper function for implementing openTypedAssetFile(Uri, String, Bundle), for creating a data pipe and background thread allowing you to stream generated data back to the client. <br /><br />"
"android.content.ContentProvider.onTrimMemory (int level) "," Called when the operating system has determined that it is a good time for a process to trim unneeded memory from its process. <br /><br />"
"android.content.ContentProvider.getCallingPackage () "," Return the package name of the caller that initiated the request being processed on the current thread. <br /><br />"
"android.content.ContentProvider.onLowMemory () "," This is called when the overall system is running low on memory, and actively running processes should trim their memory usage. This method is always called on the application main thread, and must not perform lengthy operations. <br /><br />"
"android.content.ContentProvider.dump (FileDescriptor fd, PrintWriter writer, String[] args) "," Print the Provider's state into the given stream. <br /><br />"
"android.content.ContentProvider.openAssetFile (Uri uri, String mode)   This is like openFile (Uri, String) "," This is like openFile(Uri, String), but can be implemented by providers that need to be able to return sub-sections of files, often assets inside of their .apk. <br /><br />"
"android.content.ContentProvider.attachInfo (Context context, ProviderInfo info) "," After being instantiated, this is called to tell the content provider about itself. <br /><br />"
"android.content.ContentProvider.openTypedAssetFile (Uri uri, String mimeTypeFilter, Bundle opts) "," Called by a client to open a read-only stream containing data of a particular MIME type. <br /><br />"
"android.content.ContentProvider.query (Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) "," Implement this to handle query requests from clients. <br /><br />"
"android.content.ContentProvider.openTypedAssetFile (Uri uri, String mimeTypeFilter, Bundle opts, CancellationSignal signal) "," Called by a client to open a read-only stream containing data of a particular MIME type. <br /><br />"
"android.content.ContentProvider.uncanonicalize (Uri url)   Remove canonicalization from canonical URIs previously returned by canonicalize (Uri) "," Remove canonicalization from canonical URIs previously returned by canonicalize(Uri). <br /><br />"
"android.content.ContentProvider.applyBatch (ArrayList< ContentProviderOperation> operations)   Override this to handle requests to perform a batch of operations, or the default implementation will iterate over the operations and call apply (ContentProvider, ContentProviderResult[], int) "," Override this to handle requests to perform a batch of operations, or the default implementation will iterate over the operations and call apply(ContentProvider, ContentProviderResult[], int) on each of them. <br /><br />"
"android.content.ContentProvider.PipeDataWriter<T>.writeDataToPipe (ParcelFileDescriptor output, Uri uri, String mimeType, Bundle opts, T args) "," Called from a background thread to stream data out to a pipe. <br /><br />"
"android.content.ContentProviderClient.delete (Uri url, String selection, String[] selectionArgs)   See "," See ContentProvider.delete <br /><br />"
"android.content.ContentProviderClient.insert (Uri url, ContentValues initialValues)   See "," See ContentProvider.insert <br /><br />"
"android.content.ContentProviderClient.openAssetFile (Uri url, String mode)   See "," See ContentProvider.openAssetFile. <br /><br />"
"android.content.ContentProviderClient.query (Uri url, String[] projection, String selection, String[] selectionArgs, String sortOrder)   See "," See ContentProvider.query <br /><br />"
"android.content.ContentProviderClient.openFile (Uri url, String mode, CancellationSignal signal)   See "," See ContentProvider.openFile. <br /><br />"
"android.content.ContentProviderClient.openAssetFile (Uri url, String mode, CancellationSignal signal)   See "," See ContentProvider.openAssetFile. <br /><br />"
"android.content.ContentProviderClient.update (Uri url, ContentValues values, String selection, String[] selectionArgs)   See "," See ContentProvider.update <br /><br />"
"android.content.ContentProviderClient.release () "," Call this to indicate to the system that the associated ContentProvider is no longer needed by this ContentProviderClient. <br /><br />"
"android.content.ContentProviderClient.applyBatch (ArrayList< ContentProviderOperation> operations)   See "," See ContentProvider.applyBatch <br /><br />"
"android.content.ContentProviderClient.canonicalize (Uri url)   See canonicalize (Uri) "," See canonicalize(Uri) <br /><br />"
"android.content.ContentProviderClient.getLocalContentProvider () "," Get a reference to the ContentProvider that is associated with this client. <br /><br />"
"android.content.ContentProviderClient.getStreamTypes (Uri url, String mimeTypeFilter)   See "," See ContentProvider.getStreamTypes <br /><br />"
"android.content.ContentProviderClient.getType (Uri url)   See "," See ContentProvider.getType <br /><br />"
"android.content.ContentProviderClient.openFile (Uri url, String mode)   See "," See ContentProvider.openFile. <br /><br />"
"android.content.ContentProviderClient.query (Uri url, String[] projection, String selection, String[] selectionArgs, String sortOrder, CancellationSignal cancellationSignal)   See "," See ContentProvider.query <br /><br />"
"android.content.ContentProviderClient.uncanonicalize (Uri url)   See uncanonicalize (Uri) "," See uncanonicalize(Uri) <br /><br />"
"android.content.ContentProviderClient.bulkInsert (Uri url, ContentValues[] initialValues)   See "," See ContentProvider.bulkInsert <br /><br />"
"android.content.ContentProviderClient.openTypedAssetFileDescriptor (Uri uri, String mimeType, Bundle opts)   See "," See ContentProvider.openTypedAssetFile <br /><br />"
"android.content.ContentProviderClient.openTypedAssetFileDescriptor (Uri uri, String mimeType, Bundle opts, CancellationSignal signal)   See "," See ContentProvider.openTypedAssetFile <br /><br />"
"android.content.ContentProviderClient.call (String method, String arg, Bundle extras)   See call (String, String, Bundle) "," See call(String, String, Bundle) <br /><br />"
"android.content.ContentProviderOperation.Builder.withValueBackReferences (ContentValues backReferences) "," Add a ContentValues of back references. <br /><br />"
"android.content.ContentProviderOperation.Builder.withValueBackReference (String key, int previousResult) "," Add a ContentValues back reference. <br /><br />"
"android.content.ContentProviderOperation.Builder.withValues (ContentValues values) "," The ContentValues to use. <br /><br />"
"android.content.ContentProviderOperation.Builder.withExpectedCount (int count) "," If set then if the number of rows affected by this operation do not match this count OperationApplicationException will be throw. <br /><br />"
"android.content.ContentProviderOperation.Builder.withValue (String key, Object value) "," A value to insert or update. <br /><br />"
"android.content.ContentProviderOperation.Builder.withSelectionBackReference (int selectionArgIndex, int previousResult) "," Add a back references as a selection arg. <br /><br />"
"android.content.ContentProviderOperation.Builder.withSelection (String selection, String[] selectionArgs) "," The selection and arguments to use. <br /><br />"
"android.content.ContentProviderOperation.Builder.build () "," Create a ContentProviderOperation from this ContentProviderOperation.Builder. <br /><br />"
"android.content.ContentProviderOperation.Builder.withYieldAllowed (boolean yieldAllowed) "," no description <br /><br />"
"android.content.ContentProviderOperation.isReadOperation () "," no description <br /><br />"
"android.content.ContentProviderOperation.newDelete (Uri uri) "," Create a ContentProviderOperation.Builder suitable for building a delete ContentProviderOperation. <br /><br />"
"android.content.ContentProviderOperation.newUpdate (Uri uri) "," Create a ContentProviderOperation.Builder suitable for building an update ContentProviderOperation. <br /><br />"
"android.content.ContentProviderOperation.apply (ContentProvider provider, ContentProviderResult[] backRefs, int numBackRefs) "," Applies this operation using the given provider. <br /><br />"
"android.content.ContentProviderOperation.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.ContentProviderOperation.isWriteOperation () "," no description <br /><br />"
"android.content.ContentProviderOperation.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.ContentProviderOperation.resolveValueBackReferences (ContentProviderResult[] backRefs, int numBackRefs) "," The ContentValues back references are represented as a ContentValues object where the key refers to a column and the value is an index of the back reference whose valued should be associated with the column. <br /><br />"
"android.content.ContentProviderOperation.newAssertQuery (Uri uri)   Create a ContentProviderOperation.Builder suitable for building a ContentProviderOperation to assert a set of values as provided through withValues (ContentValues) "," Create a ContentProviderOperation.Builder suitable for building a ContentProviderOperation to assert a set of values as provided through withValues(ContentValues). <br /><br />"
"android.content.ContentProviderOperation.resolveSelectionArgsBackReferences (ContentProviderResult[] backRefs, int numBackRefs)   The Selection Arguments back references are represented as a Map of Integer->Integer where the key is an index into the selection argument array  (see withSelection (String, String[])) "," The Selection Arguments back references are represented as a Map of Integer->Integer where the key is an index into the selection argument array (see withSelection(String, String[])) and the value is the index of the previous result that should be used for that selection argument array slot. <br /><br />"
"android.content.ContentProviderOperation.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.ContentProviderOperation.isYieldAllowed () "," no description <br /><br />"
"android.content.ContentProviderOperation.getUri () "," no description <br /><br />"
"android.content.ContentProviderOperation.newInsert (Uri uri) "," Create a ContentProviderOperation.Builder suitable for building an insert ContentProviderOperation. <br /><br />"
"android.content.ContentProviderResult.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.ContentProviderResult.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.ContentProviderResult.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.ContentQueryMap.requery () "," Requeries the cursor and reads the contents into the cache <br /><br />"
"android.content.ContentQueryMap.getRows () "," no description <br /><br />"
"android.content.ContentQueryMap.close () "," no description <br /><br />"
"android.content.ContentQueryMap.setKeepUpdated (boolean keepUpdated) "," Change whether or not the ContentQueryMap will register with the cursor's ContentProvider for change notifications. <br /><br />"
"android.content.ContentQueryMap.getValues (String rowName) "," Access the ContentValues for the row specified by rowName <br /><br />"
"android.content.ContentResolver.openFileDescriptor (Uri uri, String mode, CancellationSignal cancellationSignal) "," Open a raw file descriptor to access data under a URI. <br /><br />"
"android.content.ContentResolver.acquireContentProviderClient (Uri uri) "," Returns a ContentProviderClient that is associated with the ContentProvider that services the content at uri, starting the provider if necessary. <br /><br />"
"android.content.ContentResolver.openAssetFileDescriptor (Uri uri, String mode) "," Open a raw file descriptor to access data under a URI. <br /><br />"
"android.content.ContentResolver.call (Uri uri, String method, String arg, Bundle extras) "," Call a provider-defined method. <br /><br />"
"android.content.ContentResolver.cancelSync (SyncRequest request) "," Remove the specified sync. <br /><br />"
"android.content.ContentResolver.uncanonicalize (Uri url)   Given a canonical Uri previously generated by canonicalize (Uri) "," Given a canonical Uri previously generated by canonicalize(Uri), convert it to its local non-canonical form. <br /><br />"
"android.content.ContentResolver.getCurrentSync ()    This method was deprecated in API level 11. Since multiple concurrent syncs are now supported you should use getCurrentSyncs () "," This method was deprecated in API level 11. Since multiple concurrent syncs are now supported you should use getCurrentSyncs() to get the accurate list of current syncs. This method returns the first item from the list of current syncs or null if there are none. <br /><br />"
"android.content.ContentResolver.setMasterSyncAutomatically (boolean sync) "," Sets the master auto-sync setting that applies to all the providers and accounts. <br /><br />"
"android.content.ContentResolver.openInputStream (Uri uri) "," Open a stream on to the content associated with a content URI. <br /><br />"
"android.content.ContentResolver.bulkInsert (Uri url, ContentValues[] values) "," Inserts multiple rows into a table at the given URL. <br /><br />"
"android.content.ContentResolver.acquireUnstableContentProviderClient (Uri uri)   Like acquireContentProviderClient (Uri) "," Like acquireContentProviderClient(Uri), but for use when you do not trust the stability of the target content provider. <br /><br />"
"android.content.ContentResolver.applyBatch (String authority, ArrayList< ContentProviderOperation> operations) "," Applies each of the ContentProviderOperation objects and returns an array of their results. <br /><br />"
"android.content.ContentResolver.openOutputStream (Uri uri, String mode) "," Open a stream on to the content associated with a content URI. <br /><br />"
"android.content.ContentResolver.isSyncActive (Account account, String authority) "," Returns true if there is currently a sync operation for the given account or authority actively being processed. <br /><br />"
"android.content.ContentResolver.acquireContentProviderClient (String name) "," Returns a ContentProviderClient that is associated with the ContentProvider with the authority of name, starting the provider if necessary. <br /><br />"
"android.content.ContentResolver.notifyChange (Uri uri, ContentObserver observer) "," Notify registered observers that a row was updated and attempt to sync changes to the network. <br /><br />"
"android.content.ContentResolver.removePeriodicSync (Account account, String authority, Bundle extras) "," Remove a periodic sync. <br /><br />"
"android.content.ContentResolver.addPeriodicSync (Account account, String authority, Bundle extras, long pollFrequency) "," Specifies that a sync should be requested with the specified the account, authority, and extras at the given frequency. <br /><br />"
"android.content.ContentResolver.cancelSync (Uri uri)    This method was deprecated in API level 5. instead use cancelSync (android.accounts.Account, String) "," This method was deprecated in API level 5. instead use cancelSync(android.accounts.Account, String) <br /><br />"
"android.content.ContentResolver.setIsSyncable (Account account, String authority, int syncable) "," Set whether this account/provider is syncable. <br /><br />"
"android.content.ContentResolver.query (Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder, CancellationSignal cancellationSignal) "," Query the given URI, returning a Cursor over the result set with optional support for cancellation. <br /><br />"
"android.content.ContentResolver.unregisterContentObserver (ContentObserver observer) "," Unregisters a change observer. <br /><br />"
"android.content.ContentResolver.takePersistableUriPermission (Uri uri, int modeFlags) "," Take a persistable URI permission grant that has been offered. <br /><br />"
"android.content.ContentResolver.openTypedAssetFileDescriptor (Uri uri, String mimeType, Bundle opts, CancellationSignal cancellationSignal)   Open a raw file descriptor to access  (potentially type transformed) "," Open a raw file descriptor to access (potentially type transformed) data from a 'content:' URI. <br /><br />"
"android.content.ContentResolver.cancelSync (Account account, String authority) "," Cancel any active or pending syncs that match account and authority. <br /><br />"
"android.content.ContentResolver.notifyChange (Uri uri, ContentObserver observer, boolean syncToNetwork) "," Notify registered observers that a row was updated. <br /><br />"
"android.content.ContentResolver.validateSyncExtrasBundle (Bundle extras) "," Check that only values of the following types are in the Bundle:  Integer Long Boolean Float Double String Account null <br /><br />"
"android.content.ContentResolver.getType (Uri url) "," Return the MIME type of the given content URL. <br /><br />"
"android.content.ContentResolver.insert (Uri url, ContentValues values) "," Inserts a row into a table at the given URL. <br /><br />"
"android.content.ContentResolver.addStatusChangeListener (int mask, SyncStatusObserver callback) "," Request notifications when the different aspects of the SyncManager change. <br /><br />"
"android.content.ContentResolver.openTypedAssetFileDescriptor (Uri uri, String mimeType, Bundle opts)   Open a raw file descriptor to access  (potentially type transformed) "," Open a raw file descriptor to access (potentially type transformed) data from a 'content:' URI. <br /><br />"
"android.content.ContentResolver.openFileDescriptor (Uri uri, String mode) "," Open a raw file descriptor to access data under a URI. <br /><br />"
"android.content.ContentResolver.getOutgoingPersistedUriPermissions () "," Return list of all persisted URI permission grants that are hosted by the calling app. <br /><br />"
"android.content.ContentResolver.registerContentObserver (Uri uri, boolean notifyForDescendents, ContentObserver observer) "," Register an observer class that gets callbacks when data identified by a given content URI changes. <br /><br />"
"android.content.ContentResolver.canonicalize (Uri url) "," Transform the given url to a canonical representation of its referenced resource, which can be used across devices, persisted, backed up and restored, etc. <br /><br />"
"android.content.ContentResolver.setSyncAutomatically (Account account, String authority, boolean sync) "," Set whether or not the provider is synced when it receives a network tickle. <br /><br />"
"android.content.ContentResolver.getSyncAdapterTypes () "," Get information about the SyncAdapters that are known to the system. <br /><br />"
"android.content.ContentResolver.openAssetFileDescriptor (Uri uri, String mode, CancellationSignal cancellationSignal) "," Open a raw file descriptor to access data under a URI. <br /><br />"
"android.content.ContentResolver.getCurrentSyncs () "," Returns a list with information about all the active syncs. <br /><br />"
"android.content.ContentResolver.isSyncPending (Account account, String authority) "," Return true if the pending status is true of any matching authorities. <br /><br />"
"android.content.ContentResolver.releasePersistableUriPermission (Uri uri, int modeFlags) "," Relinquish a persisted URI permission grant. <br /><br />"
"android.content.ContentResolver.getSyncAutomatically (Account account, String authority) "," Check if the provider should be synced when a network tickle is received This method requires the caller to hold the permission READ_SYNC_SETTINGS. <br /><br />"
"android.content.ContentResolver.acquireUnstableContentProviderClient (String name)   Like acquireContentProviderClient (String) "," Like acquireContentProviderClient(String), but for use when you do not trust the stability of the target content provider. <br /><br />"
"android.content.ContentResolver.requestSync (Account account, String authority, Bundle extras) "," Start an asynchronous sync operation. <br /><br />"
"android.content.ContentResolver.removeStatusChangeListener (Object handle) "," Remove a previously registered status change listener. <br /><br />"
"android.content.ContentResolver.openOutputStream (Uri uri)   Synonym for openOutputStream (uri, 'w') "," Synonym for openOutputStream(uri, 'w'). <br /><br />"
"android.content.ContentResolver.update (Uri uri, ContentValues values, String where, String[] selectionArgs)   Update row (s) "," Update row(s) in a content URI. <br /><br />"
"android.content.ContentResolver.getStreamTypes (Uri url, String mimeTypeFilter)   Query for the possible MIME types for the representations the given content URL can be returned when opened as as stream with openTypedAssetFileDescriptor (Uri, String, Bundle) "," Query for the possible MIME types for the representations the given content URL can be returned when opened as as stream with openTypedAssetFileDescriptor(Uri, String, Bundle). <br /><br />"
"android.content.ContentResolver.delete (Uri url, String where, String[] selectionArgs)   Deletes row (s) "," Deletes row(s) specified by a content URI. <br /><br />"
"android.content.ContentResolver.getPersistedUriPermissions () "," Return list of all URI permission grants that have been persisted by the calling app. <br /><br />"
"android.content.ContentResolver.getPeriodicSyncs (Account account, String authority) "," Get the list of information about the periodic syncs for the given account and authority. <br /><br />"
"android.content.ContentResolver.getIsSyncable (Account account, String authority) "," Check if this account/provider is syncable. <br /><br />"
"android.content.ContentResolver.startSync (Uri uri, Bundle extras)    This method was deprecated in API level 5. instead use requestSync (android.accounts.Account, String, android.os.Bundle) "," This method was deprecated in API level 5. instead use requestSync(android.accounts.Account, String, android.os.Bundle) <br /><br />"
"android.content.ContentResolver.getMasterSyncAutomatically () "," Gets the master auto-sync setting that applies to all the providers and accounts. <br /><br />"
"android.content.ContentResolver.requestSync (SyncRequest request) "," Register a sync with the SyncManager. <br /><br />"
"android.content.ContentResolver.query (Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) "," Query the given URI, returning a Cursor over the result set. <br /><br />"
"android.content.ContentUris.withAppendedId (Uri contentUri, long id) "," Appends the given ID to the end of the path. <br /><br />"
"android.content.ContentUris.parseId (Uri contentUri) "," Converts the last path segment to a long. <br /><br />"
"android.content.ContentUris.appendId (Uri.Builder builder, long id) "," Appends the given ID to the end of the path. <br /><br />"
"android.content.ContentValues.equals (Object object) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.content.ContentValues.get (String key) "," Gets a value. <br /><br />"
"android.content.ContentValues.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.ContentValues.valueSet () "," Returns a set of all of the keys and values <br /><br />"
"android.content.ContentValues.put (String key, byte[] value) "," Adds a value to the set. <br /><br />"
"android.content.ContentValues.size () "," Returns the number of values. <br /><br />"
"android.content.ContentValues.putAll (ContentValues other) "," Adds all values from the passed in ContentValues. <br /><br />"
"android.content.ContentValues.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.ContentValues.put (String key, Byte value) "," Adds a value to the set. <br /><br />"
"android.content.ContentValues.getAsByte (String key) "," Gets a value and converts it to a Byte. <br /><br />"
"android.content.ContentValues.clear () "," Removes all values. <br /><br />"
"android.content.ContentValues.containsKey (String key) "," Returns true if this object has the named value. <br /><br />"
"android.content.ContentValues.getAsByteArray (String key) "," Gets a value that is a byte array. <br /><br />"
"android.content.ContentValues.getAsString (String key) "," Gets a value and converts it to a String. <br /><br />"
"android.content.ContentValues.remove (String key) "," Remove a single value. <br /><br />"
"android.content.ContentValues.getAsShort (String key) "," Gets a value and converts it to a Short. <br /><br />"
"android.content.ContentValues.putNull (String key) "," Adds a null value to the set. <br /><br />"
"android.content.ContentValues.put (String key, Integer value) "," Adds a value to the set. <br /><br />"
"android.content.ContentValues.put (String key, String value) "," Adds a value to the set. <br /><br />"
"android.content.ContentValues.getAsLong (String key) "," Gets a value and converts it to a Long. <br /><br />"
"android.content.ContentValues.put (String key, Double value) "," Adds a value to the set. <br /><br />"
"android.content.ContentValues.getAsBoolean (String key) "," Gets a value and converts it to a Boolean. <br /><br />"
"android.content.ContentValues.put (String key, Float value) "," Adds a value to the set. <br /><br />"
"android.content.ContentValues.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.ContentValues.getAsDouble (String key) "," Gets a value and converts it to a Double. <br /><br />"
"android.content.ContentValues.getAsInteger (String key) "," Gets a value and converts it to an Integer. <br /><br />"
"android.content.ContentValues.put (String key, Short value) "," Adds a value to the set. <br /><br />"
"android.content.ContentValues.keySet () "," Returns a set of all of the keys <br /><br />"
"android.content.ContentValues.getAsFloat (String key) "," Gets a value and converts it to a Float. <br /><br />"
"android.content.ContentValues.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.content.ContentValues.put (String key, Boolean value) "," Adds a value to the set. <br /><br />"
"android.content.ContentValues.put (String key, Long value) "," Adds a value to the set. <br /><br />"
"android.content.Context.sendStickyOrderedBroadcastAsUser (Intent intent, UserHandle user, BroadcastReceiver resultReceiver, Handler scheduler, int initialCode, String initialData, Bundle initialExtras)    This method was deprecated in API level 21. Sticky broadcasts should not be used. They provide no security  (anyone can access them), no protection  (anyone can modify them) "," This method was deprecated in API level 21. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired. <br /><br />"
"android.content.Context.getResources () "," Return a Resources instance for your application's package. <br /><br />"
"android.content.Context.checkUriPermission (Uri uri, String readPermission, String writePermission, int pid, int uid, int modeFlags) "," Check both a Uri and normal permission. <br /><br />"
"android.content.Context.getSystemService (String name) "," Return the handle to a system-level service by name. <br /><br />"
"android.content.Context.openOrCreateDatabase (String name, int mode, SQLiteDatabase.CursorFactory factory) "," Open a new private SQLiteDatabase associated with this Context's application package. <br /><br />"
"android.content.Context.peekWallpaper ()    This method was deprecated in API level 5. Use WallpaperManager.peek () "," This method was deprecated in API level 5. Use WallpaperManager.peek() instead. <br /><br />"
"android.content.Context.setWallpaper (Bitmap bitmap)    This method was deprecated in API level 5. Use WallpaperManager.set () "," This method was deprecated in API level 5. Use WallpaperManager.set() instead.  This method requires the caller to hold the permission SET_WALLPAPER. <br /><br />"
"android.content.Context.unbindService (ServiceConnection conn) "," Disconnect from an application service. <br /><br />"
"android.content.Context.checkPermission (String permission, int pid, int uid) "," Determine whether the given permission is allowed for a particular process and user ID running in the system. <br /><br />"
"android.content.Context.sendStickyOrderedBroadcast (Intent intent, BroadcastReceiver resultReceiver, Handler scheduler, int initialCode, String initialData, Bundle initialExtras)    This method was deprecated in API level 21. Sticky broadcasts should not be used. They provide no security  (anyone can access them), no protection  (anyone can modify them) "," This method was deprecated in API level 21. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired. <br /><br />"
"android.content.Context.sendBroadcastAsUser (Intent intent, UserHandle user, String receiverPermission)   Version of sendBroadcast (Intent, String) "," Version of sendBroadcast(Intent, String) that allows you to specify the user the broadcast will be sent to. <br /><br />"
"android.content.Context.sendBroadcast (Intent intent, String receiverPermission) "," Broadcast the given intent to all interested BroadcastReceivers, allowing an optional required permission to be enforced. <br /><br />"
"android.content.Context.isRestricted () "," Indicates whether this Context is restricted. <br /><br />"
"android.content.Context.getDrawable (int id) "," Return a drawable object associated with a particular resource ID and styled for the current theme. <br /><br />"
"android.content.Context.sendBroadcast (Intent intent) "," Broadcast the given intent to all interested BroadcastReceivers. <br /><br />"
"android.content.Context.getExternalCacheDirs () "," Returns absolute paths to application-specific directories on all external storage devices where the application can place cache files it owns. <br /><br />"
"android.content.Context.getText (int resId) "," Return a localized, styled CharSequence from the application's package's default string table. <br /><br />"
"android.content.Context.openFileOutput (String name, int mode) "," Open a private file associated with this Context's application package for writing. <br /><br />"
"android.content.Context.startIntentSender (IntentSender intent, Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags)   Same as startIntentSender (IntentSender, Intent, int, int, int, Bundle) "," Same as startIntentSender(IntentSender, Intent, int, int, int, Bundle) with no options specified. <br /><br />"
"android.content.Context.sendStickyBroadcastAsUser (Intent intent, UserHandle user)    This method was deprecated in API level 21. Sticky broadcasts should not be used. They provide no security  (anyone can access them), no protection  (anyone can modify them) "," This method was deprecated in API level 21. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired. <br /><br />"
"android.content.Context.unregisterComponentCallbacks (ComponentCallbacks callback)   Remove a ComponentCallbacks object that was previously registered with registerComponentCallbacks (ComponentCallbacks) "," Remove a ComponentCallbacks object that was previously registered with registerComponentCallbacks(ComponentCallbacks). <br /><br />"
"android.content.Context.getMainLooper () "," Return the Looper for the main thread of the current process. <br /><br />"
"android.content.Context.revokeUriPermission (Uri uri, int modeFlags)   Remove all permissions to access a particular content provider Uri that were previously added with grantUriPermission (String, Uri, int) "," Remove all permissions to access a particular content provider Uri that were previously added with grantUriPermission(String, Uri, int). <br /><br />"
"android.content.Context.getPackageName () "," Return the name of this application's package. <br /><br />"
"android.content.Context.createConfigurationContext (Configuration overrideConfiguration) "," Return a new Context object for the current Context but whose resources are adjusted to match the given Configuration. <br /><br />"
"android.content.Context.removeStickyBroadcastAsUser (Intent intent, UserHandle user)    This method was deprecated in API level 21. Sticky broadcasts should not be used. They provide no security  (anyone can access them), no protection  (anyone can modify them) "," This method was deprecated in API level 21. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired. <br /><br />"
"android.content.Context.createDisplayContext (Display display) "," Return a new Context object for the current Context but whose resources are adjusted to match the metrics of the given Display. <br /><br />"
"android.content.Context.getAssets () "," Return an AssetManager instance for your application's package. <br /><br />"
"android.content.Context.getApplicationInfo () "," Return the full application info for this context's package. <br /><br />"
"android.content.Context.getDatabasePath (String name)   Returns the absolute path on the filesystem where a database created with openOrCreateDatabase (String, int, SQLiteDatabase.CursorFactory) "," Returns the absolute path on the filesystem where a database created with openOrCreateDatabase(String, int, SQLiteDatabase.CursorFactory) is stored. <br /><br />"
"android.content.Context.getCodeCacheDir () "," Returns the absolute path to the application specific cache directory on the filesystem designed for storing cached code. <br /><br />"
"android.content.Context.stopService (Intent service) "," Request that a given application service be stopped. <br /><br />"
"android.content.Context.checkCallingPermission (String permission) "," Determine whether the calling process of an IPC you are handling has been granted a particular permission. <br /><br />"
"android.content.Context.getClassLoader () "," Return a class loader you can use to retrieve classes in this package. <br /><br />"
"android.content.Context.getString (int resId) "," Return a localized string from the application's package's default string table. <br /><br />"
"android.content.Context.getFileStreamPath (String name)   Returns the absolute path on the filesystem where a file created with openFileOutput (String, int) "," Returns the absolute path on the filesystem where a file created with openFileOutput(String, int) is stored. <br /><br />"
"android.content.Context.getSharedPreferences (String name, int mode) "," Retrieve and hold the contents of the preferences file 'name', returning a SharedPreferences through which you can retrieve and modify its values. <br /><br />"
"android.content.Context.bindService (Intent service, ServiceConnection conn, int flags) "," Connect to an application service, creating it if needed. <br /><br />"
"android.content.Context.getExternalFilesDirs (String type) "," Returns absolute paths to application-specific directories on all external storage devices where the application can place persistent files it owns. <br /><br />"
"android.content.Context.databaseList () "," Returns an array of strings naming the private databases associated with this Context's application package. <br /><br />"
"android.content.Context.getFilesDir ()   Returns the absolute path to the directory on the filesystem where files created with openFileOutput (String, int) "," Returns the absolute path to the directory on the filesystem where files created with openFileOutput(String, int) are stored. <br /><br />"
"android.content.Context.getString (int resId, Object... formatArgs)   Return a localized formatted string from the application's package's default string table, substituting the format arguments as defined in Formatter and format (String, Object...) "," Return a localized formatted string from the application's package's default string table, substituting the format arguments as defined in Formatter and format(String, Object...). <br /><br />"
"android.content.Context.sendOrderedBroadcastAsUser (Intent intent, UserHandle user, String receiverPermission, BroadcastReceiver resultReceiver, Handler scheduler, int initialCode, String initialData, Bundle initialExtras)   Version of sendOrderedBroadcast (Intent, String, BroadcastReceiver, Handler, int, String, Bundle) "," Version of sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String, Bundle) that allows you to specify the user the broadcast will be sent to. <br /><br />"
"android.content.Context.getExternalFilesDir (String type)   Returns the absolute path to the directory on the primary external filesystem  (that is somewhere on Environment.getExternalStorageDirectory ()) "," Returns the absolute path to the directory on the primary external filesystem (that is somewhere on Environment.getExternalStorageDirectory()) where the application can place persistent files it owns. <br /><br />"
"android.content.Context.startActivity (Intent intent)   Same as startActivity (Intent, Bundle) "," Same as startActivity(Intent, Bundle) with no options specified. <br /><br />"
"android.content.Context.createPackageContext (String packageName, int flags) "," Return a new Context object for the given application name. <br /><br />"
"android.content.Context.getTheme () "," Return the Theme object associated with this Context. <br /><br />"
"android.content.Context.fileList () "," Returns an array of strings naming the private files associated with this Context's application package. <br /><br />"
"android.content.Context.startActivities (Intent[] intents, Bundle options) "," Launch multiple new activities. <br /><br />"
"android.content.Context.obtainStyledAttributes (AttributeSet set, int[] attrs) "," Retrieve styled attribute information in this Context's theme. <br /><br />"
"android.content.Context.getPackageManager () "," Return PackageManager instance to find global package information. <br /><br />"
"android.content.Context.startActivities (Intent[] intents)   Same as startActivities (Intent[], Bundle) "," Same as startActivities(Intent[], Bundle) with no options specified. <br /><br />"
"android.content.Context.enforceUriPermission (Uri uri, String readPermission, String writePermission, int pid, int uid, int modeFlags, String message) "," Enforce both a Uri and normal permission. <br /><br />"
"android.content.Context.enforceCallingOrSelfUriPermission (Uri uri, int modeFlags, String message) "," If the calling process of an IPC or you has not been granted permission to access a specific URI, throw SecurityException. <br /><br />"
"android.content.Context.registerReceiver (BroadcastReceiver receiver, IntentFilter filter) "," Register a BroadcastReceiver to be run in the main activity thread. <br /><br />"
"android.content.Context.checkCallingOrSelfPermission (String permission) "," Determine whether the calling process of an IPC or you have been granted a particular permission. <br /><br />"
"android.content.Context.enforceCallingPermission (String permission, String message) "," If the calling process of an IPC you are handling has not been granted a particular permission, throw a SecurityException. <br /><br />"
"android.content.Context.enforceUriPermission (Uri uri, int pid, int uid, int modeFlags, String message) "," If a particular process and user ID has not been granted permission to access a specific URI, throw SecurityException. <br /><br />"
"android.content.Context.enforcePermission (String permission, int pid, int uid, String message) "," If the given permission is not allowed for a particular process and user ID running in the system, throw a SecurityException. <br /><br />"
"android.content.Context.setTheme (int resid) "," Set the base theme for this context. <br /><br />"
"android.content.Context.enforceCallingUriPermission (Uri uri, int modeFlags, String message) "," If the calling process and user ID has not been granted permission to access a specific URI, throw SecurityException. <br /><br />"
"android.content.Context.getObbDirs ()   Returns absolute paths to application-specific directories on all external storage devices where the application's OBB files  (if there are any) "," Returns absolute paths to application-specific directories on all external storage devices where the application's OBB files (if there are any) can be found. <br /><br />"
"android.content.Context.obtainStyledAttributes (int resid, int[] attrs) "," Retrieve styled attribute information in this Context's theme. <br /><br />"
"android.content.Context.enforceCallingOrSelfPermission (String permission, String message) "," If neither you nor the calling process of an IPC you are handling has been granted a particular permission, throw a SecurityException. <br /><br />"
"android.content.Context.openFileInput (String name) "," Open a private file associated with this Context's application package for reading. <br /><br />"
"android.content.Context.registerComponentCallbacks (ComponentCallbacks callback) "," Add a new ComponentCallbacks to the base application of the Context, which will be called at the same times as the ComponentCallbacks methods of activities and other components are called. <br /><br />"
"android.content.Context.getExternalMediaDirs () "," Returns absolute paths to application-specific directories on all external storage devices where the application can place media files. <br /><br />"
"android.content.Context.checkUriPermission (Uri uri, int pid, int uid, int modeFlags) "," Determine whether a particular process and user ID has been granted permission to access a specific URI. <br /><br />"
"android.content.Context.getPackageCodePath () "," Return the full path to this context's primary Android package. <br /><br />"
"android.content.Context.checkCallingOrSelfUriPermission (Uri uri, int modeFlags) "," Determine whether the calling process of an IPC or you has been granted permission to access a specific URI. <br /><br />"
"android.content.Context.unregisterReceiver (BroadcastReceiver receiver) "," Unregister a previously registered BroadcastReceiver. <br /><br />"
"android.content.Context.getApplicationContext () "," Return the context of the single, global Application object of the current process. <br /><br />"
"android.content.Context.startIntentSender (IntentSender intent, Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags, Bundle options)   Like startActivity (Intent, Bundle) "," Like startActivity(Intent, Bundle), but taking a IntentSender to start. <br /><br />"
"android.content.Context.sendBroadcastAsUser (Intent intent, UserHandle user)   Version of sendBroadcast (Intent) "," Version of sendBroadcast(Intent) that allows you to specify the user the broadcast will be sent to. <br /><br />"
"android.content.Context.getPackageResourcePath () "," Return the full path to this context's primary Android package. <br /><br />"
"android.content.Context.getNoBackupFilesDir ()   Returns the absolute path to the directory on the filesystem similar to getFilesDir () "," Returns the absolute path to the directory on the filesystem similar to getFilesDir(). <br /><br />"
"android.content.Context.getWallpaper ()    This method was deprecated in API level 5. Use WallpaperManager.get () "," This method was deprecated in API level 5. Use WallpaperManager.get() instead. <br /><br />"
"android.content.Context.grantUriPermission (String toPackage, Uri uri, int modeFlags) "," Grant permission to access a specific Uri to another package, regardless of whether that package has general permission to access the Uri's content provider. <br /><br />"
"android.content.Context.getContentResolver () "," Return a ContentResolver instance for your application's package. <br /><br />"
"android.content.Context.deleteFile (String name) "," Delete the given private file associated with this Context's application package. <br /><br />"
"android.content.Context.sendStickyBroadcast (Intent intent)    This method was deprecated in API level 21. Sticky broadcasts should not be used. They provide no security  (anyone can access them), no protection  (anyone can modify them) "," This method was deprecated in API level 21. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired. <br /><br />"
"android.content.Context.removeStickyBroadcast (Intent intent)    This method was deprecated in API level 21. Sticky broadcasts should not be used. They provide no security  (anyone can access them), no protection  (anyone can modify them) "," This method was deprecated in API level 21. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired. <br /><br />"
"android.content.Context.obtainStyledAttributes (int[] attrs) "," Retrieve styled attribute information in this Context's theme. <br /><br />"
"android.content.Context.registerReceiver (BroadcastReceiver receiver, IntentFilter filter, String broadcastPermission, Handler scheduler) "," Register to receive intent broadcasts, to run in the context of scheduler. <br /><br />"
"android.content.Context.getObbDir ()   Return the primary external storage directory where this application's OBB files  (if there are any) "," Return the primary external storage directory where this application's OBB files (if there are any) can be found. <br /><br />"
"android.content.Context.clearWallpaper ()    This method was deprecated in API level 5. Use WallpaperManager.clear () "," This method was deprecated in API level 5. Use WallpaperManager.clear() instead.  This method requires the caller to hold the permission SET_WALLPAPER. <br /><br />"
"android.content.Context.startInstrumentation (ComponentName className, String profileFile, Bundle arguments) "," Start executing an Instrumentation class. <br /><br />"
"android.content.Context.getExternalCacheDir ()   Returns the absolute path to the directory on the primary external filesystem  (that is somewhere on Environment.getExternalStorageDirectory () "," Returns the absolute path to the directory on the primary external filesystem (that is somewhere on Environment.getExternalStorageDirectory() where the application can place cache files it owns. <br /><br />"
"android.content.Context.getWallpaperDesiredMinimumWidth ()    This method was deprecated in API level 5. Use WallpaperManager.getDesiredMinimumWidth () "," This method was deprecated in API level 5. Use WallpaperManager.getDesiredMinimumWidth() instead. <br /><br />"
"android.content.Context.getWallpaperDesiredMinimumHeight ()    This method was deprecated in API level 5. Use WallpaperManager.getDesiredMinimumHeight () "," This method was deprecated in API level 5. Use WallpaperManager.getDesiredMinimumHeight() instead. <br /><br />"
"android.content.Context.openOrCreateDatabase (String name, int mode, SQLiteDatabase.CursorFactory factory, DatabaseErrorHandler errorHandler) "," Open a new private SQLiteDatabase associated with this Context's application package. <br /><br />"
"android.content.Context.setWallpaper (InputStream data)    This method was deprecated in API level 5. Use WallpaperManager.set () "," This method was deprecated in API level 5. Use WallpaperManager.set() instead.  This method requires the caller to hold the permission SET_WALLPAPER. <br /><br />"
"android.content.Context.startActivity (Intent intent, Bundle options) "," Launch a new activity. <br /><br />"
"android.content.Context.getCacheDir () "," Returns the absolute path to the application specific cache directory on the filesystem. <br /><br />"
"android.content.Context.checkCallingUriPermission (Uri uri, int modeFlags) "," Determine whether the calling process and user ID has been granted permission to access a specific URI. <br /><br />"
"android.content.Context.sendOrderedBroadcast (Intent intent, String receiverPermission, BroadcastReceiver resultReceiver, Handler scheduler, int initialCode, String initialData, Bundle initialExtras)   Version of sendBroadcast (Intent) "," Version of sendBroadcast(Intent) that allows you to receive data back from the broadcast. <br /><br />"
"android.content.Context.getDir (String name, int mode) "," Retrieve, creating if needed, a new directory in which the application can place its own custom data files. <br /><br />"
"android.content.Context.obtainStyledAttributes (AttributeSet set, int[] attrs, int defStyleAttr, int defStyleRes) "," Retrieve styled attribute information in this Context's theme. <br /><br />"
"android.content.Context.startService (Intent service) "," Request that a given application service be started. <br /><br />"
"android.content.Context.deleteDatabase (String name) "," Delete an existing private SQLiteDatabase associated with this Context's application package. <br /><br />"
"android.content.Context.sendOrderedBroadcast (Intent intent, String receiverPermission) "," Broadcast the given intent to all interested BroadcastReceivers, delivering them one at a time to allow more preferred receivers to consume the broadcast before it is delivered to less preferred receivers. <br /><br />"
"android.content.ContextWrapper.getPackageManager () "," Return PackageManager instance to find global package information. <br /><br />"
"android.content.ContextWrapper.startActivities (Intent[] intents)   Same as startActivities (Intent[], Bundle) "," Same as startActivities(Intent[], Bundle) with no options specified. <br /><br />"
"android.content.ContextWrapper.getResources () "," Return a Resources instance for your application's package. <br /><br />"
"android.content.ContextWrapper.enforceUriPermission (Uri uri, String readPermission, String writePermission, int pid, int uid, int modeFlags, String message) "," Enforce both a Uri and normal permission. <br /><br />"
"android.content.ContextWrapper.enforceCallingOrSelfUriPermission (Uri uri, int modeFlags, String message) "," If the calling process of an IPC or you has not been granted permission to access a specific URI, throw SecurityException. <br /><br />"
"android.content.ContextWrapper.checkUriPermission (Uri uri, String readPermission, String writePermission, int pid, int uid, int modeFlags) "," Check both a Uri and normal permission. <br /><br />"
"android.content.ContextWrapper.openOrCreateDatabase (String name, int mode, SQLiteDatabase.CursorFactory factory) "," Open a new private SQLiteDatabase associated with this Context's application package. <br /><br />"
"android.content.ContextWrapper.getSystemService (String name) "," Return the handle to a system-level service by name. <br /><br />"
"android.content.ContextWrapper.registerReceiver (BroadcastReceiver receiver, IntentFilter filter) "," Register a BroadcastReceiver to be run in the main activity thread. <br /><br />"
"android.content.ContextWrapper.sendStickyBroadcastAsUser (Intent intent, UserHandle user)    This method is deprecated. Sticky broadcasts should not be used. They provide no security  (anyone can access them), no protection  (anyone can modify them) "," This method is deprecated. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired. <br /><br />"
"android.content.ContextWrapper.enforceCallingPermission (String permission, String message) "," If the calling process of an IPC you are handling has not been granted a particular permission, throw a SecurityException. <br /><br />"
"android.content.ContextWrapper.checkCallingOrSelfPermission (String permission) "," Determine whether the calling process of an IPC or you have been granted a particular permission. <br /><br />"
"android.content.ContextWrapper.enforceUriPermission (Uri uri, int pid, int uid, int modeFlags, String message) "," If a particular process and user ID has not been granted permission to access a specific URI, throw SecurityException. <br /><br />"
"android.content.ContextWrapper.enforcePermission (String permission, int pid, int uid, String message) "," If the given permission is not allowed for a particular process and user ID running in the system, throw a SecurityException. <br /><br />"
"android.content.ContextWrapper.setTheme (int resid) "," Set the base theme for this context. <br /><br />"
"android.content.ContextWrapper.unbindService (ServiceConnection conn) "," Disconnect from an application service. <br /><br />"
"android.content.ContextWrapper.sendStickyOrderedBroadcast (Intent intent, BroadcastReceiver resultReceiver, Handler scheduler, int initialCode, String initialData, Bundle initialExtras)    This method is deprecated. Sticky broadcasts should not be used. They provide no security  (anyone can access them), no protection  (anyone can modify them) "," This method is deprecated. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired. <br /><br />"
"android.content.ContextWrapper.enforceCallingUriPermission (Uri uri, int modeFlags, String message) "," If the calling process and user ID has not been granted permission to access a specific URI, throw SecurityException. <br /><br />"
"android.content.ContextWrapper.sendStickyOrderedBroadcastAsUser (Intent intent, UserHandle user, BroadcastReceiver resultReceiver, Handler scheduler, int initialCode, String initialData, Bundle initialExtras)    This method is deprecated. Sticky broadcasts should not be used. They provide no security  (anyone can access them), no protection  (anyone can modify them) "," This method is deprecated. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired. <br /><br />"
"android.content.ContextWrapper.checkPermission (String permission, int pid, int uid) "," Determine whether the given permission is allowed for a particular process and user ID running in the system. <br /><br />"
"android.content.ContextWrapper.sendBroadcastAsUser (Intent intent, UserHandle user, String receiverPermission)   Version of sendBroadcast (Intent, String) "," Version of sendBroadcast(Intent, String) that allows you to specify the user the broadcast will be sent to. <br /><br />"
"android.content.ContextWrapper.getObbDirs ()   Returns absolute paths to application-specific directories on all external storage devices where the application's OBB files  (if there are any) "," Returns absolute paths to application-specific directories on all external storage devices where the application's OBB files (if there are any) can be found. <br /><br />"
"android.content.ContextWrapper.sendBroadcast (Intent intent, String receiverPermission) "," Broadcast the given intent to all interested BroadcastReceivers, allowing an optional required permission to be enforced. <br /><br />"
"android.content.ContextWrapper.removeStickyBroadcast (Intent intent)    This method is deprecated. Sticky broadcasts should not be used. They provide no security  (anyone can access them), no protection  (anyone can modify them) "," This method is deprecated. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired. <br /><br />"
"android.content.ContextWrapper.isRestricted () "," Indicates whether this Context is restricted. <br /><br />"
"android.content.ContextWrapper.enforceCallingOrSelfPermission (String permission, String message) "," If neither you nor the calling process of an IPC you are handling has been granted a particular permission, throw a SecurityException. <br /><br />"
"android.content.ContextWrapper.sendBroadcast (Intent intent) "," Broadcast the given intent to all interested BroadcastReceivers. <br /><br />"
"android.content.ContextWrapper.openFileOutput (String name, int mode) "," Open a private file associated with this Context's application package for writing. <br /><br />"
"android.content.ContextWrapper.getExternalCacheDirs () "," Returns absolute paths to application-specific directories on all external storage devices where the application can place cache files it owns. <br /><br />"
"android.content.ContextWrapper.removeStickyBroadcastAsUser (Intent intent, UserHandle user)    This method is deprecated. Sticky broadcasts should not be used. They provide no security  (anyone can access them), no protection  (anyone can modify them) "," This method is deprecated. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired. <br /><br />"
"android.content.ContextWrapper.openFileInput (String name) "," Open a private file associated with this Context's application package for reading. <br /><br />"
"android.content.ContextWrapper.peekWallpaper ()    This method is deprecated. Use WallpaperManager.peek () "," This method is deprecated. Use WallpaperManager.peek() instead. <br /><br />"
"android.content.ContextWrapper.checkUriPermission (Uri uri, int pid, int uid, int modeFlags) "," Determine whether a particular process and user ID has been granted permission to access a specific URI. <br /><br />"
"android.content.ContextWrapper.getExternalMediaDirs () "," Returns absolute paths to application-specific directories on all external storage devices where the application can place media files. <br /><br />"
"android.content.ContextWrapper.getPackageCodePath () "," Return the full path to this context's primary Android package. <br /><br />"
"android.content.ContextWrapper.startIntentSender (IntentSender intent, Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags)   Same as startIntentSender (IntentSender, Intent, int, int, int, Bundle) "," Same as startIntentSender(IntentSender, Intent, int, int, int, Bundle) with no options specified. <br /><br />"
"android.content.ContextWrapper.checkCallingOrSelfUriPermission (Uri uri, int modeFlags) "," Determine whether the calling process of an IPC or you has been granted permission to access a specific URI. <br /><br />"
"android.content.ContextWrapper.unregisterReceiver (BroadcastReceiver receiver) "," Unregister a previously registered BroadcastReceiver. <br /><br />"
"android.content.ContextWrapper.getApplicationContext () "," Return the context of the single, global Application object of the current process. <br /><br />"
"android.content.ContextWrapper.startIntentSender (IntentSender intent, Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags, Bundle options)   Like startActivity (Intent, Bundle) "," Like startActivity(Intent, Bundle), but taking a IntentSender to start. <br /><br />"
"android.content.ContextWrapper.stopService (Intent name) "," Request that a given application service be stopped. <br /><br />"
"android.content.ContextWrapper.getWallpaperDesiredMinimumHeight ()    This method is deprecated. Use WallpaperManager.getDesiredMinimumHeight () "," This method is deprecated. Use WallpaperManager.getDesiredMinimumHeight() instead. <br /><br />"
"android.content.ContextWrapper.getMainLooper () "," Return the Looper for the main thread of the current process. <br /><br />"
"android.content.ContextWrapper.sendBroadcastAsUser (Intent intent, UserHandle user)   Version of sendBroadcast (Intent) "," Version of sendBroadcast(Intent) that allows you to specify the user the broadcast will be sent to. <br /><br />"
"android.content.ContextWrapper.getPackageResourcePath () "," Return the full path to this context's primary Android package. <br /><br />"
"android.content.ContextWrapper.revokeUriPermission (Uri uri, int modeFlags)   Remove all permissions to access a particular content provider Uri that were previously added with grantUriPermission (String, Uri, int) "," Remove all permissions to access a particular content provider Uri that were previously added with grantUriPermission(String, Uri, int). <br /><br />"
"android.content.ContextWrapper.getPackageName () "," Return the name of this application's package. <br /><br />"
"android.content.ContextWrapper.createConfigurationContext (Configuration overrideConfiguration) "," Return a new Context object for the current Context but whose resources are adjusted to match the given Configuration. <br /><br />"
"android.content.ContextWrapper.getNoBackupFilesDir ()   Returns the absolute path to the directory on the filesystem similar to getFilesDir () "," Returns the absolute path to the directory on the filesystem similar to getFilesDir(). <br /><br />"
"android.content.ContextWrapper.sendStickyBroadcast (Intent intent)    This method is deprecated. Sticky broadcasts should not be used. They provide no security  (anyone can access them), no protection  (anyone can modify them) "," This method is deprecated. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired. <br /><br />"
"android.content.ContextWrapper.grantUriPermission (String toPackage, Uri uri, int modeFlags) "," Grant permission to access a specific Uri to another package, regardless of whether that package has general permission to access the Uri's content provider. <br /><br />"
"android.content.ContextWrapper.getWallpaper ()    This method is deprecated. Use WallpaperManager.get () "," This method is deprecated. Use WallpaperManager.get() instead. <br /><br />"
"android.content.ContextWrapper.clearWallpaper ()    This method is deprecated. Use WallpaperManager.clear () "," This method is deprecated. Use WallpaperManager.clear() instead.  This method requires the caller to hold the permission SET_WALLPAPER. <br /><br />"
"android.content.ContextWrapper.getContentResolver () "," Return a ContentResolver instance for your application's package. <br /><br />"
"android.content.ContextWrapper.createDisplayContext (Display display) "," Return a new Context object for the current Context but whose resources are adjusted to match the metrics of the given Display. <br /><br />"
"android.content.ContextWrapper.deleteFile (String name) "," Delete the given private file associated with this Context's application package. <br /><br />"
"android.content.ContextWrapper.getApplicationInfo () "," Return the full application info for this context's package. <br /><br />"
"android.content.ContextWrapper.getAssets () "," Return an AssetManager instance for your application's package. <br /><br />"
"android.content.ContextWrapper.getDatabasePath (String name)   Returns the absolute path on the filesystem where a database created with openOrCreateDatabase (String, int, SQLiteDatabase.CursorFactory) "," Returns the absolute path on the filesystem where a database created with openOrCreateDatabase(String, int, SQLiteDatabase.CursorFactory) is stored. <br /><br />"
"android.content.ContextWrapper.getCodeCacheDir () "," Returns the absolute path to the application specific cache directory on the filesystem designed for storing cached code. <br /><br />"
"android.content.ContextWrapper.checkCallingPermission (String permission) "," Determine whether the calling process of an IPC you are handling has been granted a particular permission. <br /><br />"
"android.content.ContextWrapper.registerReceiver (BroadcastReceiver receiver, IntentFilter filter, String broadcastPermission, Handler scheduler) "," Register to receive intent broadcasts, to run in the context of scheduler. <br /><br />"
"android.content.ContextWrapper.getClassLoader () "," Return a class loader you can use to retrieve classes in this package. <br /><br />"
"android.content.ContextWrapper.getSharedPreferences (String name, int mode) "," Retrieve and hold the contents of the preferences file 'name', returning a SharedPreferences through which you can retrieve and modify its values. <br /><br />"
"android.content.ContextWrapper.getFileStreamPath (String name)   Returns the absolute path on the filesystem where a file created with openFileOutput (String, int) "," Returns the absolute path on the filesystem where a file created with openFileOutput(String, int) is stored. <br /><br />"
"android.content.ContextWrapper.bindService (Intent service, ServiceConnection conn, int flags) "," Connect to an application service, creating it if needed. <br /><br />"
"android.content.ContextWrapper.getObbDir ()   Return the primary external storage directory where this application's OBB files  (if there are any) "," Return the primary external storage directory where this application's OBB files (if there are any) can be found. <br /><br />"
"android.content.ContextWrapper.startInstrumentation (ComponentName className, String profileFile, Bundle arguments) "," Start executing an Instrumentation class. <br /><br />"
"android.content.ContextWrapper.setWallpaper (InputStream data)    This method is deprecated. Use WallpaperManager.set () "," This method is deprecated. Use WallpaperManager.set() instead.  This method requires the caller to hold the permission SET_WALLPAPER. <br /><br />"
"android.content.ContextWrapper.databaseList () "," Returns an array of strings naming the private databases associated with this Context's application package. <br /><br />"
"android.content.ContextWrapper.getExternalFilesDirs (String type) "," Returns absolute paths to application-specific directories on all external storage devices where the application can place persistent files it owns. <br /><br />"
"android.content.ContextWrapper.getExternalCacheDir ()   Returns the absolute path to the directory on the primary external filesystem  (that is somewhere on Environment.getExternalStorageDirectory () "," Returns the absolute path to the directory on the primary external filesystem (that is somewhere on Environment.getExternalStorageDirectory() where the application can place cache files it owns. <br /><br />"
"android.content.ContextWrapper.getFilesDir ()   Returns the absolute path to the directory on the filesystem where files created with openFileOutput (String, int) "," Returns the absolute path to the directory on the filesystem where files created with openFileOutput(String, int) are stored. <br /><br />"
"android.content.ContextWrapper.openOrCreateDatabase (String name, int mode, SQLiteDatabase.CursorFactory factory, DatabaseErrorHandler errorHandler) "," Open a new private SQLiteDatabase associated with this Context's application package. <br /><br />"
"android.content.ContextWrapper.sendOrderedBroadcastAsUser (Intent intent, UserHandle user, String receiverPermission, BroadcastReceiver resultReceiver, Handler scheduler, int initialCode, String initialData, Bundle initialExtras)   Version of sendOrderedBroadcast (Intent, String, BroadcastReceiver, Handler, int, String, Bundle) "," Version of sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String, Bundle) that allows you to specify the user the broadcast will be sent to. <br /><br />"
"android.content.ContextWrapper.startActivity (Intent intent, Bundle options) "," Launch a new activity. <br /><br />"
"android.content.ContextWrapper.getCacheDir () "," Returns the absolute path to the application specific cache directory on the filesystem. <br /><br />"
"android.content.ContextWrapper.getExternalFilesDir (String type)   Returns the absolute path to the directory on the primary external filesystem  (that is somewhere on Environment.getExternalStorageDirectory ()) "," Returns the absolute path to the directory on the primary external filesystem (that is somewhere on Environment.getExternalStorageDirectory()) where the application can place persistent files it owns. <br /><br />"
"android.content.ContextWrapper.sendOrderedBroadcast (Intent intent, String receiverPermission, BroadcastReceiver resultReceiver, Handler scheduler, int initialCode, String initialData, Bundle initialExtras)   Version of sendBroadcast (Intent) "," Version of sendBroadcast(Intent) that allows you to receive data back from the broadcast. <br /><br />"
"android.content.ContextWrapper.checkCallingUriPermission (Uri uri, int modeFlags) "," Determine whether the calling process and user ID has been granted permission to access a specific URI. <br /><br />"
"android.content.ContextWrapper.getDir (String name, int mode) "," Retrieve, creating if needed, a new directory in which the application can place its own custom data files. <br /><br />"
"android.content.ContextWrapper.setWallpaper (Bitmap bitmap)    This method is deprecated. Use WallpaperManager.set () "," This method is deprecated. Use WallpaperManager.set() instead.  This method requires the caller to hold the permission SET_WALLPAPER. <br /><br />"
"android.content.ContextWrapper.startActivity (Intent intent)   Same as startActivity (Intent, Bundle) "," Same as startActivity(Intent, Bundle) with no options specified. <br /><br />"
"android.content.ContextWrapper.getWallpaperDesiredMinimumWidth ()    This method is deprecated. Use WallpaperManager.getDesiredMinimumWidth () "," This method is deprecated. Use WallpaperManager.getDesiredMinimumWidth() instead. <br /><br />"
"android.content.ContextWrapper.getBaseContext () "," no description <br /><br />"
"android.content.ContextWrapper.startService (Intent service) "," Request that a given application service be started. <br /><br />"
"android.content.ContextWrapper.getTheme () "," Return the Theme object associated with this Context. <br /><br />"
"android.content.ContextWrapper.createPackageContext (String packageName, int flags) "," Return a new Context object for the given application name. <br /><br />"
"android.content.ContextWrapper.sendOrderedBroadcast (Intent intent, String receiverPermission) "," Broadcast the given intent to all interested BroadcastReceivers, delivering them one at a time to allow more preferred receivers to consume the broadcast before it is delivered to less preferred receivers. <br /><br />"
"android.content.ContextWrapper.fileList () "," Returns an array of strings naming the private files associated with this Context's application package. <br /><br />"
"android.content.ContextWrapper.deleteDatabase (String name) "," Delete an existing private SQLiteDatabase associated with this Context's application package. <br /><br />"
"android.content.ContextWrapper.startActivities (Intent[] intents, Bundle options) "," Launch multiple new activities. <br /><br />"
"android.content.CursorLoader.setSelection (String selection) "," no description <br /><br />"
"android.content.CursorLoader.cancelLoadInBackground () "," Called on the main thread to abort a load in progress. <br /><br />"
"android.content.CursorLoader.loadInBackground () "," Called on a worker thread to perform the actual load and to return the result of the load operation. <br /><br />"
"android.content.CursorLoader.setUri (Uri uri) "," no description <br /><br />"
"android.content.CursorLoader.getSortOrder () "," no description <br /><br />"
"android.content.CursorLoader.setProjection (String[] projection) "," no description <br /><br />"
"android.content.CursorLoader.deliverResult (Cursor cursor) "," Sends the result of the load to the registered listener. <br /><br />"
"android.content.CursorLoader.setSortOrder (String sortOrder) "," no description <br /><br />"
"android.content.CursorLoader.getSelectionArgs () "," no description <br /><br />"
"android.content.CursorLoader.getSelection () "," no description <br /><br />"
"android.content.CursorLoader.setSelectionArgs (String[] selectionArgs) "," no description <br /><br />"
"android.content.CursorLoader.onCanceled (Cursor cursor) "," Called if the task was canceled before it was completed. <br /><br />"
"android.content.CursorLoader.getProjection () "," no description <br /><br />"
"android.content.CursorLoader.dump (String prefix, FileDescriptor fd, PrintWriter writer, String[] args) "," Print the Loader's state into the given stream. <br /><br />"
"android.content.CursorLoader.getUri () "," no description <br /><br />"
"android.content.DialogInterface.dismiss () "," no description <br /><br />"
"android.content.DialogInterface.cancel () "," no description <br /><br />"
"android.content.DialogInterface.OnCancelListener.onCancel (DialogInterface dialog) "," This method will be invoked when the dialog is canceled. <br /><br />"
"android.content.DialogInterface.OnClickListener.onClick (DialogInterface dialog, int which) "," This method will be invoked when a button in the dialog is clicked. <br /><br />"
"android.content.DialogInterface.OnDismissListener.onDismiss (DialogInterface dialog) "," This method will be invoked when the dialog is dismissed. <br /><br />"
"android.content.DialogInterface.OnKeyListener.onKey (DialogInterface dialog, int keyCode, KeyEvent event) "," Called when a key is dispatched to a dialog. <br /><br />"
"android.content.DialogInterface.OnMultiChoiceClickListener.onClick (DialogInterface dialog, int which, boolean isChecked) "," This method will be invoked when an item in the dialog is clicked. <br /><br />"
"android.content.DialogInterface.OnShowListener.onShow (DialogInterface dialog) "," This method will be invoked when the dialog is shown. <br /><br />"
"android.content.Entity.getEntityValues () "," no description <br /><br />"
"android.content.Entity.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.Entity.getSubValues () "," no description <br /><br />"
"android.content.Entity.addSubValue (Uri uri, ContentValues values) "," no description <br /><br />"
"android.content.EntityIterator.close ()   Indicates that this iterator is no longer needed and that any associated resources may be released  (such as a SQLite cursor) "," Indicates that this iterator is no longer needed and that any associated resources may be released (such as a SQLite cursor). <br /><br />"
"android.content.EntityIterator.reset () "," Reset the iterator back to the beginning. <br /><br />"
"android.content.Intent.FilterComparison.getIntent () "," Return the Intent that this FilterComparison represents. <br /><br />"
"android.content.Intent.FilterComparison.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.content.Intent.FilterComparison.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.content.Intent.putExtra (String name, byte value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.setClassName (String packageName, String className)   Convenience for calling setComponent (ComponentName) "," Convenience for calling setComponent(ComponentName) with an explicit application package name and class name. <br /><br />"
"android.content.Intent.resolveType (ContentResolver resolver) "," Return the MIME data type of this intent. <br /><br />"
"android.content.Intent.getLongArrayExtra (String name) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.getIntent (String uri)    This method was deprecated in API level 4. Use parseUri (String, int) "," This method was deprecated in API level 4. Use parseUri(String, int) instead. <br /><br />"
"android.content.Intent.toURI ()    This method was deprecated in API level 4. Use toUri (int) "," This method was deprecated in API level 4. Use toUri(int) instead. <br /><br />"
"android.content.Intent.getByteArrayExtra (String name) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.putExtra (String name, float value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.setClipData (ClipData clip) "," Set a ClipData associated with this Intent. <br /><br />"
"android.content.Intent.setDataAndType (Uri data, String type)    (Usually optional) "," (Usually optional) Set the data for the intent along with an explicit MIME data type. <br /><br />"
"android.content.Intent.getIntentOld (String uri) "," no description <br /><br />"
"android.content.Intent.addFlags (int flags)   Add additional flags to the intent  (or with existing flags value) "," Add additional flags to the intent (or with existing flags value). <br /><br />"
"android.content.Intent.putExtras (Intent src) "," Copy all extras in 'src' in to this intent. <br /><br />"
"android.content.Intent.putExtra (String name, long value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.getCategories () "," Return the set of all categories in the intent. <br /><br />"
"android.content.Intent.getCharSequenceArrayListExtra (String name) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.resolveType (Context context) "," Return the MIME data type of this intent. <br /><br />"
"android.content.Intent.getExtras () "," Retrieves a map of extended data from the intent. <br /><br />"
"android.content.Intent.parseIntent (Resources resources, XmlPullParser parser, AttributeSet attrs)   Parses the 'intent' element  (and its children) "," Parses the 'intent' element (and its children) from XML and instantiates an Intent object. <br /><br />"
"android.content.Intent.getAction () "," Retrieve the general action to be performed, such as ACTION_VIEW. <br /><br />"
"android.content.Intent.makeRestartActivityTask (ComponentName mainActivity) "," Make an Intent that can be used to re-launch an application's task in its base state. <br /><br />"
"android.content.Intent.putExtra (String name, char value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.getByteExtra (String name, byte defaultValue) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.removeCategory (String category) "," Remove a category from an intent. <br /><br />"
"android.content.Intent.putExtra (String name, CharSequence value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.setSourceBounds (Rect r) "," Set the bounds of the sender of this intent, in screen coordinates. <br /><br />"
"android.content.Intent.setComponent (ComponentName component)    (Usually optional) "," (Usually optional) Explicitly set the component to handle the intent. <br /><br />"
"android.content.Intent.putExtra (String name, CharSequence[] value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.getPackage () "," Retrieve the application package name this Intent is limited to. <br /><br />"
"android.content.Intent.setAction (String action) "," Set the general action to be performed. <br /><br />"
"android.content.Intent.getDataString ()   The same as getData () "," The same as getData(), but returns the URI as an encoded String. <br /><br />"
"android.content.Intent.hasExtra (String name) "," Returns true if an extra value is associated with the given name. <br /><br />"
"android.content.Intent.putExtra (String name, int[] value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.getParcelableArrayListExtra (String name) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.getDoubleExtra (String name, double defaultValue) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.getIntExtra (String name, int defaultValue) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.getBooleanArrayExtra (String name) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.setExtrasClassLoader (ClassLoader loader) "," Sets the ClassLoader that will be used when unmarshalling any Parcelable values from the extras of this Intent. <br /><br />"
"android.content.Intent.putExtra (String name, String[] value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.putExtra (String name, Serializable value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.resolveTypeIfNeeded (ContentResolver resolver) "," Return the MIME data type of this intent, only if it will be needed for intent resolution. <br /><br />"
"android.content.Intent.createChooser (Intent target, CharSequence title, IntentSender sender) "," Convenience function for creating a ACTION_CHOOSER Intent. <br /><br />"
"android.content.Intent.putStringArrayListExtra (String name, ArrayList< String> value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.getBundleExtra (String name) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.getStringArrayExtra (String name) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.hasCategory (String category) "," Check if a category exists in the intent. <br /><br />"
"android.content.Intent.putExtras (Bundle extras) "," Add a set of extended data to the intent. <br /><br />"
"android.content.Intent.getSelector () "," Return the specific selector associated with this Intent. <br /><br />"
"android.content.Intent.putExtra (String name, short[] value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.putExtra (String name, Parcelable[] value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.getClipData () "," Return the ClipData associated with this Intent. <br /><br />"
"android.content.Intent.replaceExtras (Intent src) "," Completely replace the extras in the Intent with the extras in the given Intent. <br /><br />"
"android.content.Intent.putExtra (String name, String value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.getType () "," Retrieve any explicit MIME type included in the intent. <br /><br />"
"android.content.Intent.replaceExtras (Bundle extras) "," Completely replace the extras in the Intent with the given Bundle of extras. <br /><br />"
"android.content.Intent.getDoubleArrayExtra (String name) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.getBooleanExtra (String name, boolean defaultValue) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.getStringExtra (String name) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.putExtra (String name, Parcelable value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.putCharSequenceArrayListExtra (String name, ArrayList< CharSequence> value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.setPackage (String packageName)    (Usually optional) "," (Usually optional) Set an explicit application package name that limits the components this Intent will resolve to. <br /><br />"
"android.content.Intent.getScheme () "," Return the scheme portion of the intent's data. <br /><br />"
"android.content.Intent.getCharExtra (String name, char defaultValue) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.setSelector (Intent selector) "," Set a selector for this Intent. <br /><br />"
"android.content.Intent.getShortExtra (String name, short defaultValue) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.putIntegerArrayListExtra (String name, ArrayList< Integer> value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.putExtra (String name, long[] value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.setTypeAndNormalize (String type) "," Normalize and set an explicit MIME data type. <br /><br />"
"android.content.Intent.putParcelableArrayListExtra (String name, ArrayList<? extends  Parcelable> value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.normalizeMimeType (String type) "," Normalize a MIME data type. <br /><br />"
"android.content.Intent.getShortArrayExtra (String name) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.getCharArrayExtra (String name) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.getLongExtra (String name, long defaultValue) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.putExtra (String name, char[] value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.putExtra (String name, Bundle value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.getFlags () "," Retrieve any special flags associated with this intent. <br /><br />"
"android.content.Intent.resolveActivityInfo (PackageManager pm, int flags) "," Resolve the Intent into an ActivityInfo describing the activity that should execute the intent. <br /><br />"
"android.content.Intent.setClassName (Context packageContext, String className)   Convenience for calling setComponent (ComponentName) "," Convenience for calling setComponent(ComponentName) with an explicit class name. <br /><br />"
"android.content.Intent.getSourceBounds () "," Get the bounds of the sender of this intent, in screen coordinates. <br /><br />"
"android.content.Intent.putExtra (String name, double value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.setClass (Context packageContext, Class<?> cls)   Convenience for calling setComponent (ComponentName) "," Convenience for calling setComponent(ComponentName) with the name returned by a Class object. <br /><br />"
"android.content.Intent.getIntArrayExtra (String name) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.putExtra (String name, double[] value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.resolveActivity (PackageManager pm) "," Return the Activity component that should be used to handle this intent. <br /><br />"
"android.content.Intent.fillIn (Intent other, int flags) "," Copy the contents of other in to this object, but only where fields are not defined by this object. <br /><br />"
"android.content.Intent.hasFileDescriptors () "," Returns true if the Intent's extras contain a parcelled file descriptor. <br /><br />"
"android.content.Intent.putExtra (String name, byte[] value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.getComponent () "," Retrieve the concrete component associated with the intent. <br /><br />"
"android.content.Intent.setDataAndNormalize (Uri data) "," Normalize and set the data this intent is operating on. <br /><br />"
"android.content.Intent.putExtra (String name, boolean[] value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.removeExtra (String name) "," Remove extended data from the intent. <br /><br />"
"android.content.Intent.setData (Uri data) "," Set the data this intent is operating on. <br /><br />"
"android.content.Intent.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.Intent.putExtra (String name, int value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.setType (String type) "," Set an explicit MIME data type. <br /><br />"
"android.content.Intent.putExtra (String name, boolean value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.setFlags (int flags) "," Set special flags controlling how this intent is handled. <br /><br />"
"android.content.Intent.getParcelableArrayExtra (String name) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.createChooser (Intent target, CharSequence title) "," Convenience function for creating a ACTION_CHOOSER Intent. <br /><br />"
"android.content.Intent.getSerializableExtra (String name) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.getFloatExtra (String name, float defaultValue) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.getCharSequenceArrayExtra (String name) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.putExtra (String name, short value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.setDataAndTypeAndNormalize (Uri data, String type)    (Usually optional) "," (Usually optional) Normalize and set both the data Uri and an explicit MIME data type. <br /><br />"
"android.content.Intent.getFloatArrayExtra (String name) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.filterHashCode ()   Generate hash code that matches semantics of filterEquals () "," Generate hash code that matches semantics of filterEquals(). <br /><br />"
"android.content.Intent.addCategory (String category) "," Add a new category to the intent. <br /><br />"
"android.content.Intent.getCharSequenceExtra (String name) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.cloneFilter () "," Make a clone of only the parts of the Intent that are relevant for filter matching: the action, data, type, component, and categories. <br /><br />"
"android.content.Intent.getIntegerArrayListExtra (String name) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.makeMainSelectorActivity (String selectorAction, String selectorCategory) "," Make an Intent for the main activity of an application, without specifying a specific activity to run but giving a selector to find the activity. <br /><br />"
"android.content.Intent.parseUri (String uri, int flags) "," Create an intent from a URI. <br /><br />"
"android.content.Intent.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.Intent.makeMainActivity (ComponentName mainActivity)   Create an intent to launch the main  (root) "," Create an intent to launch the main (root) activity of a task. <br /><br />"
"android.content.Intent.getStringArrayListExtra (String name) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.toUri (int flags) "," Convert this Intent into a String holding a URI representation of it. <br /><br />"
"android.content.Intent.filterEquals (Intent other)   Determine if two intents are the same for the purposes of intent resolution  (filtering) "," Determine if two intents are the same for the purposes of intent resolution (filtering). <br /><br />"
"android.content.Intent.getData () "," Retrieve data this intent is operating on. <br /><br />"
"android.content.Intent.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.content.Intent.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.Intent.putExtra (String name, float[] value) "," Add extended data to the intent. <br /><br />"
"android.content.Intent.getParcelableExtra (String name) "," Retrieve extended data from the intent. <br /><br />"
"android.content.Intent.readFromParcel (Parcel in) "," no description <br /><br />"
"android.content.Intent.ShortcutIconResource.fromContext (Context context, int resourceId) "," Creates a new ShortcutIconResource for the specified context and resource identifier. <br /><br />"
"android.content.Intent.ShortcutIconResource.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.Intent.ShortcutIconResource.describeContents () "," No special parcel contents. <br /><br />"
"android.content.Intent.ShortcutIconResource.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.IntentFilter.AuthorityEntry.match (Uri data) "," Determine whether this AuthorityEntry matches the given data Uri. <br /><br />"
"android.content.IntentFilter.AuthorityEntry.getHost () "," no description <br /><br />"
"android.content.IntentFilter.AuthorityEntry.getPort () "," no description <br /><br />"
"android.content.IntentFilter.actionsIterator () "," Return an iterator over the filter's actions. <br /><br />"
"android.content.IntentFilter.getDataPath (int index) "," Return a data path in the filter. <br /><br />"
"android.content.IntentFilter.hasDataType (String type) "," Is the given data type included in the filter? Note that if the filter does not include any type, false will always be returned. <br /><br />"
"android.content.IntentFilter.dump (Printer du, String prefix) "," no description <br /><br />"
"android.content.IntentFilter.getPriority () "," Return the priority of this filter. <br /><br />"
"android.content.IntentFilter.addDataSchemeSpecificPart (String ssp, int type) "," Add a new Intent data 'scheme specific part' to match against. <br /><br />"
"android.content.IntentFilter.getAction (int index) "," Return an action in the filter. <br /><br />"
"android.content.IntentFilter.writeToXml (XmlSerializer serializer) "," Write the contents of the IntentFilter as an XML stream. <br /><br />"
"android.content.IntentFilter.readFromXml (XmlPullParser parser) "," no description <br /><br />"
"android.content.IntentFilter.countDataAuthorities () "," Return the number of data authorities in the filter. <br /><br />"
"android.content.IntentFilter.schemeSpecificPartsIterator () "," Return an iterator over the filter's data scheme specific parts. <br /><br />"
"android.content.IntentFilter.hasAction (String action) "," Is the given action included in the filter? Note that if the filter does not include any actions, false will always be returned. <br /><br />"
"android.content.IntentFilter.hasDataSchemeSpecificPart (String data) "," Is the given data scheme specific part included in the filter? Note that if the filter does not include any scheme specific parts, false will always be returned. <br /><br />"
"android.content.IntentFilter.hasDataPath (String data) "," Is the given data path included in the filter? Note that if the filter does not include any paths, false will always be returned. <br /><br />"
"android.content.IntentFilter.getDataSchemeSpecificPart (int index) "," Return a data scheme specific part in the filter. <br /><br />"
"android.content.IntentFilter.create (String action, String dataType) "," Create a new IntentFilter instance with a specified action and MIME type, where you know the MIME type is correctly formatted. <br /><br />"
"android.content.IntentFilter.categoriesIterator () "," Return an iterator over the filter's categories. <br /><br />"
"android.content.IntentFilter.matchData (String type, String scheme, Uri data)   Match this filter against an Intent's data  (type, scheme and path) "," Match this filter against an Intent's data (type, scheme and path). <br /><br />"
"android.content.IntentFilter.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.IntentFilter.hasDataAuthority (Uri data) "," Is the given data authority included in the filter? Note that if the filter does not include any authorities, false will always be returned. <br /><br />"
"android.content.IntentFilter.getDataType (int index) "," Return a data type in the filter. <br /><br />"
"android.content.IntentFilter.setPriority (int priority) "," Modify priority of this filter. <br /><br />"
"android.content.IntentFilter.pathsIterator () "," Return an iterator over the filter's data paths. <br /><br />"
"android.content.IntentFilter.countActions () "," Return the number of actions in the filter. <br /><br />"
"android.content.IntentFilter.addCategory (String category) "," Add a new Intent category to match against. <br /><br />"
"android.content.IntentFilter.addDataPath (String path, int type) "," Add a new Intent data path to match against. <br /><br />"
"android.content.IntentFilter.schemesIterator () "," Return an iterator over the filter's data schemes. <br /><br />"
"android.content.IntentFilter.getCategory (int index) "," Return a category in the filter. <br /><br />"
"android.content.IntentFilter.addDataType (String type) "," Add a new Intent data type to match against. <br /><br />"
"android.content.IntentFilter.authoritiesIterator () "," Return an iterator over the filter's data authorities. <br /><br />"
"android.content.IntentFilter.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.IntentFilter.typesIterator () "," Return an iterator over the filter's data types. <br /><br />"
"android.content.IntentFilter.addDataScheme (String scheme) "," Add a new Intent data scheme to match against. <br /><br />"
"android.content.IntentFilter.countDataPaths () "," Return the number of data paths in the filter. <br /><br />"
"android.content.IntentFilter.countDataSchemes () "," Return the number of data schemes in the filter. <br /><br />"
"android.content.IntentFilter.countDataTypes () "," Return the number of data types in the filter. <br /><br />"
"android.content.IntentFilter.hasCategory (String category) "," Is the given category included in the filter? <br /><br />"
"android.content.IntentFilter.matchDataAuthority (Uri data) "," Match this intent filter against the given Intent data. <br /><br />"
"android.content.IntentFilter.matchCategories (Set< String> categories) "," Match this filter against an Intent's categories. <br /><br />"
"android.content.IntentFilter.getDataScheme (int index) "," Return a data scheme in the filter. <br /><br />"
"android.content.IntentFilter.getDataAuthority (int index) "," Return a data authority in the filter. <br /><br />"
"android.content.IntentFilter.countCategories () "," Return the number of categories in the filter. <br /><br />"
"android.content.IntentFilter.addDataAuthority (String host, String port) "," Add a new Intent data authority to match against. <br /><br />"
"android.content.IntentFilter.hasDataScheme (String scheme) "," Is the given data scheme included in the filter? Note that if the filter does not include any scheme, false will always be returned. <br /><br />"
"android.content.IntentFilter.match (String action, String type, String scheme, Uri data, Set< String> categories, String logTag) "," Test whether this filter matches the given intent data. <br /><br />"
"android.content.IntentFilter.countDataSchemeSpecificParts () "," Return the number of data scheme specific parts in the filter. <br /><br />"
"android.content.IntentFilter.match (ContentResolver resolver, Intent intent, boolean resolve, String logTag) "," Test whether this filter matches the given intent. <br /><br />"
"android.content.IntentFilter.addAction (String action) "," Add a new Intent action to match against. <br /><br />"
"android.content.IntentFilter.matchAction (String action) "," Match this filter against an Intent's action. <br /><br />"
"android.content.IntentSender.getCreatorUid () "," Return the uid of the application that created this PendingIntent, that is the identity under which you will actually be sending the Intent. <br /><br />"
"android.content.IntentSender.getCreatorUserHandle () "," Return the user handle of the application that created this PendingIntent, that is the user under which you will actually be sending the Intent. <br /><br />"
"android.content.IntentSender.getTargetPackage ()    This method was deprecated in API level 17. Renamed to getCreatorPackage () "," This method was deprecated in API level 17. Renamed to getCreatorPackage(). <br /><br />"
"android.content.IntentSender.sendIntent (Context context, int code, Intent intent, IntentSender.OnFinished onFinished, Handler handler) "," Perform the operation associated with this IntentSender, allowing the caller to specify information about the Intent to use and be notified when the send has completed. <br /><br />"
"android.content.IntentSender.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.IntentSender.writeIntentSenderOrNullToParcel (IntentSender sender, Parcel out) "," Convenience function for writing either a IntentSender or null pointer to a Parcel. <br /><br />"
"android.content.IntentSender.getCreatorPackage () "," Return the package name of the application that created this IntentSender, that is the identity under which you will actually be sending the Intent. <br /><br />"
"android.content.IntentSender.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.IntentSender.readIntentSenderOrNullFromParcel (Parcel in) "," Convenience function for reading either a Messenger or null pointer from a Parcel. <br /><br />"
"android.content.IntentSender.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.IntentSender.sendIntent (Context context, int code, Intent intent, IntentSender.OnFinished onFinished, Handler handler, String requiredPermission) "," Perform the operation associated with this IntentSender, allowing the caller to specify information about the Intent to use and be notified when the send has completed. <br /><br />"
"android.content.IntentSender.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.content.IntentSender.equals (Object otherObj) "," Comparison operator on two IntentSender objects, such that true is returned then they both represent the same operation from the same package. <br /><br />"
"android.content.IntentSender.OnFinished.onSendFinished (IntentSender IntentSender, Intent intent, int resultCode, String resultData, Bundle resultExtras) "," Called when a send operation as completed. <br /><br />"
"android.content.Loader.ForceLoadContentObserver.deliverSelfNotifications () "," Returns true if this observer is interested receiving self-change notifications. <br /><br />"
"android.content.Loader.ForceLoadContentObserver.onChange (boolean selfChange) "," This method is called when a content change occurs. <br /><br />"
"android.content.Loader<D>.isStarted () "," Return whether this load has been started. <br /><br />"
"android.content.Loader<D>.cancelLoad () "," Attempt to cancel the current load task. <br /><br />"
"android.content.Loader<D>.rollbackContentChanged ()   Report that you have abandoned the processing of a content change that was returned by takeContentChanged () "," Report that you have abandoned the processing of a content change that was returned by takeContentChanged() and would like to rollback to the state where there is again a pending content change. <br /><br />"
"android.content.Loader<D>.deliverCancellation () "," Informs the registered Loader.OnLoadCanceledListener that the load has been canceled. <br /><br />"
"android.content.Loader<D>.deliverResult (D data) "," Sends the result of the load to the registered listener. <br /><br />"
"android.content.Loader<D>.isAbandoned () "," Return whether this loader has been abandoned. <br /><br />"
"android.content.Loader<D>.commitContentChanged ()   Commit that you have actually fully processed a content change that was returned by takeContentChanged () "," Commit that you have actually fully processed a content change that was returned by takeContentChanged(). <br /><br />"
"android.content.Loader<D>.isReset () "," Return whether this load has been reset. <br /><br />"
"android.content.Loader<D>.registerListener (int id, OnLoadCompleteListener<D> listener) "," Registers a class that will receive callbacks when a load is complete. <br /><br />"
"android.content.Loader<D>.unregisterOnLoadCanceledListener (OnLoadCanceledListener<D> listener)   Unregisters a listener that was previously added with registerOnLoadCanceledListener (Loader.OnLoadCanceledListener  ) "," Unregisters a listener that was previously added with registerOnLoadCanceledListener(Loader.OnLoadCanceledListener  ) . <br /><br />"
"android.content.Loader<D>.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.Loader<D>.dataToString (D data) "," For debugging, converts an instance of the Loader's data class to a string that can be printed. <br /><br />"
"android.content.Loader<D>.takeContentChanged () "," Take the current flag indicating whether the loader's content had changed while it was stopped. <br /><br />"
"android.content.Loader<D>.onContentChanged () "," Called when Loader.ForceLoadContentObserver detects a change. <br /><br />"
"android.content.Loader<D>.abandon () "," This function will normally be called for you automatically by LoaderManager when restarting a Loader. <br /><br />"
"android.content.Loader<D>.getId () "," no description <br /><br />"
"android.content.Loader<D>.forceLoad () "," Force an asynchronous load. <br /><br />"
"android.content.Loader<D>.stopLoading () "," This function will normally be called for you automatically by LoaderManager when the associated fragment/activity is being stopped. <br /><br />"
"android.content.Loader<D>.registerOnLoadCanceledListener (OnLoadCanceledListener<D> listener) "," Registers a listener that will receive callbacks when a load is canceled. <br /><br />"
"android.content.Loader<D>.reset () "," This function will normally be called for you automatically by LoaderManager when destroying a Loader. <br /><br />"
"android.content.Loader<D>.startLoading () "," This function will normally be called for you automatically by LoaderManager when the associated fragment/activity is being started. <br /><br />"
"android.content.Loader<D>.unregisterListener (OnLoadCompleteListener<D> listener)   Remove a listener that was previously added with registerListener (int, Loader.OnLoadCompleteListener  ) "," Remove a listener that was previously added with registerListener(int, Loader.OnLoadCompleteListener  ) . <br /><br />"
"android.content.Loader<D>.dump (String prefix, FileDescriptor fd, PrintWriter writer, String[] args) "," Print the Loader's state into the given stream. <br /><br />"
"android.content.Loader<D>.getContext () "," no description <br /><br />"
"android.content.Loader.OnLoadCanceledListener<D>.onLoadCanceled (Loader<D> loader) "," Called on the thread that created the Loader when the load is canceled. <br /><br />"
"android.content.Loader.OnLoadCompleteListener<D>.onLoadComplete (Loader<D> loader, D data) "," Called on the thread that created the Loader when the load is complete. <br /><br />"
"android.content.MutableContextWrapper.setBaseContext (Context base) "," Change the base context for this ContextWrapper. <br /><br />"
"android.content.OperationApplicationException.getNumSuccessfulYieldPoints () "," no description <br /><br />"
"android.content.PeriodicSync.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.PeriodicSync.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.PeriodicSync.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.PeriodicSync.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.content.pm.ActivityInfo.writeToParcel (Parcel dest, int parcelableFlags) "," no description <br /><br />"
"android.content.pm.ActivityInfo.dump (Printer pw, String prefix) "," no description <br /><br />"
"android.content.pm.ActivityInfo.getThemeResource () "," Return the theme resource identifier to use for this activity. <br /><br />"
"android.content.pm.ActivityInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.pm.ActivityInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.pm.ApplicationInfo.DisplayNameComparator.compare (ApplicationInfo aa, ApplicationInfo ab) "," no description <br /><br />"
"android.content.pm.ApplicationInfo.writeToParcel (Parcel dest, int parcelableFlags) "," no description <br /><br />"
"android.content.pm.ApplicationInfo.dump (Printer pw, String prefix) "," no description <br /><br />"
"android.content.pm.ApplicationInfo.loadDescription (PackageManager pm) "," Retrieve the textual description of the application. <br /><br />"
"android.content.pm.ApplicationInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.pm.ApplicationInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.pm.ComponentInfo.loadLabel (PackageManager pm) "," Retrieve the current textual label associated with this item. <br /><br />"
"android.content.pm.ComponentInfo.getIconResource () "," Return the icon resource identifier to use for this component. <br /><br />"
"android.content.pm.ComponentInfo.writeToParcel (Parcel dest, int parcelableFlags) "," no description <br /><br />"
"android.content.pm.ComponentInfo.isEnabled () "," Return whether this component and its enclosing application are enabled. <br /><br />"
"android.content.pm.ComponentInfo.getLogoResource () "," Return the logo resource identifier to use for this component. <br /><br />"
"android.content.pm.ComponentInfo.getBannerResource () "," Return the banner resource identifier to use for this component. <br /><br />"
"android.content.pm.ConfigurationInfo.writeToParcel (Parcel dest, int parcelableFlags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.pm.ConfigurationInfo.getGlEsVersion () "," This method extracts the major and minor version of reqGLEsVersion attribute and returns it as a string. <br /><br />"
"android.content.pm.ConfigurationInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.pm.ConfigurationInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.pm.FeatureGroupInfo.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.pm.FeatureGroupInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.pm.FeatureInfo.writeToParcel (Parcel dest, int parcelableFlags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.pm.FeatureInfo.getGlEsVersion () "," This method extracts the major and minor version of reqGLEsVersion attribute and returns it as a string. <br /><br />"
"android.content.pm.FeatureInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.pm.FeatureInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.pm.InstrumentationInfo.writeToParcel (Parcel dest, int parcelableFlags) "," no description <br /><br />"
"android.content.pm.InstrumentationInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.pm.InstrumentationInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.pm.LabeledIntent.loadLabel (PackageManager pm) "," Retrieve the label associated with this object. <br /><br />"
"android.content.pm.LabeledIntent.getIconResource () "," Return any resource identifier that has been given for the label icon. <br /><br />"
"android.content.pm.LabeledIntent.writeToParcel (Parcel dest, int parcelableFlags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.pm.LabeledIntent.getLabelResource () "," Return any resource identifier that has been given for the label text. <br /><br />"
"android.content.pm.LabeledIntent.getSourcePackage () "," Return the name of the package holding label and icon resources. <br /><br />"
"android.content.pm.LabeledIntent.getNonLocalizedLabel () "," Return any concrete text that has been given for the label text. <br /><br />"
"android.content.pm.LabeledIntent.readFromParcel (Parcel in) "," no description <br /><br />"
"android.content.pm.LabeledIntent.loadIcon (PackageManager pm) "," Retrieve the icon associated with this object. <br /><br />"
"android.content.pm.LauncherActivityInfo.getName () "," Returns the name for the acitivty from android:name in the manifest. <br /><br />"
"android.content.pm.LauncherActivityInfo.getIcon (int density) "," Returns the icon for this activity, without any badging for the profile. <br /><br />"
"android.content.pm.LauncherActivityInfo.getComponentName () "," Returns the component name of this activity. <br /><br />"
"android.content.pm.LauncherActivityInfo.getBadgedIcon (int density) "," Returns the activity icon with badging appropriate for the profile. <br /><br />"
"android.content.pm.LauncherActivityInfo.getUser () "," Returns the user handle of the user profile that this activity belongs to. <br /><br />"
"android.content.pm.LauncherActivityInfo.getLabel () "," Retrieves the label for the activity. <br /><br />"
"android.content.pm.LauncherActivityInfo.getFirstInstallTime () "," Returns the time at which the package was first installed. <br /><br />"
"android.content.pm.LauncherActivityInfo.getApplicationInfo () "," Returns the application info for the appliction this activity belongs to. <br /><br />"
"android.content.pm.LauncherApps.Callback.onPackageAdded (String packageName, UserHandle user) "," Indicates that a package was added to the specified profile. <br /><br />"
"android.content.pm.LauncherApps.Callback.onPackagesUnavailable (String[] packageNames, UserHandle user, boolean replacing) "," Indicates that one or more packages have become unavailable. <br /><br />"
"android.content.pm.LauncherApps.Callback.onPackagesAvailable (String[] packageNames, UserHandle user, boolean replacing) "," Indicates that one or more packages have become available. <br /><br />"
"android.content.pm.LauncherApps.Callback.onPackageRemoved (String packageName, UserHandle user) "," Indicates that a package was removed from the specified profile. <br /><br />"
"android.content.pm.LauncherApps.Callback.onPackageChanged (String packageName, UserHandle user) "," Indicates that a package was modified in the specified profile. <br /><br />"
"android.content.pm.PackageInfo.writeToParcel (Parcel dest, int parcelableFlags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.pm.PackageInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.pm.PackageInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.pm.PackageInstaller.createSession (PackageInstaller.SessionParams params) "," Create a new session using the given parameters, returning a unique ID that represents the session. <br /><br />"
"android.content.pm.PackageInstaller.openSession (int sessionId) "," Open an existing session to actively perform work. <br /><br />"
"android.content.pm.PackageInstaller.registerSessionCallback (PackageInstaller.SessionCallback callback) "," Register to watch for session lifecycle events. <br /><br />"
"android.content.pm.PackageInstaller.getMySessions () "," Return list of all known install sessions owned by the calling app. <br /><br />"
"android.content.pm.PackageInstaller.updateSessionAppLabel (int sessionId, CharSequence appLabel) "," Update the label representing the app being installed in a specific session. <br /><br />"
"android.content.pm.PackageInstaller.uninstall (String packageName, IntentSender statusReceiver) "," Uninstall the given package, removing it completely from the device. <br /><br />"
"android.content.pm.PackageInstaller.updateSessionAppIcon (int sessionId, Bitmap appIcon) "," Update the icon representing the app being installed in a specific session. <br /><br />"
"android.content.pm.PackageInstaller.getAllSessions () "," Return list of all known install sessions, regardless of the installer. <br /><br />"
"android.content.pm.PackageInstaller.unregisterSessionCallback (PackageInstaller.SessionCallback callback) "," Unregister a previously registered callback. <br /><br />"
"android.content.pm.PackageInstaller.registerSessionCallback (PackageInstaller.SessionCallback callback, Handler handler) "," Register to watch for session lifecycle events. <br /><br />"
"android.content.pm.PackageInstaller.getSessionInfo (int sessionId) "," Return details for a specific session. <br /><br />"
"android.content.pm.PackageInstaller.abandonSession (int sessionId) "," Completely abandon the given session, destroying all staged data and rendering it invalid. <br /><br />"
"android.content.pm.PackageInstaller.Session.getNames () "," Return all APK names contained in this session. <br /><br />"
"android.content.pm.PackageInstaller.Session.commit (IntentSender statusReceiver) "," Attempt to commit everything staged in this session. <br /><br />"
"android.content.pm.PackageInstaller.Session.setStagingProgress (float progress) "," Set current progress of staging this session. <br /><br />"
"android.content.pm.PackageInstaller.Session.abandon () "," Completely abandon this session, destroying all staged data and rendering it invalid. <br /><br />"
"android.content.pm.PackageInstaller.Session.close () "," Release this session object. <br /><br />"
"android.content.pm.PackageInstaller.Session.openWrite (String name, long offsetBytes, long lengthBytes) "," Open a stream to write an APK file into the session. <br /><br />"
"android.content.pm.PackageInstaller.Session.openRead (String name) "," Open a stream to read an APK file from the session. <br /><br />"
"android.content.pm.PackageInstaller.Session.fsync (OutputStream out) "," Ensure that any outstanding data for given stream has been committed to disk. <br /><br />"
"android.content.pm.PackageInstaller.SessionCallback.onCreated (int sessionId) "," New session has been created. <br /><br />"
"android.content.pm.PackageInstaller.SessionCallback.onBadgingChanged (int sessionId) "," Badging details for an existing session has changed. <br /><br />"
"android.content.pm.PackageInstaller.SessionCallback.onProgressChanged (int sessionId, float progress) "," Progress for given session has been updated. <br /><br />"
"android.content.pm.PackageInstaller.SessionCallback.onFinished (int sessionId, boolean success) "," Session has completely finished, either with success or failure. <br /><br />"
"android.content.pm.PackageInstaller.SessionCallback.onActiveChanged (int sessionId, boolean active) "," Active state for session has been changed. <br /><br />"
"android.content.pm.PackageInstaller.SessionInfo.getSessionId () "," Return the ID for this session. <br /><br />"
"android.content.pm.PackageInstaller.SessionInfo.getAppLabel () "," Return a label representing the app being installed. <br /><br />"
"android.content.pm.PackageInstaller.SessionInfo.getInstallerPackageName () "," Return the package name of the app that owns this session. <br /><br />"
"android.content.pm.PackageInstaller.SessionInfo.getAppPackageName () "," Return the package name this session is working with. <br /><br />"
"android.content.pm.PackageInstaller.SessionInfo.isActive () "," Return if this session is currently active. <br /><br />"
"android.content.pm.PackageInstaller.SessionInfo.getProgress () "," Return current overall progress of this session, between 0 and 1. <br /><br />"
"android.content.pm.PackageInstaller.SessionInfo.createDetailsIntent () "," Return an Intent that can be started to view details about this install session. <br /><br />"
"android.content.pm.PackageInstaller.SessionInfo.getAppIcon () "," Return an icon representing the app being installed. <br /><br />"
"android.content.pm.PackageInstaller.SessionInfo.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.pm.PackageInstaller.SessionInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.pm.PackageInstaller.SessionParams.setAppPackageName (String appPackageName) "," Optionally set the package name of the app being installed. <br /><br />"
"android.content.pm.PackageInstaller.SessionParams.setInstallLocation (int installLocation) "," Provide value of installLocation, which may be used to determine where the app will be staged. <br /><br />"
"android.content.pm.PackageInstaller.SessionParams.setAppLabel (CharSequence appLabel) "," Optionally set a label representing the app being installed. <br /><br />"
"android.content.pm.PackageInstaller.SessionParams.setSize (long sizeBytes)   Optionally indicate the total size  (in bytes) "," Optionally indicate the total size (in bytes) of all APKs that will be delivered in this session. <br /><br />"
"android.content.pm.PackageInstaller.SessionParams.setReferrerUri (Uri referrerUri) "," Optionally set the URI that referred you to install this package. <br /><br />"
"android.content.pm.PackageInstaller.SessionParams.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.pm.PackageInstaller.SessionParams.setOriginatingUri (Uri originatingUri) "," Optionally set the URI where this package was downloaded from. <br /><br />"
"android.content.pm.PackageInstaller.SessionParams.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.pm.PackageInstaller.SessionParams.setAppIcon (Bitmap appIcon) "," Optionally set an icon representing the app being installed. <br /><br />"
"android.content.pm.PackageItemInfo.DisplayNameComparator.compare (PackageItemInfo aa, PackageItemInfo ab) "," no description <br /><br />"
"android.content.pm.PackageItemInfo.loadXmlMetaData (PackageManager pm, String name) "," Load an XML resource attached to the meta-data of this item. <br /><br />"
"android.content.pm.PackageItemInfo.loadLabel (PackageManager pm) "," Retrieve the current textual label associated with this item. <br /><br />"
"android.content.pm.PackageItemInfo.writeToParcel (Parcel dest, int parcelableFlags) "," no description <br /><br />"
"android.content.pm.PackageItemInfo.loadUnbadgedIcon (PackageManager pm) "," Retrieve the current graphical icon associated with this item without the addition of a work badge if applicable. <br /><br />"
"android.content.pm.PackageItemInfo.loadLogo (PackageManager pm) "," Retrieve the current graphical logo associated with this item. <br /><br />"
"android.content.pm.PackageItemInfo.loadIcon (PackageManager pm) "," Retrieve the current graphical icon associated with this item. <br /><br />"
"android.content.pm.PackageItemInfo.loadBanner (PackageManager pm) "," Retrieve the current graphical banner associated with this item. <br /><br />"
"android.content.pm.PackageManager.getInstrumentationInfo (ComponentName className, int flags) "," Retrieve all of the information we know about a particular instrumentation class. <br /><br />"
"android.content.pm.PackageManager.getPermissionInfo (String name, int flags) "," Retrieve all of the information we know about a particular permission. <br /><br />"
"android.content.pm.PackageManager.getText (String packageName, int resid, ApplicationInfo appInfo) "," Retrieve text from a package. <br /><br />"
"android.content.pm.PackageManager.getProviderInfo (ComponentName component, int flags) "," Retrieve all of the information we know about a particular content provider class. <br /><br />"
"android.content.pm.PackageManager.getPackagesHoldingPermissions (String[] permissions, int flags) "," Return a List of all installed packages that are currently holding any of the given permissions. <br /><br />"
"android.content.pm.PackageManager.resolveActivity (Intent intent, int flags) "," Determine the best action to perform for a given Intent. <br /><br />"
"android.content.pm.PackageManager.getPackageInfo (String packageName, int flags) "," Retrieve overall information about an application package that is installed on the system. <br /><br />"
"android.content.pm.PackageManager.getActivityBanner (ComponentName activityName) "," Retrieve the banner associated with an activity. <br /><br />"
"android.content.pm.PackageManager.checkSignatures (int uid1, int uid2)   Like checkSignatures (String, String) "," Like checkSignatures(String, String), but takes UIDs of the two packages to be checked. <br /><br />"
"android.content.pm.PackageManager.removePackageFromPreferred (String packageName)    This method was deprecated in API level 7. This function no longer does anything; it was an old approach to managing preferred activities, which has been superseded by  (and conflicts with) "," This method was deprecated in API level 7. This function no longer does anything; it was an old approach to managing preferred activities, which has been superseded by (and conflicts with) the modern activity-based preferences. <br /><br />"
"android.content.pm.PackageManager.extendVerificationTimeout (int id, int verificationCodeAtTimeout, long millisecondsToDelay) "," Allows a package listening to the package verification broadcast to extend the default timeout for a response and declare what action to perform after the timeout occurs. <br /><br />"
"android.content.pm.PackageManager.getServiceInfo (ComponentName component, int flags) "," Retrieve all of the information we know about a particular service class. <br /><br />"
"android.content.pm.PackageManager.getApplicationIcon (ApplicationInfo info) "," Retrieve the icon associated with an application. <br /><br />"
"android.content.pm.PackageManager.removePermission (String name)   Removes a permission that was previously added with addPermission (PermissionInfo) "," Removes a permission that was previously added with addPermission(PermissionInfo). <br /><br />"
"android.content.pm.PackageManager.getActivityIcon (Intent intent) "," Retrieve the icon associated with an Intent. <br /><br />"
"android.content.pm.PackageManager.resolveContentProvider (String name, int flags) "," Find a single content provider by its base path name. <br /><br />"
"android.content.pm.PackageManager.getSystemAvailableFeatures () "," Get a list of features that are available on the system. <br /><br />"
"android.content.pm.PackageManager.queryBroadcastReceivers (Intent intent, int flags) "," Retrieve all receivers that can handle a broadcast of the given intent. <br /><br />"
"android.content.pm.PackageManager.getLeanbackLaunchIntentForPackage (String packageName) "," Return a 'good' intent to launch a front-door Leanback activity in a package, for use for example to implement an 'open' button when browsing through packages. <br /><br />"
"android.content.pm.PackageManager.getApplicationIcon (String packageName) "," Retrieve the icon associated with an application. <br /><br />"
"android.content.pm.PackageManager.getApplicationInfo (String packageName, int flags) "," Retrieve all of the information we know about a particular package/application. <br /><br />"
"android.content.pm.PackageManager.queryIntentServices (Intent intent, int flags) "," Retrieve all services that can match the given intent. <br /><br />"
"android.content.pm.PackageManager.addPreferredActivity (IntentFilter filter, int match, ComponentName[] set, ComponentName activity)    This method was deprecated in API level 8. This is a protected API that should not have been available to third party applications. It is the platform's responsibility for assigning preferred activities and this cannot be directly modified. Add a new preferred activity mapping to the system. This will be used to automatically select the given activity component when Context.startActivity () "," This method was deprecated in API level 8. This is a protected API that should not have been available to third party applications. It is the platform's responsibility for assigning preferred activities and this cannot be directly modified. Add a new preferred activity mapping to the system. This will be used to automatically select the given activity component when Context.startActivity() finds multiple matching activities and also matches the given filter. <br /><br />"
"android.content.pm.PackageManager.getPackageInstaller () "," Return interface that offers the ability to install, upgrade, and remove applications on the device. <br /><br />"
"android.content.pm.PackageManager.setApplicationEnabledSetting (String packageName, int newState, int flags) "," Set the enabled setting for an application This setting will override any enabled state which may have been set by the application in its manifest. <br /><br />"
"android.content.pm.PackageManager.queryPermissionsByGroup (String group, int flags) "," Query for all of the permissions associated with a particular group. <br /><br />"
"android.content.pm.PackageManager.addPermission (PermissionInfo info) "," Add a new dynamic permission to the system. <br /><br />"
"android.content.pm.PackageManager.getInstalledApplications (int flags) "," Return a List of all application packages that are installed on the device. <br /><br />"
"android.content.pm.PackageManager.getActivityLogo (ComponentName activityName) "," Retrieve the logo associated with an activity. <br /><br />"
"android.content.pm.PackageManager.addPermissionAsync (PermissionInfo info)   Like addPermission (PermissionInfo) "," Like addPermission(PermissionInfo) but asynchronously persists the package manager state after returning from the call, allowing it to return quicker and batch a series of adds at the expense of no guarantee the added permission will be retained if the device is rebooted before it is written. <br /><br />"
"android.content.pm.PackageManager.getApplicationEnabledSetting (String packageName) "," Return the enabled setting for an application. <br /><br />"
"android.content.pm.PackageManager.resolveService (Intent intent, int flags) "," Determine the best service to handle for a given Intent. <br /><br />"
"android.content.pm.PackageManager.queryInstrumentation (String targetPackage, int flags) "," Retrieve information about available instrumentation code. <br /><br />"
"android.content.pm.PackageManager.getPreferredPackages (int flags) "," Retrieve the list of all currently configured preferred packages. <br /><br />"
"android.content.pm.PackageManager.getPackageGids (String packageName) "," Return an array of all of the secondary group-ids that have been assigned to a package. <br /><br />"
"android.content.pm.PackageManager.getPreferredActivities (List< IntentFilter> outFilters, List< ComponentName> outActivities, String packageName)   Retrieve all preferred activities, previously added with addPreferredActivity (IntentFilter, int, ComponentName[], ComponentName) "," Retrieve all preferred activities, previously added with addPreferredActivity(IntentFilter, int, ComponentName[], ComponentName), that are currently registered with the system. <br /><br />"
"android.content.pm.PackageManager.setInstallerPackageName (String targetPackage, String installerPackageName) "," Change the installer associated with a given package. <br /><br />"
"android.content.pm.PackageManager.getXml (String packageName, int resid, ApplicationInfo appInfo) "," Retrieve an XML file from a package. <br /><br />"
"android.content.pm.PackageManager.getInstalledPackages (int flags) "," Return a List of all packages that are installed on the device. <br /><br />"
"android.content.pm.PackageManager.getActivityBanner (Intent intent) "," Retrieve the banner associated with an Intent. <br /><br />"
"android.content.pm.PackageManager.queryIntentActivityOptions (ComponentName caller, Intent[] specifics, Intent intent, int flags) "," Retrieve a set of activities that should be presented to the user as similar options. <br /><br />"
"android.content.pm.PackageManager.getInstallerPackageName (String packageName) "," Retrieve the package name of the application that installed a package. <br /><br />"
"android.content.pm.PackageManager.setComponentEnabledSetting (ComponentName componentName, int newState, int flags)   Set the enabled setting for a package component  (activity, receiver, service, provider) "," Set the enabled setting for a package component (activity, receiver, service, provider). <br /><br />"
"android.content.pm.PackageManager.getActivityLogo (Intent intent) "," Retrieve the logo associated with an Intent. <br /><br />"
"android.content.pm.PackageManager.queryContentProviders (String processName, int uid, int flags) "," Retrieve content provider information. <br /><br />"
"android.content.pm.PackageManager.checkSignatures (String pkg1, String pkg2) "," Compare the signatures of two packages to determine if the same signature appears in both of them. <br /><br />"
"android.content.pm.PackageManager.getDefaultActivityIcon () "," Return the generic icon for an activity that is used when no specific icon is defined. <br /><br />"
"android.content.pm.PackageManager.getPackageArchiveInfo (String archiveFilePath, int flags) "," Retrieve overall information about an application package defined in a package archive file <br /><br />"
"android.content.pm.PackageManager.addPackageToPreferred (String packageName)    This method was deprecated in API level 7. This function no longer does anything; it was an old approach to managing preferred activities, which has been superseded by  (and conflicts with) "," This method was deprecated in API level 7. This function no longer does anything; it was an old approach to managing preferred activities, which has been superseded by (and conflicts with) the modern activity-based preferences. <br /><br />"
"android.content.pm.PackageManager.getAllPermissionGroups (int flags) "," Retrieve all of the known permission groups in the system. <br /><br />"
"android.content.pm.PackageManager.getReceiverInfo (ComponentName component, int flags) "," Retrieve all of the information we know about a particular receiver class. <br /><br />"
"android.content.pm.PackageManager.getPermissionGroupInfo (String name, int flags) "," Retrieve all of the information we know about a particular group of permissions. <br /><br />"
"android.content.pm.PackageManager.getActivityIcon (ComponentName activityName) "," Retrieve the icon associated with an activity. <br /><br />"
"android.content.pm.PackageManager.clearPackagePreferredActivities (String packageName)   Remove all preferred activity mappings, previously added with addPreferredActivity (IntentFilter, int, ComponentName[], ComponentName) "," Remove all preferred activity mappings, previously added with addPreferredActivity(IntentFilter, int, ComponentName[], ComponentName), from the system whose activities are implemented in the given package name. <br /><br />"
"android.content.pm.PackageManager.getApplicationLogo (ApplicationInfo info) "," Retrieve the logo associated with an application. <br /><br />"
"android.content.pm.PackageManager.getLaunchIntentForPackage (String packageName) "," Returns a 'good' intent to launch a front-door activity in a package. <br /><br />"
"android.content.pm.PackageManager.queryIntentContentProviders (Intent intent, int flags) "," Retrieve all providers that can match the given intent. <br /><br />"
"android.content.pm.PackageManager.verifyPendingInstall (int id, int verificationCode) "," Allows a package listening to the package verification broadcast to respond to the package manager. <br /><br />"
"android.content.pm.PackageManager.getApplicationLabel (ApplicationInfo info) "," Return the label to use for this application. <br /><br />"
"android.content.pm.PackageManager.getNameForUid (int uid) "," Retrieve the official name associated with a user id. <br /><br />"
"android.content.pm.PackageManager.hasSystemFeature (String name)   Check whether the given feature name is one of the available features as returned by getSystemAvailableFeatures () "," Check whether the given feature name is one of the available features as returned by getSystemAvailableFeatures(). <br /><br />"
"android.content.pm.PackageManager.getApplicationBanner (ApplicationInfo info) "," Retrieve the banner associated with an application. <br /><br />"
"android.content.pm.PackageManager.getPackagesForUid (int uid) "," Retrieve the names of all packages that are associated with a particular user id. <br /><br />"
"android.content.pm.PackageManager.getUserBadgedDrawableForDensity (Drawable drawable, UserHandle user, Rect badgeLocation, int badgeDensity) "," If the target user is a managed profile of the calling user or the caller is itself a managed profile, then this returns a badged copy of the given drawable allowing the user to distinguish it from the original drawable. <br /><br />"
"android.content.pm.PackageManager.checkPermission (String permName, String pkgName) "," Check whether a particular package has been granted a particular permission. <br /><br />"
"android.content.pm.PackageManager.getResourcesForApplication (ApplicationInfo app) "," Retrieve the resources for an application. <br /><br />"
"android.content.pm.PackageManager.getApplicationBanner (String packageName) "," Retrieve the banner associated with an application. <br /><br />"
"android.content.pm.PackageManager.getComponentEnabledSetting (ComponentName componentName)   Return the enabled setting for a package component  (activity, receiver, service, provider) "," Return the enabled setting for a package component (activity, receiver, service, provider). <br /><br />"
"android.content.pm.PackageManager.getUserBadgedIcon (Drawable icon, UserHandle user) "," If the target user is a managed profile of the calling user or the caller is itself a managed profile, then this returns a badged copy of the given icon to be able to distinguish it from the original icon. <br /><br />"
"android.content.pm.PackageManager.getSystemSharedLibraryNames () "," Get a list of shared libraries that are available on the system. <br /><br />"
"android.content.pm.PackageManager.currentToCanonicalPackageNames (String[] names) "," Map from the current package names in use on the device to whatever the current canonical name of that package is. <br /><br />"
"android.content.pm.PackageManager.getDrawable (String packageName, int resid, ApplicationInfo appInfo) "," Retrieve an image from a package. <br /><br />"
"android.content.pm.PackageManager.getActivityInfo (ComponentName component, int flags) "," Retrieve all of the information we know about a particular activity class. <br /><br />"
"android.content.pm.PackageManager.getResourcesForApplication (String appPackageName) "," Retrieve the resources associated with an application. <br /><br />"
"android.content.pm.PackageManager.canonicalToCurrentPackageNames (String[] names) "," Map from a packages canonical name to the current name in use on the device. <br /><br />"
"android.content.pm.PackageManager.queryIntentActivities (Intent intent, int flags) "," Retrieve all activities that can be performed for the given intent. <br /><br />"
"android.content.pm.PackageManager.getApplicationLogo (String packageName) "," Retrieve the logo associated with an application. <br /><br />"
"android.content.pm.PackageManager.getResourcesForActivity (ComponentName activityName) "," Retrieve the resources associated with an activity. <br /><br />"
"android.content.pm.PackageManager.isSafeMode () "," Return whether the device has been booted into safe mode. <br /><br />"
"android.content.pm.PackageManager.getUserBadgedLabel (CharSequence label, UserHandle user) "," If the target user is a managed profile of the calling user or the caller is itself a managed profile, then this returns a copy of the label with badging for accessibility services like talkback. <br /><br />"
"android.content.pm.PackageStats.writeToParcel (Parcel dest, int parcelableFlags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.pm.PackageStats.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.pm.PackageStats.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.pm.PathPermission.getWritePermission () "," no description <br /><br />"
"android.content.pm.PathPermission.getReadPermission () "," no description <br /><br />"
"android.content.pm.PathPermission.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.pm.PermissionGroupInfo.writeToParcel (Parcel dest, int parcelableFlags) "," no description <br /><br />"
"android.content.pm.PermissionGroupInfo.loadDescription (PackageManager pm) "," Retrieve the textual description of this permission. <br /><br />"
"android.content.pm.PermissionGroupInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.pm.PermissionGroupInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.pm.PermissionInfo.writeToParcel (Parcel dest, int parcelableFlags) "," no description <br /><br />"
"android.content.pm.PermissionInfo.loadDescription (PackageManager pm) "," Retrieve the textual description of this permission. <br /><br />"
"android.content.pm.PermissionInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.pm.PermissionInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.pm.ProviderInfo.dump (Printer pw, String prefix) "," no description <br /><br />"
"android.content.pm.ProviderInfo.writeToParcel (Parcel out, int parcelableFlags) "," no description <br /><br />"
"android.content.pm.ProviderInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.pm.ProviderInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.pm.ResolveInfo.DisplayNameComparator.compare (ResolveInfo a, ResolveInfo b) "," no description <br /><br />"
"android.content.pm.ResolveInfo.loadLabel (PackageManager pm) "," Retrieve the current textual label associated with this resolution. <br /><br />"
"android.content.pm.ResolveInfo.getIconResource () "," Return the icon resource identifier to use for this match. <br /><br />"
"android.content.pm.ResolveInfo.writeToParcel (Parcel dest, int parcelableFlags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.pm.ResolveInfo.dump (Printer pw, String prefix) "," no description <br /><br />"
"android.content.pm.ResolveInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.pm.ResolveInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.pm.ResolveInfo.loadIcon (PackageManager pm) "," Retrieve the current graphical icon associated with this resolution. <br /><br />"
"android.content.pm.ServiceInfo.writeToParcel (Parcel dest, int parcelableFlags) "," no description <br /><br />"
"android.content.pm.ServiceInfo.dump (Printer pw, String prefix) "," no description <br /><br />"
"android.content.pm.ServiceInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.pm.ServiceInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.pm.Signature.toByteArray () "," no description <br /><br />"
"android.content.pm.Signature.writeToParcel (Parcel dest, int parcelableFlags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.pm.Signature.toCharsString ()   Return the result of toChars () "," Return the result of toChars() as a String. <br /><br />"
"android.content.pm.Signature.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.content.pm.Signature.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.content.pm.Signature.toChars (char[] existingArray, int[] outLen) "," Encode the Signature as ASCII text in to an existing array. <br /><br />"
"android.content.pm.Signature.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.pm.Signature.toChars () "," Encode the Signature as ASCII text. <br /><br />"
"android.content.res.AssetFileDescriptor.AutoCloseInputStream.read (byte[] buffer)   Equivalent to read (buffer, 0, buffer.length) "," Equivalent to read(buffer, 0, buffer.length). <br /><br />"
"android.content.res.AssetFileDescriptor.AutoCloseInputStream.markSupported ()   Indicates whether this stream supports the mark () and reset () "," Indicates whether this stream supports the mark() and reset() methods. <br /><br />"
"android.content.res.AssetFileDescriptor.AutoCloseInputStream.read () "," Reads a single byte from this stream and returns it as an integer in the range from 0 to 255. <br /><br />"
"android.content.res.AssetFileDescriptor.AutoCloseInputStream.available () "," Returns an estimated number of bytes that can be read or skipped without blocking for more input. <br /><br />"
"android.content.res.AssetFileDescriptor.AutoCloseInputStream.mark (int readlimit) "," Sets a mark position in this InputStream. <br /><br />"
"android.content.res.AssetFileDescriptor.AutoCloseInputStream.skip (long count) "," Skips at most byteCount bytes in this stream. <br /><br />"
"android.content.res.AssetFileDescriptor.AutoCloseInputStream.reset () "," Resets this stream to the last marked location. <br /><br />"
"android.content.res.AssetFileDescriptor.AutoCloseInputStream.read (byte[] buffer, int offset, int count) "," Reads up to byteCount bytes from this stream and stores them in the byte array buffer starting at byteOffset. <br /><br />"
"android.content.res.AssetFileDescriptor.AutoCloseOutputStream.write (byte[] buffer)   Equivalent to write (buffer, 0, buffer.length) "," Equivalent to write(buffer, 0, buffer.length). <br /><br />"
"android.content.res.AssetFileDescriptor.AutoCloseOutputStream.write (int oneByte) "," Writes a single byte to this stream. <br /><br />"
"android.content.res.AssetFileDescriptor.AutoCloseOutputStream.write (byte[] buffer, int offset, int count) "," Writes count bytes from the byte array buffer starting at position offset to this stream. <br /><br />"
"android.content.res.AssetFileDescriptor.getExtras () "," Returns any additional details that can be used to interpret the underlying file descriptor. <br /><br />"
"android.content.res.AssetFileDescriptor.close ()   Convenience for calling getParcelFileDescriptor ().close () "," Convenience for calling getParcelFileDescriptor().close(). <br /><br />"
"android.content.res.AssetFileDescriptor.createOutputStream () "," Create and return a new auto-close output stream for this asset. <br /><br />"
"android.content.res.AssetFileDescriptor.getStartOffset () "," Returns the byte offset where this asset entry's data starts. <br /><br />"
"android.content.res.AssetFileDescriptor.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.res.AssetFileDescriptor.getDeclaredLength () "," Return the actual number of bytes that were declared when the AssetFileDescriptor was constructed. <br /><br />"
"android.content.res.AssetFileDescriptor.getLength () "," Returns the total number of bytes of this asset entry's data. <br /><br />"
"android.content.res.AssetFileDescriptor.createInputStream () "," Create and return a new auto-close input stream for this asset. <br /><br />"
"android.content.res.AssetFileDescriptor.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.res.AssetFileDescriptor.getParcelFileDescriptor () "," The AssetFileDescriptor contains its own ParcelFileDescriptor, which in addition to the normal FileDescriptor object also allows you to close the descriptor when you are done with it. <br /><br />"
"android.content.res.AssetFileDescriptor.getFileDescriptor () "," Returns the FileDescriptor that can be used to read the data in the file. <br /><br />"
"android.content.res.AssetFileDescriptor.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.res.AssetManager.AssetInputStream.read (byte[] b, int off, int len) "," Reads up to byteCount bytes from this stream and stores them in the byte array buffer starting at byteOffset. <br /><br />"
"android.content.res.AssetManager.AssetInputStream.markSupported ()   Indicates whether this stream supports the mark () and reset () "," Indicates whether this stream supports the mark() and reset() methods. <br /><br />"
"android.content.res.AssetManager.AssetInputStream.skip (long n) "," Skips at most byteCount bytes in this stream. <br /><br />"
"android.content.res.AssetManager.AssetInputStream.read (byte[] b)   Equivalent to read (buffer, 0, buffer.length) "," Equivalent to read(buffer, 0, buffer.length). <br /><br />"
"android.content.res.AssetManager.AssetInputStream.close () "," Closes this stream. <br /><br />"
"android.content.res.AssetManager.AssetInputStream.read () "," Reads a single byte from this stream and returns it as an integer in the range from 0 to 255. <br /><br />"
"android.content.res.AssetManager.AssetInputStream.available () "," Returns an estimated number of bytes that can be read or skipped without blocking for more input. <br /><br />"
"android.content.res.AssetManager.AssetInputStream.mark (int readlimit) "," Sets a mark position in this InputStream. <br /><br />"
"android.content.res.AssetManager.AssetInputStream.reset () "," Resets this stream to the last marked location. <br /><br />"
"android.content.res.AssetManager.openXmlResourceParser (int cookie, String fileName) "," Retrieve a parser for a compiled XML file. <br /><br />"
"android.content.res.AssetManager.getLocales () "," Get the locales that this asset manager contains data for. <br /><br />"
"android.content.res.AssetManager.openFd (String fileName) "," no description <br /><br />"
"android.content.res.AssetManager.openNonAssetFd (String fileName) "," no description <br /><br />"
"android.content.res.AssetManager.open (String fileName) "," Open an asset using ACCESS_STREAMING mode. <br /><br />"
"android.content.res.AssetManager.list (String path) "," Return a String array of all the assets at the given path. <br /><br />"
"android.content.res.AssetManager.close () "," Close this asset manager. <br /><br />"
"android.content.res.AssetManager.openNonAssetFd (int cookie, String fileName) "," no description <br /><br />"
"android.content.res.AssetManager.open (String fileName, int accessMode) "," Open an asset using an explicit access mode, returning an InputStream to read its contents. <br /><br />"
"android.content.res.AssetManager.openXmlResourceParser (String fileName) "," Retrieve a parser for a compiled XML file. <br /><br />"
"android.content.res.ColorStateList.valueOf (int color) "," Creates or retrieves a ColorStateList that always returns a single color. <br /><br />"
"android.content.res.ColorStateList.getColorForState (int[] stateSet, int defaultColor) "," Return the color associated with the given set of View states. <br /><br />"
"android.content.res.ColorStateList.isStateful () "," Indicates whether this color state list contains more than one state spec and will change color based on state. <br /><br />"
"android.content.res.ColorStateList.getDefaultColor () "," Return the default color in this ColorStateList. <br /><br />"
"android.content.res.ColorStateList.createFromXml (Resources r, XmlPullParser parser) "," Create a ColorStateList from an XML document, given a set of Resources. <br /><br />"
"android.content.res.ColorStateList.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.res.ColorStateList.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.res.ColorStateList.withAlpha (int alpha)   Creates a new ColorStateList that has the same states and colors as this one but where each color has the specified alpha value  (0-255) "," Creates a new ColorStateList that has the same states and colors as this one but where each color has the specified alpha value (0-255). <br /><br />"
"android.content.res.ColorStateList.isOpaque ()   Indicates whether this color state list is opaque, which means that every color returned from getColorForState (int[], int) "," Indicates whether this color state list is opaque, which means that every color returned from getColorForState(int[], int) has an alpha value of 255. <br /><br />"
"android.content.res.ColorStateList.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.res.Configuration.getLayoutDirection () "," Return the layout direction. <br /><br />"
"android.content.res.Configuration.diff (Configuration delta) "," Return a bit mask of the differences between this Configuration object and the given one. <br /><br />"
"android.content.res.Configuration.setTo (Configuration o) "," no description <br /><br />"
"android.content.res.Configuration.needNewResources (int configChanges, int interestingChanges)   Determine if a new resource needs to be loaded from the bit set of configuration changes returned by updateFrom (Configuration) "," Determine if a new resource needs to be loaded from the bit set of configuration changes returned by updateFrom(Configuration). <br /><br />"
"android.content.res.Configuration.isLayoutSizeAtLeast (int size) "," Check if the Configuration's current screenLayout is at least the given size. <br /><br />"
"android.content.res.Configuration.describeContents () "," Parcelable methods <br /><br />"
"android.content.res.Configuration.setLayoutDirection (Locale locale) "," Set the layout direction from the Locale. <br /><br />"
"android.content.res.Configuration.updateFrom (Configuration delta) "," Copy the fields from delta into this Configuration object, keeping track of which ones have changed. <br /><br />"
"android.content.res.Configuration.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.res.Configuration.readFromParcel (Parcel source) "," no description <br /><br />"
"android.content.res.Configuration.setLocale (Locale loc) "," Set the locale. <br /><br />"
"android.content.res.Configuration.setToDefaults () "," Set this object to the system defaults. <br /><br />"
"android.content.res.Configuration.equals (Object that) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.content.res.Configuration.equals (Configuration that) "," no description <br /><br />"
"android.content.res.Configuration.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.content.res.Configuration.compareTo (Configuration that) "," no description <br /><br />"
"android.content.res.Configuration.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.res.ObbInfo.writeToParcel (Parcel dest, int parcelableFlags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.res.ObbInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.res.ObbInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.res.ObbScanner.getObbInfo (String filePath) "," Scan a file for OBB information. <br /><br />"
"android.content.res.Resources.getQuantityText (int id, int quantity) "," Returns the character sequence necessary for grammatically correct pluralization of the given resource ID for the given quantity. <br /><br />"
"android.content.res.Resources.getLayout (int id) "," Return an XmlResourceParser through which you can read a view layout description for the given resource ID. <br /><br />"
"android.content.res.Resources.getTextArray (int id) "," Return the styled text array associated with a particular resource ID. <br /><br />"
"android.content.res.Resources.getString (int id) "," Return the string value associated with a particular resource ID. It will be stripped of any styled text information. <br /><br />"
"android.content.res.Resources.parseBundleExtra (String tagName, AttributeSet attrs, Bundle outBundle) "," Parse a name/value pair out of an XML tag holding that data. <br /><br />"
"android.content.res.Resources.getMovie (int id) "," Return a movie object associated with the particular resource ID. <br /><br />"
"android.content.res.Resources.getConfiguration () "," Return the current configuration that is in effect for this resource object. <br /><br />"
"android.content.res.Resources.getResourceTypeName (int resid) "," Return the type name for a given resource identifier. <br /><br />"
"android.content.res.Resources.openRawResourceFd (int id) "," Open a file descriptor for reading a raw resource. <br /><br />"
"android.content.res.Resources.getFraction (int id, int base, int pbase) "," Retrieve a fractional unit for a particular resource ID. <br /><br />"
"android.content.res.Resources.getQuantityString (int id, int quantity, Object... formatArgs) "," Formats the string necessary for grammatically correct pluralization of the given resource ID for the given quantity, using the given arguments. <br /><br />"
"android.content.res.Resources.openRawResource (int id, TypedValue value) "," Open a data stream for reading a raw resource. <br /><br />"
"android.content.res.Resources.getIdentifier (String name, String defType, String defPackage) "," Return a resource identifier for the given resource name. <br /><br />"
"android.content.res.Resources.obtainTypedArray (int id) "," Return an array of heterogeneous values. <br /><br />"
"android.content.res.Resources.getDrawable (int id, Resources.Theme theme) "," Return a drawable object associated with a particular resource ID and styled for the specified theme. <br /><br />"
"android.content.res.Resources.finishPreloading () "," Called by zygote when it is done preloading resources, to change back to normal Resources operation. <br /><br />"
"android.content.res.Resources.getSystem ()   Return a global shared Resources object that provides access to only system resources  (no application resources), and is not configured for the current screen  (can not use dimension units, does not change based on orientation, etc) "," Return a global shared Resources object that provides access to only system resources (no application resources), and is not configured for the current screen (can not use dimension units, does not change based on orientation, etc). <br /><br />"
"android.content.res.Resources.getResourcePackageName (int resid) "," Return the package name for a given resource identifier. <br /><br />"
"android.content.res.Resources.getInteger (int id) "," Return an integer associated with a particular resource ID. <br /><br />"
"android.content.res.Resources.getXml (int id) "," Return an XmlResourceParser through which you can read a generic XML resource for the given resource ID. <br /><br />"
"android.content.res.Resources.newTheme () "," Generate a new Theme object for this set of Resources. <br /><br />"
"android.content.res.Resources.getResourceName (int resid) "," Return the full name for a given resource identifier. <br /><br />"
"android.content.res.Resources.getDimension (int id) "," Retrieve a dimensional for a particular resource ID. <br /><br />"
"android.content.res.Resources.getDimensionPixelOffset (int id) "," Retrieve a dimensional for a particular resource ID for use as an offset in raw pixels. <br /><br />"
"android.content.res.Resources.getDisplayMetrics () "," Return the current display metrics that are in effect for this resource object. <br /><br />"
"android.content.res.Resources.getValue (String name, TypedValue outValue, boolean resolveRefs) "," Return the raw data associated with a particular resource ID. <br /><br />"
"android.content.res.Resources.getDimensionPixelSize (int id) "," Retrieve a dimensional for a particular resource ID for use as a size in raw pixels. <br /><br />"
"android.content.res.Resources.getResourceEntryName (int resid) "," Return the entry name for a given resource identifier. <br /><br />"
"android.content.res.Resources.getStringArray (int id) "," Return the string array associated with a particular resource ID. <br /><br />"
"android.content.res.Resources.getIntArray (int id) "," Return the int array associated with a particular resource ID. <br /><br />"
"android.content.res.Resources.getAssets () "," Retrieve underlying AssetManager storage for these resources. <br /><br />"
"android.content.res.Resources.openRawResource (int id) "," Open a data stream for reading a raw resource. <br /><br />"
"android.content.res.Resources.getAnimation (int id) "," Return an XmlResourceParser through which you can read an animation description for the given resource ID. <br /><br />"
"android.content.res.Resources.getValueForDensity (int id, int density, TypedValue outValue, boolean resolveRefs) "," Get the raw value associated with a resource with associated density. <br /><br />"
"android.content.res.Resources.getDrawableForDensity (int id, int density)    This method is deprecated. Use getDrawableForDensity (int, int, Theme) "," This method is deprecated. Use getDrawableForDensity(int, int, Theme) instead. <br /><br />"
"android.content.res.Resources.getDrawableForDensity (int id, int density, Resources.Theme theme) "," Return a drawable object associated with a particular resource ID for the given screen density in DPI and styled for the specified theme. <br /><br />"
"android.content.res.Resources.getColor (int id) "," Return a color integer associated with a particular resource ID. <br /><br />"
"android.content.res.Resources.getText (int id, CharSequence def) "," Return the string value associated with a particular resource ID. <br /><br />"
"android.content.res.Resources.flushLayoutCache () "," Call this to remove all cached loaded layout resources from the Resources object. <br /><br />"
"android.content.res.Resources.getText (int id) "," Return the string value associated with a particular resource ID. The returned object will be a String if this is a plain string; it will be some other type of CharSequence if it is styled. <br /><br />"
"android.content.res.Resources.getDrawable (int id)    This method is deprecated. Use getDrawable (int, Theme) "," This method is deprecated. Use getDrawable(int, Theme) instead. <br /><br />"
"android.content.res.Resources.getValue (int id, TypedValue outValue, boolean resolveRefs) "," Return the raw data associated with a particular resource ID. <br /><br />"
"android.content.res.Resources.getColorStateList (int id) "," Return a color state list associated with a particular resource ID. <br /><br />"
"android.content.res.Resources.getString (int id, Object... formatArgs)   Return the string value associated with a particular resource ID, substituting the format arguments as defined in Formatter and format (String, Object...) "," Return the string value associated with a particular resource ID, substituting the format arguments as defined in Formatter and format(String, Object...). It will be stripped of any styled text information. <br /><br />"
"android.content.res.Resources.obtainAttributes (AttributeSet set, int[] attrs) "," Retrieve a set of basic attribute values from an AttributeSet, not performing styling of them using a theme and/or style resources. <br /><br />"
"android.content.res.Resources.parseBundleExtras (XmlResourceParser parser, Bundle outBundle) "," Parse a series of <extra> tags from an XML file. <br /><br />"
"android.content.res.Resources.getQuantityString (int id, int quantity) "," Returns the string necessary for grammatically correct pluralization of the given resource ID for the given quantity. <br /><br />"
"android.content.res.Resources.updateConfiguration (Configuration config, DisplayMetrics metrics) "," Store the newly updated configuration. <br /><br />"
"android.content.res.Resources.getBoolean (int id) "," Return a boolean associated with a particular resource ID. <br /><br />"
"android.content.res.Resources.Theme.obtainStyledAttributes (int[] attrs) "," Return a TypedArray holding the values defined by Theme which are listed in attrs. <br /><br />"
"android.content.res.Resources.Theme.obtainStyledAttributes (AttributeSet set, int[] attrs, int defStyleAttr, int defStyleRes) "," Return a TypedArray holding the attribute values in set that are listed in attrs. <br /><br />"
"android.content.res.Resources.Theme.getResources () "," Returns the resources to which this theme belongs. <br /><br />"
"android.content.res.Resources.Theme.dump (int priority, String tag, String prefix) "," Print contents of this theme out to the log. <br /><br />"
"android.content.res.Resources.Theme.obtainStyledAttributes (int resid, int[] attrs) "," Return a TypedArray holding the values defined by the style resource resid which are listed in attrs. <br /><br />"
"android.content.res.Resources.Theme.resolveAttribute (int resid, TypedValue outValue, boolean resolveRefs) "," Retrieve the value of an attribute in the Theme. <br /><br />"
"android.content.res.Resources.Theme.getDrawable (int id) "," Return a drawable object associated with a particular resource ID and styled for the Theme. <br /><br />"
"android.content.res.Resources.Theme.setTo (Resources.Theme other) "," Set this theme to hold the same contents as the theme other. <br /><br />"
"android.content.res.Resources.Theme.applyStyle (int resId, boolean force) "," Place new attribute values into the theme. <br /><br />"
"android.content.res.TypedArray.length () "," Return the number of values in this array. <br /><br />"
"android.content.res.TypedArray.getNonResourceString (int index) "," Retrieve the string value for the attribute at index, but only if that string comes from an immediate value in an XML file. <br /><br />"
"android.content.res.TypedArray.getResources () "," Return the Resources object this array was loaded from. <br /><br />"
"android.content.res.TypedArray.getDimensionPixelOffset (int index, int defValue) "," Retrieve a dimensional unit attribute at index for use as an offset in raw pixels. <br /><br />"
"android.content.res.TypedArray.getResourceId (int index, int defValue) "," Retrieve the resource identifier for the attribute at index. <br /><br />"
"android.content.res.TypedArray.peekValue (int index) "," Retrieve the raw TypedValue for the attribute at index and return a temporary object holding its data. <br /><br />"
"android.content.res.TypedArray.getFloat (int index, float defValue) "," Retrieve the float value for the attribute at index. <br /><br />"
"android.content.res.TypedArray.getBoolean (int index, boolean defValue) "," Retrieve the boolean value for the attribute at index. <br /><br />"
"android.content.res.TypedArray.getInt (int index, int defValue) "," Retrieve the integer value for the attribute at index. <br /><br />"
"android.content.res.TypedArray.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.res.TypedArray.hasValue (int index) "," Determines whether there is an attribute at index. <br /><br />"
"android.content.res.TypedArray.getDrawable (int index) "," Retrieve the Drawable for the attribute at index. <br /><br />"
"android.content.res.TypedArray.getLayoutDimension (int index, String name)   Special version of getDimensionPixelSize (int, int) "," Special version of getDimensionPixelSize(int, int) for retrieving ViewGroup's layout_width and layout_height attributes. <br /><br />"
"android.content.res.TypedArray.getType (int index) "," Returns the type of attribute at the specified index. <br /><br />"
"android.content.res.TypedArray.getIndex (int at) "," Return an index in the array that has data. <br /><br />"
"android.content.res.TypedArray.getIndexCount () "," Return the number of indices in the array that actually have data. <br /><br />"
"android.content.res.TypedArray.getDimension (int index, float defValue) "," Retrieve a dimensional unit attribute at index. <br /><br />"
"android.content.res.TypedArray.getColor (int index, int defValue) "," Retrieve the color value for the attribute at index. <br /><br />"
"android.content.res.TypedArray.getText (int index) "," Retrieve the styled string value for the attribute at index. <br /><br />"
"android.content.res.TypedArray.getChangingConfigurations () "," Return a mask of the configuration parameters for which the values in this typed array may change. <br /><br />"
"android.content.res.TypedArray.getString (int index) "," Retrieve the string value for the attribute at index. <br /><br />"
"android.content.res.TypedArray.getDimensionPixelSize (int index, int defValue) "," Retrieve a dimensional unit attribute at index for use as a size in raw pixels. <br /><br />"
"android.content.res.TypedArray.getTextArray (int index) "," Retrieve the CharSequence[] for the attribute at index. <br /><br />"
"android.content.res.TypedArray.getColorStateList (int index) "," Retrieve the ColorStateList for the attribute at index. <br /><br />"
"android.content.res.TypedArray.getLayoutDimension (int index, int defValue)   Special version of getDimensionPixelSize (int, int) "," Special version of getDimensionPixelSize(int, int) for retrieving ViewGroup's layout_width and layout_height attributes. <br /><br />"
"android.content.res.TypedArray.recycle () "," Recycle the TypedArray, to be re-used by a later caller. <br /><br />"
"android.content.res.TypedArray.getInteger (int index, int defValue) "," Retrieve the integer value for the attribute at index. <br /><br />"
"android.content.res.TypedArray.getValue (int index, TypedValue outValue) "," Retrieve the raw TypedValue for the attribute at index. <br /><br />"
"android.content.res.TypedArray.hasValueOrEmpty (int index) "," Determines whether there is an attribute at index, returning true if the attribute was explicitly set to @empty and false only if the attribute was undefined. <br /><br />"
"android.content.res.TypedArray.getPositionDescription () "," Returns a message about the parser state suitable for printing error messages. <br /><br />"
"android.content.res.TypedArray.getFraction (int index, int base, int pbase, float defValue) "," Retrieve a fractional unit attribute at index. <br /><br />"
"android.content.res.XmlResourceParser.close () "," Close this interface to the resource. <br /><br />"
"android.content.RestrictionEntry.setSelectedState (boolean state) "," Sets the current selected state for an entry of type TYPE_BOOLEAN. <br /><br />"
"android.content.RestrictionEntry.setChoiceValues (Context context, int stringArrayResId)   Sets a list of string values that can be selected by the user, similar to setChoiceValues (String[]) "," Sets a list of string values that can be selected by the user, similar to setChoiceValues(String[]). <br /><br />"
"android.content.RestrictionEntry.setDescription (String description) "," Sets the user-visible description of the entry, as a possible sub-text for the title. <br /><br />"
"android.content.RestrictionEntry.setTitle (String title) "," Sets the user-visible title for the entry. <br /><br />"
"android.content.RestrictionEntry.getType () "," Returns the type for this restriction. <br /><br />"
"android.content.RestrictionEntry.getIntValue () "," Returns the value of the entry as an integer when the type is TYPE_INTEGER. <br /><br />"
"android.content.RestrictionEntry.getChoiceValues () "," Returns the list of possible string values set earlier. <br /><br />"
"android.content.RestrictionEntry.setChoiceEntries (String[] choiceEntries) "," Sets a list of strings that will be presented as choices to the user. <br /><br />"
"android.content.RestrictionEntry.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.RestrictionEntry.getDescription () "," Returns the provided user-visible description of the entry, if any. <br /><br />"
"android.content.RestrictionEntry.setType (int type) "," Sets the type for this restriction. <br /><br />"
"android.content.RestrictionEntry.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.RestrictionEntry.getTitle () "," Returns the user-visible title for the entry, if any. <br /><br />"
"android.content.RestrictionEntry.getAllSelectedStrings () "," Returns the list of currently selected values. <br /><br />"
"android.content.RestrictionEntry.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.content.RestrictionEntry.setIntValue (int value) "," Sets the integer value of the entry when the type is TYPE_INTEGER. <br /><br />"
"android.content.RestrictionEntry.getSelectedString () "," Returns the currently selected string value. <br /><br />"
"android.content.RestrictionEntry.getSelectedState () "," Returns the current selected state for an entry of type TYPE_BOOLEAN. <br /><br />"
"android.content.RestrictionEntry.setChoiceEntries (Context context, int stringArrayResId) "," Sets a list of strings that will be presented as choices to the user. <br /><br />"
"android.content.RestrictionEntry.getKey () "," This is the unique key for the restriction entry. <br /><br />"
"android.content.RestrictionEntry.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.RestrictionEntry.setSelectedString (String selectedString) "," Sets the string value to use as the selected value for this restriction. <br /><br />"
"android.content.RestrictionEntry.getChoiceEntries () "," Returns the list of strings, set earlier, that will be presented as choices to the user. <br /><br />"
"android.content.RestrictionEntry.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.content.RestrictionEntry.setAllSelectedStrings (String[] allSelectedStrings) "," Sets the current list of selected values for an entry of type TYPE_MULTI_SELECT. <br /><br />"
"android.content.RestrictionEntry.setChoiceValues (String[] choiceValues) "," Sets a list of string values that can be selected by the user. <br /><br />"
"android.content.RestrictionsManager.createLocalApprovalIntent () "," no description <br /><br />"
"android.content.RestrictionsManager.requestPermission (String requestType, String requestId, PersistableBundle request) "," Called by an application to request permission for an operation. <br /><br />"
"android.content.RestrictionsManager.getApplicationRestrictions () "," Returns any available set of application-specific restrictions applicable to this application. <br /><br />"
"android.content.RestrictionsManager.getManifestRestrictions (String packageName) "," Parse and return the list of restrictions defined in the manifest for the specified package, if any. <br /><br />"
"android.content.RestrictionsManager.notifyPermissionResponse (String packageName, PersistableBundle response) "," Called by the Restrictions Provider to deliver a response to an application. <br /><br />"
"android.content.RestrictionsManager.hasRestrictionsProvider () "," Called by an application to check if there is an active Restrictions Provider. <br /><br />"
"android.content.SearchRecentSuggestionsProvider.getType (Uri uri) "," This method is provided for use by the ContentResolver. <br /><br />"
"android.content.SearchRecentSuggestionsProvider.delete (Uri uri, String selection, String[] selectionArgs) "," This method is provided for use by the ContentResolver. <br /><br />"
"android.content.SearchRecentSuggestionsProvider.onCreate () "," This method is provided for use by the ContentResolver. <br /><br />"
"android.content.SearchRecentSuggestionsProvider.update (Uri uri, ContentValues values, String selection, String[] selectionArgs) "," This method is provided for use by the ContentResolver. <br /><br />"
"android.content.SearchRecentSuggestionsProvider.insert (Uri uri, ContentValues values) "," This method is provided for use by the ContentResolver. <br /><br />"
"android.content.SearchRecentSuggestionsProvider.query (Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) "," This method is provided for use by the ContentResolver. <br /><br />"
"android.content.ServiceConnection.onServiceConnected (ComponentName name, IBinder service) "," Called when a connection to the Service has been established, with the IBinder of the communication channel to the Service. <br /><br />"
"android.content.ServiceConnection.onServiceDisconnected (ComponentName name) "," Called when a connection to the Service has been lost. <br /><br />"
"android.content.SharedPreferences.Editor.commit () "," Commit your preferences changes back from this Editor to the SharedPreferences object it is editing. <br /><br />"
"android.content.SharedPreferences.Editor.apply () "," Commit your preferences changes back from this Editor to the SharedPreferences object it is editing. <br /><br />"
"android.content.SharedPreferences.Editor.putFloat (String key, float value)   Set a float value in the preferences editor, to be written back once commit () or apply () "," Set a float value in the preferences editor, to be written back once commit() or apply() are called. <br /><br />"
"android.content.SharedPreferences.Editor.clear () "," Mark in the editor to remove all values from the preferences. <br /><br />"
"android.content.SharedPreferences.Editor.putStringSet (String key, Set< String> values)   Set a set of String values in the preferences editor, to be written back once commit () or apply () "," Set a set of String values in the preferences editor, to be written back once commit() or apply() is called. <br /><br />"
"android.content.SharedPreferences.Editor.putLong (String key, long value)   Set a long value in the preferences editor, to be written back once commit () or apply () "," Set a long value in the preferences editor, to be written back once commit() or apply() are called. <br /><br />"
"android.content.SharedPreferences.Editor.putInt (String key, int value)   Set an int value in the preferences editor, to be written back once commit () or apply () "," Set an int value in the preferences editor, to be written back once commit() or apply() are called. <br /><br />"
"android.content.SharedPreferences.Editor.remove (String key)   Mark in the editor that a preference value should be removed, which will be done in the actual preferences once commit () "," Mark in the editor that a preference value should be removed, which will be done in the actual preferences once commit() is called. <br /><br />"
"android.content.SharedPreferences.Editor.putBoolean (String key, boolean value)   Set a boolean value in the preferences editor, to be written back once commit () or apply () "," Set a boolean value in the preferences editor, to be written back once commit() or apply() are called. <br /><br />"
"android.content.SharedPreferences.Editor.putString (String key, String value)   Set a String value in the preferences editor, to be written back once commit () or apply () "," Set a String value in the preferences editor, to be written back once commit() or apply() are called. <br /><br />"
"android.content.SharedPreferences.OnSharedPreferenceChangeListener.onSharedPreferenceChanged (SharedPreferences sharedPreferences, String key) "," Called when a shared preference is changed, added, or removed. <br /><br />"
"android.content.SyncAdapterType.supportsUploading () "," no description <br /><br />"
"android.content.SyncAdapterType.getSettingsActivity () "," no description <br /><br />"
"android.content.SyncAdapterType.newKey (String authority, String accountType) "," no description <br /><br />"
"android.content.SyncAdapterType.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.content.SyncAdapterType.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.SyncAdapterType.isUserVisible () "," no description <br /><br />"
"android.content.SyncAdapterType.isAlwaysSyncable ()   If true then the SyncManager will never issue an initialization sync to the SyncAdapter and will instead automatically call setIsSyncable (android.accounts.Account, String, int) "," If true then the SyncManager will never issue an initialization sync to the SyncAdapter and will instead automatically call setIsSyncable(android.accounts.Account, String, int) with a value of 1 for each account and provider that this sync adapter supports. <br /><br />"
"android.content.SyncAdapterType.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.SyncAdapterType.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.SyncAdapterType.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.content.SyncAdapterType.allowParallelSyncs () "," no description <br /><br />"
"android.content.SyncContext.getSyncContextBinder () "," no description <br /><br />"
"android.content.SyncContext.onFinished (SyncResult result) "," no description <br /><br />"
"android.content.SyncRequest.Builder.setExtras (Bundle bundle) "," Developer-provided extras handed back when sync actually occurs. <br /><br />"
"android.content.SyncRequest.Builder.setNoRetry (boolean noRetry) "," Convenience function for setting SYNC_EXTRAS_DO_NOT_RETRY. <br /><br />"
"android.content.SyncRequest.Builder.setExpedited (boolean expedited) "," An expedited sync runs immediately and can preempt other non-expedited running syncs. <br /><br />"
"android.content.SyncRequest.Builder.syncOnce () "," Request that a sync occur immediately. <br /><br />"
"android.content.SyncRequest.Builder.setSyncAdapter (Account account, String authority) "," Specify an authority and account for this transfer. <br /><br />"
"android.content.SyncRequest.Builder.setIgnoreSettings (boolean ignoreSettings) "," Convenience function for setting SYNC_EXTRAS_IGNORE_SETTINGS. <br /><br />"
"android.content.SyncRequest.Builder.setIgnoreBackoff (boolean ignoreBackoff) "," Convenience function for setting SYNC_EXTRAS_IGNORE_BACKOFF. <br /><br />"
"android.content.SyncRequest.Builder.syncPeriodic (long pollFrequency, long beforeSeconds) "," Build a periodic sync. <br /><br />"
"android.content.SyncRequest.Builder.build () "," Performs validation over the request and throws the runtime exception IllegalArgumentException if this validation fails. <br /><br />"
"android.content.SyncRequest.Builder.setManual (boolean isManual) "," Convenience function for setting SYNC_EXTRAS_MANUAL. <br /><br />"
"android.content.SyncRequest.Builder.setDisallowMetered (boolean disallow)   Will throw an IllegalArgumentException if called and setIgnoreSettings (boolean) "," Will throw an IllegalArgumentException if called and setIgnoreSettings(boolean) has already been called. <br /><br />"
"android.content.SyncRequest.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.SyncRequest.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.SyncResult.hasHardError () "," Convenience method for determining if the SyncResult indicates that a hard error occurred. <br /><br />"
"android.content.SyncResult.clear () "," Clears the SyncResult to a clean state. <br /><br />"
"android.content.SyncResult.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.SyncResult.madeSomeProgress () "," Convenience method for determining if the Sync should be rescheduled after failing for some reason. <br /><br />"
"android.content.SyncResult.hasError () "," A convenience method for determining of the SyncResult indicates that an error occurred. <br /><br />"
"android.content.SyncResult.hasSoftError () "," Convenience method for determining if the SyncResult indicates that a soft error occurred. <br /><br />"
"android.content.SyncResult.toDebugString () "," Generates a debugging string indicating the status. <br /><br />"
"android.content.SyncResult.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.SyncResult.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.SyncStats.clear () "," Reset all the counters to 0. <br /><br />"
"android.content.SyncStats.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.SyncStats.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.SyncStats.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.SyncStatusObserver.onStatusChanged (int which) "," no description <br /><br />"
"android.content.UriMatcher.addURI (String authority, String path, int code) "," Add a URI to match, and the code to return when this URI is matched. <br /><br />"
"android.content.UriMatcher.match (Uri uri) "," Try to match against the path in a url. <br /><br />"
"android.content.UriPermission.getPersistedTime () "," Return the time when this permission was first persisted, in milliseconds since January 1, 1970 00:00:00.0 UTC. <br /><br />"
"android.content.UriPermission.isWritePermission () "," Returns if this permission offers write access. <br /><br />"
"android.content.UriPermission.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.content.UriPermission.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.content.UriPermission.isReadPermission () "," Returns if this permission offers read access. <br /><br />"
"android.content.UriPermission.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.content.UriPermission.getUri () "," Return the Uri this permission pertains to. <br /><br />"
"android.database.AbstractCursor.setNotificationUri (ContentResolver cr, Uri notifyUri) "," Specifies a content URI to watch for changes. <br /><br />"
"android.database.AbstractCursor.getColumnName (int columnIndex) "," Returns the column name at the given zero-based column index. <br /><br />"
"android.database.AbstractCursor.getFloat (int column) "," Returns the value of the requested column as a float. <br /><br />"
"android.database.AbstractCursor.requery () "," Performs the query that created the cursor again, refreshing its contents. <br /><br />"
"android.database.AbstractCursor.getWantsAllOnMoveCalls ()   onMove () "," onMove() will only be called across processes if this method returns true. <br /><br />"
"android.database.AbstractCursor.close () "," Closes the Cursor, releasing all of its resources and making it completely invalid. <br /><br />"
"android.database.AbstractCursor.getCount () "," Returns the numbers of rows in the cursor. <br /><br />"
"android.database.AbstractCursor.registerContentObserver (ContentObserver observer) "," Register an observer that is called when changes happen to the content backing this cursor. <br /><br />"
"android.database.AbstractCursor.getShort (int column) "," Returns the value of the requested column as a short. <br /><br />"
"android.database.AbstractCursor.isFirst () "," Returns whether the cursor is pointing to the first row. <br /><br />"
"android.database.AbstractCursor.isBeforeFirst () "," Returns whether the cursor is pointing to the position before the first row. <br /><br />"
"android.database.AbstractCursor.registerDataSetObserver (DataSetObserver observer)   Register an observer that is called when changes happen to the contents of the this cursors data set, for example, when the data set is changed via requery (), deactivate (), or close () "," Register an observer that is called when changes happen to the contents of the this cursors data set, for example, when the data set is changed via requery(), deactivate(), or close(). <br /><br />"
"android.database.AbstractCursor.getInt (int column) "," Returns the value of the requested column as an int. <br /><br />"
"android.database.AbstractCursor.moveToPosition (int position) "," Move the cursor to an absolute position. <br /><br />"
"android.database.AbstractCursor.isClosed () "," return true if the cursor is closed <br /><br />"
"android.database.AbstractCursor.getLong (int column) "," Returns the value of the requested column as a long. <br /><br />"
"android.database.AbstractCursor.getPosition () "," Returns the current position of the cursor in the row set. <br /><br />"
"android.database.AbstractCursor.moveToNext () "," Move the cursor to the next row. <br /><br />"
"android.database.AbstractCursor.getColumnIndex (String columnName) "," Returns the zero-based index for the given column name, or -1 if the column doesn't exist. <br /><br />"
"android.database.AbstractCursor.moveToLast () "," Move the cursor to the last row. <br /><br />"
"android.database.AbstractCursor.getColumnNames () "," Returns a string array holding the names of all of the columns in the result set in the order in which they were listed in the result. <br /><br />"
"android.database.AbstractCursor.onMove (int oldPosition, int newPosition) "," This function is called every time the cursor is successfully scrolled to a new position, giving the subclass a chance to update any state it may have. <br /><br />"
"android.database.AbstractCursor.deactivate ()   Deactivates the Cursor, making all calls on it fail until requery () "," Deactivates the Cursor, making all calls on it fail until requery() is called. <br /><br />"
"android.database.AbstractCursor.getType (int column) "," Returns data type of the given column's value. <br /><br />"
"android.database.AbstractCursor.getNotificationUri ()   Return the URI at which notifications of changes in this Cursor's data will be delivered, as previously set by setNotificationUri (ContentResolver, Uri) "," Return the URI at which notifications of changes in this Cursor's data will be delivered, as previously set by setNotificationUri(ContentResolver, Uri). <br /><br />"
"android.database.AbstractCursor.isLast () "," Returns whether the cursor is pointing to the last row. <br /><br />"
"android.database.AbstractCursor.getBlob (int column) "," Returns the value of the requested column as a byte array. <br /><br />"
"android.database.AbstractCursor.moveToFirst () "," Move the cursor to the first row. <br /><br />"
"android.database.AbstractCursor.moveToPrevious () "," Move the cursor to the previous row. <br /><br />"
"android.database.AbstractCursor.getString (int column) "," Returns the value of the requested column as a String. <br /><br />"
"android.database.AbstractCursor.unregisterContentObserver (ContentObserver observer)   Unregister an observer that has previously been registered with this cursor via registerContentObserver (ContentObserver) "," Unregister an observer that has previously been registered with this cursor via registerContentObserver(ContentObserver). <br /><br />"
"android.database.AbstractCursor.fillWindow (int position, CursorWindow window) "," Copies cursor data into the window. <br /><br />"
"android.database.AbstractCursor.getExtras () "," Returns a bundle of extra values. <br /><br />"
"android.database.AbstractCursor.unregisterDataSetObserver (DataSetObserver observer)   Unregister an observer that has previously been registered with this cursor via registerContentObserver (ContentObserver) "," Unregister an observer that has previously been registered with this cursor via registerContentObserver(ContentObserver). <br /><br />"
"android.database.AbstractCursor.move (int offset) "," Move the cursor by a relative amount, forward or backward, from the current position. <br /><br />"
"android.database.AbstractCursor.getColumnCount () "," Return total number of columns <br /><br />"
"android.database.AbstractCursor.copyStringToBuffer (int columnIndex, CharArrayBuffer buffer) "," Retrieves the requested column text and stores it in the buffer provided. <br /><br />"
"android.database.AbstractCursor.isNull (int column) "," Returns true if the value in the indicated column is null. <br /><br />"
"android.database.AbstractCursor.getWindow () "," If the cursor is backed by a CursorWindow, returns a pre-filled window with the contents of the cursor, otherwise null. <br /><br />"
"android.database.AbstractCursor.respond (Bundle extras) "," This is an out-of-band way for the the user of a cursor to communicate with the cursor. <br /><br />"
"android.database.AbstractCursor.isAfterLast () "," Returns whether the cursor is pointing to the position after the last row. <br /><br />"
"android.database.AbstractCursor.getDouble (int column) "," Returns the value of the requested column as a double. <br /><br />"
"android.database.AbstractCursor.getColumnIndexOrThrow (String columnName) "," Returns the zero-based index for the given column name, or throws IllegalArgumentException if the column doesn't exist. <br /><br />"
"android.database.AbstractCursor.SelfContentObserver.deliverSelfNotifications () "," Returns true if this observer is interested receiving self-change notifications. <br /><br />"
"android.database.AbstractCursor.SelfContentObserver.onChange (boolean selfChange) "," This method is called when a content change occurs. <br /><br />"
"android.database.AbstractWindowedCursor.isFloat (int columnIndex)    This method was deprecated in API level 11. Use getType (int) "," This method was deprecated in API level 11. Use getType(int) <br /><br />"
"android.database.AbstractWindowedCursor.getDouble (int columnIndex) "," Returns the value of the requested column as a double. <br /><br />"
"android.database.AbstractWindowedCursor.getInt (int columnIndex) "," Returns the value of the requested column as an int. <br /><br />"
"android.database.AbstractWindowedCursor.setWindow (CursorWindow window) "," Sets a new cursor window for the cursor to use. <br /><br />"
"android.database.AbstractWindowedCursor.getLong (int columnIndex) "," Returns the value of the requested column as a long. <br /><br />"
"android.database.AbstractWindowedCursor.getType (int columnIndex) "," Returns data type of the given column's value. <br /><br />"
"android.database.AbstractWindowedCursor.getBlob (int columnIndex) "," Returns the value of the requested column as a byte array. <br /><br />"
"android.database.AbstractWindowedCursor.hasWindow () "," Returns true if the cursor has an associated cursor window. <br /><br />"
"android.database.AbstractWindowedCursor.isNull (int columnIndex) "," Returns true if the value in the indicated column is null. <br /><br />"
"android.database.AbstractWindowedCursor.isBlob (int columnIndex)    This method was deprecated in API level 11. Use getType (int) "," This method was deprecated in API level 11. Use getType(int) <br /><br />"
"android.database.AbstractWindowedCursor.copyStringToBuffer (int columnIndex, CharArrayBuffer buffer) "," Retrieves the requested column text and stores it in the buffer provided. <br /><br />"
"android.database.AbstractWindowedCursor.getWindow () "," If the cursor is backed by a CursorWindow, returns a pre-filled window with the contents of the cursor, otherwise null. <br /><br />"
"android.database.AbstractWindowedCursor.isLong (int columnIndex)    This method was deprecated in API level 11. Use getType (int) "," This method was deprecated in API level 11. Use getType(int) <br /><br />"
"android.database.AbstractWindowedCursor.getFloat (int columnIndex) "," Returns the value of the requested column as a float. <br /><br />"
"android.database.AbstractWindowedCursor.isString (int columnIndex)    This method was deprecated in API level 11. Use getType (int) "," This method was deprecated in API level 11. Use getType(int) <br /><br />"
"android.database.AbstractWindowedCursor.getString (int columnIndex) "," Returns the value of the requested column as a String. <br /><br />"
"android.database.AbstractWindowedCursor.getShort (int columnIndex) "," Returns the value of the requested column as a short. <br /><br />"
"android.database.ContentObservable.notifyChange (boolean selfChange)    This method was deprecated in API level 16. Use dispatchChange (boolean) "," This method was deprecated in API level 16. Use dispatchChange(boolean) instead. <br /><br />"
"android.database.ContentObservable.registerObserver (ContentObserver observer) "," Adds an observer to the list. <br /><br />"
"android.database.ContentObservable.dispatchChange (boolean selfChange)    This method was deprecated in API level 16. Use dispatchChange (boolean, Uri) "," This method was deprecated in API level 16. Use dispatchChange(boolean, Uri) instead. <br /><br />"
"android.database.ContentObservable.dispatchChange (boolean selfChange, Uri uri)   Invokes dispatchChange (boolean, Uri) "," Invokes dispatchChange(boolean, Uri) on each observer. <br /><br />"
"android.database.ContentObserver.dispatchChange (boolean selfChange, Uri uri) "," Dispatches a change notification to the observer. <br /><br />"
"android.database.ContentObserver.onChange (boolean selfChange, Uri uri) "," This method is called when a content change occurs. <br /><br />"
"android.database.ContentObserver.deliverSelfNotifications () "," Returns true if this observer is interested receiving self-change notifications. <br /><br />"
"android.database.ContentObserver.dispatchChange (boolean selfChange)    This method was deprecated in API level 16. Use dispatchChange (boolean, Uri) "," This method was deprecated in API level 16. Use dispatchChange(boolean, Uri) instead. <br /><br />"
"android.database.ContentObserver.onChange (boolean selfChange) "," This method is called when a content change occurs. <br /><br />"
"android.database.CrossProcessCursor.onMove (int oldPosition, int newPosition) "," This function is called every time the cursor is successfully scrolled to a new position, giving the subclass a chance to update any state it may have. <br /><br />"
"android.database.CrossProcessCursor.getWindow () "," Returns a pre-filled window that contains the data within this cursor. <br /><br />"
"android.database.CrossProcessCursor.fillWindow (int position, CursorWindow window) "," Copies cursor data into the window. <br /><br />"
"android.database.CrossProcessCursorWrapper.onMove (int oldPosition, int newPosition) "," This function is called every time the cursor is successfully scrolled to a new position, giving the subclass a chance to update any state it may have. <br /><br />"
"android.database.CrossProcessCursorWrapper.getWindow () "," Returns a pre-filled window that contains the data within this cursor. <br /><br />"
"android.database.CrossProcessCursorWrapper.fillWindow (int position, CursorWindow window) "," Copies cursor data into the window. <br /><br />"
"android.database.Cursor.getDouble (int columnIndex) "," Returns the value of the requested column as a double. <br /><br />"
"android.database.Cursor.getColumnName (int columnIndex) "," Returns the column name at the given zero-based column index. <br /><br />"
"android.database.Cursor.getInt (int columnIndex) "," Returns the value of the requested column as an int. <br /><br />"
"android.database.Cursor.requery () "," This method was deprecated in API level 11. Don't use this. Just request a new cursor, so you can do this asynchronously and update your list view once the new cursor comes back. <br /><br />"
"android.database.Cursor.getWantsAllOnMoveCalls ()   onMove () "," onMove() will only be called across processes if this method returns true. <br /><br />"
"android.database.Cursor.close () "," Closes the Cursor, releasing all of its resources and making it completely invalid. <br /><br />"
"android.database.Cursor.getCount () "," Returns the numbers of rows in the cursor. <br /><br />"
"android.database.Cursor.registerContentObserver (ContentObserver observer) "," Register an observer that is called when changes happen to the content backing this cursor. <br /><br />"
"android.database.Cursor.isFirst () "," Returns whether the cursor is pointing to the first row. <br /><br />"
"android.database.Cursor.isNull (int columnIndex) "," Returns true if the value in the indicated column is null. <br /><br />"
"android.database.Cursor.deactivate ()    This method was deprecated in API level 16. Since requery () "," This method was deprecated in API level 16. Since requery() is deprecated, so too is this. <br /><br />"
"android.database.Cursor.isBeforeFirst () "," Returns whether the cursor is pointing to the position before the first row. <br /><br />"
"android.database.Cursor.registerDataSetObserver (DataSetObserver observer)   Register an observer that is called when changes happen to the contents of the this cursors data set, for example, when the data set is changed via requery (), deactivate (), or close () "," Register an observer that is called when changes happen to the contents of the this cursors data set, for example, when the data set is changed via requery(), deactivate(), or close(). <br /><br />"
"android.database.Cursor.moveToPosition (int position) "," Move the cursor to an absolute position. <br /><br />"
"android.database.Cursor.isClosed () "," return true if the cursor is closed <br /><br />"
"android.database.Cursor.getPosition () "," Returns the current position of the cursor in the row set. <br /><br />"
"android.database.Cursor.setNotificationUri (ContentResolver cr, Uri uri) "," Register to watch a content URI for changes. <br /><br />"
"android.database.Cursor.getShort (int columnIndex) "," Returns the value of the requested column as a short. <br /><br />"
"android.database.Cursor.moveToNext () "," Move the cursor to the next row. <br /><br />"
"android.database.Cursor.getColumnIndex (String columnName) "," Returns the zero-based index for the given column name, or -1 if the column doesn't exist. <br /><br />"
"android.database.Cursor.moveToLast () "," Move the cursor to the last row. <br /><br />"
"android.database.Cursor.getColumnNames () "," Returns a string array holding the names of all of the columns in the result set in the order in which they were listed in the result. <br /><br />"
"android.database.Cursor.getNotificationUri ()   Return the URI at which notifications of changes in this Cursor's data will be delivered, as previously set by setNotificationUri (ContentResolver, Uri) "," Return the URI at which notifications of changes in this Cursor's data will be delivered, as previously set by setNotificationUri(ContentResolver, Uri). <br /><br />"
"android.database.Cursor.isLast () "," Returns whether the cursor is pointing to the last row. <br /><br />"
"android.database.Cursor.moveToFirst () "," Move the cursor to the first row. <br /><br />"
"android.database.Cursor.moveToPrevious () "," Move the cursor to the previous row. <br /><br />"
"android.database.Cursor.getLong (int columnIndex) "," Returns the value of the requested column as a long. <br /><br />"
"android.database.Cursor.getType (int columnIndex) "," Returns data type of the given column's value. <br /><br />"
"android.database.Cursor.unregisterContentObserver (ContentObserver observer)   Unregister an observer that has previously been registered with this cursor via registerContentObserver (ContentObserver) "," Unregister an observer that has previously been registered with this cursor via registerContentObserver(ContentObserver). <br /><br />"
"android.database.Cursor.getBlob (int columnIndex) "," Returns the value of the requested column as a byte array. <br /><br />"
"android.database.Cursor.getExtras () "," Returns a bundle of extra values. <br /><br />"
"android.database.Cursor.unregisterDataSetObserver (DataSetObserver observer)   Unregister an observer that has previously been registered with this cursor via registerContentObserver (ContentObserver) "," Unregister an observer that has previously been registered with this cursor via registerContentObserver(ContentObserver). <br /><br />"
"android.database.Cursor.move (int offset) "," Move the cursor by a relative amount, forward or backward, from the current position. <br /><br />"
"android.database.Cursor.getColumnCount () "," Return total number of columns <br /><br />"
"android.database.Cursor.copyStringToBuffer (int columnIndex, CharArrayBuffer buffer) "," Retrieves the requested column text and stores it in the buffer provided. <br /><br />"
"android.database.Cursor.respond (Bundle extras) "," This is an out-of-band way for the the user of a cursor to communicate with the cursor. <br /><br />"
"android.database.Cursor.getFloat (int columnIndex) "," Returns the value of the requested column as a float. <br /><br />"
"android.database.Cursor.getString (int columnIndex) "," Returns the value of the requested column as a String. <br /><br />"
"android.database.Cursor.isAfterLast () "," Returns whether the cursor is pointing to the position after the last row. <br /><br />"
"android.database.Cursor.getColumnIndexOrThrow (String columnName) "," Returns the zero-based index for the given column name, or throws IllegalArgumentException if the column doesn't exist. <br /><br />"
"android.database.CursorJoiner.hasNext ()   Returns whether or not there are more rows to compare using next () "," Returns whether or not there are more rows to compare using next(). <br /><br />"
"android.database.CursorJoiner.remove () "," Removes the last object returned by next from the collection. <br /><br />"
"android.database.CursorJoiner.iterator () "," Returns an Iterator for the elements in this object. <br /><br />"
"android.database.CursorJoiner.next () "," Returns the comparison result of the next row from each cursor. <br /><br />"
"android.database.CursorWindow.getInt (int row, int column) "," Gets the value of the field at the specified row and column index as an int. <br /><br />"
"android.database.CursorWindow.getShort (int row, int column) "," Gets the value of the field at the specified row and column index as a short. <br /><br />"
"android.database.CursorWindow.newFromParcel (Parcel p) "," no description <br /><br />"
"android.database.CursorWindow.putBlob (byte[] value, int row, int column) "," Copies a byte array into the field at the specified row and column index. <br /><br />"
"android.database.CursorWindow.putLong (long value, int row, int column) "," Puts a long integer into the field at the specified row and column index. <br /><br />"
"android.database.CursorWindow.setStartPosition (int pos) "," Sets the start position of this cursor window. <br /><br />"
"android.database.CursorWindow.setNumColumns (int columnNum) "," Sets the number of columns in this window. <br /><br />"
"android.database.CursorWindow.getStartPosition () "," Gets the start position of this cursor window. <br /><br />"
"android.database.CursorWindow.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.database.CursorWindow.copyStringToBuffer (int row, int column, CharArrayBuffer buffer) "," Copies the text of the field at the specified row and column index into a CharArrayBuffer. <br /><br />"
"android.database.CursorWindow.clear () "," Clears out the existing contents of the window, making it safe to reuse for new data. <br /><br />"
"android.database.CursorWindow.getBlob (int row, int column) "," Gets the value of the field at the specified row and column index as a byte array. <br /><br />"
"android.database.CursorWindow.isNull (int row, int column)    This method was deprecated in API level 11. Use getType (int, int) "," This method was deprecated in API level 11. Use getType(int, int) instead. <br /><br />"
"android.database.CursorWindow.putDouble (double value, int row, int column) "," Puts a double-precision floating point value into the field at the specified row and column index. <br /><br />"
"android.database.CursorWindow.getDouble (int row, int column) "," Gets the value of the field at the specified row and column index as a double. <br /><br />"
"android.database.CursorWindow.getFloat (int row, int column) "," Gets the value of the field at the specified row and column index as a float. <br /><br />"
"android.database.CursorWindow.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.database.CursorWindow.isFloat (int row, int column)    This method was deprecated in API level 11. Use getType (int, int) "," This method was deprecated in API level 11. Use getType(int, int) instead. <br /><br />"
"android.database.CursorWindow.allocRow () "," Allocates a new row at the end of this cursor window. <br /><br />"
"android.database.CursorWindow.freeLastRow () "," Frees the last row in this cursor window. <br /><br />"
"android.database.CursorWindow.putString (String value, int row, int column) "," Copies a string into the field at the specified row and column index. <br /><br />"
"android.database.CursorWindow.getLong (int row, int column) "," Gets the value of the field at the specified row and column index as a long. <br /><br />"
"android.database.CursorWindow.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.database.CursorWindow.isString (int row, int column)    This method was deprecated in API level 11. Use getType (int, int) "," This method was deprecated in API level 11. Use getType(int, int) instead. <br /><br />"
"android.database.CursorWindow.getType (int row, int column) "," Returns the type of the field at the specified row and column index. <br /><br />"
"android.database.CursorWindow.getNumRows () "," Gets the number of rows in this window. <br /><br />"
"android.database.CursorWindow.isBlob (int row, int column)    This method was deprecated in API level 11. Use getType (int, int) "," This method was deprecated in API level 11. Use getType(int, int) instead. <br /><br />"
"android.database.CursorWindow.getString (int row, int column) "," Gets the value of the field at the specified row and column index as a string. <br /><br />"
"android.database.CursorWindow.putNull (int row, int column) "," Puts a null value into the field at the specified row and column index. <br /><br />"
"android.database.CursorWindow.isLong (int row, int column)    This method was deprecated in API level 11. Use getType (int, int) "," This method was deprecated in API level 11. Use getType(int, int) instead. <br /><br />"
"android.database.CursorWrapper.getDouble (int columnIndex) "," Returns the value of the requested column as a double. <br /><br />"
"android.database.CursorWrapper.getColumnName (int columnIndex) "," Returns the column name at the given zero-based column index. <br /><br />"
"android.database.CursorWrapper.getInt (int columnIndex) "," Returns the value of the requested column as an int. <br /><br />"
"android.database.CursorWrapper.requery () "," Performs the query that created the cursor again, refreshing its contents. <br /><br />"
"android.database.CursorWrapper.getWantsAllOnMoveCalls ()   onMove () "," onMove() will only be called across processes if this method returns true. <br /><br />"
"android.database.CursorWrapper.close () "," Closes the Cursor, releasing all of its resources and making it completely invalid. <br /><br />"
"android.database.CursorWrapper.getCount () "," Returns the numbers of rows in the cursor. <br /><br />"
"android.database.CursorWrapper.registerContentObserver (ContentObserver observer) "," Register an observer that is called when changes happen to the content backing this cursor. <br /><br />"
"android.database.CursorWrapper.isFirst () "," Returns whether the cursor is pointing to the first row. <br /><br />"
"android.database.CursorWrapper.isNull (int columnIndex) "," Returns true if the value in the indicated column is null. <br /><br />"
"android.database.CursorWrapper.isBeforeFirst () "," Returns whether the cursor is pointing to the position before the first row. <br /><br />"
"android.database.CursorWrapper.registerDataSetObserver (DataSetObserver observer)   Register an observer that is called when changes happen to the contents of the this cursors data set, for example, when the data set is changed via requery (), deactivate (), or close () "," Register an observer that is called when changes happen to the contents of the this cursors data set, for example, when the data set is changed via requery(), deactivate(), or close(). <br /><br />"
"android.database.CursorWrapper.moveToPosition (int position) "," Move the cursor to an absolute position. <br /><br />"
"android.database.CursorWrapper.isClosed () "," return true if the cursor is closed <br /><br />"
"android.database.CursorWrapper.getPosition () "," Returns the current position of the cursor in the row set. <br /><br />"
"android.database.CursorWrapper.setNotificationUri (ContentResolver cr, Uri uri) "," Register to watch a content URI for changes. <br /><br />"
"android.database.CursorWrapper.getShort (int columnIndex) "," Returns the value of the requested column as a short. <br /><br />"
"android.database.CursorWrapper.moveToNext () "," Move the cursor to the next row. <br /><br />"
"android.database.CursorWrapper.getColumnIndex (String columnName) "," Returns the zero-based index for the given column name, or -1 if the column doesn't exist. <br /><br />"
"android.database.CursorWrapper.moveToLast () "," Move the cursor to the last row. <br /><br />"
"android.database.CursorWrapper.getColumnNames () "," Returns a string array holding the names of all of the columns in the result set in the order in which they were listed in the result. <br /><br />"
"android.database.CursorWrapper.deactivate ()   Deactivates the Cursor, making all calls on it fail until requery () "," Deactivates the Cursor, making all calls on it fail until requery() is called. <br /><br />"
"android.database.CursorWrapper.getNotificationUri ()   Return the URI at which notifications of changes in this Cursor's data will be delivered, as previously set by setNotificationUri (ContentResolver, Uri) "," Return the URI at which notifications of changes in this Cursor's data will be delivered, as previously set by setNotificationUri(ContentResolver, Uri). <br /><br />"
"android.database.CursorWrapper.isLast () "," Returns whether the cursor is pointing to the last row. <br /><br />"
"android.database.CursorWrapper.moveToFirst () "," Move the cursor to the first row. <br /><br />"
"android.database.CursorWrapper.moveToPrevious () "," Move the cursor to the previous row. <br /><br />"
"android.database.CursorWrapper.getWrappedCursor () "," Gets the underlying cursor that is wrapped by this instance. <br /><br />"
"android.database.CursorWrapper.getLong (int columnIndex) "," Returns the value of the requested column as a long. <br /><br />"
"android.database.CursorWrapper.getType (int columnIndex) "," Returns data type of the given column's value. <br /><br />"
"android.database.CursorWrapper.unregisterContentObserver (ContentObserver observer)   Unregister an observer that has previously been registered with this cursor via registerContentObserver (ContentObserver) "," Unregister an observer that has previously been registered with this cursor via registerContentObserver(ContentObserver). <br /><br />"
"android.database.CursorWrapper.getBlob (int columnIndex) "," Returns the value of the requested column as a byte array. <br /><br />"
"android.database.CursorWrapper.getExtras () "," Returns a bundle of extra values. <br /><br />"
"android.database.CursorWrapper.unregisterDataSetObserver (DataSetObserver observer)   Unregister an observer that has previously been registered with this cursor via registerContentObserver (ContentObserver) "," Unregister an observer that has previously been registered with this cursor via registerContentObserver(ContentObserver). <br /><br />"
"android.database.CursorWrapper.move (int offset) "," Move the cursor by a relative amount, forward or backward, from the current position. <br /><br />"
"android.database.CursorWrapper.getColumnCount () "," Return total number of columns <br /><br />"
"android.database.CursorWrapper.copyStringToBuffer (int columnIndex, CharArrayBuffer buffer) "," Retrieves the requested column text and stores it in the buffer provided. <br /><br />"
"android.database.CursorWrapper.respond (Bundle extras) "," This is an out-of-band way for the the user of a cursor to communicate with the cursor. <br /><br />"
"android.database.CursorWrapper.getFloat (int columnIndex) "," Returns the value of the requested column as a float. <br /><br />"
"android.database.CursorWrapper.getString (int columnIndex) "," Returns the value of the requested column as a String. <br /><br />"
"android.database.CursorWrapper.isAfterLast () "," Returns whether the cursor is pointing to the position after the last row. <br /><br />"
"android.database.CursorWrapper.getColumnIndexOrThrow (String columnName) "," Returns the zero-based index for the given column name, or throws IllegalArgumentException if the column doesn't exist. <br /><br />"
"android.database.DatabaseErrorHandler.onCorruption (SQLiteDatabase dbObj) "," defines the method to be invoked when database corruption is detected. <br /><br />"
"android.database.DatabaseUtils.queryNumEntries (SQLiteDatabase db, String table, String selection, String[] selectionArgs) "," Query the table for the number of rows in the table. <br /><br />"
"android.database.DatabaseUtils.cursorStringToContentValues (Cursor cursor, String field, ContentValues values) "," Reads a String out of a field in a Cursor and writes it to a Map. <br /><br />"
"android.database.DatabaseUtils.bindObjectToProgram (SQLiteProgram prog, int index, Object value) "," Binds the given Object to the given SQLiteProgram using the proper typing. <br /><br />"
"android.database.DatabaseUtils.queryNumEntries (SQLiteDatabase db, String table, String selection) "," Query the table for the number of rows in the table. <br /><br />"
"android.database.DatabaseUtils.cursorDoubleToContentValuesIfPresent (Cursor cursor, ContentValues values, String column) "," Reads a Double out of a column in a Cursor and writes it to a ContentValues. <br /><br />"
"android.database.DatabaseUtils.writeExceptionToParcel (Parcel reply, Exception e) "," Special function for writing an exception result at the header of a parcel, to be used when returning an exception from a transaction. <br /><br />"
"android.database.DatabaseUtils.getCollationKey (String name) "," return the collation key <br /><br />"
"android.database.DatabaseUtils.appendEscapedSQLString (StringBuilder sb, String sqlString) "," Appends an SQL string to the given StringBuilder, including the opening and closing single quotes. <br /><br />"
"android.database.DatabaseUtils.getSqlStatementType (String sql) "," Returns one of the following which represent the type of the given SQL statement. <br /><br />"
"android.database.DatabaseUtils.dumpCurrentRowToString (Cursor cursor) "," Dump the contents of a Cursor's current row to a String. <br /><br />"
"android.database.DatabaseUtils.blobFileDescriptorForQuery (SQLiteStatement prog, String[] selectionArgs) "," Utility method to run the pre-compiled query and return the blob value in the first column of the first row. <br /><br />"
"android.database.DatabaseUtils.cursorRowToContentValues (Cursor cursor, ContentValues values) "," Read the entire contents of a cursor row and store them in a ContentValues. <br /><br />"
"android.database.DatabaseUtils.cursorStringToContentValuesIfPresent (Cursor cursor, ContentValues values, String column) "," Reads a String out of a column in a Cursor and writes it to a ContentValues. <br /><br />"
"android.database.DatabaseUtils.stringForQuery (SQLiteStatement prog, String[] selectionArgs) "," Utility method to run the pre-compiled query and return the value in the first column of the first row. <br /><br />"
"android.database.DatabaseUtils.readExceptionFromParcel (Parcel reply) "," Special function for reading an exception result from the header of a parcel, to be used after receiving the result of a transaction. <br /><br />"
"android.database.DatabaseUtils.blobFileDescriptorForQuery (SQLiteDatabase db, String query, String[] selectionArgs) "," Utility method to run the query on the db and return the blob value in the first column of the first row. <br /><br />"
"android.database.DatabaseUtils.concatenateWhere (String a, String b) "," Concatenates two SQL WHERE clauses, handling empty or null values. <br /><br />"
"android.database.DatabaseUtils.dumpCursor (Cursor cursor) "," Prints the contents of a Cursor to System.out. <br /><br />"
"android.database.DatabaseUtils.dumpCurrentRow (Cursor cursor, StringBuilder sb) "," Prints the contents of a Cursor's current row to a StringBuilder. <br /><br />"
"android.database.DatabaseUtils.dumpCurrentRow (Cursor cursor, PrintStream stream) "," Prints the contents of a Cursor's current row to a PrintSteam. <br /><br />"
"android.database.DatabaseUtils.dumpCursorToString (Cursor cursor) "," Prints the contents of a Cursor to a String. <br /><br />"
"android.database.DatabaseUtils.cursorLongToContentValues (Cursor cursor, String field, ContentValues values) "," Reads a Long out of a field in a Cursor and writes it to a Map. <br /><br />"
"android.database.DatabaseUtils.queryNumEntries (SQLiteDatabase db, String table) "," Query the table for the number of rows in the table. <br /><br />"
"android.database.DatabaseUtils.dumpCursor (Cursor cursor, StringBuilder sb) "," Prints the contents of a Cursor to a StringBuilder. <br /><br />"
"android.database.DatabaseUtils.cursorStringToInsertHelper (Cursor cursor, String field, DatabaseUtils.InsertHelper inserter, int index) "," Reads a String out of a field in a Cursor and writes it to an InsertHelper. <br /><br />"
"android.database.DatabaseUtils.cursorShortToContentValuesIfPresent (Cursor cursor, ContentValues values, String column) "," Reads a Short out of a column in a Cursor and writes it to a ContentValues. <br /><br />"
"android.database.DatabaseUtils.cursorDoubleToContentValues (Cursor cursor, String field, ContentValues values, String key) "," Reads a Double out of a field in a Cursor and writes it to a Map. <br /><br />"
"android.database.DatabaseUtils.readExceptionWithFileNotFoundExceptionFromParcel (Parcel reply) "," no description <br /><br />"
"android.database.DatabaseUtils.cursorIntToContentValues (Cursor cursor, String field, ContentValues values) "," Reads an Integer out of a field in a Cursor and writes it to a Map. <br /><br />"
"android.database.DatabaseUtils.sqlEscapeString (String value) "," SQL-escape a string. <br /><br />"
"android.database.DatabaseUtils.dumpCurrentRow (Cursor cursor) "," Prints the contents of a Cursor's current row to System.out. <br /><br />"
"android.database.DatabaseUtils.cursorFloatToContentValuesIfPresent (Cursor cursor, ContentValues values, String column) "," Reads a Float out of a column in a Cursor and writes it to a ContentValues. <br /><br />"
"android.database.DatabaseUtils.appendValueToSql (StringBuilder sql, Object value) "," Appends an Object to an SQL string with the proper escaping, etc. <br /><br />"
"android.database.DatabaseUtils.cursorIntToContentValuesIfPresent (Cursor cursor, ContentValues values, String column) "," Reads a Integer out of a column in a Cursor and writes it to a ContentValues. <br /><br />"
"android.database.DatabaseUtils.appendSelectionArgs (String[] originalValues, String[] newValues) "," Appends one set of selection args to another. <br /><br />"
"android.database.DatabaseUtils.cursorLongToContentValues (Cursor cursor, String field, ContentValues values, String key) "," Reads a Long out of a field in a Cursor and writes it to a Map. <br /><br />"
"android.database.DatabaseUtils.longForQuery (SQLiteDatabase db, String query, String[] selectionArgs) "," Utility method to run the query on the db and return the value in the first column of the first row. <br /><br />"
"android.database.DatabaseUtils.dumpCursor (Cursor cursor, PrintStream stream) "," Prints the contents of a Cursor to a PrintSteam. <br /><br />"
"android.database.DatabaseUtils.longForQuery (SQLiteStatement prog, String[] selectionArgs) "," Utility method to run the pre-compiled query and return the value in the first column of the first row. <br /><br />"
"android.database.DatabaseUtils.cursorDoubleToCursorValues (Cursor cursor, String field, ContentValues values) "," Reads a Double out of a field in a Cursor and writes it to a Map. <br /><br />"
"android.database.DatabaseUtils.cursorLongToContentValuesIfPresent (Cursor cursor, ContentValues values, String column) "," Reads a Long out of a column in a Cursor and writes it to a ContentValues. <br /><br />"
"android.database.DatabaseUtils.stringForQuery (SQLiteDatabase db, String query, String[] selectionArgs) "," Utility method to run the query on the db and return the value in the first column of the first row. <br /><br />"
"android.database.DatabaseUtils.cursorStringToContentValues (Cursor cursor, String field, ContentValues values, String key) "," Reads a String out of a field in a Cursor and writes it to a Map. <br /><br />"
"android.database.DatabaseUtils.readExceptionWithOperationApplicationExceptionFromParcel (Parcel reply) "," no description <br /><br />"
"android.database.DatabaseUtils.createDbFromSqlStatements (Context context, String dbName, int dbVersion, String sqlStatements) "," Creates a db and populates it with the sql statements in sqlStatements. <br /><br />"
"android.database.DatabaseUtils.getHexCollationKey (String name) "," return the collation key in hex format <br /><br />"
"android.database.DatabaseUtils.cursorIntToContentValues (Cursor cursor, String field, ContentValues values, String key) "," Reads a Integer out of a field in a Cursor and writes it to a Map. <br /><br />"
"android.database.DatabaseUtils.InsertHelper.getColumnIndex (String key) "," Returns the index of the specified column. <br /><br />"
"android.database.DatabaseUtils.InsertHelper.close () "," Close this object and release any resources associated with it. <br /><br />"
"android.database.DatabaseUtils.InsertHelper.prepareForReplace () "," Prepare the InsertHelper for a replace. <br /><br />"
"android.database.DatabaseUtils.InsertHelper.bind (int index, boolean value) "," Bind the value to an index. <br /><br />"
"android.database.DatabaseUtils.InsertHelper.bind (int index, float value) "," Bind the value to an index. <br /><br />"
"android.database.DatabaseUtils.InsertHelper.execute () "," Execute the previously prepared insert or replace using the bound values since the last call to prepareForInsert or prepareForReplace. <br /><br />"
"android.database.DatabaseUtils.InsertHelper.bind (int index, double value) "," Bind the value to an index. <br /><br />"
"android.database.DatabaseUtils.InsertHelper.insert (ContentValues values) "," Performs an insert, adding a new row with the given values. <br /><br />"
"android.database.DatabaseUtils.InsertHelper.bindNull (int index) "," Bind null to an index. <br /><br />"
"android.database.DatabaseUtils.InsertHelper.prepareForInsert () "," Prepare the InsertHelper for an insert. <br /><br />"
"android.database.DatabaseUtils.InsertHelper.bind (int index, long value) "," Bind the value to an index. <br /><br />"
"android.database.DatabaseUtils.InsertHelper.bind (int index, String value) "," Bind the value to an index. <br /><br />"
"android.database.DatabaseUtils.InsertHelper.replace (ContentValues values) "," Performs an insert, adding a new row with the given values. <br /><br />"
"android.database.DatabaseUtils.InsertHelper.bind (int index, int value) "," Bind the value to an index. <br /><br />"
"android.database.DatabaseUtils.InsertHelper.bind (int index, byte[] value) "," Bind the value to an index. <br /><br />"
"android.database.DataSetObservable.notifyInvalidated ()   Invokes onInvalidated () "," Invokes onInvalidated() on each observer. <br /><br />"
"android.database.DataSetObservable.notifyChanged ()   Invokes onChanged () "," Invokes onChanged() on each observer. <br /><br />"
"android.database.DataSetObserver.onInvalidated ()   This method is called when the entire data becomes invalid, most likely through a call to deactivate () or close () "," This method is called when the entire data becomes invalid, most likely through a call to deactivate() or close() on a Cursor. <br /><br />"
"android.database.DataSetObserver.onChanged ()   This method is called when the entire data set has changed, most likely through a call to requery () "," This method is called when the entire data set has changed, most likely through a call to requery() on a Cursor. <br /><br />"
"android.database.DefaultDatabaseErrorHandler.onCorruption (SQLiteDatabase dbObj) "," defines the default method to be invoked when database corruption is detected. <br /><br />"
"android.database.MatrixCursor.addRow (Iterable<?> columnValues) "," Adds a new row to the end with the given column values. <br /><br />"
"android.database.MatrixCursor.getColumnNames () "," Returns a string array holding the names of all of the columns in the result set in the order in which they were listed in the result. <br /><br />"
"android.database.MatrixCursor.getType (int column) "," Returns data type of the given column's value. <br /><br />"
"android.database.MatrixCursor.getFloat (int column) "," Returns the value of the requested column as a float. <br /><br />"
"android.database.MatrixCursor.getBlob (int column) "," Returns the value of the requested column as a byte array. <br /><br />"
"android.database.MatrixCursor.getCount () "," Returns the numbers of rows in the cursor. <br /><br />"
"android.database.MatrixCursor.getString (int column) "," Returns the value of the requested column as a String. <br /><br />"
"android.database.MatrixCursor.newRow () "," Adds a new row to the end and returns a builder for that row. <br /><br />"
"android.database.MatrixCursor.getShort (int column) "," Returns the value of the requested column as a short. <br /><br />"
"android.database.MatrixCursor.addRow (Object[] columnValues) "," Adds a new row to the end with the given column values. <br /><br />"
"android.database.MatrixCursor.isNull (int column) "," Returns true if the value in the indicated column is null. <br /><br />"
"android.database.MatrixCursor.getInt (int column) "," Returns the value of the requested column as an int. <br /><br />"
"android.database.MatrixCursor.getLong (int column) "," Returns the value of the requested column as a long. <br /><br />"
"android.database.MatrixCursor.getDouble (int column) "," Returns the value of the requested column as a double. <br /><br />"
"android.database.MatrixCursor.RowBuilder.add (Object columnValue) "," Sets the next column value in this row. <br /><br />"
"android.database.MatrixCursor.RowBuilder.add (String columnName, Object value) "," Offer value for possible inclusion if this cursor defines the given column. <br /><br />"
"android.database.MergeCursor.getColumnNames () "," Returns a string array holding the names of all of the columns in the result set in the order in which they were listed in the result. <br /><br />"
"android.database.MergeCursor.onMove (int oldPosition, int newPosition) "," This function is called every time the cursor is successfully scrolled to a new position, giving the subclass a chance to update any state it may have. <br /><br />"
"android.database.MergeCursor.deactivate ()   Deactivates the Cursor, making all calls on it fail until requery () "," Deactivates the Cursor, making all calls on it fail until requery() is called. <br /><br />"
"android.database.MergeCursor.getType (int column) "," Returns data type of the given column's value. <br /><br />"
"android.database.MergeCursor.getFloat (int column) "," Returns the value of the requested column as a float. <br /><br />"
"android.database.MergeCursor.requery () "," Performs the query that created the cursor again, refreshing its contents. <br /><br />"
"android.database.MergeCursor.getBlob (int column) "," Returns the value of the requested column as a byte array. <br /><br />"
"android.database.MergeCursor.close () "," Closes the Cursor, releasing all of its resources and making it completely invalid. <br /><br />"
"android.database.MergeCursor.getCount () "," Returns the numbers of rows in the cursor. <br /><br />"
"android.database.MergeCursor.getString (int column) "," Returns the value of the requested column as a String. <br /><br />"
"android.database.MergeCursor.registerContentObserver (ContentObserver observer) "," Register an observer that is called when changes happen to the content backing this cursor. <br /><br />"
"android.database.MergeCursor.unregisterContentObserver (ContentObserver observer)   Unregister an observer that has previously been registered with this cursor via registerContentObserver (ContentObserver) "," Unregister an observer that has previously been registered with this cursor via registerContentObserver(ContentObserver). <br /><br />"
"android.database.MergeCursor.getShort (int column) "," Returns the value of the requested column as a short. <br /><br />"
"android.database.MergeCursor.unregisterDataSetObserver (DataSetObserver observer)   Unregister an observer that has previously been registered with this cursor via registerContentObserver (ContentObserver) "," Unregister an observer that has previously been registered with this cursor via registerContentObserver(ContentObserver). <br /><br />"
"android.database.MergeCursor.registerDataSetObserver (DataSetObserver observer)   Register an observer that is called when changes happen to the contents of the this cursors data set, for example, when the data set is changed via requery (), deactivate (), or close () "," Register an observer that is called when changes happen to the contents of the this cursors data set, for example, when the data set is changed via requery(), deactivate(), or close(). <br /><br />"
"android.database.MergeCursor.isNull (int column) "," Returns true if the value in the indicated column is null. <br /><br />"
"android.database.MergeCursor.getInt (int column) "," Returns the value of the requested column as an int. <br /><br />"
"android.database.MergeCursor.getLong (int column) "," Returns the value of the requested column as a long. <br /><br />"
"android.database.MergeCursor.getDouble (int column) "," Returns the value of the requested column as a double. <br /><br />"
"android.database.Observable<T>.unregisterAll () "," Remove all registered observers. <br /><br />"
"android.database.Observable<T>.unregisterObserver (T observer) "," Removes a previously registered observer. <br /><br />"
"android.database.Observable<T>.registerObserver (T observer) "," Adds an observer to the list. <br /><br />"
"android.database.sqlite.SQLiteClosable.close () "," Releases a reference to the object, closing the object if the last reference was released. <br /><br />"
"android.database.sqlite.SQLiteClosable.acquireReference () "," Acquires a reference to the object. <br /><br />"
"android.database.sqlite.SQLiteClosable.releaseReferenceFromContainer () "," This method was deprecated in API level 16. Do not use. <br /><br />"
"android.database.sqlite.SQLiteClosable.releaseReference () "," Releases a reference to the object, closing the object if the last reference was released. <br /><br />"
"android.database.sqlite.SQLiteCursor.getColumnNames () "," Returns a string array holding the names of all of the columns in the result set in the order in which they were listed in the result. <br /><br />"
"android.database.sqlite.SQLiteCursor.onMove (int oldPosition, int newPosition) "," This function is called every time the cursor is successfully scrolled to a new position, giving the subclass a chance to update any state it may have. <br /><br />"
"android.database.sqlite.SQLiteCursor.deactivate ()   Deactivates the Cursor, making all calls on it fail until requery () "," Deactivates the Cursor, making all calls on it fail until requery() is called. <br /><br />"
"android.database.sqlite.SQLiteCursor.setSelectionArguments (String[] selectionArgs) "," Changes the selection arguments. <br /><br />"
"android.database.sqlite.SQLiteCursor.requery () "," Performs the query that created the cursor again, refreshing its contents. <br /><br />"
"android.database.sqlite.SQLiteCursor.close () "," Closes the Cursor, releasing all of its resources and making it completely invalid. <br /><br />"
"android.database.sqlite.SQLiteCursor.setWindow (CursorWindow window) "," Sets a new cursor window for the cursor to use. <br /><br />"
"android.database.sqlite.SQLiteCursor.getCount () "," Returns the numbers of rows in the cursor. <br /><br />"
"android.database.sqlite.SQLiteCursor.getDatabase () "," Get the database that this cursor is associated with. <br /><br />"
"android.database.sqlite.SQLiteCursor.getColumnIndex (String columnName) "," Returns the zero-based index for the given column name, or -1 if the column doesn't exist. <br /><br />"
"android.database.sqlite.SQLiteCursorDriver.cursorDeactivated () "," Called by a SQLiteCursor when it is released. <br /><br />"
"android.database.sqlite.SQLiteCursorDriver.cursorRequeried (Cursor cursor) "," Called by a SQLiteCursor when it is requeried. <br /><br />"
"android.database.sqlite.SQLiteCursorDriver.cursorClosed () "," Called by a SQLiteCursor when it it closed to destroy this object as well. <br /><br />"
"android.database.sqlite.SQLiteCursorDriver.setBindArguments (String[] bindArgs) "," Set new bind arguments. <br /><br />"
"android.database.sqlite.SQLiteCursorDriver.query (SQLiteDatabase.CursorFactory factory, String[] bindArgs) "," Executes the query returning a Cursor over the result set. <br /><br />"
"android.database.sqlite.SQLiteDatabase.CursorFactory.newCursor (SQLiteDatabase db, SQLiteCursorDriver masterQuery, String editTable, SQLiteQuery query)   See SQLiteCursor (SQLiteCursorDriver, String, SQLiteQuery) "," See SQLiteCursor(SQLiteCursorDriver, String, SQLiteQuery). <br /><br />"
"android.database.sqlite.SQLiteDatabase.disableWriteAheadLogging ()   This method disables the features enabled by enableWriteAheadLogging () "," This method disables the features enabled by enableWriteAheadLogging(). <br /><br />"
"android.database.sqlite.SQLiteDatabase.openDatabase (String path, SQLiteDatabase.CursorFactory factory, int flags) "," Open the database according to the flags OPEN_READWRITE OPEN_READONLY CREATE_IF_NECESSARY and/or NO_LOCALIZED_COLLATORS. <br /><br />"
"android.database.sqlite.SQLiteDatabase.isWriteAheadLoggingEnabled () "," Returns true if write-ahead logging has been enabled for this database. <br /><br />"
"android.database.sqlite.SQLiteDatabase.beginTransaction () "," Begins a transaction in EXCLUSIVE mode. <br /><br />"
"android.database.sqlite.SQLiteDatabase.setForeignKeyConstraintsEnabled (boolean enable) "," Sets whether foreign key constraints are enabled for the database. <br /><br />"
"android.database.sqlite.SQLiteDatabase.getAttachedDbs () "," Returns list of full pathnames of all attached databases including the main database by executing 'pragma database_list' on the database. <br /><br />"
"android.database.sqlite.SQLiteDatabase.endTransaction () "," End a transaction. <br /><br />"
"android.database.sqlite.SQLiteDatabase.markTableSyncable (String table, String deletedTable) "," This method was deprecated in API level 11. This method no longer serves any useful purpose and has been deprecated. <br /><br />"
"android.database.sqlite.SQLiteDatabase.compileStatement (String sql) "," Compiles an SQL statement into a reusable pre-compiled statement object. <br /><br />"
"android.database.sqlite.SQLiteDatabase.create (SQLiteDatabase.CursorFactory factory) "," Create a memory backed SQLite database. <br /><br />"
"android.database.sqlite.SQLiteDatabase.openOrCreateDatabase (File file, SQLiteDatabase.CursorFactory factory)   Equivalent to openDatabase (file.getPath (), factory, CREATE_IF_NECESSARY) "," Equivalent to openDatabase(file.getPath(), factory, CREATE_IF_NECESSARY). <br /><br />"
"android.database.sqlite.SQLiteDatabase.beginTransactionWithListener (SQLiteTransactionListener transactionListener) "," Begins a transaction in EXCLUSIVE mode. <br /><br />"
"android.database.sqlite.SQLiteDatabase.beginTransactionWithListenerNonExclusive (SQLiteTransactionListener transactionListener) "," Begins a transaction in IMMEDIATE mode. <br /><br />"
"android.database.sqlite.SQLiteDatabase.delete (String table, String whereClause, String[] whereArgs) "," Convenience method for deleting rows in the database. <br /><br />"
"android.database.sqlite.SQLiteDatabase.rawQuery (String sql, String[] selectionArgs, CancellationSignal cancellationSignal) "," Runs the provided SQL and returns a Cursor over the result set. <br /><br />"
"android.database.sqlite.SQLiteDatabase.execSQL (String sql) "," Execute a single SQL statement that is NOT a SELECT or any other SQL statement that returns data. <br /><br />"
"android.database.sqlite.SQLiteDatabase.isOpen () "," Returns true if the database is currently open. <br /><br />"
"android.database.sqlite.SQLiteDatabase.getVersion () "," Gets the database version. <br /><br />"
"android.database.sqlite.SQLiteDatabase.openOrCreateDatabase (String path, SQLiteDatabase.CursorFactory factory)   Equivalent to openDatabase (path, factory, CREATE_IF_NECESSARY) "," Equivalent to openDatabase(path, factory, CREATE_IF_NECESSARY). <br /><br />"
"android.database.sqlite.SQLiteDatabase.getPageSize () "," Returns the current database page size, in bytes. <br /><br />"
"android.database.sqlite.SQLiteDatabase.needUpgrade (int newVersion) "," Returns true if the new version code is greater than the current database version. <br /><br />"
"android.database.sqlite.SQLiteDatabase.insertOrThrow (String table, String nullColumnHack, ContentValues values) "," Convenience method for inserting a row into the database. <br /><br />"
"android.database.sqlite.SQLiteDatabase.getMaximumSize () "," Returns the maximum size the database may grow to. <br /><br />"
"android.database.sqlite.SQLiteDatabase.query (String table, String[] columns, String selection, String[] selectionArgs, String groupBy, String having, String orderBy) "," Query the given table, returning a Cursor over the result set. <br /><br />"
"android.database.sqlite.SQLiteDatabase.setLockingEnabled (boolean lockingEnabled) "," This method was deprecated in API level 16. This method now does nothing. Do not use. <br /><br />"
"android.database.sqlite.SQLiteDatabase.query (boolean distinct, String table, String[] columns, String selection, String[] selectionArgs, String groupBy, String having, String orderBy, String limit) "," Query the given URL, returning a Cursor over the result set. <br /><br />"
"android.database.sqlite.SQLiteDatabase.openDatabase (String path, SQLiteDatabase.CursorFactory factory, int flags, DatabaseErrorHandler errorHandler) "," Open the database according to the flags OPEN_READWRITE OPEN_READONLY CREATE_IF_NECESSARY and/or NO_LOCALIZED_COLLATORS. <br /><br />"
"android.database.sqlite.SQLiteDatabase.deleteDatabase (File file) "," Deletes a database including its journal file and other auxiliary files that may have been created by the database engine. <br /><br />"
"android.database.sqlite.SQLiteDatabase.setLocale (Locale locale) "," Sets the locale for this database. <br /><br />"
"android.database.sqlite.SQLiteDatabase.isReadOnly () "," Returns true if the database is opened as read only. <br /><br />"
"android.database.sqlite.SQLiteDatabase.rawQuery (String sql, String[] selectionArgs) "," Runs the provided SQL and returns a Cursor over the result set. <br /><br />"
"android.database.sqlite.SQLiteDatabase.replace (String table, String nullColumnHack, ContentValues initialValues) "," Convenience method for replacing a row in the database. <br /><br />"
"android.database.sqlite.SQLiteDatabase.query (String table, String[] columns, String selection, String[] selectionArgs, String groupBy, String having, String orderBy, String limit) "," Query the given table, returning a Cursor over the result set. <br /><br />"
"android.database.sqlite.SQLiteDatabase.inTransaction () "," Returns true if the current thread has a transaction pending. <br /><br />"
"android.database.sqlite.SQLiteDatabase.insert (String table, String nullColumnHack, ContentValues values) "," Convenience method for inserting a row into the database. <br /><br />"
"android.database.sqlite.SQLiteDatabase.isDbLockedByOtherThreads () "," This method was deprecated in API level 16. Always returns false. Do not use this method. <br /><br />"
"android.database.sqlite.SQLiteDatabase.rawQueryWithFactory (SQLiteDatabase.CursorFactory cursorFactory, String sql, String[] selectionArgs, String editTable) "," Runs the provided SQL and returns a cursor over the result set. <br /><br />"
"android.database.sqlite.SQLiteDatabase.updateWithOnConflict (String table, ContentValues values, String whereClause, String[] whereArgs, int conflictAlgorithm) "," Convenience method for updating rows in the database. <br /><br />"
"android.database.sqlite.SQLiteDatabase.findEditTable (String tables) "," Finds the name of the first table, which is editable. <br /><br />"
"android.database.sqlite.SQLiteDatabase.isDatabaseIntegrityOk ()   Runs 'pragma integrity_check' on the given database  (and all the attached databases) and returns true if the given database  (and all its attached databases) "," Runs 'pragma integrity_check' on the given database (and all the attached databases) and returns true if the given database (and all its attached databases) pass integrity_check, false otherwise. <br /><br />"
"android.database.sqlite.SQLiteDatabase.setPageSize (long numBytes) "," Sets the database page size. <br /><br />"
"android.database.sqlite.SQLiteDatabase.yieldIfContendedSafely () "," Temporarily end the transaction to let other threads run. <br /><br />"
"android.database.sqlite.SQLiteDatabase.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.database.sqlite.SQLiteDatabase.query (boolean distinct, String table, String[] columns, String selection, String[] selectionArgs, String groupBy, String having, String orderBy, String limit, CancellationSignal cancellationSignal) "," Query the given URL, returning a Cursor over the result set. <br /><br />"
"android.database.sqlite.SQLiteDatabase.queryWithFactory (SQLiteDatabase.CursorFactory cursorFactory, boolean distinct, String table, String[] columns, String selection, String[] selectionArgs, String groupBy, String having, String orderBy, String limit, CancellationSignal cancellationSignal) "," Query the given URL, returning a Cursor over the result set. <br /><br />"
"android.database.sqlite.SQLiteDatabase.execSQL (String sql, Object[] bindArgs) "," Execute a single SQL statement that is NOT a SELECT/INSERT/UPDATE/DELETE. <br /><br />"
"android.database.sqlite.SQLiteDatabase.enableWriteAheadLogging () "," This method enables parallel execution of queries from multiple threads on the same database. <br /><br />"
"android.database.sqlite.SQLiteDatabase.replaceOrThrow (String table, String nullColumnHack, ContentValues initialValues) "," Convenience method for replacing a row in the database. <br /><br />"
"android.database.sqlite.SQLiteDatabase.insertWithOnConflict (String table, String nullColumnHack, ContentValues initialValues, int conflictAlgorithm) "," General method for inserting a row into the database. <br /><br />"
"android.database.sqlite.SQLiteDatabase.update (String table, ContentValues values, String whereClause, String[] whereArgs) "," Convenience method for updating rows in the database. <br /><br />"
"android.database.sqlite.SQLiteDatabase.yieldIfContendedSafely (long sleepAfterYieldDelay) "," Temporarily end the transaction to let other threads run. <br /><br />"
"android.database.sqlite.SQLiteDatabase.setVersion (int version) "," Sets the database version. <br /><br />"
"android.database.sqlite.SQLiteDatabase.getPath () "," Gets the path to the database file. <br /><br />"
"android.database.sqlite.SQLiteDatabase.yieldIfContended ()    This method was deprecated in API level 3. if the db is locked more than once  (becuase of nested transactions) "," This method was deprecated in API level 3. if the db is locked more than once (becuase of nested transactions) then the lock will not be yielded. Use yieldIfContendedSafely instead. <br /><br />"
"android.database.sqlite.SQLiteDatabase.isDbLockedByCurrentThread () "," Returns true if the current thread is holding an active connection to the database. <br /><br />"
"android.database.sqlite.SQLiteDatabase.rawQueryWithFactory (SQLiteDatabase.CursorFactory cursorFactory, String sql, String[] selectionArgs, String editTable, CancellationSignal cancellationSignal) "," Runs the provided SQL and returns a cursor over the result set. <br /><br />"
"android.database.sqlite.SQLiteDatabase.getSyncedTables () "," This method was deprecated in API level 11. This method no longer serves any useful purpose and has been deprecated. <br /><br />"
"android.database.sqlite.SQLiteDatabase.beginTransactionNonExclusive () "," Begins a transaction in IMMEDIATE mode. <br /><br />"
"android.database.sqlite.SQLiteDatabase.queryWithFactory (SQLiteDatabase.CursorFactory cursorFactory, boolean distinct, String table, String[] columns, String selection, String[] selectionArgs, String groupBy, String having, String orderBy, String limit) "," Query the given URL, returning a Cursor over the result set. <br /><br />"
"android.database.sqlite.SQLiteDatabase.markTableSyncable (String table, String foreignKey, String updateTable) "," This method was deprecated in API level 11. This method no longer serves any useful purpose and has been deprecated. <br /><br />"
"android.database.sqlite.SQLiteDatabase.setTransactionSuccessful () "," Marks the current transaction as successful. <br /><br />"
"android.database.sqlite.SQLiteDatabase.setMaximumSize (long numBytes) "," Sets the maximum size the database will grow to. <br /><br />"
"android.database.sqlite.SQLiteDatabase.openOrCreateDatabase (String path, SQLiteDatabase.CursorFactory factory, DatabaseErrorHandler errorHandler)   Equivalent to openDatabase (path, factory, CREATE_IF_NECESSARY, errorHandler) "," Equivalent to openDatabase(path, factory, CREATE_IF_NECESSARY, errorHandler). <br /><br />"
"android.database.sqlite.SQLiteDatabase.setMaxSqlCacheSize (int cacheSize) "," Sets the maximum size of the prepared-statement cache for this database. <br /><br />"
"android.database.sqlite.SQLiteDatabase.releaseMemory () "," Attempts to release memory that SQLite holds but does not require to operate properly. <br /><br />"
"android.database.sqlite.SQLiteOpenHelper.setWriteAheadLoggingEnabled (boolean enabled) "," Enables or disables the use of write-ahead logging for the database. <br /><br />"
"android.database.sqlite.SQLiteOpenHelper.getReadableDatabase () "," Create and/or open a database. <br /><br />"
"android.database.sqlite.SQLiteOpenHelper.onDowngrade (SQLiteDatabase db, int oldVersion, int newVersion) "," Called when the database needs to be downgraded. <br /><br />"
"android.database.sqlite.SQLiteOpenHelper.close () "," Close any open database object. <br /><br />"
"android.database.sqlite.SQLiteOpenHelper.onOpen (SQLiteDatabase db) "," Called when the database has been opened. <br /><br />"
"android.database.sqlite.SQLiteOpenHelper.onCreate (SQLiteDatabase db) "," Called when the database is created for the first time. <br /><br />"
"android.database.sqlite.SQLiteOpenHelper.onConfigure (SQLiteDatabase db) "," Called when the database connection is being configured, to enable features such as write-ahead logging or foreign key support. <br /><br />"
"android.database.sqlite.SQLiteOpenHelper.getWritableDatabase () "," Create and/or open a database that will be used for reading and writing. <br /><br />"
"android.database.sqlite.SQLiteOpenHelper.getDatabaseName () "," Return the name of the SQLite database being opened, as given to the constructor. <br /><br />"
"android.database.sqlite.SQLiteOpenHelper.onUpgrade (SQLiteDatabase db, int oldVersion, int newVersion) "," Called when the database needs to be upgraded. <br /><br />"
"android.database.sqlite.SQLiteProgram.clearBindings () "," Clears all existing bindings. <br /><br />"
"android.database.sqlite.SQLiteProgram.bindAllArgsAsStrings (String[] bindArgs) "," Given an array of String bindArgs, this method binds all of them in one single call. <br /><br />"
"android.database.sqlite.SQLiteProgram.bindDouble (int index, double value) "," Bind a double value to this statement. <br /><br />"
"android.database.sqlite.SQLiteProgram.getUniqueId () "," This method was deprecated in API level 11. This method is deprecated and must not be used. <br /><br />"
"android.database.sqlite.SQLiteProgram.bindNull (int index) "," Bind a NULL value to this statement. <br /><br />"
"android.database.sqlite.SQLiteProgram.bindString (int index, String value) "," Bind a String value to this statement. <br /><br />"
"android.database.sqlite.SQLiteProgram.bindLong (int index, long value) "," Bind a long value to this statement. <br /><br />"
"android.database.sqlite.SQLiteProgram.bindBlob (int index, byte[] value) "," Bind a byte array value to this statement. <br /><br />"
"android.database.sqlite.SQLiteQuery.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.database.sqlite.SQLiteQueryBuilder.appendColumns (StringBuilder s, String[] columns) "," Add the names that are non-null in columns to s, separating them with commas. <br /><br />"
"android.database.sqlite.SQLiteQueryBuilder.buildQuery (String[] projectionIn, String selection, String groupBy, String having, String sortOrder, String limit) "," Construct a SELECT statement suitable for use in a group of SELECT statements that will be joined through UNION operators in buildUnionQuery. <br /><br />"
"android.database.sqlite.SQLiteQueryBuilder.query (SQLiteDatabase db, String[] projectionIn, String selection, String[] selectionArgs, String groupBy, String having, String sortOrder, String limit, CancellationSignal cancellationSignal) "," Perform a query by combining all current settings and the information passed into this method. <br /><br />"
"android.database.sqlite.SQLiteQueryBuilder.setCursorFactory (SQLiteDatabase.CursorFactory factory) "," Sets the cursor factory to be used for the query. <br /><br />"
"android.database.sqlite.SQLiteQueryBuilder.appendWhere (CharSequence inWhere) "," Append a chunk to the WHERE clause of the query. <br /><br />"
"android.database.sqlite.SQLiteQueryBuilder.buildUnionSubQuery (String typeDiscriminatorColumn, String[] unionColumns, Set< String> columnsPresentInTable, int computedColumnsOffset, String typeDiscriminatorValue, String selection, String[] selectionArgs, String groupBy, String having)    This method was deprecated in API level 11. This method's signature is misleading since no SQL parameter substitution is carried out. The selection arguments parameter does not get used at all. To avoid confusion, call buildUnionSubQuery (String, String[], Set  , int, String, String, String, String) "," This method was deprecated in API level 11. This method's signature is misleading since no SQL parameter substitution is carried out. The selection arguments parameter does not get used at all. To avoid confusion, call buildUnionSubQuery(String, String[], Set  , int, String, String, String, String)  instead. <br /><br />"
"android.database.sqlite.SQLiteQueryBuilder.setStrict (boolean flag) "," When set, the selection is verified against malicious arguments. <br /><br />"
"android.database.sqlite.SQLiteQueryBuilder.buildQuery (String[] projectionIn, String selection, String[] selectionArgs, String groupBy, String having, String sortOrder, String limit)    This method was deprecated in API level 11. This method's signature is misleading since no SQL parameter substitution is carried out. The selection arguments parameter does not get used at all. To avoid confusion, call buildQuery (String[], String, String, String, String, String) "," This method was deprecated in API level 11. This method's signature is misleading since no SQL parameter substitution is carried out. The selection arguments parameter does not get used at all. To avoid confusion, call buildQuery(String[], String, String, String, String, String) instead. <br /><br />"
"android.database.sqlite.SQLiteQueryBuilder.query (SQLiteDatabase db, String[] projectionIn, String selection, String[] selectionArgs, String groupBy, String having, String sortOrder, String limit) "," Perform a query by combining all current settings and the information passed into this method. <br /><br />"
"android.database.sqlite.SQLiteQueryBuilder.appendWhereEscapeString (String inWhere) "," Append a chunk to the WHERE clause of the query. <br /><br />"
"android.database.sqlite.SQLiteQueryBuilder.setProjectionMap (Map< String,  String> columnMap) "," Sets the projection map for the query. <br /><br />"
"android.database.sqlite.SQLiteQueryBuilder.buildQueryString (boolean distinct, String tables, String[] columns, String where, String groupBy, String having, String orderBy, String limit) "," Build an SQL query string from the given clauses. <br /><br />"
"android.database.sqlite.SQLiteQueryBuilder.getTables () "," Returns the list of tables being queried <br /><br />"
"android.database.sqlite.SQLiteQueryBuilder.buildUnionSubQuery (String typeDiscriminatorColumn, String[] unionColumns, Set< String> columnsPresentInTable, int computedColumnsOffset, String typeDiscriminatorValue, String selection, String groupBy, String having) "," Construct a SELECT statement suitable for use in a group of SELECT statements that will be joined through UNION operators in buildUnionQuery. <br /><br />"
"android.database.sqlite.SQLiteQueryBuilder.setTables (String inTables) "," Sets the list of tables to query. <br /><br />"
"android.database.sqlite.SQLiteQueryBuilder.buildUnionQuery (String[] subQueries, String sortOrder, String limit) "," Given a set of subqueries, all of which are SELECT statements, construct a query that returns the union of what those subqueries return. <br /><br />"
"android.database.sqlite.SQLiteQueryBuilder.query (SQLiteDatabase db, String[] projectionIn, String selection, String[] selectionArgs, String groupBy, String having, String sortOrder) "," Perform a query by combining all current settings and the information passed into this method. <br /><br />"
"android.database.sqlite.SQLiteQueryBuilder.setDistinct (boolean distinct) "," Mark the query as DISTINCT. <br /><br />"
"android.database.sqlite.SQLiteStatement.simpleQueryForBlobFileDescriptor () "," Executes a statement that returns a 1 by 1 table with a blob value. <br /><br />"
"android.database.sqlite.SQLiteStatement.executeInsert () "," Execute this SQL statement and return the ID of the row inserted due to this call. <br /><br />"
"android.database.sqlite.SQLiteStatement.simpleQueryForString () "," Execute a statement that returns a 1 by 1 table with a text value. <br /><br />"
"android.database.sqlite.SQLiteStatement.executeUpdateDelete () "," Execute this SQL statement, if the the number of rows affected by execution of this SQL statement is of any importance to the caller - for example, UPDATE / DELETE SQL statements. <br /><br />"
"android.database.sqlite.SQLiteStatement.execute () "," Execute this SQL statement, if it is not a SELECT / INSERT / DELETE / UPDATE, for example CREATE / DROP table, view, trigger, index etc. <br /><br />"
"android.database.sqlite.SQLiteStatement.simpleQueryForLong () "," Execute a statement that returns a 1 by 1 table with a numeric value. <br /><br />"
"android.database.sqlite.SQLiteStatement.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.database.sqlite.SQLiteTransactionListener.onCommit () "," Called immediately before commiting the transaction. <br /><br />"
"android.database.sqlite.SQLiteTransactionListener.onBegin () "," Called immediately after the transaction begins. <br /><br />"
"android.database.sqlite.SQLiteTransactionListener.onRollback () "," Called if the transaction is about to be rolled back. <br /><br />"
"android.drm.DrmEvent.getAttribute (String key) "," Retrieves the attribute associated with the specified key. <br /><br />"
"android.drm.DrmEvent.getUniqueId () "," Retrieves the unique session identifier associated with this object. <br /><br />"
"android.drm.DrmEvent.getType () "," Retrieves the type of information that is associated with this object. <br /><br />"
"android.drm.DrmEvent.getMessage () "," Retrieves the message description associated with this object. <br /><br />"
"android.drm.DrmInfo.put (String key, Object value) "," Adds optional information as key-value pairs to this object. <br /><br />"
"android.drm.DrmInfo.get (String key) "," Retrieves the value of a given key. <br /><br />"
"android.drm.DrmInfo.keyIterator () "," Retrieves an iterator object that you can use to iterate over the keys associated with this DrmInfo object. <br /><br />"
"android.drm.DrmInfo.getData () "," Retrieves the trigger data associated with this object. <br /><br />"
"android.drm.DrmInfo.getMimeType () "," Retrieves the MIME type associated with this object. <br /><br />"
"android.drm.DrmInfo.iterator () "," Retrieves an iterator object that you can use to iterate over the values associated with this DrmInfo object. <br /><br />"
"android.drm.DrmInfo.getInfoType () "," Retrieves the information type associated with this object. <br /><br />"
"android.drm.DrmInfoRequest.put (String key, Object value) "," Adds optional information as key-value pairs to this object. <br /><br />"
"android.drm.DrmInfoRequest.get (String key) "," Retrieves the value of a given key. <br /><br />"
"android.drm.DrmInfoRequest.keyIterator () "," Retrieves an iterator object that you can use to iterate over the keys associated with this DrmInfoRequest object. <br /><br />"
"android.drm.DrmInfoRequest.getMimeType () "," Retrieves the MIME type associated with this object. <br /><br />"
"android.drm.DrmInfoRequest.iterator () "," Retrieves an iterator object that you can use to iterate over the values associated with this DrmInfoRequest object. <br /><br />"
"android.drm.DrmInfoRequest.getInfoType () "," Retrieves the information type associated with this object. <br /><br />"
"android.drm.DrmManagerClient.removeRights (String path) "," Removes the rights associated with the given rights-protected content. <br /><br />"
"android.drm.DrmManagerClient.setOnInfoListener (DrmManagerClient.OnInfoListener infoListener) "," Registers an DrmManagerClient.OnInfoListener callback, which is invoked when the DRM framework sends status or warning information during registration or rights acquisition. <br /><br />"
"android.drm.DrmManagerClient.acquireRights (DrmInfoRequest drmInfoRequest) "," Processes a given DrmInfoRequest and returns the rights information asynchronously. <br /><br />"
"android.drm.DrmManagerClient.getConstraints (Uri uri, int action) "," Retrieves constraint information for rights-protected content. <br /><br />"
"android.drm.DrmManagerClient.closeConvertSession (int convertId)   Informs the DRM plug-in  (agent) "," Informs the DRM plug-in (agent) that there is no more data to convert or that an error has occurred. <br /><br />"
"android.drm.DrmManagerClient.canHandle (String path, String mimeType) "," Checks whether the given MIME type or path can be handled. <br /><br />"
"android.drm.DrmManagerClient.getMetadata (Uri uri) "," Retrieves metadata information for rights-protected content. <br /><br />"
"android.drm.DrmManagerClient.getOriginalMimeType (String path) "," Retrieves the MIME type embedded in the original content. <br /><br />"
"android.drm.DrmManagerClient.getConstraints (String path, int action) "," Retrieves constraint information for rights-protected content. <br /><br />"
"android.drm.DrmManagerClient.checkRightsStatus (String path, int action) "," Checks whether the given rights-protected content has valid rights for the specified DrmStore.Action. <br /><br />"
"android.drm.DrmManagerClient.openConvertSession (String mimeType) "," Initiates a new conversion session. <br /><br />"
"android.drm.DrmManagerClient.setOnErrorListener (DrmManagerClient.OnErrorListener errorListener) "," Registers an DrmManagerClient.OnErrorListener callback, which is invoked when the DRM framework sends error information. <br /><br />"
"android.drm.DrmManagerClient.convertData (int convertId, byte[] inputData)   Converts the input data  (content) "," Converts the input data (content) that is part of a rights-protected file. <br /><br />"
"android.drm.DrmManagerClient.checkRightsStatus (Uri uri) "," Check whether the given content has valid rights. <br /><br />"
"android.drm.DrmManagerClient.processDrmInfo (DrmInfo drmInfo) "," Processes the given DRM information based on the information type. <br /><br />"
"android.drm.DrmManagerClient.canHandle (Uri uri, String mimeType) "," Checks whether the given MIME type or URI can be handled. <br /><br />"
"android.drm.DrmManagerClient.setOnEventListener (DrmManagerClient.OnEventListener eventListener) "," Registers an DrmManagerClient.OnEventListener callback, which is invoked when the DRM framework sends information about DRM processing. <br /><br />"
"android.drm.DrmManagerClient.removeAllRights ()   Removes all the rights information of every DRM plug-in  (agent) "," Removes all the rights information of every DRM plug-in (agent) associated with the DRM framework. <br /><br />"
"android.drm.DrmManagerClient.removeRights (Uri uri) "," Removes the rights associated with the given rights-protected content. <br /><br />"
"android.drm.DrmManagerClient.getDrmObjectType (Uri uri, String mimeType)   Retrieves the type of rights-protected object  (for example, content object, rights object, and so on) "," Retrieves the type of rights-protected object (for example, content object, rights object, and so on) using the specified URI or MIME type. <br /><br />"
"android.drm.DrmManagerClient.getOriginalMimeType (Uri uri) "," Retrieves the MIME type embedded in the original content. <br /><br />"
"android.drm.DrmManagerClient.getMetadata (String path) "," Retrieves metadata information for rights-protected content. <br /><br />"
"android.drm.DrmManagerClient.release () "," Releases resources associated with the current session of DrmManagerClient. <br /><br />"
"android.drm.DrmManagerClient.acquireDrmInfo (DrmInfoRequest drmInfoRequest) "," Retrieves information for registering, unregistering, or acquiring rights. <br /><br />"
"android.drm.DrmManagerClient.checkRightsStatus (Uri uri, int action) "," Checks whether the given rights-protected content has valid rights for the specified DrmStore.Action. <br /><br />"
"android.drm.DrmManagerClient.getDrmObjectType (String path, String mimeType)   Retrieves the type of rights-protected object  (for example, content object, rights object, and so on) "," Retrieves the type of rights-protected object (for example, content object, rights object, and so on) using the specified path or MIME type. <br /><br />"
"android.drm.DrmManagerClient.saveRights (DrmRights drmRights, String rightsPath, String contentPath) "," Saves rights to a specified path and associates that path with the content path. <br /><br />"
"android.drm.DrmManagerClient.getAvailableDrmEngines ()   Retrieves information about all the DRM plug-ins  (agents) "," Retrieves information about all the DRM plug-ins (agents) that are registered with the DRM framework. <br /><br />"
"android.drm.DrmManagerClient.checkRightsStatus (String path) "," Checks whether the given content has valid rights. <br /><br />"
"android.drm.DrmManagerClient.OnErrorListener.onError (DrmManagerClient client, DrmErrorEvent event) "," Called when the DRM framework sends error information. <br /><br />"
"android.drm.DrmManagerClient.OnEventListener.onEvent (DrmManagerClient client, DrmEvent event) "," Called when the DRM framework sends information about a DRM processing request. <br /><br />"
"android.drm.DrmManagerClient.OnInfoListener.onInfo (DrmManagerClient client, DrmInfoEvent event) "," Called when the DRM framework sends status or warning information during registration and rights acquisition. <br /><br />"
"android.drm.DrmRights.getData () "," Retrieves the rights data associated with this DrmRights object. <br /><br />"
"android.drm.DrmRights.getMimeType () "," Retrieves the MIME type associated with this DrmRights object. <br /><br />"
"android.drm.DrmRights.getAccountId () "," Retrieves the account ID associated with this DrmRights object. <br /><br />"
"android.drm.DrmRights.getSubscriptionId () "," Retrieves the subscription ID associated with this DrmRights object. <br /><br />"
"android.drm.DrmSupportInfo.equals (Object object) "," Overridden equals implementation. <br /><br />"
"android.drm.DrmSupportInfo.setDescription (String description)   Sets a description for the DRM plug-in  (agent) "," Sets a description for the DRM plug-in (agent). <br /><br />"
"android.drm.DrmSupportInfo.getMimeTypeIterator () "," Retrieves an iterator object that you can use to iterate over the MIME types that this DRM plug-in supports. <br /><br />"
"android.drm.DrmSupportInfo.hashCode () "," Overridden hash code implementation. <br /><br />"
"android.drm.DrmSupportInfo.getDescription ()   Retrieves the DRM plug-in  (agent) "," Retrieves the DRM plug-in (agent) description. <br /><br />"
"android.drm.DrmSupportInfo.getDescriprition ()    This method was deprecated in API level 16. The method name is mis-spelled, and it is replaced by getDescription () "," This method was deprecated in API level 16. The method name is mis-spelled, and it is replaced by getDescription(). <br /><br />"
"android.drm.DrmSupportInfo.getFileSuffixIterator () "," Retrieves an iterator object that you can use to iterate over the file suffixes that this DRM plug-in supports. <br /><br />"
"android.drm.DrmSupportInfo.addMimeType (String mimeType) "," Adds the specified MIME type to the list of MIME types this DRM plug-in supports. <br /><br />"
"android.drm.DrmSupportInfo.addFileSuffix (String fileSuffix) "," Adds the specified file suffix to the list of file suffixes this DRM plug-in supports. <br /><br />"
"android.drm.DrmUtils.ExtendedMetadataParser.get (String key) "," This method retrieves the metadata value associated with a given key. <br /><br />"
"android.drm.DrmUtils.ExtendedMetadataParser.keyIterator () "," This method returns an iterator object that can be used to iterate over all keys of the metadata. <br /><br />"
"android.drm.DrmUtils.ExtendedMetadataParser.iterator () "," This method returns an iterator object that can be used to iterate over all values of the metadata. <br /><br />"
"android.drm.DrmUtils.getExtendedMetadataParser (byte[] extendedMetadata) "," Gets an instance of DrmUtils.ExtendedMetadataParser, which can be used to parse extended metadata embedded in DRM constraint information. <br /><br />"
"android.drm.ProcessedData.getData () "," Retrieves the processed data. <br /><br />"
"android.drm.ProcessedData.getAccountId () "," Retrieves the account ID associated with this object. <br /><br />"
"android.drm.ProcessedData.getSubscriptionId () "," Returns the subscription ID associated with this object. <br /><br />"
"android.gesture.Gesture.getStrokesCount () "," no description <br /><br />"
"android.gesture.Gesture.getBoundingBox () "," no description <br /><br />"
"android.gesture.Gesture.toPath (Path path, int width, int height, int edge, int numSample) "," no description <br /><br />"
"android.gesture.Gesture.getStrokes () "," no description <br /><br />"
"android.gesture.Gesture.getID () "," no description <br /><br />"
"android.gesture.Gesture.getLength () "," Calculates the total length of the gesture. <br /><br />"
"android.gesture.Gesture.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.gesture.Gesture.toPath () "," no description <br /><br />"
"android.gesture.Gesture.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.gesture.Gesture.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.gesture.Gesture.toBitmap (int width, int height, int edge, int numSample, int color) "," Creates a bitmap of the gesture with a transparent background. <br /><br />"
"android.gesture.Gesture.toPath (int width, int height, int edge, int numSample) "," no description <br /><br />"
"android.gesture.Gesture.addStroke (GestureStroke stroke) "," Adds a stroke to the gesture. <br /><br />"
"android.gesture.Gesture.toPath (Path path) "," no description <br /><br />"
"android.gesture.Gesture.toBitmap (int width, int height, int inset, int color) "," Creates a bitmap of the gesture with a transparent background. <br /><br />"
"android.gesture.GestureLibraries.fromRawResource (Context context, int resourceId) "," no description <br /><br />"
"android.gesture.GestureLibraries.fromPrivateFile (Context context, String name) "," no description <br /><br />"
"android.gesture.GestureLibraries.fromFile (File path) "," no description <br /><br />"
"android.gesture.GestureLibraries.fromFile (String path) "," no description <br /><br />"
"android.gesture.GestureLibrary.save () "," no description <br /><br />"
"android.gesture.GestureLibrary.getGestureEntries () "," no description <br /><br />"
"android.gesture.GestureLibrary.addGesture (String entryName, Gesture gesture) "," no description <br /><br />"
"android.gesture.GestureLibrary.removeEntry (String entryName) "," no description <br /><br />"
"android.gesture.GestureLibrary.getSequenceType () "," no description <br /><br />"
"android.gesture.GestureLibrary.getGestures (String entryName) "," no description <br /><br />"
"android.gesture.GestureLibrary.setOrientationStyle (int style) "," no description <br /><br />"
"android.gesture.GestureLibrary.getOrientationStyle () "," no description <br /><br />"
"android.gesture.GestureLibrary.removeGesture (String entryName, Gesture gesture) "," no description <br /><br />"
"android.gesture.GestureLibrary.load () "," no description <br /><br />"
"android.gesture.GestureLibrary.setSequenceType (int type) "," no description <br /><br />"
"android.gesture.GestureLibrary.isReadOnly () "," no description <br /><br />"
"android.gesture.GestureLibrary.recognize (Gesture gesture) "," no description <br /><br />"
"android.gesture.GestureOverlayView.removeOnGestureListener (GestureOverlayView.OnGestureListener listener) "," no description <br /><br />"
"android.gesture.GestureOverlayView.cancelClearAnimation () "," no description <br /><br />"
"android.gesture.GestureOverlayView.addOnGesturePerformedListener (GestureOverlayView.OnGesturePerformedListener listener) "," no description <br /><br />"
"android.gesture.GestureOverlayView.getGesture () "," no description <br /><br />"
"android.gesture.GestureOverlayView.dispatchTouchEvent (MotionEvent event) "," Pass the touch screen motion event down to the target view, or this view if it is the target. <br /><br />"
"android.gesture.GestureOverlayView.setGestureVisible (boolean visible) "," no description <br /><br />"
"android.gesture.GestureOverlayView.removeOnGesturingListener (GestureOverlayView.OnGesturingListener listener) "," no description <br /><br />"
"android.gesture.GestureOverlayView.getOrientation () "," no description <br /><br />"
"android.gesture.GestureOverlayView.removeAllOnGesturingListeners () "," no description <br /><br />"
"android.gesture.GestureOverlayView.removeOnGesturePerformedListener (GestureOverlayView.OnGesturePerformedListener listener) "," no description <br /><br />"
"android.gesture.GestureOverlayView.getUncertainGestureColor () "," no description <br /><br />"
"android.gesture.GestureOverlayView.addOnGestureListener (GestureOverlayView.OnGestureListener listener) "," no description <br /><br />"
"android.gesture.GestureOverlayView.setGestureStrokeWidth (float gestureStrokeWidth) "," no description <br /><br />"
"android.gesture.GestureOverlayView.setGestureStrokeLengthThreshold (float gestureStrokeLengthThreshold) "," no description <br /><br />"
"android.gesture.GestureOverlayView.removeAllOnGestureListeners () "," no description <br /><br />"
"android.gesture.GestureOverlayView.getGestureStrokeType () "," no description <br /><br />"
"android.gesture.GestureOverlayView.isFadeEnabled () "," no description <br /><br />"
"android.gesture.GestureOverlayView.getFadeOffset () "," no description <br /><br />"
"android.gesture.GestureOverlayView.setOrientation (int orientation) "," no description <br /><br />"
"android.gesture.GestureOverlayView.setFadeOffset (long fadeOffset) "," no description <br /><br />"
"android.gesture.GestureOverlayView.isEventsInterceptionEnabled () "," no description <br /><br />"
"android.gesture.GestureOverlayView.removeAllOnGesturePerformedListeners () "," no description <br /><br />"
"android.gesture.GestureOverlayView.getGestureColor () "," no description <br /><br />"
"android.gesture.GestureOverlayView.setGestureStrokeSquarenessTreshold (float gestureStrokeSquarenessTreshold) "," no description <br /><br />"
"android.gesture.GestureOverlayView.setGesture (Gesture gesture) "," no description <br /><br />"
"android.gesture.GestureOverlayView.isGesturing () "," no description <br /><br />"
"android.gesture.GestureOverlayView.setGestureStrokeType (int gestureStrokeType) "," no description <br /><br />"
"android.gesture.GestureOverlayView.getGestureStrokeLengthThreshold () "," no description <br /><br />"
"android.gesture.GestureOverlayView.getCurrentStroke () "," no description <br /><br />"
"android.gesture.GestureOverlayView.addOnGesturingListener (GestureOverlayView.OnGesturingListener listener) "," no description <br /><br />"
"android.gesture.GestureOverlayView.setGestureColor (int color) "," no description <br /><br />"
"android.gesture.GestureOverlayView.isGestureVisible () "," no description <br /><br />"
"android.gesture.GestureOverlayView.getGesturePath (Path path) "," no description <br /><br />"
"android.gesture.GestureOverlayView.cancelGesture () "," no description <br /><br />"
"android.gesture.GestureOverlayView.draw (Canvas canvas)   Manually render this view  (and all of its children) "," Manually render this view (and all of its children) to the given Canvas. <br /><br />"
"android.gesture.GestureOverlayView.setFadeEnabled (boolean fadeEnabled) "," no description <br /><br />"
"android.gesture.GestureOverlayView.getGestureStrokeWidth () "," no description <br /><br />"
"android.gesture.GestureOverlayView.setGestureStrokeAngleThreshold (float gestureStrokeAngleThreshold) "," no description <br /><br />"
"android.gesture.GestureOverlayView.clear (boolean animated) "," no description <br /><br />"
"android.gesture.GestureOverlayView.getGestureStrokeAngleThreshold () "," no description <br /><br />"
"android.gesture.GestureOverlayView.getGesturePath () "," no description <br /><br />"
"android.gesture.GestureOverlayView.getGestureStrokeSquarenessTreshold () "," no description <br /><br />"
"android.gesture.GestureOverlayView.setEventsInterceptionEnabled (boolean enabled) "," no description <br /><br />"
"android.gesture.GestureOverlayView.setUncertainGestureColor (int color) "," no description <br /><br />"
"android.gesture.GestureOverlayView.OnGestureListener.onGesture (GestureOverlayView overlay, MotionEvent event) "," no description <br /><br />"
"android.gesture.GestureOverlayView.OnGestureListener.onGestureStarted (GestureOverlayView overlay, MotionEvent event) "," no description <br /><br />"
"android.gesture.GestureOverlayView.OnGestureListener.onGestureEnded (GestureOverlayView overlay, MotionEvent event) "," no description <br /><br />"
"android.gesture.GestureOverlayView.OnGestureListener.onGestureCancelled (GestureOverlayView overlay, MotionEvent event) "," no description <br /><br />"
"android.gesture.GestureOverlayView.OnGesturePerformedListener.onGesturePerformed (GestureOverlayView overlay, Gesture gesture) "," no description <br /><br />"
"android.gesture.GestureOverlayView.OnGesturingListener.onGesturingStarted (GestureOverlayView overlay) "," no description <br /><br />"
"android.gesture.GestureOverlayView.OnGesturingListener.onGesturingEnded (GestureOverlayView overlay) "," no description <br /><br />"
"android.gesture.GesturePoint.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.gesture.GestureStore.addGesture (String entryName, Gesture gesture) "," Add a gesture for the entry <br /><br />"
"android.gesture.GestureStore.getOrientationStyle () "," no description <br /><br />"
"android.gesture.GestureStore.load (InputStream stream, boolean closeStream) "," no description <br /><br />"
"android.gesture.GestureStore.save (OutputStream stream) "," Save the gesture library <br /><br />"
"android.gesture.GestureStore.removeGesture (String entryName, Gesture gesture) "," Remove a gesture from the library. <br /><br />"
"android.gesture.GestureStore.save (OutputStream stream, boolean closeStream) "," no description <br /><br />"
"android.gesture.GestureStore.load (InputStream stream) "," Load the gesture library <br /><br />"
"android.gesture.GestureStore.recognize (Gesture gesture) "," Recognize a gesture <br /><br />"
"android.gesture.GestureStore.getGestureEntries () "," Get all the gesture entry names in the library <br /><br />"
"android.gesture.GestureStore.hasChanged () "," no description <br /><br />"
"android.gesture.GestureStore.getGestures (String entryName) "," Get all the gestures of an entry <br /><br />"
"android.gesture.GestureStore.getSequenceType () "," no description <br /><br />"
"android.gesture.GestureStore.removeEntry (String entryName) "," Remove a entry of gestures <br /><br />"
"android.gesture.GestureStore.setOrientationStyle (int style) "," Specify how the gesture library will handle orientation. <br /><br />"
"android.gesture.GestureStore.setSequenceType (int type) "," no description <br /><br />"
"android.gesture.GestureStroke.toPath (float width, float height, int numSample) "," Converts the stroke to a Path of a given number of points. <br /><br />"
"android.gesture.GestureStroke.getPath () "," no description <br /><br />"
"android.gesture.GestureStroke.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.gesture.GestureStroke.clearPath () "," Invalidates the cached path that is used to render the stroke. <br /><br />"
"android.gesture.GestureStroke.computeOrientedBoundingBox () "," Computes an oriented bounding box of the stroke. <br /><br />"
"android.gesture.GestureUtils.spatialSampling (Gesture gesture, int bitmapSize, boolean keepAspectRatio) "," Samples the gesture spatially by rendering the gesture into a 2D grayscale bitmap. <br /><br />"
"android.gesture.GestureUtils.computeOrientedBoundingBox (float[] originalPoints) "," Computes an oriented, minimum bounding box of a set of points. <br /><br />"
"android.gesture.GestureUtils.computeOrientedBoundingBox (ArrayList< GesturePoint> originalPoints) "," Computes an oriented, minimum bounding box of a set of points. <br /><br />"
"android.gesture.GestureUtils.temporalSampling (GestureStroke stroke, int numPoints) "," Samples a stroke temporally into a given number of evenly-distributed points. <br /><br />"
"android.gesture.GestureUtils.spatialSampling (Gesture gesture, int bitmapSize) "," Samples the gesture spatially by rendering the gesture into a 2D grayscale bitmap. <br /><br />"
"android.gesture.Prediction.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.graphics.Bitmap.getScaledWidth (Canvas canvas)   Convenience for calling getScaledWidth (int) "," Convenience for calling getScaledWidth(int) with the target density of the given Canvas. <br /><br />"
"android.graphics.Bitmap.setPixel (int x, int y, int color)   Write the specified Color into the bitmap  (assuming it is mutable) "," Write the specified Color into the bitmap (assuming it is mutable) at the x,y coordinate. <br /><br />"
"android.graphics.Bitmap.getGenerationId () "," Returns the generation ID of this bitmap. <br /><br />"
"android.graphics.Bitmap.createBitmap (DisplayMetrics display, int[] colors, int width, int height, Bitmap.Config config) "," Returns a immutable bitmap with the specified width and height, with each pixel value set to the corresponding value in the colors array. <br /><br />"
"android.graphics.Bitmap.isMutable ()   Returns true if the bitmap is marked as mutable  (i.e. can be drawn into) "," Returns true if the bitmap is marked as mutable (i.e. can be drawn into) <br /><br />"
"android.graphics.Bitmap.setWidth (int width)   Convenience method for calling reconfigure (int, int, Config) "," Convenience method for calling reconfigure(int, int, Config) with the current height and config. <br /><br />"
"android.graphics.Bitmap.createBitmap (Bitmap source, int x, int y, int width, int height, Matrix m, boolean filter) "," Returns an immutable bitmap from subset of the source bitmap, transformed by the optional matrix. <br /><br />"
"android.graphics.Bitmap.createBitmap (int[] colors, int width, int height, Bitmap.Config config) "," Returns a immutable bitmap with the specified width and height, with each pixel value set to the corresponding value in the colors array. <br /><br />"
"android.graphics.Bitmap.hasAlpha () "," Returns true if the bitmap's config supports per-pixel alpha, and if the pixels may contain non-opaque alpha values. <br /><br />"
"android.graphics.Bitmap.copyPixelsFromBuffer (Buffer src) "," Copy the pixels from the buffer, beginning at the current position, overwriting the bitmap's pixels. <br /><br />"
"android.graphics.Bitmap.sameAs (Bitmap other) "," Given another bitmap, return true if it has the same dimensions, config, and pixel data as this bitmap. <br /><br />"
"android.graphics.Bitmap.getByteCount () "," Returns the minimum number of bytes that can be used to store this bitmap's pixels. <br /><br />"
"android.graphics.Bitmap.getHeight () "," Returns the bitmap's height <br /><br />"
"android.graphics.Bitmap.createBitmap (Bitmap src) "," Returns an immutable bitmap from the source bitmap. <br /><br />"
"android.graphics.Bitmap.getNinePatchChunk () "," Returns an optional array of private data, used by the UI system for some bitmaps. <br /><br />"
"android.graphics.Bitmap.getRowBytes () "," Return the number of bytes between rows in the bitmap's pixels. <br /><br />"
"android.graphics.Bitmap.compress (Bitmap.CompressFormat format, int quality, OutputStream stream) "," Write a compressed version of the bitmap to the specified outputstream. <br /><br />"
"android.graphics.Bitmap.isPremultiplied () "," Indicates whether pixels stored in this bitmaps are stored pre-multiplied. <br /><br />"
"android.graphics.Bitmap.getScaledHeight (Canvas canvas)   Convenience for calling getScaledHeight (int) "," Convenience for calling getScaledHeight(int) with the target density of the given Canvas. <br /><br />"
"android.graphics.Bitmap.setHasAlpha (boolean hasAlpha)   Tell the bitmap if all of the pixels are known to be opaque  (false) or if some of the pixels may contain non-opaque alpha values  (true) "," Tell the bitmap if all of the pixels are known to be opaque (false) or if some of the pixels may contain non-opaque alpha values (true). <br /><br />"
"android.graphics.Bitmap.createBitmap (DisplayMetrics display, int width, int height, Bitmap.Config config) "," Returns a mutable bitmap with the specified width and height. <br /><br />"
"android.graphics.Bitmap.copy (Bitmap.Config config, boolean isMutable) "," Tries to make a new bitmap based on the dimensions of this bitmap, setting the new bitmap's config to the one specified, and then copying this bitmap's pixels into the new bitmap. <br /><br />"
"android.graphics.Bitmap.isRecycled () "," Returns true if this bitmap has been recycled. <br /><br />"
"android.graphics.Bitmap.createBitmap (Bitmap source, int x, int y, int width, int height) "," Returns an immutable bitmap from the specified subset of the source bitmap. <br /><br />"
"android.graphics.Bitmap.createBitmap (DisplayMetrics display, int[] colors, int offset, int stride, int width, int height, Bitmap.Config config) "," Returns a immutable bitmap with the specified width and height, with each pixel value set to the corresponding value in the colors array. <br /><br />"
"android.graphics.Bitmap.reconfigure (int width, int height, Bitmap.Config config) "," Modifies the bitmap to have a specified width, height, and Bitmap.Config, without affecting the underlying allocation backing the bitmap. <br /><br />"
"android.graphics.Bitmap.eraseColor (int c) "," Fills the bitmap's pixels with the specified Color. <br /><br />"
"android.graphics.Bitmap.createBitmap (int width, int height, Bitmap.Config config) "," Returns a mutable bitmap with the specified width and height. <br /><br />"
"android.graphics.Bitmap.getPixels (int[] pixels, int offset, int stride, int x, int y, int width, int height) "," Returns in pixels[] a copy of the data in the bitmap. <br /><br />"
"android.graphics.Bitmap.setDensity (int density) "," Specifies the density for this bitmap. <br /><br />"
"android.graphics.Bitmap.getScaledWidth (DisplayMetrics metrics)   Convenience for calling getScaledWidth (int) "," Convenience for calling getScaledWidth(int) with the target density of the given DisplayMetrics. <br /><br />"
"android.graphics.Bitmap.getPixel (int x, int y) "," Returns the Color at the specified location. <br /><br />"
"android.graphics.Bitmap.hasMipMap () "," Indicates whether the renderer responsible for drawing this bitmap should attempt to use mipmaps when this bitmap is drawn scaled down. <br /><br />"
"android.graphics.Bitmap.getAllocationByteCount () "," Returns the size of the allocated memory used to store this bitmap's pixels. <br /><br />"
"android.graphics.Bitmap.setPixels (int[] pixels, int offset, int stride, int x, int y, int width, int height) "," Replace pixels in the bitmap with the colors in the array. <br /><br />"
"android.graphics.Bitmap.setHeight (int height)   Convenience method for calling reconfigure (int, int, Config) "," Convenience method for calling reconfigure(int, int, Config) with the current width and config. <br /><br />"
"android.graphics.Bitmap.getScaledWidth (int targetDensity) "," Convenience method that returns the width of this bitmap divided by the density scale factor. <br /><br />"
"android.graphics.Bitmap.copyPixelsToBuffer (Buffer dst)   Copy the bitmap's pixels into the specified buffer  (allocated by the caller) "," Copy the bitmap's pixels into the specified buffer (allocated by the caller). <br /><br />"
"android.graphics.Bitmap.getScaledHeight (int targetDensity) "," Convenience method that returns the height of this bitmap divided by the density scale factor. <br /><br />"
"android.graphics.Bitmap.createBitmap (int[] colors, int offset, int stride, int width, int height, Bitmap.Config config) "," Returns a immutable bitmap with the specified width and height, with each pixel value set to the corresponding value in the colors array. <br /><br />"
"android.graphics.Bitmap.getDensity () "," Returns the density for this bitmap. <br /><br />"
"android.graphics.Bitmap.getWidth () "," Returns the bitmap's width <br /><br />"
"android.graphics.Bitmap.setPremultiplied (boolean premultiplied) "," Sets whether the bitmap should treat its data as pre-multiplied. <br /><br />"
"android.graphics.Bitmap.writeToParcel (Parcel p, int flags) "," Write the bitmap and its pixels to the parcel. <br /><br />"
"android.graphics.Bitmap.createScaledBitmap (Bitmap src, int dstWidth, int dstHeight, boolean filter) "," Creates a new bitmap, scaled from an existing bitmap, when possible. <br /><br />"
"android.graphics.Bitmap.getConfig () "," If the bitmap's internal config is in one of the public formats, return that config, otherwise return null. <br /><br />"
"android.graphics.Bitmap.extractAlpha () "," Returns a new bitmap that captures the alpha values of the original. <br /><br />"
"android.graphics.Bitmap.describeContents () "," No special parcel contents. <br /><br />"
"android.graphics.Bitmap.setConfig (Bitmap.Config config)   Convenience method for calling reconfigure (int, int, Config) "," Convenience method for calling reconfigure(int, int, Config) with the current height and width. <br /><br />"
"android.graphics.Bitmap.extractAlpha (Paint paint, int[] offsetXY) "," Returns a new bitmap that captures the alpha values of the original. <br /><br />"
"android.graphics.Bitmap.recycle () "," Free the native object associated with this bitmap, and clear the reference to the pixel data. <br /><br />"
"android.graphics.Bitmap.setHasMipMap (boolean hasMipMap) "," Set a hint for the renderer responsible for drawing this bitmap indicating that it should attempt to use mipmaps when this bitmap is drawn scaled down. <br /><br />"
"android.graphics.Bitmap.getScaledHeight (DisplayMetrics metrics)   Convenience for calling getScaledHeight (int) "," Convenience for calling getScaledHeight(int) with the target density of the given DisplayMetrics. <br /><br />"
"android.graphics.Bitmap.prepareToDraw () "," Rebuilds any caches associated with the bitmap that are used for drawing it. <br /><br />"
"android.graphics.BitmapFactory.decodeFileDescriptor (FileDescriptor fd, Rect outPadding, BitmapFactory.Options opts) "," Decode a bitmap from the file descriptor. <br /><br />"
"android.graphics.BitmapFactory.decodeByteArray (byte[] data, int offset, int length) "," Decode an immutable bitmap from the specified byte array. <br /><br />"
"android.graphics.BitmapFactory.decodeByteArray (byte[] data, int offset, int length, BitmapFactory.Options opts) "," Decode an immutable bitmap from the specified byte array. <br /><br />"
"android.graphics.BitmapFactory.decodeFile (String pathName, BitmapFactory.Options opts) "," Decode a file path into a bitmap. <br /><br />"
"android.graphics.BitmapFactory.decodeResource (Resources res, int id, BitmapFactory.Options opts)   Synonym for opening the given resource and calling decodeResourceStream (Resources, TypedValue, InputStream, Rect, BitmapFactory.Options) "," Synonym for opening the given resource and calling decodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options). <br /><br />"
"android.graphics.BitmapFactory.decodeStream (InputStream is) "," Decode an input stream into a bitmap. <br /><br />"
"android.graphics.BitmapFactory.decodeResource (Resources res, int id)   Synonym for decodeResource (Resources, int, android.graphics.BitmapFactory.Options) "," Synonym for decodeResource(Resources, int, android.graphics.BitmapFactory.Options) with null Options. <br /><br />"
"android.graphics.BitmapFactory.decodeResourceStream (Resources res, TypedValue value, InputStream is, Rect pad, BitmapFactory.Options opts) "," Decode a new Bitmap from an InputStream. <br /><br />"
"android.graphics.BitmapFactory.decodeFileDescriptor (FileDescriptor fd) "," Decode a bitmap from the file descriptor. <br /><br />"
"android.graphics.BitmapFactory.decodeFile (String pathName) "," Decode a file path into a bitmap. <br /><br />"
"android.graphics.BitmapFactory.decodeStream (InputStream is, Rect outPadding, BitmapFactory.Options opts) "," Decode an input stream into a bitmap. <br /><br />"
"android.graphics.BitmapFactory.Options.requestCancelDecode () "," This can be called from another thread while this options object is inside a decode... <br /><br />"
"android.graphics.BitmapRegionDecoder.newInstance (FileDescriptor fd, boolean isShareable) "," Create a BitmapRegionDecoder from the file descriptor. <br /><br />"
"android.graphics.BitmapRegionDecoder.newInstance (String pathName, boolean isShareable) "," Create a BitmapRegionDecoder from a file path. <br /><br />"
"android.graphics.BitmapRegionDecoder.decodeRegion (Rect rect, BitmapFactory.Options options) "," Decodes a rectangle region in the image specified by rect. <br /><br />"
"android.graphics.BitmapRegionDecoder.getHeight () "," Returns the original image's height <br /><br />"
"android.graphics.BitmapRegionDecoder.recycle ()   Frees up the memory associated with this region decoder, and mark the region decoder as 'dead', meaning it will throw an exception if decodeRegion (), getWidth () or getHeight () "," Frees up the memory associated with this region decoder, and mark the region decoder as 'dead', meaning it will throw an exception if decodeRegion(), getWidth() or getHeight() is called. <br /><br />"
"android.graphics.BitmapRegionDecoder.isRecycled () "," Returns true if this region decoder has been recycled. <br /><br />"
"android.graphics.BitmapRegionDecoder.newInstance (InputStream is, boolean isShareable) "," Create a BitmapRegionDecoder from an input stream. <br /><br />"
"android.graphics.BitmapRegionDecoder.newInstance (byte[] data, int offset, int length, boolean isShareable) "," Create a BitmapRegionDecoder from the specified byte array. <br /><br />"
"android.graphics.BitmapRegionDecoder.getWidth () "," Returns the original image's width <br /><br />"
"android.graphics.Camera.save () "," Saves the camera state. <br /><br />"
"android.graphics.Camera.rotate (float x, float y, float z) "," Applies a rotation transform around all three axis. <br /><br />"
"android.graphics.Camera.rotateX (float deg) "," Applies a rotation transform around the X axis. <br /><br />"
"android.graphics.Camera.restore () "," Restores the saved state, if any. <br /><br />"
"android.graphics.Camera.getMatrix (Matrix matrix) "," Computes the matrix corresponding to the current transformation and copies it to the supplied matrix object. <br /><br />"
"android.graphics.Camera.translate (float x, float y, float z) "," Applies a translation transform on all three axis. <br /><br />"
"android.graphics.Camera.setLocation (float x, float y, float z) "," Sets the location of the camera. <br /><br />"
"android.graphics.Camera.getLocationY () "," Gets the y location of the camera. <br /><br />"
"android.graphics.Camera.getLocationZ () "," Gets the z location of the camera. <br /><br />"
"android.graphics.Camera.rotateZ (float deg) "," Applies a rotation transform around the Z axis. <br /><br />"
"android.graphics.Camera.rotateY (float deg) "," Applies a rotation transform around the Y axis. <br /><br />"
"android.graphics.Camera.getLocationX () "," Gets the x location of the camera. <br /><br />"
"android.graphics.Camera.dotWithNormal (float dx, float dy, float dz) "," no description <br /><br />"
"android.graphics.Camera.applyToCanvas (Canvas canvas) "," Computes the matrix corresponding to the current transformation and applies it to the specified Canvas. <br /><br />"
"android.graphics.Canvas.isHardwareAccelerated () "," Indicates whether this Canvas uses hardware acceleration. <br /><br />"
"android.graphics.Canvas.drawTextOnPath (char[] text, int index, int count, Path path, float hOffset, float vOffset, Paint paint)   Draw the text, with origin at  (x,y) "," Draw the text, with origin at (x,y), using the specified paint, along the specified path. <br /><br />"
"android.graphics.Canvas.drawLines (float[] pts, int offset, int count, Paint paint) "," Draw a series of lines. <br /><br />"
"android.graphics.Canvas.save (int saveFlags) "," Based on saveFlags, can save the current matrix and clip onto a private stack. <br /><br />"
"android.graphics.Canvas.clipPath (Path path, Region.Op op) "," Modify the current clip with the specified path. <br /><br />"
"android.graphics.Canvas.clipRect (RectF rect, Region.Op op) "," Modify the current clip with the specified rectangle. <br /><br />"
"android.graphics.Canvas.drawOval (RectF oval, Paint paint) "," Draw the specified oval using the specified paint. <br /><br />"
"android.graphics.Canvas.clipRect (float left, float top, float right, float bottom) "," Intersect the current clip with the specified rectangle, which is expressed in local coordinates. <br /><br />"
"android.graphics.Canvas.drawColor (int color, PorterDuff.Mode mode)   Fill the entire canvas' bitmap  (restricted to the current clip) "," Fill the entire canvas' bitmap (restricted to the current clip) with the specified color and porter-duff xfermode. <br /><br />"
"android.graphics.Canvas.drawRGB (int r, int g, int b)   Fill the entire canvas' bitmap  (restricted to the current clip) "," Fill the entire canvas' bitmap (restricted to the current clip) with the specified RGB color, using srcover porterduff mode. <br /><br />"
"android.graphics.Canvas.drawText (String text, int start, int end, float x, float y, Paint paint)   Draw the text, with origin at  (x,y) "," Draw the text, with origin at (x,y), using the specified paint. <br /><br />"
"android.graphics.Canvas.drawPoints (float[] pts, Paint paint)   Helper for drawPoints () "," Helper for drawPoints() that assumes you want to draw the entire array <br /><br />"
"android.graphics.Canvas.setDrawFilter (DrawFilter filter) "," no description <br /><br />"
"android.graphics.Canvas.getHeight () "," Returns the height of the current drawing layer <br /><br />"
"android.graphics.Canvas.translate (float dx, float dy) "," Preconcat the current matrix with the specified translation <br /><br />"
"android.graphics.Canvas.skew (float sx, float sy) "," Preconcat the current matrix with the specified skew. <br /><br />"
"android.graphics.Canvas.drawPicture (Picture picture) "," Save the canvas state, draw the picture, and restore the canvas state. <br /><br />"
"android.graphics.Canvas.drawRoundRect (RectF rect, float rx, float ry, Paint paint) "," Draw the specified round-rect using the specified paint. <br /><br />"
"android.graphics.Canvas.getClipBounds (Rect bounds)   Return the bounds of the current clip  (in local coordinates) "," Return the bounds of the current clip (in local coordinates) in the bounds parameter, and return true if it is non-empty. <br /><br />"
"android.graphics.Canvas.getSaveCount () "," Returns the number of matrix/clip states on the Canvas' private stack. <br /><br />"
"android.graphics.Canvas.drawText (char[] text, int index, int count, float x, float y, Paint paint)   Draw the text, with origin at  (x,y) "," Draw the text, with origin at (x,y), using the specified paint. <br /><br />"
"android.graphics.Canvas.drawARGB (int a, int r, int g, int b)   Fill the entire canvas' bitmap  (restricted to the current clip) "," Fill the entire canvas' bitmap (restricted to the current clip) with the specified ARGB color, using srcover porterduff mode. <br /><br />"
"android.graphics.Canvas.drawPath (Path path, Paint paint) "," Draw the specified path using the specified paint. <br /><br />"
"android.graphics.Canvas.drawRect (float left, float top, float right, float bottom, Paint paint) "," Draw the specified Rect using the specified paint. <br /><br />"
"android.graphics.Canvas.drawArc (float left, float top, float right, float bottom, float startAngle, float sweepAngle, boolean useCenter, Paint paint) "," Draw the specified arc, which will be scaled to fit inside the specified oval. <br /><br />"
"android.graphics.Canvas.getMatrix () "," Return a new matrix with a copy of the canvas' current transformation matrix. <br /><br />"
"android.graphics.Canvas.drawPosText (String text, float[] pos, Paint paint) "," Draw the text in the array, with each character's origin specified by the pos array. <br /><br />"
"android.graphics.Canvas.clipRect (int left, int top, int right, int bottom) "," Intersect the current clip with the specified rectangle, which is expressed in local coordinates. <br /><br />"
"android.graphics.Canvas.drawArc (RectF oval, float startAngle, float sweepAngle, boolean useCenter, Paint paint) "," Draw the specified arc, which will be scaled to fit inside the specified oval. <br /><br />"
"android.graphics.Canvas.save () "," Saves the current matrix and clip onto a private stack. <br /><br />"
"android.graphics.Canvas.concat (Matrix matrix) "," Preconcat the current matrix with the specified matrix. <br /><br />"
"android.graphics.Canvas.saveLayerAlpha (RectF bounds, int alpha, int saveFlags)   This behaves the same as save () "," This behaves the same as save(), but in addition it allocates and redirects drawing to an offscreen bitmap. <br /><br />"
"android.graphics.Canvas.drawText (CharSequence text, int start, int end, float x, float y, Paint paint)   Draw the specified range of text, specified by start/end, with its origin at  (x,y) "," Draw the specified range of text, specified by start/end, with its origin at (x,y), in the specified Paint. <br /><br />"
"android.graphics.Canvas.quickReject (float left, float top, float right, float bottom, Canvas.EdgeType type) "," Return true if the specified rectangle, after being transformed by the current matrix, would lie completely outside of the current clip. <br /><br />"
"android.graphics.Canvas.drawPicture (Picture picture, RectF dst) "," Draw the picture, stretched to fit into the dst rectangle. <br /><br />"
"android.graphics.Canvas.drawPoints (float[] pts, int offset, int count, Paint paint) "," Draw a series of points. <br /><br />"
"android.graphics.Canvas.setBitmap (Bitmap bitmap) "," Specify a bitmap for the canvas to draw into. <br /><br />"
"android.graphics.Canvas.drawBitmap (Bitmap bitmap, Rect src, Rect dst, Paint paint) "," Draw the specified bitmap, scaling/translating automatically to fill the destination rectangle. <br /><br />"
"android.graphics.Canvas.setDensity (int density) "," Specifies the density for this Canvas' backing bitmap. <br /><br />"
"android.graphics.Canvas.saveLayerAlpha (float left, float top, float right, float bottom, int alpha)   Helper for saveLayerAlpha (left, top, right, bottom, alpha, ALL_SAVE_FLAG) "," Helper for saveLayerAlpha(left, top, right, bottom, alpha, ALL_SAVE_FLAG) <br /><br />"
"android.graphics.Canvas.drawBitmap (Bitmap bitmap, Matrix matrix, Paint paint) "," Draw the bitmap using the specified matrix. <br /><br />"
"android.graphics.Canvas.drawBitmap (int[] colors, int offset, int stride, float x, float y, int width, int height, boolean hasAlpha, Paint paint)    This method was deprecated in API level 21. Usage with a "," This method was deprecated in API level 21. Usage with a hardware accelerated canvas requires an internal copy of color buffer contents every time this method is called. Using a Bitmap avoids this copy, and allows the application to more explicitly control the lifetime and copies of pixel data. <br /><br />"
"android.graphics.Canvas.saveLayer (float left, float top, float right, float bottom, Paint paint)   Convenience for saveLayer (left, top, right, bottom, paint, ALL_SAVE_FLAG) "," Convenience for saveLayer(left, top, right, bottom, paint, ALL_SAVE_FLAG) <br /><br />"
"android.graphics.Canvas.drawCircle (float cx, float cy, float radius, Paint paint) "," Draw the specified circle using the specified paint. <br /><br />"
"android.graphics.Canvas.drawBitmap (Bitmap bitmap, float left, float top, Paint paint)   Draw the specified bitmap, with its top/left corner at  (x,y) "," Draw the specified bitmap, with its top/left corner at (x,y), using the specified paint, transformed by the current matrix. <br /><br />"
"android.graphics.Canvas.drawPicture (Picture picture, Rect dst) "," Draw the picture, stretched to fit into the dst rectangle. <br /><br />"
"android.graphics.Canvas.drawText (String text, float x, float y, Paint paint)   Draw the text, with origin at  (x,y) "," Draw the text, with origin at (x,y), using the specified paint. <br /><br />"
"android.graphics.Canvas.clipRect (RectF rect) "," Intersect the current clip with the specified rectangle, which is expressed in local coordinates. <br /><br />"
"android.graphics.Canvas.clipRect (Rect rect) "," Intersect the current clip with the specified rectangle, which is expressed in local coordinates. <br /><br />"
"android.graphics.Canvas.getMaximumBitmapHeight () "," Returns the maximum allowed height for bitmaps drawn with this canvas. <br /><br />"
"android.graphics.Canvas.clipRect (float left, float top, float right, float bottom, Region.Op op) "," Modify the current clip with the specified rectangle, which is expressed in local coordinates. <br /><br />"
"android.graphics.Canvas.drawLines (float[] pts, Paint paint) "," no description <br /><br />"
"android.graphics.Canvas.restoreToCount (int saveCount)   Efficient way to pop any calls to save () "," Efficient way to pop any calls to save() that happened after the save count reached saveCount. <br /><br />"
"android.graphics.Canvas.isOpaque () "," Return true if the device that the current layer draws into is opaque (i.e. <br /><br />"
"android.graphics.Canvas.drawLine (float startX, float startY, float stopX, float stopY, Paint paint) "," Draw a line segment with the specified start and stop x,y coordinates, using the specified paint. <br /><br />"
"android.graphics.Canvas.quickReject (Path path, Canvas.EdgeType type) "," Return true if the specified path, after being transformed by the current matrix, would lie completely outside of the current clip. <br /><br />"
"android.graphics.Canvas.getMatrix (Matrix ctm) "," Return, in ctm, the current transformation matrix. <br /><br />"
"android.graphics.Canvas.drawRect (Rect r, Paint paint) "," Draw the specified Rect using the specified Paint. <br /><br />"
"android.graphics.Canvas.saveLayer (float left, float top, float right, float bottom, Paint paint, int saveFlags)   Helper version of saveLayer () "," Helper version of saveLayer() that takes 4 values rather than a RectF. <br /><br />"
"android.graphics.Canvas.getDensity () "," Returns the target density of the canvas. <br /><br />"
"android.graphics.Canvas.getWidth () "," Returns the width of the current drawing layer <br /><br />"
"android.graphics.Canvas.drawBitmapMesh (Bitmap bitmap, int meshWidth, int meshHeight, float[] verts, int vertOffset, int[] colors, int colorOffset, Paint paint) "," Draw the bitmap through the mesh, where mesh vertices are evenly distributed across the bitmap. <br /><br />"
"android.graphics.Canvas.getMaximumBitmapWidth () "," Returns the maximum allowed width for bitmaps drawn with this canvas. <br /><br />"
"android.graphics.Canvas.clipRegion (Region region, Region.Op op)    This method was deprecated in API level 21. Unlike all other clip calls this API does not respect the current matrix. Use clipRect (Rect) "," This method was deprecated in API level 21. Unlike all other clip calls this API does not respect the current matrix. Use clipRect(Rect) as an alternative. <br /><br />"
"android.graphics.Canvas.setMatrix (Matrix matrix) "," Completely replace the current matrix with the specified matrix. <br /><br />"
"android.graphics.Canvas.drawRect (RectF rect, Paint paint) "," Draw the specified Rect using the specified paint. <br /><br />"
"android.graphics.Canvas.drawBitmap (int[] colors, int offset, int stride, int x, int y, int width, int height, boolean hasAlpha, Paint paint)    This method was deprecated in API level 21. Usage with a "," This method was deprecated in API level 21. Usage with a hardware accelerated canvas requires an internal copy of color buffer contents every time this method is called. Using a Bitmap avoids this copy, and allows the application to more explicitly control the lifetime and copies of pixel data. <br /><br />"
"android.graphics.Canvas.drawPosText (char[] text, int index, int count, float[] pos, Paint paint) "," Draw the text in the array, with each character's origin specified by the pos array. <br /><br />"
"android.graphics.Canvas.rotate (float degrees, float px, float py) "," Preconcat the current matrix with the specified rotation. <br /><br />"
"android.graphics.Canvas.drawPaint (Paint paint)   Fill the entire canvas' bitmap  (restricted to the current clip) "," Fill the entire canvas' bitmap (restricted to the current clip) with the specified paint. <br /><br />"
"android.graphics.Canvas.rotate (float degrees) "," Preconcat the current matrix with the specified rotation. <br /><br />"
"android.graphics.Canvas.quickReject (RectF rect, Canvas.EdgeType type) "," Return true if the specified rectangle, after being transformed by the current matrix, would lie completely outside of the current clip. <br /><br />"
"android.graphics.Canvas.drawColor (int color)   Fill the entire canvas' bitmap  (restricted to the current clip) "," Fill the entire canvas' bitmap (restricted to the current clip) with the specified color, using srcover porterduff mode. <br /><br />"
"android.graphics.Canvas.getClipBounds ()   Retrieve the bounds of the current clip  (in local coordinates) "," Retrieve the bounds of the current clip (in local coordinates). <br /><br />"
"android.graphics.Canvas.scale (float sx, float sy, float px, float py) "," Preconcat the current matrix with the specified scale. <br /><br />"
"android.graphics.Canvas.scale (float sx, float sy) "," Preconcat the current matrix with the specified scale. <br /><br />"
"android.graphics.Canvas.drawPoint (float x, float y, Paint paint)   Helper for drawPoints () "," Helper for drawPoints() for drawing a single point. <br /><br />"
"android.graphics.Canvas.drawVertices (Canvas.VertexMode mode, int vertexCount, float[] verts, int vertOffset, float[] texs, int texOffset, int[] colors, int colorOffset, short[] indices, int indexOffset, int indexCount, Paint paint)   Draw the array of vertices, interpreted as triangles  (based on mode) "," Draw the array of vertices, interpreted as triangles (based on mode). <br /><br />"
"android.graphics.Canvas.clipPath (Path path) "," Intersect the current clip with the specified path. <br /><br />"
"android.graphics.Canvas.drawBitmap (Bitmap bitmap, Rect src, RectF dst, Paint paint) "," Draw the specified bitmap, scaling/translating automatically to fill the destination rectangle. <br /><br />"
"android.graphics.Canvas.clipRect (Rect rect, Region.Op op) "," Modify the current clip with the specified rectangle, which is expressed in local coordinates. <br /><br />"
"android.graphics.Canvas.saveLayer (RectF bounds, Paint paint, int saveFlags)   This behaves the same as save () "," This behaves the same as save(), but in addition it allocates and redirects drawing to an offscreen bitmap. <br /><br />"
"android.graphics.Canvas.restore ()   This call balances a previous call to save () "," This call balances a previous call to save(), and is used to remove all modifications to the matrix/clip state since the last save call. <br /><br />"
"android.graphics.Canvas.saveLayerAlpha (float left, float top, float right, float bottom, int alpha, int saveFlags)   Helper for saveLayerAlpha () "," Helper for saveLayerAlpha() that takes 4 values instead of a RectF. <br /><br />"
"android.graphics.Canvas.drawRoundRect (float left, float top, float right, float bottom, float rx, float ry, Paint paint) "," Draw the specified round-rect using the specified paint. <br /><br />"
"android.graphics.Canvas.drawOval (float left, float top, float right, float bottom, Paint paint) "," Draw the specified oval using the specified paint. <br /><br />"
"android.graphics.Canvas.getDrawFilter () "," no description <br /><br />"
"android.graphics.Canvas.clipRegion (Region region)    This method was deprecated in API level 21. Unlike all other clip calls this API does not respect the current matrix. Use clipRect (Rect) "," This method was deprecated in API level 21. Unlike all other clip calls this API does not respect the current matrix. Use clipRect(Rect) as an alternative. <br /><br />"
"android.graphics.Canvas.saveLayer (RectF bounds, Paint paint)   Convenience for saveLayer (bounds, paint, ALL_SAVE_FLAG) "," Convenience for saveLayer(bounds, paint, ALL_SAVE_FLAG) <br /><br />"
"android.graphics.Canvas.drawTextOnPath (String text, Path path, float hOffset, float vOffset, Paint paint)   Draw the text, with origin at  (x,y) "," Draw the text, with origin at (x,y), using the specified paint, along the specified path. <br /><br />"
"android.graphics.Canvas.saveLayerAlpha (RectF bounds, int alpha)   Convenience for saveLayerAlpha (bounds, alpha, ALL_SAVE_FLAG) "," Convenience for saveLayerAlpha(bounds, alpha, ALL_SAVE_FLAG) <br /><br />"
"android.graphics.Color.green (int color) "," Return the green component of a color int. <br /><br />"
"android.graphics.Color.RGBToHSV (int red, int green, int blue, float[] hsv) "," Convert RGB components to HSV. <br /><br />"
"android.graphics.Color.rgb (int red, int green, int blue) "," Return a color-int from red, green, blue components. <br /><br />"
"android.graphics.Color.alpha (int color) "," Return the alpha component of a color int. <br /><br />"
"android.graphics.Color.parseColor (String colorString) "," Parse the color string, and return the corresponding color-int. <br /><br />"
"android.graphics.Color.red (int color) "," Return the red component of a color int. <br /><br />"
"android.graphics.Color.HSVToColor (int alpha, float[] hsv) "," Convert HSV components to an ARGB color. <br /><br />"
"android.graphics.Color.blue (int color) "," Return the blue component of a color int. <br /><br />"
"android.graphics.Color.HSVToColor (float[] hsv) "," Convert HSV components to an ARGB color. <br /><br />"
"android.graphics.Color.colorToHSV (int color, float[] hsv) "," Convert the argb color to its HSV components. <br /><br />"
"android.graphics.Color.argb (int alpha, int red, int green, int blue) "," Return a color-int from alpha, red, green, blue components. <br /><br />"
"android.graphics.ColorMatrix.setConcat (ColorMatrix matA, ColorMatrix matB) "," Set this colormatrix to the concatenation of the two specified colormatrices, such that the resulting colormatrix has the same effect as applying matB and then applying matA. <br /><br />"
"android.graphics.ColorMatrix.setYUV2RGB () "," Set the matrix to convert from YUV to RGB <br /><br />"
"android.graphics.ColorMatrix.setSaturation (float sat) "," Set the matrix to affect the saturation of colors. <br /><br />"
"android.graphics.ColorMatrix.getArray () "," Return the array of floats representing this colormatrix. <br /><br />"
"android.graphics.ColorMatrix.setRGB2YUV () "," Set the matrix to convert RGB to YUV <br /><br />"
"android.graphics.ColorMatrix.set (float[] src) "," Assign the array of floats into this matrix, copying all of its values. <br /><br />"
"android.graphics.ColorMatrix.set (ColorMatrix src) "," Assign the src colormatrix into this matrix, copying all of its values. <br /><br />"
"android.graphics.ColorMatrix.postConcat (ColorMatrix postmatrix) "," Concat this colormatrix with the specified postmatrix. <br /><br />"
"android.graphics.ColorMatrix.reset () "," Set this colormatrix to identity:  [ 1 0 0 0 0 - red vector 0 1 0 0 0 - green vector 0 0 1 0 0 - blue vector 0 0 0 1 0 ] - alpha vector <br /><br />"
"android.graphics.ColorMatrix.setScale (float rScale, float gScale, float bScale, float aScale) "," Set this colormatrix to scale by the specified values. <br /><br />"
"android.graphics.ColorMatrix.setRotate (int axis, float degrees) "," Set the rotation on a color axis by the specified values. <br /><br />"
"android.graphics.ColorMatrix.preConcat (ColorMatrix prematrix) "," Concat this colormatrix with the specified prematrix. <br /><br />"
"android.graphics.drawable.Animatable.stop () "," Stops the drawable's animation. <br /><br />"
"android.graphics.drawable.Animatable.isRunning () "," Indicates whether the animation is running. <br /><br />"
"android.graphics.drawable.Animatable.start () "," Starts the drawable's animation. <br /><br />"
"android.graphics.drawable.AnimatedStateListDrawable.addState (int[] stateSet, Drawable drawable, int id) "," Add a new drawable to the set of keyframes. <br /><br />"
"android.graphics.drawable.AnimatedStateListDrawable.inflate (Resources r, XmlPullParser parser, AttributeSet attrs, Resources.Theme theme) "," Inflate this Drawable from an XML resource optionally styled by a theme. <br /><br />"
"android.graphics.drawable.AnimatedStateListDrawable.isStateful () "," Indicates whether this drawable will change its appearance based on state. <br /><br />"
"android.graphics.drawable.AnimatedStateListDrawable.setVisible (boolean visible, boolean restart) "," Set whether this Drawable is visible. <br /><br />"
"android.graphics.drawable.AnimatedStateListDrawable.jumpToCurrentState () "," If this Drawable does transition animations between states, ask that it immediately jump to the current state and skip any active animations. <br /><br />"
"android.graphics.drawable.AnimatedStateListDrawable.mutate () "," Make this drawable mutable. <br /><br />"
"android.graphics.drawable.AnimatedStateListDrawable.addTransition (int fromId, int toId, T transition, boolean reversible) "," Adds a new transition between keyframes. <br /><br />"
"android.graphics.drawable.AnimatedStateListDrawable.applyTheme (Resources.Theme theme) "," Applies the specified theme to this Drawable and its children. <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.getChangingConfigurations () "," Return a mask of the configuration parameters for which this drawable may change, requiring that it be re-created. <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.getOpacity () "," Return the opacity/transparency of this Drawable. <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.getIntrinsicWidth () "," Return the intrinsic width of the underlying drawable object. <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.setColorFilter (ColorFilter colorFilter) "," Specify an optional color filter for the drawable. <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.setAlpha (int alpha) "," Specify an alpha value for the drawable. <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.inflate (Resources res, XmlPullParser parser, AttributeSet attrs, Resources.Theme theme) "," Inflate this Drawable from an XML resource optionally styled by a theme. <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.start () "," Starts the drawable's animation. <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.isStateful () "," Indicates whether this drawable will change its appearance based on state. <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.setVisible (boolean visible, boolean restart) "," Set whether this Drawable is visible. <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.getIntrinsicHeight () "," Return the intrinsic height of the underlying drawable object. <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.applyTheme (Resources.Theme t) "," Applies the specified theme to this Drawable and its children. <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.canApplyTheme () "," no description <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.setTintMode (PorterDuff.Mode tintMode) "," Specifies a tint blending mode for this drawable. <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.setHotspot (float x, float y) "," Specifies the hotspot's location within the drawable. <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.stop () "," Stops the drawable's animation. <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.isRunning () "," Indicates whether the animation is running. <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.setTintList (ColorStateList tint) "," Specifies a tint for this drawable as a color state list. <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.getOutline (Outline outline) "," Called to get the drawable to populate the Outline that defines its drawing area. <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.draw (Canvas canvas)   Draw in its bounds  (set via setBounds) respecting optional effects such as alpha  (set via setAlpha) and color filter  (set via setColorFilter) "," Draw in its bounds (set via setBounds) respecting optional effects such as alpha (set via setAlpha) and color filter (set via setColorFilter). <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.getConstantState () "," Return a Drawable.ConstantState instance that holds the shared state of this Drawable. <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.setHotspotBounds (int left, int top, int right, int bottom) "," Sets the bounds to which the hotspot is constrained, if they should be different from the drawable bounds. <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.getAlpha () "," Gets the current alpha value for the drawable. <br /><br />"
"android.graphics.drawable.AnimatedVectorDrawable.mutate () "," Make this drawable mutable. <br /><br />"
"android.graphics.drawable.AnimationDrawable.isOneShot () "," no description <br /><br />"
"android.graphics.drawable.AnimationDrawable.addFrame (Drawable frame, int duration) "," Add a frame to the animation <br /><br />"
"android.graphics.drawable.AnimationDrawable.stop () "," Stops the animation. <br /><br />"
"android.graphics.drawable.AnimationDrawable.isRunning () "," Indicates whether the animation is currently running or not. <br /><br />"
"android.graphics.drawable.AnimationDrawable.inflate (Resources r, XmlPullParser parser, AttributeSet attrs, Resources.Theme theme) "," Inflate this Drawable from an XML resource optionally styled by a theme. <br /><br />"
"android.graphics.drawable.AnimationDrawable.run () "," This method exists for implementation purpose only and should not be called directly. <br /><br />"
"android.graphics.drawable.AnimationDrawable.start () "," Starts the animation, looping if necessary. <br /><br />"
"android.graphics.drawable.AnimationDrawable.setOneShot (boolean oneShot) "," Sets whether the animation should play once or repeat. <br /><br />"
"android.graphics.drawable.AnimationDrawable.setVisible (boolean visible, boolean restart) "," Sets whether this AnimationDrawable is visible. <br /><br />"
"android.graphics.drawable.AnimationDrawable.unscheduleSelf (Runnable what) "," Use the current Drawable.Callback implementation to have this Drawable unscheduled. <br /><br />"
"android.graphics.drawable.AnimationDrawable.getNumberOfFrames () "," no description <br /><br />"
"android.graphics.drawable.AnimationDrawable.mutate () "," Make this drawable mutable. <br /><br />"
"android.graphics.drawable.AnimationDrawable.getDuration (int i) "," no description <br /><br />"
"android.graphics.drawable.AnimationDrawable.getFrame (int index) "," no description <br /><br />"
"android.graphics.drawable.BitmapDrawable.setColorFilter (ColorFilter cf) "," Specify an optional color filter for the drawable. <br /><br />"
"android.graphics.drawable.BitmapDrawable.getIntrinsicWidth () "," Return the intrinsic width of the underlying drawable object. <br /><br />"
"android.graphics.drawable.BitmapDrawable.setAlpha (int alpha) "," Specify an alpha value for the drawable. <br /><br />"
"android.graphics.drawable.BitmapDrawable.setTargetDensity (int density) "," Set the density at which this drawable will be rendered. <br /><br />"
"android.graphics.drawable.BitmapDrawable.isStateful () "," Indicates whether this drawable will change its appearance based on state. <br /><br />"
"android.graphics.drawable.BitmapDrawable.hasMipMap () "," Indicates whether the mipmap hint is enabled on this drawable's bitmap. <br /><br />"
"android.graphics.drawable.BitmapDrawable.applyTheme (Resources.Theme t) "," Applies the specified theme to this Drawable and its children. <br /><br />"
"android.graphics.drawable.BitmapDrawable.setTileModeX (Shader.TileMode mode) "," Sets the repeat behavior of this drawable on the X axis. <br /><br />"
"android.graphics.drawable.BitmapDrawable.setAutoMirrored (boolean mirrored)   Set whether this Drawable is automatically mirrored when its layout direction is RTL  (right-to left) "," Set whether this Drawable is automatically mirrored when its layout direction is RTL (right-to left). <br /><br />"
"android.graphics.drawable.BitmapDrawable.canApplyTheme () "," no description <br /><br />"
"android.graphics.drawable.BitmapDrawable.hasAntiAlias () "," Indicates whether anti-aliasing is enabled for this drawable. <br /><br />"
"android.graphics.drawable.BitmapDrawable.setGravity (int gravity) "," Set the gravity used to position/stretch the bitmap within its bounds. <br /><br />"
"android.graphics.drawable.BitmapDrawable.isAutoMirrored () "," Tells if this Drawable will be automatically mirrored when its layout direction is RTL right-to-left. <br /><br />"
"android.graphics.drawable.BitmapDrawable.inflate (Resources r, XmlPullParser parser, AttributeSet attrs, Resources.Theme theme) "," Inflate this Drawable from an XML resource optionally styled by a theme. <br /><br />"
"android.graphics.drawable.BitmapDrawable.getConstantState () "," Return a Drawable.ConstantState instance that holds the shared state of this Drawable. <br /><br />"
"android.graphics.drawable.BitmapDrawable.draw (Canvas canvas)   Draw in its bounds  (set via setBounds) respecting optional effects such as alpha  (set via setAlpha) and color filter  (set via setColorFilter) "," Draw in its bounds (set via setBounds) respecting optional effects such as alpha (set via setAlpha) and color filter (set via setColorFilter). <br /><br />"
"android.graphics.drawable.BitmapDrawable.setTargetDensity (Canvas canvas) "," Set the density scale at which this drawable will be rendered. <br /><br />"
"android.graphics.drawable.BitmapDrawable.setTargetDensity (DisplayMetrics metrics) "," Set the density scale at which this drawable will be rendered. <br /><br />"
"android.graphics.drawable.BitmapDrawable.getAlpha () "," Gets the current alpha value for the drawable. <br /><br />"
"android.graphics.drawable.BitmapDrawable.getOpacity () "," Return the opacity/transparency of this Drawable. <br /><br />"
"android.graphics.drawable.BitmapDrawable.getChangingConfigurations () "," Return a mask of the configuration parameters for which this drawable may change, requiring that it be re-created. <br /><br />"
"android.graphics.drawable.BitmapDrawable.setAntiAlias (boolean aa) "," Enables or disables anti-aliasing for this drawable. <br /><br />"
"android.graphics.drawable.BitmapDrawable.setTileModeY (Shader.TileMode mode) "," Sets the repeat behavior of this drawable on the Y axis. <br /><br />"
"android.graphics.drawable.BitmapDrawable.getTileModeX () "," Indicates the repeat behavior of this drawable on the X axis. <br /><br />"
"android.graphics.drawable.BitmapDrawable.getIntrinsicHeight () "," Return the intrinsic height of the underlying drawable object. <br /><br />"
"android.graphics.drawable.BitmapDrawable.getBitmap () "," Returns the bitmap used by this drawable to render. <br /><br />"
"android.graphics.drawable.BitmapDrawable.setTintMode (PorterDuff.Mode tintMode) "," Specifies a tint blending mode for this drawable. <br /><br />"
"android.graphics.drawable.BitmapDrawable.getPaint () "," Returns the paint used to render this drawable. <br /><br />"
"android.graphics.drawable.BitmapDrawable.setDither (boolean dither) "," Set to true to have the drawable dither its colors when drawn to a device with fewer than 8-bits per color component. <br /><br />"
"android.graphics.drawable.BitmapDrawable.getTileModeY () "," Indicates the repeat behavior of this drawable on the Y axis. <br /><br />"
"android.graphics.drawable.BitmapDrawable.setTileModeXY (Shader.TileMode xmode, Shader.TileMode ymode) "," Sets the repeat behavior of this drawable on both axis. <br /><br />"
"android.graphics.drawable.BitmapDrawable.setMipMap (boolean mipMap) "," Enables or disables the mipmap hint for this drawable's bitmap. <br /><br />"
"android.graphics.drawable.BitmapDrawable.getGravity () "," Get the gravity used to position/stretch the bitmap within its bounds. <br /><br />"
"android.graphics.drawable.BitmapDrawable.setTintList (ColorStateList tint) "," Specifies a tint for this drawable as a color state list. <br /><br />"
"android.graphics.drawable.BitmapDrawable.getOutline (Outline outline) "," Called to get the drawable to populate the Outline that defines its drawing area. <br /><br />"
"android.graphics.drawable.BitmapDrawable.getColorFilter () "," Returns the current color filter, or null if none set. <br /><br />"
"android.graphics.drawable.BitmapDrawable.setFilterBitmap (boolean filter)   Set to true to have the drawable filter its bitmap when scaled or rotated  (for drawables that use bitmaps) "," Set to true to have the drawable filter its bitmap when scaled or rotated (for drawables that use bitmaps). <br /><br />"
"android.graphics.drawable.BitmapDrawable.mutate () "," A mutable BitmapDrawable still shares its Bitmap with any other Drawable that comes from the same resource. <br /><br />"
"android.graphics.drawable.ClipDrawable.setColorFilter (ColorFilter cf) "," Specify an optional color filter for the drawable. <br /><br />"
"android.graphics.drawable.ClipDrawable.getChangingConfigurations () "," Return a mask of the configuration parameters for which this drawable may change, requiring that it be re-created. <br /><br />"
"android.graphics.drawable.ClipDrawable.getOpacity () "," Return the opacity/transparency of this Drawable. <br /><br />"
"android.graphics.drawable.ClipDrawable.getIntrinsicWidth () "," Return the intrinsic width of the underlying drawable object. <br /><br />"
"android.graphics.drawable.ClipDrawable.setAlpha (int alpha) "," Specify an alpha value for the drawable. <br /><br />"
"android.graphics.drawable.ClipDrawable.getPadding (Rect padding) "," Return in padding the insets suggested by this Drawable for placing content inside the drawable's bounds. <br /><br />"
"android.graphics.drawable.ClipDrawable.isStateful () "," Indicates whether this drawable will change its appearance based on state. <br /><br />"
"android.graphics.drawable.ClipDrawable.setVisible (boolean visible, boolean restart) "," Set whether this Drawable is visible. <br /><br />"
"android.graphics.drawable.ClipDrawable.getIntrinsicHeight () "," Return the intrinsic height of the underlying drawable object. <br /><br />"
"android.graphics.drawable.ClipDrawable.applyTheme (Resources.Theme t) "," Applies the specified theme to this Drawable and its children. <br /><br />"
"android.graphics.drawable.ClipDrawable.invalidateDrawable (Drawable who) "," Called when the drawable needs to be redrawn. <br /><br />"
"android.graphics.drawable.ClipDrawable.canApplyTheme () "," no description <br /><br />"
"android.graphics.drawable.ClipDrawable.setTintMode (PorterDuff.Mode tintMode) "," Specifies a tint blending mode for this drawable. <br /><br />"
"android.graphics.drawable.ClipDrawable.scheduleDrawable (Drawable who, Runnable what, long when) "," A Drawable can call this to schedule the next frame of its animation. <br /><br />"
"android.graphics.drawable.ClipDrawable.inflate (Resources r, XmlPullParser parser, AttributeSet attrs, Resources.Theme theme) "," Inflate this Drawable from an XML resource optionally styled by a theme. <br /><br />"
"android.graphics.drawable.ClipDrawable.unscheduleDrawable (Drawable who, Runnable what)   A Drawable can call this to unschedule an action previously scheduled with scheduleDrawable (Drawable, Runnable, long) "," A Drawable can call this to unschedule an action previously scheduled with scheduleDrawable(Drawable, Runnable, long). <br /><br />"
"android.graphics.drawable.ClipDrawable.setTintList (ColorStateList tint) "," Specifies a tint for this drawable as a color state list. <br /><br />"
"android.graphics.drawable.ClipDrawable.draw (Canvas canvas)   Draw in its bounds  (set via setBounds) respecting optional effects such as alpha  (set via setAlpha) and color filter  (set via setColorFilter) "," Draw in its bounds (set via setBounds) respecting optional effects such as alpha (set via setAlpha) and color filter (set via setColorFilter). <br /><br />"
"android.graphics.drawable.ClipDrawable.getConstantState () "," Return a Drawable.ConstantState instance that holds the shared state of this Drawable. <br /><br />"
"android.graphics.drawable.ClipDrawable.getAlpha () "," Gets the current alpha value for the drawable. <br /><br />"
"android.graphics.drawable.ClipDrawable.mutate () "," Make this drawable mutable. <br /><br />"
"android.graphics.drawable.ColorDrawable.getChangingConfigurations () "," Return a mask of the configuration parameters for which this drawable may change, requiring that it be re-created. <br /><br />"
"android.graphics.drawable.ColorDrawable.getOpacity () "," Return the opacity/transparency of this Drawable. <br /><br />"
"android.graphics.drawable.ColorDrawable.setColorFilter (ColorFilter colorFilter) "," Sets the color filter applied to this color. <br /><br />"
"android.graphics.drawable.ColorDrawable.setAlpha (int alpha) "," Sets the color's alpha value. <br /><br />"
"android.graphics.drawable.ColorDrawable.getColor () "," Gets the drawable's color value. <br /><br />"
"android.graphics.drawable.ColorDrawable.isStateful () "," Indicates whether this drawable will change its appearance based on state. <br /><br />"
"android.graphics.drawable.ColorDrawable.setColor (int color) "," Sets the drawable's color value. <br /><br />"
"android.graphics.drawable.ColorDrawable.applyTheme (Resources.Theme t) "," Applies the specified theme to this Drawable and its children. <br /><br />"
"android.graphics.drawable.ColorDrawable.canApplyTheme () "," no description <br /><br />"
"android.graphics.drawable.ColorDrawable.setTintMode (PorterDuff.Mode tintMode) "," Specifies a tint blending mode for this drawable. <br /><br />"
"android.graphics.drawable.ColorDrawable.inflate (Resources r, XmlPullParser parser, AttributeSet attrs, Resources.Theme theme) "," Inflate this Drawable from an XML resource optionally styled by a theme. <br /><br />"
"android.graphics.drawable.ColorDrawable.setTintList (ColorStateList tint) "," Specifies a tint for this drawable as a color state list. <br /><br />"
"android.graphics.drawable.ColorDrawable.getOutline (Outline outline) "," Called to get the drawable to populate the Outline that defines its drawing area. <br /><br />"
"android.graphics.drawable.ColorDrawable.draw (Canvas canvas)   Draw in its bounds  (set via setBounds) respecting optional effects such as alpha  (set via setAlpha) and color filter  (set via setColorFilter) "," Draw in its bounds (set via setBounds) respecting optional effects such as alpha (set via setAlpha) and color filter (set via setColorFilter). <br /><br />"
"android.graphics.drawable.ColorDrawable.getConstantState () "," Return a Drawable.ConstantState instance that holds the shared state of this Drawable. <br /><br />"
"android.graphics.drawable.ColorDrawable.getAlpha () "," Returns the alpha value of this drawable's color. <br /><br />"
"android.graphics.drawable.ColorDrawable.mutate () "," A mutable BitmapDrawable still shares its Bitmap with any other Drawable that comes from the same resource. <br /><br />"
"android.graphics.drawable.Drawable.Callback.unscheduleDrawable (Drawable who, Runnable what)   A Drawable can call this to unschedule an action previously scheduled with scheduleDrawable (Drawable, Runnable, long) "," A Drawable can call this to unschedule an action previously scheduled with scheduleDrawable(Drawable, Runnable, long). <br /><br />"
"android.graphics.drawable.Drawable.Callback.invalidateDrawable (Drawable who) "," Called when the drawable needs to be redrawn. <br /><br />"
"android.graphics.drawable.Drawable.Callback.scheduleDrawable (Drawable who, Runnable what, long when) "," A Drawable can call this to schedule the next frame of its animation. <br /><br />"
"android.graphics.drawable.Drawable.ConstantState.newDrawable () "," Create a new drawable without supplying resources the caller is running in. <br /><br />"
"android.graphics.drawable.Drawable.ConstantState.getChangingConfigurations ()   Return a bit mask of configuration changes that will impact this drawable  (and thus require completely reloading it) "," Return a bit mask of configuration changes that will impact this drawable (and thus require completely reloading it). <br /><br />"
"android.graphics.drawable.Drawable.ConstantState.newDrawable (Resources res) "," Create a new Drawable instance from its constant state. <br /><br />"
"android.graphics.drawable.Drawable.ConstantState.newDrawable (Resources res, Resources.Theme theme) "," Create a new Drawable instance from its constant state. <br /><br />"
"android.graphics.drawable.Drawable.ConstantState.canApplyTheme () "," Return whether this constant state can have a theme applied. <br /><br />"
"android.graphics.drawable.Drawable.setColorFilter (ColorFilter cf) "," Specify an optional color filter for the drawable. <br /><br />"
"android.graphics.drawable.Drawable.getIntrinsicWidth () "," Return the intrinsic width of the underlying drawable object. <br /><br />"
"android.graphics.drawable.Drawable.getCallback () "," Return the current Drawable.Callback implementation attached to this Drawable. <br /><br />"
"android.graphics.drawable.Drawable.createFromXmlInner (Resources r, XmlPullParser parser, AttributeSet attrs, Resources.Theme theme) "," Create a drawable from inside an XML document using an optional Resources.Theme. <br /><br />"
"android.graphics.drawable.Drawable.setAlpha (int alpha) "," Specify an alpha value for the drawable. <br /><br />"
"android.graphics.drawable.Drawable.setCallback (Drawable.Callback cb) "," Bind a Drawable.Callback object to this Drawable. <br /><br />"
"android.graphics.drawable.Drawable.getPadding (Rect padding) "," Return in padding the insets suggested by this Drawable for placing content inside the drawable's bounds. <br /><br />"
"android.graphics.drawable.Drawable.createFromResourceStream (Resources res, TypedValue value, InputStream is, String srcName, BitmapFactory.Options opts) "," Create a drawable from an inputstream, using the given resources and value to determine density information. <br /><br />"
"android.graphics.drawable.Drawable.applyTheme (Resources.Theme t) "," Applies the specified theme to this Drawable and its children. <br /><br />"
"android.graphics.drawable.Drawable.copyBounds () "," Return a copy of the drawable's bounds in a new Rect. <br /><br />"
"android.graphics.drawable.Drawable.setLevel (int level) "," Specify the level for the drawable. <br /><br />"
"android.graphics.drawable.Drawable.scheduleSelf (Runnable what, long when) "," Use the current Drawable.Callback implementation to have this Drawable scheduled. <br /><br />"
"android.graphics.drawable.Drawable.setBounds (int left, int top, int right, int bottom) "," Specify a bounding rectangle for the Drawable. <br /><br />"
"android.graphics.drawable.Drawable.setHotspot (float x, float y) "," Specifies the hotspot's location within the drawable. <br /><br />"
"android.graphics.drawable.Drawable.getCurrent () "," no description <br /><br />"
"android.graphics.drawable.Drawable.getLevel () "," Retrieve the current level. <br /><br />"
"android.graphics.drawable.Drawable.getConstantState () "," Return a Drawable.ConstantState instance that holds the shared state of this Drawable. <br /><br />"
"android.graphics.drawable.Drawable.draw (Canvas canvas)   Draw in its bounds  (set via setBounds) respecting optional effects such as alpha  (set via setAlpha) and color filter  (set via setColorFilter) "," Draw in its bounds (set via setBounds) respecting optional effects such as alpha (set via setAlpha) and color filter (set via setColorFilter). <br /><br />"
"android.graphics.drawable.Drawable.unscheduleSelf (Runnable what) "," Use the current Drawable.Callback implementation to have this Drawable unscheduled. <br /><br />"
"android.graphics.drawable.Drawable.getAlpha () "," Gets the current alpha value for the drawable. <br /><br />"
"android.graphics.drawable.Drawable.invalidateSelf () "," Use the current Drawable.Callback implementation to have this Drawable redrawn. <br /><br />"
"android.graphics.drawable.Drawable.getChangingConfigurations () "," Return a mask of the configuration parameters for which this drawable may change, requiring that it be re-created. <br /><br />"
"android.graphics.drawable.Drawable.getState () "," Describes the current state, as a union of primitve states, such as state_focused, state_selected, etc. <br /><br />"
"android.graphics.drawable.Drawable.inflate (Resources r, XmlPullParser parser, AttributeSet attrs) "," Inflate this Drawable from an XML resource. <br /><br />"
"android.graphics.drawable.Drawable.setVisible (boolean visible, boolean restart) "," Set whether this Drawable is visible. <br /><br />"
"android.graphics.drawable.Drawable.getIntrinsicHeight () "," Return the intrinsic height of the underlying drawable object. <br /><br />"
"android.graphics.drawable.Drawable.setTintMode (PorterDuff.Mode tintMode) "," Specifies a tint blending mode for this drawable. <br /><br />"
"android.graphics.drawable.Drawable.clearColorFilter () "," Removes the color filter for this drawable. <br /><br />"
"android.graphics.drawable.Drawable.getOutline (Outline outline) "," Called to get the drawable to populate the Outline that defines its drawing area. <br /><br />"
"android.graphics.drawable.Drawable.getTransparentRegion () "," Returns a Region representing the part of the Drawable that is completely transparent. <br /><br />"
"android.graphics.drawable.Drawable.getBounds () "," Return the drawable's bounds Rect. <br /><br />"
"android.graphics.drawable.Drawable.getMinimumHeight () "," Returns the minimum height suggested by this Drawable. <br /><br />"
"android.graphics.drawable.Drawable.resolveOpacity (int op1, int op2) "," Return the appropriate opacity value for two source opacities. <br /><br />"
"android.graphics.drawable.Drawable.isVisible () "," no description <br /><br />"
"android.graphics.drawable.Drawable.isStateful () "," Indicates whether this drawable will change its appearance based on state. <br /><br />"
"android.graphics.drawable.Drawable.jumpToCurrentState () "," If this Drawable does transition animations between states, ask that it immediately jump to the current state and skip any active animations. <br /><br />"
"android.graphics.drawable.Drawable.setAutoMirrored (boolean mirrored)   Set whether this Drawable is automatically mirrored when its layout direction is RTL  (right-to left) "," Set whether this Drawable is automatically mirrored when its layout direction is RTL (right-to left). <br /><br />"
"android.graphics.drawable.Drawable.canApplyTheme () "," no description <br /><br />"
"android.graphics.drawable.Drawable.createFromPath (String pathName) "," Create a drawable from file path name. <br /><br />"
"android.graphics.drawable.Drawable.setState (int[] stateSet) "," Specify a set of states for the drawable. <br /><br />"
"android.graphics.drawable.Drawable.isAutoMirrored () "," Tells if this Drawable will be automatically mirrored when its layout direction is RTL right-to-left. <br /><br />"
"android.graphics.drawable.Drawable.setChangingConfigurations (int configs) "," Set a mask of the configuration parameters for which this drawable may change, requiring that it be re-created. <br /><br />"
"android.graphics.drawable.Drawable.inflate (Resources r, XmlPullParser parser, AttributeSet attrs, Resources.Theme theme) "," Inflate this Drawable from an XML resource optionally styled by a theme. <br /><br />"
"android.graphics.drawable.Drawable.createFromXmlInner (Resources r, XmlPullParser parser, AttributeSet attrs) "," Create from inside an XML document. <br /><br />"
"android.graphics.drawable.Drawable.copyBounds (Rect bounds)   Return a copy of the drawable's bounds in the specified Rect  (allocated by the caller) "," Return a copy of the drawable's bounds in the specified Rect (allocated by the caller). <br /><br />"
"android.graphics.drawable.Drawable.getDirtyBounds () "," Return the drawable's dirty bounds Rect. <br /><br />"
"android.graphics.drawable.Drawable.createFromXml (Resources r, XmlPullParser parser) "," Create a drawable from an XML document. <br /><br />"
"android.graphics.drawable.Drawable.createFromResourceStream (Resources res, TypedValue value, InputStream is, String srcName) "," Create a drawable from an inputstream, using the given resources and value to determine density information. <br /><br />"
"android.graphics.drawable.Drawable.getOpacity () "," Return the opacity/transparency of this Drawable. <br /><br />"
"android.graphics.drawable.Drawable.getMinimumWidth () "," Returns the minimum width suggested by this Drawable. <br /><br />"
"android.graphics.drawable.Drawable.createFromStream (InputStream is, String srcName) "," Create a drawable from an inputstream <br /><br />"
"android.graphics.drawable.Drawable.setTint (int tint) "," Specifies a tint for this drawable. <br /><br />"
"android.graphics.drawable.Drawable.setColorFilter (int color, PorterDuff.Mode mode) "," Specify a color and Porter-Duff mode to be the color filter for this drawable. <br /><br />"
"android.graphics.drawable.Drawable.setDither (boolean dither) "," Set to true to have the drawable dither its colors when drawn to a device with fewer than 8-bits per color component. <br /><br />"
"android.graphics.drawable.Drawable.setBounds (Rect bounds) "," Specify a bounding rectangle for the Drawable. <br /><br />"
"android.graphics.drawable.Drawable.createFromXml (Resources r, XmlPullParser parser, Resources.Theme theme) "," Create a drawable from an XML document using an optional Resources.Theme. <br /><br />"
"android.graphics.drawable.Drawable.setTintList (ColorStateList tint) "," Specifies a tint for this drawable as a color state list. <br /><br />"
"android.graphics.drawable.Drawable.getColorFilter () "," Returns the current color filter, or null if none set. <br /><br />"
"android.graphics.drawable.Drawable.setHotspotBounds (int left, int top, int right, int bottom) "," Sets the bounds to which the hotspot is constrained, if they should be different from the drawable bounds. <br /><br />"
"android.graphics.drawable.Drawable.setFilterBitmap (boolean filter)   Set to true to have the drawable filter its bitmap when scaled or rotated  (for drawables that use bitmaps) "," Set to true to have the drawable filter its bitmap when scaled or rotated (for drawables that use bitmaps). <br /><br />"
"android.graphics.drawable.Drawable.mutate () "," Make this drawable mutable. <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.getOpacity () "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.getExitFadeDuration () "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.isConstantSize () "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.isStateful () "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.getChild (int index) "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.canConstantState () "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.setConstantSize (boolean constant) "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.growArray (int oldSize, int newSize) "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.canApplyTheme () "," Return whether this constant state can have a theme applied. <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.addChild (Drawable dr) "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.getConstantHeight () "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.getConstantMinimumHeight () "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.getChildren () "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.getConstantPadding () "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.getConstantMinimumWidth () "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.getChangingConfigurations ()   Return a bit mask of configuration changes that will impact this drawable  (and thus require completely reloading it) "," Return a bit mask of configuration changes that will impact this drawable (and thus require completely reloading it). <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.setExitFadeDuration (int duration) "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.setVariablePadding (boolean variable)   A boolean value indicating whether to use the maximum padding value of all frames in the set  (false), or to use the padding value of the frame being shown  (true) "," A boolean value indicating whether to use the maximum padding value of all frames in the set (false), or to use the padding value of the frame being shown (true). <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.getChildCount () "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.getEnterFadeDuration () "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.setEnterFadeDuration (int duration) "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.DrawableContainerState.getConstantWidth () "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.setColorFilter (ColorFilter cf) "," Specify an optional color filter for the drawable. <br /><br />"
"android.graphics.drawable.DrawableContainer.getIntrinsicWidth () "," Return the intrinsic width of the underlying drawable object. <br /><br />"
"android.graphics.drawable.DrawableContainer.setAlpha (int alpha) "," Specify an alpha value for the drawable. <br /><br />"
"android.graphics.drawable.DrawableContainer.getPadding (Rect padding) "," Return in padding the insets suggested by this Drawable for placing content inside the drawable's bounds. <br /><br />"
"android.graphics.drawable.DrawableContainer.isStateful () "," Indicates whether this drawable will change its appearance based on state. <br /><br />"
"android.graphics.drawable.DrawableContainer.invalidateDrawable (Drawable who) "," Called when the drawable needs to be redrawn. <br /><br />"
"android.graphics.drawable.DrawableContainer.jumpToCurrentState () "," If this Drawable does transition animations between states, ask that it immediately jump to the current state and skip any active animations. <br /><br />"
"android.graphics.drawable.DrawableContainer.setAutoMirrored (boolean mirrored)   Set whether this Drawable is automatically mirrored when its layout direction is RTL  (right-to left) "," Set whether this Drawable is automatically mirrored when its layout direction is RTL (right-to left). <br /><br />"
"android.graphics.drawable.DrawableContainer.canApplyTheme () "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.scheduleDrawable (Drawable who, Runnable what, long when) "," A Drawable can call this to schedule the next frame of its animation. <br /><br />"
"android.graphics.drawable.DrawableContainer.setHotspot (float x, float y) "," Specifies the hotspot's location within the drawable. <br /><br />"
"android.graphics.drawable.DrawableContainer.getCurrent () "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.isAutoMirrored () "," Tells if this Drawable will be automatically mirrored when its layout direction is RTL right-to-left. <br /><br />"
"android.graphics.drawable.DrawableContainer.selectDrawable (int idx) "," no description <br /><br />"
"android.graphics.drawable.DrawableContainer.setExitFadeDuration (int ms) "," Change the global fade duration when a new drawable is leaving the scene. <br /><br />"
"android.graphics.drawable.DrawableContainer.unscheduleDrawable (Drawable who, Runnable what)   A Drawable can call this to unschedule an action previously scheduled with scheduleDrawable (Drawable, Runnable, long) "," A Drawable can call this to unschedule an action previously scheduled with scheduleDrawable(Drawable, Runnable, long). <br /><br />"
"android.graphics.drawable.DrawableContainer.getConstantState () "," Return a Drawable.ConstantState instance that holds the shared state of this Drawable. <br /><br />"
"android.graphics.drawable.DrawableContainer.draw (Canvas canvas)   Draw in its bounds  (set via setBounds) respecting optional effects such as alpha  (set via setAlpha) and color filter  (set via setColorFilter) "," Draw in its bounds (set via setBounds) respecting optional effects such as alpha (set via setAlpha) and color filter (set via setColorFilter). <br /><br />"
"android.graphics.drawable.DrawableContainer.getAlpha () "," Gets the current alpha value for the drawable. <br /><br />"
"android.graphics.drawable.DrawableContainer.applyTheme (Resources.Theme theme) "," Applies the specified theme to this Drawable and its children. <br /><br />"
"android.graphics.drawable.DrawableContainer.getOpacity () "," Return the opacity/transparency of this Drawable. <br /><br />"
"android.graphics.drawable.DrawableContainer.getChangingConfigurations () "," Return a mask of the configuration parameters for which this drawable may change, requiring that it be re-created. <br /><br />"
"android.graphics.drawable.DrawableContainer.getMinimumWidth () "," Returns the minimum width suggested by this Drawable. <br /><br />"
"android.graphics.drawable.DrawableContainer.setVisible (boolean visible, boolean restart) "," Set whether this Drawable is visible. <br /><br />"
"android.graphics.drawable.DrawableContainer.getIntrinsicHeight () "," Return the intrinsic height of the underlying drawable object. <br /><br />"
"android.graphics.drawable.DrawableContainer.setTintMode (PorterDuff.Mode tintMode) "," Specifies a tint blending mode for this drawable. <br /><br />"
"android.graphics.drawable.DrawableContainer.setDither (boolean dither) "," Set to true to have the drawable dither its colors when drawn to a device with fewer than 8-bits per color component. <br /><br />"
"android.graphics.drawable.DrawableContainer.setEnterFadeDuration (int ms) "," Change the global fade duration when a new drawable is entering the scene. <br /><br />"
"android.graphics.drawable.DrawableContainer.setTintList (ColorStateList tint) "," Specifies a tint for this drawable as a color state list. <br /><br />"
"android.graphics.drawable.DrawableContainer.getOutline (Outline outline) "," Called to get the drawable to populate the Outline that defines its drawing area. <br /><br />"
"android.graphics.drawable.DrawableContainer.setHotspotBounds (int left, int top, int right, int bottom) "," Sets the bounds to which the hotspot is constrained, if they should be different from the drawable bounds. <br /><br />"
"android.graphics.drawable.DrawableContainer.getMinimumHeight () "," Returns the minimum height suggested by this Drawable. <br /><br />"
"android.graphics.drawable.DrawableContainer.mutate () "," Make this drawable mutable. <br /><br />"
"android.graphics.drawable.GradientDrawable.setColorFilter (ColorFilter cf) "," Specify an optional color filter for the drawable. <br /><br />"
"android.graphics.drawable.GradientDrawable.setStroke (int width, int color) "," Set the stroke width and color for the drawable. <br /><br />"
"android.graphics.drawable.GradientDrawable.getIntrinsicWidth () "," Return the intrinsic width of the underlying drawable object. <br /><br />"
"android.graphics.drawable.GradientDrawable.setAlpha (int alpha) "," Specify an alpha value for the drawable. <br /><br />"
"android.graphics.drawable.GradientDrawable.getOrientation () "," Returns the orientation of the gradient defined in this drawable. <br /><br />"
"android.graphics.drawable.GradientDrawable.getPadding (Rect padding) "," Return in padding the insets suggested by this Drawable for placing content inside the drawable's bounds. <br /><br />"
"android.graphics.drawable.GradientDrawable.isStateful () "," Indicates whether this drawable will change its appearance based on state. <br /><br />"
"android.graphics.drawable.GradientDrawable.setColors (int[] colors) "," Sets the colors used to draw the gradient. <br /><br />"
"android.graphics.drawable.GradientDrawable.setOrientation (GradientDrawable.Orientation orientation) "," Changes the orientation of the gradient defined in this drawable. <br /><br />"
"android.graphics.drawable.GradientDrawable.applyTheme (Resources.Theme t) "," Applies the specified theme to this Drawable and its children. <br /><br />"
"android.graphics.drawable.GradientDrawable.canApplyTheme () "," no description <br /><br />"
"android.graphics.drawable.GradientDrawable.setStroke (int width, int color, float dashWidth, float dashGap) "," Set the stroke width and color for the drawable. <br /><br />"
"android.graphics.drawable.GradientDrawable.setCornerRadius (float radius) "," Specify radius for the corners of the gradient. <br /><br />"
"android.graphics.drawable.GradientDrawable.inflate (Resources r, XmlPullParser parser, AttributeSet attrs, Resources.Theme theme) "," Inflate this Drawable from an XML resource optionally styled by a theme. <br /><br />"
"android.graphics.drawable.GradientDrawable.setShape (int shape) "," Sets the type of shape used to draw the gradient. <br /><br />"
"android.graphics.drawable.GradientDrawable.getConstantState () "," Return a Drawable.ConstantState instance that holds the shared state of this Drawable. <br /><br />"
"android.graphics.drawable.GradientDrawable.draw (Canvas canvas)   Draw in its bounds  (set via setBounds) respecting optional effects such as alpha  (set via setAlpha) and color filter  (set via setColorFilter) "," Draw in its bounds (set via setBounds) respecting optional effects such as alpha (set via setAlpha) and color filter (set via setColorFilter). <br /><br />"
"android.graphics.drawable.GradientDrawable.setCornerRadii (float[] radii) "," Specify radii for each of the 4 corners. <br /><br />"
"android.graphics.drawable.GradientDrawable.setStroke (int width, ColorStateList colorStateList) "," Set the stroke width and color state list for the drawable. <br /><br />"
"android.graphics.drawable.GradientDrawable.getAlpha () "," Gets the current alpha value for the drawable. <br /><br />"
"android.graphics.drawable.GradientDrawable.setGradientCenter (float x, float y) "," Sets the center location of the gradient. <br /><br />"
"android.graphics.drawable.GradientDrawable.getOpacity () "," Return the opacity/transparency of this Drawable. <br /><br />"
"android.graphics.drawable.GradientDrawable.getChangingConfigurations () "," Return a mask of the configuration parameters for which this drawable may change, requiring that it be re-created. <br /><br />"
"android.graphics.drawable.GradientDrawable.setUseLevel (boolean useLevel) "," Sets whether or not this drawable will honor its level property. <br /><br />"
"android.graphics.drawable.GradientDrawable.setColor (ColorStateList colorStateList) "," Changes this drawable to use a single color state list instead of a gradient. <br /><br />"
"android.graphics.drawable.GradientDrawable.setGradientRadius (float gradientRadius) "," Sets the radius of the gradient. <br /><br />"
"android.graphics.drawable.GradientDrawable.setStroke (int width, ColorStateList colorStateList, float dashWidth, float dashGap) "," Set the stroke width and color state list for the drawable. <br /><br />"
"android.graphics.drawable.GradientDrawable.getIntrinsicHeight () "," Return the intrinsic height of the underlying drawable object. <br /><br />"
"android.graphics.drawable.GradientDrawable.getGradientRadius () "," Returns the radius of the gradient in pixels. <br /><br />"
"android.graphics.drawable.GradientDrawable.setTintMode (PorterDuff.Mode tintMode) "," Specifies a tint blending mode for this drawable. <br /><br />"
"android.graphics.drawable.GradientDrawable.setDither (boolean dither) "," Set to true to have the drawable dither its colors when drawn to a device with fewer than 8-bits per color component. <br /><br />"
"android.graphics.drawable.GradientDrawable.setSize (int width, int height) "," Sets the size of the shape drawn by this drawable. <br /><br />"
"android.graphics.drawable.GradientDrawable.setColor (int argb) "," Changes this drawable to use a single color instead of a gradient. <br /><br />"
"android.graphics.drawable.GradientDrawable.setTintList (ColorStateList tint) "," Specifies a tint for this drawable as a color state list. <br /><br />"
"android.graphics.drawable.GradientDrawable.getOutline (Outline outline) "," Called to get the drawable to populate the Outline that defines its drawing area. <br /><br />"
"android.graphics.drawable.GradientDrawable.setGradientType (int gradient) "," Sets the type of gradient used by this drawable.. <br /><br />"
"android.graphics.drawable.GradientDrawable.getColorFilter () "," Returns the current color filter, or null if none set. <br /><br />"
"android.graphics.drawable.GradientDrawable.mutate () "," Make this drawable mutable. <br /><br />"
"android.graphics.drawable.InsetDrawable.setColorFilter (ColorFilter cf) "," Specify an optional color filter for the drawable. <br /><br />"
"android.graphics.drawable.InsetDrawable.getIntrinsicWidth () "," Return the intrinsic width of the underlying drawable object. <br /><br />"
"android.graphics.drawable.InsetDrawable.setAlpha (int alpha) "," Specify an alpha value for the drawable. <br /><br />"
"android.graphics.drawable.InsetDrawable.getPadding (Rect padding) "," Return in padding the insets suggested by this Drawable for placing content inside the drawable's bounds. <br /><br />"
"android.graphics.drawable.InsetDrawable.isStateful () "," Indicates whether this drawable will change its appearance based on state. <br /><br />"
"android.graphics.drawable.InsetDrawable.applyTheme (Resources.Theme t) "," Applies the specified theme to this Drawable and its children. <br /><br />"
"android.graphics.drawable.InsetDrawable.invalidateDrawable (Drawable who) "," Called when the drawable needs to be redrawn. <br /><br />"
"android.graphics.drawable.InsetDrawable.canApplyTheme () "," no description <br /><br />"
"android.graphics.drawable.InsetDrawable.scheduleDrawable (Drawable who, Runnable what, long when) "," A Drawable can call this to schedule the next frame of its animation. <br /><br />"
"android.graphics.drawable.InsetDrawable.setHotspot (float x, float y) "," Specifies the hotspot's location within the drawable. <br /><br />"
"android.graphics.drawable.InsetDrawable.inflate (Resources r, XmlPullParser parser, AttributeSet attrs, Resources.Theme theme) "," Inflate this Drawable from an XML resource optionally styled by a theme. <br /><br />"
"android.graphics.drawable.InsetDrawable.unscheduleDrawable (Drawable who, Runnable what)   A Drawable can call this to unschedule an action previously scheduled with scheduleDrawable (Drawable, Runnable, long) "," A Drawable can call this to unschedule an action previously scheduled with scheduleDrawable(Drawable, Runnable, long). <br /><br />"
"android.graphics.drawable.InsetDrawable.getConstantState () "," Return a Drawable.ConstantState instance that holds the shared state of this Drawable. <br /><br />"
"android.graphics.drawable.InsetDrawable.draw (Canvas canvas)   Draw in its bounds  (set via setBounds) respecting optional effects such as alpha  (set via setAlpha) and color filter  (set via setColorFilter) "," Draw in its bounds (set via setBounds) respecting optional effects such as alpha (set via setAlpha) and color filter (set via setColorFilter). <br /><br />"
"android.graphics.drawable.InsetDrawable.getAlpha () "," Gets the current alpha value for the drawable. <br /><br />"
"android.graphics.drawable.InsetDrawable.getOpacity () "," Return the opacity/transparency of this Drawable. <br /><br />"
"android.graphics.drawable.InsetDrawable.getChangingConfigurations () "," Return a mask of the configuration parameters for which this drawable may change, requiring that it be re-created. <br /><br />"
"android.graphics.drawable.InsetDrawable.getDrawable () "," Returns the drawable wrapped by this InsetDrawable. <br /><br />"
"android.graphics.drawable.InsetDrawable.getIntrinsicHeight () "," Return the intrinsic height of the underlying drawable object. <br /><br />"
"android.graphics.drawable.InsetDrawable.setVisible (boolean visible, boolean restart) "," Set whether this Drawable is visible. <br /><br />"
"android.graphics.drawable.InsetDrawable.setTintMode (PorterDuff.Mode tintMode) "," Specifies a tint blending mode for this drawable. <br /><br />"
"android.graphics.drawable.InsetDrawable.getOutline (Outline outline) "," Called to get the drawable to populate the Outline that defines its drawing area. <br /><br />"
"android.graphics.drawable.InsetDrawable.setTintList (ColorStateList tint) "," Specifies a tint for this drawable as a color state list. <br /><br />"
"android.graphics.drawable.InsetDrawable.setHotspotBounds (int left, int top, int right, int bottom) "," Sets the bounds to which the hotspot is constrained, if they should be different from the drawable bounds. <br /><br />"
"android.graphics.drawable.InsetDrawable.mutate () "," Make this drawable mutable. <br /><br />"
"android.graphics.drawable.LayerDrawable.setColorFilter (ColorFilter cf) "," Specify an optional color filter for the drawable. <br /><br />"
"android.graphics.drawable.LayerDrawable.getIntrinsicWidth () "," Return the intrinsic width of the underlying drawable object. <br /><br />"
"android.graphics.drawable.LayerDrawable.setAlpha (int alpha) "," Specify an alpha value for the drawable. <br /><br />"
"android.graphics.drawable.LayerDrawable.getPadding (Rect padding) "," Return in padding the insets suggested by this Drawable for placing content inside the drawable's bounds. <br /><br />"
"android.graphics.drawable.LayerDrawable.isStateful () "," Indicates whether this drawable will change its appearance based on state. <br /><br />"
"android.graphics.drawable.LayerDrawable.setLayerInset (int index, int l, int t, int r, int b) "," Specifies the insets in pixels for the drawable at the specified index. <br /><br />"
"android.graphics.drawable.LayerDrawable.setDrawableByLayerId (int id, Drawable drawable)   Sets  (or replaces) "," Sets (or replaces) the Drawable for the layer with the given id. <br /><br />"
"android.graphics.drawable.LayerDrawable.applyTheme (Resources.Theme t) "," Applies the specified theme to this Drawable and its children. <br /><br />"
"android.graphics.drawable.LayerDrawable.getOutline (Outline outline)   Populates outline with the first available  (non-empty) "," Populates outline with the first available (non-empty) layer outline. <br /><br />"
"android.graphics.drawable.LayerDrawable.invalidateDrawable (Drawable who) "," Called when the drawable needs to be redrawn. <br /><br />"
"android.graphics.drawable.LayerDrawable.setAutoMirrored (boolean mirrored)   Set whether this Drawable is automatically mirrored when its layout direction is RTL  (right-to left) "," Set whether this Drawable is automatically mirrored when its layout direction is RTL (right-to left). <br /><br />"
"android.graphics.drawable.LayerDrawable.canApplyTheme () "," no description <br /><br />"
"android.graphics.drawable.LayerDrawable.scheduleDrawable (Drawable who, Runnable what, long when) "," A Drawable can call this to schedule the next frame of its animation. <br /><br />"
"android.graphics.drawable.LayerDrawable.getDrawable (int index) "," Returns the drawable at the specified layer index. <br /><br />"
"android.graphics.drawable.LayerDrawable.setHotspot (float x, float y) "," Specifies the hotspot's location within the drawable. <br /><br />"
"android.graphics.drawable.LayerDrawable.getPaddingMode () "," no description <br /><br />"
"android.graphics.drawable.LayerDrawable.isAutoMirrored () "," Tells if this Drawable will be automatically mirrored when its layout direction is RTL right-to-left. <br /><br />"
"android.graphics.drawable.LayerDrawable.inflate (Resources r, XmlPullParser parser, AttributeSet attrs, Resources.Theme theme) "," Inflate this Drawable from an XML resource optionally styled by a theme. <br /><br />"
"android.graphics.drawable.LayerDrawable.setOpacity (int opacity) "," Sets the opacity of this drawable directly, instead of collecting the states from the layers <br /><br />"
"android.graphics.drawable.LayerDrawable.unscheduleDrawable (Drawable who, Runnable what)   A Drawable can call this to unschedule an action previously scheduled with scheduleDrawable (Drawable, Runnable, long) "," A Drawable can call this to unschedule an action previously scheduled with scheduleDrawable(Drawable, Runnable, long). <br /><br />"
"android.graphics.drawable.LayerDrawable.getConstantState () "," Return a Drawable.ConstantState instance that holds the shared state of this Drawable. <br /><br />"
"android.graphics.drawable.LayerDrawable.draw (Canvas canvas)   Draw in its bounds  (set via setBounds) respecting optional effects such as alpha  (set via setAlpha) and color filter  (set via setColorFilter) "," Draw in its bounds (set via setBounds) respecting optional effects such as alpha (set via setAlpha) and color filter (set via setColorFilter). <br /><br />"
"android.graphics.drawable.LayerDrawable.getAlpha () "," Gets the current alpha value for the drawable. <br /><br />"
"android.graphics.drawable.LayerDrawable.getChangingConfigurations () "," Return a mask of the configuration parameters for which this drawable may change, requiring that it be re-created. <br /><br />"
"android.graphics.drawable.LayerDrawable.getOpacity () "," Return the opacity/transparency of this Drawable. <br /><br />"
"android.graphics.drawable.LayerDrawable.setVisible (boolean visible, boolean restart) "," Set whether this Drawable is visible. <br /><br />"
"android.graphics.drawable.LayerDrawable.getIntrinsicHeight () "," Return the intrinsic height of the underlying drawable object. <br /><br />"
"android.graphics.drawable.LayerDrawable.setTintMode (PorterDuff.Mode tintMode) "," Specifies a tint blending mode for this drawable. <br /><br />"
"android.graphics.drawable.LayerDrawable.setPaddingMode (int mode) "," Specifies how layer padding should affect the bounds of subsequent layers. <br /><br />"
"android.graphics.drawable.LayerDrawable.setDither (boolean dither) "," Set to true to have the drawable dither its colors when drawn to a device with fewer than 8-bits per color component. <br /><br />"
"android.graphics.drawable.LayerDrawable.getId (int index) "," Returns the id of the specified layer. <br /><br />"
"android.graphics.drawable.LayerDrawable.getNumberOfLayers () "," Returns the number of layers contained within this. <br /><br />"
"android.graphics.drawable.LayerDrawable.setTintList (ColorStateList tint) "," Specifies a tint for this drawable as a color state list. <br /><br />"
"android.graphics.drawable.LayerDrawable.setId (int index, int id) "," Sets the ID of a layer. <br /><br />"
"android.graphics.drawable.LayerDrawable.setHotspotBounds (int left, int top, int right, int bottom) "," Sets the bounds to which the hotspot is constrained, if they should be different from the drawable bounds. <br /><br />"
"android.graphics.drawable.LayerDrawable.findDrawableByLayerId (int id) "," Looks for a layer with the given ID and returns its Drawable. <br /><br />"
"android.graphics.drawable.LayerDrawable.mutate () "," Make this drawable mutable. <br /><br />"
"android.graphics.drawable.LevelListDrawable.inflate (Resources r, XmlPullParser parser, AttributeSet attrs, Resources.Theme theme) "," Inflate this Drawable from an XML resource optionally styled by a theme. <br /><br />"
"android.graphics.drawable.LevelListDrawable.addLevel (int low, int high, Drawable drawable) "," no description <br /><br />"
"android.graphics.drawable.LevelListDrawable.mutate () "," Make this drawable mutable. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.setColorFilter (ColorFilter cf) "," Specify an optional color filter for the drawable. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.getIntrinsicHeight ()   Retrieves the height of the source .png file  (before resizing) "," Retrieves the height of the source .png file (before resizing). <br /><br />"
"android.graphics.drawable.NinePatchDrawable.setAlpha (int alpha) "," Specify an alpha value for the drawable. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.setTargetDensity (int density) "," Set the density at which this drawable will be rendered. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.getPadding (Rect padding) "," Return in padding the insets suggested by this Drawable for placing content inside the drawable's bounds. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.isStateful () "," Indicates whether this drawable will change its appearance based on state. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.applyTheme (Resources.Theme t) "," Applies the specified theme to this Drawable and its children. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.setAutoMirrored (boolean mirrored)   Set whether this Drawable is automatically mirrored when its layout direction is RTL  (right-to left) "," Set whether this Drawable is automatically mirrored when its layout direction is RTL (right-to left). <br /><br />"
"android.graphics.drawable.NinePatchDrawable.canApplyTheme () "," no description <br /><br />"
"android.graphics.drawable.NinePatchDrawable.isAutoMirrored () "," Tells if this Drawable will be automatically mirrored when its layout direction is RTL right-to-left. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.inflate (Resources r, XmlPullParser parser, AttributeSet attrs, Resources.Theme theme) "," Inflate this Drawable from an XML resource optionally styled by a theme. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.getConstantState () "," Return a Drawable.ConstantState instance that holds the shared state of this Drawable. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.draw (Canvas canvas)   Draw in its bounds  (set via setBounds) respecting optional effects such as alpha  (set via setAlpha) and color filter  (set via setColorFilter) "," Draw in its bounds (set via setBounds) respecting optional effects such as alpha (set via setAlpha) and color filter (set via setColorFilter). <br /><br />"
"android.graphics.drawable.NinePatchDrawable.setTargetDensity (Canvas canvas) "," Set the density scale at which this drawable will be rendered. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.setTargetDensity (DisplayMetrics metrics) "," Set the density scale at which this drawable will be rendered. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.getAlpha () "," Gets the current alpha value for the drawable. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.getOpacity () "," Returns a graphics.PixelFormat value of OPAQUE or TRANSLUCENT. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.getChangingConfigurations () "," Return a mask of the configuration parameters for which this drawable may change, requiring that it be re-created. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.getMinimumWidth () "," Returns the minimum width suggested by this Drawable. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.setTintMode (PorterDuff.Mode tintMode) "," Specifies a tint blending mode for this drawable. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.getPaint () "," no description <br /><br />"
"android.graphics.drawable.NinePatchDrawable.setDither (boolean dither) "," Set to true to have the drawable dither its colors when drawn to a device with fewer than 8-bits per color component. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.setTintList (ColorStateList tint) "," Specifies a tint for this drawable as a color state list. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.getOutline (Outline outline) "," Called to get the drawable to populate the Outline that defines its drawing area. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.getIntrinsicWidth ()   Retrieves the width of the source .png file  (before resizing) "," Retrieves the width of the source .png file (before resizing). <br /><br />"
"android.graphics.drawable.NinePatchDrawable.getTransparentRegion () "," Returns a Region representing the part of the Drawable that is completely transparent. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.getMinimumHeight () "," Returns the minimum height suggested by this Drawable. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.mutate () "," Make this drawable mutable. <br /><br />"
"android.graphics.drawable.NinePatchDrawable.setFilterBitmap (boolean filter)   Set to true to have the drawable filter its bitmap when scaled or rotated  (for drawables that use bitmaps) "," Set to true to have the drawable filter its bitmap when scaled or rotated (for drawables that use bitmaps). <br /><br />"
"android.graphics.drawable.PaintDrawable.setCornerRadius (float radius) "," Specify radius for the corners of the rectangle. <br /><br />"
"android.graphics.drawable.PaintDrawable.setCornerRadii (float[] radii) "," Specify radii for each of the 4 corners. <br /><br />"
"android.graphics.drawable.PictureDrawable.setDither (boolean dither) "," Set to true to have the drawable dither its colors when drawn to a device with fewer than 8-bits per color component. <br /><br />"
"android.graphics.drawable.PictureDrawable.getOpacity () "," Return the opacity/transparency of this Drawable. <br /><br />"
"android.graphics.drawable.PictureDrawable.getIntrinsicWidth () "," Return the intrinsic width of the underlying drawable object. <br /><br />"
"android.graphics.drawable.PictureDrawable.setColorFilter (ColorFilter colorFilter) "," Specify an optional color filter for the drawable. <br /><br />"
"android.graphics.drawable.PictureDrawable.getPicture () "," Return the picture associated with the drawable. <br /><br />"
"android.graphics.drawable.PictureDrawable.setAlpha (int alpha) "," Specify an alpha value for the drawable. <br /><br />"
"android.graphics.drawable.PictureDrawable.setPicture (Picture picture) "," Associate a picture with this drawable. <br /><br />"
"android.graphics.drawable.PictureDrawable.draw (Canvas canvas)   Draw in its bounds  (set via setBounds) respecting optional effects such as alpha  (set via setAlpha) and color filter  (set via setColorFilter) "," Draw in its bounds (set via setBounds) respecting optional effects such as alpha (set via setAlpha) and color filter (set via setColorFilter). <br /><br />"
"android.graphics.drawable.PictureDrawable.getIntrinsicHeight () "," Return the intrinsic height of the underlying drawable object. <br /><br />"
"android.graphics.drawable.PictureDrawable.setFilterBitmap (boolean filter)   Set to true to have the drawable filter its bitmap when scaled or rotated  (for drawables that use bitmaps) "," Set to true to have the drawable filter its bitmap when scaled or rotated (for drawables that use bitmaps). <br /><br />"
"android.graphics.drawable.RippleDrawable.setColorFilter (ColorFilter cf) "," Specify an optional color filter for the drawable. <br /><br />"
"android.graphics.drawable.RippleDrawable.getOpacity () "," Return the opacity/transparency of this Drawable. <br /><br />"
"android.graphics.drawable.RippleDrawable.setAlpha (int alpha) "," Specify an alpha value for the drawable. <br /><br />"
"android.graphics.drawable.RippleDrawable.isStateful () "," Indicates whether this drawable will change its appearance based on state. <br /><br />"
"android.graphics.drawable.RippleDrawable.setVisible (boolean visible, boolean restart) "," Set whether this Drawable is visible. <br /><br />"
"android.graphics.drawable.RippleDrawable.setDrawableByLayerId (int id, Drawable drawable)   Sets  (or replaces) "," Sets (or replaces) the Drawable for the layer with the given id. <br /><br />"
"android.graphics.drawable.RippleDrawable.applyTheme (Resources.Theme t) "," Applies the specified theme to this Drawable and its children. <br /><br />"
"android.graphics.drawable.RippleDrawable.jumpToCurrentState () "," If this Drawable does transition animations between states, ask that it immediately jump to the current state and skip any active animations. <br /><br />"
"android.graphics.drawable.RippleDrawable.canApplyTheme () "," no description <br /><br />"
"android.graphics.drawable.RippleDrawable.setPaddingMode (int mode) "," Specifies how layer padding should affect the bounds of subsequent layers. <br /><br />"
"android.graphics.drawable.RippleDrawable.setHotspot (float x, float y) "," Specifies the hotspot's location within the drawable. <br /><br />"
"android.graphics.drawable.RippleDrawable.inflate (Resources r, XmlPullParser parser, AttributeSet attrs, Resources.Theme theme) "," Inflate this Drawable from an XML resource optionally styled by a theme. <br /><br />"
"android.graphics.drawable.RippleDrawable.getOutline (Outline outline) "," Populates outline with the first available layer outline, excluding the mask layer. <br /><br />"
"android.graphics.drawable.RippleDrawable.draw (Canvas canvas) "," Optimized for drawing ripples with a mask layer and optional content. <br /><br />"
"android.graphics.drawable.RippleDrawable.getConstantState () "," Return a Drawable.ConstantState instance that holds the shared state of this Drawable. <br /><br />"
"android.graphics.drawable.RippleDrawable.getDirtyBounds () "," Return the drawable's dirty bounds Rect. <br /><br />"
"android.graphics.drawable.RippleDrawable.setHotspotBounds (int left, int top, int right, int bottom) "," Sets the bounds to which the hotspot is constrained, if they should be different from the drawable bounds. <br /><br />"
"android.graphics.drawable.RippleDrawable.setColor (ColorStateList color) "," no description <br /><br />"
"android.graphics.drawable.RippleDrawable.invalidateSelf () "," Use the current Drawable.Callback implementation to have this Drawable redrawn. <br /><br />"
"android.graphics.drawable.RippleDrawable.mutate () "," Make this drawable mutable. <br /><br />"
"android.graphics.drawable.RotateDrawable.setColorFilter (ColorFilter cf) "," Specify an optional color filter for the drawable. <br /><br />"
"android.graphics.drawable.RotateDrawable.getIntrinsicWidth () "," Return the intrinsic width of the underlying drawable object. <br /><br />"
"android.graphics.drawable.RotateDrawable.setAlpha (int alpha) "," Specify an alpha value for the drawable. <br /><br />"
"android.graphics.drawable.RotateDrawable.getPadding (Rect padding) "," Return in padding the insets suggested by this Drawable for placing content inside the drawable's bounds. <br /><br />"
"android.graphics.drawable.RotateDrawable.setToDegrees (float toDegrees) "," Sets the end angle for rotation. <br /><br />"
"android.graphics.drawable.RotateDrawable.isStateful () "," Indicates whether this drawable will change its appearance based on state. <br /><br />"
"android.graphics.drawable.RotateDrawable.setPivotY (float pivotY) "," Sets the Y position around which the drawable is rotated. <br /><br />"
"android.graphics.drawable.RotateDrawable.applyTheme (Resources.Theme t) "," Applies the specified theme to this Drawable and its children. <br /><br />"
"android.graphics.drawable.RotateDrawable.invalidateDrawable (Drawable who) "," Called when the drawable needs to be redrawn. <br /><br />"
"android.graphics.drawable.RotateDrawable.canApplyTheme () "," no description <br /><br />"
"android.graphics.drawable.RotateDrawable.isPivotYRelative () "," no description <br /><br />"
"android.graphics.drawable.RotateDrawable.scheduleDrawable (Drawable who, Runnable what, long when) "," A Drawable can call this to schedule the next frame of its animation. <br /><br />"
"android.graphics.drawable.RotateDrawable.isPivotXRelative () "," no description <br /><br />"
"android.graphics.drawable.RotateDrawable.inflate (Resources r, XmlPullParser parser, AttributeSet attrs, Resources.Theme theme) "," Inflate this Drawable from an XML resource optionally styled by a theme. <br /><br />"
"android.graphics.drawable.RotateDrawable.unscheduleDrawable (Drawable who, Runnable what)   A Drawable can call this to unschedule an action previously scheduled with scheduleDrawable (Drawable, Runnable, long) "," A Drawable can call this to unschedule an action previously scheduled with scheduleDrawable(Drawable, Runnable, long). <br /><br />"
"android.graphics.drawable.RotateDrawable.setPivotX (float pivotX) "," Sets the X position around which the drawable is rotated. <br /><br />"
"android.graphics.drawable.RotateDrawable.getConstantState () "," Return a Drawable.ConstantState instance that holds the shared state of this Drawable. <br /><br />"
"android.graphics.drawable.RotateDrawable.draw (Canvas canvas)   Draw in its bounds  (set via setBounds) respecting optional effects such as alpha  (set via setAlpha) and color filter  (set via setColorFilter) "," Draw in its bounds (set via setBounds) respecting optional effects such as alpha (set via setAlpha) and color filter (set via setColorFilter). <br /><br />"
"android.graphics.drawable.RotateDrawable.getToDegrees () "," no description <br /><br />"
"android.graphics.drawable.RotateDrawable.getAlpha () "," Gets the current alpha value for the drawable. <br /><br />"
"android.graphics.drawable.RotateDrawable.getOpacity () "," Return the opacity/transparency of this Drawable. <br /><br />"
"android.graphics.drawable.RotateDrawable.getChangingConfigurations () "," Return a mask of the configuration parameters for which this drawable may change, requiring that it be re-created. <br /><br />"
"android.graphics.drawable.RotateDrawable.getDrawable () "," no description <br /><br />"
"android.graphics.drawable.RotateDrawable.setVisible (boolean visible, boolean restart) "," Set whether this Drawable is visible. <br /><br />"
"android.graphics.drawable.RotateDrawable.getIntrinsicHeight () "," Return the intrinsic height of the underlying drawable object. <br /><br />"
"android.graphics.drawable.RotateDrawable.setPivotYRelative (boolean relative) "," Sets whether the Y pivot value represents a fraction of the drawable height or an absolute value in pixels. <br /><br />"
"android.graphics.drawable.RotateDrawable.setTintMode (PorterDuff.Mode tintMode) "," Specifies a tint blending mode for this drawable. <br /><br />"
"android.graphics.drawable.RotateDrawable.setFromDegrees (float fromDegrees) "," Sets the start angle for rotation. <br /><br />"
"android.graphics.drawable.RotateDrawable.getPivotX () "," no description <br /><br />"
"android.graphics.drawable.RotateDrawable.setTintList (ColorStateList tint) "," Specifies a tint for this drawable as a color state list. <br /><br />"
"android.graphics.drawable.RotateDrawable.getFromDegrees () "," no description <br /><br />"
"android.graphics.drawable.RotateDrawable.setPivotXRelative (boolean relative) "," Sets whether the X pivot value represents a fraction of the drawable width or an absolute value in pixels. <br /><br />"
"android.graphics.drawable.RotateDrawable.setDrawable (Drawable drawable) "," Sets the drawable rotated by this RotateDrawable. <br /><br />"
"android.graphics.drawable.RotateDrawable.getPivotY () "," no description <br /><br />"
"android.graphics.drawable.RotateDrawable.mutate () "," Make this drawable mutable. <br /><br />"
"android.graphics.drawable.ScaleDrawable.setColorFilter (ColorFilter cf) "," Specify an optional color filter for the drawable. <br /><br />"
"android.graphics.drawable.ScaleDrawable.getChangingConfigurations () "," Return a mask of the configuration parameters for which this drawable may change, requiring that it be re-created. <br /><br />"
"android.graphics.drawable.ScaleDrawable.getOpacity () "," Return the opacity/transparency of this Drawable. <br /><br />"
"android.graphics.drawable.ScaleDrawable.getIntrinsicWidth () "," Return the intrinsic width of the underlying drawable object. <br /><br />"
"android.graphics.drawable.ScaleDrawable.setAlpha (int alpha) "," Specify an alpha value for the drawable. <br /><br />"
"android.graphics.drawable.ScaleDrawable.getPadding (Rect padding) "," Return in padding the insets suggested by this Drawable for placing content inside the drawable's bounds. <br /><br />"
"android.graphics.drawable.ScaleDrawable.isStateful () "," Indicates whether this drawable will change its appearance based on state. <br /><br />"
"android.graphics.drawable.ScaleDrawable.getDrawable () "," Returns the drawable scaled by this ScaleDrawable. <br /><br />"
"android.graphics.drawable.ScaleDrawable.setVisible (boolean visible, boolean restart) "," Set whether this Drawable is visible. <br /><br />"
"android.graphics.drawable.ScaleDrawable.getIntrinsicHeight () "," Return the intrinsic height of the underlying drawable object. <br /><br />"
"android.graphics.drawable.ScaleDrawable.invalidateDrawable (Drawable who) "," Called when the drawable needs to be redrawn. <br /><br />"
"android.graphics.drawable.ScaleDrawable.applyTheme (Resources.Theme t) "," Applies the specified theme to this Drawable and its children. <br /><br />"
"android.graphics.drawable.ScaleDrawable.canApplyTheme () "," no description <br /><br />"
"android.graphics.drawable.ScaleDrawable.setTintMode (PorterDuff.Mode tintMode) "," Specifies a tint blending mode for this drawable. <br /><br />"
"android.graphics.drawable.ScaleDrawable.scheduleDrawable (Drawable who, Runnable what, long when) "," A Drawable can call this to schedule the next frame of its animation. <br /><br />"
"android.graphics.drawable.ScaleDrawable.inflate (Resources r, XmlPullParser parser, AttributeSet attrs, Resources.Theme theme) "," Inflate this Drawable from an XML resource optionally styled by a theme. <br /><br />"
"android.graphics.drawable.ScaleDrawable.unscheduleDrawable (Drawable who, Runnable what)   A Drawable can call this to unschedule an action previously scheduled with scheduleDrawable (Drawable, Runnable, long) "," A Drawable can call this to unschedule an action previously scheduled with scheduleDrawable(Drawable, Runnable, long). <br /><br />"
"android.graphics.drawable.ScaleDrawable.setTintList (ColorStateList tint) "," Specifies a tint for this drawable as a color state list. <br /><br />"
"android.graphics.drawable.ScaleDrawable.draw (Canvas canvas)   Draw in its bounds  (set via setBounds) respecting optional effects such as alpha  (set via setAlpha) and color filter  (set via setColorFilter) "," Draw in its bounds (set via setBounds) respecting optional effects such as alpha (set via setAlpha) and color filter (set via setColorFilter). <br /><br />"
"android.graphics.drawable.ScaleDrawable.getConstantState () "," Return a Drawable.ConstantState instance that holds the shared state of this Drawable. <br /><br />"
"android.graphics.drawable.ScaleDrawable.getAlpha () "," Gets the current alpha value for the drawable. <br /><br />"
"android.graphics.drawable.ScaleDrawable.mutate () "," Make this drawable mutable. <br /><br />"
"android.graphics.drawable.ShapeDrawable.setColorFilter (ColorFilter cf) "," Specify an optional color filter for the drawable. <br /><br />"
"android.graphics.drawable.ShapeDrawable.getIntrinsicWidth () "," Return the intrinsic width of the underlying drawable object. <br /><br />"
"android.graphics.drawable.ShapeDrawable.setAlpha (int alpha) "," Set the alpha level for this drawable [0..255]. <br /><br />"
"android.graphics.drawable.ShapeDrawable.getPadding (Rect padding) "," Return in padding the insets suggested by this Drawable for placing content inside the drawable's bounds. <br /><br />"
"android.graphics.drawable.ShapeDrawable.isStateful () "," Indicates whether this drawable will change its appearance based on state. <br /><br />"
"android.graphics.drawable.ShapeDrawable.setIntrinsicHeight (int height)   Sets the intrinsic  (default) "," Sets the intrinsic (default) height for this shape. <br /><br />"
"android.graphics.drawable.ShapeDrawable.setShape (Shape s) "," Sets the Shape of this ShapeDrawable. <br /><br />"
"android.graphics.drawable.ShapeDrawable.setIntrinsicWidth (int width)   Sets the intrinsic  (default) "," Sets the intrinsic (default) width for this shape. <br /><br />"
"android.graphics.drawable.ShapeDrawable.applyTheme (Resources.Theme t) "," Applies the specified theme to this Drawable and its children. <br /><br />"
"android.graphics.drawable.ShapeDrawable.inflate (Resources r, XmlPullParser parser, AttributeSet attrs, Resources.Theme theme) "," Inflate this Drawable from an XML resource optionally styled by a theme. <br /><br />"
"android.graphics.drawable.ShapeDrawable.getConstantState () "," Return a Drawable.ConstantState instance that holds the shared state of this Drawable. <br /><br />"
"android.graphics.drawable.ShapeDrawable.draw (Canvas canvas)   Draw in its bounds  (set via setBounds) respecting optional effects such as alpha  (set via setAlpha) and color filter  (set via setColorFilter) "," Draw in its bounds (set via setBounds) respecting optional effects such as alpha (set via setAlpha) and color filter (set via setColorFilter). <br /><br />"
"android.graphics.drawable.ShapeDrawable.getAlpha () "," Gets the current alpha value for the drawable. <br /><br />"
"android.graphics.drawable.ShapeDrawable.getOpacity () "," Return the opacity/transparency of this Drawable. <br /><br />"
"android.graphics.drawable.ShapeDrawable.getChangingConfigurations () "," Return a mask of the configuration parameters for which this drawable may change, requiring that it be re-created. <br /><br />"
"android.graphics.drawable.ShapeDrawable.setPadding (Rect padding) "," Sets padding for this shape, defined by a Rect object. <br /><br />"
"android.graphics.drawable.ShapeDrawable.setPadding (int left, int top, int right, int bottom) "," Sets padding for the shape. <br /><br />"
"android.graphics.drawable.ShapeDrawable.setShaderFactory (ShapeDrawable.ShaderFactory fact) "," Sets a ShaderFactory to which requests for a Shader object will be made. <br /><br />"
"android.graphics.drawable.ShapeDrawable.getIntrinsicHeight () "," Return the intrinsic height of the underlying drawable object. <br /><br />"
"android.graphics.drawable.ShapeDrawable.setTintMode (PorterDuff.Mode tintMode) "," Specifies a tint blending mode for this drawable. <br /><br />"
"android.graphics.drawable.ShapeDrawable.getPaint () "," Returns the Paint used to draw the shape. <br /><br />"
"android.graphics.drawable.ShapeDrawable.setDither (boolean dither) "," Set to true to have the drawable dither its colors when drawn to a device with fewer than 8-bits per color component. <br /><br />"
"android.graphics.drawable.ShapeDrawable.getShape () "," Returns the Shape of this ShapeDrawable. <br /><br />"
"android.graphics.drawable.ShapeDrawable.setTintList (ColorStateList tint) "," Specifies a tint for this drawable as a color state list. <br /><br />"
"android.graphics.drawable.ShapeDrawable.getOutline (Outline outline) "," Called to get the drawable to populate the Outline that defines its drawing area. <br /><br />"
"android.graphics.drawable.ShapeDrawable.getShaderFactory () "," Returns the ShaderFactory used by this ShapeDrawable for requesting a Shader. <br /><br />"
"android.graphics.drawable.ShapeDrawable.mutate () "," Make this drawable mutable. <br /><br />"
"android.graphics.drawable.ShapeDrawable.ShaderFactory.resize (int width, int height) "," Returns the Shader to be drawn when a Drawable is drawn. <br /><br />"
"android.graphics.drawable.shapes.ArcShape.draw (Canvas canvas, Paint paint) "," Draw this shape into the provided Canvas, with the provided Paint. <br /><br />"
"android.graphics.drawable.shapes.OvalShape.draw (Canvas canvas, Paint paint) "," Draw this shape into the provided Canvas, with the provided Paint. <br /><br />"
"android.graphics.drawable.shapes.OvalShape.getOutline (Outline outline) "," Compute the Outline of the shape and return it in the supplied Outline parameter. <br /><br />"
"android.graphics.drawable.shapes.PathShape.draw (Canvas canvas, Paint paint) "," Draw this shape into the provided Canvas, with the provided Paint. <br /><br />"
"android.graphics.drawable.shapes.PathShape.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.graphics.drawable.shapes.RectShape.draw (Canvas canvas, Paint paint) "," Draw this shape into the provided Canvas, with the provided Paint. <br /><br />"
"android.graphics.drawable.shapes.RectShape.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.graphics.drawable.shapes.RectShape.getOutline (Outline outline) "," Compute the Outline of the shape and return it in the supplied Outline parameter. <br /><br />"
"android.graphics.drawable.shapes.RoundRectShape.draw (Canvas canvas, Paint paint) "," Draw this shape into the provided Canvas, with the provided Paint. <br /><br />"
"android.graphics.drawable.shapes.RoundRectShape.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.graphics.drawable.shapes.RoundRectShape.getOutline (Outline outline) "," Compute the Outline of the shape and return it in the supplied Outline parameter. <br /><br />"
"android.graphics.drawable.shapes.Shape.getHeight () "," Returns the height of the Shape. <br /><br />"
"android.graphics.drawable.shapes.Shape.draw (Canvas canvas, Paint paint) "," Draw this shape into the provided Canvas, with the provided Paint. <br /><br />"
"android.graphics.drawable.shapes.Shape.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.graphics.drawable.shapes.Shape.getOutline (Outline outline) "," Compute the Outline of the shape and return it in the supplied Outline parameter. <br /><br />"
"android.graphics.drawable.shapes.Shape.resize (float width, float height) "," Resizes the dimensions of this shape. <br /><br />"
"android.graphics.drawable.shapes.Shape.hasAlpha () "," Checks whether the Shape is opaque. <br /><br />"
"android.graphics.drawable.shapes.Shape.getWidth () "," Returns the width of the Shape. <br /><br />"
"android.graphics.drawable.StateListDrawable.inflate (Resources r, XmlPullParser parser, AttributeSet attrs, Resources.Theme theme) "," Inflate this Drawable from an XML resource optionally styled by a theme. <br /><br />"
"android.graphics.drawable.StateListDrawable.addState (int[] stateSet, Drawable drawable) "," Add a new image/string ID to the set of images. <br /><br />"
"android.graphics.drawable.StateListDrawable.isStateful () "," Indicates whether this drawable will change its appearance based on state. <br /><br />"
"android.graphics.drawable.StateListDrawable.mutate () "," Make this drawable mutable. <br /><br />"
"android.graphics.drawable.StateListDrawable.applyTheme (Resources.Theme theme) "," Applies the specified theme to this Drawable and its children. <br /><br />"
"android.graphics.drawable.TransitionDrawable.reverseTransition (int duration) "," Reverses the transition, picking up where the transition currently is. <br /><br />"
"android.graphics.drawable.TransitionDrawable.startTransition (int durationMillis) "," Begin the second layer on top of the first layer. <br /><br />"
"android.graphics.drawable.TransitionDrawable.draw (Canvas canvas)   Draw in its bounds  (set via setBounds) respecting optional effects such as alpha  (set via setAlpha) and color filter  (set via setColorFilter) "," Draw in its bounds (set via setBounds) respecting optional effects such as alpha (set via setAlpha) and color filter (set via setColorFilter). <br /><br />"
"android.graphics.drawable.TransitionDrawable.isCrossFadeEnabled () "," Indicates whether the cross fade is enabled for this transition. <br /><br />"
"android.graphics.drawable.TransitionDrawable.setCrossFadeEnabled (boolean enabled) "," Enables or disables the cross fade of the drawables. <br /><br />"
"android.graphics.drawable.TransitionDrawable.resetTransition () "," Show only the first layer. <br /><br />"
"android.graphics.drawable.VectorDrawable.getChangingConfigurations () "," Return a mask of the configuration parameters for which this drawable may change, requiring that it be re-created. <br /><br />"
"android.graphics.drawable.VectorDrawable.getOpacity () "," Return the opacity/transparency of this Drawable. <br /><br />"
"android.graphics.drawable.VectorDrawable.getIntrinsicWidth () "," Return the intrinsic width of the underlying drawable object. <br /><br />"
"android.graphics.drawable.VectorDrawable.setColorFilter (ColorFilter colorFilter) "," Specify an optional color filter for the drawable. <br /><br />"
"android.graphics.drawable.VectorDrawable.setAlpha (int alpha) "," Specify an alpha value for the drawable. <br /><br />"
"android.graphics.drawable.VectorDrawable.inflate (Resources res, XmlPullParser parser, AttributeSet attrs, Resources.Theme theme) "," Inflate this Drawable from an XML resource optionally styled by a theme. <br /><br />"
"android.graphics.drawable.VectorDrawable.isStateful () "," Indicates whether this drawable will change its appearance based on state. <br /><br />"
"android.graphics.drawable.VectorDrawable.getIntrinsicHeight () "," Return the intrinsic height of the underlying drawable object. <br /><br />"
"android.graphics.drawable.VectorDrawable.applyTheme (Resources.Theme t) "," Applies the specified theme to this Drawable and its children. <br /><br />"
"android.graphics.drawable.VectorDrawable.setAutoMirrored (boolean mirrored)   Set whether this Drawable is automatically mirrored when its layout direction is RTL  (right-to left) "," Set whether this Drawable is automatically mirrored when its layout direction is RTL (right-to left). <br /><br />"
"android.graphics.drawable.VectorDrawable.canApplyTheme () "," no description <br /><br />"
"android.graphics.drawable.VectorDrawable.setTintMode (PorterDuff.Mode tintMode) "," Specifies a tint blending mode for this drawable. <br /><br />"
"android.graphics.drawable.VectorDrawable.isAutoMirrored () "," Tells if this Drawable will be automatically mirrored when its layout direction is RTL right-to-left. <br /><br />"
"android.graphics.drawable.VectorDrawable.setTintList (ColorStateList tint) "," Specifies a tint for this drawable as a color state list. <br /><br />"
"android.graphics.drawable.VectorDrawable.draw (Canvas canvas)   Draw in its bounds  (set via setBounds) respecting optional effects such as alpha  (set via setAlpha) and color filter  (set via setColorFilter) "," Draw in its bounds (set via setBounds) respecting optional effects such as alpha (set via setAlpha) and color filter (set via setColorFilter). <br /><br />"
"android.graphics.drawable.VectorDrawable.getConstantState () "," Return a Drawable.ConstantState instance that holds the shared state of this Drawable. <br /><br />"
"android.graphics.drawable.VectorDrawable.getAlpha () "," Gets the current alpha value for the drawable. <br /><br />"
"android.graphics.drawable.VectorDrawable.mutate () "," Make this drawable mutable. <br /><br />"
"android.graphics.ImageFormat.getBitsPerPixel (int format) "," Use this function to retrieve the number of bits per pixel of an ImageFormat. <br /><br />"
"android.graphics.Interpolator.reset (int valueCount, int frameCount) "," Reset the Interpolator to have the specified number of values and keyFrames. <br /><br />"
"android.graphics.Interpolator.getKeyFrameCount () "," no description <br /><br />"
"android.graphics.Interpolator.timeToValues (float[] values)   Calls timeToValues (msec, values) with the msec set to now  (by calling  (int)SystemClock.uptimeMillis ().) "," Calls timeToValues(msec, values) with the msec set to now (by calling (int)SystemClock.uptimeMillis().) <br /><br />"
"android.graphics.Interpolator.reset (int valueCount)   Reset the Interpolator to have the specified number of values and an implicit keyFrame count of 2  (just a start and end) "," Reset the Interpolator to have the specified number of values and an implicit keyFrame count of 2 (just a start and end). <br /><br />"
"android.graphics.Interpolator.setRepeatMirror (float repeatCount, boolean mirror)   Set a repeat count  (which may be fractional) "," Set a repeat count (which may be fractional) for the interpolator, and whether the interpolator should mirror its repeats. <br /><br />"
"android.graphics.Interpolator.setKeyFrame (int index, int msec, float[] values)   Assign the keyFrame  (specified by index) a time value and an array of key values  (with an implicity blend array of [0, 0, 1, 1] giving linear transition to the next set of key values) "," Assign the keyFrame (specified by index) a time value and an array of key values (with an implicity blend array of [0, 0, 1, 1] giving linear transition to the next set of key values). <br /><br />"
"android.graphics.Interpolator.timeToValues (int msec, float[] values)   Given a millisecond time value  (msec), return the interpolated values and return whether the specified time was within the range of key times  (NORMAL), was before the first key time  (FREEZE_START) or after the last key time  (FREEZE_END) "," Given a millisecond time value (msec), return the interpolated values and return whether the specified time was within the range of key times (NORMAL), was before the first key time (FREEZE_START) or after the last key time (FREEZE_END). <br /><br />"
"android.graphics.Interpolator.setKeyFrame (int index, int msec, float[] values, float[] blend)   Assign the keyFrame  (specified by index) "," Assign the keyFrame (specified by index) a time value and an array of key values and blend array. <br /><br />"
"android.graphics.Interpolator.getValueCount () "," no description <br /><br />"
"android.graphics.LayerRasterizer.addLayer (Paint paint, float dx, float dy)   Add a new layer  (above any previous layers) "," Add a new layer (above any previous layers) to the rasterizer. <br /><br />"
"android.graphics.LayerRasterizer.addLayer (Paint paint) "," no description <br /><br />"
"android.graphics.Matrix.postSkew (float kx, float ky) "," Postconcats the matrix with the specified skew. <br /><br />"
"android.graphics.Matrix.mapPoints (float[] pts) "," Apply this matrix to the array of 2D points, and write the transformed points back into the array <br /><br />"
"android.graphics.Matrix.preScale (float sx, float sy) "," Preconcats the matrix with the specified scale. <br /><br />"
"android.graphics.Matrix.setSkew (float kx, float ky) "," Set the matrix to skew by sx and sy. <br /><br />"
"android.graphics.Matrix.postScale (float sx, float sy) "," Postconcats the matrix with the specified scale. <br /><br />"
"android.graphics.Matrix.setPolyToPoly (float[] src, int srcIndex, float[] dst, int dstIndex, int pointCount) "," Set the matrix such that the specified src points would map to the specified dst points. <br /><br />"
"android.graphics.Matrix.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.graphics.Matrix.preSkew (float kx, float ky) "," Preconcats the matrix with the specified skew. <br /><br />"
"android.graphics.Matrix.preRotate (float degrees, float px, float py) "," Preconcats the matrix with the specified rotation. <br /><br />"
"android.graphics.Matrix.setConcat (Matrix a, Matrix b) "," Set the matrix to the concatenation of the two specified matrices and return true. <br /><br />"
"android.graphics.Matrix.mapRadius (float radius) "," Return the mean radius of a circle after it has been mapped by this matrix. <br /><br />"
"android.graphics.Matrix.equals (Object obj) "," Returns true iff obj is a Matrix and its values equal our values. <br /><br />"
"android.graphics.Matrix.postConcat (Matrix other) "," Postconcats the matrix with the specified matrix. <br /><br />"
"android.graphics.Matrix.getValues (float[] values) "," Copy 9 values from the matrix into the array. <br /><br />"
"android.graphics.Matrix.toShortString () "," no description <br /><br />"
"android.graphics.Matrix.preScale (float sx, float sy, float px, float py) "," Preconcats the matrix with the specified scale. <br /><br />"
"android.graphics.Matrix.setSkew (float kx, float ky, float px, float py)   Set the matrix to skew by sx and sy, with a pivot point at  (px, py) "," Set the matrix to skew by sx and sy, with a pivot point at (px, py). <br /><br />"
"android.graphics.Matrix.rectStaysRect () "," Returns true if will map a rectangle to another rectangle. <br /><br />"
"android.graphics.Matrix.setSinCos (float sinValue, float cosValue, float px, float py)   Set the matrix to rotate by the specified sine and cosine values, with a pivot point at  (px, py) "," Set the matrix to rotate by the specified sine and cosine values, with a pivot point at (px, py). <br /><br />"
"android.graphics.Matrix.setSinCos (float sinValue, float cosValue) "," Set the matrix to rotate by the specified sine and cosine values. <br /><br />"
"android.graphics.Matrix.preSkew (float kx, float ky, float px, float py) "," Preconcats the matrix with the specified skew. <br /><br />"
"android.graphics.Matrix.mapRect (RectF dst, RectF src) "," Apply this matrix to the src rectangle, and write the transformed rectangle into dst. <br /><br />"
"android.graphics.Matrix.isAffine () "," Gets whether this matrix is affine. <br /><br />"
"android.graphics.Matrix.preConcat (Matrix other) "," Preconcats the matrix with the specified matrix. <br /><br />"
"android.graphics.Matrix.isIdentity () "," Returns true if the matrix is identity. <br /><br />"
"android.graphics.Matrix.set (Matrix src)    (deep) "," (deep) copy the src matrix into this matrix. <br /><br />"
"android.graphics.Matrix.postSkew (float kx, float ky, float px, float py) "," Postconcats the matrix with the specified skew. <br /><br />"
"android.graphics.Matrix.postRotate (float degrees) "," Postconcats the matrix with the specified rotation. <br /><br />"
"android.graphics.Matrix.postScale (float sx, float sy, float px, float py) "," Postconcats the matrix with the specified scale. <br /><br />"
"android.graphics.Matrix.setTranslate (float dx, float dy)   Set the matrix to translate by  (dx, dy) "," Set the matrix to translate by (dx, dy). <br /><br />"
"android.graphics.Matrix.setRotate (float degrees, float px, float py)   Set the matrix to rotate by the specified number of degrees, with a pivot point at  (px, py) "," Set the matrix to rotate by the specified number of degrees, with a pivot point at (px, py). <br /><br />"
"android.graphics.Matrix.mapVectors (float[] dst, float[] src) "," Apply this matrix to the array of 2D vectors specified by src, and write the transformed vectors into the array of vectors specified by dst. <br /><br />"
"android.graphics.Matrix.mapRect (RectF rect) "," Apply this matrix to the rectangle, and write the transformed rectangle back into it. <br /><br />"
"android.graphics.Matrix.invert (Matrix inverse) "," If this matrix can be inverted, return true and if inverse is not null, set inverse to be the inverse of this matrix. <br /><br />"
"android.graphics.Matrix.postRotate (float degrees, float px, float py) "," Postconcats the matrix with the specified rotation. <br /><br />"
"android.graphics.Matrix.postTranslate (float dx, float dy) "," Postconcats the matrix with the specified translation. <br /><br />"
"android.graphics.Matrix.mapVectors (float[] dst, int dstIndex, float[] src, int srcIndex, int vectorCount) "," Apply this matrix to the array of 2D vectors specified by src, and write the transformed vectors into the array of vectors specified by dst. <br /><br />"
"android.graphics.Matrix.setRotate (float degrees)   Set the matrix to rotate about  (0,0) "," Set the matrix to rotate about (0,0) by the specified number of degrees. <br /><br />"
"android.graphics.Matrix.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.graphics.Matrix.setRectToRect (RectF src, RectF dst, Matrix.ScaleToFit stf) "," Set the matrix to the scale and translate values that map the source rectangle to the destination rectangle, returning true if the the result can be represented. <br /><br />"
"android.graphics.Matrix.reset () "," Set the matrix to identity <br /><br />"
"android.graphics.Matrix.preRotate (float degrees) "," Preconcats the matrix with the specified rotation. <br /><br />"
"android.graphics.Matrix.mapPoints (float[] dst, float[] src) "," Apply this matrix to the array of 2D points specified by src, and write the transformed points into the array of points specified by dst. <br /><br />"
"android.graphics.Matrix.mapPoints (float[] dst, int dstIndex, float[] src, int srcIndex, int pointCount) "," Apply this matrix to the array of 2D points specified by src, and write the transformed points into the array of points specified by dst. <br /><br />"
"android.graphics.Matrix.setScale (float sx, float sy) "," Set the matrix to scale by sx and sy. <br /><br />"
"android.graphics.Matrix.setScale (float sx, float sy, float px, float py)   Set the matrix to scale by sx and sy, with a pivot point at  (px, py) "," Set the matrix to scale by sx and sy, with a pivot point at (px, py). <br /><br />"
"android.graphics.Matrix.preTranslate (float dx, float dy) "," Preconcats the matrix with the specified translation. <br /><br />"
"android.graphics.Matrix.setValues (float[] values) "," Copy 9 values from the array into the matrix. <br /><br />"
"android.graphics.Matrix.mapVectors (float[] vecs) "," Apply this matrix to the array of 2D vectors, and write the transformed vectors back into the array. <br /><br />"
"android.graphics.Movie.width () "," no description <br /><br />"
"android.graphics.Movie.decodeByteArray (byte[] data, int offset, int length) "," no description <br /><br />"
"android.graphics.Movie.height () "," no description <br /><br />"
"android.graphics.Movie.isOpaque () "," no description <br /><br />"
"android.graphics.Movie.decodeStream (InputStream is) "," no description <br /><br />"
"android.graphics.Movie.draw (Canvas canvas, float x, float y, Paint paint) "," no description <br /><br />"
"android.graphics.Movie.duration () "," no description <br /><br />"
"android.graphics.Movie.setTime (int relativeMilliseconds) "," no description <br /><br />"
"android.graphics.Movie.draw (Canvas canvas, float x, float y) "," no description <br /><br />"
"android.graphics.Movie.decodeFile (String pathName) "," no description <br /><br />"
"android.graphics.NinePatch.getName () "," Returns the name of this NinePatch object if one was specified when calling the constructor. <br /><br />"
"android.graphics.NinePatch.isNinePatchChunk (byte[] chunk) "," Verifies that the specified byte array is a valid 9-patch data chunk. <br /><br />"
"android.graphics.NinePatch.getHeight () "," Returns the intrinsic height, in pixels, of this NinePatch. <br /><br />"
"android.graphics.NinePatch.setPaint (Paint p) "," Sets the paint to use when drawing the NinePatch. <br /><br />"
"android.graphics.NinePatch.getTransparentRegion (Rect bounds) "," Returns a Region representing the parts of the NinePatch that are completely transparent. <br /><br />"
"android.graphics.NinePatch.draw (Canvas canvas, Rect location, Paint paint) "," Draws the NinePatch. <br /><br />"
"android.graphics.NinePatch.hasAlpha () "," Indicates whether this NinePatch contains transparent or translucent pixels. <br /><br />"
"android.graphics.NinePatch.draw (Canvas canvas, RectF location) "," Draws the NinePatch. <br /><br />"
"android.graphics.NinePatch.draw (Canvas canvas, Rect location) "," Draws the NinePatch. <br /><br />"
"android.graphics.NinePatch.getWidth () "," Returns the intrinsic width, in pixels, of this NinePatch. <br /><br />"
"android.graphics.NinePatch.getBitmap () "," Returns the bitmap used to draw this NinePatch. <br /><br />"
"android.graphics.NinePatch.getDensity ()   Return the underlying bitmap's density, as per Bitmap.getDensity () "," Return the underlying bitmap's density, as per Bitmap.getDensity(). <br /><br />"
"android.graphics.NinePatch.getPaint () "," Returns the paint used to draw this NinePatch. <br /><br />"
"android.graphics.Outline.setRoundRect (Rect rect, float radius)   Convenience for setRoundRect (int, int, int, int, float) "," Convenience for setRoundRect(int, int, int, int, float) <br /><br />"
"android.graphics.Outline.setRoundRect (int left, int top, int right, int bottom, float radius) "," Sets the Outline to the rounded rect defined by the input rect, and corner radius. <br /><br />"
"android.graphics.Outline.set (Outline src) "," Replace the contents of this Outline with the contents of src. <br /><br />"
"android.graphics.Outline.setAlpha (float alpha) "," Sets the alpha represented by the Outline - the degree to which the producer is guaranteed to be opaque over the Outline's shape. <br /><br />"
"android.graphics.Outline.setEmpty () "," Sets the outline to be empty. <br /><br />"
"android.graphics.Outline.setOval (Rect rect)   Convenience for setOval (int, int, int, int) "," Convenience for setOval(int, int, int, int) <br /><br />"
"android.graphics.Outline.setRect (Rect rect)   Convenience for setRect (int, int, int, int) "," Convenience for setRect(int, int, int, int) <br /><br />"
"android.graphics.Outline.setOval (int left, int top, int right, int bottom) "," Sets the outline to the oval defined by input rect. <br /><br />"
"android.graphics.Outline.canClip () "," Returns whether the outline can be used to clip a View. <br /><br />"
"android.graphics.Outline.isEmpty () "," Returns whether the Outline is empty. <br /><br />"
"android.graphics.Outline.getAlpha () "," Returns the alpha represented by the Outline. <br /><br />"
"android.graphics.Outline.offset (int dx, int dy)   Offsets the Outline by  (dx,dy) "," Offsets the Outline by (dx,dy) <br /><br />"
"android.graphics.Outline.setConvexPath (Path convexPath)   Sets the Constructs an Outline from a "," Sets the Constructs an Outline from a convex path. <br /><br />"
"android.graphics.Outline.setRect (int left, int top, int right, int bottom) "," Sets the Outline to the rounded rect defined by the input rect, and corner radius. <br /><br />"
"android.graphics.Paint.FontMetricsInt.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.graphics.Paint.getTypeface () "," Get the paint's typeface object. <br /><br />"
"android.graphics.Paint.getFontMetricsInt () "," no description <br /><br />"
"android.graphics.Paint.isFilterBitmap () "," Whether or not the bitmap filter is activated. <br /><br />"
"android.graphics.Paint.setColorFilter (ColorFilter filter) "," Set or clear the paint's colorfilter, returning the parameter. <br /><br />"
"android.graphics.Paint.getRasterizer () "," This method was deprecated in API level 21. Rasterizer is not supported by either the HW or PDF backends. <br /><br />"
"android.graphics.Paint.getTextBounds (String text, int start, int end, Rect bounds)   Return in bounds  (allocated by the caller) the smallest rectangle that encloses all of the characters, with an implied origin at  (0,0) "," Return in bounds (allocated by the caller) the smallest rectangle that encloses all of the characters, with an implied origin at (0,0). <br /><br />"
"android.graphics.Paint.isAntiAlias ()   Helper for getFlags () "," Helper for getFlags(), returning true if ANTI_ALIAS_FLAG bit is set AntiAliasing smooths out the edges of what is being drawn, but is has no impact on the interior of the shape. <br /><br />"
"android.graphics.Paint.setAntiAlias (boolean aa)   Helper for setFlags () "," Helper for setFlags(), setting or clearing the ANTI_ALIAS_FLAG bit AntiAliasing smooths out the edges of what is being drawn, but is has no impact on the interior of the shape. <br /><br />"
"android.graphics.Paint.getTextLocale () "," Get the text Locale. <br /><br />"
"android.graphics.Paint.setFakeBoldText (boolean fakeBoldText)   Helper for setFlags () "," Helper for setFlags(), setting or clearing the FAKE_BOLD_TEXT_FLAG bit <br /><br />"
"android.graphics.Paint.measureText (char[] text, int index, int count) "," Return the width of the text. <br /><br />"
"android.graphics.Paint.isDither ()   Helper for getFlags () "," Helper for getFlags(), returning true if DITHER_FLAG bit is set Dithering affects how colors that are higher precision than the device are down-sampled. <br /><br />"
"android.graphics.Paint.getTextWidths (char[] text, int index, int count, float[] widths) "," Return the advance widths for the characters in the string. <br /><br />"
"android.graphics.Paint.getHinting () "," Return the paint's hinting mode. <br /><br />"
"android.graphics.Paint.getStyle ()   Return the paint's style, used for controlling how primitives' geometries are interpreted  (except for drawBitmap, which always assumes FILL_STYLE) "," Return the paint's style, used for controlling how primitives' geometries are interpreted (except for drawBitmap, which always assumes FILL_STYLE). <br /><br />"
"android.graphics.Paint.getXfermode () "," Get the paint's xfermode object. <br /><br />"
"android.graphics.Paint.setDither (boolean dither)   Helper for setFlags () "," Helper for setFlags(), setting or clearing the DITHER_FLAG bit Dithering affects how colors that are higher precision than the device are down-sampled. <br /><br />"
"android.graphics.Paint.getFontFeatureSettings () "," Get font feature settings. <br /><br />"
"android.graphics.Paint.setXfermode (Xfermode xfermode) "," Set or clear the xfermode object. <br /><br />"
"android.graphics.Paint.setTextScaleX (float scaleX) "," Set the paint's horizontal scale factor for text. <br /><br />"
"android.graphics.Paint.getTextPath (char[] text, int index, int count, float x, float y, Path path)   Return the path  (outline) "," Return the path (outline) for the specified text. <br /><br />"
"android.graphics.Paint.getFlags () "," Return the paint's flags. <br /><br />"
"android.graphics.Paint.setShadowLayer (float radius, float dx, float dy, int shadowColor) "," This draws a shadow layer below the main layer, with the specified offset and color, and blur radius. <br /><br />"
"android.graphics.Paint.getColorFilter ()   Get the paint's colorfilter  (maybe be null) "," Get the paint's colorfilter (maybe be null). <br /><br />"
"android.graphics.Paint.setSubpixelText (boolean subpixelText)   Helper for setFlags () "," Helper for setFlags(), setting or clearing the SUBPIXEL_TEXT_FLAG bit <br /><br />"
"android.graphics.Paint.setFontFeatureSettings (String settings) "," Set font feature settings. <br /><br />"
"android.graphics.Paint.setPathEffect (PathEffect effect) "," Set or clear the patheffect object. <br /><br />"
"android.graphics.Paint.breakText (String text, boolean measureForwards, float maxWidth, float[] measuredWidth) "," Measure the text, stopping early if the measured width exceeds maxWidth. <br /><br />"
"android.graphics.Paint.getStrokeWidth () "," Return the width for stroking. <br /><br />"
"android.graphics.Paint.setElegantTextHeight (boolean elegant) "," Set the paint's elegant height metrics flag. <br /><br />"
"android.graphics.Paint.getFillPath (Path src, Path dst)   Applies any/all effects  (patheffect, stroking) "," Applies any/all effects (patheffect, stroking) to src, returning the result in dst. <br /><br />"
"android.graphics.Paint.breakText (char[] text, int index, int count, float maxWidth, float[] measuredWidth) "," Measure the text, stopping early if the measured width exceeds maxWidth. <br /><br />"
"android.graphics.Paint.setLinearText (boolean linearText)   Helper for setFlags () "," Helper for setFlags(), setting or clearing the LINEAR_TEXT_FLAG bit <br /><br />"
"android.graphics.Paint.measureText (String text) "," Return the width of the text. <br /><br />"
"android.graphics.Paint.setTextAlign (Paint.Align align) "," Set the paint's text alignment. <br /><br />"
"android.graphics.Paint.set (Paint src) "," Copy the fields from src into this paint. <br /><br />"
"android.graphics.Paint.descent ()   Return the distance below  (positive) the baseline  (descent) "," Return the distance below (positive) the baseline (descent) based on the current typeface and text size. <br /><br />"
"android.graphics.Paint.setTextLocale (Locale locale) "," Set the text locale. <br /><br />"
"android.graphics.Paint.setARGB (int a, int r, int g, int b)   Helper to setColor () "," Helper to setColor(), that takes a,r,g,b and constructs the color int <br /><br />"
"android.graphics.Paint.setLetterSpacing (float letterSpacing) "," Set the paint's letter-spacing for text. <br /><br />"
"android.graphics.Paint.getTextSize () "," Return the paint's text size. <br /><br />"
"android.graphics.Paint.isStrikeThruText ()   Helper for getFlags () "," Helper for getFlags(), returning true if STRIKE_THRU_TEXT_FLAG bit is set <br /><br />"
"android.graphics.Paint.getColor () "," Return the paint's color. <br /><br />"
"android.graphics.Paint.getTextScaleX () "," Return the paint's horizontal scale factor for text. <br /><br />"
"android.graphics.Paint.setUnderlineText (boolean underlineText)   Helper for setFlags () "," Helper for setFlags(), setting or clearing the UNDERLINE_TEXT_FLAG bit <br /><br />"
"android.graphics.Paint.getStrokeCap () "," Return the paint's Cap, controlling how the start and end of stroked lines and paths are treated. <br /><br />"
"android.graphics.Paint.setStrokeJoin (Paint.Join join) "," Set the paint's Join. <br /><br />"
"android.graphics.Paint.getPathEffect () "," Get the paint's patheffect object. <br /><br />"
"android.graphics.Paint.getStrokeJoin () "," Return the paint's stroke join type. <br /><br />"
"android.graphics.Paint.getFontMetricsInt (Paint.FontMetricsInt fmi) "," Return the font's interline spacing, given the Paint's settings for typeface, textSize, etc. <br /><br />"
"android.graphics.Paint.getShader () "," Get the paint's shader object. <br /><br />"
"android.graphics.Paint.getTextWidths (String text, float[] widths) "," Return the advance widths for the characters in the string. <br /><br />"
"android.graphics.Paint.getTextPath (String text, int start, int end, float x, float y, Path path)   Return the path  (outline) "," Return the path (outline) for the specified text. <br /><br />"
"android.graphics.Paint.getFontSpacing () "," Return the recommend line spacing based on the current typeface and text size. <br /><br />"
"android.graphics.Paint.getTextAlign () "," Return the paint's Align value for drawing text. <br /><br />"
"android.graphics.Paint.setFlags (int flags) "," Set the paint's flags. <br /><br />"
"android.graphics.Paint.isElegantTextHeight () "," Get the elegant metrics flag. <br /><br />"
"android.graphics.Paint.setTypeface (Typeface typeface) "," Set or clear the typeface object. <br /><br />"
"android.graphics.Paint.setTextSize (float textSize) "," Set the paint's text size. <br /><br />"
"android.graphics.Paint.setStyle (Paint.Style style)   Set the paint's style, used for controlling how primitives' geometries are interpreted  (except for drawBitmap, which always assumes Fill) "," Set the paint's style, used for controlling how primitives' geometries are interpreted (except for drawBitmap, which always assumes Fill). <br /><br />"
"android.graphics.Paint.getStrokeMiter () "," Return the paint's stroke miter value. <br /><br />"
"android.graphics.Paint.setRasterizer (Rasterizer rasterizer) "," This method was deprecated in API level 21. Rasterizer is not supported by either the HW or PDF backends. <br /><br />"
"android.graphics.Paint.setHinting (int mode) "," Set the paint's hinting mode. <br /><br />"
"android.graphics.Paint.isUnderlineText ()   Helper for getFlags () "," Helper for getFlags(), returning true if UNDERLINE_TEXT_FLAG bit is set <br /><br />"
"android.graphics.Paint.breakText (CharSequence text, int start, int end, boolean measureForwards, float maxWidth, float[] measuredWidth) "," Measure the text, stopping early if the measured width exceeds maxWidth. <br /><br />"
"android.graphics.Paint.setFilterBitmap (boolean filter)   Helper for setFlags () "," Helper for setFlags(), setting or clearing the FILTER_BITMAP_FLAG bit. <br /><br />"
"android.graphics.Paint.getMaskFilter () "," Get the paint's maskfilter object. <br /><br />"
"android.graphics.Paint.setShader (Shader shader) "," Set or clear the shader object. <br /><br />"
"android.graphics.Paint.getAlpha ()   Helper to getColor () "," Helper to getColor() that just returns the color's alpha value. <br /><br />"
"android.graphics.Paint.isSubpixelText ()   Helper for getFlags () "," Helper for getFlags(), returning true if SUBPIXEL_TEXT_FLAG bit is set <br /><br />"
"android.graphics.Paint.getLetterSpacing () "," Return the paint's letter-spacing for text. <br /><br />"
"android.graphics.Paint.measureText (CharSequence text, int start, int end) "," Return the width of the text. <br /><br />"
"android.graphics.Paint.isLinearText ()   Helper for getFlags () "," Helper for getFlags(), returning true if LINEAR_TEXT_FLAG bit is set <br /><br />"
"android.graphics.Paint.ascent ()   Return the distance above  (negative) the baseline  (ascent) "," Return the distance above (negative) the baseline (ascent) based on the current typeface and text size. <br /><br />"
"android.graphics.Paint.setStrokeCap (Paint.Cap cap) "," Set the paint's Cap. <br /><br />"
"android.graphics.Paint.setColor (int color) "," Set the paint's color. <br /><br />"
"android.graphics.Paint.isFakeBoldText ()   Helper for getFlags () "," Helper for getFlags(), returning true if FAKE_BOLD_TEXT_FLAG bit is set <br /><br />"
"android.graphics.Paint.setMaskFilter (MaskFilter maskfilter) "," Set or clear the maskfilter object. <br /><br />"
"android.graphics.Paint.getTextWidths (String text, int start, int end, float[] widths) "," Return the advance widths for the characters in the string. <br /><br />"
"android.graphics.Paint.setAlpha (int a)   Helper to setColor () "," Helper to setColor(), that only assigns the color's alpha value, leaving its r,g,b values unchanged. <br /><br />"
"android.graphics.Paint.setStrokeMiter (float miter) "," Set the paint's stroke miter value. <br /><br />"
"android.graphics.Paint.getFontMetrics ()   Allocates a new FontMetrics object, and then calls getFontMetrics (fm) "," Allocates a new FontMetrics object, and then calls getFontMetrics(fm) with it, returning the object. <br /><br />"
"android.graphics.Paint.clearShadowLayer () "," Clear the shadow layer. <br /><br />"
"android.graphics.Paint.measureText (String text, int start, int end) "," Return the width of the text. <br /><br />"
"android.graphics.Paint.setStrokeWidth (float width) "," Set the width for stroking. <br /><br />"
"android.graphics.Paint.getTextBounds (char[] text, int index, int count, Rect bounds)   Return in bounds  (allocated by the caller) the smallest rectangle that encloses all of the characters, with an implied origin at  (0,0) "," Return in bounds (allocated by the caller) the smallest rectangle that encloses all of the characters, with an implied origin at (0,0). <br /><br />"
"android.graphics.Paint.setTextSkewX (float skewX) "," Set the paint's horizontal skew factor for text. <br /><br />"
"android.graphics.Paint.getTextSkewX () "," Return the paint's horizontal skew factor for text. <br /><br />"
"android.graphics.Paint.setStrikeThruText (boolean strikeThruText)   Helper for setFlags () "," Helper for setFlags(), setting or clearing the STRIKE_THRU_TEXT_FLAG bit <br /><br />"
"android.graphics.Paint.reset () "," Restores the paint to its default settings. <br /><br />"
"android.graphics.Paint.getTextWidths (CharSequence text, int start, int end, float[] widths) "," Return the advance widths for the characters in the string. <br /><br />"
"android.graphics.Paint.getFontMetrics (Paint.FontMetrics metrics) "," Return the font's recommended interline spacing, given the Paint's settings for typeface, textSize, etc. <br /><br />"
"android.graphics.Path.addRoundRect (RectF rect, float rx, float ry, Path.Direction dir) "," Add a closed round-rectangle contour to the path <br /><br />"
"android.graphics.Path.close () "," Close the current contour. <br /><br />"
"android.graphics.Path.addOval (RectF oval, Path.Direction dir) "," Add a closed oval contour to the path <br /><br />"
"android.graphics.Path.computeBounds (RectF bounds, boolean exact) "," Compute the bounds of the control points of the path, and write the answer into bounds. <br /><br />"
"android.graphics.Path.rCubicTo (float x1, float y1, float x2, float y2, float x3, float y3) "," Same as cubicTo, but the coordinates are considered relative to the current point on this contour. <br /><br />"
"android.graphics.Path.addCircle (float x, float y, float radius, Path.Direction dir) "," Add a closed circle contour to the path <br /><br />"
"android.graphics.Path.rewind () "," Rewinds the path: clears any lines and curves from the path but keeps the internal data structure for faster reuse. <br /><br />"
"android.graphics.Path.lineTo (float x, float y)   Add a line from the last point to the specified point  (x,y) "," Add a line from the last point to the specified point (x,y). <br /><br />"
"android.graphics.Path.incReserve (int extraPtCount) "," Hint to the path to prepare for adding more points. <br /><br />"
"android.graphics.Path.arcTo (RectF oval, float startAngle, float sweepAngle, boolean forceMoveTo) "," Append the specified arc to the path as a new contour. <br /><br />"
"android.graphics.Path.rMoveTo (float dx, float dy) "," Set the beginning of the next contour relative to the last point on the previous contour. <br /><br />"
"android.graphics.Path.op (Path path, Path.Op op) "," Set this path to the result of applying the Op to this path and the specified path. <br /><br />"
"android.graphics.Path.addRect (float left, float top, float right, float bottom, Path.Direction dir) "," Add a closed rectangle contour to the path <br /><br />"
"android.graphics.Path.isEmpty ()   Returns true if the path is empty  (contains no lines or curves) "," Returns true if the path is empty (contains no lines or curves) <br /><br />"
"android.graphics.Path.setLastPoint (float dx, float dy) "," Sets the last point of the path. <br /><br />"
"android.graphics.Path.addPath (Path src) "," Add a copy of src to the path <br /><br />"
"android.graphics.Path.quadTo (float x1, float y1, float x2, float y2)   Add a quadratic bezier from the last point, approaching control point  (x1,y1), and ending at  (x2,y2) "," Add a quadratic bezier from the last point, approaching control point (x1,y1), and ending at (x2,y2). <br /><br />"
"android.graphics.Path.addRoundRect (float left, float top, float right, float bottom, float rx, float ry, Path.Direction dir) "," Add a closed round-rectangle contour to the path <br /><br />"
"android.graphics.Path.set (Path src) "," Replace the contents of this with the contents of src. <br /><br />"
"android.graphics.Path.setFillType (Path.FillType ft) "," Set the path's fill type. <br /><br />"
"android.graphics.Path.addOval (float left, float top, float right, float bottom, Path.Direction dir) "," Add a closed oval contour to the path <br /><br />"
"android.graphics.Path.transform (Matrix matrix, Path dst) "," Transform the points in this path by matrix, and write the answer into dst. <br /><br />"
"android.graphics.Path.isConvex () "," Returns the path's convexity, as defined by the content of the path. <br /><br />"
"android.graphics.Path.rQuadTo (float dx1, float dy1, float dx2, float dy2) "," Same as quadTo, but the coordinates are considered relative to the last point on this contour. <br /><br />"
"android.graphics.Path.addRoundRect (float left, float top, float right, float bottom, float[] radii, Path.Direction dir) "," Add a closed round-rectangle contour to the path. <br /><br />"
"android.graphics.Path.cubicTo (float x1, float y1, float x2, float y2, float x3, float y3)   Add a cubic bezier from the last point, approaching control points  (x1,y1) and  (x2,y2), and ending at  (x3,y3) "," Add a cubic bezier from the last point, approaching control points (x1,y1) and (x2,y2), and ending at (x3,y3). <br /><br />"
"android.graphics.Path.addRect (RectF rect, Path.Direction dir) "," Add a closed rectangle contour to the path <br /><br />"
"android.graphics.Path.addArc (float left, float top, float right, float bottom, float startAngle, float sweepAngle) "," Add the specified arc to the path as a new contour. <br /><br />"
"android.graphics.Path.addArc (RectF oval, float startAngle, float sweepAngle) "," Add the specified arc to the path as a new contour. <br /><br />"
"android.graphics.Path.addPath (Path src, float dx, float dy)   Add a copy of src to the path, offset by  (dx,dy) "," Add a copy of src to the path, offset by (dx,dy) <br /><br />"
"android.graphics.Path.transform (Matrix matrix) "," Transform the points in this path by matrix. <br /><br />"
"android.graphics.Path.offset (float dx, float dy, Path dst)   Offset the path by  (dx,dy) "," Offset the path by (dx,dy) <br /><br />"
"android.graphics.Path.isRect (RectF rect) "," Returns true if the path specifies a rectangle. <br /><br />"
"android.graphics.Path.offset (float dx, float dy)   Offset the path by  (dx,dy) "," Offset the path by (dx,dy) <br /><br />"
"android.graphics.Path.addPath (Path src, Matrix matrix) "," Add a copy of src to the path, transformed by matrix <br /><br />"
"android.graphics.Path.op (Path path1, Path path2, Path.Op op) "," Set this path to the result of applying the Op to the two specified paths. <br /><br />"
"android.graphics.Path.moveTo (float x, float y)   Set the beginning of the next contour to the point  (x,y) "," Set the beginning of the next contour to the point (x,y). <br /><br />"
"android.graphics.Path.getFillType () "," Return the path's fill type. <br /><br />"
"android.graphics.Path.toggleInverseFillType () "," Toggles the INVERSE state of the filltype <br /><br />"
"android.graphics.Path.arcTo (RectF oval, float startAngle, float sweepAngle) "," Append the specified arc to the path as a new contour. <br /><br />"
"android.graphics.Path.reset () "," Clear any lines and curves from the path, making it empty. <br /><br />"
"android.graphics.Path.isInverseFillType () "," Returns true if the filltype is one of the INVERSE variants <br /><br />"
"android.graphics.Path.arcTo (float left, float top, float right, float bottom, float startAngle, float sweepAngle, boolean forceMoveTo) "," Append the specified arc to the path as a new contour. <br /><br />"
"android.graphics.Path.rLineTo (float dx, float dy) "," Same as lineTo, but the coordinates are considered relative to the last point on this contour. <br /><br />"
"android.graphics.Path.addRoundRect (RectF rect, float[] radii, Path.Direction dir) "," Add a closed round-rectangle contour to the path. <br /><br />"
"android.graphics.PathMeasure.getMatrix (float distance, Matrix matrix, int flags)   Pins distance to 0 <= distance <= getLength () "," Pins distance to 0 <= distance <= getLength(), and then computes the corresponding matrix. <br /><br />"
"android.graphics.PathMeasure.nextContour () "," Move to the next contour in the path. <br /><br />"
"android.graphics.PathMeasure.isClosed ()   Return true if the current contour is closed () "," Return true if the current contour is closed() <br /><br />"
"android.graphics.PathMeasure.getPosTan (float distance, float[] pos, float[] tan)   Pins distance to 0 <= distance <= getLength () "," Pins distance to 0 <= distance <= getLength(), and then computes the corresponding position and tangent. <br /><br />"
"android.graphics.PathMeasure.getLength () "," Return the total length of the current contour, or 0 if no path is associated with this measure object. <br /><br />"
"android.graphics.PathMeasure.setPath (Path path, boolean forceClosed) "," Assign a new path, or null to have none. <br /><br />"
"android.graphics.PathMeasure.getSegment (float startD, float stopD, Path dst, boolean startWithMoveTo)   Given a start and stop distance, return in dst the intervening segment (s) "," Given a start and stop distance, return in dst the intervening segment(s). <br /><br />"
"android.graphics.pdf.PdfDocument.writeTo (OutputStream out) "," Writes the document to an output stream. <br /><br />"
"android.graphics.pdf.PdfDocument.finishPage (PdfDocument.Page page) "," Finishes a started page. <br /><br />"
"android.graphics.pdf.PdfDocument.close () "," Closes this document. <br /><br />"
"android.graphics.pdf.PdfDocument.startPage (PdfDocument.PageInfo pageInfo) "," Starts a page using the provided PdfDocument.PageInfo. <br /><br />"
"android.graphics.pdf.PdfDocument.getPages () "," Gets the pages of the document. <br /><br />"
"android.graphics.pdf.PdfDocument.Page.getCanvas () "," Gets the Canvas of the page. <br /><br />"
"android.graphics.pdf.PdfDocument.Page.getInfo () "," Gets the PdfDocument.PageInfo with meta-data for the page. <br /><br />"
"android.graphics.pdf.PdfDocument.PageInfo.Builder.create () "," Creates a new PdfDocument.PageInfo. <br /><br />"
"android.graphics.pdf.PdfDocument.PageInfo.Builder.setContentRect (Rect contentRect)   Sets the content rectangle in PostScript point  (1/72th of an inch) "," Sets the content rectangle in PostScript point (1/72th of an inch). <br /><br />"
"android.graphics.pdf.PdfRenderer.openPage (int index) "," Opens a page for rendering. <br /><br />"
"android.graphics.pdf.PdfRenderer.shouldScaleForPrinting () "," Gets whether the document prefers to be scaled for printing. <br /><br />"
"android.graphics.pdf.PdfRenderer.getPageCount () "," Gets the number of pages in the document. <br /><br />"
"android.graphics.pdf.PdfRenderer.close () "," Closes this renderer. <br /><br />"
"android.graphics.pdf.PdfRenderer.Page.getWidth ()   Gets the page width in points  (1/72') "," Gets the page width in points (1/72'). <br /><br />"
"android.graphics.pdf.PdfRenderer.Page.close () "," Closes this page. <br /><br />"
"android.graphics.pdf.PdfRenderer.Page.getIndex () "," Gets the page index. <br /><br />"
"android.graphics.pdf.PdfRenderer.Page.render (Bitmap destination, Rect destClip, Matrix transform, int renderMode) "," Renders a page to a bitmap. <br /><br />"
"android.graphics.pdf.PdfRenderer.Page.getHeight ()   Gets the page height in points  (1/72') "," Gets the page height in points (1/72'). <br /><br />"
"android.graphics.Picture.createFromStream (InputStream stream) "," This method was deprecated in API level 18. The recommended alternative is to not use writeToStream and instead draw the picture into a Bitmap from which you can persist it as raw or compressed pixels. <br /><br />"
"android.graphics.Picture.getHeight () "," Get the height of the picture as passed to beginRecording. <br /><br />"
"android.graphics.Picture.writeToStream (OutputStream stream) "," This method was deprecated in API level 18. The recommended alternative is to draw the picture into a Bitmap from which you can persist it as raw or compressed pixels. <br /><br />"
"android.graphics.Picture.beginRecording (int width, int height)   To record a picture, call beginRecording () "," To record a picture, call beginRecording() and then draw into the Canvas that is returned. <br /><br />"
"android.graphics.Picture.draw (Canvas canvas) "," Draw this picture on the canvas. <br /><br />"
"android.graphics.Picture.getWidth () "," Get the width of the picture as passed to beginRecording. <br /><br />"
"android.graphics.Picture.endRecording () "," Call endRecording when the picture is built. <br /><br />"
"android.graphics.PixelFormat.getPixelFormatInfo (int format, PixelFormat info) "," no description <br /><br />"
"android.graphics.PixelFormat.formatHasAlpha (int format) "," no description <br /><br />"
"android.graphics.Point.set (int x, int y) "," Set the point's x and y coordinates <br /><br />"
"android.graphics.Point.equals (int x, int y)   Returns true if the point's coordinates equal  (x,y) "," Returns true if the point's coordinates equal (x,y) <br /><br />"
"android.graphics.Point.writeToParcel (Parcel out, int flags) "," Write this point to the specified parcel. <br /><br />"
"android.graphics.Point.negate () "," Negate the point's coordinates <br /><br />"
"android.graphics.Point.offset (int dx, int dy) "," Offset the point's coordinates by dx, dy <br /><br />"
"android.graphics.Point.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.graphics.Point.describeContents () "," Parcelable interface methods <br /><br />"
"android.graphics.Point.readFromParcel (Parcel in) "," Set the point's coordinates from the data stored in the specified parcel. <br /><br />"
"android.graphics.Point.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.graphics.Point.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.graphics.PointF.set (float x, float y) "," Set the point's x and y coordinates <br /><br />"
"android.graphics.PointF.equals (float x, float y)   Returns true if the point's coordinates equal  (x,y) "," Returns true if the point's coordinates equal (x,y) <br /><br />"
"android.graphics.PointF.offset (float dx, float dy) "," no description <br /><br />"
"android.graphics.PointF.describeContents () "," Parcelable interface methods <br /><br />"
"android.graphics.PointF.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.graphics.PointF.length (float x, float y)   Returns the euclidian distance from  (0,0) to  (x,y) "," Returns the euclidian distance from (0,0) to (x,y) <br /><br />"
"android.graphics.PointF.set (PointF p) "," Set the point's x and y coordinates to the coordinates of p <br /><br />"
"android.graphics.PointF.writeToParcel (Parcel out, int flags) "," Write this point to the specified parcel. <br /><br />"
"android.graphics.PointF.negate () "," no description <br /><br />"
"android.graphics.PointF.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.graphics.PointF.length ()   Return the euclidian distance from  (0,0) "," Return the euclidian distance from (0,0) to the point <br /><br />"
"android.graphics.PointF.readFromParcel (Parcel in) "," Set the point's coordinates from the data stored in the specified parcel. <br /><br />"
"android.graphics.PointF.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.graphics.PorterDuffColorFilter.equals (Object object) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.graphics.PorterDuffColorFilter.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.graphics.Rect.unflattenFromString (String str)   Returns a Rect from a string of the form returned by flattenToString () "," Returns a Rect from a string of the form returned by flattenToString(), or null if the string is not of that form. <br /><br />"
"android.graphics.Rect.flattenToString () "," Return a string representation of the rectangle in a well-defined format. <br /><br />"
"android.graphics.Rect.intersects (Rect a, Rect b) "," Returns true iff the two specified rectangles intersect. <br /><br />"
"android.graphics.Rect.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.graphics.Rect.width () "," no description <br /><br />"
"android.graphics.Rect.set (int left, int top, int right, int bottom) "," Set the rectangle's coordinates to the specified values. <br /><br />"
"android.graphics.Rect.union (int x, int y) "," Update this Rect to enclose itself and the [x,y] coordinate. <br /><br />"
"android.graphics.Rect.intersects (int left, int top, int right, int bottom) "," Returns true if this rectangle intersects the specified rectangle. <br /><br />"
"android.graphics.Rect.contains (int left, int top, int right, int bottom) "," Returns true iff the 4 specified sides of a rectangle are inside or equal to this rectangle. <br /><br />"
"android.graphics.Rect.toShortString () "," Return a string representation of the rectangle in a compact form. <br /><br />"
"android.graphics.Rect.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.graphics.Rect.intersect (Rect r) "," If the specified rectangle intersects this rectangle, return true and set this rectangle to that intersection, otherwise return false and do not change this rectangle. <br /><br />"
"android.graphics.Rect.isEmpty ()   Returns true if the rectangle is empty  (left >= right or top >= bottom) "," Returns true if the rectangle is empty (left >= right or top >= bottom) <br /><br />"
"android.graphics.Rect.centerY () "," no description <br /><br />"
"android.graphics.Rect.height () "," no description <br /><br />"
"android.graphics.Rect.intersect (int left, int top, int right, int bottom) "," If the rectangle specified by left,top,right,bottom intersects this rectangle, return true and set this rectangle to that intersection, otherwise return false and do not change this rectangle. <br /><br />"
"android.graphics.Rect.union (Rect r) "," Update this Rect to enclose itself and the specified rectangle. <br /><br />"
"android.graphics.Rect.offset (int dx, int dy) "," Offset the rectangle by adding dx to its left and right coordinates, and adding dy to its top and bottom coordinates. <br /><br />"
"android.graphics.Rect.setEmpty ()   Set the rectangle to  (0,0,0,0) "," Set the rectangle to (0,0,0,0) <br /><br />"
"android.graphics.Rect.setIntersect (Rect a, Rect b) "," If rectangles a and b intersect, return true and set this rectangle to that intersection, otherwise return false and do not change this rectangle. <br /><br />"
"android.graphics.Rect.describeContents () "," Parcelable interface methods <br /><br />"
"android.graphics.Rect.sort () "," Swap top/bottom or left/right if there are flipped (i.e. <br /><br />"
"android.graphics.Rect.contains (Rect r) "," Returns true iff the specified rectangle r is inside or equal to this rectangle. <br /><br />"
"android.graphics.Rect.inset (int dx, int dy)   Inset the rectangle by  (dx,dy) "," Inset the rectangle by (dx,dy). <br /><br />"
"android.graphics.Rect.set (Rect src) "," Copy the coordinates from src into this rectangle. <br /><br />"
"android.graphics.Rect.exactCenterX () "," no description <br /><br />"
"android.graphics.Rect.offsetTo (int newLeft, int newTop)   Offset the rectangle to a specific  (left, top) "," Offset the rectangle to a specific (left, top) position, keeping its width and height the same. <br /><br />"
"android.graphics.Rect.exactCenterY () "," no description <br /><br />"
"android.graphics.Rect.writeToParcel (Parcel out, int flags) "," Write this rectangle to the specified parcel. <br /><br />"
"android.graphics.Rect.contains (int x, int y)   Returns true if  (x,y) "," Returns true if (x,y) is inside the rectangle. <br /><br />"
"android.graphics.Rect.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.graphics.Rect.union (int left, int top, int right, int bottom) "," Update this Rect to enclose itself and the specified rectangle. <br /><br />"
"android.graphics.Rect.centerX () "," no description <br /><br />"
"android.graphics.Rect.readFromParcel (Parcel in) "," Set the rectangle's coordinates from the data stored in the specified parcel. <br /><br />"
"android.graphics.RectF.round (Rect dst) "," Set the dst integer Rect by rounding this rectangle's coordinates to their nearest integer values. <br /><br />"
"android.graphics.RectF.set (RectF src) "," Copy the coordinates from src into this rectangle. <br /><br />"
"android.graphics.RectF.contains (RectF r) "," Returns true iff the specified rectangle r is inside or equal to this rectangle. <br /><br />"
"android.graphics.RectF.intersects (RectF a, RectF b) "," Returns true iff the two specified rectangles intersect. <br /><br />"
"android.graphics.RectF.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.graphics.RectF.width () "," no description <br /><br />"
"android.graphics.RectF.offsetTo (float newLeft, float newTop)   Offset the rectangle to a specific  (left, top) "," Offset the rectangle to a specific (left, top) position, keeping its width and height the same. <br /><br />"
"android.graphics.RectF.roundOut (Rect dst) "," Set the dst integer Rect by rounding 'out' this rectangle, choosing the floor of top and left, and the ceiling of right and bottom. <br /><br />"
"android.graphics.RectF.toShortString () "," Return a string representation of the rectangle in a compact form. <br /><br />"
"android.graphics.RectF.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.graphics.RectF.isEmpty ()   Returns true if the rectangle is empty  (left >= right or top >= bottom) "," Returns true if the rectangle is empty (left >= right or top >= bottom) <br /><br />"
"android.graphics.RectF.union (RectF r) "," Update this Rect to enclose itself and the specified rectangle. <br /><br />"
"android.graphics.RectF.centerY () "," no description <br /><br />"
"android.graphics.RectF.height () "," no description <br /><br />"
"android.graphics.RectF.contains (float left, float top, float right, float bottom) "," Returns true iff the 4 specified sides of a rectangle are inside or equal to this rectangle. <br /><br />"
"android.graphics.RectF.setIntersect (RectF a, RectF b) "," If rectangles a and b intersect, return true and set this rectangle to that intersection, otherwise return false and do not change this rectangle. <br /><br />"
"android.graphics.RectF.intersect (float left, float top, float right, float bottom) "," If the rectangle specified by left,top,right,bottom intersects this rectangle, return true and set this rectangle to that intersection, otherwise return false and do not change this rectangle. <br /><br />"
"android.graphics.RectF.offset (float dx, float dy) "," Offset the rectangle by adding dx to its left and right coordinates, and adding dy to its top and bottom coordinates. <br /><br />"
"android.graphics.RectF.setEmpty ()   Set the rectangle to  (0,0,0,0) "," Set the rectangle to (0,0,0,0) <br /><br />"
"android.graphics.RectF.inset (float dx, float dy)   Inset the rectangle by  (dx,dy) "," Inset the rectangle by (dx,dy). <br /><br />"
"android.graphics.RectF.contains (float x, float y)   Returns true if  (x,y) "," Returns true if (x,y) is inside the rectangle. <br /><br />"
"android.graphics.RectF.intersects (float left, float top, float right, float bottom) "," Returns true if this rectangle intersects the specified rectangle. <br /><br />"
"android.graphics.RectF.describeContents () "," Parcelable interface methods <br /><br />"
"android.graphics.RectF.union (float left, float top, float right, float bottom) "," Update this Rect to enclose itself and the specified rectangle. <br /><br />"
"android.graphics.RectF.sort () "," Swap top/bottom or left/right if there are flipped (i.e. <br /><br />"
"android.graphics.RectF.set (Rect src) "," Copy the coordinates from src into this rectangle. <br /><br />"
"android.graphics.RectF.writeToParcel (Parcel out, int flags) "," Write this rectangle to the specified parcel. <br /><br />"
"android.graphics.RectF.union (float x, float y) "," Update this Rect to enclose itself and the [x,y] coordinate. <br /><br />"
"android.graphics.RectF.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.graphics.RectF.set (float left, float top, float right, float bottom) "," Set the rectangle's coordinates to the specified values. <br /><br />"
"android.graphics.RectF.centerX () "," no description <br /><br />"
"android.graphics.RectF.readFromParcel (Parcel in) "," Set the rectangle's coordinates from the data stored in the specified parcel. <br /><br />"
"android.graphics.RectF.intersect (RectF r) "," If the specified rectangle intersects this rectangle, return true and set this rectangle to that intersection, otherwise return false and do not change this rectangle. <br /><br />"
"android.graphics.Region.getBoundaryPath (Path path) "," Set the path to the boundary of the region. <br /><br />"
"android.graphics.Region.quickReject (Rect r) "," Return true if the region is empty, or if the specified rectangle does not intersect the region. <br /><br />"
"android.graphics.Region.setEmpty () "," Set the region to the empty region <br /><br />"
"android.graphics.Region.isComplex () "," Return true if the region contains more than one rectangle <br /><br />"
"android.graphics.Region.op (Rect rect, Region region, Region.Op op) "," Set this region to the result of performing the Op on the specified rect and region. <br /><br />"
"android.graphics.Region.quickContains (Rect r)   Return true if the region is a single rectangle  (not complex) "," Return true if the region is a single rectangle (not complex) and it contains the specified rectangle. <br /><br />"
"android.graphics.Region.getBoundaryPath () "," Return the boundary of the region as a new Path. <br /><br />"
"android.graphics.Region.set (Region region) "," Set the region to the specified region. <br /><br />"
"android.graphics.Region.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.graphics.Region.op (Rect r, Region.Op op) "," Perform the specified Op on this region and the specified rect. <br /><br />"
"android.graphics.Region.set (int left, int top, int right, int bottom) "," Set the region to the specified rectangle <br /><br />"
"android.graphics.Region.quickReject (Region rgn) "," Return true if the region is empty, or if the specified region does not intersect the region. <br /><br />"
"android.graphics.Region.translate (int dx, int dy, Region dst) "," Set the dst region to the result of translating this region by [dx, dy]. <br /><br />"
"android.graphics.Region.contains (int x, int y) "," Return true if the region contains the specified point <br /><br />"
"android.graphics.Region.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.graphics.Region.op (int left, int top, int right, int bottom, Region.Op op) "," Perform the specified Op on this region and the specified rect. <br /><br />"
"android.graphics.Region.setPath (Path path, Region clip) "," Set the region to the area described by the path and clip. <br /><br />"
"android.graphics.Region.writeToParcel (Parcel p, int flags) "," Write the region and its pixels to the parcel. <br /><br />"
"android.graphics.Region.quickContains (int left, int top, int right, int bottom)   Return true if the region is a single rectangle  (not complex) "," Return true if the region is a single rectangle (not complex) and it contains the specified rectangle. <br /><br />"
"android.graphics.Region.union (Rect r) "," no description <br /><br />"
"android.graphics.Region.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.graphics.Region.op (Region region1, Region region2, Region.Op op) "," Set this region to the result of performing the Op on the specified regions. <br /><br />"
"android.graphics.Region.set (Rect r) "," Set the region to the specified rectangle <br /><br />"
"android.graphics.Region.translate (int dx, int dy) "," Translate the region by [dx, dy]. <br /><br />"
"android.graphics.Region.op (Region region, Region.Op op) "," Perform the specified Op on this region and the specified region. <br /><br />"
"android.graphics.Region.quickReject (int left, int top, int right, int bottom) "," Return true if the region is empty, or if the specified rectangle does not intersect the region. <br /><br />"
"android.graphics.Region.getBounds (Rect r) "," Set the Rect to the bounds of the region. <br /><br />"
"android.graphics.Region.isRect () "," Return true if the region contains a single rectangle <br /><br />"
"android.graphics.Region.isEmpty () "," Return true if this region is empty <br /><br />"
"android.graphics.Region.getBounds () "," Return a new Rect set to the bounds of the region. <br /><br />"
"android.graphics.RegionIterator.next (Rect r) "," Return the next rectangle in the region. <br /><br />"
"android.graphics.Shader.setLocalMatrix (Matrix localM) "," Set the shader's local matrix. <br /><br />"
"android.graphics.Shader.getLocalMatrix (Matrix localM) "," Return true if the shader has a non-identity local matrix. <br /><br />"
"android.graphics.SurfaceTexture.setOnFrameAvailableListener (SurfaceTexture.OnFrameAvailableListener listener, Handler handler) "," Register a callback to be invoked when a new image frame becomes available to the SurfaceTexture. <br /><br />"
"android.graphics.SurfaceTexture.attachToGLContext (int texName) "," Attach the SurfaceTexture to the OpenGL ES context that is current on the calling thread. <br /><br />"
"android.graphics.SurfaceTexture.setOnFrameAvailableListener (SurfaceTexture.OnFrameAvailableListener listener) "," Register a callback to be invoked when a new image frame becomes available to the SurfaceTexture. <br /><br />"
"android.graphics.SurfaceTexture.setDefaultBufferSize (int width, int height) "," Set the default size of the image buffers. <br /><br />"
"android.graphics.SurfaceTexture.release ()   release () "," release() frees all the buffers and puts the SurfaceTexture into the 'abandoned' state. <br /><br />"
"android.graphics.SurfaceTexture.getTransformMatrix (float[] mtx) "," Retrieve the 4x4 texture coordinate transform matrix associated with the texture image set by the most recent call to updateTexImage. <br /><br />"
"android.graphics.SurfaceTexture.getTimestamp () "," Retrieve the timestamp associated with the texture image set by the most recent call to updateTexImage. <br /><br />"
"android.graphics.SurfaceTexture.updateTexImage () "," Update the texture image to the most recent frame from the image stream. <br /><br />"
"android.graphics.SurfaceTexture.releaseTexImage () "," Releases the the texture content. <br /><br />"
"android.graphics.SurfaceTexture.detachFromGLContext () "," Detach the SurfaceTexture from the OpenGL ES context that owns the OpenGL ES texture object. <br /><br />"
"android.graphics.SurfaceTexture.OnFrameAvailableListener.onFrameAvailable (SurfaceTexture surfaceTexture) "," no description <br /><br />"
"android.graphics.Typeface.create (String familyName, int style) "," Create a typeface object given a family name, and option style information. <br /><br />"
"android.graphics.Typeface.createFromAsset (AssetManager mgr, String path) "," Create a new typeface from the specified font data. <br /><br />"
"android.graphics.Typeface.isItalic ()   Returns true if getStyle () "," Returns true if getStyle() has the ITALIC bit set. <br /><br />"
"android.graphics.Typeface.createFromFile (String path) "," Create a new typeface from the specified font file. <br /><br />"
"android.graphics.Typeface.getStyle () "," Returns the typeface's intrinsic style attributes <br /><br />"
"android.graphics.Typeface.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.graphics.Typeface.isBold ()   Returns true if getStyle () "," Returns true if getStyle() has the BOLD bit set. <br /><br />"
"android.graphics.Typeface.defaultFromStyle (int style) "," Returns one of the default typeface objects, based on the specified style <br /><br />"
"android.graphics.Typeface.create (Typeface family, int style) "," Create a typeface object that best matches the specified existing typeface and the specified Style. <br /><br />"
"android.graphics.Typeface.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.graphics.Typeface.createFromFile (File path) "," Create a new typeface from the specified font file. <br /><br />"
"android.graphics.YuvImage.getYuvFormat () "," no description <br /><br />"
"android.graphics.YuvImage.getHeight () "," no description <br /><br />"
"android.graphics.YuvImage.compressToJpeg (Rect rectangle, int quality, OutputStream stream) "," Compress a rectangle region in the YuvImage to a jpeg. <br /><br />"
"android.graphics.YuvImage.getWidth () "," no description <br /><br />"
"android.graphics.YuvImage.getYuvData () "," no description <br /><br />"
"android.graphics.YuvImage.getStrides () "," no description <br /><br />"
"android.hardware.Camera.Area.equals (Object obj) "," Compares obj to this area. <br /><br />"
"android.hardware.Camera.AutoFocusCallback.onAutoFocus (boolean success, Camera camera) "," Called when the camera auto focus completes. <br /><br />"
"android.hardware.Camera.AutoFocusMoveCallback.onAutoFocusMoving (boolean start, Camera camera) "," Called when the camera auto focus starts or stops. <br /><br />"
"android.hardware.Camera.ErrorCallback.onError (int error, Camera camera) "," Callback for camera errors. <br /><br />"
"android.hardware.Camera.FaceDetectionListener.onFaceDetection (Face[] faces, Camera camera) "," Notify the listener of the detected faces in the preview frame. <br /><br />"
"android.hardware.Camera.getParameters () "," Returns the current settings for this Camera service. <br /><br />"
"android.hardware.Camera.getNumberOfCameras () "," Returns the number of physical cameras available on this device. <br /><br />"
"android.hardware.Camera.stopFaceDetection () "," Stops the face detection. <br /><br />"
"android.hardware.Camera.addCallbackBuffer (byte[] callbackBuffer) "," Adds a pre-allocated buffer to the preview callback buffer queue. <br /><br />"
"android.hardware.Camera.startSmoothZoom (int value) "," Zooms to the requested value smoothly. <br /><br />"
"android.hardware.Camera.open (int cameraId) "," Creates a new Camera object to access a particular hardware camera. <br /><br />"
"android.hardware.Camera.setOneShotPreviewCallback (Camera.PreviewCallback cb) "," Installs a callback to be invoked for the next preview frame in addition to displaying it on the screen. <br /><br />"
"android.hardware.Camera.stopPreview ()   Stops capturing and drawing preview frames to the surface, and resets the camera for a future call to startPreview () "," Stops capturing and drawing preview frames to the surface, and resets the camera for a future call to startPreview(). <br /><br />"
"android.hardware.Camera.reconnect () "," Reconnects to the camera service after another process used it. <br /><br />"
"android.hardware.Camera.startPreview () "," Starts capturing and drawing preview frames to the screen. <br /><br />"
"android.hardware.Camera.setFaceDetectionListener (Camera.FaceDetectionListener listener) "," Registers a listener to be notified about the faces detected in the preview frame. <br /><br />"
"android.hardware.Camera.startFaceDetection () "," Starts the face detection. <br /><br />"
"android.hardware.Camera.setPreviewTexture (SurfaceTexture surfaceTexture) "," Sets the SurfaceTexture to be used for live preview. <br /><br />"
"android.hardware.Camera.setPreviewCallbackWithBuffer (Camera.PreviewCallback cb)   Installs a callback to be invoked for every preview frame, using buffers supplied with addCallbackBuffer (byte[]) "," Installs a callback to be invoked for every preview frame, using buffers supplied with addCallbackBuffer(byte[]), in addition to displaying them on the screen. <br /><br />"
"android.hardware.Camera.takePicture (Camera.ShutterCallback shutter, Camera.PictureCallback raw, Camera.PictureCallback postview, Camera.PictureCallback jpeg) "," Triggers an asynchronous image capture. <br /><br />"
"android.hardware.Camera.setZoomChangeListener (Camera.OnZoomChangeListener listener) "," Registers a listener to be notified when the zoom value is updated by the camera driver during smooth zoom. <br /><br />"
"android.hardware.Camera.enableShutterSound (boolean enabled) "," Enable or disable the default shutter sound when taking a picture. <br /><br />"
"android.hardware.Camera.stopSmoothZoom () "," Stops the smooth zoom. <br /><br />"
"android.hardware.Camera.open () "," Creates a new Camera object to access the first back-facing camera on the device. <br /><br />"
"android.hardware.Camera.lock () "," Re-locks the camera to prevent other processes from accessing it. <br /><br />"
"android.hardware.Camera.release () "," Disconnects and releases the Camera object resources. <br /><br />"
"android.hardware.Camera.setErrorCallback (Camera.ErrorCallback cb) "," Registers a callback to be invoked when an error occurs. <br /><br />"
"android.hardware.Camera.setAutoFocusMoveCallback (Camera.AutoFocusMoveCallback cb) "," Sets camera auto-focus move callback. <br /><br />"
"android.hardware.Camera.setPreviewDisplay (SurfaceHolder holder) "," Sets the Surface to be used for live preview. <br /><br />"
"android.hardware.Camera.takePicture (Camera.ShutterCallback shutter, Camera.PictureCallback raw, Camera.PictureCallback jpeg)   Equivalent to takePicture (shutter, raw, null, jpeg) "," Equivalent to takePicture(shutter, raw, null, jpeg). <br /><br />"
"android.hardware.Camera.cancelAutoFocus () "," Cancels any auto-focus function in progress. <br /><br />"
"android.hardware.Camera.autoFocus (Camera.AutoFocusCallback cb) "," Starts camera auto-focus and registers a callback function to run when the camera is focused. <br /><br />"
"android.hardware.Camera.setDisplayOrientation (int degrees) "," Set the clockwise rotation of preview display in degrees. <br /><br />"
"android.hardware.Camera.setPreviewCallback (Camera.PreviewCallback cb) "," Installs a callback to be invoked for every preview frame in addition to displaying them on the screen. <br /><br />"
"android.hardware.Camera.getCameraInfo (int cameraId, Camera.CameraInfo cameraInfo) "," Returns the information about a particular camera. <br /><br />"
"android.hardware.Camera.setParameters (Camera.Parameters params) "," Changes the settings for this Camera service. <br /><br />"
"android.hardware.Camera.unlock () "," Unlocks the camera to allow another process to access it. <br /><br />"
"android.hardware.Camera.OnZoomChangeListener.onZoomChange (int zoomValue, boolean stopped, Camera camera) "," Called when the zoom value has changed during a smooth zoom. <br /><br />"
"android.hardware.Camera.Parameters.getZoomRatios () "," Gets the zoom ratios of all zoom values. <br /><br />"
"android.hardware.Camera.Parameters.getSupportedPictureFormats () "," Gets the supported picture formats. <br /><br />"
"android.hardware.Camera.Parameters.getInt (String key) "," Returns the value of an integer parameter. <br /><br />"
"android.hardware.Camera.Parameters.setExposureCompensation (int value) "," Sets the exposure compensation index. <br /><br />"
"android.hardware.Camera.Parameters.isAutoWhiteBalanceLockSupported () "," Returns true if auto-white balance locking is supported. <br /><br />"
"android.hardware.Camera.Parameters.getPreviewSize () "," Returns the dimensions setting for preview pictures. <br /><br />"
"android.hardware.Camera.Parameters.getFocusAreas () "," Gets the current focus areas. <br /><br />"
"android.hardware.Camera.Parameters.setJpegThumbnailQuality (int quality) "," Sets the quality of the EXIF thumbnail in Jpeg picture. <br /><br />"
"android.hardware.Camera.Parameters.getPreferredPreviewSizeForVideo ()   Returns the preferred or recommended preview size  (width and height) "," Returns the preferred or recommended preview size (width and height) in pixels for video recording. <br /><br />"
"android.hardware.Camera.Parameters.isZoomSupported () "," Returns true if zoom is supported. <br /><br />"
"android.hardware.Camera.Parameters.setAntibanding (String antibanding) "," Sets the antibanding. <br /><br />"
"android.hardware.Camera.Parameters.getFlashMode () "," Gets the current flash mode setting. <br /><br />"
"android.hardware.Camera.Parameters.getJpegThumbnailQuality () "," Returns the quality setting for the EXIF thumbnail in Jpeg picture. <br /><br />"
"android.hardware.Camera.Parameters.isVideoStabilizationSupported () "," Returns true if video stabilization is supported. <br /><br />"
"android.hardware.Camera.Parameters.setGpsAltitude (double altitude) "," Sets GPS altitude. <br /><br />"
"android.hardware.Camera.Parameters.getMaxNumMeteringAreas () "," Gets the maximum number of metering areas supported. <br /><br />"
"android.hardware.Camera.Parameters.getPictureSize () "," Returns the dimension setting for pictures. <br /><br />"
"android.hardware.Camera.Parameters.getMaxNumDetectedFaces () "," Gets the maximum number of detected faces supported. <br /><br />"
"android.hardware.Camera.Parameters.getMinExposureCompensation () "," Gets the minimum exposure compensation index. <br /><br />"
"android.hardware.Camera.Parameters.setAutoExposureLock (boolean toggle) "," Sets the auto-exposure lock state. <br /><br />"
"android.hardware.Camera.Parameters.getSupportedPreviewSizes () "," Gets the supported preview sizes. <br /><br />"
"android.hardware.Camera.Parameters.getMeteringAreas () "," Gets the current metering areas. <br /><br />"
"android.hardware.Camera.Parameters.getVideoStabilization () "," Get the current state of video stabilization. <br /><br />"
"android.hardware.Camera.Parameters.setPreviewFormat (int pixel_format) "," Sets the image format for preview pictures. <br /><br />"
"android.hardware.Camera.Parameters.setPreviewFpsRange (int min, int max) "," Sets the minimum and maximum preview fps. <br /><br />"
"android.hardware.Camera.Parameters.getSupportedPreviewFormats () "," Gets the supported preview formats. <br /><br />"
"android.hardware.Camera.Parameters.setFocusMode (String value) "," Sets the focus mode. <br /><br />"
"android.hardware.Camera.Parameters.getMaxZoom () "," Gets the maximum zoom value allowed for snapshot. <br /><br />"
"android.hardware.Camera.Parameters.getWhiteBalance () "," Gets the current white balance setting. <br /><br />"
"android.hardware.Camera.Parameters.getSupportedAntibanding () "," Gets the supported antibanding values. <br /><br />"
"android.hardware.Camera.Parameters.setFlashMode (String value) "," Sets the flash mode. <br /><br />"
"android.hardware.Camera.Parameters.set (String key, int value) "," Sets an integer parameter. <br /><br />"
"android.hardware.Camera.Parameters.getExposureCompensationStep () "," Gets the exposure compensation step. <br /><br />"
"android.hardware.Camera.Parameters.setZoom (int value) "," Sets current zoom value. <br /><br />"
"android.hardware.Camera.Parameters.isSmoothZoomSupported () "," Returns true if smooth zoom is supported. <br /><br />"
"android.hardware.Camera.Parameters.getAntibanding () "," Gets the current antibanding setting. <br /><br />"
"android.hardware.Camera.Parameters.getSupportedFocusModes () "," Gets the supported focus modes. <br /><br />"
"android.hardware.Camera.Parameters.getPictureFormat () "," Returns the image format for pictures. <br /><br />"
"android.hardware.Camera.Parameters.setPreviewFrameRate (int fps)    This method was deprecated in API level 9. replaced by setPreviewFpsRange (int, int) "," This method was deprecated in API level 9. replaced by setPreviewFpsRange(int, int) <br /><br />"
"android.hardware.Camera.Parameters.getJpegThumbnailSize () "," Returns the dimensions for EXIF thumbnail in Jpeg picture. <br /><br />"
"android.hardware.Camera.Parameters.isVideoSnapshotSupported () "," Returns true if video snapshot is supported. <br /><br />"
"android.hardware.Camera.Parameters.setPreviewSize (int width, int height) "," Sets the dimensions for preview pictures. <br /><br />"
"android.hardware.Camera.Parameters.setMeteringAreas (List< Camera.Area> meteringAreas) "," Sets metering areas. <br /><br />"
"android.hardware.Camera.Parameters.getPreviewFormat () "," Returns the image format for preview frames got from Camera.PreviewCallback. <br /><br />"
"android.hardware.Camera.Parameters.flatten () "," Creates a single string with all the parameters set in this Parameters object. <br /><br />"
"android.hardware.Camera.Parameters.setJpegThumbnailSize (int width, int height) "," Sets the dimensions for EXIF thumbnail in Jpeg picture. <br /><br />"
"android.hardware.Camera.Parameters.getSupportedVideoSizes () "," Gets the supported video frame sizes that can be used by MediaRecorder. <br /><br />"
"android.hardware.Camera.Parameters.setJpegQuality (int quality) "," Sets Jpeg quality of captured picture. <br /><br />"
"android.hardware.Camera.Parameters.getSupportedPreviewFpsRange ()   Gets the supported preview fps  (frame-per-second) "," Gets the supported preview fps (frame-per-second) ranges. <br /><br />"
"android.hardware.Camera.Parameters.setWhiteBalance (String value) "," Sets the white balance. <br /><br />"
"android.hardware.Camera.Parameters.setGpsLatitude (double latitude) "," Sets GPS latitude coordinate. <br /><br />"
"android.hardware.Camera.Parameters.setPictureSize (int width, int height) "," Sets the dimensions for pictures. <br /><br />"
"android.hardware.Camera.Parameters.setGpsProcessingMethod (String processing_method) "," Sets GPS processing method. <br /><br />"
"android.hardware.Camera.Parameters.getPreviewFpsRange (int[] range) "," Returns the current minimum and maximum preview fps. <br /><br />"
"android.hardware.Camera.Parameters.getSceneMode () "," Gets the current scene mode setting. <br /><br />"
"android.hardware.Camera.Parameters.get (String key) "," Returns the value of a String parameter. <br /><br />"
"android.hardware.Camera.Parameters.getPreviewFrameRate ()    This method was deprecated in API level 9. replaced by getPreviewFpsRange (int[]) "," This method was deprecated in API level 9. replaced by getPreviewFpsRange(int[]) <br /><br />"
"android.hardware.Camera.Parameters.setRotation (int rotation) "," Sets the clockwise rotation angle in degrees relative to the orientation of the camera. <br /><br />"
"android.hardware.Camera.Parameters.getMaxExposureCompensation () "," Gets the maximum exposure compensation index. <br /><br />"
"android.hardware.Camera.Parameters.getSupportedWhiteBalance () "," Gets the supported white balance. <br /><br />"
"android.hardware.Camera.Parameters.getSupportedPreviewFrameRates ()    This method was deprecated in API level 9. replaced by getSupportedPreviewFpsRange () "," This method was deprecated in API level 9. replaced by getSupportedPreviewFpsRange() <br /><br />"
"android.hardware.Camera.Parameters.getSupportedPictureSizes () "," Gets the supported picture sizes. <br /><br />"
"android.hardware.Camera.Parameters.setVideoStabilization (boolean toggle) "," Enables and disables video stabilization. <br /><br />"
"android.hardware.Camera.Parameters.getColorEffect () "," Gets the current color effect setting. <br /><br />"
"android.hardware.Camera.Parameters.removeGpsData () "," Removes GPS latitude, longitude, altitude, and timestamp from the parameters. <br /><br />"
"android.hardware.Camera.Parameters.getExposureCompensation () "," Gets the current exposure compensation index. <br /><br />"
"android.hardware.Camera.Parameters.setRecordingHint (boolean hint) "," Sets recording mode hint. <br /><br />"
"android.hardware.Camera.Parameters.setGpsLongitude (double longitude) "," Sets GPS longitude coordinate. <br /><br />"
"android.hardware.Camera.Parameters.getSupportedSceneModes () "," Gets the supported scene modes. <br /><br />"
"android.hardware.Camera.Parameters.set (String key, String value) "," Sets a String parameter. <br /><br />"
"android.hardware.Camera.Parameters.remove (String key) "," no description <br /><br />"
"android.hardware.Camera.Parameters.setSceneMode (String value) "," Sets the scene mode. <br /><br />"
"android.hardware.Camera.Parameters.getSupportedFlashModes () "," Gets the supported flash modes. <br /><br />"
"android.hardware.Camera.Parameters.getFocalLength ()   Gets the focal length  (in millimeter) "," Gets the focal length (in millimeter) of the camera. <br /><br />"
"android.hardware.Camera.Parameters.getSupportedJpegThumbnailSizes () "," Gets the supported jpeg thumbnail sizes. <br /><br />"
"android.hardware.Camera.Parameters.getAutoExposureLock () "," Gets the state of the auto-exposure lock. <br /><br />"
"android.hardware.Camera.Parameters.getAutoWhiteBalanceLock () "," Gets the state of the auto-white balance lock. <br /><br />"
"android.hardware.Camera.Parameters.setPictureFormat (int pixel_format) "," Sets the image format for pictures. <br /><br />"
"android.hardware.Camera.Parameters.setColorEffect (String value) "," Sets the current color effect setting. <br /><br />"
"android.hardware.Camera.Parameters.getFocusMode () "," Gets the current focus mode setting. <br /><br />"
"android.hardware.Camera.Parameters.unflatten (String flattened) "," Takes a flattened string of parameters and adds each one to this Parameters object. <br /><br />"
"android.hardware.Camera.Parameters.getHorizontalViewAngle () "," Gets the horizontal angle of view in degrees. <br /><br />"
"android.hardware.Camera.Parameters.getFocusDistances (float[] output) "," Gets the distances from the camera to where an object appears to be in focus. <br /><br />"
"android.hardware.Camera.Parameters.getVerticalViewAngle () "," Gets the vertical angle of view in degrees. <br /><br />"
"android.hardware.Camera.Parameters.setFocusAreas (List< Camera.Area> focusAreas) "," Sets focus areas. <br /><br />"
"android.hardware.Camera.Parameters.getJpegQuality () "," Returns the quality setting for the JPEG picture. <br /><br />"
"android.hardware.Camera.Parameters.setGpsTimestamp (long timestamp) "," Sets GPS timestamp. <br /><br />"
"android.hardware.Camera.Parameters.isAutoExposureLockSupported () "," Returns true if auto-exposure locking is supported. <br /><br />"
"android.hardware.Camera.Parameters.setAutoWhiteBalanceLock (boolean toggle) "," Sets the auto-white balance lock state. <br /><br />"
"android.hardware.Camera.Parameters.getSupportedColorEffects () "," Gets the supported color effects. <br /><br />"
"android.hardware.Camera.Parameters.getZoom () "," Gets current zoom value. <br /><br />"
"android.hardware.Camera.Parameters.getMaxNumFocusAreas () "," Gets the maximum number of focus areas supported. <br /><br />"
"android.hardware.Camera.PictureCallback.onPictureTaken (byte[] data, Camera camera) "," Called when image data is available after a picture is taken. <br /><br />"
"android.hardware.Camera.PreviewCallback.onPreviewFrame (byte[] data, Camera camera) "," Called as preview frames are displayed. <br /><br />"
"android.hardware.Camera.ShutterCallback.onShutter () "," Called as near as possible to the moment when a photo is captured from the sensor. <br /><br />"
"android.hardware.Camera.Size.equals (Object obj) "," Compares obj to this size. <br /><br />"
"android.hardware.Camera.Size.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.hardware.camera2.CameraAccessException.getReason () "," The reason for the failure to access the camera. <br /><br />"
"android.hardware.camera2.CameraCaptureSession.CaptureCallback.onCaptureCompleted (CameraCaptureSession session, CaptureRequest request, TotalCaptureResult result) "," This method is called when an image capture has fully completed and all the result metadata is available. <br /><br />"
"android.hardware.camera2.CameraCaptureSession.CaptureCallback.onCaptureProgressed (CameraCaptureSession session, CaptureRequest request, CaptureResult partialResult)   This method is called when an image capture makes partial forward progress; some  (but not all) "," This method is called when an image capture makes partial forward progress; some (but not all) results from an image capture are available. <br /><br />"
"android.hardware.camera2.CameraCaptureSession.CaptureCallback.onCaptureSequenceCompleted (CameraCaptureSession session, int sequenceId, long frameNumber) "," This method is called independently of the others in CaptureCallback, when a capture sequence finishes and all CaptureResult or CaptureFailure for it have been returned via this listener. <br /><br />"
"android.hardware.camera2.CameraCaptureSession.CaptureCallback.onCaptureStarted (CameraCaptureSession session, CaptureRequest request, long timestamp, long frameNumber) "," This method is called when the camera device has started capturing the output image for the request, at the beginning of image exposure. <br /><br />"
"android.hardware.camera2.CameraCaptureSession.CaptureCallback.onCaptureSequenceAborted (CameraCaptureSession session, int sequenceId) "," This method is called independently of the others in CaptureCallback, when a capture sequence aborts before any CaptureResult or CaptureFailure for it have been returned via this listener. <br /><br />"
"android.hardware.camera2.CameraCaptureSession.CaptureCallback.onCaptureFailed (CameraCaptureSession session, CaptureRequest request, CaptureFailure failure)   This method is called instead of onCaptureCompleted (CameraCaptureSession, CaptureRequest, TotalCaptureResult) "," This method is called instead of onCaptureCompleted(CameraCaptureSession, CaptureRequest, TotalCaptureResult) when the camera device failed to produce a CaptureResult for the request. <br /><br />"
"android.hardware.camera2.CameraCaptureSession.getDevice () "," Get the camera device that this session is created for. <br /><br />"
"android.hardware.camera2.CameraCaptureSession.setRepeatingBurst (List< CaptureRequest> requests, CameraCaptureSession.CaptureCallback listener, Handler handler) "," Request endlessly repeating capture of a sequence of images by this capture session. <br /><br />"
"android.hardware.camera2.CameraCaptureSession.close () "," Close this capture session asynchronously. <br /><br />"
"android.hardware.camera2.CameraCaptureSession.capture (CaptureRequest request, CameraCaptureSession.CaptureCallback listener, Handler handler) "," Submit a request for an image to be captured by the camera device. <br /><br />"
"android.hardware.camera2.CameraCaptureSession.abortCaptures () "," Discard all captures currently pending and in-progress as fast as possible. <br /><br />"
"android.hardware.camera2.CameraCaptureSession.setRepeatingRequest (CaptureRequest request, CameraCaptureSession.CaptureCallback listener, Handler handler) "," Request endlessly repeating capture of images by this capture session. <br /><br />"
"android.hardware.camera2.CameraCaptureSession.captureBurst (List< CaptureRequest> requests, CameraCaptureSession.CaptureCallback listener, Handler handler) "," Submit a list of requests to be captured in sequence as a burst. <br /><br />"
"android.hardware.camera2.CameraCaptureSession.stopRepeating ()   Cancel any ongoing repeating capture set by either setRepeatingRequest or setRepeatingBurst (List  , CameraCaptureSession.CaptureCallback, Handler) "," Cancel any ongoing repeating capture set by either setRepeatingRequest or setRepeatingBurst(List  , CameraCaptureSession.CaptureCallback, Handler) . <br /><br />"
"android.hardware.camera2.CameraCaptureSession.StateCallback.onClosed (CameraCaptureSession session) "," This method is called when the session is closed. <br /><br />"
"android.hardware.camera2.CameraCaptureSession.StateCallback.onReady (CameraCaptureSession session) "," This method is called every time the session has no more capture requests to process. <br /><br />"
"android.hardware.camera2.CameraCaptureSession.StateCallback.onActive (CameraCaptureSession session) "," This method is called when the session starts actively processing capture requests. <br /><br />"
"android.hardware.camera2.CameraCaptureSession.StateCallback.onConfigured (CameraCaptureSession session) "," This method is called when the camera device has finished configuring itself, and the session can start processing capture requests. <br /><br />"
"android.hardware.camera2.CameraCaptureSession.StateCallback.onConfigureFailed (CameraCaptureSession session) "," This method is called if the session cannot be configured as requested. <br /><br />"
"android.hardware.camera2.CameraCharacteristics.get (Key<T> key) "," Get a camera characteristics field value. <br /><br />"
"android.hardware.camera2.CameraCharacteristics.getAvailableCaptureResultKeys () "," Returns the list of keys supported by this CameraDevice for querying with a CaptureResult. <br /><br />"
"android.hardware.camera2.CameraCharacteristics.getKeys () "," Returns a list of the keys contained in this map. <br /><br />"
"android.hardware.camera2.CameraCharacteristics.getAvailableCaptureRequestKeys () "," Returns the list of keys supported by this CameraDevice for querying with a CaptureRequest. <br /><br />"
"android.hardware.camera2.CameraCharacteristics.Key<T>.getName () "," Return a camelCase, period separated name formatted like: 'root.section[.subsections].name'. <br /><br />"
"android.hardware.camera2.CameraCharacteristics.Key<T>.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.hardware.camera2.CameraCharacteristics.Key<T>.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.hardware.camera2.CameraDevice.createCaptureSession (List< Surface> outputs, CameraCaptureSession.StateCallback callback, Handler handler) "," Create a new camera capture session by providing the target output set of Surfaces to the camera device. <br /><br />"
"android.hardware.camera2.CameraDevice.getId () "," Get the ID of this camera device. <br /><br />"
"android.hardware.camera2.CameraDevice.close () "," Close the connection to this camera device as quickly as possible. <br /><br />"
"android.hardware.camera2.CameraDevice.createCaptureRequest (int templateType) "," Create a CaptureRequest.Builder for new capture requests, initialized with template for a target use case. <br /><br />"
"android.hardware.camera2.CameraDevice.StateCallback.onError (CameraDevice camera, int error) "," The method called when a camera device has encountered a serious error. <br /><br />"
"android.hardware.camera2.CameraDevice.StateCallback.onOpened (CameraDevice camera) "," The method called when a camera device has finished opening. <br /><br />"
"android.hardware.camera2.CameraDevice.StateCallback.onDisconnected (CameraDevice camera) "," The method called when a camera device is no longer available for use. <br /><br />"
"android.hardware.camera2.CameraDevice.StateCallback.onClosed (CameraDevice camera)   The method called when a camera device has been closed with close () "," The method called when a camera device has been closed with close(). <br /><br />"
"android.hardware.camera2.CameraManager.AvailabilityCallback.onCameraUnavailable (String cameraId) "," A previously-available camera has become unavailable for use. <br /><br />"
"android.hardware.camera2.CameraManager.AvailabilityCallback.onCameraAvailable (String cameraId) "," A new camera has become available to use. <br /><br />"
"android.hardware.camera2.CameraMetadata<TKey>.getKeys () "," Returns a list of the keys contained in this map. <br /><br />"
"android.hardware.camera2.CaptureFailure.wasImageCaptured () "," Determine if the image was captured from the camera. <br /><br />"
"android.hardware.camera2.CaptureFailure.getFrameNumber () "," Get the frame number associated with this failed capture. <br /><br />"
"android.hardware.camera2.CaptureFailure.getReason () "," Determine why the request was dropped, whether due to an error or to a user action. <br /><br />"
"android.hardware.camera2.CaptureFailure.getSequenceId ()   The sequence ID for this failed capture that was returned by the capture (CaptureRequest, CameraCaptureSession.CaptureCallback, Handler) "," The sequence ID for this failed capture that was returned by the capture(CaptureRequest, CameraCaptureSession.CaptureCallback, Handler) family of functions. <br /><br />"
"android.hardware.camera2.CaptureFailure.getRequest () "," Get the request associated with this failed capture. <br /><br />"
"android.hardware.camera2.CaptureRequest.Builder.get (Key<T> key) "," Get a capture request field value. <br /><br />"
"android.hardware.camera2.CaptureRequest.Builder.addTarget (Surface outputTarget)   Add a surface to the list of targets for this request The Surface added must be one of the surfaces included in the most recent call to createCaptureSession (List  , CameraCaptureSession.StateCallback, Handler) "," Add a surface to the list of targets for this request The Surface added must be one of the surfaces included in the most recent call to createCaptureSession(List  , CameraCaptureSession.StateCallback, Handler) , when the request is given to the camera device. <br /><br />"
"android.hardware.camera2.CaptureRequest.Builder.setTag (Object tag) "," Set a tag for this request. <br /><br />"
"android.hardware.camera2.CaptureRequest.Builder.set (Key<T> key, T value) "," Set a capture request field to a value. <br /><br />"
"android.hardware.camera2.CaptureRequest.Builder.removeTarget (Surface outputTarget) "," Remove a surface from the list of targets for this request. <br /><br />"
"android.hardware.camera2.CaptureRequest.Builder.build () "," Build a request using the current target Surfaces and settings. <br /><br />"
"android.hardware.camera2.CaptureRequest.equals (Object other) "," Determine whether this CaptureRequest is equal to another CaptureRequest. <br /><br />"
"android.hardware.camera2.CaptureRequest.get (Key<T> key) "," Get a capture request field value. <br /><br />"
"android.hardware.camera2.CaptureRequest.getTag () "," Retrieve the tag for this request, if any. <br /><br />"
"android.hardware.camera2.CaptureRequest.getKeys () "," Returns a list of the keys contained in this map. <br /><br />"
"android.hardware.camera2.CaptureRequest.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.hardware.camera2.CaptureRequest.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.hardware.camera2.CaptureRequest.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.hardware.camera2.CaptureRequest.Key<T>.getName () "," Return a camelCase, period separated name formatted like: 'root.section[.subsections].name'. <br /><br />"
"android.hardware.camera2.CaptureRequest.Key<T>.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.hardware.camera2.CaptureRequest.Key<T>.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.hardware.camera2.CaptureResult.getFrameNumber () "," Get the frame number associated with this result. <br /><br />"
"android.hardware.camera2.CaptureResult.get (Key<T> key) "," Get a capture result field value. <br /><br />"
"android.hardware.camera2.CaptureResult.getKeys () "," Returns a list of the keys contained in this map. <br /><br />"
"android.hardware.camera2.CaptureResult.getRequest () "," Get the request associated with this result. <br /><br />"
"android.hardware.camera2.CaptureResult.getSequenceId ()   The sequence ID for this failure that was returned by the capture (CaptureRequest, CameraCaptureSession.CaptureCallback, Handler) "," The sequence ID for this failure that was returned by the capture(CaptureRequest, CameraCaptureSession.CaptureCallback, Handler) family of functions. <br /><br />"
"android.hardware.camera2.CaptureResult.Key<T>.getName () "," Return a camelCase, period separated name formatted like: 'root.section[.subsections].name'. <br /><br />"
"android.hardware.camera2.CaptureResult.Key<T>.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.hardware.camera2.CaptureResult.Key<T>.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.hardware.camera2.DngCreator.writeImage (OutputStream dngOutput, Image pixels) "," Write the pixel data to a DNG file with the currently configured metadata. <br /><br />"
"android.hardware.camera2.DngCreator.setOrientation (int orientation) "," Set the orientation value to write. <br /><br />"
"android.hardware.camera2.DngCreator.setThumbnail (Image pixels) "," Set the thumbnail image. <br /><br />"
"android.hardware.camera2.DngCreator.setLocation (Location location) "," Set image location metadata. <br /><br />"
"android.hardware.camera2.DngCreator.setDescription (String description) "," Set the user description string to write. <br /><br />"
"android.hardware.camera2.DngCreator.close () "," Closes the object and release any system resources it holds. <br /><br />"
"android.hardware.camera2.DngCreator.writeByteBuffer (OutputStream dngOutput, Size size, ByteBuffer pixels, long offset) "," Write the RAW_SENSOR pixel data to a DNG file with the currently configured metadata. <br /><br />"
"android.hardware.camera2.DngCreator.setThumbnail (Bitmap pixels) "," Set the thumbnail image. <br /><br />"
"android.hardware.camera2.DngCreator.writeInputStream (OutputStream dngOutput, Size size, InputStream pixels, long offset) "," Write the RAW_SENSOR pixel data to a DNG file with the currently configured metadata. <br /><br />"
"android.hardware.camera2.params.BlackLevelPattern.equals (Object obj) "," Check if this BlackLevelPattern is equal to another BlackLevelPattern. <br /><br />"
"android.hardware.camera2.params.BlackLevelPattern.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.hardware.camera2.params.BlackLevelPattern.getOffsetForIndex (int column, int row) "," Return the color channel offset for a given index into the array of raw pixel values. <br /><br />"
"android.hardware.camera2.params.BlackLevelPattern.copyTo (int[] destination, int offset) "," Copy the ColorChannel offsets into the destination vector. <br /><br />"
"android.hardware.camera2.params.ColorSpaceTransform.equals (Object obj) "," Check if this ColorSpaceTransform is equal to another ColorSpaceTransform. <br /><br />"
"android.hardware.camera2.params.ColorSpaceTransform.copyElements (Rational[] destination, int offset) "," Copy the Rational elements in row-major order from this matrix into the destination. <br /><br />"
"android.hardware.camera2.params.ColorSpaceTransform.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.hardware.camera2.params.ColorSpaceTransform.copyElements (int[] destination, int offset) "," Copy the Rational elements in row-major order from this matrix into the destination. <br /><br />"
"android.hardware.camera2.params.ColorSpaceTransform.getElement (int column, int row) "," Get an element of this matrix by its row and column. <br /><br />"
"android.hardware.camera2.params.ColorSpaceTransform.toString () "," Return the color space transform as a string representation. <br /><br />"
"android.hardware.camera2.params.Face.getScore () "," The confidence level for the detection of the face. <br /><br />"
"android.hardware.camera2.params.Face.getId () "," An unique id per face while the face is visible to the tracker. <br /><br />"
"android.hardware.camera2.params.Face.getLeftEyePosition () "," The coordinates of the center of the left eye. <br /><br />"
"android.hardware.camera2.params.Face.getBounds () "," Bounds of the face. <br /><br />"
"android.hardware.camera2.params.Face.toString () "," Represent the Face as a string for debugging purposes. <br /><br />"
"android.hardware.camera2.params.Face.getRightEyePosition () "," The coordinates of the center of the right eye. <br /><br />"
"android.hardware.camera2.params.Face.getMouthPosition () "," The coordinates of the center of the mouth. <br /><br />"
"android.hardware.camera2.params.LensShadingMap.copyGainFactors (float[] destination, int offset) "," Copy all gain factors in row-major order from this lens shading map into the destination. <br /><br />"
"android.hardware.camera2.params.LensShadingMap.getColumnCount () "," Get the number of columns in this map. <br /><br />"
"android.hardware.camera2.params.LensShadingMap.getGainFactorCount () "," Get the total number of gain factors in this map. <br /><br />"
"android.hardware.camera2.params.LensShadingMap.getGainFactor (int colorChannel, int column, int row) "," Get a single color channel gain factor from this lens shading map by its row and column. <br /><br />"
"android.hardware.camera2.params.LensShadingMap.equals (Object obj) "," Check if this LensShadingMap is equal to another LensShadingMap. <br /><br />"
"android.hardware.camera2.params.LensShadingMap.getGainFactorVector (int column, int row) "," Get a gain factor vector from this lens shading map by its row and column. <br /><br />"
"android.hardware.camera2.params.LensShadingMap.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.hardware.camera2.params.LensShadingMap.getRowCount () "," Get the number of rows in this map. <br /><br />"
"android.hardware.camera2.params.MeteringRectangle.getMeteringWeight () "," Return the metering weight of the rectangle. <br /><br />"
"android.hardware.camera2.params.MeteringRectangle.equals (Object other) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.hardware.camera2.params.MeteringRectangle.getX () "," Return the X coordinate of the left side of the rectangle. <br /><br />"
"android.hardware.camera2.params.MeteringRectangle.getHeight () "," Return the height of the rectangle. <br /><br />"
"android.hardware.camera2.params.MeteringRectangle.toString ()   Return the metering rectangle as a string representation ' (x:%d, y:%d, w:%d, h:%d, wt:%d) "," Return the metering rectangle as a string representation '(x:%d, y:%d, w:%d, h:%d, wt:%d)' where each %d respectively represents the x, y, width, height, and weight points. <br /><br />"
"android.hardware.camera2.params.MeteringRectangle.getSize () "," Convenience method to create the size from this metering rectangle. <br /><br />"
"android.hardware.camera2.params.MeteringRectangle.getRect () "," Convenience method to create a Rect from this metering rectangle. <br /><br />"
"android.hardware.camera2.params.MeteringRectangle.equals (MeteringRectangle other) "," Compare two metering rectangles to see if they are equal. <br /><br />"
"android.hardware.camera2.params.MeteringRectangle.getUpperLeftPoint ()   Convenience method to create the upper-left  (X,Y) "," Convenience method to create the upper-left (X,Y) coordinate as a Point. <br /><br />"
"android.hardware.camera2.params.MeteringRectangle.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.hardware.camera2.params.MeteringRectangle.getY () "," Return the Y coordinate of the upper side of the rectangle. <br /><br />"
"android.hardware.camera2.params.MeteringRectangle.getWidth () "," Return the width of the rectangle. <br /><br />"
"android.hardware.camera2.params.RggbChannelVector.getRed () "," Get the red component. <br /><br />"
"android.hardware.camera2.params.RggbChannelVector.getGreenOdd ()   Get the green  (odd rows) "," Get the green (odd rows) component. <br /><br />"
"android.hardware.camera2.params.RggbChannelVector.getGreenEven ()   Get the green  (even rows) "," Get the green (even rows) component. <br /><br />"
"android.hardware.camera2.params.RggbChannelVector.getBlue () "," Get the blue component. <br /><br />"
"android.hardware.camera2.params.RggbChannelVector.equals (Object obj) "," Check if this RggbChannelVector is equal to another RggbChannelVector. <br /><br />"
"android.hardware.camera2.params.RggbChannelVector.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.hardware.camera2.params.RggbChannelVector.copyTo (float[] destination, int offset) "," Copy the vector into the destination in the order [R, Geven, Godd, B]. <br /><br />"
"android.hardware.camera2.params.RggbChannelVector.toString () "," Return the RggbChannelVector as a string representation. <br /><br />"
"android.hardware.camera2.params.RggbChannelVector.getComponent (int colorChannel) "," Get the component by the color channel index. <br /><br />"
"android.hardware.camera2.params.StreamConfigurationMap.getHighSpeedVideoSizesFor (Range< Integer> fpsRange) "," Get the supported video sizes for input FPS range. <br /><br />"
"android.hardware.camera2.params.StreamConfigurationMap.getHighSpeedVideoFpsRangesFor (Size size)   Get the frame per second ranges  (fpsMin, fpsMax) "," Get the frame per second ranges (fpsMin, fpsMax) for input high speed video size. <br /><br />"
"android.hardware.camera2.params.StreamConfigurationMap.isOutputSupportedFor (Surface surface)   Determine whether or not the surface in its current state is suitable to be included in a "," Determine whether or not the surface in its current state is suitable to be included in a capture session as an output. <br /><br />"
"android.hardware.camera2.params.StreamConfigurationMap.isOutputSupportedFor (int format)   Determine whether or not output surfaces with a particular user-defined format can be passed "," Determine whether or not output surfaces with a particular user-defined format can be passed createCaptureSession. <br /><br />"
"android.hardware.camera2.params.StreamConfigurationMap.getOutputMinFrameDuration (int format, Size size)   Get the minimum frame duration for the format/size combination  (in nanoseconds) "," Get the minimum frame duration for the format/size combination (in nanoseconds). <br /><br />"
"android.hardware.camera2.params.StreamConfigurationMap.getHighSpeedVideoFpsRanges () "," Get a list of supported high speed video recording FPS ranges. <br /><br />"
"android.hardware.camera2.params.StreamConfigurationMap.getOutputSizes (int format) "," Get a list of sizes compatible with the requested image format. <br /><br />"
"android.hardware.camera2.params.StreamConfigurationMap.getOutputStallDuration (Class<T> klass, Size size)   Get the stall duration for the class/size combination  (in nanoseconds) "," Get the stall duration for the class/size combination (in nanoseconds). <br /><br />"
"android.hardware.camera2.params.StreamConfigurationMap.equals (Object obj) "," Check if this StreamConfigurationMap is equal to another StreamConfigurationMap. <br /><br />"
"android.hardware.camera2.params.StreamConfigurationMap.getHighSpeedVideoSizes () "," Get a list of supported high speed video recording sizes. <br /><br />"
"android.hardware.camera2.params.StreamConfigurationMap.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.hardware.camera2.params.StreamConfigurationMap.isOutputSupportedFor (Class<T> klass) "," Determine whether or not output streams can be configured with a particular class as a consumer. <br /><br />"
"android.hardware.camera2.params.StreamConfigurationMap.getOutputStallDuration (int format, Size size)   Get the stall duration for the format/size combination  (in nanoseconds) "," Get the stall duration for the format/size combination (in nanoseconds). <br /><br />"
"android.hardware.camera2.params.StreamConfigurationMap.getOutputFormats () "," Get the image format output formats in this stream configuration. <br /><br />"
"android.hardware.camera2.params.StreamConfigurationMap.getOutputMinFrameDuration (Class<T> klass, Size size)   Get the minimum frame duration for the class/size combination  (in nanoseconds) "," Get the minimum frame duration for the class/size combination (in nanoseconds). <br /><br />"
"android.hardware.camera2.params.StreamConfigurationMap.getOutputSizes (Class<T> klass) "," Get a list of sizes compatible with klass to use as an output. <br /><br />"
"android.hardware.camera2.params.TonemapCurve.getPointCount (int colorChannel) "," Get the number of points stored in this tonemap curve for the specified color channel. <br /><br />"
"android.hardware.camera2.params.TonemapCurve.getPoint (int colorChannel, int index) "," Get the point for a color channel at a specified index. <br /><br />"
"android.hardware.camera2.params.TonemapCurve.equals (Object obj) "," Check if this TonemapCurve is equal to another TonemapCurve. <br /><br />"
"android.hardware.camera2.params.TonemapCurve.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.hardware.camera2.params.TonemapCurve.copyColorCurve (int colorChannel, float[] destination, int offset) "," Copy the color curve for a single color channel from this tonemap curve into the destination. <br /><br />"
"android.hardware.camera2.params.TonemapCurve.toString () "," Return the TonemapCurve as a string representation. <br /><br />"
"android.hardware.camera2.TotalCaptureResult.getPartialResults () "," Get the read-only list of partial results that compose this total result. <br /><br />"
"android.hardware.ConsumerIrManager.CarrierFrequencyRange.getMaxFrequency ()   Get the maximum  (inclusive) "," Get the maximum (inclusive) frequency in this range segment. <br /><br />"
"android.hardware.ConsumerIrManager.CarrierFrequencyRange.getMinFrequency ()   Get the minimum  (inclusive) "," Get the minimum (inclusive) frequency in this range segment. <br /><br />"
"android.hardware.display.DisplayManager.DisplayListener.onDisplayRemoved (int displayId) "," Called whenever a logical display has been removed from the system. <br /><br />"
"android.hardware.display.DisplayManager.DisplayListener.onDisplayChanged (int displayId) "," Called whenever the properties of a logical display have changed. <br /><br />"
"android.hardware.display.DisplayManager.DisplayListener.onDisplayAdded (int displayId) "," Called whenever a logical display has been added to the system. <br /><br />"
"android.hardware.display.DisplayManager.getDisplays () "," Gets all currently valid logical displays. <br /><br />"
"android.hardware.display.DisplayManager.createVirtualDisplay (String name, int width, int height, int densityDpi, Surface surface, int flags, VirtualDisplay.Callback callback, Handler handler) "," Creates a virtual display. <br /><br />"
"android.hardware.display.DisplayManager.unregisterDisplayListener (DisplayManager.DisplayListener listener) "," Unregisters a display listener. <br /><br />"
"android.hardware.display.DisplayManager.getDisplays (String category) "," Gets all currently valid logical displays of the specified category. <br /><br />"
"android.hardware.display.DisplayManager.createVirtualDisplay (String name, int width, int height, int densityDpi, Surface surface, int flags) "," Creates a virtual display. <br /><br />"
"android.hardware.display.DisplayManager.getDisplay (int displayId) "," Gets information about a logical display. <br /><br />"
"android.hardware.display.DisplayManager.registerDisplayListener (DisplayManager.DisplayListener listener, Handler handler) "," Registers an display listener to receive notifications about when displays are added, removed or changed. <br /><br />"
"android.hardware.display.VirtualDisplay.Callback.onResumed () "," Called when the virtual display video projection has been resumed after having been paused. <br /><br />"
"android.hardware.display.VirtualDisplay.Callback.onStopped () "," Called when the virtual display video projection has been stopped by the system. <br /><br />"
"android.hardware.display.VirtualDisplay.Callback.onPaused ()   Called when the virtual display video projection has been paused by the system or when the surface has been detached by the application by calling setSurface (null) "," Called when the virtual display video projection has been paused by the system or when the surface has been detached by the application by calling setSurface(null). <br /><br />"
"android.hardware.GeomagneticField.getX () "," no description <br /><br />"
"android.hardware.GeomagneticField.getZ () "," no description <br /><br />"
"android.hardware.GeomagneticField.getHorizontalStrength () "," no description <br /><br />"
"android.hardware.GeomagneticField.getInclination () "," no description <br /><br />"
"android.hardware.GeomagneticField.getDeclination () "," no description <br /><br />"
"android.hardware.GeomagneticField.getY () "," no description <br /><br />"
"android.hardware.GeomagneticField.getFieldStrength () "," no description <br /><br />"
"android.hardware.input.InputManager.getInputDevice (int id) "," Gets information about the input device with the specified id. <br /><br />"
"android.hardware.input.InputManager.getInputDeviceIds () "," Gets the ids of all input devices in the system. <br /><br />"
"android.hardware.input.InputManager.unregisterInputDeviceListener (InputManager.InputDeviceListener listener) "," Unregisters an input device listener. <br /><br />"
"android.hardware.input.InputManager.registerInputDeviceListener (InputManager.InputDeviceListener listener, Handler handler) "," Registers an input device listener to receive notifications about when input devices are added, removed or changed. <br /><br />"
"android.hardware.input.InputManager.InputDeviceListener.onInputDeviceAdded (int deviceId) "," Called whenever an input device has been added to the system. <br /><br />"
"android.hardware.input.InputManager.InputDeviceListener.onInputDeviceRemoved (int deviceId) "," Called whenever an input device has been removed from the system. <br /><br />"
"android.hardware.input.InputManager.InputDeviceListener.onInputDeviceChanged (int deviceId) "," Called whenever the properties of an input device have changed since they were last queried. <br /><br />"
"android.hardware.Sensor.getVendor () "," no description <br /><br />"
"android.hardware.Sensor.getFifoReservedEventCount () "," no description <br /><br />"
"android.hardware.Sensor.getType () "," no description <br /><br />"
"android.hardware.Sensor.getPower () "," no description <br /><br />"
"android.hardware.Sensor.getFifoMaxEventCount () "," no description <br /><br />"
"android.hardware.Sensor.getResolution () "," no description <br /><br />"
"android.hardware.Sensor.getMaximumRange () "," no description <br /><br />"
"android.hardware.Sensor.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.hardware.Sensor.isWakeUpSensor () "," Returns true if the sensor is a wake-up sensor. <br /><br />"
"android.hardware.Sensor.getName () "," no description <br /><br />"
"android.hardware.Sensor.getStringType () "," no description <br /><br />"
"android.hardware.Sensor.getMaxDelay () "," This value is defined only for continuous and on-change sensors. <br /><br />"
"android.hardware.Sensor.getVersion () "," no description <br /><br />"
"android.hardware.Sensor.getReportingMode () "," Each sensor has exactly one reporting mode associated with it. <br /><br />"
"android.hardware.Sensor.getMinDelay () "," no description <br /><br />"
"android.hardware.SensorEventListener.onSensorChanged (SensorEvent event) "," Called when sensor values have changed. <br /><br />"
"android.hardware.SensorEventListener.onAccuracyChanged (Sensor sensor, int accuracy) "," Called when the accuracy of the registered sensor has changed. <br /><br />"
"android.hardware.SensorEventListener2.onFlushCompleted (Sensor sensor)   Called after flush () "," Called after flush() is completed. <br /><br />"
"android.hardware.SensorListener.onSensorChanged (int sensor, float[] values) "," Called when sensor values have changed. <br /><br />"
"android.hardware.SensorListener.onAccuracyChanged (int sensor, int accuracy) "," Called when the accuracy of a sensor has changed. <br /><br />"
"android.hardware.SensorManager.getSensors ()    This method was deprecated in API level 3. This method is deprecated, use getSensorList (int) "," This method was deprecated in API level 3. This method is deprecated, use getSensorList(int) instead <br /><br />"
"android.hardware.SensorManager.requestTriggerSensor (TriggerEventListener listener, Sensor sensor) "," Requests receiving trigger events for a trigger sensor. <br /><br />"
"android.hardware.SensorManager.getDefaultSensor (int type, boolean wakeUp) "," Return a Sensor with the given type and wakeUp properties. <br /><br />"
"android.hardware.SensorManager.getRotationMatrixFromVector (float[] R, float[] rotationVector) "," Helper function to convert a rotation vector to a rotation matrix. <br /><br />"
"android.hardware.SensorManager.remapCoordinateSystem (float[] inR, int X, int Y, float[] outR) "," Rotates the supplied rotation matrix so it is expressed in a different coordinate system. <br /><br />"
"android.hardware.SensorManager.unregisterListener (SensorListener listener)    This method was deprecated in API level 3. This method is deprecated, use unregisterListener (SensorEventListener) "," This method was deprecated in API level 3. This method is deprecated, use unregisterListener(SensorEventListener) instead. <br /><br />"
"android.hardware.SensorManager.registerListener (SensorEventListener listener, Sensor sensor, int samplingPeriodUs, int maxReportLatencyUs) "," Registers a SensorEventListener for the given sensor at the given sampling frequency and the given maximum reporting latency. <br /><br />"
"android.hardware.SensorManager.getDefaultSensor (int type) "," Use this method to get the default sensor for a given type. <br /><br />"
"android.hardware.SensorManager.getQuaternionFromVector (float[] Q, float[] rv) "," Helper function to convert a rotation vector to a normalized quaternion. <br /><br />"
"android.hardware.SensorManager.getAngleChange (float[] angleChange, float[] R, float[] prevR) "," Helper function to compute the angle change between two rotation matrices. <br /><br />"
"android.hardware.SensorManager.registerListener (SensorListener listener, int sensors, int rate)    This method was deprecated in API level 3. This method is deprecated, use registerListener (SensorEventListener, Sensor, int) "," This method was deprecated in API level 3. This method is deprecated, use registerListener(SensorEventListener, Sensor, int) instead. <br /><br />"
"android.hardware.SensorManager.unregisterListener (SensorEventListener listener) "," Unregisters a listener for all sensors. <br /><br />"
"android.hardware.SensorManager.registerListener (SensorListener listener, int sensors)    This method was deprecated in API level 3. This method is deprecated, use registerListener (SensorEventListener, Sensor, int) "," This method was deprecated in API level 3. This method is deprecated, use registerListener(SensorEventListener, Sensor, int) instead. <br /><br />"
"android.hardware.SensorManager.registerListener (SensorEventListener listener, Sensor sensor, int samplingPeriodUs, Handler handler) "," Registers a SensorEventListener for the given sensor. <br /><br />"
"android.hardware.SensorManager.registerListener (SensorEventListener listener, Sensor sensor, int samplingPeriodUs, int maxReportLatencyUs, Handler handler) "," Registers a SensorEventListener for the given sensor at the given sampling frequency and the given maximum reporting latency. <br /><br />"
"android.hardware.SensorManager.flush (SensorEventListener listener) "," Flushes the FIFO of all the sensors registered for this listener. <br /><br />"
"android.hardware.SensorManager.unregisterListener (SensorListener listener, int sensors)    This method was deprecated in API level 3. This method is deprecated, use unregisterListener (SensorEventListener, Sensor) "," This method was deprecated in API level 3. This method is deprecated, use unregisterListener(SensorEventListener, Sensor) instead. <br /><br />"
"android.hardware.SensorManager.getOrientation (float[] R, float[] values) "," Computes the device's orientation based on the rotation matrix. <br /><br />"
"android.hardware.SensorManager.getRotationMatrix (float[] R, float[] I, float[] gravity, float[] geomagnetic)    Computes the inclination matrix I as well as the rotation matrix R transforming a vector from the device coordinate system to the world's coordinate system which is defined as a direct orthonormal basis, where:   X is defined as the vector product Y.Z  (It is tangential to the ground at the device's current location and roughly points East) "," Computes the inclination matrix I as well as the rotation matrix R transforming a vector from the device coordinate system to the world's coordinate system which is defined as a direct orthonormal basis, where:   X is defined as the vector product Y.Z (It is tangential to the ground at the device's current location and roughly points East). <br /><br />"
"android.hardware.SensorManager.unregisterListener (SensorEventListener listener, Sensor sensor) "," Unregisters a listener for the sensors with which it is registered. <br /><br />"
"android.hardware.SensorManager.cancelTriggerSensor (TriggerEventListener listener, Sensor sensor) "," Cancels receiving trigger events for a trigger sensor. <br /><br />"
"android.hardware.SensorManager.registerListener (SensorEventListener listener, Sensor sensor, int samplingPeriodUs) "," Registers a SensorEventListener for the given sensor at the given sampling frequency. <br /><br />"
"android.hardware.SensorManager.getInclination (float[] I)   Computes the geomagnetic inclination angle in radians from the inclination matrix I returned by getRotationMatrix (float[], float[], float[], float[]) "," Computes the geomagnetic inclination angle in radians from the inclination matrix I returned by getRotationMatrix(float[], float[], float[], float[]). <br /><br />"
"android.hardware.SensorManager.getAltitude (float p0, float p) "," Computes the Altitude in meters from the atmospheric pressure and the pressure at sea level. <br /><br />"
"android.hardware.SensorManager.getSensorList (int type) "," Use this method to get the list of available sensors of a certain type. <br /><br />"
"android.hardware.TriggerEventListener.onTrigger (TriggerEvent event) "," The method that will be called when the sensor is triggered. <br /><br />"
"android.hardware.usb.UsbAccessory.getDescription () "," Returns a user visible description of the accessory. <br /><br />"
"android.hardware.usb.UsbAccessory.getManufacturer () "," Returns the manufacturer name of the accessory. <br /><br />"
"android.hardware.usb.UsbAccessory.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.hardware.usb.UsbAccessory.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.hardware.usb.UsbAccessory.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.hardware.usb.UsbAccessory.getVersion () "," Returns the version of the accessory. <br /><br />"
"android.hardware.usb.UsbAccessory.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.hardware.usb.UsbAccessory.getSerial () "," Returns the unique serial number for the accessory. <br /><br />"
"android.hardware.usb.UsbAccessory.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.hardware.usb.UsbAccessory.getUri () "," Returns the URI for the accessory. <br /><br />"
"android.hardware.usb.UsbAccessory.getModel () "," Returns the model name of the accessory. <br /><br />"
"android.hardware.usb.UsbConfiguration.isRemoteWakeup () "," Returns the remote-wakeup attribute value configuration's attributes field. <br /><br />"
"android.hardware.usb.UsbConfiguration.getName () "," Returns the configuration's name. <br /><br />"
"android.hardware.usb.UsbConfiguration.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.hardware.usb.UsbConfiguration.isSelfPowered () "," Returns the self-powered attribute value configuration's attributes field. <br /><br />"
"android.hardware.usb.UsbConfiguration.getId () "," Returns the configuration's ID field. <br /><br />"
"android.hardware.usb.UsbConfiguration.getInterfaceCount () "," Returns the number of UsbInterfaces this configuration contains. <br /><br />"
"android.hardware.usb.UsbConfiguration.getInterface (int index) "," Returns the UsbInterface at the given index. <br /><br />"
"android.hardware.usb.UsbConfiguration.getMaxPower () "," Returns the configuration's max power consumption, in milliamps. <br /><br />"
"android.hardware.usb.UsbConfiguration.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.hardware.usb.UsbConfiguration.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.hardware.usb.UsbDevice.getDeviceId (String name) "," no description <br /><br />"
"android.hardware.usb.UsbDevice.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.hardware.usb.UsbDevice.getInterfaceCount () "," Returns the number of UsbInterfaces this device contains. <br /><br />"
"android.hardware.usb.UsbDevice.getManufacturerName () "," Returns the manufacturer name of the device. <br /><br />"
"android.hardware.usb.UsbDevice.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.hardware.usb.UsbDevice.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.hardware.usb.UsbDevice.getConfiguration (int index) "," Returns the UsbConfiguration at the given index. <br /><br />"
"android.hardware.usb.UsbDevice.getDeviceName () "," Returns the name of the device. <br /><br />"
"android.hardware.usb.UsbDevice.getDeviceName (int id) "," no description <br /><br />"
"android.hardware.usb.UsbDevice.getProductId () "," Returns a product ID for the device. <br /><br />"
"android.hardware.usb.UsbDevice.getSerialNumber () "," Returns the serial number of the device. <br /><br />"
"android.hardware.usb.UsbDevice.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.hardware.usb.UsbDevice.getDeviceSubclass () "," Returns the device's subclass field. <br /><br />"
"android.hardware.usb.UsbDevice.getConfigurationCount () "," Returns the number of UsbConfigurations this device contains. <br /><br />"
"android.hardware.usb.UsbDevice.getInterface (int index) "," Returns the UsbInterface at the given index. <br /><br />"
"android.hardware.usb.UsbDevice.getVendorId () "," Returns a vendor ID for the device. <br /><br />"
"android.hardware.usb.UsbDevice.getDeviceClass () "," Returns the devices's class field. <br /><br />"
"android.hardware.usb.UsbDevice.getProductName () "," Returns the product name of the device. <br /><br />"
"android.hardware.usb.UsbDevice.getDeviceProtocol () "," Returns the device's protocol field. <br /><br />"
"android.hardware.usb.UsbDevice.getDeviceId () "," Returns a unique integer ID for the device. <br /><br />"
"android.hardware.usb.UsbDevice.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.hardware.usb.UsbDeviceConnection.requestWait ()   Waits for the result of a queue (ByteBuffer, int) "," Waits for the result of a queue(ByteBuffer, int) operation Note that this may return requests queued on multiple UsbEndpoints. <br /><br />"
"android.hardware.usb.UsbDeviceConnection.setConfiguration (UsbConfiguration configuration) "," Sets the device's current UsbConfiguration. <br /><br />"
"android.hardware.usb.UsbDeviceConnection.close () "," Releases all system resources related to the device. <br /><br />"
"android.hardware.usb.UsbDeviceConnection.getRawDescriptors () "," Returns the raw USB descriptors for the device. <br /><br />"
"android.hardware.usb.UsbDeviceConnection.bulkTransfer (UsbEndpoint endpoint, byte[] buffer, int offset, int length, int timeout) "," Performs a bulk transaction on the given endpoint. <br /><br />"
"android.hardware.usb.UsbDeviceConnection.getSerial () "," Returns the serial number for the device. <br /><br />"
"android.hardware.usb.UsbDeviceConnection.getFileDescriptor () "," Returns the native file descriptor for the device, or -1 if the device is not opened. <br /><br />"
"android.hardware.usb.UsbDeviceConnection.controlTransfer (int requestType, int request, int value, int index, byte[] buffer, int length, int timeout) "," Performs a control transaction on endpoint zero for this device. <br /><br />"
"android.hardware.usb.UsbDeviceConnection.releaseInterface (UsbInterface intf) "," Releases exclusive access to a UsbInterface. <br /><br />"
"android.hardware.usb.UsbDeviceConnection.setInterface (UsbInterface intf) "," Sets the current UsbInterface. <br /><br />"
"android.hardware.usb.UsbDeviceConnection.controlTransfer (int requestType, int request, int value, int index, byte[] buffer, int offset, int length, int timeout) "," Performs a control transaction on endpoint zero for this device. <br /><br />"
"android.hardware.usb.UsbDeviceConnection.claimInterface (UsbInterface intf, boolean force) "," Claims exclusive access to a UsbInterface. <br /><br />"
"android.hardware.usb.UsbDeviceConnection.bulkTransfer (UsbEndpoint endpoint, byte[] buffer, int length, int timeout) "," Performs a bulk transaction on the given endpoint. <br /><br />"
"android.hardware.usb.UsbEndpoint.getAttributes () "," Returns the endpoint's attributes field. <br /><br />"
"android.hardware.usb.UsbEndpoint.getMaxPacketSize () "," Returns the endpoint's maximum packet size. <br /><br />"
"android.hardware.usb.UsbEndpoint.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.hardware.usb.UsbEndpoint.getType () "," Returns the endpoint's type. <br /><br />"
"android.hardware.usb.UsbEndpoint.getDirection () "," Returns the endpoint's direction. <br /><br />"
"android.hardware.usb.UsbEndpoint.getInterval () "," Returns the endpoint's interval field. <br /><br />"
"android.hardware.usb.UsbEndpoint.getAddress () "," Returns the endpoint's address field. <br /><br />"
"android.hardware.usb.UsbEndpoint.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.hardware.usb.UsbEndpoint.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.hardware.usb.UsbEndpoint.getEndpointNumber () "," Extracts the endpoint's endpoint number from its address <br /><br />"
"android.hardware.usb.UsbInterface.getName () "," Returns the interface's name. <br /><br />"
"android.hardware.usb.UsbInterface.getInterfaceSubclass () "," Returns the interface's subclass field. <br /><br />"
"android.hardware.usb.UsbInterface.getEndpointCount () "," Returns the number of UsbEndpoints this interface contains. <br /><br />"
"android.hardware.usb.UsbInterface.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.hardware.usb.UsbInterface.getId () "," Returns the interface's bInterfaceNumber field. <br /><br />"
"android.hardware.usb.UsbInterface.getAlternateSetting () "," Returns the interface's bAlternateSetting field. <br /><br />"
"android.hardware.usb.UsbInterface.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.hardware.usb.UsbInterface.getInterfaceProtocol () "," Returns the interface's protocol field. <br /><br />"
"android.hardware.usb.UsbInterface.getEndpoint (int index) "," Returns the UsbEndpoint at the given index. <br /><br />"
"android.hardware.usb.UsbInterface.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.hardware.usb.UsbInterface.getInterfaceClass () "," Returns the interface's class field. <br /><br />"
"android.hardware.usb.UsbManager.requestPermission (UsbAccessory accessory, PendingIntent pi) "," Requests temporary permission for the given package to access the accessory. <br /><br />"
"android.hardware.usb.UsbManager.hasPermission (UsbAccessory accessory) "," Returns true if the caller has permission to access the accessory. <br /><br />"
"android.hardware.usb.UsbManager.requestPermission (UsbDevice device, PendingIntent pi) "," Requests temporary permission for the given package to access the device. <br /><br />"
"android.hardware.usb.UsbManager.openAccessory (UsbAccessory accessory) "," Opens a file descriptor for reading and writing data to the USB accessory. <br /><br />"
"android.hardware.usb.UsbManager.hasPermission (UsbDevice device) "," Returns true if the caller has permission to access the device. <br /><br />"
"android.hardware.usb.UsbManager.openDevice (UsbDevice device) "," Opens the device so it can be used to send and receive data using UsbRequest. <br /><br />"
"android.hardware.usb.UsbManager.getDeviceList () "," Returns a HashMap containing all USB devices currently attached. <br /><br />"
"android.hardware.usb.UsbManager.getAccessoryList () "," Returns a list of currently attached USB accessories. <br /><br />"
"android.hardware.usb.UsbRequest.getClientData () "," Returns the client data for the request. <br /><br />"
"android.hardware.usb.UsbRequest.setClientData (Object data) "," Sets the client data for the request. <br /><br />"
"android.hardware.usb.UsbRequest.queue (ByteBuffer buffer, int length) "," Queues the request to send or receive data on its endpoint. <br /><br />"
"android.hardware.usb.UsbRequest.close () "," Releases all resources related to this request. <br /><br />"
"android.hardware.usb.UsbRequest.cancel () "," Cancels a pending queue operation. <br /><br />"
"android.hardware.usb.UsbRequest.getEndpoint () "," Returns the endpoint for the request, or null if the request is not opened. <br /><br />"
"android.hardware.usb.UsbRequest.initialize (UsbDeviceConnection connection, UsbEndpoint endpoint) "," Initializes the request so it can read or write data on the given endpoint. <br /><br />"
"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl.setSessionEnabled (InputMethodSession session, boolean enabled)   Take care of enabling or disabling an existing session by calling its AbstractInputMethodSessionImpl.setEnabled () "," Take care of enabling or disabling an existing session by calling its AbstractInputMethodSessionImpl.setEnabled() method. <br /><br />"
"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl.revokeSession (InputMethodSession session)   Take care of killing an existing session by calling its AbstractInputMethodSessionImpl.revokeSelf () "," Take care of killing an existing session by calling its AbstractInputMethodSessionImpl.revokeSelf() method. <br /><br />"
"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl.createSession (InputMethod.SessionCallback callback)   Instantiate a new client session for the input method, by calling back to AbstractInputMethodService.onCreateInputMethodSessionInterface () "," Instantiate a new client session for the input method, by calling back to AbstractInputMethodService.onCreateInputMethodSessionInterface(). <br /><br />"
"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl.isRevoked () "," Check whether this session has been revoked by the system. <br /><br />"
"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl.dispatchKeyEvent (int seq, KeyEvent event, InputMethodSession.EventCallback callback) "," Take care of dispatching incoming key events to the appropriate callbacks on the service, and tell the client when this is done. <br /><br />"
"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl.isEnabled () "," Check whether this session has been enabled by the system. <br /><br />"
"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl.dispatchGenericMotionEvent (int seq, MotionEvent event, InputMethodSession.EventCallback callback) "," Take care of dispatching incoming generic motion events to the appropriate callbacks on the service, and tell the client when this is done. <br /><br />"
"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl.revokeSelf () "," Revoke the session from the client. <br /><br />"
"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl.setEnabled (boolean enabled) "," Change the enabled state of the session. <br /><br />"
"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl.dispatchTrackballEvent (int seq, MotionEvent event, InputMethodSession.EventCallback callback) "," Take care of dispatching incoming trackball events to the appropriate callbacks on the service, and tell the client when this is done. <br /><br />"
"android.inputmethodservice.AbstractInputMethodService.onGenericMotionEvent (MotionEvent event) "," Implement this to handle generic motion events on your input method. <br /><br />"
"android.inputmethodservice.AbstractInputMethodService.onCreateInputMethodSessionInterface () "," Called by the framework when a new InputMethodSession interface is needed for a new client of the input method. <br /><br />"
"android.inputmethodservice.AbstractInputMethodService.getKeyDispatcherState () "," Return the global KeyEvent.DispatcherState for used for processing events from the target application. <br /><br />"
"android.inputmethodservice.AbstractInputMethodService.onTrackballEvent (MotionEvent event) "," Implement this to handle trackball events on your input method. <br /><br />"
"android.inputmethodservice.AbstractInputMethodService.onCreateInputMethodInterface () "," Called by the framework during initialization, when the InputMethod interface for this service needs to be created. <br /><br />"
"android.inputmethodservice.AbstractInputMethodService.onBind (Intent intent) "," Return the communication channel to the service. <br /><br />"
"android.inputmethodservice.ExtractEditText.isFocused () "," Pretend like this view always has focus, so its highlight and cursor will be displayed. <br /><br />"
"android.inputmethodservice.ExtractEditText.finishInternalChanges () "," Finish making changes that will not be reported to the client. <br /><br />"
"android.inputmethodservice.ExtractEditText.setExtractedText (ExtractedText text) "," Implement just to keep track of when we are setting text from the client (vs. <br /><br />"
"android.inputmethodservice.ExtractEditText.performClick () "," Redirect clicks to the IME for handling there. <br /><br />"
"android.inputmethodservice.ExtractEditText.startInternalChanges () "," Start making changes that will not be reported to the client. <br /><br />"
"android.inputmethodservice.ExtractEditText.isInputMethodTarget () "," We are always considered to be an input method target. <br /><br />"
"android.inputmethodservice.ExtractEditText.hasVerticalScrollBar () "," Return true if the edit text is currently showing a scroll bar. <br /><br />"
"android.inputmethodservice.ExtractEditText.onTextContextMenuItem (int id) "," Called when a context menu option for the text view is selected. <br /><br />"
"android.inputmethodservice.ExtractEditText.hasFocus () "," Pretend like this view always has focus, so its highlight and cursor will be displayed. <br /><br />"
"android.inputmethodservice.ExtractEditText.hasWindowFocus () "," Pretend like the window this view is in always has focus, so its highlight and cursor will be displayed. <br /><br />"
"android.inputmethodservice.InputMethodService.onUpdateExtractingVisibility (EditorInfo ei)   Called when the fullscreen-mode extracting editor info has changed, to determine whether the extracting  (extract text and candidates) "," Called when the fullscreen-mode extracting editor info has changed, to determine whether the extracting (extract text and candidates) portion of the UI should be shown. <br /><br />"
"android.inputmethodservice.InputMethodService.onCreate () "," Called by the system when the service is first created. <br /><br />"
"android.inputmethodservice.InputMethodService.sendKeyChar (char charCode) "," Send the given UTF-16 character to the current input connection. <br /><br />"
"android.inputmethodservice.InputMethodService.onStartInputView (EditorInfo info, boolean restarting) "," Called when the input view is being shown and input has started on a new editor. <br /><br />"
"android.inputmethodservice.InputMethodService.onStartInput (EditorInfo attribute, boolean restarting) "," Called to inform the input method that text input has started in an editor. <br /><br />"
"android.inputmethodservice.InputMethodService.onBindInput () "," Called when a new client has bound to the input method. <br /><br />"
"android.inputmethodservice.InputMethodService.getCurrentInputStarted () "," no description <br /><br />"
"android.inputmethodservice.InputMethodService.onConfigureWindow (Window win, boolean isFullscreen, boolean isCandidatesOnly) "," Update the given window's parameters for the given mode. <br /><br />"
"android.inputmethodservice.InputMethodService.isFullscreenMode () "," Return whether the input method is currently running in fullscreen mode. <br /><br />"
"android.inputmethodservice.InputMethodService.onExtractedCursorMovement (int dx, int dy) "," This is called when the user has performed a cursor movement in the extracted text view, when it is running in fullscreen mode. <br /><br />"
"android.inputmethodservice.InputMethodService.onDestroy () "," Called by the system to notify a Service that it is no longer used and is being removed. <br /><br />"
"android.inputmethodservice.InputMethodService.getMaxWidth () "," Return the maximum width, in pixels, available the input method. <br /><br />"
"android.inputmethodservice.InputMethodService.setExtractView (View view) "," no description <br /><br />"
"android.inputmethodservice.InputMethodService.isShowInputRequested () "," Returns true if we have been asked to show our input view. <br /><br />"
"android.inputmethodservice.InputMethodService.getBackDisposition () "," no description <br /><br />"
"android.inputmethodservice.InputMethodService.getCurrentInputConnection () "," Retrieve the currently active InputConnection that is bound to the input method, or null if there is none. <br /><br />"
"android.inputmethodservice.InputMethodService.onKeyLongPress (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyLongPress (): always returns false  (doesn't handle the event) "," Default implementation of KeyEvent.Callback.onKeyLongPress(): always returns false (doesn't handle the event). <br /><br />"
"android.inputmethodservice.InputMethodService.onCreateInputMethodInterface () "," Implement to return our standard InputMethodService.InputMethodImpl. <br /><br />"
"android.inputmethodservice.InputMethodService.onDisplayCompletions (CompletionInfo[] completions) "," Called when the application has reported auto-completion candidates that it would like to have the input method displayed. <br /><br />"
"android.inputmethodservice.InputMethodService.getInputMethodWindowRecommendedHeight () "," no description <br /><br />"
"android.inputmethodservice.InputMethodService.onUpdateExtractedText (int token, ExtractedText text) "," Called when the application has reported new extracted text to be shown due to changes in its current text state. <br /><br />"
"android.inputmethodservice.InputMethodService.onUnbindInput () "," Called when the previous bound client is no longer associated with the input method. <br /><br />"
"android.inputmethodservice.InputMethodService.onKeyMultiple (int keyCode, int count, KeyEvent event) "," Override this to intercept special key multiple events before they are processed by the application. <br /><br />"
"android.inputmethodservice.InputMethodService.onUpdateCursorAnchorInfo (CursorAnchorInfo cursorAnchorInfo) "," Called when the application has reported a new location of its text insertion point and characters in the composition string. <br /><br />"
"android.inputmethodservice.InputMethodService.onEvaluateInputViewShown () "," Override this to control when the soft input area should be shown to the user. <br /><br />"
"android.inputmethodservice.InputMethodService.sendDefaultEditorAction (boolean fromEnterKey)   Ask the input target to execute its default action via InputConnection.performEditorAction () "," Ask the input target to execute its default action via InputConnection.performEditorAction(). <br /><br />"
"android.inputmethodservice.InputMethodService.onKeyUp (int keyCode, KeyEvent event) "," Override this to intercept key up events before they are processed by the application. <br /><br />"
"android.inputmethodservice.InputMethodService.onTrackballEvent (MotionEvent event) "," Override this to intercept trackball motion events before they are processed by the application. <br /><br />"
"android.inputmethodservice.InputMethodService.updateFullscreenMode () "," Re-evaluate whether the input method should be running in fullscreen mode, and update its UI if this has changed since the last time it was evaluated. <br /><br />"
"android.inputmethodservice.InputMethodService.onGenericMotionEvent (MotionEvent event) "," Override this to intercept generic motion events before they are processed by the application. <br /><br />"
"android.inputmethodservice.InputMethodService.sendDownUpKeyEvents (int keyEventCode)   Send the given key event code  (as defined by KeyEvent) "," Send the given key event code (as defined by KeyEvent) to the current input connection is a key down + key up event pair. <br /><br />"
"android.inputmethodservice.InputMethodService.showStatusIcon (int iconResId) "," no description <br /><br />"
"android.inputmethodservice.InputMethodService.hideWindow () "," no description <br /><br />"
"android.inputmethodservice.InputMethodService.getWindow () "," no description <br /><br />"
"android.inputmethodservice.InputMethodService.onShowInputRequested (int flags, boolean configChange) "," The system has decided that it may be time to show your input method. <br /><br />"
"android.inputmethodservice.InputMethodService.onFinishInputView (boolean finishingInput) "," Called when the input view is being hidden from the user. <br /><br />"
"android.inputmethodservice.InputMethodService.getLayoutInflater () "," no description <br /><br />"
"android.inputmethodservice.InputMethodService.onWindowShown () "," Called when the input method window has been shown to the user, after previously not being visible. <br /><br />"
"android.inputmethodservice.InputMethodService.enableHardwareAcceleration () "," This method was deprecated in API level 21. Starting in API 21, hardware acceleration is always enabled on capable devices. <br /><br />"
"android.inputmethodservice.InputMethodService.onViewClicked (boolean focusChanged) "," Called when the user tapped or clicked a text view. <br /><br />"
"android.inputmethodservice.InputMethodService.onCreateInputView ()   Create and return the view hierarchy used for the input area  (such as a soft keyboard) "," Create and return the view hierarchy used for the input area (such as a soft keyboard). <br /><br />"
"android.inputmethodservice.InputMethodService.onComputeInsets (InputMethodService.Insets outInsets) "," Compute the interesting insets into your UI. <br /><br />"
"android.inputmethodservice.InputMethodService.setTheme (int theme) "," You can call this to customize the theme used by your IME's window. <br /><br />"
"android.inputmethodservice.InputMethodService.onExtractedSelectionChanged (int start, int end) "," This is called when the user has moved the cursor in the extracted text view, when running in fullsreen mode. <br /><br />"
"android.inputmethodservice.InputMethodService.onCreateCandidatesView () "," Create and return the view hierarchy used to show candidates. <br /><br />"
"android.inputmethodservice.InputMethodService.onConfigurationChanged (Configuration newConfig) "," Take care of handling configuration changes. <br /><br />"
"android.inputmethodservice.InputMethodService.isInputViewShown () "," Return whether the soft input view is currently shown to the user. <br /><br />"
"android.inputmethodservice.InputMethodService.onFinishInput () "," Called to inform the input method that text input has finished in the last editor. <br /><br />"
"android.inputmethodservice.InputMethodService.onKeyDown (int keyCode, KeyEvent event) "," Override this to intercept key down events before they are processed by the application. <br /><br />"
"android.inputmethodservice.InputMethodService.switchInputMethod (String id) "," Force switch to a new input method, as identified by id. <br /><br />"
"android.inputmethodservice.InputMethodService.onExtractingInputChanged (EditorInfo ei) "," This is called when, while currently displayed in extract mode, the current input target changes. <br /><br />"
"android.inputmethodservice.InputMethodService.onStartCandidatesView (EditorInfo info, boolean restarting) "," Called when only the candidates view has been shown for showing processing as the user enters text through a hard keyboard. <br /><br />"
"android.inputmethodservice.InputMethodService.onCreateExtractTextView () "," Called by the framework to create the layout for showing extacted text. <br /><br />"
"android.inputmethodservice.InputMethodService.updateInputViewShown () "," Re-evaluate whether the soft input area should currently be shown, and update its UI if this has changed since the last time it was evaluated. <br /><br />"
"android.inputmethodservice.InputMethodService.onUpdateSelection (int oldSelStart, int oldSelEnd, int newSelStart, int newSelEnd, int candidatesStart, int candidatesEnd) "," Called when the application has reported a new selection region of the text. <br /><br />"
"android.inputmethodservice.InputMethodService.showWindow (boolean showInput) "," no description <br /><br />"
"android.inputmethodservice.InputMethodService.onExtractedTextClicked () "," This is called when the user has clicked on the extracted text view, when running in fullscreen mode. <br /><br />"
"android.inputmethodservice.InputMethodService.onWindowHidden () "," Called when the input method window has been hidden from the user, after previously being visible. <br /><br />"
"android.inputmethodservice.InputMethodService.getTextForImeAction (int imeOptions) "," Return text that can be used as a button label for the given EditorInfo.imeOptions. <br /><br />"
"android.inputmethodservice.InputMethodService.onUpdateCursor (Rect newCursor)    This method was deprecated in API level 21. Use {#link onUpdateCursorAnchorInfo (CursorAnchorInfo) "," This method was deprecated in API level 21. Use {#link onUpdateCursorAnchorInfo(CursorAnchorInfo)} instead. <br /><br />"
"android.inputmethodservice.InputMethodService.onCreateInputMethodSessionInterface () "," Implement to return our standard InputMethodService.InputMethodSessionImpl. <br /><br />"
"android.inputmethodservice.InputMethodService.getCurrentInputEditorInfo () "," no description <br /><br />"
"android.inputmethodservice.InputMethodService.onExtractTextContextMenuItem (int id) "," This is called when the user has selected a context menu item from the extracted text view, when running in fullscreen mode. <br /><br />"
"android.inputmethodservice.InputMethodService.requestHideSelf (int flags) "," Close this input method's soft input area, removing it from the display. <br /><br />"
"android.inputmethodservice.InputMethodService.onUpdateExtractingViews (EditorInfo ei) "," Called when the fullscreen-mode extracting editor info has changed, to update the state of its UI such as the action buttons shown. <br /><br />"
"android.inputmethodservice.InputMethodService.setExtractViewShown (boolean shown) "," Controls the visibility of the extracted text area. <br /><br />"
"android.inputmethodservice.InputMethodService.onAppPrivateCommand (String action, Bundle data) "," no description <br /><br />"
"android.inputmethodservice.InputMethodService.getCurrentInputBinding () "," Return the currently active InputBinding for the input method, or null if there is none. <br /><br />"
"android.inputmethodservice.InputMethodService.getCandidatesHiddenVisibility ()   Returns the visibility mode  (either View.INVISIBLE or View.GONE) "," Returns the visibility mode (either View.INVISIBLE or View.GONE) of the candidates view when it is not shown. <br /><br />"
"android.inputmethodservice.InputMethodService.onEvaluateFullscreenMode () "," Override this to control when the input method should run in fullscreen mode. <br /><br />"
"android.inputmethodservice.InputMethodService.isExtractViewShown () "," Return whether the fullscreen extract view is shown. <br /><br />"
"android.inputmethodservice.InputMethodService.hideStatusIcon () "," no description <br /><br />"
"android.inputmethodservice.InputMethodService.setInputView (View view) "," Replaces the current input view with a new one. <br /><br />"
"android.inputmethodservice.InputMethodService.setBackDisposition (int disposition) "," no description <br /><br />"
"android.inputmethodservice.InputMethodService.onFinishCandidatesView (boolean finishingInput) "," Called when the candidates view is being hidden from the user. <br /><br />"
"android.inputmethodservice.InputMethodService.setCandidatesViewShown (boolean shown) "," Controls the visibility of the candidates display area. <br /><br />"
"android.inputmethodservice.InputMethodService.setCandidatesView (View view) "," Replaces the current candidates view with a new one. <br /><br />"
"android.inputmethodservice.InputMethodService.onInitializeInterface () "," This is a hook that subclasses can use to perform initialization of their interface. <br /><br />"
"android.inputmethodservice.InputMethodService.InputMethodImpl.changeInputMethodSubtype (InputMethodSubtype subtype) "," no description <br /><br />"
"android.inputmethodservice.InputMethodService.InputMethodImpl.unbindInput () "," Clear the current input binding. <br /><br />"
"android.inputmethodservice.InputMethodService.InputMethodImpl.showSoftInput (int flags, ResultReceiver resultReceiver) "," Handle a request by the system to show the soft input area. <br /><br />"
"android.inputmethodservice.InputMethodService.InputMethodImpl.bindInput (InputBinding binding)   Handle a new input binding, calling InputMethodService.onBindInput () "," Handle a new input binding, calling InputMethodService.onBindInput() when done. <br /><br />"
"android.inputmethodservice.InputMethodService.InputMethodImpl.startInput (InputConnection ic, EditorInfo attribute) "," no description <br /><br />"
"android.inputmethodservice.InputMethodService.InputMethodImpl.attachToken (IBinder token) "," Take care of attaching the given window token provided by the system. <br /><br />"
"android.inputmethodservice.InputMethodService.InputMethodImpl.restartInput (InputConnection ic, EditorInfo attribute) "," no description <br /><br />"
"android.inputmethodservice.InputMethodService.InputMethodImpl.hideSoftInput (int flags, ResultReceiver resultReceiver) "," Handle a request by the system to hide the soft input area. <br /><br />"
"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.updateCursorAnchorInfo (CursorAnchorInfo info)   Call InputMethodService.onUpdateCursorAnchorInfo () "," Call InputMethodService.onUpdateCursorAnchorInfo(). <br /><br />"
"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.finishInput () "," no description <br /><br />"
"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.displayCompletions (CompletionInfo[] completions)   Call InputMethodService.onDisplayCompletions () "," Call InputMethodService.onDisplayCompletions(). <br /><br />"
"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.updateCursor (Rect newCursor)   Call InputMethodService.onUpdateCursor () "," Call InputMethodService.onUpdateCursor(). <br /><br />"
"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.appPrivateCommand (String action, Bundle data)   Call InputMethodService.onAppPrivateCommand () "," Call InputMethodService.onAppPrivateCommand(). <br /><br />"
"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.updateExtractedText (int token, ExtractedText text)   Call InputMethodService.onUpdateExtractedText () "," Call InputMethodService.onUpdateExtractedText(). <br /><br />"
"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.viewClicked (boolean focusChanged) "," no description <br /><br />"
"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.updateSelection (int oldSelStart, int oldSelEnd, int newSelStart, int newSelEnd, int candidatesStart, int candidatesEnd)   Call InputMethodService.onUpdateSelection () "," Call InputMethodService.onUpdateSelection(). <br /><br />"
"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.toggleSoftInput (int showFlags, int hideFlags) ","  <br /><br />"
"android.inputmethodservice.Keyboard.getMinWidth () "," no description <br /><br />"
"android.inputmethodservice.Keyboard.isShifted () "," no description <br /><br />"
"android.inputmethodservice.Keyboard.getHeight () "," Returns the total height of the keyboard <br /><br />"
"android.inputmethodservice.Keyboard.getNearestKeys (int x, int y) "," Returns the indices of the keys that are closest to the given point. <br /><br />"
"android.inputmethodservice.Keyboard.getShiftKeyIndex () "," no description <br /><br />"
"android.inputmethodservice.Keyboard.getKeys () "," no description <br /><br />"
"android.inputmethodservice.Keyboard.getModifierKeys () "," no description <br /><br />"
"android.inputmethodservice.Keyboard.setShifted (boolean shiftState) "," no description <br /><br />"
"android.inputmethodservice.Keyboard.Key.isInside (int x, int y) "," Detects if a point falls inside this key. <br /><br />"
"android.inputmethodservice.Keyboard.Key.squaredDistanceFrom (int x, int y) "," Returns the square of the distance between the center of the key and the given point. <br /><br />"
"android.inputmethodservice.Keyboard.Key.onPressed () "," Informs the key that it has been pressed, in case it needs to change its appearance or state. <br /><br />"
"android.inputmethodservice.Keyboard.Key.getCurrentDrawableState () "," Returns the drawable state for the key, based on the current state and type of the key. <br /><br />"
"android.inputmethodservice.Keyboard.Key.onReleased (boolean inside) "," Changes the pressed state of the key. <br /><br />"
"android.inputmethodservice.KeyboardView.onDraw (Canvas canvas) "," Implement this to do your drawing. <br /><br />"
"android.inputmethodservice.KeyboardView.setVerticalCorrection (int verticalOffset) "," no description <br /><br />"
"android.inputmethodservice.KeyboardView.setProximityCorrectionEnabled (boolean enabled)   When enabled, calls to onKey (int, int[]) "," When enabled, calls to onKey(int, int[]) will include key codes for adjacent keys. <br /><br />"
"android.inputmethodservice.KeyboardView.isProximityCorrectionEnabled () "," Returns true if proximity correction is enabled. <br /><br />"
"android.inputmethodservice.KeyboardView.onTouchEvent (MotionEvent me) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.inputmethodservice.KeyboardView.setKeyboard (Keyboard keyboard) "," Attaches a keyboard to this view. <br /><br />"
"android.inputmethodservice.KeyboardView.invalidateKey (int keyIndex) "," Invalidates a key so that it will be redrawn on the next repaint. <br /><br />"
"android.inputmethodservice.KeyboardView.isPreviewEnabled () "," Returns the enabled state of the key feedback popup. <br /><br />"
"android.inputmethodservice.KeyboardView.onHoverEvent (MotionEvent event) "," Implement this method to handle hover events. <br /><br />"
"android.inputmethodservice.KeyboardView.setPopupOffset (int x, int y) "," no description <br /><br />"
"android.inputmethodservice.KeyboardView.setOnKeyboardActionListener (KeyboardView.OnKeyboardActionListener listener) "," no description <br /><br />"
"android.inputmethodservice.KeyboardView.handleBack () "," no description <br /><br />"
"android.inputmethodservice.KeyboardView.setPreviewEnabled (boolean previewEnabled) "," Enables or disables the key feedback popup. <br /><br />"
"android.inputmethodservice.KeyboardView.invalidateAllKeys () "," Requests a redraw of the entire keyboard. <br /><br />"
"android.inputmethodservice.KeyboardView.onDetachedFromWindow () "," This is called when the view is detached from a window. <br /><br />"
"android.inputmethodservice.KeyboardView.isShifted () "," Returns the state of the shift key of the keyboard, if any. <br /><br />"
"android.inputmethodservice.KeyboardView.closing () "," no description <br /><br />"
"android.inputmethodservice.KeyboardView.onSizeChanged (int w, int h, int oldw, int oldh) "," This is called during layout when the size of this view has changed. <br /><br />"
"android.inputmethodservice.KeyboardView.getKeyboard () "," Returns the current keyboard being displayed by this view. <br /><br />"
"android.inputmethodservice.KeyboardView.onMeasure (int widthMeasureSpec, int heightMeasureSpec) "," Measure the view and its content to determine the measured width and the measured height. <br /><br />"
"android.inputmethodservice.KeyboardView.setShifted (boolean shifted) "," Sets the state of the shift key of the keyboard, if any. <br /><br />"
"android.inputmethodservice.KeyboardView.setPopupParent (View v) "," no description <br /><br />"
"android.inputmethodservice.KeyboardView.OnKeyboardActionListener.onPress (int primaryCode) "," Called when the user presses a key. <br /><br />"
"android.inputmethodservice.KeyboardView.OnKeyboardActionListener.swipeLeft () "," Called when the user quickly moves the finger from right to left. <br /><br />"
"android.inputmethodservice.KeyboardView.OnKeyboardActionListener.onText (CharSequence text) "," Sends a sequence of characters to the listener. <br /><br />"
"android.inputmethodservice.KeyboardView.OnKeyboardActionListener.swipeDown () "," Called when the user quickly moves the finger from up to down. <br /><br />"
"android.inputmethodservice.KeyboardView.OnKeyboardActionListener.swipeRight () "," Called when the user quickly moves the finger from left to right. <br /><br />"
"android.inputmethodservice.KeyboardView.OnKeyboardActionListener.onRelease (int primaryCode) "," Called when the user releases a key. <br /><br />"
"android.inputmethodservice.KeyboardView.OnKeyboardActionListener.swipeUp () "," Called when the user quickly moves the finger from down to up. <br /><br />"
"android.inputmethodservice.KeyboardView.OnKeyboardActionListener.onKey (int primaryCode, int[] keyCodes) "," Send a key press to the listener. <br /><br />"
"android.location.Address.setPostalCode (String postalCode) "," Sets the postal code of the address to the given String, which may be null. <br /><br />"
"android.location.Address.getAddressLine (int index)   Returns a line of the address numbered by the given index  (starting at 0) "," Returns a line of the address numbered by the given index (starting at 0), or null if no such line is present. <br /><br />"
"android.location.Address.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.location.Address.getLongitude () "," Returns the longitude of the address if known. <br /><br />"
"android.location.Address.getLatitude () "," Returns the latitude of the address if known. <br /><br />"
"android.location.Address.getSubLocality () "," Returns the sub-locality of the address, or null if it is unknown. <br /><br />"
"android.location.Address.setUrl (String Url) "," Sets the public URL associated with this address. <br /><br />"
"android.location.Address.clearLongitude () "," Removes any longitude associated with this address. <br /><br />"
"android.location.Address.hasLatitude () "," Returns true if a latitude has been assigned to this Address, false otherwise. <br /><br />"
"android.location.Address.getSubAdminArea () "," Returns the sub-administrative area name of the address, for example, 'Santa Clara County', or null if it is unknown <br /><br />"
"android.location.Address.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.location.Address.setCountryName (String countryName) "," Sets the country name of the address to the given String, which may be null. <br /><br />"
"android.location.Address.setSubThoroughfare (String subthoroughfare) "," Sets the sub-thoroughfare name of the address, which may be null. <br /><br />"
"android.location.Address.setLocality (String locality) "," Sets the locality of the address to the given String, which may be null. <br /><br />"
"android.location.Address.setExtras (Bundle extras) "," Sets the extra information associated with this fix to the given Bundle. <br /><br />"
"android.location.Address.clearLatitude () "," Removes any latitude associated with this address. <br /><br />"
"android.location.Address.getLocality () "," Returns the locality of the address, for example 'Mountain View', or null if it is unknown. <br /><br />"
"android.location.Address.setPremises (String premises) "," Sets the premises of the address to the given String, which may be null. <br /><br />"
"android.location.Address.setLatitude (double latitude) "," Sets the latitude associated with this address. <br /><br />"
"android.location.Address.setAddressLine (int index, String line)   Sets the line of the address numbered by index  (starting at 0) "," Sets the line of the address numbered by index (starting at 0) to the given String, which may be null. <br /><br />"
"android.location.Address.getPremises () "," Returns the premises of the address, or null if it is unknown. <br /><br />"
"android.location.Address.getThoroughfare () "," Returns the thoroughfare name of the address, for example, '1600 Ampitheater Parkway', which may be null <br /><br />"
"android.location.Address.setPhone (String phone) "," Sets the phone number associated with this address. <br /><br />"
"android.location.Address.getMaxAddressLineIndex () "," Returns the largest index currently in use to specify an address line. <br /><br />"
"android.location.Address.setSubLocality (String sublocality) "," Sets the sub-locality of the address to the given String, which may be null. <br /><br />"
"android.location.Address.setAdminArea (String adminArea) "," Sets the administrative area name of the address to the given String, which may be null <br /><br />"
"android.location.Address.getPostalCode () "," Returns the postal code of the address, for example '94110', or null if it is unknown. <br /><br />"
"android.location.Address.setCountryCode (String countryCode) "," Sets the country code of the address to the given String, which may be null. <br /><br />"
"android.location.Address.setLongitude (double longitude) "," Sets the longitude associated with this address. <br /><br />"
"android.location.Address.getCountryName () "," Returns the localized country name of the address, for example 'Iceland', or null if it is unknown. <br /><br />"
"android.location.Address.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.location.Address.setThoroughfare (String thoroughfare) "," Sets the thoroughfare name of the address, which may be null. <br /><br />"
"android.location.Address.getUrl () "," Returns the public URL for the address if known, or null if it is unknown. <br /><br />"
"android.location.Address.getExtras () "," Returns additional provider-specific information about the address as a Bundle. <br /><br />"
"android.location.Address.getPhone () "," Returns the phone number of the address if known, or null if it is unknown. <br /><br />"
"android.location.Address.setFeatureName (String featureName) "," Sets the feature name of the address to the given String, which may be null <br /><br />"
"android.location.Address.getLocale () "," Returns the Locale associated with this address. <br /><br />"
"android.location.Address.getCountryCode () "," Returns the country code of the address, for example 'US', or null if it is unknown. <br /><br />"
"android.location.Address.getSubThoroughfare () "," Returns the sub-thoroughfare name of the address, which may be null. <br /><br />"
"android.location.Address.setSubAdminArea (String subAdminArea) "," Sets the sub-administrative area name of the address to the given String, which may be null <br /><br />"
"android.location.Address.hasLongitude () "," Returns true if a longitude has been assigned to this Address, false otherwise. <br /><br />"
"android.location.Address.getAdminArea () "," Returns the administrative area name of the address, for example, 'CA', or null if it is unknown <br /><br />"
"android.location.Address.getFeatureName () "," Returns the feature name of the address, for example, 'Golden Gate Bridge', or null if it is unknown <br /><br />"
"android.location.Criteria.setBearingAccuracy (int accuracy) "," Indicates the desired bearing accuracy. <br /><br />"
"android.location.Criteria.isAltitudeRequired () "," Returns whether the provider must provide altitude information. <br /><br />"
"android.location.Criteria.getAccuracy () "," Returns a constant indicating desired accuracy of location Accuracy may be ACCURACY_FINE if desired location is fine, else it can be ACCURACY_COARSE. <br /><br />"
"android.location.Criteria.getSpeedAccuracy () "," Returns a constant indicating the desired speed accuracy Accuracy may be ACCURACY_LOW, ACCURACY_HIGH, or NO_REQUIREMENT. <br /><br />"
"android.location.Criteria.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.location.Criteria.setSpeedRequired (boolean speedRequired) "," Indicates whether the provider must provide speed information. <br /><br />"
"android.location.Criteria.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.location.Criteria.getBearingAccuracy () "," Returns a constant indicating the desired bearing accuracy. <br /><br />"
"android.location.Criteria.getVerticalAccuracy ()   Returns a constant indicating the desired vertical accuracy  (altitude) "," Returns a constant indicating the desired vertical accuracy (altitude). <br /><br />"
"android.location.Criteria.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.location.Criteria.getPowerRequirement () "," Returns a constant indicating the desired power requirement. <br /><br />"
"android.location.Criteria.isSpeedRequired () "," Returns whether the provider must provide speed information. <br /><br />"
"android.location.Criteria.setBearingRequired (boolean bearingRequired) "," Indicates whether the provider must provide bearing information. <br /><br />"
"android.location.Criteria.isCostAllowed () "," Returns whether the provider is allowed to incur monetary cost. <br /><br />"
"android.location.Criteria.setVerticalAccuracy (int accuracy)   Indicates the desired vertical accuracy  (altitude) "," Indicates the desired vertical accuracy (altitude). <br /><br />"
"android.location.Criteria.setSpeedAccuracy (int accuracy) "," Indicates the desired speed accuracy. <br /><br />"
"android.location.Criteria.setAltitudeRequired (boolean altitudeRequired) "," Indicates whether the provider must provide altitude information. <br /><br />"
"android.location.Criteria.setHorizontalAccuracy (int accuracy)   Indicates the desired horizontal accuracy  (latitude and longitude) "," Indicates the desired horizontal accuracy (latitude and longitude). <br /><br />"
"android.location.Criteria.setCostAllowed (boolean costAllowed) "," Indicates whether the provider is allowed to incur monetary cost. <br /><br />"
"android.location.Criteria.isBearingRequired () "," Returns whether the provider must provide bearing information. <br /><br />"
"android.location.Criteria.setAccuracy (int accuracy) "," Indicates the desired accuracy for latitude and longitude. <br /><br />"
"android.location.Criteria.setPowerRequirement (int level) "," Indicates the desired maximum power level. <br /><br />"
"android.location.Criteria.getHorizontalAccuracy ()   Returns a constant indicating the desired horizontal accuracy  (latitude and longitude) "," Returns a constant indicating the desired horizontal accuracy (latitude and longitude). <br /><br />"
"android.location.Geocoder.getFromLocationName (String locationName, int maxResults) "," Returns an array of Addresses that are known to describe the named location, which may be a place name such as 'Dalvik, Iceland', an address such as '1600 Amphitheatre Parkway, Mountain View, CA', an airport code such as 'SFO', etc.. <br /><br />"
"android.location.Geocoder.getFromLocationName (String locationName, int maxResults, double lowerLeftLatitude, double lowerLeftLongitude, double upperRightLatitude, double upperRightLongitude) "," Returns an array of Addresses that are known to describe the named location, which may be a place name such as 'Dalvik, Iceland', an address such as '1600 Amphitheatre Parkway, Mountain View, CA', an airport code such as 'SFO', etc.. <br /><br />"
"android.location.Geocoder.isPresent () "," Returns true if the Geocoder methods getFromLocation and getFromLocationName are implemented. <br /><br />"
"android.location.Geocoder.getFromLocation (double latitude, double longitude, int maxResults) "," Returns an array of Addresses that are known to describe the area immediately surrounding the given latitude and longitude. <br /><br />"
"android.location.GpsSatellite.getPrn ()   Returns the PRN  (pseudo-random number) "," Returns the PRN (pseudo-random number) for the satellite. <br /><br />"
"android.location.GpsSatellite.hasEphemeris () "," Returns true if the GPS engine has ephemeris data for the satellite. <br /><br />"
"android.location.GpsSatellite.usedInFix () "," Returns true if the satellite was used by the GPS engine when calculating the most recent GPS fix. <br /><br />"
"android.location.GpsSatellite.getSnr () "," Returns the signal to noise ratio for the satellite. <br /><br />"
"android.location.GpsSatellite.getElevation () "," Returns the elevation of the satellite in degrees. <br /><br />"
"android.location.GpsSatellite.getAzimuth () "," Returns the azimuth of the satellite in degrees. <br /><br />"
"android.location.GpsSatellite.hasAlmanac () "," Returns true if the GPS engine has almanac data for the satellite. <br /><br />"
"android.location.GpsStatus.getTimeToFirstFix () "," Returns the time required to receive the first fix since the most recent restart of the GPS engine. <br /><br />"
"android.location.GpsStatus.getMaxSatellites ()   Returns the maximum number of satellites that can be in the satellite list that can be returned by getSatellites () "," Returns the maximum number of satellites that can be in the satellite list that can be returned by getSatellites(). <br /><br />"
"android.location.GpsStatus.getSatellites () "," Returns an array of GpsSatellite objects, which represent the current state of the GPS engine. <br /><br />"
"android.location.GpsStatus.Listener.onGpsStatusChanged (int event) "," Called to report changes in the GPS status. <br /><br />"
"android.location.GpsStatus.NmeaListener.onNmeaReceived (long timestamp, String nmea) "," no description <br /><br />"
"android.location.Location.getBearing () "," Get the bearing, in degrees. <br /><br />"
"android.location.Location.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.location.Location.distanceTo (Location dest) "," Returns the approximate distance in meters between this location and the given location. <br /><br />"
"android.location.Location.isFromMockProvider () "," Returns true if the Location came from a mock provider. <br /><br />"
"android.location.Location.getLongitude () "," Get the longitude, in degrees. <br /><br />"
"android.location.Location.getLatitude () "," Get the latitude, in degrees. <br /><br />"
"android.location.Location.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.location.Location.removeSpeed () "," Remove the speed from this location. <br /><br />"
"android.location.Location.getElapsedRealtimeNanos () "," Return the time of this fix, in elapsed real-time since system boot. <br /><br />"
"android.location.Location.hasAltitude () "," True if this location has an altitude. <br /><br />"
"android.location.Location.getProvider () "," Returns the name of the provider that generated this fix. <br /><br />"
"android.location.Location.removeAccuracy () "," Remove the accuracy from this location. <br /><br />"
"android.location.Location.bearingTo (Location dest) "," Returns the approximate initial bearing in degrees East of true North when traveling along the shortest path between this location and the given location. <br /><br />"
"android.location.Location.convert (String coordinate) "," Converts a String in one of the formats described by FORMAT_DEGREES, FORMAT_MINUTES, or FORMAT_SECONDS into a double. <br /><br />"
"android.location.Location.setExtras (Bundle extras) "," Sets the extra information associated with this fix to the given Bundle. <br /><br />"
"android.location.Location.removeAltitude () "," Remove the altitude from this location. <br /><br />"
"android.location.Location.setLatitude (double latitude) "," Set the latitude, in degrees. <br /><br />"
"android.location.Location.setBearing (float bearing) "," Set the bearing, in degrees. <br /><br />"
"android.location.Location.hasSpeed () "," True if this location has a speed. <br /><br />"
"android.location.Location.setElapsedRealtimeNanos (long time) "," Set the time of this fix, in elapsed real-time since system boot. <br /><br />"
"android.location.Location.setAltitude (double altitude) "," Set the altitude, in meters above the WGS 84 reference ellipsoid. <br /><br />"
"android.location.Location.hasAccuracy () "," True if this location has an accuracy. <br /><br />"
"android.location.Location.setProvider (String provider) "," Sets the name of the provider that generated this fix. <br /><br />"
"android.location.Location.getAccuracy () "," Get the estimated accuracy of this location, in meters. <br /><br />"
"android.location.Location.dump (Printer pw, String prefix) "," no description <br /><br />"
"android.location.Location.setLongitude (double longitude) "," Set the longitude, in degrees. <br /><br />"
"android.location.Location.removeBearing () "," Remove the bearing from this location. <br /><br />"
"android.location.Location.convert (double coordinate, int outputType) "," Converts a coordinate to a String representation. <br /><br />"
"android.location.Location.getAltitude () "," Get the altitude if available, in meters above the WGS 84 reference ellipsoid. <br /><br />"
"android.location.Location.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.location.Location.setAccuracy (float accuracy) "," Set the estimated accuracy of this location, meters. <br /><br />"
"android.location.Location.hasBearing () "," True if this location has a bearing. <br /><br />"
"android.location.Location.setSpeed (float speed) "," Set the speed, in meters/second over ground. <br /><br />"
"android.location.Location.getSpeed () "," Get the speed if it is available, in meters/second over ground. <br /><br />"
"android.location.Location.getExtras () "," Returns additional provider-specific information about the location fix as a Bundle. <br /><br />"
"android.location.Location.getTime () "," Return the UTC time of this fix, in milliseconds since January 1, 1970. <br /><br />"
"android.location.Location.distanceBetween (double startLatitude, double startLongitude, double endLatitude, double endLongitude, float[] results) "," Computes the approximate distance in meters between two locations, and optionally the initial and final bearings of the shortest path between them. <br /><br />"
"android.location.Location.set (Location l) "," Sets the contents of the location to the values from the given location. <br /><br />"
"android.location.Location.setTime (long time) "," Set the UTC time of this fix, in milliseconds since January 1, 1970. <br /><br />"
"android.location.Location.reset () "," Clears the contents of the location. <br /><br />"
"android.location.LocationListener.onLocationChanged (Location location) "," Called when the location has changed. <br /><br />"
"android.location.LocationListener.onStatusChanged (String provider, int status, Bundle extras) "," Called when the provider status changes. <br /><br />"
"android.location.LocationListener.onProviderDisabled (String provider) "," Called when the provider is disabled by the user. <br /><br />"
"android.location.LocationListener.onProviderEnabled (String provider) "," Called when the provider is enabled by the user. <br /><br />"
"android.location.LocationManager.getAllProviders () "," Returns a list of the names of all known location providers. <br /><br />"
"android.location.LocationManager.sendExtraCommand (String provider, String command, Bundle extras) "," Sends additional commands to a location provider. <br /><br />"
"android.location.LocationManager.addGpsStatusListener (GpsStatus.Listener listener) "," Adds a GPS status listener. <br /><br />"
"android.location.LocationManager.requestSingleUpdate (String provider, LocationListener listener, Looper looper) "," Register for a single location update using the named provider and a callback. <br /><br />"
"android.location.LocationManager.removeUpdates (PendingIntent intent) "," Removes all location updates for the specified pending intent. <br /><br />"
"android.location.LocationManager.requestLocationUpdates (String provider, long minTime, float minDistance, LocationListener listener) "," Register for location updates using the named provider, and a pending intent. <br /><br />"
"android.location.LocationManager.requestLocationUpdates (long minTime, float minDistance, Criteria criteria, LocationListener listener, Looper looper) "," Register for location updates using a Criteria, and a callback on the specified looper thread. <br /><br />"
"android.location.LocationManager.requestSingleUpdate (String provider, PendingIntent intent) "," Register for a single location update using a named provider and pending intent. <br /><br />"
"android.location.LocationManager.setTestProviderEnabled (String provider, boolean enabled) "," Sets a mock enabled value for the given provider. <br /><br />"
"android.location.LocationManager.getProvider (String name) "," Returns the information associated with the location provider of the given name, or null if no provider exists by that name. <br /><br />"
"android.location.LocationManager.requestLocationUpdates (String provider, long minTime, float minDistance, LocationListener listener, Looper looper) "," Register for location updates using the named provider, and a callback on the specified looper thread. <br /><br />"
"android.location.LocationManager.requestSingleUpdate (Criteria criteria, LocationListener listener, Looper looper) "," Register for a single location update using a Criteria and a callback. <br /><br />"
"android.location.LocationManager.requestSingleUpdate (Criteria criteria, PendingIntent intent) "," Register for a single location update using a Criteria and pending intent. <br /><br />"
"android.location.LocationManager.addNmeaListener (GpsStatus.NmeaListener listener) "," Adds an NMEA listener. <br /><br />"
"android.location.LocationManager.requestLocationUpdates (String provider, long minTime, float minDistance, PendingIntent intent) "," Register for location updates using the named provider, and a pending intent. <br /><br />"
"android.location.LocationManager.clearTestProviderStatus (String provider) "," Removes any mock status values associated with the given provider. <br /><br />"
"android.location.LocationManager.addTestProvider (String name, boolean requiresNetwork, boolean requiresSatellite, boolean requiresCell, boolean hasMonetaryCost, boolean supportsAltitude, boolean supportsSpeed, boolean supportsBearing, int powerRequirement, int accuracy) "," Creates a mock location provider and adds it to the set of active providers. <br /><br />"
"android.location.LocationManager.removeGpsStatusListener (GpsStatus.Listener listener) "," Removes a GPS status listener. <br /><br />"
"android.location.LocationManager.setTestProviderLocation (String provider, Location loc) "," Sets a mock location for the given provider. <br /><br />"
"android.location.LocationManager.removeUpdates (LocationListener listener) "," Removes all location updates for the specified LocationListener. <br /><br />"
"android.location.LocationManager.removeNmeaListener (GpsStatus.NmeaListener listener) "," Removes an NMEA listener. <br /><br />"
"android.location.LocationManager.removeTestProvider (String provider) "," Removes the mock location provider with the given name. <br /><br />"
"android.location.LocationManager.getProviders (boolean enabledOnly) "," Returns a list of the names of location providers. <br /><br />"
"android.location.LocationManager.getGpsStatus (GpsStatus status) "," Retrieves information about the current status of the GPS engine. <br /><br />"
"android.location.LocationManager.clearTestProviderLocation (String provider) "," Removes any mock location associated with the given provider. <br /><br />"
"android.location.LocationManager.getLastKnownLocation (String provider) "," Returns a Location indicating the data from the last known location fix obtained from the given provider. <br /><br />"
"android.location.LocationManager.getBestProvider (Criteria criteria, boolean enabledOnly) "," Returns the name of the provider that best meets the given criteria. <br /><br />"
"android.location.LocationManager.addProximityAlert (double latitude, double longitude, float radius, long expiration, PendingIntent intent)   Set a proximity alert for the location given by the position  (latitude, longitude) "," Set a proximity alert for the location given by the position (latitude, longitude) and the given radius. <br /><br />"
"android.location.LocationManager.removeProximityAlert (PendingIntent intent) "," Removes the proximity alert with the given PendingIntent. <br /><br />"
"android.location.LocationManager.setTestProviderStatus (String provider, int status, Bundle extras, long updateTime) "," Sets mock status values for the given provider. <br /><br />"
"android.location.LocationManager.requestLocationUpdates (long minTime, float minDistance, Criteria criteria, PendingIntent intent) "," Register for location updates using a Criteria and pending intent. <br /><br />"
"android.location.LocationManager.clearTestProviderEnabled (String provider) "," Removes any mock enabled value associated with the given provider. <br /><br />"
"android.location.LocationManager.getProviders (Criteria criteria, boolean enabledOnly) "," Returns a list of the names of LocationProviders that satisfy the given criteria, or null if none do. <br /><br />"
"android.location.LocationManager.isProviderEnabled (String provider) "," Returns the current enabled/disabled status of the given provider. <br /><br />"
"android.location.LocationProvider.getName () "," Returns the name of this provider. <br /><br />"
"android.location.LocationProvider.getAccuracy () "," Returns a constant describing horizontal accuracy of this provider. <br /><br />"
"android.location.LocationProvider.hasMonetaryCost () "," Returns true if the use of this provider may result in a monetary charge to the user, false if use is free. <br /><br />"
"android.location.LocationProvider.meetsCriteria (Criteria criteria) "," Returns true if this provider meets the given criteria, false otherwise. <br /><br />"
"android.location.LocationProvider.requiresSatellite ()   Returns true if the provider requires access to a satellite-based positioning system  (e.g., GPS) "," Returns true if the provider requires access to a satellite-based positioning system (e.g., GPS), false otherwise. <br /><br />"
"android.location.LocationProvider.requiresNetwork ()   Returns true if the provider requires access to a data network  (e.g., the Internet) "," Returns true if the provider requires access to a data network (e.g., the Internet), false otherwise. <br /><br />"
"android.location.LocationProvider.supportsAltitude () "," Returns true if the provider is able to provide altitude information, false otherwise. <br /><br />"
"android.location.LocationProvider.requiresCell ()   Returns true if the provider requires access to an appropriate cellular network  (e.g., to make use of cell tower IDs) "," Returns true if the provider requires access to an appropriate cellular network (e.g., to make use of cell tower IDs), false otherwise. <br /><br />"
"android.location.LocationProvider.supportsSpeed () "," Returns true if the provider is able to provide speed information, false otherwise. <br /><br />"
"android.location.LocationProvider.supportsBearing () "," Returns true if the provider is able to provide bearing information, false otherwise. <br /><br />"
"android.location.LocationProvider.getPowerRequirement () "," Returns the power requirement for this provider. <br /><br />"
"android.location.SettingInjectorService.onStart (Intent intent, int startId)    This method is deprecated. Implement onStartCommand (Intent, int, int) "," This method is deprecated. Implement onStartCommand(Intent, int, int) instead. <br /><br />"
"android.location.SettingInjectorService.onStartCommand (Intent intent, int flags, int startId)   Called by the system every time a client explicitly starts the service by calling startService (Intent) "," Called by the system every time a client explicitly starts the service by calling startService(Intent), providing the arguments it supplied and a unique integer token representing the start request. <br /><br />"
"android.location.SettingInjectorService.onBind (Intent intent) "," Return the communication channel to the service. <br /><br />"
"android.media.AsyncPlayer.stop () "," Stop a previously played sound. <br /><br />"
"android.media.AsyncPlayer.play (Context context, Uri uri, boolean looping, int stream) "," Start playing the sound. <br /><br />"
"android.media.AudioAttributes.Builder.setUsage (int usage) "," Sets the attribute describing what is the intended use of the the audio signal, such as alarm or ringtone. <br /><br />"
"android.media.AudioAttributes.Builder.setLegacyStreamType (int streamType) "," Sets attributes as inferred from the legacy stream types. <br /><br />"
"android.media.AudioAttributes.Builder.setFlags (int flags) "," Sets the combination of flags. <br /><br />"
"android.media.AudioAttributes.Builder.setContentType (int contentType) "," Sets the attribute describing the content type of the audio signal, such as speech, or music. <br /><br />"
"android.media.AudioAttributes.Builder.build () "," Combines all of the attributes that have been set and return a new AudioAttributes object. <br /><br />"
"android.media.AudioAttributes.getContentType () "," Return the content type. <br /><br />"
"android.media.AudioAttributes.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.media.AudioAttributes.getFlags () "," Return the flags. <br /><br />"
"android.media.AudioAttributes.getUsage () "," Return the usage. <br /><br />"
"android.media.AudioAttributes.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.media.AudioAttributes.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.media.AudioAttributes.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.media.AudioAttributes.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.media.AudioFormat.Builder.setEncoding (int encoding) "," Sets the data encoding format. <br /><br />"
"android.media.AudioFormat.Builder.build () "," Combines all of the format characteristics that have been set and return a new AudioFormat object. <br /><br />"
"android.media.AudioFormat.Builder.setSampleRate (int sampleRate) "," Sets the sample rate. <br /><br />"
"android.media.AudioFormat.Builder.setChannelMask (int channelMask) "," Sets the channel mask. <br /><br />"
"android.media.AudioFormat.getSampleRate () "," Return the sample rate. <br /><br />"
"android.media.AudioFormat.getEncoding () "," Return the encoding. <br /><br />"
"android.media.AudioFormat.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.media.AudioFormat.getChannelMask () "," Return the channel mask. <br /><br />"
"android.media.audiofx.AcousticEchoCanceler.isAvailable () "," Checks if the device implements acoustic echo cancellation. <br /><br />"
"android.media.audiofx.AcousticEchoCanceler.create (int audioSession) "," Creates an AcousticEchoCanceler and attaches it to the AudioRecord on the audio session specified. <br /><br />"
"android.media.audiofx.AudioEffect.getEnabled () "," Returns effect enabled state <br /><br />"
"android.media.audiofx.AudioEffect.hasControl () "," Checks if this AudioEffect object is controlling the effect engine. <br /><br />"
"android.media.audiofx.AudioEffect.getId () "," Returns effect unique identifier. <br /><br />"
"android.media.audiofx.AudioEffect.setEnabled (boolean enabled) "," Enable or disable the effect. <br /><br />"
"android.media.audiofx.AudioEffect.setEnableStatusListener (AudioEffect.OnEnableStatusChangeListener listener) "," Sets the listener AudioEffect notifies when the effect engine is enabled or disabled. <br /><br />"
"android.media.audiofx.AudioEffect.release () "," Releases the native AudioEffect resources. <br /><br />"
"android.media.audiofx.AudioEffect.getDescriptor () "," Get the effect descriptor. <br /><br />"
"android.media.audiofx.AudioEffect.setControlStatusListener (AudioEffect.OnControlStatusChangeListener listener) "," Sets the listener AudioEffect notifies when the effect engine control is taken or returned. <br /><br />"
"android.media.audiofx.AudioEffect.queryEffects () "," Query all effects available on the platform. <br /><br />"
"android.media.audiofx.AudioEffect.OnControlStatusChangeListener.onControlStatusChange (AudioEffect effect, boolean controlGranted) "," Called on the listener to notify it that the effect engine control has been taken or returned. <br /><br />"
"android.media.audiofx.AudioEffect.OnEnableStatusChangeListener.onEnableStatusChange (AudioEffect effect, boolean enabled) "," Called on the listener to notify it that the effect engine has been enabled or disabled. <br /><br />"
"android.media.audiofx.AutomaticGainControl.isAvailable () "," Checks if the device implements automatic gain control. <br /><br />"
"android.media.audiofx.AutomaticGainControl.create (int audioSession) "," Creates an AutomaticGainControl and attaches it to the AudioRecord on the audio session specified. <br /><br />"
"android.media.audiofx.BassBoost.getRoundedStrength () "," Gets the current strength of the effect. <br /><br />"
"android.media.audiofx.BassBoost.setParameterListener (BassBoost.OnParameterChangeListener listener) "," Registers an OnParameterChangeListener interface. <br /><br />"
"android.media.audiofx.BassBoost.setProperties (BassBoost.Settings settings) "," Sets the bass boost properties. <br /><br />"
"android.media.audiofx.BassBoost.setStrength (short strength) "," Sets the strength of the bass boost effect. <br /><br />"
"android.media.audiofx.BassBoost.getProperties () "," Gets the bass boost properties. <br /><br />"
"android.media.audiofx.BassBoost.getStrengthSupported () "," Indicates whether setting strength is supported. <br /><br />"
"android.media.audiofx.BassBoost.OnParameterChangeListener.onParameterChange (BassBoost effect, int status, int param, short value) "," Method called when a parameter value has changed. <br /><br />"
"android.media.audiofx.BassBoost.Settings.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.setReverbLevel (short reverbLevel) "," Sets the volume level of the late reverberation. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.setParameterListener (EnvironmentalReverb.OnParameterChangeListener listener) "," Registers an OnParameterChangeListener interface. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.getReflectionsDelay () "," Gets the reflections delay. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.setReverbDelay (int reverbDelay) "," Sets the time between the first reflection and the reverberation. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.getReflectionsLevel () "," Gets the volume level of the early reflections. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.getDecayTime () "," Gets the decay time. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.getRoomLevel () "," Gets the master volume level of the environmental reverb effect. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.getProperties () "," Gets the environmental reverb properties. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.getRoomHFLevel () "," Gets the room HF level. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.setRoomLevel (short room) "," Sets the master volume level of the environmental reverb effect. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.setDecayTime (int decayTime) "," Sets the time taken for the level of reverberation to decay by 60 dB. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.setReflectionsLevel (short reflectionsLevel) "," Sets the volume level of the early reflections. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.setReflectionsDelay (int reflectionsDelay) "," Sets the delay time for the early reflections. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.getReverbLevel () "," Gets the reverb level. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.setDecayHFRatio (short decayHFRatio)   Sets the ratio of high frequency decay time  (at 5 kHz) "," Sets the ratio of high frequency decay time (at 5 kHz) relative to the decay time at low frequencies. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.setRoomHFLevel (short roomHF) "," Sets the volume level at 5 kHz relative to the volume level at low frequencies of the overall reverb effect. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.setProperties (EnvironmentalReverb.Settings settings) "," Sets the environmental reverb properties. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.setDiffusion (short diffusion) "," Sets the echo density in the late reverberation decay. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.getDiffusion () "," Gets diffusion level. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.getDecayHFRatio ()   Gets the ratio of high frequency decay time  (at 5 kHz) "," Gets the ratio of high frequency decay time (at 5 kHz) relative to low frequencies. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.getDensity () "," Gets the density level. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.getReverbDelay () "," Gets the reverb delay. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.setDensity (short density) "," Controls the modal density of the late reverberation decay. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener.onParameterChange (EnvironmentalReverb effect, int status, int param, int value) "," Method called when a parameter value has changed. <br /><br />"
"android.media.audiofx.EnvironmentalReverb.Settings.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.media.audiofx.Equalizer.getBandLevel (short band) "," Gets the gain set for the given equalizer band. <br /><br />"
"android.media.audiofx.Equalizer.getBand (int frequency) "," Gets the band that has the most effect on the given frequency. <br /><br />"
"android.media.audiofx.Equalizer.getBandFreqRange (short band) "," Gets the frequency range of the given frequency band. <br /><br />"
"android.media.audiofx.Equalizer.getProperties () "," Gets the equalizer properties. <br /><br />"
"android.media.audiofx.Equalizer.getCurrentPreset () "," Gets current preset. <br /><br />"
"android.media.audiofx.Equalizer.setParameterListener (Equalizer.OnParameterChangeListener listener) "," Registers an OnParameterChangeListener interface. <br /><br />"
"android.media.audiofx.Equalizer.getPresetName (short preset) "," Gets the preset name based on the index. <br /><br />"
"android.media.audiofx.Equalizer.setProperties (Equalizer.Settings settings) "," Sets the equalizer properties. <br /><br />"
"android.media.audiofx.Equalizer.getCenterFreq (short band) "," Gets the center frequency of the given band. <br /><br />"
"android.media.audiofx.Equalizer.usePreset (short preset) "," Sets the equalizer according to the given preset. <br /><br />"
"android.media.audiofx.Equalizer.setBandLevel (short band, short level) "," Sets the given equalizer band to the given gain value. <br /><br />"
"android.media.audiofx.Equalizer.getBandLevelRange ()   Gets the level range for use by setBandLevel (short, short) "," Gets the level range for use by setBandLevel(short, short). <br /><br />"
"android.media.audiofx.Equalizer.getNumberOfBands () "," Gets the number of frequency bands supported by the Equalizer engine. <br /><br />"
"android.media.audiofx.Equalizer.getNumberOfPresets () "," Gets the total number of presets the equalizer supports. <br /><br />"
"android.media.audiofx.Equalizer.OnParameterChangeListener.onParameterChange (Equalizer effect, int status, int param1, int param2, int value) "," Method called when a parameter value has changed. <br /><br />"
"android.media.audiofx.Equalizer.Settings.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.media.audiofx.LoudnessEnhancer.getTargetGain () "," Return the target gain. <br /><br />"
"android.media.audiofx.LoudnessEnhancer.setTargetGain (int gainmB) "," Set the target gain for the audio effect. <br /><br />"
"android.media.audiofx.NoiseSuppressor.isAvailable () "," Checks if the device implements noise suppression. <br /><br />"
"android.media.audiofx.NoiseSuppressor.create (int audioSession) "," Creates a NoiseSuppressor and attaches it to the AudioRecord on the audio session specified. <br /><br />"
"android.media.audiofx.PresetReverb.setPreset (short preset) "," Enables a preset on the reverb. <br /><br />"
"android.media.audiofx.PresetReverb.setProperties (PresetReverb.Settings settings) "," Sets the preset reverb properties. <br /><br />"
"android.media.audiofx.PresetReverb.setParameterListener (PresetReverb.OnParameterChangeListener listener) "," Registers an OnParameterChangeListener interface. <br /><br />"
"android.media.audiofx.PresetReverb.getProperties () "," Gets the preset reverb properties. <br /><br />"
"android.media.audiofx.PresetReverb.getPreset () "," Gets current reverb preset. <br /><br />"
"android.media.audiofx.PresetReverb.OnParameterChangeListener.onParameterChange (PresetReverb effect, int status, int param, short value) "," Method called when a parameter value has changed. <br /><br />"
"android.media.audiofx.PresetReverb.Settings.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.media.audiofx.Virtualizer.getRoundedStrength () "," Gets the current strength of the effect. <br /><br />"
"android.media.audiofx.Virtualizer.setProperties (Virtualizer.Settings settings) "," Sets the virtualizer properties. <br /><br />"
"android.media.audiofx.Virtualizer.setParameterListener (Virtualizer.OnParameterChangeListener listener) "," Registers an OnParameterChangeListener interface. <br /><br />"
"android.media.audiofx.Virtualizer.forceVirtualizationMode (int virtualizationMode) "," Forces the virtualizer effect to use the given processing mode. <br /><br />"
"android.media.audiofx.Virtualizer.setStrength (short strength) "," Sets the strength of the virtualizer effect. <br /><br />"
"android.media.audiofx.Virtualizer.canVirtualize (int inputChannelMask, int virtualizationMode) "," Checks if the combination of a channel mask and virtualization mode is supported by this virtualizer. <br /><br />"
"android.media.audiofx.Virtualizer.getProperties () "," Gets the virtualizer properties. <br /><br />"
"android.media.audiofx.Virtualizer.getVirtualizationMode () "," Return the virtualization mode being used, if any. <br /><br />"
"android.media.audiofx.Virtualizer.getStrengthSupported () "," Indicates whether setting strength is supported. <br /><br />"
"android.media.audiofx.Virtualizer.getSpeakerAngles (int inputChannelMask, int virtualizationMode, int[] angles)   Queries the virtual speaker angles  (azimuth and elevation) "," Queries the virtual speaker angles (azimuth and elevation) for a combination of a channel mask and virtualization mode. <br /><br />"
"android.media.audiofx.Virtualizer.OnParameterChangeListener.onParameterChange (Virtualizer effect, int status, int param, short value) "," Method called when a parameter value has changed. <br /><br />"
"android.media.audiofx.Virtualizer.Settings.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.media.audiofx.Visualizer.getEnabled () "," Get current activation state of the visualizer. <br /><br />"
"android.media.audiofx.Visualizer.getCaptureSize () "," Returns current capture size. <br /><br />"
"android.media.audiofx.Visualizer.getWaveForm (byte[] waveform) "," Returns a waveform capture of currently playing audio content. <br /><br />"
"android.media.audiofx.Visualizer.getMeasurementMode () "," Returns the current measurement modes performed by this audio effect <br /><br />"
"android.media.audiofx.Visualizer.getMaxCaptureRate () "," Returns the maximum capture rate for the callback capture method. <br /><br />"
"android.media.audiofx.Visualizer.getMeasurementPeakRms (Visualizer.MeasurementPeakRms measurement) "," Retrieves the latest peak and RMS measurement. <br /><br />"
"android.media.audiofx.Visualizer.getScalingMode () "," Returns the current scaling mode on the captured visualization data. <br /><br />"
"android.media.audiofx.Visualizer.getCaptureSizeRange () "," Returns the capture size range. <br /><br />"
"android.media.audiofx.Visualizer.getFft (byte[] fft) "," Returns a frequency capture of currently playing audio content. <br /><br />"
"android.media.audiofx.Visualizer.setMeasurementMode (int mode) "," Sets the combination of measurement modes to be performed by this audio effect. <br /><br />"
"android.media.audiofx.Visualizer.release () "," Releases the native Visualizer resources. <br /><br />"
"android.media.audiofx.Visualizer.setDataCaptureListener (Visualizer.OnDataCaptureListener listener, int rate, boolean waveform, boolean fft) "," Registers an OnDataCaptureListener interface and specifies the rate at which the capture should be updated as well as the type of capture requested. <br /><br />"
"android.media.audiofx.Visualizer.setEnabled (boolean enabled) "," Enable or disable the visualization engine. <br /><br />"
"android.media.audiofx.Visualizer.getSamplingRate () "," Returns the sampling rate of the captured audio. <br /><br />"
"android.media.audiofx.Visualizer.setCaptureSize (int size) "," Sets the capture size, i.e. <br /><br />"
"android.media.audiofx.Visualizer.setScalingMode (int mode) "," Set the type of scaling applied on the captured visualization data. <br /><br />"
"android.media.audiofx.Visualizer.OnDataCaptureListener.onFftDataCapture (Visualizer visualizer, byte[] fft, int samplingRate) "," Method called when a new frequency capture is available. <br /><br />"
"android.media.audiofx.Visualizer.OnDataCaptureListener.onWaveFormDataCapture (Visualizer visualizer, byte[] waveform, int samplingRate) "," Method called when a new waveform capture is available. <br /><br />"
"android.media.AudioManager.isVolumeFixed () "," Indicates if the device implements a fixed volume policy. <br /><br />"
"android.media.AudioManager.getParameters (String keys) "," Gets a variable number of parameter values from audio hardware. <br /><br />"
"android.media.AudioManager.startBluetoothSco () "," Start bluetooth SCO audio connection. <br /><br />"
"android.media.AudioManager.setBluetoothScoOn (boolean on) "," Request use of Bluetooth SCO headset for communications. <br /><br />"
"android.media.AudioManager.setRouting (int mode, int routes, int mask)    This method was deprecated in API level 4. Do not set audio routing directly, use setSpeakerphoneOn (), setBluetoothScoOn () "," This method was deprecated in API level 4. Do not set audio routing directly, use setSpeakerphoneOn(), setBluetoothScoOn() methods instead. <br /><br />"
"android.media.AudioManager.setWiredHeadsetOn (boolean on) "," This method was deprecated in API level 5. Do not use. <br /><br />"
"android.media.AudioManager.loadSoundEffects () "," Load Sound effects. <br /><br />"
"android.media.AudioManager.getMode () "," Returns the current audio mode. <br /><br />"
"android.media.AudioManager.setBluetoothA2dpOn (boolean on) "," This method was deprecated in API level 5. Do not use. <br /><br />"
"android.media.AudioManager.getStreamVolume (int streamType) "," Returns the current volume index for a particular stream. <br /><br />"
"android.media.AudioManager.unregisterMediaButtonEventReceiver (ComponentName eventReceiver) "," This method was deprecated in API level 21. Use MediaSession instead. <br /><br />"
"android.media.AudioManager.setMicrophoneMute (boolean on) "," Sets the microphone mute on or off. <br /><br />"
"android.media.AudioManager.registerRemoteControlClient (RemoteControlClient rcClient) "," This method was deprecated in API level 21. Use MediaSession instead. <br /><br />"
"android.media.AudioManager.setStreamMute (int streamType, boolean state) "," Mute or unmute an audio stream. <br /><br />"
"android.media.AudioManager.shouldVibrate (int vibrateType)    This method was deprecated in API level 16. Applications should maintain their own vibrate policy based on current ringer mode that can be queried via getRingerMode () "," This method was deprecated in API level 16. Applications should maintain their own vibrate policy based on current ringer mode that can be queried via getRingerMode(). <br /><br />"
"android.media.AudioManager.getVibrateSetting (int vibrateType)    This method was deprecated in API level 16. Applications should maintain their own vibrate policy based on current ringer mode that can be queried via getRingerMode () "," This method was deprecated in API level 16. Applications should maintain their own vibrate policy based on current ringer mode that can be queried via getRingerMode(). <br /><br />"
"android.media.AudioManager.setVibrateSetting (int vibrateType, int vibrateSetting)    This method was deprecated in API level 16. Applications should maintain their own vibrate policy based on current ringer mode that can be queried via getRingerMode () "," This method was deprecated in API level 16. Applications should maintain their own vibrate policy based on current ringer mode that can be queried via getRingerMode(). <br /><br />"
"android.media.AudioManager.registerMediaButtonEventReceiver (PendingIntent eventReceiver)    This method was deprecated in API level 21. Use setMediaButtonReceiver (PendingIntent) "," This method was deprecated in API level 21. Use setMediaButtonReceiver(PendingIntent) instead. <br /><br />"
"android.media.AudioManager.unloadSoundEffects () "," Unload Sound effects. <br /><br />"
"android.media.AudioManager.isMusicActive () "," Checks whether any music is active. <br /><br />"
"android.media.AudioManager.unregisterRemoteControlClient (RemoteControlClient rcClient) "," This method was deprecated in API level 21. Use MediaSession instead. <br /><br />"
"android.media.AudioManager.generateAudioSessionId () "," Return a new audio session identifier not associated with any player or effect. <br /><br />"
"android.media.AudioManager.isBluetoothScoOn () "," Checks whether communications use Bluetooth SCO. <br /><br />"
"android.media.AudioManager.setStreamVolume (int streamType, int index, int flags) "," Sets the volume index for a particular stream. <br /><br />"
"android.media.AudioManager.getStreamMaxVolume (int streamType) "," Returns the maximum volume index for a particular stream. <br /><br />"
"android.media.AudioManager.isBluetoothScoAvailableOffCall () "," Indicates if current platform supports use of SCO for off call use cases. <br /><br />"
"android.media.AudioManager.isBluetoothA2dpOn () "," Checks whether A2DP audio routing to the Bluetooth headset is on or off. <br /><br />"
"android.media.AudioManager.playSoundEffect (int effectType, float volume)   Plays a sound effect  (Key clicks, lid open/close...) "," Plays a sound effect (Key clicks, lid open/close...) <br /><br />"
"android.media.AudioManager.adjustStreamVolume (int streamType, int direction, int flags) "," Adjusts the volume of a particular stream by one step in a direction. <br /><br />"
"android.media.AudioManager.playSoundEffect (int effectType)   Plays a sound effect  (Key clicks, lid open/close...) "," Plays a sound effect (Key clicks, lid open/close...) <br /><br />"
"android.media.AudioManager.getRingerMode () "," Returns the current ringtone mode. <br /><br />"
"android.media.AudioManager.registerMediaButtonEventReceiver (ComponentName eventReceiver)    This method was deprecated in API level 21. Use setMediaButtonReceiver (PendingIntent) "," This method was deprecated in API level 21. Use setMediaButtonReceiver(PendingIntent) instead. <br /><br />"
"android.media.AudioManager.adjustSuggestedStreamVolume (int direction, int suggestedStreamType, int flags) "," Adjusts the volume of the most relevant stream, or the given fallback stream. <br /><br />"
"android.media.AudioManager.registerRemoteController (RemoteController rctlr)    This method was deprecated in API level 21. Use addOnActiveSessionsChangedListener (android.media.session.MediaSessionManager.OnActiveSessionsChangedListener, ComponentName) "," This method was deprecated in API level 21. Use addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener, ComponentName) and MediaController instead. <br /><br />"
"android.media.AudioManager.unregisterMediaButtonEventReceiver (PendingIntent eventReceiver) "," This method was deprecated in API level 21. Use MediaSession instead. <br /><br />"
"android.media.AudioManager.requestAudioFocus (AudioManager.OnAudioFocusChangeListener l, int streamType, int durationHint) "," Request audio focus. <br /><br />"
"android.media.AudioManager.setParameters (String keyValuePairs) "," Sets a variable number of parameter values to audio hardware. <br /><br />"
"android.media.AudioManager.getProperty (String key) "," Returns the value of the property with the specified key. <br /><br />"
"android.media.AudioManager.isMicrophoneMute () "," Checks whether the microphone mute is on or off. <br /><br />"
"android.media.AudioManager.isSpeakerphoneOn () "," Checks whether the speakerphone is on or off. <br /><br />"
"android.media.AudioManager.abandonAudioFocus (AudioManager.OnAudioFocusChangeListener l) "," Abandon audio focus. <br /><br />"
"android.media.AudioManager.dispatchMediaKeyEvent (KeyEvent keyEvent) "," Sends a simulated key event for a media button. <br /><br />"
"android.media.AudioManager.getRouting (int mode)    This method was deprecated in API level 4. Do not query audio routing directly, use isSpeakerphoneOn (), isBluetoothScoOn (), isBluetoothA2dpOn () and isWiredHeadsetOn () "," This method was deprecated in API level 4. Do not query audio routing directly, use isSpeakerphoneOn(), isBluetoothScoOn(), isBluetoothA2dpOn() and isWiredHeadsetOn() methods instead. <br /><br />"
"android.media.AudioManager.setStreamSolo (int streamType, boolean state) "," Solo or unsolo a particular stream. <br /><br />"
"android.media.AudioManager.isWiredHeadsetOn () "," This method was deprecated in API level 14. Use only to check is a headset is connected or not. <br /><br />"
"android.media.AudioManager.setSpeakerphoneOn (boolean on) "," Sets the speakerphone on or off. <br /><br />"
"android.media.AudioManager.unregisterRemoteController (RemoteController rctlr)    This method was deprecated in API level 21. Use removeOnActiveSessionsChangedListener (android.media.session.MediaSessionManager.OnActiveSessionsChangedListener) "," This method was deprecated in API level 21. Use removeOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener) instead. <br /><br />"
"android.media.AudioManager.setRingerMode (int ringerMode) "," Sets the ringer mode. <br /><br />"
"android.media.AudioManager.setMode (int mode) "," Sets the audio mode. <br /><br />"
"android.media.AudioManager.stopBluetoothSco () "," Stop bluetooth SCO audio connection. <br /><br />"
"android.media.AudioManager.adjustVolume (int direction, int flags) "," Adjusts the volume of the most relevant stream. <br /><br />"
"android.media.AudioManager.OnAudioFocusChangeListener.onAudioFocusChange (int focusChange) "," Called on the listener to notify it the audio focus for this listener has been changed. <br /><br />"
"android.media.AudioRecord.startRecording (MediaSyncEvent syncEvent) "," Starts recording from the AudioRecord instance when the specified synchronization event occurs on the specified audio session. <br /><br />"
"android.media.AudioRecord.getAudioSource () "," Returns the audio recording source. <br /><br />"
"android.media.AudioRecord.startRecording () "," Starts recording from the AudioRecord instance. <br /><br />"
"android.media.AudioRecord.getState () "," Returns the state of the AudioRecord instance. <br /><br />"
"android.media.AudioRecord.read (byte[] audioData, int offsetInBytes, int sizeInBytes) "," Reads audio data from the audio hardware for recording into a buffer. <br /><br />"
"android.media.AudioRecord.release () "," Releases the native AudioRecord resources. <br /><br />"
"android.media.AudioRecord.getAudioFormat () "," Returns the configured audio data format. <br /><br />"
"android.media.AudioRecord.setNotificationMarkerPosition (int markerInFrames)   Sets the marker position at which the listener is called, if set with setRecordPositionUpdateListener (OnRecordPositionUpdateListener) or setRecordPositionUpdateListener (OnRecordPositionUpdateListener, Handler) "," Sets the marker position at which the listener is called, if set with setRecordPositionUpdateListener(OnRecordPositionUpdateListener) or setRecordPositionUpdateListener(OnRecordPositionUpdateListener, Handler). <br /><br />"
"android.media.AudioRecord.read (ByteBuffer audioBuffer, int sizeInBytes) "," Reads audio data from the audio hardware for recording into a direct buffer. <br /><br />"
"android.media.AudioRecord.getMinBufferSize (int sampleRateInHz, int channelConfig, int audioFormat) "," Returns the minimum buffer size required for the successful creation of an AudioRecord object, in byte units. <br /><br />"
"android.media.AudioRecord.getNotificationMarkerPosition () "," Returns the notification marker position expressed in frames. <br /><br />"
"android.media.AudioRecord.getPositionNotificationPeriod () "," Returns the notification update period expressed in frames. <br /><br />"
"android.media.AudioRecord.stop () "," Stops recording. <br /><br />"
"android.media.AudioRecord.getSampleRate () "," Returns the configured audio data sample rate in Hz <br /><br />"
"android.media.AudioRecord.getChannelCount () "," Returns the configured number of channels. <br /><br />"
"android.media.AudioRecord.getRecordingState () "," Returns the recording state of the AudioRecord instance. <br /><br />"
"android.media.AudioRecord.setRecordPositionUpdateListener (AudioRecord.OnRecordPositionUpdateListener listener, Handler handler) "," Sets the listener the AudioRecord notifies when a previously set marker is reached or for each periodic record head position update. <br /><br />"
"android.media.AudioRecord.read (short[] audioData, int offsetInShorts, int sizeInShorts) "," Reads audio data from the audio hardware for recording into a buffer. <br /><br />"
"android.media.AudioRecord.setPositionNotificationPeriod (int periodInFrames)   Sets the period at which the listener is called, if set with setRecordPositionUpdateListener (OnRecordPositionUpdateListener) or setRecordPositionUpdateListener (OnRecordPositionUpdateListener, Handler) "," Sets the period at which the listener is called, if set with setRecordPositionUpdateListener(OnRecordPositionUpdateListener) or setRecordPositionUpdateListener(OnRecordPositionUpdateListener, Handler). <br /><br />"
"android.media.AudioRecord.getChannelConfiguration () "," Returns the configured channel configuration. <br /><br />"
"android.media.AudioRecord.setRecordPositionUpdateListener (AudioRecord.OnRecordPositionUpdateListener listener) "," Sets the listener the AudioRecord notifies when a previously set marker is reached or for each periodic record head position update. <br /><br />"
"android.media.AudioRecord.getAudioSessionId () "," Returns the audio session ID. <br /><br />"
"android.media.AudioRecord.OnRecordPositionUpdateListener.onMarkerReached (AudioRecord recorder) "," Called on the listener to notify it that the previously set marker has been reached by the recording head. <br /><br />"
"android.media.AudioRecord.OnRecordPositionUpdateListener.onPeriodicNotification (AudioRecord recorder) "," Called on the listener to periodically notify it that the record head has reached a multiple of the notification period. <br /><br />"
"android.media.AudioTrack.write (ByteBuffer audioData, int sizeInBytes, int writeMode)   Writes the audio data to the audio sink for playback  (streaming mode), or copies audio data for later playback  (static buffer mode) "," Writes the audio data to the audio sink for playback (streaming mode), or copies audio data for later playback (static buffer mode). <br /><br />"
"android.media.AudioTrack.write (float[] audioData, int offsetInFloats, int sizeInFloats, int writeMode)   Writes the audio data to the audio sink for playback  (streaming mode), or copies audio data for later playback  (static buffer mode) "," Writes the audio data to the audio sink for playback (streaming mode), or copies audio data for later playback (static buffer mode). <br /><br />"
"android.media.AudioTrack.getTimestamp (AudioTimestamp timestamp) "," Poll for a timestamp on demand. <br /><br />"
"android.media.AudioTrack.getNativeOutputSampleRate (int streamType) "," Returns the output sample rate in Hz for the specified stream type. <br /><br />"
"android.media.AudioTrack.getMinVolume () "," Returns the minimum gain value, which is the constant 0.0. <br /><br />"
"android.media.AudioTrack.setPlaybackHeadPosition (int positionInFrames) "," Sets the playback head position. <br /><br />"
"android.media.AudioTrack.setPositionNotificationPeriod (int periodInFrames) "," Sets the period for the periodic notification event. <br /><br />"
"android.media.AudioTrack.getMinBufferSize (int sampleRateInHz, int channelConfig, int audioFormat) "," Returns the minimum buffer size required for the successful creation of an AudioTrack object to be created in the MODE_STREAM mode. <br /><br />"
"android.media.AudioTrack.getPositionNotificationPeriod () "," Returns the notification update period expressed in frames. <br /><br />"
"android.media.AudioTrack.stop () "," Stops playing the audio data. <br /><br />"
"android.media.AudioTrack.getPlayState () "," Returns the playback state of the AudioTrack instance. <br /><br />"
"android.media.AudioTrack.getSampleRate () "," Returns the configured audio data sample rate in Hz <br /><br />"
"android.media.AudioTrack.getMaxVolume () "," Returns the maximum gain value, which is greater than or equal to 1.0. <br /><br />"
"android.media.AudioTrack.getChannelCount () "," Returns the configured number of channels. <br /><br />"
"android.media.AudioTrack.getPlaybackRate () "," Returns the current playback rate in Hz. <br /><br />"
"android.media.AudioTrack.write (byte[] audioData, int offsetInBytes, int sizeInBytes)   Writes the audio data to the audio sink for playback  (streaming mode), or copies audio data for later playback  (static buffer mode) "," Writes the audio data to the audio sink for playback (streaming mode), or copies audio data for later playback (static buffer mode). <br /><br />"
"android.media.AudioTrack.getChannelConfiguration () "," Returns the configured channel configuration. <br /><br />"
"android.media.AudioTrack.setPlaybackRate (int sampleRateInHz) "," Sets the playback sample rate for this track. <br /><br />"
"android.media.AudioTrack.setPlaybackPositionUpdateListener (AudioTrack.OnPlaybackPositionUpdateListener listener) "," Sets the listener the AudioTrack notifies when a previously set marker is reached or for each periodic playback head position update. <br /><br />"
"android.media.AudioTrack.setAuxEffectSendLevel (float level)   Sets the send level of the audio track to the attached auxiliary effect attachAuxEffect (int) "," Sets the send level of the audio track to the attached auxiliary effect attachAuxEffect(int). <br /><br />"
"android.media.AudioTrack.play () "," Starts playing an AudioTrack. <br /><br />"
"android.media.AudioTrack.setNotificationMarkerPosition (int markerInFrames) "," Sets the position of the notification marker. <br /><br />"
"android.media.AudioTrack.reloadStaticData () "," Notifies the native resource to reuse the audio data already loaded in the native layer, that is to rewind to start of buffer. <br /><br />"
"android.media.AudioTrack.write (short[] audioData, int offsetInShorts, int sizeInShorts)   Writes the audio data to the audio sink for playback  (streaming mode), or copies audio data for later playback  (static buffer mode) "," Writes the audio data to the audio sink for playback (streaming mode), or copies audio data for later playback (static buffer mode). <br /><br />"
"android.media.AudioTrack.getState () "," Returns the state of the AudioTrack instance. <br /><br />"
"android.media.AudioTrack.setVolume (float gain) "," Sets the specified output gain value on all channels of this track. <br /><br />"
"android.media.AudioTrack.flush () "," Flushes the audio data currently queued for playback. <br /><br />"
"android.media.AudioTrack.getAudioFormat () "," Returns the configured audio data format. <br /><br />"
"android.media.AudioTrack.release () "," Releases the native AudioTrack resources. <br /><br />"
"android.media.AudioTrack.setPlaybackPositionUpdateListener (AudioTrack.OnPlaybackPositionUpdateListener listener, Handler handler) "," Sets the listener the AudioTrack notifies when a previously set marker is reached or for each periodic playback head position update. <br /><br />"
"android.media.AudioTrack.setStereoVolume (float leftGain, float rightGain)    This method was deprecated in API level 21. Applications should use setVolume (float) "," This method was deprecated in API level 21. Applications should use setVolume(float) instead, as it more gracefully scales down to mono, and up to multi-channel content beyond stereo. <br /><br />"
"android.media.AudioTrack.getNotificationMarkerPosition () "," Returns marker position expressed in frames. <br /><br />"
"android.media.AudioTrack.getPlaybackHeadPosition () "," Returns the playback head position expressed in frames. <br /><br />"
"android.media.AudioTrack.getStreamType () "," Returns the type of audio stream this AudioTrack is configured for. <br /><br />"
"android.media.AudioTrack.setLoopPoints (int startInFrames, int endInFrames, int loopCount) "," Sets the loop points and the loop count. <br /><br />"
"android.media.AudioTrack.attachAuxEffect (int effectId) "," Attaches an auxiliary effect to the audio track. <br /><br />"
"android.media.AudioTrack.getAudioSessionId () "," Returns the audio session ID. <br /><br />"
"android.media.AudioTrack.pause () "," Pauses the playback of the audio data. <br /><br />"
"android.media.AudioTrack.OnPlaybackPositionUpdateListener.onMarkerReached (AudioTrack track) "," Called on the listener to notify it that the previously set marker has been reached by the playback head. <br /><br />"
"android.media.AudioTrack.OnPlaybackPositionUpdateListener.onPeriodicNotification (AudioTrack track) "," Called on the listener to periodically notify it that the playback head has reached a multiple of the notification period. <br /><br />"
"android.media.browse.MediaBrowser.ConnectionCallback.onConnectionSuspended () "," Invoked when the client is disconnected from the media browser. <br /><br />"
"android.media.browse.MediaBrowser.ConnectionCallback.onConnected ()   Invoked after connect () "," Invoked after connect() when the request has successfully completed. <br /><br />"
"android.media.browse.MediaBrowser.ConnectionCallback.onConnectionFailed () "," Invoked when the connection to the media browser failed. <br /><br />"
"android.media.browse.MediaBrowser.getExtras () "," Gets any extras for the media service. <br /><br />"
"android.media.browse.MediaBrowser.getSessionToken () "," Gets the media session token associated with the media browser. <br /><br />"
"android.media.browse.MediaBrowser.connect () "," Connects to the media browse service. <br /><br />"
"android.media.browse.MediaBrowser.unsubscribe (String parentId) "," Unsubscribes for changes to the children of the specified media id. <br /><br />"
"android.media.browse.MediaBrowser.isConnected () "," Returns whether the browser is connected to the service. <br /><br />"
"android.media.browse.MediaBrowser.getServiceComponent () "," Gets the service component that the media browser is connected to. <br /><br />"
"android.media.browse.MediaBrowser.getRoot () "," Gets the root id. <br /><br />"
"android.media.browse.MediaBrowser.disconnect () "," Disconnects from the media browse service. <br /><br />"
"android.media.browse.MediaBrowser.subscribe (String parentId, MediaBrowser.SubscriptionCallback callback) "," Queries for information about the media items that are contained within the specified id and subscribes to receive updates when they change. <br /><br />"
"android.media.browse.MediaBrowser.MediaItem.getDescription () "," Returns the description of the media. <br /><br />"
"android.media.browse.MediaBrowser.MediaItem.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.media.browse.MediaBrowser.MediaItem.getMediaId () "," Returns the media id for this item. <br /><br />"
"android.media.browse.MediaBrowser.MediaItem.isPlayable () "," Returns whether this item is playable. <br /><br />"
"android.media.browse.MediaBrowser.MediaItem.getFlags () "," Gets the flags of the item. <br /><br />"
"android.media.browse.MediaBrowser.MediaItem.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.media.browse.MediaBrowser.MediaItem.isBrowsable () "," Returns whether this item is browsable. <br /><br />"
"android.media.browse.MediaBrowser.MediaItem.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.media.browse.MediaBrowser.SubscriptionCallback.onChildrenLoaded (String parentId, List< MediaBrowser.MediaItem> children) "," Called when the list of children is loaded or updated. <br /><br />"
"android.media.browse.MediaBrowser.SubscriptionCallback.onError (String id) "," Called when the id doesn't exist or other errors in subscribing. <br /><br />"
"android.media.CamcorderProfile.get (int cameraId, int quality) "," Returns the camcorder profile for the given camera at the given quality level. <br /><br />"
"android.media.CamcorderProfile.hasProfile (int quality) "," Returns true if camcorder profile exists for the first back-facing camera at the given quality level. <br /><br />"
"android.media.CamcorderProfile.hasProfile (int cameraId, int quality) "," Returns true if camcorder profile exists for the given camera at the given quality level. <br /><br />"
"android.media.CamcorderProfile.get (int quality) "," Returns the camcorder profile for the first back-facing camera on the device at the given quality level. <br /><br />"
"android.media.CameraProfile.getJpegEncodingQualityParameter (int quality)   Returns a pre-defined still image capture  (jpeg) "," Returns a pre-defined still image capture (jpeg) quality level used for the given quality level in the Camera application for the first back-facing camera on the device. <br /><br />"
"android.media.CameraProfile.getJpegEncodingQualityParameter (int cameraId, int quality)   Returns a pre-defined still image capture  (jpeg) "," Returns a pre-defined still image capture (jpeg) quality level used for the given quality level in the Camera application for the specified camera. <br /><br />"
"android.media.effect.Effect.getName () "," Get the effect name. <br /><br />"
"android.media.effect.Effect.apply (int inputTexId, int width, int height, int outputTexId) "," Apply an effect to GL textures. <br /><br />"
"android.media.effect.Effect.setParameter (String parameterKey, Object value) "," Set a filter parameter. <br /><br />"
"android.media.effect.Effect.setUpdateListener (EffectUpdateListener listener) "," Set an effect listener. <br /><br />"
"android.media.effect.Effect.release () "," Release an effect. <br /><br />"
"android.media.effect.EffectContext.getFactory () "," Returns the EffectFactory for this context. <br /><br />"
"android.media.effect.EffectContext.release () "," Releases the context. <br /><br />"
"android.media.effect.EffectContext.createWithCurrentGlContext () "," Creates a context within the current GL context. <br /><br />"
"android.media.effect.EffectFactory.createEffect (String effectName) "," Instantiate a new effect with the given effect name. <br /><br />"
"android.media.effect.EffectFactory.isEffectSupported (String effectName) "," Check if an effect is supported on this platform. <br /><br />"
"android.media.effect.EffectUpdateListener.onEffectUpdated (Effect effect, Object info) "," Called when the effect state is updated. <br /><br />"
"android.media.ExifInterface.setAttribute (String tag, String value) "," Set the value of the specified tag. <br /><br />"
"android.media.ExifInterface.getThumbnail () "," Returns the thumbnail inside the JPEG file, or null if there is no thumbnail. <br /><br />"
"android.media.ExifInterface.getAttributeDouble (String tag, double defaultValue) "," Returns the double value of the specified rational tag. <br /><br />"
"android.media.ExifInterface.saveAttributes () "," Save the tag data into the JPEG file. <br /><br />"
"android.media.ExifInterface.hasThumbnail () "," Returns true if the JPEG file has a thumbnail. <br /><br />"
"android.media.ExifInterface.getLatLong (float[] output) "," Stores the latitude and longitude value in a float array. <br /><br />"
"android.media.ExifInterface.getAltitude (double defaultValue) "," Return the altitude in meters. <br /><br />"
"android.media.ExifInterface.getAttribute (String tag) "," Returns the value of the specified tag or null if there is no such tag in the JPEG file. <br /><br />"
"android.media.ExifInterface.getAttributeInt (String tag, int defaultValue) "," Returns the integer value of the specified tag. <br /><br />"
"android.media.FaceDetector.Face.pose (int euler) "," Returns the face's pose. <br /><br />"
"android.media.FaceDetector.Face.eyesDistance () "," Returns the distance between the eyes. <br /><br />"
"android.media.FaceDetector.Face.getMidPoint (PointF point) "," Sets the position of the mid-point between the eyes. <br /><br />"
"android.media.FaceDetector.Face.confidence () "," Returns a confidence factor between 0 and 1. <br /><br />"
"android.media.FaceDetector.findFaces (Bitmap bitmap, Face[] faces) "," Finds all the faces found in a given Bitmap. <br /><br />"
"android.media.Image.Plane.getRowStride () "," The row stride for this color plane, in bytes. <br /><br />"
"android.media.Image.Plane.getPixelStride () "," The distance between adjacent pixel samples, in bytes. <br /><br />"
"android.media.Image.Plane.getBuffer () "," Get a direct ByteBuffer containing the frame data. <br /><br />"
"android.media.ImageReader.OnImageAvailableListener.onImageAvailable (ImageReader reader) "," Callback that is called when a new image is available from ImageReader. <br /><br />"
"android.media.JetPlayer.OnJetEventListener.onJetEvent (JetPlayer player, short segment, byte track, byte channel, byte controller, byte value) "," Callback for when the JET engine generates a new event. <br /><br />"
"android.media.JetPlayer.OnJetEventListener.onJetNumQueuedSegmentUpdate (JetPlayer player, int nbSegments) "," Callback for when JET's number of queued segments is updated. <br /><br />"
"android.media.JetPlayer.OnJetEventListener.onJetUserIdUpdate (JetPlayer player, int userId, int repeatCount) "," Callback for when JET's currently playing segment's userID is updated. <br /><br />"
"android.media.JetPlayer.OnJetEventListener.onJetPauseUpdate (JetPlayer player, int paused) "," Callback for when JET pause state is updated. <br /><br />"
"android.media.MediaActionSound.load (int soundName)   Preload a predefined platform sound to minimize latency when the sound is played later by play (int) "," Preload a predefined platform sound to minimize latency when the sound is played later by play(int). <br /><br />"
"android.media.MediaActionSound.play (int soundName) "," Play one of the predefined platform sounds for media actions. <br /><br />"
"android.media.MediaActionSound.release () "," Free up all audio resources used by this MediaActionSound instance. <br /><br />"
"android.media.MediaCodec.BufferInfo.set (int newOffset, int newSize, long newTimeUs, int newFlags) "," Update the buffer metadata information. <br /><br />"
"android.media.MediaCodec.Callback.onInputBufferAvailable (MediaCodec codec, int index) "," Called when an input buffer becomes available. <br /><br />"
"android.media.MediaCodec.Callback.onOutputBufferAvailable (MediaCodec codec, int index, MediaCodec.BufferInfo info) "," Called when an output buffer becomes available. <br /><br />"
"android.media.MediaCodec.Callback.onError (MediaCodec codec, MediaCodec.CodecException e) "," Called when the MediaCodec encountered an error <br /><br />"
"android.media.MediaCodec.Callback.onOutputFormatChanged (MediaCodec codec, MediaFormat format) "," Called when the output format has changed <br /><br />"
"android.media.MediaCodec.CodecException.isTransient ()   Returns true if the codec exception is a transient issue, perhaps due to resource constraints, and that the method  (or encoding/decoding) "," Returns true if the codec exception is a transient issue, perhaps due to resource constraints, and that the method (or encoding/decoding) may be retried at a later time. <br /><br />"
"android.media.MediaCodec.CodecException.isRecoverable () "," Returns true if the codec cannot proceed further, but can be recovered by stopping, configuring, and starting again. <br /><br />"
"android.media.MediaCodec.CodecException.getDiagnosticInfo () "," Retrieve a developer-readable diagnostic information string associated with the exception. <br /><br />"
"android.media.MediaCodec.CryptoException.getErrorCode () "," Retrieve the error code associated with a CryptoException <br /><br />"
"android.media.MediaCodec.CryptoInfo.set (int newNumSubSamples, int[] newNumBytesOfClearData, int[] newNumBytesOfEncryptedData, byte[] newKey, byte[] newIV, int newMode) "," no description <br /><br />"
"android.media.MediaCodec.CryptoInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.media.MediaCodec.queueSecureInputBuffer (int index, int offset, MediaCodec.CryptoInfo info, long presentationTimeUs, int flags)   Similar to queueInputBuffer (int, int, int, long, int) "," Similar to queueInputBuffer(int, int, int, long, int) but submits a buffer that is potentially encrypted. <br /><br />"
"android.media.MediaCodec.getOutputFormat (int index) "," Returns the output format for a specific output buffer. <br /><br />"
"android.media.MediaCodec.getInputBuffers ()    This method was deprecated in API level 21. Use the new getInputBuffer (int) method instead each time an input buffer is dequeued. Note:As of API 21, dequeued input buffers are automatically "," This method was deprecated in API level 21. Use the new getInputBuffer(int) method instead each time an input buffer is dequeued. Note:As of API 21, dequeued input buffers are automatically cleared. <br /><br />"
"android.media.MediaCodec.stop ()   Finish the decode/encode session, note that the codec instance remains active and ready to be start () "," Finish the decode/encode session, note that the codec instance remains active and ready to be start()ed again. <br /><br />"
"android.media.MediaCodec.dequeueInputBuffer (long timeoutUs) "," Returns the index of an input buffer to be filled with valid data or -1 if no such buffer is currently available. <br /><br />"
"android.media.MediaCodec.queueInputBuffer (int index, int offset, int size, long presentationTimeUs, int flags) "," After filling a range of the input buffer at the specified index submit it to the component. <br /><br />"
"android.media.MediaCodec.getInputBuffer (int index)   Returns a "," Returns a cleared, writable ByteBuffer object for a dequeued input buffer index to contain the input data. <br /><br />"
"android.media.MediaCodec.getInputImage (int index) "," Returns a writable Image object for a dequeued input buffer index to contain the raw input video frame. <br /><br />"
"android.media.MediaCodec.getInputFormat ()   Call this after configure (MediaFormat, Surface, MediaCrypto, int) "," Call this after configure(MediaFormat, Surface, MediaCrypto, int) returns successfully to get the input format accepted by the codec. <br /><br />"
"android.media.MediaCodec.getCodecInfo () "," Get the codec info. <br /><br />"
"android.media.MediaCodec.getName () "," Get the component name. <br /><br />"
"android.media.MediaCodec.setParameters (Bundle params) "," Communicate additional parameter changes to the component instance. <br /><br />"
"android.media.MediaCodec.configure (MediaFormat format, Surface surface, MediaCrypto crypto, int flags) "," Configures a component. <br /><br />"
"android.media.MediaCodec.createDecoderByType (String type) "," Instantiate a decoder supporting input data of the given mime type. <br /><br />"
"android.media.MediaCodec.createEncoderByType (String type) "," Instantiate an encoder supporting output data of the given mime type. <br /><br />"
"android.media.MediaCodec.setCallback (MediaCodec.Callback cb) "," Sets an asynchronous callback for actionable MediaCodec events. <br /><br />"
"android.media.MediaCodec.reset ()   Returns the codec to its initial  (Initialized) "," Returns the codec to its initial (Initialized) state. <br /><br />"
"android.media.MediaCodec.dequeueOutputBuffer (MediaCodec.BufferInfo info, long timeoutUs) "," Dequeue an output buffer, block at most 'timeoutUs' microseconds. <br /><br />"
"android.media.MediaCodec.getOutputBuffers ()    This method was deprecated in API level 21. Use the new getOutputBuffer (int) "," This method was deprecated in API level 21. Use the new getOutputBuffer(int) method instead each time an output buffer is dequeued. This method is not supported if codec is configured in asynchronous mode. Note:As of API 21, the position and limit of output buffers that are dequeued will be set to the valid data range. <br /><br />"
"android.media.MediaCodec.getOutputFormat () "," Call this after dequeueOutputBuffer signals a format change by returning INFO_OUTPUT_FORMAT_CHANGED. <br /><br />"
"android.media.MediaCodec.getOutputImage (int index) "," Returns a read-only Image object for a dequeued output buffer index that contains the raw video frame. <br /><br />"
"android.media.MediaCodec.start () "," After successfully configuring the component, call start. <br /><br />"
"android.media.MediaCodec.signalEndOfInputStream () "," Signals end-of-stream on input. <br /><br />"
"android.media.MediaCodec.flush ()   Flush both input and output ports of the component, all indices previously returned in calls to dequeueInputBuffer (long) and dequeueOutputBuffer (MediaCodec.BufferInfo, long) "," Flush both input and output ports of the component, all indices previously returned in calls to dequeueInputBuffer(long) and dequeueOutputBuffer(MediaCodec.BufferInfo, long) become invalid. <br /><br />"
"android.media.MediaCodec.release () "," Make sure you call this when you're done to free up any opened component instance instead of relying on the garbage collector to do this for you at some point in the future. <br /><br />"
"android.media.MediaCodec.releaseOutputBuffer (int index, long renderTimestampNs) "," If you are done with a buffer, use this call to update its surface timestamp and return it to the codec to render it on the output surface. <br /><br />"
"android.media.MediaCodec.setVideoScalingMode (int mode)   If a surface has been specified in a previous call to configure (MediaFormat, Surface, MediaCrypto, int) "," If a surface has been specified in a previous call to configure(MediaFormat, Surface, MediaCrypto, int) specifies the scaling mode to use. <br /><br />"
"android.media.MediaCodec.createInputSurface () "," Requests a Surface to use as the input to an encoder, in place of input buffers. <br /><br />"
"android.media.MediaCodec.getOutputBuffer (int index) "," Returns a read-only ByteBuffer for a dequeued output buffer index. <br /><br />"
"android.media.MediaCodec.releaseOutputBuffer (int index, boolean render) "," If you are done with a buffer, use this call to return the buffer to the codec. <br /><br />"
"android.media.MediaCodec.createByCodecName (String name) "," If you know the exact name of the component you want to instantiate use this method to instantiate it. <br /><br />"
"android.media.MediaCodecInfo.AudioCapabilities.getMaxInputChannelCount () "," Returns the maximum number of input channels supported. <br /><br />"
"android.media.MediaCodecInfo.AudioCapabilities.getSupportedSampleRateRanges () "," Returns the array of supported sample rate ranges. <br /><br />"
"android.media.MediaCodecInfo.AudioCapabilities.isSampleRateSupported (int sampleRate) "," Query whether the sample rate is supported by the codec. <br /><br />"
"android.media.MediaCodecInfo.AudioCapabilities.getBitrateRange () "," Returns the range of supported bitrates in bits/second. <br /><br />"
"android.media.MediaCodecInfo.AudioCapabilities.getSupportedSampleRates () "," Returns the array of supported sample rates if the codec supports only discrete values. <br /><br />"
"android.media.MediaCodecInfo.CodecCapabilities.getDefaultFormat () "," Returns a MediaFormat object with default values for configurations that have defaults. <br /><br />"
"android.media.MediaCodecInfo.CodecCapabilities.isFormatSupported (MediaFormat format) "," Query whether codec supports a given MediaFormat. <br /><br />"
"android.media.MediaCodecInfo.CodecCapabilities.getEncoderCapabilities () "," Returns the encoding capabilities or null if this is not an encoder. <br /><br />"
"android.media.MediaCodecInfo.CodecCapabilities.isFeatureSupported (String name) "," Query codec feature capabilities. <br /><br />"
"android.media.MediaCodecInfo.CodecCapabilities.getMimeType () "," Returns the mime type for which this codec-capability object was created. <br /><br />"
"android.media.MediaCodecInfo.CodecCapabilities.isFeatureRequired (String name) "," Query codec feature requirements. <br /><br />"
"android.media.MediaCodecInfo.CodecCapabilities.getVideoCapabilities () "," Returns the video capabilities or null if this is not a video codec. <br /><br />"
"android.media.MediaCodecInfo.CodecCapabilities.createFromProfileLevel (String mime, int profile, int level) "," Retrieve the codec capabilities for a certain mime type, profile and level. <br /><br />"
"android.media.MediaCodecInfo.CodecCapabilities.getAudioCapabilities () "," Returns the audio capabilities or null if this is not an audio codec. <br /><br />"
"android.media.MediaCodecInfo.EncoderCapabilities.isBitrateModeSupported (int mode) "," Query whether a bitrate mode is supported. <br /><br />"
"android.media.MediaCodecInfo.EncoderCapabilities.getComplexityRange () "," Returns the supported range of encoder complexity values. <br /><br />"
"android.media.MediaCodecInfo.VideoCapabilities.getSupportedHeightsFor (int width) "," Returns the range of supported video heights for a video width <br /><br />"
"android.media.MediaCodecInfo.VideoCapabilities.getSupportedWidths () "," Returns the range of supported video widths. <br /><br />"
"android.media.MediaCodecInfo.VideoCapabilities.getSupportedWidthsFor (int height) "," Returns the range of supported video widths for a video height. <br /><br />"
"android.media.MediaCodecInfo.VideoCapabilities.getWidthAlignment ()   Returns the alignment requirement for video width  (in pixels) "," Returns the alignment requirement for video width (in pixels). <br /><br />"
"android.media.MediaCodecInfo.VideoCapabilities.getSupportedFrameRates () "," Returns the range of supported frame rates. <br /><br />"
"android.media.MediaCodecInfo.VideoCapabilities.getHeightAlignment ()   Returns the alignment requirement for video height  (in pixels) "," Returns the alignment requirement for video height (in pixels). <br /><br />"
"android.media.MediaCodecInfo.VideoCapabilities.isSizeSupported (int width, int height)   Returns whether a given video size  (width and height) "," Returns whether a given video size ( width and height) is supported. <br /><br />"
"android.media.MediaCodecInfo.VideoCapabilities.getSupportedHeights () "," Returns the range of supported video heights. <br /><br />"
"android.media.MediaCodecInfo.VideoCapabilities.getSupportedFrameRatesFor (int width, int height) "," Returns the range of supported video frame rates for a video size. <br /><br />"
"android.media.MediaCodecInfo.VideoCapabilities.getBitrateRange () "," Returns the range of supported bitrates in bits/second. <br /><br />"
"android.media.MediaCodecInfo.VideoCapabilities.areSizeAndRateSupported (int width, int height, double frameRate)   Returns whether a given video size  (width and height) "," Returns whether a given video size ( width and height) and frameRate combination is supported. <br /><br />"
"android.media.MediaCodecList.getCodecInfoAt (int index)    This method was deprecated in API level 21. Use getCodecInfos () "," This method was deprecated in API level 21. Use getCodecInfos() instead. <br /><br />"
"android.media.MediaCodecList.getCodecCount ()    This method was deprecated in API level 21. Use getCodecInfos () "," This method was deprecated in API level 21. Use getCodecInfos() instead. <br /><br />"
"android.media.MediaCodecList.findDecoderForFormat (MediaFormat format) "," Find a decoder supporting a given MediaFormat in the list of media-codecs. <br /><br />"
"android.media.MediaCodecList.findEncoderForFormat (MediaFormat format) "," Find an encoder supporting a given MediaFormat in the list of media-codecs. <br /><br />"
"android.media.MediaCodecList.getCodecInfos () "," Returns the list of MediaCodecInfo objects for the list of media-codecs. <br /><br />"
"android.media.MediaCrypto.requiresSecureDecoderComponent (String mime) "," Query if the crypto scheme requires the use of a secure decoder to decode data of the given mime type. <br /><br />"
"android.media.MediaCrypto.release () "," no description <br /><br />"
"android.media.MediaCrypto.isCryptoSchemeSupported (UUID uuid) "," Query if the given scheme identified by its UUID is supported on this device. <br /><br />"
"android.media.MediaDescription.Builder.setExtras (Bundle extras) "," Sets a bundle of extras. <br /><br />"
"android.media.MediaDescription.Builder.setDescription (CharSequence description) "," Sets the description. <br /><br />"
"android.media.MediaDescription.Builder.setIconUri (Uri iconUri) "," Sets the icon uri. <br /><br />"
"android.media.MediaDescription.Builder.build () "," no description <br /><br />"
"android.media.MediaDescription.Builder.setTitle (CharSequence title) "," Sets the title. <br /><br />"
"android.media.MediaDescription.Builder.setSubtitle (CharSequence subtitle) "," Sets the subtitle. <br /><br />"
"android.media.MediaDescription.Builder.setMediaId (String mediaId) "," Sets the media id. <br /><br />"
"android.media.MediaDescription.Builder.setIconBitmap (Bitmap icon) "," Sets the icon. <br /><br />"
"android.media.MediaDescription.getExtras () "," Returns any extras that were added to the description. <br /><br />"
"android.media.MediaDescription.getDescription () "," Returns a description suitable for display or null. <br /><br />"
"android.media.MediaDescription.getIconBitmap () "," Returns a bitmap icon suitable for display or null. <br /><br />"
"android.media.MediaDescription.getMediaId () "," Returns the media id or null. <br /><br />"
"android.media.MediaDescription.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.media.MediaDescription.getTitle () "," Returns a title suitable for display or null. <br /><br />"
"android.media.MediaDescription.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.media.MediaDescription.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.media.MediaDescription.getSubtitle () "," Returns a subtitle suitable for display or null. <br /><br />"
"android.media.MediaDescription.getIconUri () "," Returns a Uri for an icon suitable for display or null. <br /><br />"
"android.media.MediaDrm.CryptoSession.encrypt (byte[] keyid, byte[] input, byte[] iv) "," Encrypt data using the CryptoSession's cipher algorithm <br /><br />"
"android.media.MediaDrm.CryptoSession.decrypt (byte[] keyid, byte[] input, byte[] iv) "," Decrypt data using the CryptoSessions's cipher algorithm <br /><br />"
"android.media.MediaDrm.CryptoSession.verify (byte[] keyid, byte[] message, byte[] signature) "," Verify a signature using the CryptoSessions's mac algorithm. <br /><br />"
"android.media.MediaDrm.CryptoSession.sign (byte[] keyid, byte[] message) "," Sign data using the CryptoSessions's mac algorithm. <br /><br />"
"android.media.MediaDrm.releaseAllSecureStops () "," Remove all secure stops without requiring interaction with the server. <br /><br />"
"android.media.MediaDrm.getCryptoSession (byte[] sessionId, String cipherAlgorithm, String macAlgorithm)   Obtain a CryptoSession object which can be used to encrypt, decrypt, sign and verify messages or data using the session keys established for the session using methods getKeyRequest (byte[], byte[], String, int, HashMap  )  and provideKeyResponse (byte[], byte[]) "," Obtain a CryptoSession object which can be used to encrypt, decrypt, sign and verify messages or data using the session keys established for the session using methods getKeyRequest(byte[], byte[], String, int, HashMap  )  and provideKeyResponse(byte[], byte[]) using a session key server. <br /><br />"
"android.media.MediaDrm.getProvisionRequest () "," A provision request/response exchange occurs between the app and a provisioning server to retrieve a device certificate. <br /><br />"
"android.media.MediaDrm.getPropertyString (String propertyName) "," Read a DRM engine plugin String property value, given the property name string. <br /><br />"
"android.media.MediaDrm.release () "," no description <br /><br />"
"android.media.MediaDrm.isCryptoSchemeSupported (UUID uuid, String mimeType) "," Query if the given scheme identified by its UUID is supported on this device, and whether the drm plugin is able to handle the media container format specified by mimeType. <br /><br />"
"android.media.MediaDrm.isCryptoSchemeSupported (UUID uuid) "," Query if the given scheme identified by its UUID is supported on this device. <br /><br />"
"android.media.MediaDrm.releaseSecureStops (byte[] ssRelease) "," Process the SecureStop server response message ssRelease. <br /><br />"
"android.media.MediaDrm.openSession () "," Open a new session with the MediaDrm object. <br /><br />"
"android.media.MediaDrm.removeKeys (byte[] sessionId) "," Remove the current keys from a session. <br /><br />"
"android.media.MediaDrm.provideProvisionResponse (byte[] response) "," After a provision response is received by the app, it is provided to the DRM engine plugin using this method. <br /><br />"
"android.media.MediaDrm.closeSession (byte[] sessionId)   Close a session on the MediaDrm object that was previously opened with openSession () "," Close a session on the MediaDrm object that was previously opened with openSession(). <br /><br />"
"android.media.MediaDrm.queryKeyStatus (byte[] sessionId) "," Request an informative description of the key status for the session. <br /><br />"
"android.media.MediaDrm.setPropertyByteArray (String propertyName, byte[] value) "," Set a DRM engine plugin byte array property value. <br /><br />"
"android.media.MediaDrm.setOnEventListener (MediaDrm.OnEventListener listener) "," Register a callback to be invoked when an event occurs <br /><br />"
"android.media.MediaDrm.getSecureStops () "," A means of enforcing limits on the number of concurrent streams per subscriber across devices is provided via SecureStop. <br /><br />"
"android.media.MediaDrm.getKeyRequest (byte[] scope, byte[] init, String mimeType, int keyType, HashMap< String,  String> optionalParameters) "," A key request/response exchange occurs between the app and a license server to obtain or release keys used to decrypt encrypted content. <br /><br />"
"android.media.MediaDrm.restoreKeys (byte[] sessionId, byte[] keySetId) "," Restore persisted offline keys into a new session. <br /><br />"
"android.media.MediaDrm.getPropertyByteArray (String propertyName) "," Read a DRM engine plugin byte array property value, given the property name string. <br /><br />"
"android.media.MediaDrm.getSecureStop (byte[] ssid) "," Access secure stop by secure stop ID. <br /><br />"
"android.media.MediaDrm.setPropertyString (String propertyName, String value) "," Set a DRM engine plugin String property value. <br /><br />"
"android.media.MediaDrm.provideKeyResponse (byte[] scope, byte[] response) "," A key response is received from the license server by the app, then it is provided to the DRM engine plugin using provideKeyResponse. <br /><br />"
"android.media.MediaDrm.KeyRequest.getDefaultUrl () "," Get the default URL to use when sending the key request message to a server, if known. <br /><br />"
"android.media.MediaDrm.KeyRequest.getData () "," Get the opaque message data <br /><br />"
"android.media.MediaDrm.MediaDrmStateException.getDiagnosticInfo () "," Retrieve a developer-readable diagnostic information string associated with the exception. <br /><br />"
"android.media.MediaDrm.OnEventListener.onEvent (MediaDrm md, byte[] sessionId, int event, int extra, byte[] data) "," Called when an event occurs that requires the app to be notified <br /><br />"
"android.media.MediaDrm.ProvisionRequest.getDefaultUrl () "," Get the default URL to use when sending the provision request message to a server, if known. <br /><br />"
"android.media.MediaDrm.ProvisionRequest.getData () "," Get the opaque message data <br /><br />"
"android.media.MediaExtractor.readSampleData (ByteBuffer byteBuf, int offset) "," Retrieve the current encoded sample and store it in the byte buffer starting at the given offset. <br /><br />"
"android.media.MediaExtractor.setDataSource (String path)   Sets the data source  (file-path or http URL) "," Sets the data source (file-path or http URL) to use. <br /><br />"
"android.media.MediaExtractor.unselectTrack (int index)   Subsequent calls to readSampleData (ByteBuffer, int), getSampleTrackIndex () and getSampleTime () "," Subsequent calls to readSampleData(ByteBuffer, int), getSampleTrackIndex() and getSampleTime() only retrieve information for the subset of tracks selected. <br /><br />"
"android.media.MediaExtractor.selectTrack (int index)   Subsequent calls to readSampleData (ByteBuffer, int), getSampleTrackIndex () and getSampleTime () "," Subsequent calls to readSampleData(ByteBuffer, int), getSampleTrackIndex() and getSampleTime() only retrieve information for the subset of tracks selected. <br /><br />"
"android.media.MediaExtractor.seekTo (long timeUs, int mode) "," All selected tracks seek near the requested time according to the specified mode. <br /><br />"
"android.media.MediaExtractor.getPsshInfo () "," Get the PSSH info if present. <br /><br />"
"android.media.MediaExtractor.getSampleCryptoInfo (MediaCodec.CryptoInfo info) "," If the sample flags indicate that the current sample is at least partially encrypted, this call returns relevant information about the structure of the sample data required for decryption. <br /><br />"
"android.media.MediaExtractor.setDataSource (Context context, Uri uri, Map< String,  String> headers) "," Sets the data source as a content Uri. <br /><br />"
"android.media.MediaExtractor.getSampleFlags () "," Returns the current sample's flags. <br /><br />"
"android.media.MediaExtractor.release () "," Make sure you call this when you're done to free up any resources instead of relying on the garbage collector to do this for you at some point in the future. <br /><br />"
"android.media.MediaExtractor.setDataSource (FileDescriptor fd)   Sets the data source  (FileDescriptor) "," Sets the data source (FileDescriptor) to use. <br /><br />"
"android.media.MediaExtractor.getCachedDuration () "," Returns an estimate of how much data is presently cached in memory expressed in microseconds. <br /><br />"
"android.media.MediaExtractor.getSampleTrackIndex ()   Returns the track index the current sample originates from  (or -1 if no more samples are available) "," Returns the track index the current sample originates from (or -1 if no more samples are available) <br /><br />"
"android.media.MediaExtractor.getTrackFormat (int index) "," Get the track format at the specified index. <br /><br />"
"android.media.MediaExtractor.getSampleTime () "," Returns the current sample's presentation time in microseconds. <br /><br />"
"android.media.MediaExtractor.hasCacheReachedEndOfStream ()   Returns true iff we are caching data and the cache has reached the end of the data stream  (for now, a future seek may of course restart the fetching of data) "," Returns true iff we are caching data and the cache has reached the end of the data stream (for now, a future seek may of course restart the fetching of data). <br /><br />"
"android.media.MediaExtractor.setDataSource (FileDescriptor fd, long offset, long length)   Sets the data source  (FileDescriptor) "," Sets the data source (FileDescriptor) to use. <br /><br />"
"android.media.MediaExtractor.advance () "," Advance to the next sample. <br /><br />"
"android.media.MediaExtractor.setDataSource (String path, Map< String,  String> headers)   Sets the data source  (file-path or http URL) "," Sets the data source (file-path or http URL) to use. <br /><br />"
"android.media.MediaExtractor.getTrackCount () "," Count the number of tracks found in the data source. <br /><br />"
"android.media.MediaFormat.setFeatureEnabled (String feature, boolean enabled)   Sets whether a feature is to be enabled  ( true) or disabled  ( false) "," Sets whether a feature is to be enabled ( true) or disabled ( false). <br /><br />"
"android.media.MediaFormat.getFeatureEnabled (String feature)   Returns whether a feature is to be enabled  ( true) or disabled  ( false) "," Returns whether a feature is to be enabled ( true) or disabled ( false). <br /><br />"
"android.media.MediaFormat.createVideoFormat (String mime, int width, int height) "," Creates a minimal video format. <br /><br />"
"android.media.MediaFormat.getByteBuffer (String name) "," Returns the value of a ByteBuffer key. <br /><br />"
"android.media.MediaFormat.setByteBuffer (String name, ByteBuffer bytes) "," Sets the value of a ByteBuffer key. <br /><br />"
"android.media.MediaFormat.setLong (String name, long value) "," Sets the value of a long key. <br /><br />"
"android.media.MediaFormat.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.media.MediaFormat.setFloat (String name, float value) "," Sets the value of a float key. <br /><br />"
"android.media.MediaFormat.getFloat (String name) "," Returns the value of a float key. <br /><br />"
"android.media.MediaFormat.containsKey (String name) "," Returns true iff a key of the given name exists in the format. <br /><br />"
"android.media.MediaFormat.getLong (String name) "," Returns the value of a long key. <br /><br />"
"android.media.MediaFormat.getString (String name) "," Returns the value of a string key. <br /><br />"
"android.media.MediaFormat.createSubtitleFormat (String mime, String language) "," Creates a minimal subtitle format. <br /><br />"
"android.media.MediaFormat.setString (String name, String value) "," Sets the value of a string key. <br /><br />"
"android.media.MediaFormat.setInteger (String name, int value) "," Sets the value of an integer key. <br /><br />"
"android.media.MediaFormat.createAudioFormat (String mime, int sampleRate, int channelCount) "," Creates a minimal audio format. <br /><br />"
"android.media.MediaFormat.getInteger (String name) "," Returns the value of an integer key. <br /><br />"
"android.media.MediaMetadata.Builder.putRating (String key, Rating value) "," Put a Rating into the metadata. <br /><br />"
"android.media.MediaMetadata.Builder.putString (String key, String value) "," Put a String value into the metadata. <br /><br />"
"android.media.MediaMetadata.Builder.putLong (String key, long value) "," Put a long value into the metadata. <br /><br />"
"android.media.MediaMetadata.Builder.putBitmap (String key, Bitmap value) "," Put a Bitmap into the metadata. <br /><br />"
"android.media.MediaMetadata.Builder.build () "," Creates a MediaMetadata instance with the specified fields. <br /><br />"
"android.media.MediaMetadata.Builder.putText (String key, CharSequence value) "," Put a CharSequence value into the metadata. <br /><br />"
"android.media.MediaMetadata.getDescription () "," Returns a simple description of this metadata for display purposes. <br /><br />"
"android.media.MediaMetadata.getText (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.media.MediaMetadata.getString (String key) "," Returns the text value associated with the given key as a String, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.media.MediaMetadata.getRating (String key) "," Returns a Rating for the given key or null if no rating exists for the given key. <br /><br />"
"android.media.MediaMetadata.containsKey (String key) "," Returns true if the given key is contained in the metadata <br /><br />"
"android.media.MediaMetadata.keySet () "," Returns a Set containing the Strings used as keys in this metadata. <br /><br />"
"android.media.MediaMetadata.getLong (String key) "," Returns the value associated with the given key, or 0L if no long exists for the given key. <br /><br />"
"android.media.MediaMetadata.getBitmap (String key) "," Returns a Bitmap for the given key or null if no bitmap exists for the given key. <br /><br />"
"android.media.MediaMetadata.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.media.MediaMetadata.size () "," Returns the number of fields in this metadata. <br /><br />"
"android.media.MediaMetadata.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.media.MediaMetadataEditor.putBitmap (int key, Bitmap bitmap) "," Adds image. <br /><br />"
"android.media.MediaMetadataEditor.putObject (int key, Object value) "," Adds information stored as an instance. <br /><br />"
"android.media.MediaMetadataEditor.clear () "," Clears all the pending metadata changes set since the MediaMetadataEditor instance was created or since this method was last called. <br /><br />"
"android.media.MediaMetadataEditor.apply ()   Applies all of the metadata changes that have been set since the MediaMetadataEditor instance was created or since clear () "," Applies all of the metadata changes that have been set since the MediaMetadataEditor instance was created or since clear() was called. <br /><br />"
"android.media.MediaMetadataEditor.putLong (int key, long value) "," Adds numerical information. <br /><br />"
"android.media.MediaMetadataEditor.getLong (int key, long defaultValue) "," Returns the long value for the key. <br /><br />"
"android.media.MediaMetadataEditor.removeEditableKeys () "," Causes all metadata fields to be read-only. <br /><br />"
"android.media.MediaMetadataEditor.getString (int key, String defaultValue) "," Returns the String value for the key. <br /><br />"
"android.media.MediaMetadataEditor.putString (int key, String value) "," Adds textual information. <br /><br />"
"android.media.MediaMetadataEditor.getObject (int key, Object defaultValue) "," Returns an object representation of the value for the key <br /><br />"
"android.media.MediaMetadataEditor.getEditableKeys () "," Retrieves the keys flagged as editable. <br /><br />"
"android.media.MediaMetadataEditor.getBitmap (int key, Bitmap defaultValue) "," Returns the Bitmap value for the key. <br /><br />"
"android.media.MediaMetadataEditor.addEditableKey (int key) "," Flags the given key as being editable. <br /><br />"
"android.media.MediaMetadataRetriever.getEmbeddedPicture ()   Call this method after setDataSource () "," Call this method after setDataSource(). <br /><br />"
"android.media.MediaMetadataRetriever.setDataSource (String uri, Map< String,  String> headers)   Sets the data source  (URI) "," Sets the data source (URI) to use. <br /><br />"
"android.media.MediaMetadataRetriever.getFrameAtTime (long timeUs)   Call this method after setDataSource () "," Call this method after setDataSource(). <br /><br />"
"android.media.MediaMetadataRetriever.setDataSource (FileDescriptor fd, long offset, long length)   Sets the data source  (FileDescriptor) "," Sets the data source (FileDescriptor) to use. <br /><br />"
"android.media.MediaMetadataRetriever.setDataSource (Context context, Uri uri) "," Sets the data source as a content Uri. <br /><br />"
"android.media.MediaMetadataRetriever.setDataSource (String path)   Sets the data source  (file pathname) "," Sets the data source (file pathname) to use. <br /><br />"
"android.media.MediaMetadataRetriever.getFrameAtTime (long timeUs, int option)   Call this method after setDataSource () "," Call this method after setDataSource(). <br /><br />"
"android.media.MediaMetadataRetriever.release () "," Call it when one is done with the object. <br /><br />"
"android.media.MediaMetadataRetriever.extractMetadata (int keyCode)   Call this method after setDataSource () "," Call this method after setDataSource(). <br /><br />"
"android.media.MediaMetadataRetriever.setDataSource (FileDescriptor fd)   Sets the data source  (FileDescriptor) "," Sets the data source (FileDescriptor) to use. <br /><br />"
"android.media.MediaMetadataRetriever.getFrameAtTime ()   Call this method after setDataSource () "," Call this method after setDataSource(). <br /><br />"
"android.media.MediaMuxer.addTrack (MediaFormat format) "," Adds a track with the specified format. <br /><br />"
"android.media.MediaMuxer.setOrientationHint (int degrees) "," Sets the orientation hint for output video playback. <br /><br />"
"android.media.MediaMuxer.stop () "," Stops the muxer. <br /><br />"
"android.media.MediaMuxer.start () "," Starts the muxer. <br /><br />"
"android.media.MediaMuxer.setLocation (float latitude, float longitude)   Set and store the geodata  (latitude and longitude) "," Set and store the geodata (latitude and longitude) in the output file. <br /><br />"
"android.media.MediaMuxer.writeSampleData (int trackIndex, ByteBuffer byteBuf, MediaCodec.BufferInfo bufferInfo) "," Writes an encoded sample into the muxer. <br /><br />"
"android.media.MediaMuxer.release () "," Make sure you call this when you're done to free up any resources instead of relying on the garbage collector to do this for you at some point in the future. <br /><br />"
"android.media.MediaPlayer.selectTrack (int index) "," Selects a track. <br /><br />"
"android.media.MediaPlayer.setOnVideoSizeChangedListener (MediaPlayer.OnVideoSizeChangedListener listener) "," Register a callback to be invoked when the video size is known or updated. <br /><br />"
"android.media.MediaPlayer.getSelectedTrack (int trackType)   Returns the index of the audio, video, or subtitle track currently selected for playback, The return value is an index into the array returned by getTrackInfo (), and can be used in calls to selectTrack (int) or deselectTrack (int) "," Returns the index of the audio, video, or subtitle track currently selected for playback, The return value is an index into the array returned by getTrackInfo(), and can be used in calls to selectTrack(int) or deselectTrack(int). <br /><br />"
"android.media.MediaPlayer.setDataSource (Context context, Uri uri) "," Sets the data source as a content Uri. <br /><br />"
"android.media.MediaPlayer.setDataSource (Context context, Uri uri, Map< String,  String> headers) "," Sets the data source as a content Uri. <br /><br />"
"android.media.MediaPlayer.setOnCompletionListener (MediaPlayer.OnCompletionListener listener) "," Register a callback to be invoked when the end of a media source has been reached during playback. <br /><br />"
"android.media.MediaPlayer.setOnSeekCompleteListener (MediaPlayer.OnSeekCompleteListener listener) "," Register a callback to be invoked when a seek operation has been completed. <br /><br />"
"android.media.MediaPlayer.setAudioSessionId (int sessionId) "," Sets the audio session ID. <br /><br />"
"android.media.MediaPlayer.setAudioStreamType (int streamtype) "," Sets the audio stream type for this MediaPlayer. <br /><br />"
"android.media.MediaPlayer.create (Context context, int resid, AudioAttributes audioAttributes, int audioSessionId)   Same factory method as create (Context, int) "," Same factory method as create(Context, int) but that lets you specify the audio attributes and session ID to be used by the new MediaPlayer instance. <br /><br />"
"android.media.MediaPlayer.setSurface (Surface surface) "," Sets the Surface to be used as the sink for the video portion of the media. <br /><br />"
"android.media.MediaPlayer.getVideoWidth () "," Returns the width of the video. <br /><br />"
"android.media.MediaPlayer.setAudioAttributes (AudioAttributes attributes) "," Sets the audio attributes for this MediaPlayer. <br /><br />"
"android.media.MediaPlayer.prepare () "," Prepares the player for playback, synchronously. <br /><br />"
"android.media.MediaPlayer.isLooping () "," Checks whether the MediaPlayer is looping or non-looping. <br /><br />"
"android.media.MediaPlayer.addTimedTextSource (FileDescriptor fd, long offset, long length, String mime)   Adds an external timed text file  (FileDescriptor) "," Adds an external timed text file (FileDescriptor). <br /><br />"
"android.media.MediaPlayer.setLooping (boolean looping) "," Sets the player to be looping or non-looping. <br /><br />"
"android.media.MediaPlayer.setVideoScalingMode (int mode) "," Sets video scaling mode. <br /><br />"
"android.media.MediaPlayer.setScreenOnWhilePlaying (boolean screenOn) "," Control whether we should use the attached SurfaceHolder to keep the screen on while video playback is occurring. <br /><br />"
"android.media.MediaPlayer.seekTo (int msec) "," Seeks to specified time position. <br /><br />"
"android.media.MediaPlayer.setAuxEffectSendLevel (float level) "," Sets the send level of the player to the attached auxiliary effect. <br /><br />"
"android.media.MediaPlayer.deselectTrack (int index) "," Deselect a track. <br /><br />"
"android.media.MediaPlayer.create (Context context, Uri uri, SurfaceHolder holder, AudioAttributes audioAttributes, int audioSessionId)   Same factory method as create (Context, Uri, SurfaceHolder) "," Same factory method as create(Context, Uri, SurfaceHolder) but that lets you specify the audio attributes and session ID to be used by the new MediaPlayer instance. <br /><br />"
"android.media.MediaPlayer.setDataSource (FileDescriptor fd, long offset, long length)   Sets the data source  (FileDescriptor) "," Sets the data source (FileDescriptor) to use. <br /><br />"
"android.media.MediaPlayer.addTimedTextSource (String path, String mimeType) "," Adds an external timed text source file. <br /><br />"
"android.media.MediaPlayer.setDataSource (String path)   Sets the data source  (file-path or http/rtsp URL) "," Sets the data source (file-path or http/rtsp URL) to use. <br /><br />"
"android.media.MediaPlayer.setOnPreparedListener (MediaPlayer.OnPreparedListener listener) "," Register a callback to be invoked when the media source is ready for playback. <br /><br />"
"android.media.MediaPlayer.setWakeMode (Context context, int mode) "," Set the low-level power management behavior for this MediaPlayer. <br /><br />"
"android.media.MediaPlayer.getCurrentPosition () "," Gets the current playback position. <br /><br />"
"android.media.MediaPlayer.getVideoHeight () "," Returns the height of the video. <br /><br />"
"android.media.MediaPlayer.setVolume (float leftVolume, float rightVolume) "," Sets the volume on this player. <br /><br />"
"android.media.MediaPlayer.getAudioSessionId () "," Returns the audio session ID. <br /><br />"
"android.media.MediaPlayer.setNextMediaPlayer (MediaPlayer next) "," Set the MediaPlayer to start when this MediaPlayer finishes playback (i.e. <br /><br />"
"android.media.MediaPlayer.create (Context context, int resid) "," Convenience method to create a MediaPlayer for a given resource id. <br /><br />"
"android.media.MediaPlayer.addTimedTextSource (Context context, Uri uri, String mimeType)   Adds an external timed text source file  (Uri) "," Adds an external timed text source file (Uri). <br /><br />"
"android.media.MediaPlayer.addTimedTextSource (FileDescriptor fd, String mimeType)   Adds an external timed text source file  (FileDescriptor) "," Adds an external timed text source file (FileDescriptor). <br /><br />"
"android.media.MediaPlayer.isPlaying () "," Checks whether the MediaPlayer is playing. <br /><br />"
"android.media.MediaPlayer.stop () "," Stops playback after playback has been stopped or paused. <br /><br />"
"android.media.MediaPlayer.getTrackInfo () "," Returns an array of track information. <br /><br />"
"android.media.MediaPlayer.getDuration () "," Gets the duration of the file. <br /><br />"
"android.media.MediaPlayer.prepareAsync () "," Prepares the player for playback, asynchronously. <br /><br />"
"android.media.MediaPlayer.create (Context context, Uri uri, SurfaceHolder holder) "," Convenience method to create a MediaPlayer for a given Uri. <br /><br />"
"android.media.MediaPlayer.start () "," Starts or resumes playback. <br /><br />"
"android.media.MediaPlayer.setOnErrorListener (MediaPlayer.OnErrorListener listener) "," Register a callback to be invoked when an error has happened during an asynchronous operation. <br /><br />"
"android.media.MediaPlayer.release () "," Releases resources associated with this MediaPlayer object. <br /><br />"
"android.media.MediaPlayer.setDataSource (FileDescriptor fd)   Sets the data source  (FileDescriptor) "," Sets the data source (FileDescriptor) to use. <br /><br />"
"android.media.MediaPlayer.setDisplay (SurfaceHolder sh) "," Sets the SurfaceHolder to use for displaying the video portion of the media. <br /><br />"
"android.media.MediaPlayer.setOnInfoListener (MediaPlayer.OnInfoListener listener) "," Register a callback to be invoked when an info/warning is available. <br /><br />"
"android.media.MediaPlayer.setOnBufferingUpdateListener (MediaPlayer.OnBufferingUpdateListener listener) "," Register a callback to be invoked when the status of a network stream's buffer has changed. <br /><br />"
"android.media.MediaPlayer.attachAuxEffect (int effectId) "," Attaches an auxiliary effect to the player. <br /><br />"
"android.media.MediaPlayer.reset () "," Resets the MediaPlayer to its uninitialized state. <br /><br />"
"android.media.MediaPlayer.pause () "," Pauses playback. <br /><br />"
"android.media.MediaPlayer.create (Context context, Uri uri) "," Convenience method to create a MediaPlayer for a given Uri. <br /><br />"
"android.media.MediaPlayer.setOnTimedTextListener (MediaPlayer.OnTimedTextListener listener) "," Register a callback to be invoked when a timed text is available for display. <br /><br />"
"android.media.MediaPlayer.OnBufferingUpdateListener.onBufferingUpdate (MediaPlayer mp, int percent) "," Called to update status in buffering a media stream received through progressive HTTP download. <br /><br />"
"android.media.MediaPlayer.OnCompletionListener.onCompletion (MediaPlayer mp) "," Called when the end of a media source is reached during playback. <br /><br />"
"android.media.MediaPlayer.OnErrorListener.onError (MediaPlayer mp, int what, int extra) "," Called to indicate an error. <br /><br />"
"android.media.MediaPlayer.OnInfoListener.onInfo (MediaPlayer mp, int what, int extra) "," Called to indicate an info or a warning. <br /><br />"
"android.media.MediaPlayer.OnPreparedListener.onPrepared (MediaPlayer mp) "," Called when the media file is ready for playback. <br /><br />"
"android.media.MediaPlayer.OnSeekCompleteListener.onSeekComplete (MediaPlayer mp) "," Called to indicate the completion of a seek operation. <br /><br />"
"android.media.MediaPlayer.OnTimedTextListener.onTimedText (MediaPlayer mp, TimedText text) "," Called to indicate an avaliable timed text <br /><br />"
"android.media.MediaPlayer.OnVideoSizeChangedListener.onVideoSizeChanged (MediaPlayer mp, int width, int height)   Called to indicate the video size The video size  (width and height) "," Called to indicate the video size The video size (width and height) could be 0 if there was no video, no display surface was set, or the value was not determined yet. <br /><br />"
"android.media.MediaPlayer.TrackInfo.getFormat () "," Gets the MediaFormat of the track. <br /><br />"
"android.media.MediaPlayer.TrackInfo.getTrackType () "," Gets the track type. <br /><br />"
"android.media.MediaPlayer.TrackInfo.getLanguage () "," Gets the language code of the track. <br /><br />"
"android.media.MediaPlayer.TrackInfo.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.media.MediaPlayer.TrackInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.media.MediaPlayer.TrackInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.media.MediaRecorder.setOrientationHint (int degrees) "," Sets the orientation hint for output video playback. <br /><br />"
"android.media.MediaRecorder.start ()   Begins capturing and encoding data to the file specified with setOutputFile () "," Begins capturing and encoding data to the file specified with setOutputFile(). <br /><br />"
"android.media.MediaRecorder.setAudioChannels (int numChannels) "," Sets the number of audio channels for recording. <br /><br />"
"android.media.MediaRecorder.setOnInfoListener (MediaRecorder.OnInfoListener listener) "," Register a callback to be invoked when an informational event occurs while recording. <br /><br />"
"android.media.MediaRecorder.getAudioSourceMax () "," Gets the maximum value for audio sources. <br /><br />"
"android.media.MediaRecorder.setPreviewDisplay (Surface sv)   Sets a Surface to show a preview of recorded media  (video) "," Sets a Surface to show a preview of recorded media (video). <br /><br />"
"android.media.MediaRecorder.setVideoEncodingBitRate (int bitRate) "," Sets the video encoding bit rate for recording. <br /><br />"
"android.media.MediaRecorder.stop () "," Stops recording. <br /><br />"
"android.media.MediaRecorder.setProfile (CamcorderProfile profile) "," Uses the settings from a CamcorderProfile object for recording. <br /><br />"
"android.media.MediaRecorder.setCamera (Camera c)    This method was deprecated in API level 21. Use getSurface () "," This method was deprecated in API level 21. Use getSurface() and the android.hardware.camera2 API instead. <br /><br />"
"android.media.MediaRecorder.prepare () "," Prepares the recorder to begin capturing and encoding data. <br /><br />"
"android.media.MediaRecorder.setMaxDuration (int max_duration_ms)   Sets the maximum duration  (in ms) "," Sets the maximum duration (in ms) of the recording session. <br /><br />"
"android.media.MediaRecorder.setOnErrorListener (MediaRecorder.OnErrorListener l) "," Register a callback to be invoked when an error occurs while recording. <br /><br />"
"android.media.MediaRecorder.setOutputFormat (int output_format) "," Sets the format of the output file produced during recording. <br /><br />"
"android.media.MediaRecorder.setMaxFileSize (long max_filesize_bytes)   Sets the maximum filesize  (in bytes) "," Sets the maximum filesize (in bytes) of the recording session. <br /><br />"
"android.media.MediaRecorder.setLocation (float latitude, float longitude)   Set and store the geodata  (latitude and longitude) "," Set and store the geodata (latitude and longitude) in the output file. <br /><br />"
"android.media.MediaRecorder.release () "," Releases resources associated with this MediaRecorder object. <br /><br />"
"android.media.MediaRecorder.setVideoSource (int video_source) "," Sets the video source to be used for recording. <br /><br />"
"android.media.MediaRecorder.setAudioEncoder (int audio_encoder) "," Sets the audio encoder to be used for recording. <br /><br />"
"android.media.MediaRecorder.setVideoEncoder (int video_encoder) "," Sets the video encoder to be used for recording. <br /><br />"
"android.media.MediaRecorder.getSurface () "," Gets the surface to record from when using SURFACE video source. <br /><br />"
"android.media.MediaRecorder.setOutputFile (String path) "," Sets the path of the output file to be produced. <br /><br />"
"android.media.MediaRecorder.setVideoFrameRate (int rate) "," Sets the frame rate of the video to be captured. <br /><br />"
"android.media.MediaRecorder.setOutputFile (FileDescriptor fd) "," Pass in the file descriptor of the file to be written. <br /><br />"
"android.media.MediaRecorder.setVideoSize (int width, int height) "," Sets the width and height of the video to be captured. <br /><br />"
"android.media.MediaRecorder.setAudioSource (int audio_source) "," Sets the audio source to be used for recording. <br /><br />"
"android.media.MediaRecorder.setAudioSamplingRate (int samplingRate) "," Sets the audio sampling rate for recording. <br /><br />"
"android.media.MediaRecorder.reset () "," Restarts the MediaRecorder to its idle state. <br /><br />"
"android.media.MediaRecorder.setCaptureRate (double fps) "," Set video frame capture rate. <br /><br />"
"android.media.MediaRecorder.setAudioEncodingBitRate (int bitRate) "," Sets the audio encoding bit rate for recording. <br /><br />"
"android.media.MediaRecorder.getMaxAmplitude () "," Returns the maximum absolute amplitude that was sampled since the last call to this method. <br /><br />"
"android.media.MediaRecorder.OnErrorListener.onError (MediaRecorder mr, int what, int extra) "," Called when an error occurs while recording. <br /><br />"
"android.media.MediaRecorder.OnInfoListener.onInfo (MediaRecorder mr, int what, int extra) "," Called when an error occurs while recording. <br /><br />"
"android.media.MediaRouter.Callback.onRouteAdded (MediaRouter router, MediaRouter.RouteInfo info) "," Called when a route for the specified type was added. <br /><br />"
"android.media.MediaRouter.Callback.onRouteVolumeChanged (MediaRouter router, MediaRouter.RouteInfo info) "," Called when a route's volume changes. <br /><br />"
"android.media.MediaRouter.Callback.onRouteRemoved (MediaRouter router, MediaRouter.RouteInfo info) "," Called when a route for the specified type was removed. <br /><br />"
"android.media.MediaRouter.Callback.onRouteGrouped (MediaRouter router, MediaRouter.RouteInfo info, MediaRouter.RouteGroup group, int index) "," Called when a route is added to a group. <br /><br />"
"android.media.MediaRouter.Callback.onRouteUnselected (MediaRouter router, int type, MediaRouter.RouteInfo info) "," Called when the supplied route becomes unselected as the active route for the given route type. <br /><br />"
"android.media.MediaRouter.Callback.onRouteUngrouped (MediaRouter router, MediaRouter.RouteInfo info, MediaRouter.RouteGroup group) "," Called when a route is removed from a group. <br /><br />"
"android.media.MediaRouter.Callback.onRouteChanged (MediaRouter router, MediaRouter.RouteInfo info) "," Called when an aspect of the indicated route has changed. <br /><br />"
"android.media.MediaRouter.Callback.onRoutePresentationDisplayChanged (MediaRouter router, MediaRouter.RouteInfo info) "," Called when a route's presentation display changes. <br /><br />"
"android.media.MediaRouter.Callback.onRouteSelected (MediaRouter router, int type, MediaRouter.RouteInfo info) "," Called when the supplied route becomes selected as the active route for the given route type. <br /><br />"
"android.media.MediaRouter.getDefaultRoute () "," Gets the default route for playing media content on the system. <br /><br />"
"android.media.MediaRouter.addCallback (int types, MediaRouter.Callback cb) "," Add a callback to listen to events about specific kinds of media routes. <br /><br />"
"android.media.MediaRouter.getRouteCount () "," Return the number of routes currently known to this MediaRouter. <br /><br />"
"android.media.MediaRouter.clearUserRoutes () "," Remove all app-specified routes from the MediaRouter. <br /><br />"
"android.media.MediaRouter.selectRoute (int types, MediaRouter.RouteInfo route) "," Select the specified route to use for output of the given media types. <br /><br />"
"android.media.MediaRouter.getCategoryAt (int index) "," Return the category at the given index. <br /><br />"
"android.media.MediaRouter.getSelectedRoute (int type) "," Return the currently selected route for any of the given types <br /><br />"
"android.media.MediaRouter.createRouteCategory (int nameResId, boolean isGroupable) "," Create a new route category. <br /><br />"
"android.media.MediaRouter.getRouteAt (int index) "," Return the route at the specified index. <br /><br />"
"android.media.MediaRouter.addCallback (int types, MediaRouter.Callback cb, int flags) "," Add a callback to listen to events about specific kinds of media routes. <br /><br />"
"android.media.MediaRouter.createRouteCategory (CharSequence name, boolean isGroupable) "," Create a new route category. <br /><br />"
"android.media.MediaRouter.removeCallback (MediaRouter.Callback cb) "," Remove the specified callback. <br /><br />"
"android.media.MediaRouter.removeUserRoute (MediaRouter.UserRouteInfo info) "," Remove an app-specified route for media from the MediaRouter. <br /><br />"
"android.media.MediaRouter.addUserRoute (MediaRouter.UserRouteInfo info) "," Add an app-specified route for media to the MediaRouter. <br /><br />"
"android.media.MediaRouter.createUserRoute (MediaRouter.RouteCategory category) "," Create a new user route that may be modified and registered for use by the application. <br /><br />"
"android.media.MediaRouter.getCategoryCount () "," Return the number of categories currently represented by routes known to this MediaRouter. <br /><br />"
"android.media.MediaRouter.RouteCategory.getName () "," no description <br /><br />"
"android.media.MediaRouter.RouteCategory.getSupportedTypes () "," no description <br /><br />"
"android.media.MediaRouter.RouteCategory.isGroupable () "," Return whether or not this category supports grouping. <br /><br />"
"android.media.MediaRouter.RouteCategory.getName (Context context) "," Return the properly localized/configuration dependent name of this RouteCategory. <br /><br />"
"android.media.MediaRouter.RouteCategory.getRoutes (List< MediaRouter.RouteInfo> out) "," Return the current list of routes in this category that have been added to the MediaRouter. <br /><br />"
"android.media.MediaRouter.RouteCategory.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.media.MediaRouter.RouteGroup.removeRoute (MediaRouter.RouteInfo route) "," Remove a route from this group. <br /><br />"
"android.media.MediaRouter.RouteGroup.setIconResource (int resId) "," Set an icon that will be used to represent this group. <br /><br />"
"android.media.MediaRouter.RouteGroup.getRouteAt (int index) "," Return the route in this group at the specified index <br /><br />"
"android.media.MediaRouter.RouteGroup.removeRoute (int index) "," Remove the route at the specified index from this group. <br /><br />"
"android.media.MediaRouter.RouteGroup.addRoute (MediaRouter.RouteInfo route) "," Add a route to this group. <br /><br />"
"android.media.MediaRouter.RouteGroup.setIconDrawable (Drawable icon) "," Set an icon that will be used to represent this group. <br /><br />"
"android.media.MediaRouter.RouteGroup.addRoute (MediaRouter.RouteInfo route, int insertAt) "," Add a route to this group before the specified index. <br /><br />"
"android.media.MediaRouter.RouteGroup.requestUpdateVolume (int direction) "," Request an incremental volume update for this route. <br /><br />"
"android.media.MediaRouter.RouteGroup.requestSetVolume (int volume) "," Request a volume change for this route. <br /><br />"
"android.media.MediaRouter.RouteGroup.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.media.MediaRouter.RouteGroup.getRouteCount () "," no description <br /><br />"
"android.media.MediaRouter.RouteInfo.getTag () "," no description <br /><br />"
"android.media.MediaRouter.RouteInfo.getPlaybackType () "," no description <br /><br />"
"android.media.MediaRouter.RouteInfo.getPresentationDisplay () "," Gets the Display that should be used by the application to show a Presentation on an external display when this route is selected. <br /><br />"
"android.media.MediaRouter.RouteInfo.getSupportedTypes () "," no description <br /><br />"
"android.media.MediaRouter.RouteInfo.getCategory () "," no description <br /><br />"
"android.media.MediaRouter.RouteInfo.setTag (Object tag) "," Set an application-specific tag object for this route. <br /><br />"
"android.media.MediaRouter.RouteInfo.getVolume () "," Return the current volume for this route. <br /><br />"
"android.media.MediaRouter.RouteInfo.getName (Context context) "," Return the properly localized/resource user-visible name of this route. <br /><br />"
"android.media.MediaRouter.RouteInfo.getVolumeMax () "," no description <br /><br />"
"android.media.MediaRouter.RouteInfo.getGroup () "," no description <br /><br />"
"android.media.MediaRouter.RouteInfo.requestSetVolume (int volume) "," Request a volume change for this route. <br /><br />"
"android.media.MediaRouter.RouteInfo.getVolumeHandling () "," no description <br /><br />"
"android.media.MediaRouter.RouteInfo.getIconDrawable () "," Get the icon representing this route. <br /><br />"
"android.media.MediaRouter.RouteInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.media.MediaRouter.RouteInfo.getDescription () "," Gets the user-visible description of the route. <br /><br />"
"android.media.MediaRouter.RouteInfo.getName () "," Gets the user-visible name of the route. <br /><br />"
"android.media.MediaRouter.RouteInfo.getPlaybackStream () "," no description <br /><br />"
"android.media.MediaRouter.RouteInfo.isEnabled () "," Returns true if this route is enabled and may be selected. <br /><br />"
"android.media.MediaRouter.RouteInfo.getStatus () "," no description <br /><br />"
"android.media.MediaRouter.RouteInfo.requestUpdateVolume (int direction) "," Request an incremental volume update for this route. <br /><br />"
"android.media.MediaRouter.RouteInfo.isConnecting () "," Returns true if the route is in the process of connecting and is not yet ready for use. <br /><br />"
"android.media.MediaRouter.SimpleCallback.onRouteAdded (MediaRouter router, MediaRouter.RouteInfo info) "," Called when a route for the specified type was added. <br /><br />"
"android.media.MediaRouter.SimpleCallback.onRouteVolumeChanged (MediaRouter router, MediaRouter.RouteInfo info) "," Called when a route's volume changes. <br /><br />"
"android.media.MediaRouter.SimpleCallback.onRouteRemoved (MediaRouter router, MediaRouter.RouteInfo info) "," Called when a route for the specified type was removed. <br /><br />"
"android.media.MediaRouter.SimpleCallback.onRouteGrouped (MediaRouter router, MediaRouter.RouteInfo info, MediaRouter.RouteGroup group, int index) "," Called when a route is added to a group. <br /><br />"
"android.media.MediaRouter.SimpleCallback.onRouteUnselected (MediaRouter router, int type, MediaRouter.RouteInfo info) "," Called when the supplied route becomes unselected as the active route for the given route type. <br /><br />"
"android.media.MediaRouter.SimpleCallback.onRouteUngrouped (MediaRouter router, MediaRouter.RouteInfo info, MediaRouter.RouteGroup group) "," Called when a route is removed from a group. <br /><br />"
"android.media.MediaRouter.SimpleCallback.onRouteChanged (MediaRouter router, MediaRouter.RouteInfo info) "," Called when an aspect of the indicated route has changed. <br /><br />"
"android.media.MediaRouter.SimpleCallback.onRouteSelected (MediaRouter router, int type, MediaRouter.RouteInfo info) "," Called when the supplied route becomes selected as the active route for the given route type. <br /><br />"
"android.media.MediaRouter.UserRouteInfo.setVolumeHandling (int volumeHandling)   Defines whether volume for the playback associated with this route is fixed  (PLAYBACK_VOLUME_FIXED) or can modified  ( PLAYBACK_VOLUME_VARIABLE) "," Defines whether volume for the playback associated with this route is fixed ( PLAYBACK_VOLUME_FIXED) or can modified ( PLAYBACK_VOLUME_VARIABLE). <br /><br />"
"android.media.MediaRouter.UserRouteInfo.getRemoteControlClient () "," Retrieve the RemoteControlClient associated with this route, if one has been set. <br /><br />"
"android.media.MediaRouter.UserRouteInfo.setVolumeCallback (MediaRouter.VolumeCallback vcb) "," Set a callback to be notified of volume update requests <br /><br />"
"android.media.MediaRouter.UserRouteInfo.requestSetVolume (int volume) "," Request a volume change for this route. <br /><br />"
"android.media.MediaRouter.UserRouteInfo.setPlaybackStream (int stream) "," Defines over what stream type the media is presented. <br /><br />"
"android.media.MediaRouter.UserRouteInfo.setStatus (CharSequence status) "," Set the current user-visible status for this route. <br /><br />"
"android.media.MediaRouter.UserRouteInfo.setName (CharSequence name) "," Set the user-visible name of this route. <br /><br />"
"android.media.MediaRouter.UserRouteInfo.setPlaybackType (int type)   Defines whether playback associated with this route is 'local'  (PLAYBACK_TYPE_LOCAL) or 'remote'  ( PLAYBACK_TYPE_REMOTE) "," Defines whether playback associated with this route is 'local' ( PLAYBACK_TYPE_LOCAL) or 'remote' ( PLAYBACK_TYPE_REMOTE). <br /><br />"
"android.media.MediaRouter.UserRouteInfo.setIconResource (int resId) "," Set an icon that will be used to represent this route. <br /><br />"
"android.media.MediaRouter.UserRouteInfo.setDescription (CharSequence description) "," Set the user-visible description of this route. <br /><br />"
"android.media.MediaRouter.UserRouteInfo.setRemoteControlClient (RemoteControlClient rcc) "," Set the RemoteControlClient responsible for reporting playback info for this user route. <br /><br />"
"android.media.MediaRouter.UserRouteInfo.setIconDrawable (Drawable icon) "," Set an icon that will be used to represent this route. <br /><br />"
"android.media.MediaRouter.UserRouteInfo.setVolume (int volume)   Defines at what volume the playback associated with this route is performed  (for user feedback purposes) "," Defines at what volume the playback associated with this route is performed (for user feedback purposes). <br /><br />"
"android.media.MediaRouter.UserRouteInfo.setName (int resId) "," Set the user-visible name of this route. <br /><br />"
"android.media.MediaRouter.UserRouteInfo.requestUpdateVolume (int direction) "," Request an incremental volume update for this route. <br /><br />"
"android.media.MediaRouter.UserRouteInfo.setVolumeMax (int volumeMax)   Defines the maximum volume at which the playback associated with this route is performed  (for user feedback purposes) "," Defines the maximum volume at which the playback associated with this route is performed (for user feedback purposes). <br /><br />"
"android.media.MediaRouter.VolumeCallback.onVolumeSetRequest (MediaRouter.RouteInfo info, int volume) "," Called when the volume for the route should be set to the given value <br /><br />"
"android.media.MediaRouter.VolumeCallback.onVolumeUpdateRequest (MediaRouter.RouteInfo info, int direction) "," Called when the volume for the route should be increased or decreased. <br /><br />"
"android.media.MediaScannerConnection.onServiceConnected (ComponentName className, IBinder service) "," Part of the ServiceConnection interface. <br /><br />"
"android.media.MediaScannerConnection.connect () "," Initiates a connection to the media scanner service. <br /><br />"
"android.media.MediaScannerConnection.isConnected () "," Returns whether we are connected to the media scanner service <br /><br />"
"android.media.MediaScannerConnection.scanFile (String path, String mimeType) "," Requests the media scanner to scan a file. <br /><br />"
"android.media.MediaScannerConnection.onServiceDisconnected (ComponentName className) "," Part of the ServiceConnection interface. <br /><br />"
"android.media.MediaScannerConnection.scanFile (Context context, String[] paths, String[] mimeTypes, MediaScannerConnection.OnScanCompletedListener callback)   Convenience for constructing a MediaScannerConnection, calling connect () on it, and calling scanFile (Context, String[], String[], MediaScannerConnection.OnScanCompletedListener) "," Convenience for constructing a MediaScannerConnection, calling connect() on it, and calling scanFile(Context, String[], String[], MediaScannerConnection.OnScanCompletedListener) with the given path and mimeType when the connection is established. <br /><br />"
"android.media.MediaScannerConnection.disconnect () "," Releases the connection to the media scanner service. <br /><br />"
"android.media.MediaScannerConnection.MediaScannerConnectionClient.onScanCompleted (String path, Uri uri) "," Called to notify the client when the media scanner has finished scanning a file. <br /><br />"
"android.media.MediaScannerConnection.MediaScannerConnectionClient.onMediaScannerConnected () "," Called to notify the client when a connection to the MediaScanner service has been established. <br /><br />"
"android.media.MediaScannerConnection.OnScanCompletedListener.onScanCompleted (String path, Uri uri) "," Called to notify the client when the media scanner has finished scanning a file. <br /><br />"
"android.media.MediaSyncEvent.setAudioSessionId (int audioSessionId) "," Sets the event source audio session ID. <br /><br />"
"android.media.MediaSyncEvent.getType () "," Gets the synchronization event type. <br /><br />"
"android.media.MediaSyncEvent.createEvent (int eventType) "," Creates a synchronization event of the sepcified type. <br /><br />"
"android.media.MediaSyncEvent.getAudioSessionId () "," Gets the synchronization event audio session ID. <br /><br />"
"android.media.projection.MediaProjection.Callback.onStop () "," Called when the MediaProjection session is no longer valid. <br /><br />"
"android.media.projection.MediaProjectionManager.createScreenCaptureIntent ()   Returns an Intent that must passed to startActivityForResult () "," Returns an Intent that must passed to startActivityForResult() in order to start screen capture. <br /><br />"
"android.media.projection.MediaProjectionManager.getMediaProjection (int resultCode, Intent resultData) "," Retrieve the MediaProjection obtained from a succesful screen capture request. <br /><br />"
"android.media.Rating.getPercentRating () "," Return the percentage-based rating value. <br /><br />"
"android.media.Rating.hasHeart () "," Return whether the rating is 'heart selected'. <br /><br />"
"android.media.Rating.getStarRating () "," Return the star-based rating value. <br /><br />"
"android.media.Rating.newHeartRating (boolean hasHeart) "," Return a Rating instance with a heart-based rating. <br /><br />"
"android.media.Rating.newStarRating (int starRatingStyle, float starRating) "," Return a Rating instance with a star-based rating. <br /><br />"
"android.media.Rating.isThumbUp () "," Return whether the rating is 'thumb up'. <br /><br />"
"android.media.Rating.newPercentageRating (float percent) "," Return a Rating instance with a percentage-based rating. <br /><br />"
"android.media.Rating.isRated () "," Return whether there is a rating value available. <br /><br />"
"android.media.Rating.newUnratedRating (int ratingStyle) "," Return a Rating instance with no rating. <br /><br />"
"android.media.Rating.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.media.Rating.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.media.Rating.newThumbRating (boolean thumbIsUp) "," Return a Rating instance with a thumb-based rating. <br /><br />"
"android.media.Rating.getRatingStyle () "," Return the rating style. <br /><br />"
"android.media.Rating.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.media.RemoteControlClient.editMetadata (boolean startEmpty) "," Creates a RemoteControlClient.MetadataEditor. <br /><br />"
"android.media.RemoteControlClient.setPlaybackState (int state) "," Sets the current playback state. <br /><br />"
"android.media.RemoteControlClient.getMediaSession () "," Get a MediaSession associated with this RCC. <br /><br />"
"android.media.RemoteControlClient.setOnGetPlaybackPositionListener (RemoteControlClient.OnGetPlaybackPositionListener l) "," Sets the listener to be called whenever the media current playback position is needed. <br /><br />"
"android.media.RemoteControlClient.setPlaybackState (int state, long timeInMs, float playbackSpeed) "," Sets the current playback state and the matching media position for the current playback speed. <br /><br />"
"android.media.RemoteControlClient.setPlaybackPositionUpdateListener (RemoteControlClient.OnPlaybackPositionUpdateListener l) "," Sets the listener to be called whenever the media playback position is requested to be updated. <br /><br />"
"android.media.RemoteControlClient.setTransportControlFlags (int transportControlFlags) "," Sets the flags for the media transport control buttons that this client supports. <br /><br />"
"android.media.RemoteControlClient.setMetadataUpdateListener (RemoteControlClient.OnMetadataUpdateListener l) "," Sets the listener to be called whenever the metadata is updated. <br /><br />"
"android.media.RemoteControlClient.MetadataEditor.putBitmap (int key, Bitmap bitmap) "," Sets the album / artwork picture to be displayed on the remote control. <br /><br />"
"android.media.RemoteControlClient.MetadataEditor.clear ()   Clears all the metadata that has been set since the MetadataEditor instance was created  (with editMetadata (boolean)) "," Clears all the metadata that has been set since the MetadataEditor instance was created (with editMetadata(boolean)). <br /><br />"
"android.media.RemoteControlClient.MetadataEditor.putObject (int key, Object object) "," Adds information stored as an instance. <br /><br />"
"android.media.RemoteControlClient.MetadataEditor.putLong (int key, long value) "," Adds numerical information to be displayed. <br /><br />"
"android.media.RemoteControlClient.MetadataEditor.putString (int key, String value) "," Adds textual information to be displayed. <br /><br />"
"android.media.RemoteControlClient.MetadataEditor.apply ()   Associates all the metadata that has been set since the MetadataEditor instance was created with editMetadata (boolean), or since clear () "," Associates all the metadata that has been set since the MetadataEditor instance was created with editMetadata(boolean), or since clear() was called, with the RemoteControlClient. <br /><br />"
"android.media.RemoteControlClient.OnGetPlaybackPositionListener.onGetPlaybackPosition () "," Called on the implementer of the interface to query the current playback position. <br /><br />"
"android.media.RemoteControlClient.OnMetadataUpdateListener.onMetadataUpdate (int key, Object newValue) "," Called on the implementer to notify that the metadata field for the given key has been updated to the new value. <br /><br />"
"android.media.RemoteControlClient.OnPlaybackPositionUpdateListener.onPlaybackPositionUpdate (long newPositionMs) "," Called on the implementer to notify it that the playback head should be set at the given position. <br /><br />"
"android.media.RemoteController.getEstimatedMediaPosition () "," Return the estimated playback position of the current media track or a negative value if not available. <br /><br />"
"android.media.RemoteController.setSynchronizationMode (int sync) "," Set the playback position synchronization mode. <br /><br />"
"android.media.RemoteController.sendMediaKeyEvent (KeyEvent keyEvent) "," Send a simulated key event for a media button to be received by the current client. <br /><br />"
"android.media.RemoteController.clearArtworkConfiguration () "," Prevents this RemoteController from receiving artwork images. <br /><br />"
"android.media.RemoteController.editMetadata () "," Creates a RemoteController.MetadataEditor for updating metadata values of the editable keys of the current RemoteControlClient. <br /><br />"
"android.media.RemoteController.setArtworkConfiguration (int width, int height) "," Set the maximum artwork image dimensions to be received in the metadata. <br /><br />"
"android.media.RemoteController.seekTo (long timeMs) "," Sets the new playback position. <br /><br />"
"android.media.RemoteController.MetadataEditor.apply ()   Applies all of the metadata changes that have been set since the MediaMetadataEditor instance was created with editMetadata () or since clear () "," Applies all of the metadata changes that have been set since the MediaMetadataEditor instance was created with editMetadata() or since clear() was called. <br /><br />"
"android.media.RemoteController.OnClientUpdateListener.onClientPlaybackStateUpdate (int state, long stateChangeTimeMs, long currentPosMs, float speed) "," Called whenever the playback state has changed, and playback position and speed are known. <br /><br />"
"android.media.RemoteController.OnClientUpdateListener.onClientChange (boolean clearing) "," Called whenever all information, previously received through the other methods of the listener, is no longer valid and is about to be refreshed. <br /><br />"
"android.media.RemoteController.OnClientUpdateListener.onClientTransportControlUpdate (int transportControlFlags) "," Called whenever the transport control flags have changed. <br /><br />"
"android.media.RemoteController.OnClientUpdateListener.onClientPlaybackStateUpdate (int state) "," Called whenever the playback state has changed. <br /><br />"
"android.media.RemoteController.OnClientUpdateListener.onClientMetadataUpdate (RemoteController.MetadataEditor metadataEditor) "," Called whenever new metadata is available. <br /><br />"
"android.media.Ringtone.isPlaying () "," Whether this ringtone is currently playing. <br /><br />"
"android.media.Ringtone.getTitle (Context context) "," Returns a human-presentable title for ringtone. <br /><br />"
"android.media.Ringtone.getAudioAttributes () "," Returns the AudioAttributes used by this object. <br /><br />"
"android.media.Ringtone.stop () "," Stops a playing ringtone. <br /><br />"
"android.media.Ringtone.setStreamType (int streamType)    This method was deprecated in API level 21. use setAudioAttributes (AudioAttributes) "," This method was deprecated in API level 21. use setAudioAttributes(AudioAttributes) <br /><br />"
"android.media.Ringtone.setAudioAttributes (AudioAttributes attributes) "," Sets the AudioAttributes for this ringtone. <br /><br />"
"android.media.Ringtone.getStreamType ()    This method was deprecated in API level 21. use of stream types is deprecated, see setAudioAttributes (AudioAttributes) "," This method was deprecated in API level 21. use of stream types is deprecated, see setAudioAttributes(AudioAttributes) <br /><br />"
"android.media.Ringtone.play () "," Plays the ringtone. <br /><br />"
"android.media.RingtoneManager.isDefault (Uri ringtoneUri) "," Returns whether the given Uri is one of the default ringtones. <br /><br />"
"android.media.RingtoneManager.setIncludeDrm (boolean includeDrm) "," This method was deprecated in API level 19. DRM ringtones are no longer supported <br /><br />"
"android.media.RingtoneManager.setActualDefaultRingtoneUri (Context context, int type, Uri ringtoneUri) "," Sets the Uri of the default sound for a given sound type. <br /><br />"
"android.media.RingtoneManager.setStopPreviousRingtone (boolean stopPreviousRingtone) "," Whether retrieving another Ringtone will stop playing the previously retrieved Ringtone. <br /><br />"
"android.media.RingtoneManager.getIncludeDrm () "," This method was deprecated in API level 19. DRM ringtones are no longer supported <br /><br />"
"android.media.RingtoneManager.getCursor () "," Returns a Cursor of all the ringtones available. <br /><br />"
"android.media.RingtoneManager.stopPreviousRingtone () "," Stops playing the last Ringtone retrieved from this. <br /><br />"
"android.media.RingtoneManager.getDefaultType (Uri defaultRingtoneUri) "," Returns the type of a default Uri. <br /><br />"
"android.media.RingtoneManager.getRingtoneUri (int position) "," Gets a Uri for the ringtone at the given position in the Cursor. <br /><br />"
"android.media.RingtoneManager.getActualDefaultRingtoneUri (Context context, int type) "," Gets the current default sound's Uri. <br /><br />"
"android.media.RingtoneManager.getStopPreviousRingtone () "," no description <br /><br />"
"android.media.RingtoneManager.getRingtonePosition (Uri ringtoneUri) "," Gets the position of a Uri within this RingtoneManager. <br /><br />"
"android.media.RingtoneManager.getValidRingtoneUri (Context context) "," Returns a valid ringtone URI. <br /><br />"
"android.media.RingtoneManager.setType (int type)   Sets which type (s) "," Sets which type(s) of ringtones will be listed by this. <br /><br />"
"android.media.RingtoneManager.inferStreamType () "," Infers the playback stream type based on what type of ringtones this manager is returning. <br /><br />"
"android.media.RingtoneManager.getRingtone (int position) "," Gets a Ringtone for the ringtone at the given position in the Cursor. <br /><br />"
"android.media.RingtoneManager.getRingtone (Context context, Uri ringtoneUri) "," Returns a Ringtone for a given sound URI. <br /><br />"
"android.media.RingtoneManager.getDefaultUri (int type) "," Returns the Uri for the default ringtone of a particular type. <br /><br />"
"android.media.session.MediaController.Callback.onSessionDestroyed () "," Override to handle the session being destroyed. <br /><br />"
"android.media.session.MediaController.Callback.onQueueTitleChanged (CharSequence title) "," Override to handle changes to the queue title. <br /><br />"
"android.media.session.MediaController.Callback.onAudioInfoChanged (MediaController.PlaybackInfo info) "," Override to handle changes to the audio info. <br /><br />"
"android.media.session.MediaController.Callback.onExtrasChanged (Bundle extras) "," Override to handle changes to the MediaSession extras. <br /><br />"
"android.media.session.MediaController.Callback.onMetadataChanged (MediaMetadata metadata) "," Override to handle changes to the current metadata. <br /><br />"
"android.media.session.MediaController.Callback.onQueueChanged (List< MediaSession.QueueItem> queue) "," Override to handle changes to items in the queue. <br /><br />"
"android.media.session.MediaController.Callback.onSessionEvent (String event, Bundle extras) "," Override to handle custom events sent by the session owner without a specified interface. <br /><br />"
"android.media.session.MediaController.Callback.onPlaybackStateChanged (PlaybackState state) "," Override to handle changes in playback state. <br /><br />"
"android.media.session.MediaController.getSessionToken () "," Get the token for the session this is connected to. <br /><br />"
"android.media.session.MediaController.registerCallback (MediaController.Callback callback) "," Registers a callback to receive updates from the Session. <br /><br />"
"android.media.session.MediaController.getPackageName () "," Get the session owner's package name. <br /><br />"
"android.media.session.MediaController.getSessionActivity () "," Get an intent for launching UI associated with this session if one exists. <br /><br />"
"android.media.session.MediaController.getFlags () "," Get the flags for this session. <br /><br />"
"android.media.session.MediaController.getTransportControls () "," Get a MediaController.TransportControls instance to send transport actions to the associated session. <br /><br />"
"android.media.session.MediaController.sendCommand (String command, Bundle args, ResultReceiver cb) "," Sends a generic command to the session. <br /><br />"
"android.media.session.MediaController.getExtras () "," Get the extras for this session. <br /><br />"
"android.media.session.MediaController.unregisterCallback (MediaController.Callback callback) "," Unregisters the specified callback. <br /><br />"
"android.media.session.MediaController.dispatchMediaButtonEvent (KeyEvent keyEvent) "," Send the specified media button event to the session. <br /><br />"
"android.media.session.MediaController.getMetadata () "," Get the current metadata for this session. <br /><br />"
"android.media.session.MediaController.registerCallback (MediaController.Callback callback, Handler handler) "," Registers a callback to receive updates from the session. <br /><br />"
"android.media.session.MediaController.getQueue () "," Get the current play queue for this session if one is set. <br /><br />"
"android.media.session.MediaController.getRatingType () "," Get the rating type supported by the session. <br /><br />"
"android.media.session.MediaController.setVolumeTo (int value, int flags) "," Set the volume of the output this session is playing on. <br /><br />"
"android.media.session.MediaController.getPlaybackState () "," Get the current playback state for this session. <br /><br />"
"android.media.session.MediaController.getQueueTitle () "," Get the queue title for this session. <br /><br />"
"android.media.session.MediaController.adjustVolume (int direction, int flags) "," Adjust the volume of the output this session is playing on. <br /><br />"
"android.media.session.MediaController.getPlaybackInfo () "," Get the current playback info for this session. <br /><br />"
"android.media.session.MediaController.PlaybackInfo.getAudioAttributes () "," Get the audio attributes for this session. <br /><br />"
"android.media.session.MediaController.PlaybackInfo.getVolumeControl () "," Get the type of volume control that can be used. <br /><br />"
"android.media.session.MediaController.PlaybackInfo.getPlaybackType () "," Get the type of playback which affects volume handling. <br /><br />"
"android.media.session.MediaController.PlaybackInfo.getMaxVolume () "," Get the maximum volume that may be set for this session. <br /><br />"
"android.media.session.MediaController.PlaybackInfo.getCurrentVolume () "," Get the current volume for this session. <br /><br />"
"android.media.session.MediaController.TransportControls.skipToPrevious () "," Skip to the previous item. <br /><br />"
"android.media.session.MediaController.TransportControls.sendCustomAction (PlaybackState.CustomAction customAction, Bundle args) "," Send a custom action back for the MediaSession to perform. <br /><br />"
"android.media.session.MediaController.TransportControls.rewind () "," Start rewinding. <br /><br />"
"android.media.session.MediaController.TransportControls.stop () "," Request that the player stop its playback; it may clear its state in whatever way is appropriate. <br /><br />"
"android.media.session.MediaController.TransportControls.sendCustomAction (String action, Bundle args) "," Send the id and args from a custom action back for the MediaSession to perform. <br /><br />"
"android.media.session.MediaController.TransportControls.playFromMediaId (String mediaId, Bundle extras) "," Request that the player start playback for a specific Uri. <br /><br />"
"android.media.session.MediaController.TransportControls.seekTo (long pos) "," Move to a new location in the media stream. <br /><br />"
"android.media.session.MediaController.TransportControls.fastForward () "," Start fast forwarding. <br /><br />"
"android.media.session.MediaController.TransportControls.skipToNext () "," Skip to the next item. <br /><br />"
"android.media.session.MediaController.TransportControls.playFromSearch (String query, Bundle extras) "," Request that the player start playback for a specific search query. <br /><br />"
"android.media.session.MediaController.TransportControls.setRating (Rating rating) "," Rate the current content. <br /><br />"
"android.media.session.MediaController.TransportControls.pause () "," Request that the player pause its playback and stay at its current position. <br /><br />"
"android.media.session.MediaController.TransportControls.skipToQueueItem (long id) "," Play an item with a specific id in the play queue. <br /><br />"
"android.media.session.MediaController.TransportControls.play () "," Request that the player start its playback at its current position. <br /><br />"
"android.media.session.MediaSession.Callback.onCustomAction (String action, Bundle extras) "," Called when a MediaController wants a PlaybackState.CustomAction to be performed. <br /><br />"
"android.media.session.MediaSession.Callback.onSkipToNext () "," Override to handle requests to skip to the next media item. <br /><br />"
"android.media.session.MediaSession.Callback.onPlayFromSearch (String query, Bundle extras) "," Override to handle requests to begin playback from a search query. <br /><br />"
"android.media.session.MediaSession.Callback.onPause () "," Override to handle requests to pause playback. <br /><br />"
"android.media.session.MediaSession.Callback.onPlay () "," Override to handle requests to begin playback. <br /><br />"
"android.media.session.MediaSession.Callback.onFastForward () "," Override to handle requests to fast forward. <br /><br />"
"android.media.session.MediaSession.Callback.onRewind () "," Override to handle requests to rewind. <br /><br />"
"android.media.session.MediaSession.Callback.onMediaButtonEvent (Intent mediaButtonIntent) "," Called when a media button is pressed and this session has the highest priority or a controller sends a media button event to the session. <br /><br />"
"android.media.session.MediaSession.Callback.onSetRating (Rating rating) "," Override to handle the item being rated. <br /><br />"
"android.media.session.MediaSession.Callback.onStop () "," Override to handle requests to stop playback. <br /><br />"
"android.media.session.MediaSession.Callback.onSeekTo (long pos) "," Override to handle requests to seek to a specific position in ms. <br /><br />"
"android.media.session.MediaSession.Callback.onCommand (String command, Bundle args, ResultReceiver cb) "," Called when a controller has sent a command to this session. <br /><br />"
"android.media.session.MediaSession.Callback.onSkipToQueueItem (long id) "," Override to handle requests to play an item with a given id from the play queue. <br /><br />"
"android.media.session.MediaSession.Callback.onPlayFromMediaId (String mediaId, Bundle extras) "," Override to handle requests to play a specific mediaId that was provided by your app's MediaBrowserService. <br /><br />"
"android.media.session.MediaSession.Callback.onSkipToPrevious () "," Override to handle requests to skip to the previous media item. <br /><br />"
"android.media.session.MediaSession.setPlaybackToLocal (AudioAttributes attributes) "," Set the attributes for this session's audio. <br /><br />"
"android.media.session.MediaSession.getSessionToken () "," Retrieve a token object that can be used by apps to create a MediaController for interacting with this session. <br /><br />"
"android.media.session.MediaSession.setSessionActivity (PendingIntent pi) "," Set an intent for launching UI for this Session. <br /><br />"
"android.media.session.MediaSession.setPlaybackToRemote (VolumeProvider volumeProvider) "," Configure this session to use remote volume handling. <br /><br />"
"android.media.session.MediaSession.getController () "," Get a controller for this session. <br /><br />"
"android.media.session.MediaSession.setMediaButtonReceiver (PendingIntent mbr) "," Set a pending intent for your media button receiver to allow restarting playback after the session has been stopped. <br /><br />"
"android.media.session.MediaSession.setMetadata (MediaMetadata metadata) "," Update the current metadata. <br /><br />"
"android.media.session.MediaSession.release () "," This must be called when an app has finished performing playback. <br /><br />"
"android.media.session.MediaSession.setCallback (MediaSession.Callback callback) "," Set the callback to receive updates for the MediaSession. <br /><br />"
"android.media.session.MediaSession.sendSessionEvent (String event, Bundle extras) "," Send a proprietary event to all MediaControllers listening to this Session. <br /><br />"
"android.media.session.MediaSession.setQueue (List< MediaSession.QueueItem> queue) "," Update the list of items in the play queue. <br /><br />"
"android.media.session.MediaSession.setExtras (Bundle extras) "," Set some extras that can be associated with the MediaSession. <br /><br />"
"android.media.session.MediaSession.setFlags (int flags) "," Set any flags for the session. <br /><br />"
"android.media.session.MediaSession.setRatingType (int type) "," Set the style of rating used by this session. <br /><br />"
"android.media.session.MediaSession.isActive () "," Get the current active state of this session. <br /><br />"
"android.media.session.MediaSession.setActive (boolean active) "," Set if this session is currently active and ready to receive commands. <br /><br />"
"android.media.session.MediaSession.setCallback (MediaSession.Callback callback, Handler handler) "," Set the callback to receive updates for the MediaSession. <br /><br />"
"android.media.session.MediaSession.setQueueTitle (CharSequence title) "," Set the title of the play queue. <br /><br />"
"android.media.session.MediaSession.setPlaybackState (PlaybackState state) "," Update the current playback state. <br /><br />"
"android.media.session.MediaSession.QueueItem.getDescription () "," Get the description for this item. <br /><br />"
"android.media.session.MediaSession.QueueItem.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.media.session.MediaSession.QueueItem.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.media.session.MediaSession.QueueItem.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.media.session.MediaSession.QueueItem.getQueueId () "," Get the queue id for this item. <br /><br />"
"android.media.session.MediaSession.Token.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.media.session.MediaSession.Token.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.media.session.MediaSession.Token.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.media.session.MediaSession.Token.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.media.session.MediaSessionManager.OnActiveSessionsChangedListener.onActiveSessionsChanged (List< MediaController> controllers) "," no description <br /><br />"
"android.media.session.PlaybackState.Builder.setState (int state, long position, float playbackSpeed, long updateTime) "," Set the current state of playback. <br /><br />"
"android.media.session.PlaybackState.Builder.setActiveQueueItemId (long id) "," Set the active item in the play queue by specifying its id. <br /><br />"
"android.media.session.PlaybackState.Builder.setErrorMessage (CharSequence error) "," Set a user readable error message. <br /><br />"
"android.media.session.PlaybackState.Builder.setBufferedPosition (long bufferedPosition) "," Set the current buffered position in ms. <br /><br />"
"android.media.session.PlaybackState.Builder.addCustomAction (PlaybackState.CustomAction customAction) "," Add a custom action to the playback state. <br /><br />"
"android.media.session.PlaybackState.Builder.setExtras (Bundle extras) "," Set any custom extras to be included with the playback state. <br /><br />"
"android.media.session.PlaybackState.Builder.setState (int state, long position, float playbackSpeed) "," Set the current state of playback. <br /><br />"
"android.media.session.PlaybackState.Builder.setActions (long actions) "," Set the current actions available on this session. <br /><br />"
"android.media.session.PlaybackState.Builder.build () "," Build and return the PlaybackState instance with these values. <br /><br />"
"android.media.session.PlaybackState.Builder.addCustomAction (String action, String name, int icon) "," Add a custom action to the playback state. <br /><br />"
"android.media.session.PlaybackState.CustomAction.Builder.setExtras (Bundle extras) "," Set optional extras for the PlaybackState.CustomAction. <br /><br />"
"android.media.session.PlaybackState.CustomAction.Builder.build () "," Build and return the PlaybackState.CustomAction instance with the specified values. <br /><br />"
"android.media.session.PlaybackState.CustomAction.getName () "," Returns the display name of this action. <br /><br />"
"android.media.session.PlaybackState.CustomAction.getExtras () "," Returns extras which provide additional application-specific information about the action, or null if none. <br /><br />"
"android.media.session.PlaybackState.CustomAction.getIcon () "," Returns the resource id of the icon in the MediaSession's package. <br /><br />"
"android.media.session.PlaybackState.CustomAction.getAction () "," Returns the action of the PlaybackState.CustomAction. <br /><br />"
"android.media.session.PlaybackState.CustomAction.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.media.session.PlaybackState.CustomAction.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.media.session.PlaybackState.CustomAction.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.media.session.PlaybackState.getLastPositionUpdateTime () "," Get the elapsed real time at which position was last updated. <br /><br />"
"android.media.session.PlaybackState.getExtras () "," Get any custom extras that were set on this playback state. <br /><br />"
"android.media.session.PlaybackState.getCustomActions () "," Get the list of custom actions. <br /><br />"
"android.media.session.PlaybackState.getActiveQueueItemId () "," Get the id of the currently active item in the queue. <br /><br />"
"android.media.session.PlaybackState.getState () "," Get the current state of playback. <br /><br />"
"android.media.session.PlaybackState.getErrorMessage () "," Get a user readable error message. <br /><br />"
"android.media.session.PlaybackState.getActions () "," Get the current actions available on this session. <br /><br />"
"android.media.session.PlaybackState.getPlaybackSpeed () "," Get the current playback speed as a multiple of normal playback. <br /><br />"
"android.media.session.PlaybackState.getBufferedPosition () "," Get the current buffered position in ms. <br /><br />"
"android.media.session.PlaybackState.getPosition () "," Get the current playback position in ms. <br /><br />"
"android.media.session.PlaybackState.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.media.session.PlaybackState.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.media.session.PlaybackState.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.media.SoundPool.Builder.setAudioAttributes (AudioAttributes attributes) "," Sets the AudioAttributes. <br /><br />"
"android.media.SoundPool.Builder.setMaxStreams (int maxStreams) "," Sets the maximum of number of simultaneous streams that can be played simultaneously. <br /><br />"
"android.media.SoundPool.Builder.build () "," no description <br /><br />"
"android.media.SoundPool.setPriority (int streamID, int priority) "," Change stream priority. <br /><br />"
"android.media.SoundPool.stop (int streamID) "," Stop a playback stream. <br /><br />"
"android.media.SoundPool.load (AssetFileDescriptor afd, int priority) "," Load the sound from an asset file descriptor. <br /><br />"
"android.media.SoundPool.pause (int streamID) "," Pause a playback stream. <br /><br />"
"android.media.SoundPool.setRate (int streamID, float rate) "," Change playback rate. <br /><br />"
"android.media.SoundPool.load (Context context, int resId, int priority) "," Load the sound from the specified APK resource. <br /><br />"
"android.media.SoundPool.load (FileDescriptor fd, long offset, long length, int priority) "," Load the sound from a FileDescriptor. <br /><br />"
"android.media.SoundPool.release () "," Release the SoundPool resources. <br /><br />"
"android.media.SoundPool.unload (int soundID) "," Unload a sound from a sound ID. <br /><br />"
"android.media.SoundPool.setVolume (int streamID, float leftVolume, float rightVolume) "," Set stream volume. <br /><br />"
"android.media.SoundPool.play (int soundID, float leftVolume, float rightVolume, int priority, int loop, float rate) "," Play a sound from a sound ID. <br /><br />"
"android.media.SoundPool.autoResume () "," Resume all previously active streams. <br /><br />"
"android.media.SoundPool.autoPause () "," Pause all active streams. <br /><br />"
"android.media.SoundPool.resume (int streamID) "," Resume a playback stream. <br /><br />"
"android.media.SoundPool.load (String path, int priority) "," Load the sound from the specified path. <br /><br />"
"android.media.SoundPool.setLoop (int streamID, int loop) "," Set loop mode. <br /><br />"
"android.media.SoundPool.setOnLoadCompleteListener (SoundPool.OnLoadCompleteListener listener) "," Sets the callback hook for the OnLoadCompleteListener. <br /><br />"
"android.media.SoundPool.OnLoadCompleteListener.onLoadComplete (SoundPool soundPool, int sampleId, int status) "," Called when a sound has completed loading. <br /><br />"
"android.media.ThumbnailUtils.createVideoThumbnail (String filePath, int kind) "," Create a video thumbnail for a video. <br /><br />"
"android.media.ThumbnailUtils.extractThumbnail (Bitmap source, int width, int height, int options) "," Creates a centered bitmap of the desired size. <br /><br />"
"android.media.ThumbnailUtils.extractThumbnail (Bitmap source, int width, int height) "," Creates a centered bitmap of the desired size. <br /><br />"
"android.media.TimedText.getBounds () "," Get the rectangle area or region for rendering the timed text as specified by a Rect object. <br /><br />"
"android.media.TimedText.getText () "," Get the characters in the timed text. <br /><br />"
"android.media.ToneGenerator.startTone (int toneType, int durationMs) "," This method starts the playback of a tone of the specified type for the specified duration. <br /><br />"
"android.media.ToneGenerator.stopTone () "," This method stops the tone currently playing playback. <br /><br />"
"android.media.ToneGenerator.startTone (int toneType) "," This method starts the playback of a tone of the specified type. <br /><br />"
"android.media.ToneGenerator.release () "," Releases resources associated with this ToneGenerator object. <br /><br />"
"android.media.ToneGenerator.getAudioSessionId () "," Returns the audio session ID. <br /><br />"
"android.media.tv.TvContentRating.flattenToString () "," Returns a string that unambiguously describes the rating information contained in a TvContentRating object. <br /><br />"
"android.media.tv.TvContentRating.getSubRatings () "," Returns the unmodifiable sub-rating string List of this TvContentRating object. <br /><br />"
"android.media.tv.TvContentRating.unflattenFromString (String ratingString)   Recovers a TvContentRating object from the string that was previously created from flattenToString () "," Recovers a TvContentRating object from the string that was previously created from flattenToString(). <br /><br />"
"android.media.tv.TvContentRating.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.media.tv.TvContentRating.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.media.tv.TvContentRating.createRating (String domain, String ratingSystem, String rating, String... subRatings) "," Creates a TvContentRating object with predefined content rating strings. <br /><br />"
"android.media.tv.TvContentRating.getRatingSystem () "," Returns the rating system of this TvContentRating object. <br /><br />"
"android.media.tv.TvContentRating.getMainRating () "," Returns the main rating of this TvContentRating object. <br /><br />"
"android.media.tv.TvContentRating.getDomain () "," Returns the domain of this TvContentRating object. <br /><br />"
"android.media.tv.TvContract.Channels.getVideoResolution (String videoFormat)   Returns the video resolution  (definition) "," Returns the video resolution (definition) for a given video format. <br /><br />"
"android.media.tv.TvContract.buildChannelLogoUri (Uri channelUri) "," Builds a URI that points to a channel logo. <br /><br />"
"android.media.tv.TvContract.buildChannelsUriForInput (String inputId) "," Builds a URI that points to all channels from a given TV input. <br /><br />"
"android.media.tv.TvContract.buildChannelUri (long channelId) "," Builds a URI that points to a specific channel. <br /><br />"
"android.media.tv.TvContract.buildProgramsUriForChannel (Uri channelUri) "," Builds a URI that points to all programs on a given channel. <br /><br />"
"android.media.tv.TvContract.buildProgramsUriForChannel (long channelId, long startTime, long endTime) "," Builds a URI that points to programs on a specific channel whose schedules overlap with the given time frame. <br /><br />"
"android.media.tv.TvContract.buildProgramUri (long programId) "," Builds a URI that points to a specific program. <br /><br />"
"android.media.tv.TvContract.buildInputId (ComponentName name) "," Builds an ID that uniquely identifies a TV input service. <br /><br />"
"android.media.tv.TvContract.buildProgramsUriForChannel (Uri channelUri, long startTime, long endTime) "," Builds a URI that points to programs on a specific channel whose schedules overlap with the given time frame. <br /><br />"
"android.media.tv.TvContract.buildProgramsUriForChannel (long channelId) "," Builds a URI that points to all programs on a given channel. <br /><br />"
"android.media.tv.TvContract.buildChannelLogoUri (long channelId) "," Builds a URI that points to a channel logo. <br /><br />"
"android.media.tv.TvContract.buildChannelUriForPassthroughInput (String inputId) "," Build a special channel URI intended to be used with pass-through inputs. <br /><br />"
"android.media.tv.TvContract.Programs.Genres.decode (String genres) "," Decodes the canonical genre strings from the text stored in the database. <br /><br />"
"android.media.tv.TvContract.Programs.Genres.encode (String... genres) "," Encodes canonical genre strings to a text that can be put into the database. <br /><br />"
"android.media.tv.TvInputInfo.loadIcon (Context context) "," Loads the user-displayed icon for this TV input. <br /><br />"
"android.media.tv.TvInputInfo.isPassthroughInput () "," Returns true if this TV input is pass-though which does not have any real channels in TvProvider. <br /><br />"
"android.media.tv.TvInputInfo.createSettingsIntent () "," Returns an intent to start the settings activity for this TV input. <br /><br />"
"android.media.tv.TvInputInfo.getServiceInfo () "," Returns the information of the service that implements this TV input. <br /><br />"
"android.media.tv.TvInputInfo.getType () "," Returns the type of this TV input. <br /><br />"
"android.media.tv.TvInputInfo.createSetupIntent () "," Returns an intent to start the setup activity for this TV input. <br /><br />"
"android.media.tv.TvInputInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.media.tv.TvInputInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.media.tv.TvInputInfo.getParentId () "," Returns the parent input ID. <br /><br />"
"android.media.tv.TvInputInfo.loadLabel (Context context) "," Loads the user-displayed label for this TV input. <br /><br />"
"android.media.tv.TvInputInfo.getId () "," Returns a unique ID for this TV input. <br /><br />"
"android.media.tv.TvInputInfo.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.media.tv.TvInputInfo.writeToParcel (Parcel dest, int flags) "," Used to package this object into a Parcel. <br /><br />"
"android.media.tv.TvInputInfo.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.media.tv.TvInputManager.getInputState (String inputId) "," Returns the state of a given TV input. <br /><br />"
"android.media.tv.TvInputManager.unregisterCallback (TvInputManager.TvInputCallback callback) "," Unregisters the existing TvInputManager.TvInputCallback. <br /><br />"
"android.media.tv.TvInputManager.registerCallback (TvInputManager.TvInputCallback callback, Handler handler) "," Registers a TvInputManager.TvInputCallback. <br /><br />"
"android.media.tv.TvInputManager.getTvInputList () "," Returns the complete list of TV inputs on the system. <br /><br />"
"android.media.tv.TvInputManager.getTvInputInfo (String inputId) "," Returns the TvInputInfo for a given TV input. <br /><br />"
"android.media.tv.TvInputManager.isRatingBlocked (TvContentRating rating) "," Checks whether a given TV content rating is blocked by the user. <br /><br />"
"android.media.tv.TvInputManager.isParentalControlsEnabled () "," Returns the user's parental controls enabled state. <br /><br />"
"android.media.tv.TvInputManager.TvInputCallback.onInputStateChanged (String inputId, int state) "," This is called when the state of a given TV input is changed. <br /><br />"
"android.media.tv.TvInputManager.TvInputCallback.onInputAdded (String inputId) "," This is called when a TV input is added. <br /><br />"
"android.media.tv.TvInputManager.TvInputCallback.onInputRemoved (String inputId) "," This is called when a TV input is removed. <br /><br />"
"android.media.tv.TvInputService.HardwareSession.onHardwareVideoAvailable ()   Called when the underlying hardware TV input session calls notifyVideoAvailable () "," Called when the underlying hardware TV input session calls notifyVideoAvailable(). <br /><br />"
"android.media.tv.TvInputService.HardwareSession.getHardwareInputId () "," Returns the hardware TV input ID the external device is connected to. <br /><br />"
"android.media.tv.TvInputService.HardwareSession.onHardwareVideoUnavailable (int reason)   Called when the underlying hardware TV input session calls notifyVideoUnavailable (int) "," Called when the underlying hardware TV input session calls notifyVideoUnavailable(int). <br /><br />"
"android.media.tv.TvInputService.HardwareSession.onSetSurface (Surface surface) "," This method will not be called in TvInputService.HardwareSession. <br /><br />"
"android.media.tv.TvInputService.onCreateSession (String inputId) "," Returns a concrete implementation of TvInputService.Session. <br /><br />"
"android.media.tv.TvInputService.onBind (Intent intent) "," Return the communication channel to the service. <br /><br />"
"android.media.tv.TvInputService.Session.onCreateOverlayView () "," Called when an application requests to create an overlay view. <br /><br />"
"android.media.tv.TvInputService.Session.notifyContentAllowed () "," Informs the application that the user is allowed to watch the current program content. <br /><br />"
"android.media.tv.TvInputService.Session.onSurfaceChanged (int format, int width, int height)   Called after any structural changes  (format or size) have been made to the Surface passed by onSetSurface (Surface) "," Called after any structural changes (format or size) have been made to the Surface passed by onSetSurface(Surface). <br /><br />"
"android.media.tv.TvInputService.Session.notifyVideoUnavailable (int reason) "," Informs the application that the video became unavailable for some reason. <br /><br />"
"android.media.tv.TvInputService.Session.notifyChannelRetuned (Uri channelUri) "," Notifies the channel of the session is retuned by TV input. <br /><br />"
"android.media.tv.TvInputService.Session.onSetCaptionEnabled (boolean enabled) "," Enables or disables the caption. <br /><br />"
"android.media.tv.TvInputService.Session.onTrackballEvent (MotionEvent event) "," Implement this method to handle trackball events on the current input session. <br /><br />"
"android.media.tv.TvInputService.Session.onSelectTrack (int type, String trackId) "," Select a given track. <br /><br />"
"android.media.tv.TvInputService.Session.notifyVideoAvailable () "," Informs the application that the video is now available for watching. <br /><br />"
"android.media.tv.TvInputService.Session.onRelease () "," Called when the session is released. <br /><br />"
"android.media.tv.TvInputService.Session.onKeyMultiple (int keyCode, int count, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyMultiple (): always returns false  (doesn't handle the event) "," Default implementation of KeyEvent.Callback.onKeyMultiple(): always returns false (doesn't handle the event). <br /><br />"
"android.media.tv.TvInputService.Session.onTune (Uri channelUri) "," Tunes to a given channel. <br /><br />"
"android.media.tv.TvInputService.Session.onGenericMotionEvent (MotionEvent event) "," Implement this method to handle generic motion events on the current input session. <br /><br />"
"android.media.tv.TvInputService.Session.onSetStreamVolume (float volume) "," Sets the relative stream volume of the current TV input session to handle the change of audio focus by setting. <br /><br />"
"android.media.tv.TvInputService.Session.onKeyUp (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyUp (): always returns false  (doesn't handle the event) "," Default implementation of KeyEvent.Callback.onKeyUp(): always returns false (doesn't handle the event). <br /><br />"
"android.media.tv.TvInputService.Session.setOverlayViewEnabled (boolean enable) "," Enables or disables the overlay view. <br /><br />"
"android.media.tv.TvInputService.Session.onKeyDown (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyDown (): always returns false  (doesn't handle the event) "," Default implementation of KeyEvent.Callback.onKeyDown(): always returns false (doesn't handle the event). <br /><br />"
"android.media.tv.TvInputService.Session.onUnblockContent (TvContentRating unblockedRating) "," Requests to unblock the content according to the given rating. <br /><br />"
"android.media.tv.TvInputService.Session.notifyContentBlocked (TvContentRating rating) "," Informs the application that the current program content is blocked by parent controls. <br /><br />"
"android.media.tv.TvInputService.Session.onTouchEvent (MotionEvent event) "," Implement this method to handle touch screen motion events on the current input session. <br /><br />"
"android.media.tv.TvInputService.Session.onSetSurface (Surface surface) "," Sets the Surface for the current input session on which the TV input renders video. <br /><br />"
"android.media.tv.TvInputService.Session.notifyTrackSelected (int type, String trackId) "," Sends the type and ID of a selected track. <br /><br />"
"android.media.tv.TvInputService.Session.notifyTracksChanged (List< TvTrackInfo> tracks) "," Sends the list of all audio/video/subtitle tracks. <br /><br />"
"android.media.tv.TvInputService.Session.onKeyLongPress (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyLongPress (): always returns false  (doesn't handle the event) "," Default implementation of KeyEvent.Callback.onKeyLongPress(): always returns false (doesn't handle the event). <br /><br />"
"android.media.tv.TvTrackInfo.Builder.setExtra (Bundle extra) "," Sets the extra information about the current track. <br /><br />"
"android.media.tv.TvTrackInfo.Builder.setAudioSampleRate (int audioSampleRate) "," Sets the audio sample rate, in the unit of Hz. <br /><br />"
"android.media.tv.TvTrackInfo.Builder.setVideoFrameRate (float videoFrameRate)   Sets the frame rate of the video, in the unit fps  (frames per rate) "," Sets the frame rate of the video, in the unit fps (frames per rate). <br /><br />"
"android.media.tv.TvTrackInfo.Builder.setVideoHeight (int videoHeight) "," Sets the height of the video, in the unit of pixels. <br /><br />"
"android.media.tv.TvTrackInfo.Builder.setAudioChannelCount (int audioChannelCount) "," Sets the audio channel count. <br /><br />"
"android.media.tv.TvTrackInfo.Builder.setVideoWidth (int videoWidth) "," Sets the width of the video, in the unit of pixels. <br /><br />"
"android.media.tv.TvTrackInfo.Builder.build () "," Creates a TvTrackInfo instance with the specified fields. <br /><br />"
"android.media.tv.TvTrackInfo.Builder.setLanguage (String language) "," Sets the language information of the current track. <br /><br />"
"android.media.tv.TvTrackInfo.getVideoWidth () "," Returns the width of the video, in the unit of pixels. <br /><br />"
"android.media.tv.TvTrackInfo.getAudioSampleRate () "," Returns the audio sample rate, in the unit of Hz. <br /><br />"
"android.media.tv.TvTrackInfo.getType () "," Returns the type of the track. <br /><br />"
"android.media.tv.TvTrackInfo.getId () "," Returns the ID of the track. <br /><br />"
"android.media.tv.TvTrackInfo.getAudioChannelCount () "," Returns the audio channel count. <br /><br />"
"android.media.tv.TvTrackInfo.getExtra () "," Returns the extra information about the current track. <br /><br />"
"android.media.tv.TvTrackInfo.getVideoHeight () "," Returns the height of the video, in the unit of pixels. <br /><br />"
"android.media.tv.TvTrackInfo.getLanguage () "," Returns the language information encoded by either ISO 639-1 or ISO 639-2/T. <br /><br />"
"android.media.tv.TvTrackInfo.writeToParcel (Parcel dest, int flags) "," Used to package this object into a Parcel. <br /><br />"
"android.media.tv.TvTrackInfo.getVideoFrameRate ()   Returns the frame rate of the video, in the unit of fps  (frames per second) "," Returns the frame rate of the video, in the unit of fps (frames per second). <br /><br />"
"android.media.tv.TvTrackInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.media.tv.TvView.dispatchKeyEvent (KeyEvent event) "," Dispatch a key event to the next view on the focus path. <br /><br />"
"android.media.tv.TvView.dispatchTouchEvent (MotionEvent event) "," Pass the touch screen motion event down to the target view, or this view if it is the target. <br /><br />"
"android.media.tv.TvView.onUnhandledInputEvent (InputEvent event) "," Called when an unhandled input event also has not been handled by the user provided callback. <br /><br />"
"android.media.tv.TvView.dispatchWindowFocusChanged (boolean hasFocus) "," Called when the window containing this view gains or loses window focus. <br /><br />"
"android.media.tv.TvView.gatherTransparentRegion (Region region) "," This is used by the RootView to perform an optimization when the view hierarchy contains one or several SurfaceView. <br /><br />"
"android.media.tv.TvView.dispatchGenericMotionEvent (MotionEvent event) "," Dispatch a generic motion event. <br /><br />"
"android.media.tv.TvView.dispatchTrackballEvent (MotionEvent event) "," Pass a trackball motion event down to the focused view. <br /><br />"
"android.media.tv.TvView.draw (Canvas canvas)   Manually render this view  (and all of its children) "," Manually render this view (and all of its children) to the given Canvas. <br /><br />"
"android.media.tv.TvView.setStreamVolume (float volume) "," Sets the relative stream volume of this session to handle a change of audio focus. <br /><br />"
"android.media.tv.TvView.setCaptionEnabled (boolean enabled) "," Enables or disables the caption in this TvView. <br /><br />"
"android.media.tv.TvView.tune (String inputId, Uri channelUri) "," Tunes to a given channel. <br /><br />"
"android.media.tv.TvView.setOnUnhandledInputEventListener (TvView.OnUnhandledInputEventListener listener) "," Registers a callback to be invoked when an input event is not handled by the bound TV input. <br /><br />"
"android.media.tv.TvView.getSelectedTrack (int type) "," Returns the ID of the selected track for a given type. <br /><br />"
"android.media.tv.TvView.selectTrack (int type, String trackId) "," Selects a track. <br /><br />"
"android.media.tv.TvView.dispatchUnhandledInputEvent (InputEvent event) "," Dispatches an unhandled input event to the next receiver. <br /><br />"
"android.media.tv.TvView.getTracks (int type) "," Returns the list of tracks. <br /><br />"
"android.media.tv.TvView.setCallback (TvView.TvInputCallback callback) "," Sets the callback to be invoked when an event is dispatched to this TvView. <br /><br />"
"android.media.tv.TvView.reset () "," Resets this TvView. <br /><br />"
"android.media.tv.TvView.OnUnhandledInputEventListener.onUnhandledInputEvent (InputEvent event) "," Called when an input event was not handled by the bound TV input. <br /><br />"
"android.media.tv.TvView.TvInputCallback.onChannelRetuned (String inputId, Uri channelUri)   This is invoked when the channel of this TvView is changed by the underlying TV input without any tune (String, Uri) "," This is invoked when the channel of this TvView is changed by the underlying TV input without any tune(String, Uri) request. <br /><br />"
"android.media.tv.TvView.TvInputCallback.onConnectionFailed (String inputId) "," This is invoked when an error occurred while establishing a connection to the underlying TV input. <br /><br />"
"android.media.tv.TvView.TvInputCallback.onVideoAvailable (String inputId) "," This is called when the video is available, so the TV input starts the playback. <br /><br />"
"android.media.tv.TvView.TvInputCallback.onContentBlocked (String inputId, TvContentRating rating) "," This is called when the current program content turns out to be not allowed to watch since its content rating is blocked by parental controls. <br /><br />"
"android.media.tv.TvView.TvInputCallback.onTracksChanged (String inputId, List< TvTrackInfo> tracks) "," This is called when the track information has been changed. <br /><br />"
"android.media.tv.TvView.TvInputCallback.onTrackSelected (String inputId, int type, String trackId) "," This is called when there is a change on the selected tracks. <br /><br />"
"android.media.tv.TvView.TvInputCallback.onVideoUnavailable (String inputId, int reason) "," This is called when the video is not available, so the TV input stops the playback. <br /><br />"
"android.media.tv.TvView.TvInputCallback.onVideoSizeChanged (String inputId, int width, int height) "," This is invoked when the video size has been changed. <br /><br />"
"android.media.tv.TvView.TvInputCallback.onDisconnected (String inputId) "," This is invoked when the existing connection to the underlying TV input is lost. <br /><br />"
"android.media.tv.TvView.TvInputCallback.onContentAllowed (String inputId) "," This is called when the current program content turns out to be allowed to watch since its content rating is not blocked by parental controls. <br /><br />"
"android.media.VolumeProvider.onAdjustVolume (int direction) "," Override to handle requests to adjust the volume of the current output. <br /><br />"
"android.media.VolumeProvider.getVolumeControl () "," Get the volume control type that this volume provider uses. <br /><br />"
"android.media.VolumeProvider.getMaxVolume () "," Get the maximum volume this provider allows. <br /><br />"
"android.media.VolumeProvider.setCurrentVolume (int currentVolume) "," Notify the system that the current volume has been changed. <br /><br />"
"android.media.VolumeProvider.onSetVolumeTo (int volume) "," Override to handle requests to set the volume of the current output. <br /><br />"
"android.media.VolumeProvider.getCurrentVolume () "," Gets the current volume. <br /><br />"
"android.mtp.MtpConstants.isAbstractObject (int format)   Returns true if the object is abstract  (that is, it has no representation in the underlying file system) "," Returns true if the object is abstract (that is, it has no representation in the underlying file system). <br /><br />"
"android.mtp.MtpDevice.getDeviceInfo () "," Returns the MtpDeviceInfo for this device <br /><br />"
"android.mtp.MtpDevice.getObjectInfo (int objectHandle) "," Retrieves the MtpObjectInfo for an object. <br /><br />"
"android.mtp.MtpDevice.getObjectHandles (int storageId, int format, int objectHandle) "," Returns the list of object handles for all objects on the given storage unit, with the given format and parent. <br /><br />"
"android.mtp.MtpDevice.close () "," Closes all resources related to the MtpDevice object. <br /><br />"
"android.mtp.MtpDevice.getStorageIds ()   Returns the list of IDs for all storage units on this device Information about each storage unit can be accessed via getStorageInfo (int) "," Returns the list of IDs for all storage units on this device Information about each storage unit can be accessed via getStorageInfo(int). <br /><br />"
"android.mtp.MtpDevice.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.mtp.MtpDevice.getThumbnail (int objectHandle) "," Returns the thumbnail data for an object as a byte array. <br /><br />"
"android.mtp.MtpDevice.getParent (int objectHandle) "," Retrieves the object handle for the parent of an object on the device. <br /><br />"
"android.mtp.MtpDevice.getStorageInfo (int storageId) "," Retrieves the MtpStorageInfo for a storage unit. <br /><br />"
"android.mtp.MtpDevice.getStorageId (int objectHandle) "," Retrieves the ID of the storage unit containing the given object on the device. <br /><br />"
"android.mtp.MtpDevice.getObject (int objectHandle, int objectSize) "," Returns the data for an object as a byte array. <br /><br />"
"android.mtp.MtpDevice.getDeviceName ()   Returns the name of the USB device This returns the same value as getDeviceName () "," Returns the name of the USB device This returns the same value as getDeviceName() for the device's UsbDevice <br /><br />"
"android.mtp.MtpDevice.open (UsbDeviceConnection connection) "," Opens the MTP device. <br /><br />"
"android.mtp.MtpDevice.importFile (int objectHandle, String destPath) "," Copies the data for an object to a file in external storage. <br /><br />"
"android.mtp.MtpDevice.getDeviceId () "," Returns the USB ID of the USB device. <br /><br />"
"android.mtp.MtpDevice.deleteObject (int objectHandle) "," Deletes an object on the device. <br /><br />"
"android.mtp.MtpDeviceInfo.getSerialNumber () "," Returns the unique serial number for the MTP device <br /><br />"
"android.mtp.MtpDeviceInfo.getManufacturer () "," Returns the manufacturer's name for the MTP device <br /><br />"
"android.mtp.MtpDeviceInfo.getVersion () "," Returns the version string the MTP device <br /><br />"
"android.mtp.MtpDeviceInfo.getModel () "," Returns the model name for the MTP device <br /><br />"
"android.mtp.MtpObjectInfo.getThumbCompressedSize () "," Returns the size of the MTP object's thumbnail Will be zero for objects with no thumbnail <br /><br />"
"android.mtp.MtpObjectInfo.getFormat () "," Returns the format code for the MTP object <br /><br />"
"android.mtp.MtpObjectInfo.getDateCreated () "," Returns the creation date of the MTP object The value is represented as milliseconds since January 1, 1970 <br /><br />"
"android.mtp.MtpObjectInfo.getStorageId () "," Returns the storage ID for the MTP object's storage unit <br /><br />"
"android.mtp.MtpObjectInfo.getThumbPixWidth () "," Returns the width of the MTP object's thumbnail in pixels Will be zero for objects with no thumbnail <br /><br />"
"android.mtp.MtpObjectInfo.getSequenceNumber () "," Returns the sequence number for the MTP object This field is typically not used for MTP devices, but is sometimes used to define a sequence of photos on PTP cameras. <br /><br />"
"android.mtp.MtpObjectInfo.getImagePixDepth () "," Returns the depth of the MTP object in bits per pixel Will be zero for non-image objects <br /><br />"
"android.mtp.MtpObjectInfo.getImagePixHeight () "," Returns the height of the MTP object in pixels Will be zero for non-image objects <br /><br />"
"android.mtp.MtpObjectInfo.getThumbPixHeight () "," Returns the height of the MTP object's thumbnail in pixels Will be zero for objects with no thumbnail <br /><br />"
"android.mtp.MtpObjectInfo.getDateModified () "," Returns the modification date of the MTP object The value is represented as milliseconds since January 1, 1970 <br /><br />"
"android.mtp.MtpObjectInfo.getImagePixWidth () "," Returns the width of the MTP object in pixels Will be zero for non-image objects <br /><br />"
"android.mtp.MtpObjectInfo.getName () "," Returns the name of the MTP object <br /><br />"
"android.mtp.MtpObjectInfo.getAssociationType () "," Returns the association type for the MTP object Will be zero objects that are not of format FORMAT_ASSOCIATION For directories the association type is typically ASSOCIATION_TYPE_GENERIC_FOLDER <br /><br />"
"android.mtp.MtpObjectInfo.getCompressedSize () "," Returns the size of the MTP object <br /><br />"
"android.mtp.MtpObjectInfo.getObjectHandle () "," Returns the object handle for the MTP object <br /><br />"
"android.mtp.MtpObjectInfo.getParent () "," Returns the object handle for the object's parent Will be zero for the root directory of a storage unit <br /><br />"
"android.mtp.MtpObjectInfo.getThumbFormat () "," Returns the format code for the MTP object's thumbnail Will be zero for objects with no thumbnail <br /><br />"
"android.mtp.MtpObjectInfo.getAssociationDesc () "," Returns the association description for the MTP object Will be zero objects that are not of format FORMAT_ASSOCIATION <br /><br />"
"android.mtp.MtpObjectInfo.getProtectionStatus () "," Returns the protection status for the MTP object Possible values are:   PROTECTION_STATUS_NONE   PROTECTION_STATUS_READ_ONLY   PROTECTION_STATUS_NON_TRANSFERABLE_DATA <br /><br />"
"android.mtp.MtpObjectInfo.getKeywords () "," Returns a comma separated list of keywords for the MTP object <br /><br />"
"android.mtp.MtpStorageInfo.getVolumeIdentifier () "," Returns the volume identifier for the storage unit <br /><br />"
"android.mtp.MtpStorageInfo.getDescription () "," Returns the description string for the storage unit. <br /><br />"
"android.mtp.MtpStorageInfo.getMaxCapacity () "," Returns the maximum storage capacity for the storage unit in bytes <br /><br />"
"android.mtp.MtpStorageInfo.getStorageId () "," Returns the storage ID for the storage unit. <br /><br />"
"android.mtp.MtpStorageInfo.getFreeSpace () "," Returns the amount of free space in the storage unit in bytes <br /><br />"
"android.net.ConnectivityManager.unregisterNetworkCallback (ConnectivityManager.NetworkCallback networkCallback)   Unregisters callbacks about and possibly releases networks originating from requestNetwork (NetworkRequest, PendingIntent) and registerNetworkCallback (NetworkRequest, ConnectivityManager.NetworkCallback) "," Unregisters callbacks about and possibly releases networks originating from requestNetwork(NetworkRequest, PendingIntent) and registerNetworkCallback(NetworkRequest, ConnectivityManager.NetworkCallback) calls. <br /><br />"
"android.net.ConnectivityManager.getActiveNetworkInfo () "," Returns details about the currently active default data network. <br /><br />"
"android.net.ConnectivityManager.isDefaultNetworkActive () "," Return whether the data network is currently active. <br /><br />"
"android.net.ConnectivityManager.getAllNetworks () "," Returns an array of all Network currently tracked by the framework. <br /><br />"
"android.net.ConnectivityManager.getAllNetworkInfo () "," Returns connection status information about all network types supported by the device. <br /><br />"
"android.net.ConnectivityManager.reportBadNetwork (Network network) "," Report a problem network to the framework. <br /><br />"
"android.net.ConnectivityManager.startUsingNetworkFeature (int networkType, String feature)    This method was deprecated in API level 21. Deprecated in favor of the cleaner requestNetwork (NetworkRequest, PendingIntent) "," This method was deprecated in API level 21. Deprecated in favor of the cleaner requestNetwork(NetworkRequest, PendingIntent) api. <br /><br />"
"android.net.ConnectivityManager.requestNetwork (NetworkRequest request, PendingIntent operation) "," Request a network to satisfy a set of NetworkCapabilities. <br /><br />"
"android.net.ConnectivityManager.registerNetworkCallback (NetworkRequest request, ConnectivityManager.NetworkCallback networkCallback) "," Registers to receive notifications about all networks which satisfy the given NetworkRequest. <br /><br />"
"android.net.ConnectivityManager.getLinkProperties (Network network) "," Get the LinkProperties for the given Network. <br /><br />"
"android.net.ConnectivityManager.isNetworkTypeValid (int networkType) "," Tests if a given integer represents a valid network type. <br /><br />"
"android.net.ConnectivityManager.setProcessDefaultNetwork (Network network) "," Binds the current process to network. <br /><br />"
"android.net.ConnectivityManager.stopUsingNetworkFeature (int networkType, String feature)    This method was deprecated in API level 21. Deprecated in favor of the cleaner requestNetwork (NetworkRequest, PendingIntent) "," This method was deprecated in API level 21. Deprecated in favor of the cleaner requestNetwork(NetworkRequest, PendingIntent) api. <br /><br />"
"android.net.ConnectivityManager.getNetworkCapabilities (Network network) "," Get the NetworkCapabilities for the given Network. <br /><br />"
"android.net.ConnectivityManager.requestNetwork (NetworkRequest request, ConnectivityManager.NetworkCallback networkCallback) "," Request a network to satisfy a set of NetworkCapabilities. <br /><br />"
"android.net.ConnectivityManager.getNetworkPreference () "," This method was deprecated in API level 21. Functionality has been removed as it no longer makes sense, with many more than two networks - we'd need an array to express preference. Instead we use dynamic network properties of the networks to describe their precedence. <br /><br />"
"android.net.ConnectivityManager.removeDefaultNetworkActiveListener (ConnectivityManager.OnNetworkActiveListener l)   Remove network active listener previously registered with addDefaultNetworkActiveListener (ConnectivityManager.OnNetworkActiveListener) "," Remove network active listener previously registered with addDefaultNetworkActiveListener(ConnectivityManager.OnNetworkActiveListener). <br /><br />"
"android.net.ConnectivityManager.releaseNetworkRequest (PendingIntent operation)   Removes a request made via requestNetwork (NetworkRequest, android.app.PendingIntent)  This method has the same behavior as unregisterNetworkCallback (ConnectivityManager.NetworkCallback) "," Removes a request made via requestNetwork(NetworkRequest, android.app.PendingIntent)  This method has the same behavior as unregisterNetworkCallback(ConnectivityManager.NetworkCallback) with respect to releasing network resources and disconnecting. <br /><br />"
"android.net.ConnectivityManager.isActiveNetworkMetered () "," Returns if the currently active data network is metered. <br /><br />"
"android.net.ConnectivityManager.setNetworkPreference (int preference) "," This method was deprecated in API level 21. Functionality has been removed as it no longer makes sense, with many more than two networks - we'd need an array to express preference. Instead we use dynamic network properties of the networks to describe their precedence. <br /><br />"
"android.net.ConnectivityManager.requestRouteToHost (int networkType, int hostAddress)    This method was deprecated in API level 21. Deprecated in favor of the requestNetwork (NetworkRequest, PendingIntent), setProcessDefaultNetwork (Network) and getSocketFactory () "," This method was deprecated in API level 21. Deprecated in favor of the requestNetwork(NetworkRequest, PendingIntent), setProcessDefaultNetwork(Network) and getSocketFactory() api. <br /><br />"
"android.net.ConnectivityManager.getNetworkInfo (Network network) "," Returns connection status information about a particular Network. <br /><br />"
"android.net.ConnectivityManager.getProcessDefaultNetwork ()   Returns the Network currently bound to this process via setProcessDefaultNetwork (Network) "," Returns the Network currently bound to this process via setProcessDefaultNetwork(Network), or null if no Network is explicitly bound. <br /><br />"
"android.net.ConnectivityManager.getBackgroundDataSetting ()    This method was deprecated in API level 14. As of ICE_CREAM_SANDWICH, availability of background data depends on several combined factors, and this method will always return true. Instead, when background data is unavailable, getActiveNetworkInfo () "," This method was deprecated in API level 14. As of ICE_CREAM_SANDWICH, availability of background data depends on several combined factors, and this method will always return true. Instead, when background data is unavailable, getActiveNetworkInfo() will now appear disconnected. <br /><br />"
"android.net.ConnectivityManager.getNetworkInfo (int networkType) "," Returns connection status information about a particular network type. <br /><br />"
"android.net.ConnectivityManager.addDefaultNetworkActiveListener (ConnectivityManager.OnNetworkActiveListener l) "," Start listening to reports when the system's default data network is active, meaning it is a good time to perform network traffic. <br /><br />"
"android.net.ConnectivityManager.NetworkCallback.onAvailable (Network network) "," Called when the framework connects and has declared new network ready for use. <br /><br />"
"android.net.ConnectivityManager.NetworkCallback.onCapabilitiesChanged (Network network, NetworkCapabilities networkCapabilities) "," Called when the network the framework connected to for this request changes capabilities but still satisfies the stated need. <br /><br />"
"android.net.ConnectivityManager.NetworkCallback.onLosing (Network network, int maxMsToLive) "," Called when the network is about to be disconnected. <br /><br />"
"android.net.ConnectivityManager.NetworkCallback.onLost (Network network) "," Called when the framework has a hard loss of the network or when the graceful failure ends. <br /><br />"
"android.net.ConnectivityManager.NetworkCallback.onLinkPropertiesChanged (Network network, LinkProperties linkProperties) "," Called when the network the framework connected to for this request changes LinkProperties. <br /><br />"
"android.net.ConnectivityManager.OnNetworkActiveListener.onNetworkActive () "," Called on the main thread of the process to report that the current data network has become active, and it is now a good time to perform any pending network operations. <br /><br />"
"android.net.Credentials.getPid () "," no description <br /><br />"
"android.net.Credentials.getUid () "," no description <br /><br />"
"android.net.Credentials.getGid () "," no description <br /><br />"
"android.net.DhcpInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.http.AndroidHttpClient.getConnectionManager () "," Obtains the connection manager used by this client. <br /><br />"
"android.net.http.AndroidHttpClient.getMinGzipSize (ContentResolver resolver) "," Retrieves the minimum size for compressing data. <br /><br />"
"android.net.http.AndroidHttpClient.close () "," Release resources associated with this client. <br /><br />"
"android.net.http.AndroidHttpClient.getUngzippedContent (HttpEntity entity) "," Gets the input stream from a response entity. <br /><br />"
"android.net.http.AndroidHttpClient.execute (HttpUriRequest request, ResponseHandler<? extends T> responseHandler) "," Executes a request using the default context and processes the response using the given response handler. <br /><br />"
"android.net.http.AndroidHttpClient.execute (HttpUriRequest request, HttpContext context) "," Executes a request using the given context. <br /><br />"
"android.net.http.AndroidHttpClient.getParams () "," Obtains the parameters for this client. <br /><br />"
"android.net.http.AndroidHttpClient.modifyRequestToAcceptGzipResponse (HttpRequest request) "," Modifies a request to indicate to the server that we would like a gzipped response. <br /><br />"
"android.net.http.AndroidHttpClient.execute (HttpHost target, HttpRequest request) "," Executes a request to the target using the default context. <br /><br />"
"android.net.http.AndroidHttpClient.newInstance (String userAgent)    This method is deprecated. Please use URLConnection and friends instead. See SSLCertificateSocketFactory for SSL cache support. If you'd like to set a custom useragent, please use setRequestProperty (String, String) "," This method is deprecated. Please use URLConnection and friends instead. See SSLCertificateSocketFactory for SSL cache support. If you'd like to set a custom useragent, please use setRequestProperty(String, String) with field set to User-Agent. <br /><br />"
"android.net.http.AndroidHttpClient.execute (HttpHost target, HttpRequest request, HttpContext context) "," Executes a request to the target using the given context. <br /><br />"
"android.net.http.AndroidHttpClient.enableCurlLogging (String name, int level) "," Enables cURL request logging for this client. <br /><br />"
"android.net.http.AndroidHttpClient.execute (HttpHost target, HttpRequest request, ResponseHandler<? extends T> responseHandler) "," Executes a request to the target using the default context and processes the response using the given response handler. <br /><br />"
"android.net.http.AndroidHttpClient.getCompressedEntity (byte[] data, ContentResolver resolver) "," Compress data to send to server. <br /><br />"
"android.net.http.AndroidHttpClient.execute (HttpUriRequest request, ResponseHandler<? extends T> responseHandler, HttpContext context) "," Executes a request using the given context and processes the response using the given response handler. <br /><br />"
"android.net.http.AndroidHttpClient.parseDate (String dateString) "," Returns the date of the given HTTP date string. <br /><br />"
"android.net.http.AndroidHttpClient.execute (HttpUriRequest request) "," Executes a request using the default context. <br /><br />"
"android.net.http.AndroidHttpClient.disableCurlLogging () "," Disables cURL logging for this client. <br /><br />"
"android.net.http.AndroidHttpClient.execute (HttpHost target, HttpRequest request, ResponseHandler<? extends T> responseHandler, HttpContext context) "," Executes a request to the target using the given context and processes the response using the given response handler. <br /><br />"
"android.net.http.AndroidHttpClient.newInstance (String userAgent, Context context)    This method is deprecated. Please use URLConnection and friends instead. See SSLCertificateSocketFactory for SSL cache support. If you'd like to set a custom useragent, please use setRequestProperty (String, String) "," This method is deprecated. Please use URLConnection and friends instead. See SSLCertificateSocketFactory for SSL cache support. If you'd like to set a custom useragent, please use setRequestProperty(String, String) with field set to User-Agent. <br /><br />"
"android.net.http.HttpResponseCache.delete () "," Uninstalls the cache and deletes all of its stored contents. <br /><br />"
"android.net.http.HttpResponseCache.maxSize () "," Returns the maximum number of bytes that this cache should use to store its data. <br /><br />"
"android.net.http.HttpResponseCache.getNetworkCount () "," Returns the number of HTTP requests that required the network to either supply a response or validate a locally cached response. <br /><br />"
"android.net.http.HttpResponseCache.getRequestCount () "," Returns the total number of HTTP requests that were made. <br /><br />"
"android.net.http.HttpResponseCache.getInstalled () "," Returns the currently-installed HttpResponseCache, or null if there is no cache installed or it is not a HttpResponseCache. <br /><br />"
"android.net.http.HttpResponseCache.close () "," Uninstalls the cache and releases any active resources. <br /><br />"
"android.net.http.HttpResponseCache.get (URI uri, String requestMethod, Map< String,  List< String>> requestHeaders) "," Returns the cached response corresponding to the given request. <br /><br />"
"android.net.http.HttpResponseCache.flush () "," Force buffered operations to the filesystem. <br /><br />"
"android.net.http.HttpResponseCache.size () "," Returns the number of bytes currently being used to store the values in this cache. <br /><br />"
"android.net.http.HttpResponseCache.install (File directory, long maxSize)   Creates a new HTTP response cache and "," Creates a new HTTP response cache and sets it as the system default cache. <br /><br />"
"android.net.http.HttpResponseCache.put (URI uri, URLConnection urlConnection) "," Allows the protocol handler to cache data after retrieving resources. <br /><br />"
"android.net.http.HttpResponseCache.getHitCount () "," Returns the number of HTTP requests whose response was provided by the cache. <br /><br />"
"android.net.http.SslCertificate.DName.getOName () "," no description <br /><br />"
"android.net.http.SslCertificate.DName.getDName () "," no description <br /><br />"
"android.net.http.SslCertificate.DName.getCName () "," no description <br /><br />"
"android.net.http.SslCertificate.DName.getUName () "," no description <br /><br />"
"android.net.http.SslCertificate.restoreState (Bundle bundle) "," Restores the certificate stored in the bundle <br /><br />"
"android.net.http.SslCertificate.getValidNotBeforeDate () "," no description <br /><br />"
"android.net.http.SslCertificate.getIssuedBy () "," no description <br /><br />"
"android.net.http.SslCertificate.getValidNotAfterDate () "," no description <br /><br />"
"android.net.http.SslCertificate.getValidNotAfter ()    This method was deprecated in API level 8. Use getValidNotAfterDate () "," This method was deprecated in API level 8. Use getValidNotAfterDate() <br /><br />"
"android.net.http.SslCertificate.saveState (SslCertificate certificate) "," Saves the certificate state to a bundle <br /><br />"
"android.net.http.SslCertificate.getValidNotBefore ()    This method was deprecated in API level 8. Use getValidNotBeforeDate () "," This method was deprecated in API level 8. Use getValidNotBeforeDate() <br /><br />"
"android.net.http.SslCertificate.getIssuedTo () "," no description <br /><br />"
"android.net.http.SslCertificate.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.http.SslError.hasError (int error) "," Determines whether this object includes the supplied error. <br /><br />"
"android.net.http.SslError.getPrimaryError () "," Gets the most severe SSL error in this object's set of errors. <br /><br />"
"android.net.http.SslError.addError (int error) "," Adds the supplied SSL error to the set. <br /><br />"
"android.net.http.SslError.getCertificate () "," Gets the SSL certificate associated with this object. <br /><br />"
"android.net.http.SslError.getUrl () "," Gets the URL associated with this object. <br /><br />"
"android.net.http.SslError.toString () "," Returns a string representation of this object. <br /><br />"
"android.net.http.X509TrustManagerExtensions.isUserAddedCertificate (X509Certificate cert) "," Checks whether a CA certificate is added by an user. <br /><br />"
"android.net.http.X509TrustManagerExtensions.checkServerTrusted (X509Certificate[] chain, String authType, String host) "," Verifies the given certificate chain. <br /><br />"
"android.net.IpPrefix.getPrefixLength () "," Returns the prefix length of this IpPrefix. <br /><br />"
"android.net.IpPrefix.equals (Object obj) "," Compares this IpPrefix object against the specified object in obj. <br /><br />"
"android.net.IpPrefix.hashCode () "," Gets the hashcode of the represented IP prefix. <br /><br />"
"android.net.IpPrefix.getRawAddress ()   Returns a copy of the IP address bytes in network order  (the highest order byte is the zeroth element) "," Returns a copy of the IP address bytes in network order (the highest order byte is the zeroth element). <br /><br />"
"android.net.IpPrefix.getAddress () "," Returns a copy of the first IP address in the prefix. <br /><br />"
"android.net.IpPrefix.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface. <br /><br />"
"android.net.IpPrefix.describeContents () "," Implement the Parcelable interface. <br /><br />"
"android.net.IpPrefix.toString () "," Returns a string representation of this IpPrefix. <br /><br />"
"android.net.LinkAddress.getPrefixLength () "," Returns the prefix length of this LinkAddress. <br /><br />"
"android.net.LinkAddress.equals (Object obj) "," Compares this LinkAddress instance against obj. <br /><br />"
"android.net.LinkAddress.hashCode () "," Returns a hashcode for this address. <br /><br />"
"android.net.LinkAddress.getFlags () "," Returns the flags of this LinkAddress. <br /><br />"
"android.net.LinkAddress.getAddress () "," Returns the InetAddress of this LinkAddress. <br /><br />"
"android.net.LinkAddress.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface. <br /><br />"
"android.net.LinkAddress.describeContents () "," Implement the Parcelable interface. <br /><br />"
"android.net.LinkAddress.getScope () "," Returns the scope of this LinkAddress. <br /><br />"
"android.net.LinkAddress.toString () "," Returns a string representation of this address, such as '192.0.2.1/24' or '2001:db8::1/64'. <br /><br />"
"android.net.LinkProperties.getRoutes () "," Returns all the RouteInfo set on this link. <br /><br />"
"android.net.LinkProperties.getDomains () "," Get the DNS domains search path set for this link. <br /><br />"
"android.net.LinkProperties.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.net.LinkProperties.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.net.LinkProperties.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface. <br /><br />"
"android.net.LinkProperties.getLinkAddresses () "," Returns all the LinkAddress on this link. <br /><br />"
"android.net.LinkProperties.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.net.LinkProperties.getDnsServers () "," Returns all the InetAddress for DNS servers on this link. <br /><br />"
"android.net.LinkProperties.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.LinkProperties.getInterfaceName () "," Gets the interface name for this link. <br /><br />"
"android.net.LinkProperties.getHttpProxy ()   Gets the recommended ProxyInfo  (or null) "," Gets the recommended ProxyInfo (or null) set on this link. <br /><br />"
"android.net.LocalServerSocket.close () "," Closes server socket. <br /><br />"
"android.net.LocalServerSocket.getLocalSocketAddress () "," Obtains the socket's local address <br /><br />"
"android.net.LocalServerSocket.getFileDescriptor () "," Returns file descriptor or null if not yet open/already closed <br /><br />"
"android.net.LocalServerSocket.accept () "," Accepts a new connection to the socket. <br /><br />"
"android.net.LocalSocket.getReceiveBufferSize () "," no description <br /><br />"
"android.net.LocalSocket.close () "," Closes the socket. <br /><br />"
"android.net.LocalSocket.isConnected () "," no description <br /><br />"
"android.net.LocalSocket.setSoTimeout (int n) "," no description <br /><br />"
"android.net.LocalSocket.shutdownInput () "," Shuts down the input side of the socket. <br /><br />"
"android.net.LocalSocket.getSoTimeout () "," no description <br /><br />"
"android.net.LocalSocket.isOutputShutdown () "," no description <br /><br />"
"android.net.LocalSocket.getFileDescriptor () "," Returns file descriptor or null if not yet open/already closed <br /><br />"
"android.net.LocalSocket.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.LocalSocket.connect (LocalSocketAddress endpoint, int timeout) "," no description <br /><br />"
"android.net.LocalSocket.getAncillaryFileDescriptors () "," Retrieves a set of file descriptors that a peer has sent through an ancillary message. <br /><br />"
"android.net.LocalSocket.getSendBufferSize () "," no description <br /><br />"
"android.net.LocalSocket.isClosed () "," no description <br /><br />"
"android.net.LocalSocket.getLocalSocketAddress () "," Retrieves the name that this socket is bound to, if any. <br /><br />"
"android.net.LocalSocket.shutdownOutput () "," Shuts down the output side of the socket. <br /><br />"
"android.net.LocalSocket.getInputStream () "," Retrieves the input stream for this instance. <br /><br />"
"android.net.LocalSocket.getPeerCredentials () "," Retrieves the credentials of this socket's peer. <br /><br />"
"android.net.LocalSocket.connect (LocalSocketAddress endpoint) "," Connects this socket to an endpoint. <br /><br />"
"android.net.LocalSocket.setSendBufferSize (int n) "," no description <br /><br />"
"android.net.LocalSocket.getOutputStream () "," Retrieves the output stream for this instance. <br /><br />"
"android.net.LocalSocket.setReceiveBufferSize (int size) "," no description <br /><br />"
"android.net.LocalSocket.getRemoteSocketAddress () "," no description <br /><br />"
"android.net.LocalSocket.bind (LocalSocketAddress bindpoint) "," Binds this socket to an endpoint name. <br /><br />"
"android.net.LocalSocket.setFileDescriptorsForSend (FileDescriptor[] fds) "," Enqueues a set of file descriptors to send to the peer. <br /><br />"
"android.net.LocalSocket.isInputShutdown () "," no description <br /><br />"
"android.net.LocalSocket.isBound () "," no description <br /><br />"
"android.net.LocalSocketAddress.getName () "," Retrieves the string name of this address <br /><br />"
"android.net.LocalSocketAddress.getNamespace () "," Returns the namespace used by this address. <br /><br />"
"android.net.MailTo.isMailTo (String url) "," Test to see if the given string is a mailto URL <br /><br />"
"android.net.MailTo.parse (String url) "," Parse and decode a mailto scheme string. <br /><br />"
"android.net.MailTo.getBody () "," Retrieve the body line from the parsed mailto URL. <br /><br />"
"android.net.MailTo.getTo () "," Retrieve the To address line from the parsed mailto URL. <br /><br />"
"android.net.MailTo.getCc () "," Retrieve the CC address line from the parsed mailto URL. <br /><br />"
"android.net.MailTo.getHeaders () "," Retrieve all the parsed email headers from the mailto URL <br /><br />"
"android.net.MailTo.getSubject () "," Retrieve the subject line from the parsed mailto URL. <br /><br />"
"android.net.MailTo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.Network.bindSocket (DatagramSocket socket) "," Binds the specified DatagramSocket to this Network. <br /><br />"
"android.net.Network.getSocketFactory () "," Returns a SocketFactory bound to this network. <br /><br />"
"android.net.Network.getAllByName (String host) "," Operates the same as InetAddress.getAllByName except that host resolution is done on this network. <br /><br />"
"android.net.Network.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.net.Network.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.net.Network.getByName (String host) "," Operates the same as InetAddress.getByName except that host resolution is done on this network. <br /><br />"
"android.net.Network.bindSocket (Socket socket) "," Binds the specified Socket to this Network. <br /><br />"
"android.net.Network.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.net.Network.openConnection (URL url) "," Opens the specified URL on this Network, such that all traffic will be sent on this Network. <br /><br />"
"android.net.Network.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.net.Network.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.NetworkCapabilities.getLinkUpstreamBandwidthKbps () "," Retrieves the upstream bandwidth for this network in Kbps. <br /><br />"
"android.net.NetworkCapabilities.hasTransport (int transportType) "," Tests for the presence of a transport on this instance. <br /><br />"
"android.net.NetworkCapabilities.hasCapability (int capability) "," Tests for the presence of a capabilitity on this instance. <br /><br />"
"android.net.NetworkCapabilities.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.net.NetworkCapabilities.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.net.NetworkCapabilities.getLinkDownstreamBandwidthKbps () "," Retrieves the downstream bandwidth for this network in Kbps. <br /><br />"
"android.net.NetworkCapabilities.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.net.NetworkCapabilities.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.net.NetworkCapabilities.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.NetworkInfo.isRoaming () "," Indicates whether the device is currently roaming on this network. <br /><br />"
"android.net.NetworkInfo.isConnectedOrConnecting () "," Indicates whether network connectivity exists or is in the process of being established. <br /><br />"
"android.net.NetworkInfo.getState () "," Reports the current coarse-grained state of the network. <br /><br />"
"android.net.NetworkInfo.getType () "," Reports the type of network to which the info in this NetworkInfo pertains. <br /><br />"
"android.net.NetworkInfo.isConnected () "," Indicates whether network connectivity exists and it is possible to establish connections and pass data. <br /><br />"
"android.net.NetworkInfo.getSubtype () "," Return a network-type-specific integer describing the subtype of the network. <br /><br />"
"android.net.NetworkInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.NetworkInfo.isAvailable () "," Indicates whether network connectivity is possible. <br /><br />"
"android.net.NetworkInfo.getExtraInfo () "," Report the extra information about the network state, if any was provided by the lower networking layers. <br /><br />"
"android.net.NetworkInfo.isFailover () "," Indicates whether the current attempt to connect to the network resulted from the ConnectivityManager trying to fail over to this network following a disconnect from another network. <br /><br />"
"android.net.NetworkInfo.getReason () "," Report the reason an attempt to establish connectivity failed, if one is available. <br /><br />"
"android.net.NetworkInfo.getTypeName () "," Return a human-readable name describe the type of the network, for example 'WIFI' or 'MOBILE'. <br /><br />"
"android.net.NetworkInfo.getSubtypeName () "," Return a human-readable name describing the subtype of the network. <br /><br />"
"android.net.NetworkInfo.getDetailedState () "," Reports the current fine-grained state of the network. <br /><br />"
"android.net.NetworkRequest.Builder.setNetworkSpecifier (String networkSpecifier) "," Sets the optional bearer specific network specifier. <br /><br />"
"android.net.NetworkRequest.Builder.addCapability (int capability) "," Add the given capability requirement to this builder. <br /><br />"
"android.net.NetworkRequest.Builder.removeCapability (int capability)   Removes  (if found) "," Removes (if found) the given capability from this builder instance. <br /><br />"
"android.net.NetworkRequest.Builder.removeTransportType (int transportType)   Removes  (if found) "," Removes (if found) the given transport from this builder instance. <br /><br />"
"android.net.NetworkRequest.Builder.build () "," Build NetworkRequest give the current set of capabilities. <br /><br />"
"android.net.NetworkRequest.Builder.addTransportType (int transportType) "," Adds the given transport requirement to this builder. <br /><br />"
"android.net.NetworkRequest.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.net.NetworkRequest.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.net.NetworkRequest.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.net.NetworkRequest.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.net.NetworkRequest.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.nsd.NsdManager.DiscoveryListener.onDiscoveryStopped (String serviceType) "," no description <br /><br />"
"android.net.nsd.NsdManager.DiscoveryListener.onStopDiscoveryFailed (String serviceType, int errorCode) "," no description <br /><br />"
"android.net.nsd.NsdManager.DiscoveryListener.onServiceLost (NsdServiceInfo serviceInfo) "," no description <br /><br />"
"android.net.nsd.NsdManager.DiscoveryListener.onServiceFound (NsdServiceInfo serviceInfo) "," no description <br /><br />"
"android.net.nsd.NsdManager.DiscoveryListener.onDiscoveryStarted (String serviceType) "," no description <br /><br />"
"android.net.nsd.NsdManager.DiscoveryListener.onStartDiscoveryFailed (String serviceType, int errorCode) "," no description <br /><br />"
"android.net.nsd.NsdManager.discoverServices (String serviceType, int protocolType, NsdManager.DiscoveryListener listener) "," Initiate service discovery to browse for instances of a service type. <br /><br />"
"android.net.nsd.NsdManager.registerService (NsdServiceInfo serviceInfo, int protocolType, NsdManager.RegistrationListener listener) "," Register a service to be discovered by other services. <br /><br />"
"android.net.nsd.NsdManager.unregisterService (NsdManager.RegistrationListener listener)   Unregister a service registered through registerService (NsdServiceInfo, int, NsdManager.RegistrationListener) "," Unregister a service registered through registerService(NsdServiceInfo, int, NsdManager.RegistrationListener). <br /><br />"
"android.net.nsd.NsdManager.stopServiceDiscovery (NsdManager.DiscoveryListener listener)   Stop service discovery initiated with discoverServices (String, int, NsdManager.DiscoveryListener) "," Stop service discovery initiated with discoverServices(String, int, NsdManager.DiscoveryListener). <br /><br />"
"android.net.nsd.NsdManager.resolveService (NsdServiceInfo serviceInfo, NsdManager.ResolveListener listener) "," Resolve a discovered service. <br /><br />"
"android.net.nsd.NsdManager.RegistrationListener.onUnregistrationFailed (NsdServiceInfo serviceInfo, int errorCode) "," no description <br /><br />"
"android.net.nsd.NsdManager.RegistrationListener.onServiceUnregistered (NsdServiceInfo serviceInfo) "," no description <br /><br />"
"android.net.nsd.NsdManager.RegistrationListener.onRegistrationFailed (NsdServiceInfo serviceInfo, int errorCode) "," no description <br /><br />"
"android.net.nsd.NsdManager.RegistrationListener.onServiceRegistered (NsdServiceInfo serviceInfo) "," no description <br /><br />"
"android.net.nsd.NsdManager.ResolveListener.onServiceResolved (NsdServiceInfo serviceInfo) "," no description <br /><br />"
"android.net.nsd.NsdManager.ResolveListener.onResolveFailed (NsdServiceInfo serviceInfo, int errorCode) "," no description <br /><br />"
"android.net.nsd.NsdServiceInfo.getServiceType () "," Get the service type <br /><br />"
"android.net.nsd.NsdServiceInfo.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.net.nsd.NsdServiceInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.nsd.NsdServiceInfo.getAttributes () "," Retrive attributes as a map of String keys to byte[] values. <br /><br />"
"android.net.nsd.NsdServiceInfo.setHost (InetAddress s) "," Set the host address <br /><br />"
"android.net.nsd.NsdServiceInfo.setAttribute (String key, String value) "," Add a service attribute as a key/value pair. <br /><br />"
"android.net.nsd.NsdServiceInfo.getHost () "," Get the host address. <br /><br />"
"android.net.nsd.NsdServiceInfo.setPort (int p) "," Set port number <br /><br />"
"android.net.nsd.NsdServiceInfo.setServiceName (String s) "," Set the service name <br /><br />"
"android.net.nsd.NsdServiceInfo.getPort () "," Get port number. <br /><br />"
"android.net.nsd.NsdServiceInfo.removeAttribute (String key) "," Remove an attribute by key <br /><br />"
"android.net.nsd.NsdServiceInfo.setServiceType (String s) "," Set the service type <br /><br />"
"android.net.nsd.NsdServiceInfo.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface <br /><br />"
"android.net.nsd.NsdServiceInfo.getServiceName () "," Get the service name <br /><br />"
"android.net.Proxy.getDefaultHost () "," This method was deprecated in API level 11. Use standard java vm proxy values to find the host, port and exclusion list. This call ignores the exclusion list and no longer reports only mobile-data apn-based proxy values. <br /><br />"
"android.net.Proxy.getDefaultPort () "," This method was deprecated in API level 11. Use standard java vm proxy values to find the host, port and exclusion list. This call ignores the exclusion list and no longer reports only mobile-data apn-based proxy values. <br /><br />"
"android.net.Proxy.getHost (Context ctx) "," This method was deprecated in API level 11. Use standard java vm proxy values to find the host, port and exclusion list. This call ignores the exclusion list. <br /><br />"
"android.net.Proxy.getPort (Context ctx) "," This method was deprecated in API level 11. Use standard java vm proxy values to find the host, port and exclusion list. This call ignores the exclusion list. <br /><br />"
"android.net.ProxyInfo.getPacFileUrl () "," Returns the URL of the current PAC script or null if there is no PAC script. <br /><br />"
"android.net.ProxyInfo.buildDirectProxy (String host, int port, List< String> exclList) "," Constructs a ProxyInfo object that points at a Direct proxy on the specified host and port. <br /><br />"
"android.net.ProxyInfo.getExclusionList () "," When configured to use a Direct Proxy this returns the list of hosts for which the proxy is ignored. <br /><br />"
"android.net.ProxyInfo.buildDirectProxy (String host, int port) "," Constructs a ProxyInfo object that points at a Direct proxy on the specified host and port. <br /><br />"
"android.net.ProxyInfo.getHost () "," When configured to use a Direct Proxy this returns the host of the proxy. <br /><br />"
"android.net.ProxyInfo.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.net.ProxyInfo.getPort () "," When configured to use a Direct Proxy this returns the port of the proxy <br /><br />"
"android.net.ProxyInfo.buildPacProxy (Uri pacUri) "," Construct a ProxyInfo that will download and run the PAC script at the specified URL. <br /><br />"
"android.net.ProxyInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.ProxyInfo.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.net.PskKeyManager.chooseClientKeyIdentity (String identityHint, SSLEngine engine) "," Gets the PSK identity to report to the server to help agree on the PSK for the provided engine. <br /><br />"
"android.net.PskKeyManager.getKey (String identityHint, String identity, SSLEngine engine) "," Gets the PSK to use for the provided engine. <br /><br />"
"android.net.PskKeyManager.chooseServerKeyIdentityHint (SSLEngine engine) "," Gets the PSK identity hint to report to the client to help agree on the PSK for the provided engine. <br /><br />"
"android.net.PskKeyManager.chooseServerKeyIdentityHint (Socket socket) "," Gets the PSK identity hint to report to the client to help agree on the PSK for the provided socket. <br /><br />"
"android.net.PskKeyManager.chooseClientKeyIdentity (String identityHint, Socket socket) "," Gets the PSK identity to report to the server to help agree on the PSK for the provided socket. <br /><br />"
"android.net.PskKeyManager.getKey (String identityHint, String identity, Socket socket) "," Gets the PSK to use for the provided socket. <br /><br />"
"android.net.RouteInfo.isDefaultRoute ()   Indicates if this route is a default route  (ie, has no destination specified) "," Indicates if this route is a default route (ie, has no destination specified). <br /><br />"
"android.net.RouteInfo.equals (Object obj) "," Compares this RouteInfo object against the specified object and indicates if they are equal. <br /><br />"
"android.net.RouteInfo.getInterface () "," Retrieves the interface used for this route if specified, else null. <br /><br />"
"android.net.RouteInfo.getGateway () "," Retrieves the gateway or next hop InetAddress for this route. <br /><br />"
"android.net.RouteInfo.hashCode () "," Returns a hashcode for this RouteInfo object. <br /><br />"
"android.net.RouteInfo.getDestination () "," Retrieves the destination address and prefix length in the form of an IpPrefix. <br /><br />"
"android.net.RouteInfo.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface <br /><br />"
"android.net.RouteInfo.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.net.RouteInfo.matches (InetAddress destination) "," Determines whether the destination and prefix of this route includes the specified address. <br /><br />"
"android.net.RouteInfo.toString () "," Returns a human-readable description of this object. <br /><br />"
"android.net.rtp.AudioCodec.getCodec (int type, String rtpmap, String fmtp) "," Creates an AudioCodec according to the given configuration. <br /><br />"
"android.net.rtp.AudioCodec.getCodecs () "," Returns system supported audio codecs. <br /><br />"
"android.net.rtp.AudioGroup.clear () "," Removes every AudioStream in this group. <br /><br />"
"android.net.rtp.AudioGroup.setMode (int mode) "," Changes the current mode. <br /><br />"
"android.net.rtp.AudioGroup.getStreams () "," Returns the AudioStreams in this group. <br /><br />"
"android.net.rtp.AudioGroup.sendDtmf (int event) "," Sends a DTMF digit to every AudioStream in this group. <br /><br />"
"android.net.rtp.AudioGroup.getMode () "," Returns the current mode. <br /><br />"
"android.net.rtp.AudioStream.getCodec () "," Returns the AudioCodec, or null if it is not set. <br /><br />"
"android.net.rtp.AudioStream.setCodec (AudioCodec codec) "," Sets the AudioCodec. <br /><br />"
"android.net.rtp.AudioStream.getDtmfType ()   Returns the RTP payload type for dual-tone multi-frequency  (DTMF) "," Returns the RTP payload type for dual-tone multi-frequency (DTMF) digits, or -1 if it is not enabled. <br /><br />"
"android.net.rtp.AudioStream.isBusy () "," Returns true if the stream has already joined an AudioGroup. <br /><br />"
"android.net.rtp.AudioStream.setDtmfType (int type)   Sets the RTP payload type for dual-tone multi-frequency  (DTMF) "," Sets the RTP payload type for dual-tone multi-frequency (DTMF) digits. <br /><br />"
"android.net.rtp.AudioStream.join (AudioGroup group) "," Joins an AudioGroup. <br /><br />"
"android.net.rtp.AudioStream.getGroup () "," Returns the joined AudioGroup. <br /><br />"
"android.net.rtp.RtpStream.associate (InetAddress address, int port) "," Associates with a remote host. <br /><br />"
"android.net.rtp.RtpStream.isBusy () "," Returns true if the stream is busy. <br /><br />"
"android.net.rtp.RtpStream.setMode (int mode) "," Changes the current mode. <br /><br />"
"android.net.rtp.RtpStream.getRemoteAddress () "," Returns the network address of the remote host or null if the stream is not associated. <br /><br />"
"android.net.rtp.RtpStream.getLocalPort () "," Returns the network port of the local host. <br /><br />"
"android.net.rtp.RtpStream.release () "," Releases allocated resources. <br /><br />"
"android.net.rtp.RtpStream.getRemotePort () "," Returns the network port of the remote host or -1 if the stream is not associated. <br /><br />"
"android.net.rtp.RtpStream.getMode () "," Returns the current mode. <br /><br />"
"android.net.rtp.RtpStream.getLocalAddress () "," Returns the network address of the local host. <br /><br />"
"android.net.sip.SipAudioCall.setListener (SipAudioCall.Listener listener, boolean callbackImmediately) "," Sets the listener to listen to the audio call events. <br /><br />"
"android.net.sip.SipAudioCall.answerCall (int timeout) "," Answers a call. <br /><br />"
"android.net.sip.SipAudioCall.getState () "," Gets the state of the SipSession that carries this call. <br /><br />"
"android.net.sip.SipAudioCall.close () "," Closes this object. <br /><br />"
"android.net.sip.SipAudioCall.sendDtmf (int code, Message result) "," Sends a DTMF code. <br /><br />"
"android.net.sip.SipAudioCall.isOnHold () "," Checks if the call is on hold. <br /><br />"
"android.net.sip.SipAudioCall.getPeerProfile () "," Gets the peer's SIP profile. <br /><br />"
"android.net.sip.SipAudioCall.isInCall () "," Checks if the call is established. <br /><br />"
"android.net.sip.SipAudioCall.setListener (SipAudioCall.Listener listener) "," Sets the listener to listen to the audio call events. <br /><br />"
"android.net.sip.SipAudioCall.sendDtmf (int code) "," Sends a DTMF code. <br /><br />"
"android.net.sip.SipAudioCall.continueCall (int timeout) "," Continues a call that's on hold. <br /><br />"
"android.net.sip.SipAudioCall.attachCall (SipSession session, String sessionDescription) "," Attaches an incoming call to this call object. <br /><br />"
"android.net.sip.SipAudioCall.getLocalProfile () "," Gets the local SIP profile. <br /><br />"
"android.net.sip.SipAudioCall.toggleMute () "," Toggles mute. <br /><br />"
"android.net.sip.SipAudioCall.makeCall (SipProfile peerProfile, SipSession sipSession, int timeout) "," Initiates an audio call to the specified profile. <br /><br />"
"android.net.sip.SipAudioCall.setSpeakerMode (boolean speakerMode) "," Puts the device to speaker mode. <br /><br />"
"android.net.sip.SipAudioCall.isMuted () "," Checks if the call is muted. <br /><br />"
"android.net.sip.SipAudioCall.startAudio () "," Starts the audio for the established call. <br /><br />"
"android.net.sip.SipAudioCall.endCall () "," Ends a call. <br /><br />"
"android.net.sip.SipAudioCall.holdCall (int timeout) "," Puts a call on hold. <br /><br />"
"android.net.sip.SipAudioCall.Listener.onError (SipAudioCall call, int errorCode, String errorMessage) "," Called when an error occurs. <br /><br />"
"android.net.sip.SipAudioCall.Listener.onCallBusy (SipAudioCall call) "," Called when the peer is busy during session initialization. <br /><br />"
"android.net.sip.SipAudioCall.Listener.onCallEnded (SipAudioCall call) "," Called when the session is terminated. <br /><br />"
"android.net.sip.SipAudioCall.Listener.onCallHeld (SipAudioCall call) "," Called when the call is on hold. <br /><br />"
"android.net.sip.SipAudioCall.Listener.onRinging (SipAudioCall call, SipProfile caller) "," Called when a new call comes in. <br /><br />"
"android.net.sip.SipAudioCall.Listener.onCallEstablished (SipAudioCall call) "," Called when the session is established. <br /><br />"
"android.net.sip.SipAudioCall.Listener.onReadyToCall (SipAudioCall call) "," Called when the call object is ready to make another call. <br /><br />"
"android.net.sip.SipAudioCall.Listener.onCalling (SipAudioCall call) "," Called when a request is sent out to initiate a new call. <br /><br />"
"android.net.sip.SipAudioCall.Listener.onRingingBack (SipAudioCall call) "," Called when a RINGING response is received for the INVITE request sent. <br /><br />"
"android.net.sip.SipAudioCall.Listener.onChanged (SipAudioCall call) "," Called when an event occurs and the corresponding callback is not overridden. <br /><br />"
"android.net.sip.SipErrorCode.toString (int errorCode) "," no description <br /><br />"
"android.net.sip.SipManager.isIncomingCallIntent (Intent intent) "," Checks if the intent is an incoming call broadcast intent. <br /><br />"
"android.net.sip.SipManager.makeAudioCall (String localProfileUri, String peerProfileUri, SipAudioCall.Listener listener, int timeout) "," Creates a SipAudioCall to make an audio call. <br /><br />"
"android.net.sip.SipManager.getCallId (Intent incomingCallIntent) "," Gets the call ID from the specified incoming call broadcast intent. <br /><br />"
"android.net.sip.SipManager.makeAudioCall (SipProfile localProfile, SipProfile peerProfile, SipAudioCall.Listener listener, int timeout) "," Creates a SipAudioCall to make a call. <br /><br />"
"android.net.sip.SipManager.register (SipProfile localProfile, int expiryTime, SipRegistrationListener listener) "," Manually registers the profile to the corresponding SIP provider for receiving calls. <br /><br />"
"android.net.sip.SipManager.newInstance (Context context) "," Creates a manager instance. <br /><br />"
"android.net.sip.SipManager.isRegistered (String localProfileUri)   Checks if the SIP service has successfully registered the profile to the SIP provider  (specified in the profile) "," Checks if the SIP service has successfully registered the profile to the SIP provider (specified in the profile) for receiving calls. <br /><br />"
"android.net.sip.SipManager.createSipSession (SipProfile localProfile, SipSession.Listener listener) "," Creates a SipSession with the specified profile. <br /><br />"
"android.net.sip.SipManager.isVoipSupported (Context context) "," Returns true if the system supports SIP-based VOIP API. <br /><br />"
"android.net.sip.SipManager.unregister (SipProfile localProfile, SipRegistrationListener listener) "," Manually unregisters the profile from the corresponding SIP provider for stop receiving further calls. <br /><br />"
"android.net.sip.SipManager.takeAudioCall (Intent incomingCallIntent, SipAudioCall.Listener listener) "," Creates a SipAudioCall to take an incoming call. <br /><br />"
"android.net.sip.SipManager.isSipWifiOnly (Context context) "," Returns true if SIP is only available on WIFI. <br /><br />"
"android.net.sip.SipManager.isApiSupported (Context context) "," Returns true if the SIP API is supported by the system. <br /><br />"
"android.net.sip.SipManager.getOfferSessionDescription (Intent incomingCallIntent) "," Gets the offer session description from the specified incoming call broadcast intent. <br /><br />"
"android.net.sip.SipManager.setRegistrationListener (String localProfileUri, SipRegistrationListener listener) "," Sets the listener to listen to registration events. <br /><br />"
"android.net.sip.SipManager.isOpened (String localProfileUri) "," Checks if the specified profile is opened in the SIP service for making and/or receiving calls. <br /><br />"
"android.net.sip.SipManager.open (SipProfile localProfile) "," Opens the profile for making generic SIP calls. <br /><br />"
"android.net.sip.SipManager.getSessionFor (Intent incomingCallIntent) "," Gets the SipSession that handles the incoming call. <br /><br />"
"android.net.sip.SipManager.close (String localProfileUri) "," Closes the specified profile to not make/receive calls. <br /><br />"
"android.net.sip.SipManager.open (SipProfile localProfile, PendingIntent incomingCallPendingIntent, SipRegistrationListener listener) "," Opens the profile for making calls and/or receiving generic SIP calls. <br /><br />"
"android.net.sip.SipProfile.Builder.setProfileName (String name) "," Sets the name of the profile. <br /><br />"
"android.net.sip.SipProfile.Builder.setOutboundProxy (String outboundProxy) "," Sets the outbound proxy of the SIP server. <br /><br />"
"android.net.sip.SipProfile.Builder.setPort (int port) "," Sets the port number of the server. <br /><br />"
"android.net.sip.SipProfile.Builder.setAutoRegistration (boolean flag) "," Sets the auto. <br /><br />"
"android.net.sip.SipProfile.Builder.setAuthUserName (String name) "," Sets the username used for authentication. <br /><br />"
"android.net.sip.SipProfile.Builder.setProtocol (String protocol) "," Sets the protocol used to connect to the SIP server. <br /><br />"
"android.net.sip.SipProfile.Builder.setDisplayName (String displayName) "," Sets the display name of the user. <br /><br />"
"android.net.sip.SipProfile.Builder.setSendKeepAlive (boolean flag) "," Sets the send keep-alive flag. <br /><br />"
"android.net.sip.SipProfile.Builder.build () "," Builds and returns the SIP profile object. <br /><br />"
"android.net.sip.SipProfile.Builder.setPassword (String password) "," Sets the password of the SIP account <br /><br />"
"android.net.sip.SipProfile.getAutoRegistration () "," Gets the flag of 'Auto Registration'. <br /><br />"
"android.net.sip.SipProfile.getPassword () "," Gets the password. <br /><br />"
"android.net.sip.SipProfile.getProtocol () "," Gets the protocol used to connect to the server. <br /><br />"
"android.net.sip.SipProfile.getProxyAddress () "," Gets the network address of the server outbound proxy. <br /><br />"
"android.net.sip.SipProfile.getDisplayName () "," Gets the display name of the user. <br /><br />"
"android.net.sip.SipProfile.getProfileName ()   Gets the  (user-defined) "," Gets the (user-defined) name of the profile. <br /><br />"
"android.net.sip.SipProfile.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.net.sip.SipProfile.getSendKeepAlive () "," Gets the flag of 'Sending keep-alive'. <br /><br />"
"android.net.sip.SipProfile.getUserName () "," Gets the username. <br /><br />"
"android.net.sip.SipProfile.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.net.sip.SipProfile.getAuthUserName () "," Gets the username for authentication. <br /><br />"
"android.net.sip.SipProfile.getPort () "," Gets the port number of the SIP server. <br /><br />"
"android.net.sip.SipProfile.getSipDomain () "," Gets the SIP domain. <br /><br />"
"android.net.sip.SipProfile.getUriString () "," Gets the SIP URI string of this profile. <br /><br />"
"android.net.sip.SipRegistrationListener.onRegistering (String localProfileUri) "," Called when a registration request is sent. <br /><br />"
"android.net.sip.SipRegistrationListener.onRegistrationFailed (String localProfileUri, int errorCode, String errorMessage) "," Called when the registration failed. <br /><br />"
"android.net.sip.SipRegistrationListener.onRegistrationDone (String localProfileUri, long expiryTime) "," Called when the registration succeeded. <br /><br />"
"android.net.sip.SipSession.Listener.onRegistrationDone (SipSession session, int duration) "," Called when registration is successfully done. <br /><br />"
"android.net.sip.SipSession.Listener.onCallBusy (SipSession session) "," Called when the peer is busy during session initialization. <br /><br />"
"android.net.sip.SipSession.Listener.onRingingBack (SipSession session) "," Called when a RINGING response is received for the INVITE request sent <br /><br />"
"android.net.sip.SipSession.Listener.onRinging (SipSession session, SipProfile caller, String sessionDescription) "," Called when an INVITE request is received. <br /><br />"
"android.net.sip.SipSession.Listener.onRegistering (SipSession session) "," Called when a registration request is sent. <br /><br />"
"android.net.sip.SipSession.Listener.onRegistrationTimeout (SipSession session) "," Called when the registration gets timed out. <br /><br />"
"android.net.sip.SipSession.Listener.onCalling (SipSession session) "," Called when an INVITE request is sent to initiate a new call. <br /><br />"
"android.net.sip.SipSession.Listener.onCallEstablished (SipSession session, String sessionDescription) "," Called when the session is established. <br /><br />"
"android.net.sip.SipSession.Listener.onCallChangeFailed (SipSession session, int errorCode, String errorMessage) "," Called when an error occurs during session modification negotiation. <br /><br />"
"android.net.sip.SipSession.Listener.onRegistrationFailed (SipSession session, int errorCode, String errorMessage) "," Called when the registration fails. <br /><br />"
"android.net.sip.SipSession.Listener.onError (SipSession session, int errorCode, String errorMessage) "," Called when an error occurs during session initialization and termination. <br /><br />"
"android.net.sip.SipSession.Listener.onCallEnded (SipSession session) "," Called when the session is terminated. <br /><br />"
"android.net.sip.SipSession.State.toString (int state) "," Converts the state to string. <br /><br />"
"android.net.SSLCertificateSocketFactory.createSocket (String host, int port)   Creates a new socket which is connected to the remote host specified by the parameters host and port. This method verifies the peer's certificate hostname after connecting  (unless created with getInsecure (int, SSLSessionCache)) "," Creates a new socket which is connected to the remote host specified by the parameters host and port. This method verifies the peer's certificate hostname after connecting (unless created with getInsecure(int, SSLSessionCache)). <br /><br />"
"android.net.SSLCertificateSocketFactory.setKeyManagers (KeyManager[] keyManagers) "," Sets the KeyManagers to be used for connections made by this factory. <br /><br />"
"android.net.SSLCertificateSocketFactory.createSocket (InetAddress addr, int port, InetAddress localAddr, int localPort) "," Creates a new socket which is connected to the remote host specified by the InetAddress address. Warning: Hostname verification is not performed with this method. <br /><br />"
"android.net.SSLCertificateSocketFactory.getInsecure (int handshakeTimeoutMillis, SSLSessionCache cache) "," Returns a new instance of a socket factory with all SSL security checks disabled, using an optional handshake timeout and SSL session cache. <br /><br />"
"android.net.SSLCertificateSocketFactory.createSocket (String host, int port, InetAddress localAddr, int localPort)   Creates a new socket which is connected to the remote host specified by the parameters host and port. This method verifies the peer's certificate hostname after connecting  (unless created with getInsecure (int, SSLSessionCache)) "," Creates a new socket which is connected to the remote host specified by the parameters host and port. This method verifies the peer's certificate hostname after connecting (unless created with getInsecure(int, SSLSessionCache)). <br /><br />"
"android.net.SSLCertificateSocketFactory.setUseSessionTickets (Socket socket, boolean useSessionTickets) "," Enables session ticket support on the given socket. <br /><br />"
"android.net.SSLCertificateSocketFactory.createSocket (InetAddress addr, int port) "," Creates a new socket which is connected to the remote host specified by the InetAddress host. Warning: Hostname verification is not performed with this method. <br /><br />"
"android.net.SSLCertificateSocketFactory.setNpnProtocols (byte[][] npnProtocols)   Sets the Next Protocol Negotiation  (NPN) "," Sets the Next Protocol Negotiation (NPN) protocols that this peer is interested in. <br /><br />"
"android.net.SSLCertificateSocketFactory.setHostname (Socket socket, String hostName)   Turns on Server Name Indication  (SNI) "," Turns on Server Name Indication (SNI) on a given socket. <br /><br />"
"android.net.SSLCertificateSocketFactory.getHttpSocketFactory (int handshakeTimeoutMillis, SSLSessionCache cache)    This method is deprecated. Use getDefault () "," This method is deprecated. Use getDefault() along with a HttpsURLConnection instead. The Apache HTTP client is no longer maintained and may be removed in a future release. Please visit this webpage for further details. <br /><br />"
"android.net.SSLCertificateSocketFactory.setTrustManagers (TrustManager[] trustManager) "," Sets the TrustManagers to be used for connections made by this factory. <br /><br />"
"android.net.SSLCertificateSocketFactory.createSocket (Socket k, String host, int port, boolean close)   Creates an SSLSocket over the specified socket that is connected to the specified host at the specified port. This method verifies the peer's certificate hostname after connecting  (unless created with getInsecure (int, SSLSessionCache)) "," Creates an SSLSocket over the specified socket that is connected to the specified host at the specified port. This method verifies the peer's certificate hostname after connecting (unless created with getInsecure(int, SSLSessionCache)). <br /><br />"
"android.net.SSLCertificateSocketFactory.getDefaultCipherSuites () "," Returns the names of the cipher suites that are enabled by default. <br /><br />"
"android.net.SSLCertificateSocketFactory.getDefault (int handshakeTimeoutMillis, SSLSessionCache cache) "," Returns a new socket factory instance with an optional handshake timeout and SSL session cache. <br /><br />"
"android.net.SSLCertificateSocketFactory.createSocket () "," Creates a new socket which is not connected to any remote host. <br /><br />"
"android.net.SSLCertificateSocketFactory.getDefault (int handshakeTimeoutMillis) "," Returns a new socket factory instance with an optional handshake timeout. <br /><br />"
"android.net.SSLCertificateSocketFactory.getNpnSelectedProtocol (Socket socket)   Returns the Next Protocol Negotiation  (NPN) "," Returns the Next Protocol Negotiation (NPN) protocol selected by client and server, or null if no protocol was negotiated. <br /><br />"
"android.net.SSLCertificateSocketFactory.getSupportedCipherSuites () "," Returns the names of the cipher suites that are supported and could be enabled for an SSL connection. <br /><br />"
"android.net.TrafficStats.incrementOperationCount (int operationCount) "," Increment count of network operations performed under the accounting tag currently active on the calling thread. <br /><br />"
"android.net.TrafficStats.getUidRxBytes (int uid) "," Return number of bytes received by the given UID since device boot. <br /><br />"
"android.net.TrafficStats.getMobileRxBytes () "," Return number of bytes received across mobile networks since device boot. <br /><br />"
"android.net.TrafficStats.getUidRxPackets (int uid) "," Return number of packets received by the given UID since device boot. <br /><br />"
"android.net.TrafficStats.getTotalTxPackets () "," Return number of packets transmitted since device boot. <br /><br />"
"android.net.TrafficStats.incrementOperationCount (int tag, int operationCount) "," Increment count of network operations performed under the given accounting tag. <br /><br />"
"android.net.TrafficStats.getTotalRxBytes () "," Return number of bytes received since device boot. <br /><br />"
"android.net.TrafficStats.getUidUdpTxPackets (int uid) "," This method was deprecated in API level 18. Starting in JELLY_BEAN_MR2, transport layer statistics are no longer available, and will always return UNSUPPORTED. <br /><br />"
"android.net.TrafficStats.getUidTcpTxBytes (int uid) "," This method was deprecated in API level 18. Starting in JELLY_BEAN_MR2, transport layer statistics are no longer available, and will always return UNSUPPORTED. <br /><br />"
"android.net.TrafficStats.clearThreadStatsTag () "," Clear any active tag set to account Socket traffic originating from the current thread. <br /><br />"
"android.net.TrafficStats.getUidTcpRxSegments (int uid) "," This method was deprecated in API level 18. Starting in JELLY_BEAN_MR2, transport layer statistics are no longer available, and will always return UNSUPPORTED. <br /><br />"
"android.net.TrafficStats.getUidTcpTxSegments (int uid) "," This method was deprecated in API level 18. Starting in JELLY_BEAN_MR2, transport layer statistics are no longer available, and will always return UNSUPPORTED. <br /><br />"
"android.net.TrafficStats.getUidUdpRxPackets (int uid) "," This method was deprecated in API level 18. Starting in JELLY_BEAN_MR2, transport layer statistics are no longer available, and will always return UNSUPPORTED. <br /><br />"
"android.net.TrafficStats.getTotalTxBytes () "," Return number of bytes transmitted since device boot. <br /><br />"
"android.net.TrafficStats.getMobileTxPackets () "," Return number of packets transmitted across mobile networks since device boot. <br /><br />"
"android.net.TrafficStats.getUidTxPackets (int uid) "," Return number of packets transmitted by the given UID since device boot. <br /><br />"
"android.net.TrafficStats.getMobileTxBytes () "," Return number of bytes transmitted across mobile networks since device boot. <br /><br />"
"android.net.TrafficStats.getUidUdpRxBytes (int uid) "," This method was deprecated in API level 18. Starting in JELLY_BEAN_MR2, transport layer statistics are no longer available, and will always return UNSUPPORTED. <br /><br />"
"android.net.TrafficStats.getUidTxBytes (int uid) "," Return number of bytes transmitted by the given UID since device boot. <br /><br />"
"android.net.TrafficStats.getMobileRxPackets () "," Return number of packets received across mobile networks since device boot. <br /><br />"
"android.net.TrafficStats.tagSocket (Socket socket) "," Tag the given Socket with any statistics parameters active for the current thread. <br /><br />"
"android.net.TrafficStats.getTotalRxPackets () "," Return number of packets received since device boot. <br /><br />"
"android.net.TrafficStats.getUidTcpRxBytes (int uid) "," This method was deprecated in API level 18. Starting in JELLY_BEAN_MR2, transport layer statistics are no longer available, and will always return UNSUPPORTED. <br /><br />"
"android.net.TrafficStats.untagSocket (Socket socket) "," Remove any statistics parameters from the given Socket. <br /><br />"
"android.net.TrafficStats.getThreadStatsTag () "," Get the active tag used when accounting Socket traffic originating from the current thread. <br /><br />"
"android.net.TrafficStats.setThreadStatsTag (int tag) "," Set active tag to use when accounting Socket traffic originating from the current thread. <br /><br />"
"android.net.TrafficStats.getUidUdpTxBytes (int uid) "," This method was deprecated in API level 18. Starting in JELLY_BEAN_MR2, transport layer statistics are no longer available, and will always return UNSUPPORTED. <br /><br />"
"android.net.Uri.Builder.appendEncodedPath (String newSegment) "," Appends the given segment to the path. <br /><br />"
"android.net.Uri.Builder.appendQueryParameter (String key, String value) "," Encodes the key and value and then appends the parameter to the query string. <br /><br />"
"android.net.Uri.Builder.query (String query) "," Encodes and sets the query. <br /><br />"
"android.net.Uri.Builder.encodedFragment (String fragment) "," Sets the previously encoded fragment. <br /><br />"
"android.net.Uri.Builder.scheme (String scheme) "," Sets the scheme. <br /><br />"
"android.net.Uri.Builder.path (String path) "," Sets the path. <br /><br />"
"android.net.Uri.Builder.appendPath (String newSegment) "," Encodes the given segment and appends it to the path. <br /><br />"
"android.net.Uri.Builder.authority (String authority) "," Encodes and sets the authority. <br /><br />"
"android.net.Uri.Builder.opaquePart (String opaquePart) "," Encodes and sets the given opaque scheme-specific-part. <br /><br />"
"android.net.Uri.Builder.encodedAuthority (String authority) "," Sets the previously encoded authority. <br /><br />"
"android.net.Uri.Builder.build () "," Constructs a Uri with the current attributes. <br /><br />"
"android.net.Uri.Builder.clearQuery () "," Clears the the previously set query. <br /><br />"
"android.net.Uri.Builder.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.Uri.Builder.encodedQuery (String query) "," Sets the previously encoded query. <br /><br />"
"android.net.Uri.Builder.encodedPath (String path) "," Sets the previously encoded path. <br /><br />"
"android.net.Uri.Builder.encodedOpaquePart (String opaquePart) "," Sets the previously encoded opaque scheme-specific-part. <br /><br />"
"android.net.Uri.Builder.fragment (String fragment) "," Encodes and sets the fragment. <br /><br />"
"android.net.Uri.getQueryParameters (String key) "," Searches the query string for parameter values with the given key. <br /><br />"
"android.net.Uri.encode (String s, String allow) "," Encodes characters in the given string as '%'-escaped octets using the UTF-8 scheme. <br /><br />"
"android.net.Uri.compareTo (Uri other) "," Compares the string representation of this Uri with that of another. <br /><br />"
"android.net.Uri.getUserInfo () "," Gets the decoded user information from the authority. <br /><br />"
"android.net.Uri.getEncodedPath () "," Gets the encoded path. <br /><br />"
"android.net.Uri.getLastPathSegment () "," Gets the decoded last segment in the path. <br /><br />"
"android.net.Uri.getBooleanQueryParameter (String key, boolean defaultValue) "," Searches the query string for the first value with the given key and interprets it as a boolean value. <br /><br />"
"android.net.Uri.getEncodedSchemeSpecificPart () "," Gets the scheme-specific part of this URI, i.e. everything between the scheme separator ':' and the fragment separator '#'. <br /><br />"
"android.net.Uri.getQueryParameter (String key) "," Searches the query string for the first value with the given key. <br /><br />"
"android.net.Uri.hashCode ()   Hashes the encoded string represention of this Uri consistently with equals (Object) "," Hashes the encoded string represention of this Uri consistently with equals(Object). <br /><br />"
"android.net.Uri.fromFile (File file) "," Creates a Uri from a file. <br /><br />"
"android.net.Uri.getScheme () "," Gets the scheme of this URI. <br /><br />"
"android.net.Uri.decode (String s) "," Decodes '%'-escaped octets in the given string using the UTF-8 scheme. <br /><br />"
"android.net.Uri.writeToParcel (Parcel out, Uri uri) "," Writes a Uri to a Parcel. <br /><br />"
"android.net.Uri.toString () "," Returns the encoded string representation of this URI. <br /><br />"
"android.net.Uri.isAbsolute () "," Returns true if this URI is absolute, i.e. if it contains an explicit scheme. <br /><br />"
"android.net.Uri.getFragment () "," Gets the decoded fragment part of this URI, everything after the '#'. <br /><br />"
"android.net.Uri.isOpaque () "," Returns true if this URI is opaque like 'mailto:nobody@google.com'. <br /><br />"
"android.net.Uri.getQuery () "," Gets the decoded query component from this URI. <br /><br />"
"android.net.Uri.withAppendedPath (Uri baseUri, String pathSegment) "," Creates a new Uri by appending an already-encoded path segment to a base Uri. <br /><br />"
"android.net.Uri.getPort () "," Gets the port from the authority for this URI. <br /><br />"
"android.net.Uri.getSchemeSpecificPart () "," Gets the scheme-specific part of this URI, i.e. everything between the scheme separator ':' and the fragment separator '#'. <br /><br />"
"android.net.Uri.fromParts (String scheme, String ssp, String fragment) "," Creates an opaque Uri from the given components. <br /><br />"
"android.net.Uri.buildUpon () "," Constructs a new builder, copying the attributes from this Uri. <br /><br />"
"android.net.Uri.getAuthority () "," Gets the decoded authority part of this URI. <br /><br />"
"android.net.Uri.isHierarchical () "," Returns true if this URI is hierarchical like 'http://google.com'. <br /><br />"
"android.net.Uri.equals (Object o) "," Compares this Uri to another object for equality. <br /><br />"
"android.net.Uri.normalizeScheme () "," Return an equivalent URI with a lowercase scheme component. <br /><br />"
"android.net.Uri.isRelative () "," Returns true if this URI is relative, i.e. if it doesn't contain an explicit scheme. <br /><br />"
"android.net.Uri.getQueryParameterNames () "," Returns a set of the unique names of all query parameters. <br /><br />"
"android.net.Uri.getPath () "," Gets the decoded path. <br /><br />"
"android.net.Uri.getPathSegments () "," Gets the decoded path segments. <br /><br />"
"android.net.Uri.parse (String uriString) "," Creates a Uri which parses the given encoded URI string. <br /><br />"
"android.net.Uri.encode (String s) "," Encodes characters in the given string as '%'-escaped octets using the UTF-8 scheme. <br /><br />"
"android.net.Uri.getEncodedUserInfo () "," Gets the encoded user information from the authority. <br /><br />"
"android.net.Uri.getHost () "," Gets the encoded host from the authority for this URI. <br /><br />"
"android.net.Uri.getEncodedFragment () "," Gets the encoded fragment part of this URI, everything after the '#'. <br /><br />"
"android.net.Uri.getEncodedQuery () "," Gets the encoded query component from this URI. <br /><br />"
"android.net.Uri.getEncodedAuthority () "," Gets the encoded authority part of this URI. <br /><br />"
"android.net.UrlQuerySanitizer.getAllButWhitespaceLegal ()   Return a value sanitizer that allows everything except Nul  ('\0') characters, space  (' ') "," Return a value sanitizer that allows everything except Nul ('\0') characters, space (' '), and other whitespace characters. <br /><br />"
"android.net.UrlQuerySanitizer.setUnregisteredParameterValueSanitizer (UrlQuerySanitizer.ValueSanitizer sanitizer) "," Set the value sanitizer used when processing unregistered parameter values. <br /><br />"
"android.net.UrlQuerySanitizer.setAllowUnregisteredParamaters (boolean allowUnregisteredParamaters) "," Set whether or not unregistered parameters are allowed. <br /><br />"
"android.net.UrlQuerySanitizer.getSpaceLegal ()   Return a value sanitizer that does not allow any special characters except space  (' ') "," Return a value sanitizer that does not allow any special characters except space (' '). <br /><br />"
"android.net.UrlQuerySanitizer.getPreferFirstRepeatedParameter () "," Get whether or not the first occurrence of a repeated parameter is preferred. <br /><br />"
"android.net.UrlQuerySanitizer.parseQuery (String query) "," Parse a query. <br /><br />"
"android.net.UrlQuerySanitizer.getAmpAndSpaceLegal ()   Return a value sanitizer that does not allow any special characters except ampersand  ('&') and space  (' ') "," Return a value sanitizer that does not allow any special characters except ampersand ('&') and space (' '). <br /><br />"
"android.net.UrlQuerySanitizer.getAllIllegal () "," Return a value sanitizer that does not allow any special characters, and also does not allow script URLs. <br /><br />"
"android.net.UrlQuerySanitizer.getEffectiveValueSanitizer (String parameter) "," Get the effective value sanitizer for a parameter. <br /><br />"
"android.net.UrlQuerySanitizer.getParameterSet () "," Get a set of all of the parameters found in the sanitized query. <br /><br />"
"android.net.UrlQuerySanitizer.getUnregisteredParameterValueSanitizer () "," Get the current value sanitizer used when processing unregistered parameter values. <br /><br />"
"android.net.UrlQuerySanitizer.setPreferFirstRepeatedParameter (boolean preferFirstRepeatedParameter) "," Set whether or not the first occurrence of a repeated parameter is preferred. <br /><br />"
"android.net.UrlQuerySanitizer.parseUrl (String url) "," Parse the query parameters out of an encoded URL. <br /><br />"
"android.net.UrlQuerySanitizer.getUrlAndSpaceLegal () "," Return a value sanitizer that allows all the characters used by encoded URLs and allows spaces, which are not technically legal in encoded URLs, but commonly appear anyway. <br /><br />"
"android.net.UrlQuerySanitizer.getValueSanitizer (String parameter) "," Get the value sanitizer for a parameter. <br /><br />"
"android.net.UrlQuerySanitizer.getAllowUnregisteredParamaters () "," Get whether or not unregistered parameters are allowed. <br /><br />"
"android.net.UrlQuerySanitizer.registerParameter (String parameter, UrlQuerySanitizer.ValueSanitizer valueSanitizer) "," Register a value sanitizer for a particular parameter. <br /><br />"
"android.net.UrlQuerySanitizer.getAllButNulAndAngleBracketsLegal ()   Return a value sanitizer that allows any special characters except angle brackets  ('<' and '>') and Nul  ('\0') "," Return a value sanitizer that allows any special characters except angle brackets ('<' and '>') and Nul ('\0'). <br /><br />"
"android.net.UrlQuerySanitizer.getAmpLegal ()   Return a value sanitizer that does not allow any special characters except ampersand  ('&') "," Return a value sanitizer that does not allow any special characters except ampersand ('&'). <br /><br />"
"android.net.UrlQuerySanitizer.unescape (String string) "," Unescape an escaped string. <br /><br />"
"android.net.UrlQuerySanitizer.hasParameter (String parameter) "," Check if a parameter exists in the current sanitized query. <br /><br />"
"android.net.UrlQuerySanitizer.getParameterList () "," An array list of all of the parameter value pairs in the sanitized query, in the order they appeared in the query. <br /><br />"
"android.net.UrlQuerySanitizer.getUrlLegal () "," Return a value sanitizer that allows all the characters used by encoded URLs. <br /><br />"
"android.net.UrlQuerySanitizer.getValue (String parameter) "," Get the value for a parameter in the current sanitized query. <br /><br />"
"android.net.UrlQuerySanitizer.getAllButNulLegal ()   Return a value sanitizer that allows everything except Nul  ('\0') "," Return a value sanitizer that allows everything except Nul ('\0') characters. <br /><br />"
"android.net.UrlQuerySanitizer.registerParameters (String[] parameters, UrlQuerySanitizer.ValueSanitizer valueSanitizer) "," Register a value sanitizer for an array of parameters. <br /><br />"
"android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.sanitize (String value) "," Sanitize a value. <br /><br />"
"android.net.UrlQuerySanitizer.ValueSanitizer.sanitize (String value) "," Sanitize an unencoded value. <br /><br />"
"android.net.VpnService.Builder.setSession (String session) "," Set the name of this session. <br /><br />"
"android.net.VpnService.Builder.addAddress (InetAddress address, int prefixLength) "," Add a network address to the VPN interface. <br /><br />"
"android.net.VpnService.Builder.addRoute (InetAddress address, int prefixLength) "," Add a network route to the VPN interface. <br /><br />"
"android.net.VpnService.Builder.allowBypass () "," Allows all apps to bypass this VPN connection. <br /><br />"
"android.net.VpnService.Builder.setMtu (int mtu)   Set the maximum transmission unit  (MTU) "," Set the maximum transmission unit (MTU) of the VPN interface. <br /><br />"
"android.net.VpnService.Builder.setConfigureIntent (PendingIntent intent) "," Set the PendingIntent to an activity for users to configure the VPN connection. <br /><br />"
"android.net.VpnService.Builder.setUnderlyingNetworks (Network[] networks) "," Sets the underlying networks used by the VPN for its upstream connections. <br /><br />"
"android.net.VpnService.Builder.addAddress (String address, int prefixLength) "," Convenience method to add a network address to the VPN interface using a numeric address string. <br /><br />"
"android.net.VpnService.Builder.addDisallowedApplication (String packageName) "," Adds an application that's denied access to the VPN connection. <br /><br />"
"android.net.VpnService.Builder.allowFamily (int family) "," Allows traffic from the specified address family. <br /><br />"
"android.net.VpnService.Builder.setBlocking (boolean blocking) "," Sets the VPN interface's file descriptor to be in blocking/non-blocking mode. <br /><br />"
"android.net.VpnService.Builder.addDnsServer (InetAddress address) "," Add a DNS server to the VPN connection. <br /><br />"
"android.net.VpnService.Builder.addRoute (String address, int prefixLength) "," Convenience method to add a network route to the VPN interface using a numeric address string. <br /><br />"
"android.net.VpnService.Builder.addAllowedApplication (String packageName) "," Adds an application that's allowed to access the VPN connection. <br /><br />"
"android.net.VpnService.Builder.addDnsServer (String address) "," Convenience method to add a DNS server to the VPN connection using a numeric address string. <br /><br />"
"android.net.VpnService.Builder.establish () "," Create a VPN interface using the parameters supplied to this builder. <br /><br />"
"android.net.VpnService.Builder.addSearchDomain (String domain) "," Add a search domain to the DNS resolver. <br /><br />"
"android.net.VpnService.protect (DatagramSocket socket) "," Convenience method to protect a DatagramSocket from VPN connections. <br /><br />"
"android.net.VpnService.prepare (Context context) "," Prepare to establish a VPN connection. <br /><br />"
"android.net.VpnService.setUnderlyingNetworks (Network[] networks) "," Sets the underlying networks used by the VPN for its upstream connections. <br /><br />"
"android.net.VpnService.protect (int socket) "," Protect a socket from VPN connections. <br /><br />"
"android.net.VpnService.onRevoke () "," Invoked when the application is revoked. <br /><br />"
"android.net.VpnService.protect (Socket socket) "," Convenience method to protect a Socket from VPN connections. <br /><br />"
"android.net.VpnService.onBind (Intent intent) "," Return the communication interface to the service. <br /><br />"
"android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo.newInstance (String instanceName, String serviceType, Map< String,  String> txtMap) "," Create a Bonjour service information object. <br /><br />"
"android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest.newInstance (String serviceType) "," Create a service discovery to search for Bonjour services with the specified service type. <br /><br />"
"android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest.newInstance (String instanceName, String serviceType) "," Create a service discovery request to get the TXT data from the specified Bonjour service. <br /><br />"
"android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest.newInstance () "," Create a service discovery request to search all Bonjour services. <br /><br />"
"android.net.wifi.p2p.nsd.WifiP2pServiceInfo.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.net.wifi.p2p.nsd.WifiP2pServiceInfo.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.net.wifi.p2p.nsd.WifiP2pServiceRequest.newInstance (int protocolType) "," Create a service discovery request. <br /><br />"
"android.net.wifi.p2p.nsd.WifiP2pServiceRequest.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.net.wifi.p2p.nsd.WifiP2pServiceRequest.newInstance (int protocolType, String queryData) "," Create a service discovery request. <br /><br />"
"android.net.wifi.p2p.nsd.WifiP2pServiceRequest.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.net.wifi.p2p.nsd.WifiP2pUpnpServiceInfo.newInstance (String uuid, String device, List< String> services) "," Create UPnP service information object. <br /><br />"
"android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest.newInstance () "," Create a service discovery request to search all UPnP services. <br /><br />"
"android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest.newInstance (String st) "," Create a service discovery request to search specified UPnP services. <br /><br />"
"android.net.wifi.p2p.WifiP2pConfig.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface <br /><br />"
"android.net.wifi.p2p.WifiP2pConfig.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.net.wifi.p2p.WifiP2pConfig.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.wifi.p2p.WifiP2pDevice.isServiceDiscoveryCapable () "," Returns true if the device is capable of service discovery <br /><br />"
"android.net.wifi.p2p.WifiP2pDevice.isGroupOwner () "," Returns true if the device is a group owner <br /><br />"
"android.net.wifi.p2p.WifiP2pDevice.wpsPbcSupported () "," Returns true if WPS push button configuration is supported <br /><br />"
"android.net.wifi.p2p.WifiP2pDevice.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.net.wifi.p2p.WifiP2pDevice.wpsDisplaySupported () "," Returns true if WPS display configuration is supported <br /><br />"
"android.net.wifi.p2p.WifiP2pDevice.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface <br /><br />"
"android.net.wifi.p2p.WifiP2pDevice.wpsKeypadSupported () "," Returns true if WPS keypad configuration is supported <br /><br />"
"android.net.wifi.p2p.WifiP2pDevice.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.net.wifi.p2p.WifiP2pDevice.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.wifi.p2p.WifiP2pDeviceList.get (String deviceAddress) "," Fetch a device from the list <br /><br />"
"android.net.wifi.p2p.WifiP2pDeviceList.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface <br /><br />"
"android.net.wifi.p2p.WifiP2pDeviceList.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.net.wifi.p2p.WifiP2pDeviceList.getDeviceList () "," Get the list of devices <br /><br />"
"android.net.wifi.p2p.WifiP2pDeviceList.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.wifi.p2p.WifiP2pGroup.isGroupOwner () "," Check whether this device is the group owner of the created p2p group <br /><br />"
"android.net.wifi.p2p.WifiP2pGroup.getNetworkName ()   Get the network name  (SSID) "," Get the network name (SSID) of the group. <br /><br />"
"android.net.wifi.p2p.WifiP2pGroup.getOwner () "," Get the details of the group owner as a WifiP2pDevice object <br /><br />"
"android.net.wifi.p2p.WifiP2pGroup.getInterface () "," Get the interface name on which the group is created <br /><br />"
"android.net.wifi.p2p.WifiP2pGroup.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface <br /><br />"
"android.net.wifi.p2p.WifiP2pGroup.getPassphrase () "," Get the passphrase of the group. <br /><br />"
"android.net.wifi.p2p.WifiP2pGroup.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.net.wifi.p2p.WifiP2pGroup.getClientList () "," Get the list of clients currently part of the p2p group <br /><br />"
"android.net.wifi.p2p.WifiP2pGroup.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.wifi.p2p.WifiP2pInfo.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface <br /><br />"
"android.net.wifi.p2p.WifiP2pInfo.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.net.wifi.p2p.WifiP2pInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.ActionListener.onSuccess () "," The operation succeeded <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.ActionListener.onFailure (int reason) "," The operation failed <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.ChannelListener.onChannelDisconnected () "," The channel to the framework has been disconnected. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.ConnectionInfoListener.onConnectionInfoAvailable (WifiP2pInfo info) "," The requested connection info is available <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.DnsSdServiceResponseListener.onDnsSdServiceAvailable (String instanceName, String registrationType, WifiP2pDevice srcDevice) "," The requested Bonjour service response is available. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.DnsSdTxtRecordListener.onDnsSdTxtRecordAvailable (String fullDomainName, Map< String,  String> txtRecordMap, WifiP2pDevice srcDevice) "," The requested Bonjour service response is available. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.GroupInfoListener.onGroupInfoAvailable (WifiP2pGroup group) "," The requested p2p group info is available <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.removeServiceRequest (WifiP2pManager.Channel c, WifiP2pServiceRequest req, WifiP2pManager.ActionListener listener)   Remove a specified service discovery request added with addServiceRequest (WifiP2pManager.Channel, WifiP2pServiceRequest, WifiP2pManager.ActionListener) "," Remove a specified service discovery request added with addServiceRequest(WifiP2pManager.Channel, WifiP2pServiceRequest, WifiP2pManager.ActionListener)  The function call immediately returns after sending a request to remove service discovery request to the framework. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.removeGroup (WifiP2pManager.Channel c, WifiP2pManager.ActionListener listener) "," Remove the current p2p group. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.setServiceResponseListener (WifiP2pManager.Channel c, WifiP2pManager.ServiceResponseListener listener) "," Register a callback to be invoked on receiving service discovery response. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.requestPeers (WifiP2pManager.Channel c, WifiP2pManager.PeerListListener listener) "," Request the current list of peers. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.setDnsSdResponseListeners (WifiP2pManager.Channel c, WifiP2pManager.DnsSdServiceResponseListener servListener, WifiP2pManager.DnsSdTxtRecordListener txtListener) "," Register a callback to be invoked on receiving Bonjour service discovery response. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.requestConnectionInfo (WifiP2pManager.Channel c, WifiP2pManager.ConnectionInfoListener listener) "," Request device connection info. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.createGroup (WifiP2pManager.Channel c, WifiP2pManager.ActionListener listener) "," Create a p2p group with the current device as the group owner. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.clearServiceRequests (WifiP2pManager.Channel c, WifiP2pManager.ActionListener listener) "," Clear all registered service discovery requests. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.discoverServices (WifiP2pManager.Channel c, WifiP2pManager.ActionListener listener) "," Initiate service discovery. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.discoverPeers (WifiP2pManager.Channel c, WifiP2pManager.ActionListener listener) "," Initiate peer discovery. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.addServiceRequest (WifiP2pManager.Channel c, WifiP2pServiceRequest req, WifiP2pManager.ActionListener listener) "," Add a service discovery request. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.stopPeerDiscovery (WifiP2pManager.Channel c, WifiP2pManager.ActionListener listener) "," Stop an ongoing peer discovery  The function call immediately returns after sending a stop request to the framework. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.requestGroupInfo (WifiP2pManager.Channel c, WifiP2pManager.GroupInfoListener listener) "," Request p2p group info. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.removeLocalService (WifiP2pManager.Channel c, WifiP2pServiceInfo servInfo, WifiP2pManager.ActionListener listener)   Remove a registered local service added with addLocalService (WifiP2pManager.Channel, WifiP2pServiceInfo, WifiP2pManager.ActionListener) "," Remove a registered local service added with addLocalService(WifiP2pManager.Channel, WifiP2pServiceInfo, WifiP2pManager.ActionListener)  The function call immediately returns after sending a request to remove a local service to the framework. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.clearLocalServices (WifiP2pManager.Channel c, WifiP2pManager.ActionListener listener) "," Clear all registered local services of service discovery. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.addLocalService (WifiP2pManager.Channel c, WifiP2pServiceInfo servInfo, WifiP2pManager.ActionListener listener) "," Register a local service for service discovery. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.connect (WifiP2pManager.Channel c, WifiP2pConfig config, WifiP2pManager.ActionListener listener) "," Start a p2p connection to a device with the specified configuration. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.cancelConnect (WifiP2pManager.Channel c, WifiP2pManager.ActionListener listener) "," Cancel any ongoing p2p group negotiation  The function call immediately returns after sending a connection cancellation request to the framework. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.setUpnpServiceResponseListener (WifiP2pManager.Channel c, WifiP2pManager.UpnpServiceResponseListener listener) "," Register a callback to be invoked on receiving upnp service discovery response. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.initialize (Context srcContext, Looper srcLooper, WifiP2pManager.ChannelListener listener) "," Registers the application with the Wi-Fi framework. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.PeerListListener.onPeersAvailable (WifiP2pDeviceList peers) "," The requested peer list is available <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.ServiceResponseListener.onServiceAvailable (int protocolType, byte[] responseData, WifiP2pDevice srcDevice) "," The requested service response is available. <br /><br />"
"android.net.wifi.p2p.WifiP2pManager.UpnpServiceResponseListener.onUpnpServiceAvailable (List< String> uniqueServiceNames, WifiP2pDevice srcDevice) "," The requested upnp service response is available. <br /><br />"
"android.net.wifi.ScanResult.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.wifi.SupplicantState.valueOf (String name) "," no description <br /><br />"
"android.net.wifi.SupplicantState.values () "," no description <br /><br />"
"android.net.wifi.SupplicantState.isValidState (SupplicantState state) "," Returns true if the supplicant state is valid and false otherwise. <br /><br />"
"android.net.wifi.WifiConfiguration.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.wifi.WifiEnterpriseConfig.getEapMethod () "," Get the eap method. <br /><br />"
"android.net.wifi.WifiEnterpriseConfig.setPhase2Method (int phase2Method) "," Set Phase 2 authentication method. <br /><br />"
"android.net.wifi.WifiEnterpriseConfig.getPhase2Method () "," Get the phase 2 authentication method. <br /><br />"
"android.net.wifi.WifiEnterpriseConfig.getPassword () "," Get the password. <br /><br />"
"android.net.wifi.WifiEnterpriseConfig.getClientCertificate () "," Get client certificate <br /><br />"
"android.net.wifi.WifiEnterpriseConfig.setAnonymousIdentity (String anonymousIdentity) "," Set anonymous identity. <br /><br />"
"android.net.wifi.WifiEnterpriseConfig.setPassword (String password) "," Set the password. <br /><br />"
"android.net.wifi.WifiEnterpriseConfig.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.net.wifi.WifiEnterpriseConfig.setSubjectMatch (String subjectMatch) "," Set subject match. <br /><br />"
"android.net.wifi.WifiEnterpriseConfig.setIdentity (String identity) "," Set the identity <br /><br />"
"android.net.wifi.WifiEnterpriseConfig.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.wifi.WifiEnterpriseConfig.getIdentity () "," Get the identity <br /><br />"
"android.net.wifi.WifiEnterpriseConfig.setCaCertificate (X509Certificate cert) "," Specify a X.509 certificate that identifies the server. <br /><br />"
"android.net.wifi.WifiEnterpriseConfig.setClientKeyEntry (PrivateKey privateKey, X509Certificate clientCertificate) "," Specify a private key and client certificate for client authorization. <br /><br />"
"android.net.wifi.WifiEnterpriseConfig.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.net.wifi.WifiEnterpriseConfig.getAnonymousIdentity () "," Get the anonymous identity <br /><br />"
"android.net.wifi.WifiEnterpriseConfig.setEapMethod (int eapMethod) "," Set the EAP authentication method. <br /><br />"
"android.net.wifi.WifiEnterpriseConfig.getCaCertificate () "," Get CA certificate <br /><br />"
"android.net.wifi.WifiEnterpriseConfig.getSubjectMatch () "," Get subject match <br /><br />"
"android.net.wifi.WifiInfo.getMacAddress () "," no description <br /><br />"
"android.net.wifi.WifiInfo.getRssi () "," Returns the received signal strength indicator of the current 802.11 network, in dBm. <br /><br />"
"android.net.wifi.WifiInfo.getLinkSpeed () "," Returns the current link speed in LINK_SPEED_UNITS. <br /><br />"
"android.net.wifi.WifiInfo.getBSSID ()   Return the basic service set identifier  (BSSID) "," Return the basic service set identifier (BSSID) of the current access point. <br /><br />"
"android.net.wifi.WifiInfo.getIpAddress () "," no description <br /><br />"
"android.net.wifi.WifiInfo.getHiddenSSID () "," no description <br /><br />"
"android.net.wifi.WifiInfo.getNetworkId () "," Each configured network has a unique small integer ID, used to identify the network when performing operations on the supplicant. <br /><br />"
"android.net.wifi.WifiInfo.getDetailedStateOf (SupplicantState suppState) "," Map a supplicant state into a fine-grained network connectivity state. <br /><br />"
"android.net.wifi.WifiInfo.getSupplicantState () "," Return the detailed state of the supplicant's negotiation with an access point, in the form of a SupplicantState object. <br /><br />"
"android.net.wifi.WifiInfo.getSSID ()   Returns the service set identifier  (SSID) "," Returns the service set identifier (SSID) of the current 802.11 network. <br /><br />"
"android.net.wifi.WifiInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.wifi.WifiInfo.getFrequency () "," Returns the current frequency in FREQUENCY_UNITS. <br /><br />"
"android.net.wifi.WifiManager.getConfiguredNetworks () "," Return a list of all the networks configured in the supplicant. <br /><br />"
"android.net.wifi.WifiManager.addNetwork (WifiConfiguration config) "," Add a new network description to the set of configured networks. <br /><br />"
"android.net.wifi.WifiManager.reassociate () "," Reconnect to the currently active access point, even if we are already connected. <br /><br />"
"android.net.wifi.WifiManager.getConnectionInfo () "," Return dynamic information about the current Wi-Fi connection, if any is active. <br /><br />"
"android.net.wifi.WifiManager.createWifiLock (int lockType, String tag) "," Creates a new WifiLock. <br /><br />"
"android.net.wifi.WifiManager.startScan () "," Request a scan for access points. <br /><br />"
"android.net.wifi.WifiManager.setWifiEnabled (boolean enabled) "," Enable or disable Wi-Fi. <br /><br />"
"android.net.wifi.WifiManager.startWps (WpsInfo config, WifiManager.WpsCallback listener) "," Start Wi-fi Protected Setup <br /><br />"
"android.net.wifi.WifiManager.isDeviceToApRttSupported () "," no description <br /><br />"
"android.net.wifi.WifiManager.setTdlsEnabledWithMacAddress (String remoteMacAddress, boolean enable)   Similar to setTdlsEnabled (InetAddress, boolean) "," Similar to setTdlsEnabled(InetAddress, boolean), except this version allows you to specify remote endpoint with a MAC address. <br /><br />"
"android.net.wifi.WifiManager.disableNetwork (int netId) "," Disable a configured network. <br /><br />"
"android.net.wifi.WifiManager.enableNetwork (int netId, boolean disableOthers) "," Allow a previously configured network to be associated with. <br /><br />"
"android.net.wifi.WifiManager.isEnhancedPowerReportingSupported () "," no description <br /><br />"
"android.net.wifi.WifiManager.calculateSignalLevel (int rssi, int numLevels) "," Calculates the level of the signal. <br /><br />"
"android.net.wifi.WifiManager.isWifiEnabled () "," Return whether Wi-Fi is enabled or disabled. <br /><br />"
"android.net.wifi.WifiManager.isScanAlwaysAvailable () "," Check if scanning is always available. <br /><br />"
"android.net.wifi.WifiManager.reconnect () "," Reconnect to the currently active access point, if we are currently disconnected. <br /><br />"
"android.net.wifi.WifiManager.getWifiState () "," Gets the Wi-Fi enabled state. <br /><br />"
"android.net.wifi.WifiManager.isTdlsSupported () "," no description <br /><br />"
"android.net.wifi.WifiManager.compareSignalLevel (int rssiA, int rssiB) "," Compares two signal strengths. <br /><br />"
"android.net.wifi.WifiManager.disconnect () "," Disassociate from the currently active access point. <br /><br />"
"android.net.wifi.WifiManager.getDhcpInfo () "," Return the DHCP-assigned addresses from the last successful DHCP request, if any. <br /><br />"
"android.net.wifi.WifiManager.getScanResults () "," Return the results of the latest access point scan. <br /><br />"
"android.net.wifi.WifiManager.updateNetwork (WifiConfiguration config) "," Update the network description of an existing configured network. <br /><br />"
"android.net.wifi.WifiManager.isPreferredNetworkOffloadSupported () "," no description <br /><br />"
"android.net.wifi.WifiManager.isP2pSupported () "," no description <br /><br />"
"android.net.wifi.WifiManager.pingSupplicant () "," Check that the supplicant daemon is responding to requests. <br /><br />"
"android.net.wifi.WifiManager.createMulticastLock (String tag) "," Create a new MulticastLock <br /><br />"
"android.net.wifi.WifiManager.saveConfiguration () "," Tell the supplicant to persist the current list of configured networks. <br /><br />"
"android.net.wifi.WifiManager.is5GHzBandSupported () "," no description <br /><br />"
"android.net.wifi.WifiManager.setTdlsEnabled (InetAddress remoteIPAddress, boolean enable) "," Enable/Disable TDLS on a specific local route. <br /><br />"
"android.net.wifi.WifiManager.removeNetwork (int netId) "," Remove the specified network from the list of configured networks. <br /><br />"
"android.net.wifi.WifiManager.cancelWps (WifiManager.WpsCallback listener) "," Cancel any ongoing Wi-fi Protected Setup <br /><br />"
"android.net.wifi.WifiManager.createWifiLock (String tag) "," Creates a new WifiLock. <br /><br />"
"android.net.wifi.WifiManager.MulticastLock.isHeld () "," Checks whether this MulticastLock is currently held. <br /><br />"
"android.net.wifi.WifiManager.MulticastLock.setReferenceCounted (boolean refCounted) "," Controls whether this is a reference-counted or non-reference- counted MulticastLock. <br /><br />"
"android.net.wifi.WifiManager.MulticastLock.acquire ()   Locks Wifi Multicast on until release () "," Locks Wifi Multicast on until release() is called. <br /><br />"
"android.net.wifi.WifiManager.MulticastLock.release () "," Unlocks Wifi Multicast, restoring the filter of packets not addressed specifically to this device and saving power. <br /><br />"
"android.net.wifi.WifiManager.MulticastLock.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.wifi.WifiManager.WifiLock.setWorkSource (WorkSource ws) "," no description <br /><br />"
"android.net.wifi.WifiManager.WifiLock.isHeld () "," Checks whether this WifiLock is currently held. <br /><br />"
"android.net.wifi.WifiManager.WifiLock.setReferenceCounted (boolean refCounted) "," Controls whether this is a reference-counted or non-reference-counted WifiLock. <br /><br />"
"android.net.wifi.WifiManager.WifiLock.acquire ()   Locks the Wi-Fi radio on until release () "," Locks the Wi-Fi radio on until release() is called. <br /><br />"
"android.net.wifi.WifiManager.WifiLock.release () "," Unlocks the Wi-Fi radio, allowing it to turn off when the device is idle. <br /><br />"
"android.net.wifi.WifiManager.WifiLock.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.net.wifi.WifiManager.WpsCallback.onStarted (String pin) "," WPS start succeeded <br /><br />"
"android.net.wifi.WifiManager.WpsCallback.onFailed (int reason) "," WPS operation failed <br /><br />"
"android.net.wifi.WifiManager.WpsCallback.onSucceeded () "," WPS operation completed succesfully <br /><br />"
"android.net.wifi.WpsInfo.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface <br /><br />"
"android.net.wifi.WpsInfo.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.net.wifi.WpsInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.nfc.cardemulation.CardEmulation.unsetPreferredService (Activity activity) "," Unsets the preferred service for the specified Activity. <br /><br />"
"android.nfc.cardemulation.CardEmulation.registerAidsForService (ComponentName service, String category, List< String> aids) "," Registers a list of AIDs for a specific category for the specified service. <br /><br />"
"android.nfc.cardemulation.CardEmulation.getInstance (NfcAdapter adapter) "," Helper to get an instance of this class. <br /><br />"
"android.nfc.cardemulation.CardEmulation.categoryAllowsForegroundPreference (String category) "," Returns whether the user has allowed AIDs registered in the specified category to be handled by a service that is preferred by the foreground application, instead of by a pre-configured default. <br /><br />"
"android.nfc.cardemulation.CardEmulation.isDefaultServiceForCategory (ComponentName service, String category) "," Allows an application to query whether a service is currently the default service to handle a card emulation category. <br /><br />"
"android.nfc.cardemulation.CardEmulation.setPreferredService (Activity activity, ComponentName service) "," Allows a foreground application to specify which card emulation service should be preferred while a specific Activity is in the foreground. <br /><br />"
"android.nfc.cardemulation.CardEmulation.supportsAidPrefixRegistration () "," Some devices may allow an application to register all AIDs that starts with a certain prefix, e.g. <br /><br />"
"android.nfc.cardemulation.CardEmulation.removeAidsForService (ComponentName service, String category) "," Removes a previously registered list of AIDs for the specified category for the service provided. <br /><br />"
"android.nfc.cardemulation.CardEmulation.getSelectionModeForCategory (String category) "," Returns the service selection mode for the passed in category. <br /><br />"
"android.nfc.cardemulation.CardEmulation.getAidsForService (ComponentName service, String category) "," Retrieves the currently registered AIDs for the specified category for a service. <br /><br />"
"android.nfc.cardemulation.CardEmulation.isDefaultServiceForAid (ComponentName service, String aid) "," Allows an application to query whether a service is currently the default handler for a specified ISO7816-4 Application ID. <br /><br />"
"android.nfc.cardemulation.HostApduService.onDeactivated (int reason) "," This method will be called in two possible scenarios: The NFC link has been deactivated or lost  A different AID has been selected and was resolved to a different service component <br /><br />"
"android.nfc.cardemulation.HostApduService.processCommandApdu (byte[] commandApdu, Bundle extras) "," This method will be called when a command APDU has been received from a remote device. <br /><br />"
"android.nfc.cardemulation.HostApduService.notifyUnhandled () "," Calling this method allows the service to tell the OS that it won't be able to complete this transaction - for example, because it requires data connectivity that is not present at that moment. <br /><br />"
"android.nfc.cardemulation.HostApduService.onBind (Intent intent) "," Return the communication channel to the service. <br /><br />"
"android.nfc.cardemulation.HostApduService.sendResponseApdu (byte[] responseApdu) "," Sends a response APDU back to the remote device. <br /><br />"
"android.nfc.cardemulation.OffHostApduService.onBind (Intent intent) "," The Android platform itself will not bind to this service, but merely uses its declaration to keep track of what AIDs the service is interested in. <br /><br />"
"android.nfc.NdefMessage.getRecords () "," Get the NDEF Records inside this NDEF Message. <br /><br />"
"android.nfc.NdefMessage.toByteArray () "," Return this NDEF Message as raw bytes. <br /><br />"
"android.nfc.NdefMessage.equals (Object obj) "," Returns true if the specified NDEF Message contains identical NDEF Records. <br /><br />"
"android.nfc.NdefMessage.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.nfc.NdefMessage.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.nfc.NdefMessage.getByteArrayLength ()   Return the length of this NDEF Message if it is written to a byte array with toByteArray () "," Return the length of this NDEF Message if it is written to a byte array with toByteArray(). <br /><br />"
"android.nfc.NdefMessage.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.nfc.NdefMessage.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.nfc.NdefRecord.getTnf () "," Returns the 3-bit TNF. <br /><br />"
"android.nfc.NdefRecord.getType () "," Returns the variable length Type field. <br /><br />"
"android.nfc.NdefRecord.createMime (String mimeType, byte[] mimeData) "," Create a new NDEF Record containing MIME data. <br /><br />"
"android.nfc.NdefRecord.createApplicationRecord (String packageName)   Create a new Android Application Record  (AAR) "," Create a new Android Application Record (AAR). <br /><br />"
"android.nfc.NdefRecord.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.nfc.NdefRecord.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.nfc.NdefRecord.createUri (String uriString) "," Create a new NDEF Record containing a URI. <br /><br />"
"android.nfc.NdefRecord.toMimeType () "," Map this record to a MIME type, or return null if it cannot be mapped. <br /><br />"
"android.nfc.NdefRecord.createTextRecord (String languageCode, String text) "," Create a new NDEF record containing UTF-8 text data. <br /><br />"
"android.nfc.NdefRecord.toByteArray ()    This method was deprecated in API level 16. use toByteArray () "," This method was deprecated in API level 16. use toByteArray() instead <br /><br />"
"android.nfc.NdefRecord.getPayload () "," Returns the variable length payload. <br /><br />"
"android.nfc.NdefRecord.toUri () "," Map this record to a URI, or return null if it cannot be mapped. <br /><br />"
"android.nfc.NdefRecord.getId () "," Returns the variable length ID. <br /><br />"
"android.nfc.NdefRecord.createExternal (String domain, String type, byte[] data)   Create a new NDEF Record containing external  (application-specific) "," Create a new NDEF Record containing external (application-specific) data. <br /><br />"
"android.nfc.NdefRecord.equals (Object obj) "," Returns true if the specified NDEF Record contains identical tnf, type, id and payload fields. <br /><br />"
"android.nfc.NdefRecord.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.nfc.NdefRecord.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.nfc.NdefRecord.createUri (Uri uri) "," Create a new NDEF Record containing a URI. <br /><br />"
"android.nfc.NfcAdapter.CreateBeamUrisCallback.createBeamUris (NfcEvent event) "," no description <br /><br />"
"android.nfc.NfcAdapter.CreateNdefMessageCallback.createNdefMessage (NfcEvent event) "," Called to provide a NdefMessage to push. <br /><br />"
"android.nfc.NfcAdapter.setNdefPushMessageCallback (NfcAdapter.CreateNdefMessageCallback callback, Activity activity, Activity... activities)   Set a callback that dynamically generates NDEF messages to send using Android Beam  (TM) "," Set a callback that dynamically generates NDEF messages to send using Android Beam (TM). <br /><br />"
"android.nfc.NfcAdapter.enableReaderMode (Activity activity, NfcAdapter.ReaderCallback callback, int flags, Bundle extras) "," Limit the NFC controller to reader mode while this Activity is in the foreground. <br /><br />"
"android.nfc.NfcAdapter.setOnNdefPushCompleteCallback (NfcAdapter.OnNdefPushCompleteCallback callback, Activity activity, Activity... activities)   Set a callback on successful Android Beam  (TM) "," Set a callback on successful Android Beam (TM). <br /><br />"
"android.nfc.NfcAdapter.enableForegroundNdefPush (Activity activity, NdefMessage message)    This method was deprecated in API level 14. use setNdefPushMessage (NdefMessage, Activity, Activity...) "," This method was deprecated in API level 14. use setNdefPushMessage(NdefMessage, Activity, Activity...) instead <br /><br />"
"android.nfc.NfcAdapter.disableForegroundDispatch (Activity activity) "," Disable foreground dispatch to the given activity. <br /><br />"
"android.nfc.NfcAdapter.setNdefPushMessage (NdefMessage message, Activity activity, Activity... activities)   Set a static NdefMessage to send using Android Beam  (TM) "," Set a static NdefMessage to send using Android Beam (TM). <br /><br />"
"android.nfc.NfcAdapter.isNdefPushEnabled ()   Return true if the NDEF Push  (Android Beam) "," Return true if the NDEF Push (Android Beam) feature is enabled. <br /><br />"
"android.nfc.NfcAdapter.disableForegroundNdefPush (Activity activity)    This method was deprecated in API level 14. use setNdefPushMessage (NdefMessage, Activity, Activity...) "," This method was deprecated in API level 14. use setNdefPushMessage(NdefMessage, Activity, Activity...) instead <br /><br />"
"android.nfc.NfcAdapter.enableForegroundDispatch (Activity activity, PendingIntent intent, IntentFilter[] filters, String[][] techLists) "," Enable foreground dispatch to the given Activity. <br /><br />"
"android.nfc.NfcAdapter.isEnabled () "," Return true if this NFC Adapter has any features enabled. <br /><br />"
"android.nfc.NfcAdapter.setBeamPushUris (Uri[] uris, Activity activity)   Set one or more Uris to send using Android Beam  (TM) "," Set one or more Uris to send using Android Beam (TM). <br /><br />"
"android.nfc.NfcAdapter.invokeBeam (Activity activity) "," Manually invoke Android Beam to share data. <br /><br />"
"android.nfc.NfcAdapter.disableReaderMode (Activity activity)   Restore the NFC adapter to normal mode of operation: supporting peer-to-peer  (Android Beam) "," Restore the NFC adapter to normal mode of operation: supporting peer-to-peer (Android Beam), card emulation, and polling for all supported tag technologies. <br /><br />"
"android.nfc.NfcAdapter.setBeamPushUrisCallback (NfcAdapter.CreateBeamUrisCallback callback, Activity activity)   Set a callback that will dynamically generate one or more Uris to send using Android Beam  (TM) "," Set a callback that will dynamically generate one or more Uris to send using Android Beam (TM). <br /><br />"
"android.nfc.NfcAdapter.getDefaultAdapter (Context context) "," Helper to get the default NFC Adapter. <br /><br />"
"android.nfc.NfcAdapter.OnNdefPushCompleteCallback.onNdefPushComplete (NfcEvent event) "," Called on successful NDEF push. <br /><br />"
"android.nfc.NfcAdapter.ReaderCallback.onTagDiscovered (Tag tag) "," no description <br /><br />"
"android.nfc.NfcManager.getDefaultAdapter () "," Get the default NFC Adapter for this device. <br /><br />"
"android.nfc.Tag.getId ()   Get the Tag Identifier  (if it has one) "," Get the Tag Identifier (if it has one). <br /><br />"
"android.nfc.Tag.getTechList () "," Get the technologies available in this tag, as fully qualified class names. <br /><br />"
"android.nfc.Tag.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.nfc.Tag.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.nfc.Tag.toString () "," Human-readable description of the tag, for debugging. <br /><br />"
"android.nfc.tech.IsoDep.getTimeout ()   Get the current timeout for transceive (byte[]) "," Get the current timeout for transceive(byte[]) in milliseconds. <br /><br />"
"android.nfc.tech.IsoDep.get (Tag tag) "," Get an instance of IsoDep for the given tag. <br /><br />"
"android.nfc.tech.IsoDep.connect () "," Enable I/O operations to the tag from this TagTechnology object. <br /><br />"
"android.nfc.tech.IsoDep.getTag () "," Get the Tag object backing this TagTechnology object. <br /><br />"
"android.nfc.tech.IsoDep.isConnected () "," Helper to indicate if I/O operations should be possible. <br /><br />"
"android.nfc.tech.IsoDep.getMaxTransceiveLength ()   Return the maximum number of bytes that can be sent with transceive (byte[]) "," Return the maximum number of bytes that can be sent with transceive(byte[]). <br /><br />"
"android.nfc.tech.IsoDep.getHiLayerResponse () "," Return the higher layer response bytes for NfcB tags. <br /><br />"
"android.nfc.tech.IsoDep.close () "," Disable I/O operations to the tag from this TagTechnology object, and release resources. <br /><br />"
"android.nfc.tech.IsoDep.setTimeout (int timeout)   Set the timeout of transceive (byte[]) "," Set the timeout of transceive(byte[]) in milliseconds. <br /><br />"
"android.nfc.tech.IsoDep.isExtendedLengthApduSupported () "," Standard APDUs have a 1-byte length field, allowing a maximum of 255 payload bytes, which results in a maximum APDU length of 261 bytes. <br /><br />"
"android.nfc.tech.IsoDep.getHistoricalBytes () "," Return the ISO-DEP historical bytes for NfcA tags. <br /><br />"
"android.nfc.tech.IsoDep.transceive (byte[] data) "," Send raw ISO-DEP data to the tag and receive the response. <br /><br />"
"android.nfc.tech.MifareClassic.increment (int blockIndex, int value) "," Increment a value block, storing the result in the temporary block on the tag. <br /><br />"
"android.nfc.tech.MifareClassic.getTag () "," Get the Tag object backing this TagTechnology object. <br /><br />"
"android.nfc.tech.MifareClassic.getSize () "," Return the size of the tag in bytes One of SIZE_MINI, SIZE_1K, SIZE_2K, SIZE_4K. <br /><br />"
"android.nfc.tech.MifareClassic.readBlock (int blockIndex) "," Read 16-byte block. <br /><br />"
"android.nfc.tech.MifareClassic.getType () "," Return the type of this MIFARE Classic compatible tag. <br /><br />"
"android.nfc.tech.MifareClassic.authenticateSectorWithKeyB (int sectorIndex, byte[] key) "," Authenticate a sector with key B. <br /><br />"
"android.nfc.tech.MifareClassic.isConnected () "," Helper to indicate if I/O operations should be possible. <br /><br />"
"android.nfc.tech.MifareClassic.close () "," Disable I/O operations to the tag from this TagTechnology object, and release resources. <br /><br />"
"android.nfc.tech.MifareClassic.getBlockCountInSector (int sectorIndex) "," Return the number of blocks in the given sector. <br /><br />"
"android.nfc.tech.MifareClassic.writeBlock (int blockIndex, byte[] data) "," Write 16-byte block. <br /><br />"
"android.nfc.tech.MifareClassic.transceive (byte[] data) "," Send raw NfcA data to a tag and receive the response. <br /><br />"
"android.nfc.tech.MifareClassic.getSectorCount () "," Return the number of MIFARE Classic sectors. <br /><br />"
"android.nfc.tech.MifareClassic.get (Tag tag) "," Get an instance of MifareClassic for the given tag. <br /><br />"
"android.nfc.tech.MifareClassic.connect () "," Enable I/O operations to the tag from this TagTechnology object. <br /><br />"
"android.nfc.tech.MifareClassic.restore (int blockIndex) "," Copy from a value block to the temporary block. <br /><br />"
"android.nfc.tech.MifareClassic.transfer (int blockIndex) "," Copy from the temporary block to a value block. <br /><br />"
"android.nfc.tech.MifareClassic.sectorToBlock (int sectorIndex) "," Return the first block of a given sector. <br /><br />"
"android.nfc.tech.MifareClassic.decrement (int blockIndex, int value) "," Decrement a value block, storing the result in the temporary block on the tag. <br /><br />"
"android.nfc.tech.MifareClassic.getMaxTransceiveLength ()   Return the maximum number of bytes that can be sent with transceive (byte[]) "," Return the maximum number of bytes that can be sent with transceive(byte[]). <br /><br />"
"android.nfc.tech.MifareClassic.blockToSector (int blockIndex) "," Return the sector that contains a given block. <br /><br />"
"android.nfc.tech.MifareClassic.getBlockCount () "," Return the total number of MIFARE Classic blocks. <br /><br />"
"android.nfc.tech.MifareClassic.setTimeout (int timeout)   Set the transceive (byte[]) "," Set the transceive(byte[]) timeout in milliseconds. <br /><br />"
"android.nfc.tech.MifareClassic.getTimeout ()   Get the current transceive (byte[]) "," Get the current transceive(byte[]) timeout in milliseconds. <br /><br />"
"android.nfc.tech.MifareClassic.authenticateSectorWithKeyA (int sectorIndex, byte[] key) "," Authenticate a sector with key A. <br /><br />"
"android.nfc.tech.MifareUltralight.get (Tag tag) "," Get an instance of MifareUltralight for the given tag. <br /><br />"
"android.nfc.tech.MifareUltralight.connect () "," Enable I/O operations to the tag from this TagTechnology object. <br /><br />"
"android.nfc.tech.MifareUltralight.getTag () "," Get the Tag object backing this TagTechnology object. <br /><br />"
"android.nfc.tech.MifareUltralight.readPages (int pageOffset)   Read 4 pages  (16 bytes) "," Read 4 pages (16 bytes). <br /><br />"
"android.nfc.tech.MifareUltralight.getType () "," Return the MIFARE Ultralight type of the tag. <br /><br />"
"android.nfc.tech.MifareUltralight.isConnected () "," Helper to indicate if I/O operations should be possible. <br /><br />"
"android.nfc.tech.MifareUltralight.getMaxTransceiveLength ()   Return the maximum number of bytes that can be sent with transceive (byte[]) "," Return the maximum number of bytes that can be sent with transceive(byte[]). <br /><br />"
"android.nfc.tech.MifareUltralight.close () "," Disable I/O operations to the tag from this TagTechnology object, and release resources. <br /><br />"
"android.nfc.tech.MifareUltralight.transceive (byte[] data) "," Send raw NfcA data to a tag and receive the response. <br /><br />"
"android.nfc.tech.MifareUltralight.setTimeout (int timeout)   Set the transceive (byte[]) "," Set the transceive(byte[]) timeout in milliseconds. <br /><br />"
"android.nfc.tech.MifareUltralight.writePage (int pageOffset, byte[] data)   Write 1 page  (4 bytes) "," Write 1 page (4 bytes). <br /><br />"
"android.nfc.tech.MifareUltralight.getTimeout ()   Get the current transceive (byte[]) "," Get the current transceive(byte[]) timeout in milliseconds. <br /><br />"
"android.nfc.tech.Ndef.getNdefMessage () "," Read the current NdefMessage on this tag. <br /><br />"
"android.nfc.tech.Ndef.isWritable () "," Determine if the tag is writable. <br /><br />"
"android.nfc.tech.Ndef.getTag () "," Get the Tag object backing this TagTechnology object. <br /><br />"
"android.nfc.tech.Ndef.writeNdefMessage (NdefMessage msg) "," Overwrite the NdefMessage on this tag. <br /><br />"
"android.nfc.tech.Ndef.getType () "," Get the NDEF tag type. <br /><br />"
"android.nfc.tech.Ndef.close () "," Disable I/O operations to the tag from this TagTechnology object, and release resources. <br /><br />"
"android.nfc.tech.Ndef.isConnected () "," Helper to indicate if I/O operations should be possible. <br /><br />"
"android.nfc.tech.Ndef.canMakeReadOnly ()   Indicates whether a tag can be made read-only with makeReadOnly () "," Indicates whether a tag can be made read-only with makeReadOnly(). <br /><br />"
"android.nfc.tech.Ndef.makeReadOnly () "," Make a tag read-only. <br /><br />"
"android.nfc.tech.Ndef.get (Tag tag) "," Get an instance of Ndef for the given tag. <br /><br />"
"android.nfc.tech.Ndef.connect () "," Enable I/O operations to the tag from this TagTechnology object. <br /><br />"
"android.nfc.tech.Ndef.getMaxSize () "," Get the maximum NDEF message size in bytes. <br /><br />"
"android.nfc.tech.Ndef.getCachedNdefMessage () "," Get the NdefMessage that was read from the tag at discovery time. <br /><br />"
"android.nfc.tech.NdefFormatable.get (Tag tag) "," Get an instance of NdefFormatable for the given tag. <br /><br />"
"android.nfc.tech.NdefFormatable.formatReadOnly (NdefMessage firstMessage) "," Formats a tag as NDEF, write a NdefMessage, and make read-only. <br /><br />"
"android.nfc.tech.NdefFormatable.connect () "," Enable I/O operations to the tag from this TagTechnology object. <br /><br />"
"android.nfc.tech.NdefFormatable.getTag () "," Get the Tag object backing this TagTechnology object. <br /><br />"
"android.nfc.tech.NdefFormatable.format (NdefMessage firstMessage) "," Format a tag as NDEF, and write a NdefMessage. <br /><br />"
"android.nfc.tech.NdefFormatable.isConnected () "," Helper to indicate if I/O operations should be possible. <br /><br />"
"android.nfc.tech.NdefFormatable.close () "," Disable I/O operations to the tag from this TagTechnology object, and release resources. <br /><br />"
"android.nfc.tech.NfcA.getAtqa () "," Return the ATQA/SENS_RES bytes from tag discovery. <br /><br />"
"android.nfc.tech.NfcA.get (Tag tag) "," Get an instance of NfcA for the given tag. <br /><br />"
"android.nfc.tech.NfcA.connect () "," Enable I/O operations to the tag from this TagTechnology object. <br /><br />"
"android.nfc.tech.NfcA.getTag () "," Get the Tag object backing this TagTechnology object. <br /><br />"
"android.nfc.tech.NfcA.isConnected () "," Helper to indicate if I/O operations should be possible. <br /><br />"
"android.nfc.tech.NfcA.getMaxTransceiveLength ()   Return the maximum number of bytes that can be sent with transceive (byte[]) "," Return the maximum number of bytes that can be sent with transceive(byte[]). <br /><br />"
"android.nfc.tech.NfcA.close () "," Disable I/O operations to the tag from this TagTechnology object, and release resources. <br /><br />"
"android.nfc.tech.NfcA.getSak () "," Return the SAK/SEL_RES bytes from tag discovery. <br /><br />"
"android.nfc.tech.NfcA.transceive (byte[] data) "," Send raw NFC-A commands to the tag and receive the response. <br /><br />"
"android.nfc.tech.NfcA.setTimeout (int timeout)   Set the transceive (byte[]) "," Set the transceive(byte[]) timeout in milliseconds. <br /><br />"
"android.nfc.tech.NfcA.getTimeout ()   Get the current transceive (byte[]) "," Get the current transceive(byte[]) timeout in milliseconds. <br /><br />"
"android.nfc.tech.NfcB.get (Tag tag) "," Get an instance of NfcB for the given tag. <br /><br />"
"android.nfc.tech.NfcB.connect () "," Enable I/O operations to the tag from this TagTechnology object. <br /><br />"
"android.nfc.tech.NfcB.getTag () "," Get the Tag object backing this TagTechnology object. <br /><br />"
"android.nfc.tech.NfcB.isConnected () "," Helper to indicate if I/O operations should be possible. <br /><br />"
"android.nfc.tech.NfcB.getMaxTransceiveLength ()   Return the maximum number of bytes that can be sent with transceive (byte[]) "," Return the maximum number of bytes that can be sent with transceive(byte[]). <br /><br />"
"android.nfc.tech.NfcB.close () "," Disable I/O operations to the tag from this TagTechnology object, and release resources. <br /><br />"
"android.nfc.tech.NfcB.getApplicationData () "," Return the Application Data bytes from ATQB/SENSB_RES at tag discovery. <br /><br />"
"android.nfc.tech.NfcB.getProtocolInfo () "," Return the Protocol Info bytes from ATQB/SENSB_RES at tag discovery. <br /><br />"
"android.nfc.tech.NfcB.transceive (byte[] data) "," Send raw NFC-B commands to the tag and receive the response. <br /><br />"
"android.nfc.tech.NfcBarcode.get (Tag tag) "," Get an instance of NfcBarcode for the given tag. <br /><br />"
"android.nfc.tech.NfcBarcode.connect () "," Enable I/O operations to the tag from this TagTechnology object. <br /><br />"
"android.nfc.tech.NfcBarcode.getTag () "," Get the Tag object backing this TagTechnology object. <br /><br />"
"android.nfc.tech.NfcBarcode.getType () "," Returns the NFC Barcode tag type. <br /><br />"
"android.nfc.tech.NfcBarcode.isConnected () "," Helper to indicate if I/O operations should be possible. <br /><br />"
"android.nfc.tech.NfcBarcode.close () "," Disable I/O operations to the tag from this TagTechnology object, and release resources. <br /><br />"
"android.nfc.tech.NfcBarcode.getBarcode () "," Returns the barcode of an NfcBarcode tag. <br /><br />"
"android.nfc.tech.NfcF.get (Tag tag) "," Get an instance of NfcF for the given tag. <br /><br />"
"android.nfc.tech.NfcF.connect () "," Enable I/O operations to the tag from this TagTechnology object. <br /><br />"
"android.nfc.tech.NfcF.getTag () "," Get the Tag object backing this TagTechnology object. <br /><br />"
"android.nfc.tech.NfcF.getManufacturer () "," Return the Manufacturer bytes from tag discovery. <br /><br />"
"android.nfc.tech.NfcF.isConnected () "," Helper to indicate if I/O operations should be possible. <br /><br />"
"android.nfc.tech.NfcF.getMaxTransceiveLength ()   Return the maximum number of bytes that can be sent with transceive (byte[]) "," Return the maximum number of bytes that can be sent with transceive(byte[]). <br /><br />"
"android.nfc.tech.NfcF.close () "," Disable I/O operations to the tag from this TagTechnology object, and release resources. <br /><br />"
"android.nfc.tech.NfcF.transceive (byte[] data) "," Send raw NFC-F commands to the tag and receive the response. <br /><br />"
"android.nfc.tech.NfcF.setTimeout (int timeout)   Set the transceive (byte[]) "," Set the transceive(byte[]) timeout in milliseconds. <br /><br />"
"android.nfc.tech.NfcF.getTimeout ()   Get the current transceive (byte[]) "," Get the current transceive(byte[]) timeout in milliseconds. <br /><br />"
"android.nfc.tech.NfcF.getSystemCode () "," Return the System Code bytes from tag discovery. <br /><br />"
"android.nfc.tech.NfcV.getDsfId () "," Return the DSF ID bytes from tag discovery. <br /><br />"
"android.nfc.tech.NfcV.get (Tag tag) "," Get an instance of NfcV for the given tag. <br /><br />"
"android.nfc.tech.NfcV.connect () "," Enable I/O operations to the tag from this TagTechnology object. <br /><br />"
"android.nfc.tech.NfcV.getResponseFlags () "," Return the Response Flag bytes from tag discovery. <br /><br />"
"android.nfc.tech.NfcV.getTag () "," Get the Tag object backing this TagTechnology object. <br /><br />"
"android.nfc.tech.NfcV.isConnected () "," Helper to indicate if I/O operations should be possible. <br /><br />"
"android.nfc.tech.NfcV.getMaxTransceiveLength ()   Return the maximum number of bytes that can be sent with transceive (byte[]) "," Return the maximum number of bytes that can be sent with transceive(byte[]). <br /><br />"
"android.nfc.tech.NfcV.close () "," Disable I/O operations to the tag from this TagTechnology object, and release resources. <br /><br />"
"android.nfc.tech.NfcV.transceive (byte[] data) "," Send raw NFC-V commands to the tag and receive the response. <br /><br />"
"android.nfc.tech.TagTechnology.connect () "," Enable I/O operations to the tag from this TagTechnology object. <br /><br />"
"android.nfc.tech.TagTechnology.getTag () "," Get the Tag object backing this TagTechnology object. <br /><br />"
"android.nfc.tech.TagTechnology.isConnected () "," Helper to indicate if I/O operations should be possible. <br /><br />"
"android.nfc.tech.TagTechnology.close () "," Disable I/O operations to the tag from this TagTechnology object, and release resources. <br /><br />"
"android.opengl.EGL14.eglGetCurrentSurface (int readdraw) "," no description <br /><br />"
"android.opengl.EGL14.eglSurfaceAttrib (EGLDisplay dpy, EGLSurface surface, int attribute, int value) "," no description <br /><br />"
"android.opengl.EGL14.eglDestroyContext (EGLDisplay dpy, EGLContext ctx) "," no description <br /><br />"
"android.opengl.EGL14.eglWaitGL () "," no description <br /><br />"
"android.opengl.EGL14.eglCreateWindowSurface (EGLDisplay dpy, EGLConfig config, Object win, int[] attrib_list, int offset) "," no description <br /><br />"
"android.opengl.EGL14.eglQueryString (EGLDisplay dpy, int name) "," no description <br /><br />"
"android.opengl.EGL14.eglReleaseThread () "," no description <br /><br />"
"android.opengl.EGL14.eglGetConfigs (EGLDisplay dpy, EGLConfig[] configs, int configsOffset, int config_size, int[] num_config, int num_configOffset) "," no description <br /><br />"
"android.opengl.EGL14.eglDestroySurface (EGLDisplay dpy, EGLSurface surface) "," no description <br /><br />"
"android.opengl.EGL14.eglCopyBuffers (EGLDisplay dpy, EGLSurface surface, int target) "," no description <br /><br />"
"android.opengl.EGL14.eglBindTexImage (EGLDisplay dpy, EGLSurface surface, int buffer) "," no description <br /><br />"
"android.opengl.EGL14.eglGetCurrentContext () "," no description <br /><br />"
"android.opengl.EGL14.eglQueryAPI () "," no description <br /><br />"
"android.opengl.EGL14.eglGetCurrentDisplay () "," no description <br /><br />"
"android.opengl.EGL14.eglGetError () "," no description <br /><br />"
"android.opengl.EGL14.eglCreateContext (EGLDisplay dpy, EGLConfig config, EGLContext share_context, int[] attrib_list, int offset) "," no description <br /><br />"
"android.opengl.EGL14.eglCreatePixmapSurface (EGLDisplay dpy, EGLConfig config, int pixmap, int[] attrib_list, int offset) "," no description <br /><br />"
"android.opengl.EGL14.eglCreatePbufferSurface (EGLDisplay dpy, EGLConfig config, int[] attrib_list, int offset) "," no description <br /><br />"
"android.opengl.EGL14.eglMakeCurrent (EGLDisplay dpy, EGLSurface draw, EGLSurface read, EGLContext ctx) "," no description <br /><br />"
"android.opengl.EGL14.eglCreatePbufferFromClientBuffer (EGLDisplay dpy, int buftype, int buffer, EGLConfig config, int[] attrib_list, int offset) "," no description <br /><br />"
"android.opengl.EGL14.eglChooseConfig (EGLDisplay dpy, int[] attrib_list, int attrib_listOffset, EGLConfig[] configs, int configsOffset, int config_size, int[] num_config, int num_configOffset) "," no description <br /><br />"
"android.opengl.EGL14.eglWaitClient () "," no description <br /><br />"
"android.opengl.EGL14.eglReleaseTexImage (EGLDisplay dpy, EGLSurface surface, int buffer) "," no description <br /><br />"
"android.opengl.EGL14.eglQuerySurface (EGLDisplay dpy, EGLSurface surface, int attribute, int[] value, int offset) "," no description <br /><br />"
"android.opengl.EGL14.eglSwapInterval (EGLDisplay dpy, int interval) "," no description <br /><br />"
"android.opengl.EGL14.eglWaitNative (int engine) "," no description <br /><br />"
"android.opengl.EGL14.eglInitialize (EGLDisplay dpy, int[] major, int majorOffset, int[] minor, int minorOffset) "," no description <br /><br />"
"android.opengl.EGL14.eglQueryContext (EGLDisplay dpy, EGLContext ctx, int attribute, int[] value, int offset) "," no description <br /><br />"
"android.opengl.EGL14.eglSwapBuffers (EGLDisplay dpy, EGLSurface surface) "," no description <br /><br />"
"android.opengl.EGL14.eglBindAPI (int api) "," no description <br /><br />"
"android.opengl.EGL14.eglGetDisplay (int display_id) "," no description <br /><br />"
"android.opengl.EGL14.eglGetConfigAttrib (EGLDisplay dpy, EGLConfig config, int attribute, int[] value, int offset) "," no description <br /><br />"
"android.opengl.EGL14.eglTerminate (EGLDisplay dpy) "," no description <br /><br />"
"android.opengl.EGLConfig.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.opengl.EGLContext.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.opengl.EGLDisplay.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.opengl.EGLExt.eglPresentationTimeANDROID (EGLDisplay dpy, EGLSurface sur, long time) "," no description <br /><br />"
"android.opengl.EGLObjectHandle.getNativeHandle () "," Returns the native handle of the wrapped EGL object. <br /><br />"
"android.opengl.EGLObjectHandle.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.opengl.EGLObjectHandle.getHandle ()    This method was deprecated in API level 21. Use getNativeHandle () "," This method was deprecated in API level 21. Use getNativeHandle() instead. Handles on 64 bit platforms will be wider than java ints. <br /><br />"
"android.opengl.EGLSurface.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.opengl.ETC1.encodeBlock (Buffer in, int validPixelMask, Buffer out) "," Encode a block of pixels. <br /><br />"
"android.opengl.ETC1.formatHeader (Buffer header, int width, int height) "," Format a PKM header <br /><br />"
"android.opengl.ETC1.decodeBlock (Buffer in, Buffer out) "," Decode a block of pixels. <br /><br />"
"android.opengl.ETC1.getWidth (Buffer header) "," Read the image width from a PKM header <br /><br />"
"android.opengl.ETC1.isValid (Buffer header) "," Check if a PKM header is correctly formatted. <br /><br />"
"android.opengl.ETC1.getHeight (Buffer header) "," Read the image height from a PKM header <br /><br />"
"android.opengl.ETC1.getEncodedDataSize (int width, int height)   Return the size of the encoded image data  (does not include size of PKM header) "," Return the size of the encoded image data (does not include size of PKM header). <br /><br />"
"android.opengl.ETC1.encodeImage (Buffer in, int width, int height, int pixelSize, int stride, Buffer out) "," Encode an entire image. <br /><br />"
"android.opengl.ETC1.decodeImage (Buffer in, Buffer out, int width, int height, int pixelSize, int stride) "," Decode an entire image. <br /><br />"
"android.opengl.ETC1Util.ETC1Texture.getHeight () "," Get the height of the texture in pixels. <br /><br />"
"android.opengl.ETC1Util.ETC1Texture.getData () "," Get the compressed data of the texture. <br /><br />"
"android.opengl.ETC1Util.ETC1Texture.getWidth () "," Get the width of the texture in pixels. <br /><br />"
"android.opengl.ETC1Util.createTexture (InputStream input) "," Create a new ETC1Texture from an input stream containing a PKM formatted compressed texture. <br /><br />"
"android.opengl.ETC1Util.compressTexture (Buffer input, int width, int height, int pixelSize, int stride) "," Helper function that compresses an image into an ETC1Texture. <br /><br />"
"android.opengl.ETC1Util.writeTexture (ETC1Util.ETC1Texture texture, OutputStream output) "," Helper function that writes an ETC1Texture to an output stream formatted as a PKM file. <br /><br />"
"android.opengl.ETC1Util.loadTexture (int target, int level, int border, int fallbackFormat, int fallbackType, ETC1Util.ETC1Texture texture) "," Convenience method to load an ETC1 texture whether or not the active OpenGL context supports the ETC1 texture compression format. <br /><br />"
"android.opengl.ETC1Util.loadTexture (int target, int level, int border, int fallbackFormat, int fallbackType, InputStream input) "," Convenience method to load an ETC1 texture whether or not the active OpenGL context supports the ETC1 texture compression format. <br /><br />"
"android.opengl.ETC1Util.isETC1Supported () "," Check if ETC1 texture compression is supported by the active OpenGL ES context. <br /><br />"
"android.opengl.GLDebugHelper.wrap (EGL egl, int configFlags, Writer log) "," Wrap an existing EGL interface in a new EGL interface that adds support for error checking and/or logging. <br /><br />"
"android.opengl.GLDebugHelper.wrap (GL gl, int configFlags, Writer log) "," no description <br /><br />"
"android.opengl.GLES10.glMultMatrixf (FloatBuffer m) "," no description <br /><br />"
"android.opengl.GLES10.glGetIntegerv (int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES10.glColor4x (int red, int green, int blue, int alpha) "," no description <br /><br />"
"android.opengl.GLES10.glHint (int target, int mode) "," no description <br /><br />"
"android.opengl.GLES10.glDrawArrays (int mode, int first, int count) "," no description <br /><br />"
"android.opengl.GLES10.glLightxv (int light, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES10.glFogx (int pname, int param) "," no description <br /><br />"
"android.opengl.GLES10.glStencilFunc (int func, int ref, int mask) "," no description <br /><br />"
"android.opengl.GLES10.glTexParameterx (int target, int pname, int param) "," no description <br /><br />"
"android.opengl.GLES10.glMaterialf (int face, int pname, float param) "," no description <br /><br />"
"android.opengl.GLES10.glViewport (int x, int y, int width, int height) "," no description <br /><br />"
"android.opengl.GLES10.glNormal3x (int nx, int ny, int nz) "," no description <br /><br />"
"android.opengl.GLES10.glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) "," no description <br /><br />"
"android.opengl.GLES10.glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, Buffer pixels) "," no description <br /><br />"
"android.opengl.GLES10.glTexImage2D (int target, int level, int internalformat, int width, int height, int border, int format, int type, Buffer pixels) "," no description <br /><br />"
"android.opengl.GLES10.glMaterialxv (int face, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES10.glLoadMatrixf (float[] m, int offset) "," no description <br /><br />"
"android.opengl.GLES10.glDisableClientState (int array) "," no description <br /><br />"
"android.opengl.GLES10.glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) "," no description <br /><br />"
"android.opengl.GLES10.glOrthox (int left, int right, int bottom, int top, int zNear, int zFar) "," no description <br /><br />"
"android.opengl.GLES10.glMaterialfv (int face, int pname, float[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES10.glScissor (int x, int y, int width, int height) "," no description <br /><br />"
"android.opengl.GLES10.glActiveTexture (int texture) "," no description <br /><br />"
"android.opengl.GLES10.glDepthRangex (int zNear, int zFar) "," no description <br /><br />"
"android.opengl.GLES10.glAlphaFuncx (int func, int ref) "," no description <br /><br />"
"android.opengl.GLES10.glScalef (float x, float y, float z) "," no description <br /><br />"
"android.opengl.GLES10.glClearDepthf (float depth) "," no description <br /><br />"
"android.opengl.GLES10.glStencilMask (int mask) "," no description <br /><br />"
"android.opengl.GLES10.glTexEnvfv (int target, int pname, FloatBuffer params) "," no description <br /><br />"
"android.opengl.GLES10.glLoadMatrixf (FloatBuffer m) "," no description <br /><br />"
"android.opengl.GLES10.glLoadMatrixx (int[] m, int offset) "," no description <br /><br />"
"android.opengl.GLES10.glDrawElements (int mode, int count, int type, Buffer indices) "," no description <br /><br />"
"android.opengl.GLES10.glTexParameterf (int target, int pname, float param) "," no description <br /><br />"
"android.opengl.GLES10.glTexCoordPointer (int size, int type, int stride, Buffer pointer) "," no description <br /><br />"
"android.opengl.GLES10.glLightx (int light, int pname, int param) "," no description <br /><br />"
"android.opengl.GLES10.glDepthMask (boolean flag) "," no description <br /><br />"
"android.opengl.GLES10.glMultiTexCoord4f (int target, float s, float t, float r, float q) "," no description <br /><br />"
"android.opengl.GLES10.glCompressedTexImage2D (int target, int level, int internalformat, int width, int height, int border, int imageSize, Buffer data) "," no description <br /><br />"
"android.opengl.GLES10.glClear (int mask) "," no description <br /><br />"
"android.opengl.GLES10.glFinish () "," no description <br /><br />"
"android.opengl.GLES10.glNormal3f (float nx, float ny, float nz) "," no description <br /><br />"
"android.opengl.GLES10.glTranslatef (float x, float y, float z) "," no description <br /><br />"
"android.opengl.GLES10.glClearColor (float red, float green, float blue, float alpha) "," no description <br /><br />"
"android.opengl.GLES10.glLightModelf (int pname, float param) "," no description <br /><br />"
"android.opengl.GLES10.glFogf (int pname, float param) "," no description <br /><br />"
"android.opengl.GLES10.glFogfv (int pname, FloatBuffer params) "," no description <br /><br />"
"android.opengl.GLES10.glCullFace (int mode) "," no description <br /><br />"
"android.opengl.GLES10.glLightModelxv (int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES10.glLightfv (int light, int pname, float[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES10.glFrustumf (float left, float right, float bottom, float top, float zNear, float zFar) "," no description <br /><br />"
"android.opengl.GLES10.glDepthFunc (int func) "," no description <br /><br />"
"android.opengl.GLES10.glDeleteTextures (int n, IntBuffer textures) "," no description <br /><br />"
"android.opengl.GLES10.glLightModelfv (int pname, FloatBuffer params) "," no description <br /><br />"
"android.opengl.GLES10.glLightfv (int light, int pname, FloatBuffer params) "," no description <br /><br />"
"android.opengl.GLES10.glMultMatrixf (float[] m, int offset) "," no description <br /><br />"
"android.opengl.GLES10.glMatrixMode (int mode) "," no description <br /><br />"
"android.opengl.GLES10.glLineWidthx (int width) "," no description <br /><br />"
"android.opengl.GLES10.glEnableClientState (int array) "," no description <br /><br />"
"android.opengl.GLES10.glBlendFunc (int sfactor, int dfactor) "," no description <br /><br />"
"android.opengl.GLES10.glSampleCoverage (float value, boolean invert) "," no description <br /><br />"
"android.opengl.GLES10.glColorMask (boolean red, boolean green, boolean blue, boolean alpha) "," no description <br /><br />"
"android.opengl.GLES10.glGetString (int name) "," no description <br /><br />"
"android.opengl.GLES10.glVertexPointer (int size, int type, int stride, Buffer pointer) "," no description <br /><br />"
"android.opengl.GLES10.glLoadIdentity () "," no description <br /><br />"
"android.opengl.GLES10.glTexEnvxv (int target, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES10.glGetError () "," no description <br /><br />"
"android.opengl.GLES10.glLightxv (int light, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES10.glTexEnvf (int target, int pname, float param) "," no description <br /><br />"
"android.opengl.GLES10.glColor4f (float red, float green, float blue, float alpha) "," no description <br /><br />"
"android.opengl.GLES10.glMultMatrixx (IntBuffer m) "," no description <br /><br />"
"android.opengl.GLES10.glStencilOp (int fail, int zfail, int zpass) "," no description <br /><br />"
"android.opengl.GLES10.glRotatef (float angle, float x, float y, float z) "," no description <br /><br />"
"android.opengl.GLES10.glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) "," no description <br /><br />"
"android.opengl.GLES10.glFrustumx (int left, int right, int bottom, int top, int zNear, int zFar) "," no description <br /><br />"
"android.opengl.GLES10.glGenTextures (int n, IntBuffer textures) "," no description <br /><br />"
"android.opengl.GLES10.glPointSize (float size) "," no description <br /><br />"
"android.opengl.GLES10.glClearStencil (int s) "," no description <br /><br />"
"android.opengl.GLES10.glTexEnvx (int target, int pname, int param) "," no description <br /><br />"
"android.opengl.GLES10.glScalex (int x, int y, int z) "," no description <br /><br />"
"android.opengl.GLES10.glPixelStorei (int pname, int param) "," no description <br /><br />"
"android.opengl.GLES10.glCompressedTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, Buffer data) "," no description <br /><br />"
"android.opengl.GLES10.glTexEnvxv (int target, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES10.glLightModelx (int pname, int param) "," no description <br /><br />"
"android.opengl.GLES10.glLightModelfv (int pname, float[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES10.glRotatex (int angle, int x, int y, int z) "," no description <br /><br />"
"android.opengl.GLES10.glLightf (int light, int pname, float param) "," no description <br /><br />"
"android.opengl.GLES10.glFogfv (int pname, float[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES10.glLineWidth (float width) "," no description <br /><br />"
"android.opengl.GLES10.glFrontFace (int mode) "," no description <br /><br />"
"android.opengl.GLES10.glBindTexture (int target, int texture) "," no description <br /><br />"
"android.opengl.GLES10.glGenTextures (int n, int[] textures, int offset) "," no description <br /><br />"
"android.opengl.GLES10.glLightModelxv (int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES10.glDisable (int cap) "," no description <br /><br />"
"android.opengl.GLES10.glMultiTexCoord4x (int target, int s, int t, int r, int q) "," no description <br /><br />"
"android.opengl.GLES10.glNormalPointer (int type, int stride, Buffer pointer) "," no description <br /><br />"
"android.opengl.GLES10.glTranslatex (int x, int y, int z) "," no description <br /><br />"
"android.opengl.GLES10.glGetIntegerv (int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES10.glLoadMatrixx (IntBuffer m) "," no description <br /><br />"
"android.opengl.GLES10.glMaterialfv (int face, int pname, FloatBuffer params) "," no description <br /><br />"
"android.opengl.GLES10.glPushMatrix () "," no description <br /><br />"
"android.opengl.GLES10.glDepthRangef (float zNear, float zFar) "," no description <br /><br />"
"android.opengl.GLES10.glTexEnvfv (int target, int pname, float[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES10.glSampleCoveragex (int value, boolean invert) "," no description <br /><br />"
"android.opengl.GLES10.glLogicOp (int opcode) "," no description <br /><br />"
"android.opengl.GLES10.glShadeModel (int mode) "," no description <br /><br />"
"android.opengl.GLES10.glPolygonOffsetx (int factor, int units) "," no description <br /><br />"
"android.opengl.GLES10.glClearColorx (int red, int green, int blue, int alpha) "," no description <br /><br />"
"android.opengl.GLES10.glClearDepthx (int depth) "," no description <br /><br />"
"android.opengl.GLES10.glPointSizex (int size) "," no description <br /><br />"
"android.opengl.GLES10.glDeleteTextures (int n, int[] textures, int offset) "," no description <br /><br />"
"android.opengl.GLES10.glFlush () "," no description <br /><br />"
"android.opengl.GLES10.glEnable (int cap) "," no description <br /><br />"
"android.opengl.GLES10.glMaterialxv (int face, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES10.glOrthof (float left, float right, float bottom, float top, float zNear, float zFar) "," no description <br /><br />"
"android.opengl.GLES10.glClientActiveTexture (int texture) "," no description <br /><br />"
"android.opengl.GLES10.glFogxv (int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES10.glAlphaFunc (int func, float ref) "," no description <br /><br />"
"android.opengl.GLES10.glMaterialx (int face, int pname, int param) "," no description <br /><br />"
"android.opengl.GLES10.glPolygonOffset (float factor, float units) "," no description <br /><br />"
"android.opengl.GLES10.glFogxv (int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES10.glColorPointer (int size, int type, int stride, Buffer pointer) "," no description <br /><br />"
"android.opengl.GLES10.glMultMatrixx (int[] m, int offset) "," no description <br /><br />"
"android.opengl.GLES10.glPopMatrix () "," no description <br /><br />"
"android.opengl.GLES10Ext.glQueryMatrixxOES (int[] mantissa, int mantissaOffset, int[] exponent, int exponentOffset) "," no description <br /><br />"
"android.opengl.GLES10Ext.glQueryMatrixxOES (IntBuffer mantissa, IntBuffer exponent) "," no description <br /><br />"
"android.opengl.GLES11.glGetMaterialxv (int face, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11.glGetMaterialxv (int face, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glDeleteBuffers (int n, IntBuffer buffers) "," no description <br /><br />"
"android.opengl.GLES11.glTexParameterfv (int target, int pname, float[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glGetClipPlanef (int pname, FloatBuffer eqn) "," no description <br /><br />"
"android.opengl.GLES11.glGetTexParameteriv (int target, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11.glGetBufferParameteriv (int target, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11.glGetMaterialfv (int face, int pname, float[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glGetFixedv (int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glGetClipPlanex (int pname, IntBuffer eqn) "," no description <br /><br />"
"android.opengl.GLES11.glTexEnviv (int target, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11.glTexParameteriv (int target, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11.glGetLightfv (int light, int pname, FloatBuffer params) "," no description <br /><br />"
"android.opengl.GLES11.glGetFixedv (int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11.glGetTexEnvfv (int env, int pname, float[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glGetClipPlanex (int pname, int[] eqn, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glGetTexParameterfv (int target, int pname, FloatBuffer params) "," no description <br /><br />"
"android.opengl.GLES11.glTexParameterxv (int target, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glGetTexParameterxv (int target, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glClipPlanex (int plane, IntBuffer equation) "," no description <br /><br />"
"android.opengl.GLES11.glPointParameterxv (int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glGetFloatv (int pname, float[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glTexCoordPointer (int size, int type, int stride, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glGetTexEnvxv (int env, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11.glGetTexParameterfv (int target, int pname, float[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glNormalPointer (int type, int stride, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glDrawElements (int mode, int count, int type, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glTexEnviv (int target, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glPointParameterfv (int pname, FloatBuffer params) "," no description <br /><br />"
"android.opengl.GLES11.glPointParameterfv (int pname, float[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glGetTexEnviv (int env, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11.glTexEnvi (int target, int pname, int param) "," no description <br /><br />"
"android.opengl.GLES11.glColor4ub (byte red, byte green, byte blue, byte alpha) "," no description <br /><br />"
"android.opengl.GLES11.glIsTexture (int texture) "," no description <br /><br />"
"android.opengl.GLES11.glGetTexEnvfv (int env, int pname, FloatBuffer params) "," no description <br /><br />"
"android.opengl.GLES11.glIsEnabled (int cap) "," no description <br /><br />"
"android.opengl.GLES11.glGetTexEnvxv (int env, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glBufferData (int target, int size, Buffer data, int usage) "," no description <br /><br />"
"android.opengl.GLES11.glGetTexParameteriv (int target, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glClipPlanef (int plane, float[] equation, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glPointParameterf (int pname, float param) "," no description <br /><br />"
"android.opengl.GLES11.glTexParameterxv (int target, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11.glGetFloatv (int pname, FloatBuffer params) "," no description <br /><br />"
"android.opengl.GLES11.glDeleteBuffers (int n, int[] buffers, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glGetLightxv (int light, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glGetLightfv (int light, int pname, float[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glGetClipPlanef (int pname, float[] eqn, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glPointParameterxv (int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11.glGetBooleanv (int pname, boolean[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glVertexPointer (int size, int type, int stride, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glGetLightxv (int light, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11.glTexParameteri (int target, int pname, int param) "," no description <br /><br />"
"android.opengl.GLES11.glGetMaterialfv (int face, int pname, FloatBuffer params) "," no description <br /><br />"
"android.opengl.GLES11.glBindBuffer (int target, int buffer) "," no description <br /><br />"
"android.opengl.GLES11.glBufferSubData (int target, int offset, int size, Buffer data) "," no description <br /><br />"
"android.opengl.GLES11.glGetTexParameterxv (int target, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11.glGetBufferParameteriv (int target, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glColorPointer (int size, int type, int stride, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glClipPlanex (int plane, int[] equation, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glPointParameterx (int pname, int param) "," no description <br /><br />"
"android.opengl.GLES11.glGetTexEnviv (int env, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glGetBooleanv (int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11.glClipPlanef (int plane, FloatBuffer equation) "," no description <br /><br />"
"android.opengl.GLES11.glGenBuffers (int n, IntBuffer buffers) "," no description <br /><br />"
"android.opengl.GLES11.glTexParameterfv (int target, int pname, FloatBuffer params) "," no description <br /><br />"
"android.opengl.GLES11.glPointSizePointerOES (int type, int stride, Buffer pointer) "," no description <br /><br />"
"android.opengl.GLES11.glGenBuffers (int n, int[] buffers, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glTexParameteriv (int target, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11.glIsBuffer (int buffer) "," no description <br /><br />"
"android.opengl.GLES11Ext.glTexEnvxOES (int target, int pname, int param) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetLightxvOES (int light, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetTexParameterxvOES (int target, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetRenderbufferParameterivOES (int target, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glLoadPaletteFromModelViewMatrixOES () "," no description <br /><br />"
"android.opengl.GLES11Ext.glDrawTexivOES (int[] coords, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetClipPlanefOES (int pname, FloatBuffer eqn) "," no description <br /><br />"
"android.opengl.GLES11Ext.glPointParameterxOES (int pname, int param) "," no description <br /><br />"
"android.opengl.GLES11Ext.glClipPlanefOES (int plane, float[] equation, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGenerateMipmapOES (int target) "," no description <br /><br />"
"android.opengl.GLES11Ext.glDeleteFramebuffersOES (int n, int[] framebuffers, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glMultMatrixxOES (int[] m, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glTranslatexOES (int x, int y, int z) "," no description <br /><br />"
"android.opengl.GLES11Ext.glBindFramebufferOES (int target, int framebuffer) "," no description <br /><br />"
"android.opengl.GLES11Ext.glFrustumfOES (float left, float right, float bottom, float top, float zNear, float zFar) "," no description <br /><br />"
"android.opengl.GLES11Ext.glMultiTexCoord4xOES (int target, int s, int t, int r, int q) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetClipPlanefOES (int pname, float[] eqn, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glBlendFuncSeparateOES (int srcRGB, int dstRGB, int srcAlpha, int dstAlpha) "," no description <br /><br />"
"android.opengl.GLES11Ext.glDrawTexsvOES (short[] coords, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glTexGenxvOES (int coord, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11Ext.glTexGenfvOES (int coord, int pname, float[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glScalexOES (int x, int y, int z) "," no description <br /><br />"
"android.opengl.GLES11Ext.glClearColorxOES (int red, int green, int blue, int alpha) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetTexEnvxvOES (int env, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11Ext.glLightxOES (int light, int pname, int param) "," no description <br /><br />"
"android.opengl.GLES11Ext.glDrawTexfvOES (FloatBuffer coords) "," no description <br /><br />"
"android.opengl.GLES11Ext.glClipPlanexOES (int plane, IntBuffer equation) "," no description <br /><br />"
"android.opengl.GLES11Ext.glTexGenfvOES (int coord, int pname, FloatBuffer params) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetRenderbufferParameterivOES (int target, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11Ext.glLineWidthxOES (int width) "," no description <br /><br />"
"android.opengl.GLES11Ext.glPointParameterxvOES (int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11Ext.glTexGenxvOES (int coord, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glFramebufferTexture2DOES (int target, int attachment, int textarget, int texture, int level) "," no description <br /><br />"
"android.opengl.GLES11Ext.glLightxvOES (int light, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11Ext.glLoadMatrixxOES (IntBuffer m) "," no description <br /><br />"
"android.opengl.GLES11Ext.glDrawTexiOES (int x, int y, int z, int width, int height) "," no description <br /><br />"
"android.opengl.GLES11Ext.glNormal3xOES (int nx, int ny, int nz) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGenRenderbuffersOES (int n, IntBuffer renderbuffers) "," no description <br /><br />"
"android.opengl.GLES11Ext.glDrawTexxvOES (int[] coords, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glMaterialxvOES (int face, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11Ext.glRotatexOES (int angle, int x, int y, int z) "," no description <br /><br />"
"android.opengl.GLES11Ext.glTexEnvxvOES (int target, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glTexParameterxvOES (int target, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetTexGenfvOES (int coord, int pname, FloatBuffer params) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetTexParameterxvOES (int target, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glFramebufferRenderbufferOES (int target, int attachment, int renderbuffertarget, int renderbuffer) "," no description <br /><br />"
"android.opengl.GLES11Ext.glClipPlanexOES (int plane, int[] equation, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glMaterialxvOES (int face, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glFogxvOES (int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11Ext.glDrawTexfvOES (float[] coords, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glFogxvOES (int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glOrthofOES (float left, float right, float bottom, float top, float zNear, float zFar) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetFramebufferAttachmentParameterivOES (int target, int attachment, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetLightxvOES (int light, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11Ext.glClearDepthfOES (float depth) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetClipPlanexOES (int pname, IntBuffer eqn) "," no description <br /><br />"
"android.opengl.GLES11Ext.glLightModelxvOES (int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11Ext.glTexGenxOES (int coord, int pname, int param) "," no description <br /><br />"
"android.opengl.GLES11Ext.glTexEnvxvOES (int target, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11Ext.glOrthoxOES (int left, int right, int bottom, int top, int zNear, int zFar) "," no description <br /><br />"
"android.opengl.GLES11Ext.glBlendEquationOES (int mode) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetMaterialxvOES (int face, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glDeleteRenderbuffersOES (int n, int[] renderbuffers, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glLightModelxvOES (int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glBlendEquationSeparateOES (int modeRGB, int modeAlpha) "," no description <br /><br />"
"android.opengl.GLES11Ext.glAlphaFuncxOES (int func, int ref) "," no description <br /><br />"
"android.opengl.GLES11Ext.glTexGenivOES (int coord, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glDrawTexsOES (short x, short y, short z, short width, short height) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetTexEnvxvOES (int env, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glPointSizexOES (int size) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetTexGenxvOES (int coord, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetTexGenivOES (int coord, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11Ext.glTexGeniOES (int coord, int pname, int param) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetTexGenfvOES (int coord, int pname, float[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetFramebufferAttachmentParameterivOES (int target, int attachment, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glPolygonOffsetxOES (int factor, int units) "," no description <br /><br />"
"android.opengl.GLES11Ext.glTexGenfOES (int coord, int pname, float param) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGenRenderbuffersOES (int n, int[] renderbuffers, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glWeightPointerOES (int size, int type, int stride, Buffer pointer) "," no description <br /><br />"
"android.opengl.GLES11Ext.glDrawTexfOES (float x, float y, float z, float width, float height) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetTexGenxvOES (int coord, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glLightModelxOES (int pname, int param) "," no description <br /><br />"
"android.opengl.GLES11Ext.glClearDepthxOES (int depth) "," no description <br /><br />"
"android.opengl.GLES11Ext.glDepthRangefOES (float zNear, float zFar) "," no description <br /><br />"
"android.opengl.GLES11Ext.glDeleteRenderbuffersOES (int n, IntBuffer renderbuffers) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetFixedvOES (int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glClipPlanefOES (int plane, FloatBuffer equation) "," no description <br /><br />"
"android.opengl.GLES11Ext.glTexParameterxvOES (int target, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glPointParameterxvOES (int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glDepthRangexOES (int zNear, int zFar) "," no description <br /><br />"
"android.opengl.GLES11Ext.glMaterialxOES (int face, int pname, int param) "," no description <br /><br />"
"android.opengl.GLES11Ext.glDrawTexxOES (int x, int y, int z, int width, int height) "," no description <br /><br />"
"android.opengl.GLES11Ext.glFogxOES (int pname, int param) "," no description <br /><br />"
"android.opengl.GLES11Ext.glTexParameterxOES (int target, int pname, int param) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGenFramebuffersOES (int n, int[] framebuffers, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetMaterialxvOES (int face, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetTexGenivOES (int coord, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glDeleteFramebuffersOES (int n, IntBuffer framebuffers) "," no description <br /><br />"
"android.opengl.GLES11Ext.glDrawTexsvOES (ShortBuffer coords) "," no description <br /><br />"
"android.opengl.GLES11Ext.glDrawTexxvOES (IntBuffer coords) "," no description <br /><br />"
"android.opengl.GLES11Ext.glDrawTexivOES (IntBuffer coords) "," no description <br /><br />"
"android.opengl.GLES11Ext.glCheckFramebufferStatusOES (int target) "," no description <br /><br />"
"android.opengl.GLES11Ext.glMatrixIndexPointerOES (int size, int type, int stride, Buffer pointer) "," no description <br /><br />"
"android.opengl.GLES11Ext.glIsFramebufferOES (int framebuffer) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGenFramebuffersOES (int n, IntBuffer framebuffers) "," no description <br /><br />"
"android.opengl.GLES11Ext.glCurrentPaletteMatrixOES (int matrixpaletteindex) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetFixedvOES (int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11Ext.glSampleCoveragexOES (int value, boolean invert) "," no description <br /><br />"
"android.opengl.GLES11Ext.glEGLImageTargetTexture2DOES (int target, Buffer image) "," no description <br /><br />"
"android.opengl.GLES11Ext.glEGLImageTargetRenderbufferStorageOES (int target, Buffer image) "," no description <br /><br />"
"android.opengl.GLES11Ext.glBindRenderbufferOES (int target, int renderbuffer) "," no description <br /><br />"
"android.opengl.GLES11Ext.glRenderbufferStorageOES (int target, int internalformat, int width, int height) "," no description <br /><br />"
"android.opengl.GLES11Ext.glColor4xOES (int red, int green, int blue, int alpha) "," no description <br /><br />"
"android.opengl.GLES11Ext.glTexGenivOES (int coord, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES11Ext.glMultMatrixxOES (IntBuffer m) "," no description <br /><br />"
"android.opengl.GLES11Ext.glLoadMatrixxOES (int[] m, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glGetClipPlanexOES (int pname, int[] eqn, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glFrustumxOES (int left, int right, int bottom, int top, int zNear, int zFar) "," no description <br /><br />"
"android.opengl.GLES11Ext.glLightxvOES (int light, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES11Ext.glIsRenderbufferOES (int renderbuffer) "," no description <br /><br />"
"android.opengl.GLES20.glHint (int target, int mode) "," no description <br /><br />"
"android.opengl.GLES20.glGetIntegerv (int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES20.glUniform2f (int location, float x, float y) "," no description <br /><br />"
"android.opengl.GLES20.glDrawArrays (int mode, int first, int count) "," no description <br /><br />"
"android.opengl.GLES20.glFramebufferTexture2D (int target, int attachment, int textarget, int texture, int level) "," no description <br /><br />"
"android.opengl.GLES20.glStencilFunc (int func, int ref, int mask) "," no description <br /><br />"
"android.opengl.GLES20.glBlendEquation (int mode) "," no description <br /><br />"
"android.opengl.GLES20.glGenRenderbuffers (int n, int[] renderbuffers, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glBlendEquationSeparate (int modeRGB, int modeAlpha) "," no description <br /><br />"
"android.opengl.GLES20.glCompileShader (int shader) "," no description <br /><br />"
"android.opengl.GLES20.glTexParameterfv (int target, int pname, float[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glGetActiveUniform (int program, int index, int bufsize, int[] length, int lengthOffset, int[] size, int sizeOffset, int[] type, int typeOffset, byte[] name, int nameOffset) "," no description <br /><br />"
"android.opengl.GLES20.glValidateProgram (int program) "," no description <br /><br />"
"android.opengl.GLES20.glGetTexParameteriv (int target, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES20.glGetUniformiv (int program, int location, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES20.glGetBufferParameteriv (int target, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES20.glGetActiveUniform (int program, int index, IntBuffer size, IntBuffer type) "," no description <br /><br />"
"android.opengl.GLES20.glViewport (int x, int y, int width, int height) "," no description <br /><br />"
"android.opengl.GLES20.glVertexAttrib4f (int indx, float x, float y, float z, float w) "," no description <br /><br />"
"android.opengl.GLES20.glUniform4iv (int location, int count, IntBuffer v) "," no description <br /><br />"
"android.opengl.GLES20.glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border) "," no description <br /><br />"
"android.opengl.GLES20.glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, Buffer pixels) "," no description <br /><br />"
"android.opengl.GLES20.glTexParameteriv (int target, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES20.glTexImage2D (int target, int level, int internalformat, int width, int height, int border, int format, int type, Buffer pixels) "," no description <br /><br />"
"android.opengl.GLES20.glDetachShader (int program, int shader) "," no description <br /><br />"
"android.opengl.GLES20.glUniform4fv (int location, int count, float[] v, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glUniform2iv (int location, int count, IntBuffer v) "," no description <br /><br />"
"android.opengl.GLES20.glUseProgram (int program) "," no description <br /><br />"
"android.opengl.GLES20.glDeleteFramebuffers (int n, int[] framebuffers, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glGetTexParameterfv (int target, int pname, FloatBuffer params) "," no description <br /><br />"
"android.opengl.GLES20.glUniform4f (int location, float x, float y, float z, float w) "," no description <br /><br />"
"android.opengl.GLES20.glReadPixels (int x, int y, int width, int height, int format, int type, Buffer pixels) "," no description <br /><br />"
"android.opengl.GLES20.glVertexAttrib2fv (int indx, float[] values, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glUniformMatrix3fv (int location, int count, boolean transpose, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glScissor (int x, int y, int width, int height) "," no description <br /><br />"
"android.opengl.GLES20.glActiveTexture (int texture) "," no description <br /><br />"
"android.opengl.GLES20.glGetShaderSource (int shader, int bufsize, int[] length, int lengthOffset, byte[] source, int sourceOffset) "," no description <br /><br />"
"android.opengl.GLES20.glGetVertexAttribfv (int index, int pname, FloatBuffer params) "," no description <br /><br />"
"android.opengl.GLES20.glGetUniformfv (int program, int location, FloatBuffer params) "," no description <br /><br />"
"android.opengl.GLES20.glGetAttachedShaders (int program, int maxcount, IntBuffer count, IntBuffer shaders) "," no description <br /><br />"
"android.opengl.GLES20.glClearDepthf (float depth) "," no description <br /><br />"
"android.opengl.GLES20.glCheckFramebufferStatus (int target) "," no description <br /><br />"
"android.opengl.GLES20.glStencilMask (int mask) "," no description <br /><br />"
"android.opengl.GLES20.glGetShaderPrecisionFormat (int shadertype, int precisiontype, IntBuffer range, IntBuffer precision) "," no description <br /><br />"
"android.opengl.GLES20.glReleaseShaderCompiler () "," no description <br /><br />"
"android.opengl.GLES20.glGenRenderbuffers (int n, IntBuffer renderbuffers) "," no description <br /><br />"
"android.opengl.GLES20.glVertexAttrib4fv (int indx, FloatBuffer values) "," no description <br /><br />"
"android.opengl.GLES20.glDrawElements (int mode, int count, int type, Buffer indices) "," no description <br /><br />"
"android.opengl.GLES20.glTexParameterf (int target, int pname, float param) "," no description <br /><br />"
"android.opengl.GLES20.glDepthMask (boolean flag) "," no description <br /><br />"
"android.opengl.GLES20.glGetActiveAttrib (int program, int index, int bufsize, int[] length, int lengthOffset, int[] size, int sizeOffset, int[] type, int typeOffset, byte[] name, int nameOffset) "," no description <br /><br />"
"android.opengl.GLES20.glGetShaderInfoLog (int shader) "," no description <br /><br />"
"android.opengl.GLES20.glUniformMatrix4fv (int location, int count, boolean transpose, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES20.glIsTexture (int texture) "," no description <br /><br />"
"android.opengl.GLES20.glDeleteRenderbuffers (int n, int[] renderbuffers, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glGetUniformfv (int program, int location, float[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glBufferData (int target, int size, Buffer data, int usage) "," no description <br /><br />"
"android.opengl.GLES20.glCompressedTexImage2D (int target, int level, int internalformat, int width, int height, int border, int imageSize, Buffer data) "," no description <br /><br />"
"android.opengl.GLES20.glClear (int mask) "," no description <br /><br />"
"android.opengl.GLES20.glFinish () "," no description <br /><br />"
"android.opengl.GLES20.glUniform3fv (int location, int count, float[] v, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glGetFloatv (int pname, FloatBuffer params) "," no description <br /><br />"
"android.opengl.GLES20.glRenderbufferStorage (int target, int internalformat, int width, int height) "," no description <br /><br />"
"android.opengl.GLES20.glGetRenderbufferParameteriv (int target, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES20.glVertexAttribPointer (int indx, int size, int type, boolean normalized, int stride, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glClearColor (float red, float green, float blue, float alpha) "," no description <br /><br />"
"android.opengl.GLES20.glUniformMatrix3fv (int location, int count, boolean transpose, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES20.glUniform3iv (int location, int count, int[] v, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glGetProgramiv (int program, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glCullFace (int mode) "," no description <br /><br />"
"android.opengl.GLES20.glGetVertexAttribiv (int index, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES20.glTexParameteri (int target, int pname, int param) "," no description <br /><br />"
"android.opengl.GLES20.glDepthFunc (int func) "," no description <br /><br />"
"android.opengl.GLES20.glBindBuffer (int target, int buffer) "," no description <br /><br />"
"android.opengl.GLES20.glUniform2fv (int location, int count, FloatBuffer v) "," no description <br /><br />"
"android.opengl.GLES20.glShaderSource (int shader, String string) "," no description <br /><br />"
"android.opengl.GLES20.glDeleteTextures (int n, IntBuffer textures) "," no description <br /><br />"
"android.opengl.GLES20.glUniform2fv (int location, int count, float[] v, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glBufferSubData (int target, int offset, int size, Buffer data) "," no description <br /><br />"
"android.opengl.GLES20.glGetBufferParameteriv (int target, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glUniform1fv (int location, int count, float[] v, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glVertexAttrib1f (int indx, float x) "," no description <br /><br />"
"android.opengl.GLES20.glUniform1fv (int location, int count, FloatBuffer v) "," no description <br /><br />"
"android.opengl.GLES20.glUniform3f (int location, float x, float y, float z) "," no description <br /><br />"
"android.opengl.GLES20.glBlendFunc (int sfactor, int dfactor) "," no description <br /><br />"
"android.opengl.GLES20.glGetBooleanv (int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES20.glSampleCoverage (float value, boolean invert) "," no description <br /><br />"
"android.opengl.GLES20.glUniform3iv (int location, int count, IntBuffer v) "," no description <br /><br />"
"android.opengl.GLES20.glColorMask (boolean red, boolean green, boolean blue, boolean alpha) "," no description <br /><br />"
"android.opengl.GLES20.glGenBuffers (int n, IntBuffer buffers) "," no description <br /><br />"
"android.opengl.GLES20.glUniform4i (int location, int x, int y, int z, int w) "," no description <br /><br />"
"android.opengl.GLES20.glGetString (int name) "," no description <br /><br />"
"android.opengl.GLES20.glTexParameterfv (int target, int pname, FloatBuffer params) "," no description <br /><br />"
"android.opengl.GLES20.glVertexAttrib1fv (int indx, FloatBuffer values) "," no description <br /><br />"
"android.opengl.GLES20.glDeleteShader (int shader) "," no description <br /><br />"
"android.opengl.GLES20.glGenBuffers (int n, int[] buffers, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glDeleteProgram (int program) "," no description <br /><br />"
"android.opengl.GLES20.glTexParameteriv (int target, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glGetVertexAttribiv (int index, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glUniform1f (int location, float x) "," no description <br /><br />"
"android.opengl.GLES20.glShaderBinary (int n, IntBuffer shaders, int binaryformat, Buffer binary, int length) "," no description <br /><br />"
"android.opengl.GLES20.glGetError () "," no description <br /><br />"
"android.opengl.GLES20.glVertexAttrib3f (int indx, float x, float y, float z) "," no description <br /><br />"
"android.opengl.GLES20.glStencilOp (int fail, int zfail, int zpass) "," no description <br /><br />"
"android.opengl.GLES20.glDeleteBuffers (int n, IntBuffer buffers) "," no description <br /><br />"
"android.opengl.GLES20.glIsShader (int shader) "," no description <br /><br />"
"android.opengl.GLES20.glFramebufferRenderbuffer (int target, int attachment, int renderbuffertarget, int renderbuffer) "," no description <br /><br />"
"android.opengl.GLES20.glUniform2iv (int location, int count, int[] v, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) "," no description <br /><br />"
"android.opengl.GLES20.glGetRenderbufferParameteriv (int target, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glIsRenderbuffer (int renderbuffer) "," no description <br /><br />"
"android.opengl.GLES20.glGenTextures (int n, IntBuffer textures) "," no description <br /><br />"
"android.opengl.GLES20.glEnableVertexAttribArray (int index) "," no description <br /><br />"
"android.opengl.GLES20.glGetShaderiv (int shader, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES20.glClearStencil (int s) "," no description <br /><br />"
"android.opengl.GLES20.glGetShaderiv (int shader, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glUniform3i (int location, int x, int y, int z) "," no description <br /><br />"
"android.opengl.GLES20.glPixelStorei (int pname, int param) "," no description <br /><br />"
"android.opengl.GLES20.glVertexAttrib3fv (int indx, float[] values, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glGetActiveUniform (int program, int index, int[] size, int sizeOffset, int[] type, int typeOffset) "," no description <br /><br />"
"android.opengl.GLES20.glCompressedTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, Buffer data) "," no description <br /><br />"
"android.opengl.GLES20.glGetFloatv (int pname, float[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glGetProgramiv (int program, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES20.glVertexAttrib2f (int indx, float x, float y) "," no description <br /><br />"
"android.opengl.GLES20.glGenerateMipmap (int target) "," no description <br /><br />"
"android.opengl.GLES20.glGetTexParameterfv (int target, int pname, float[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glDrawElements (int mode, int count, int type, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glGetActiveAttrib (int program, int index, IntBuffer size, IntBuffer type) "," no description <br /><br />"
"android.opengl.GLES20.glGetAttachedShaders (int program, int maxcount, int[] count, int countOffset, int[] shaders, int shadersOffset) "," no description <br /><br />"
"android.opengl.GLES20.glBindRenderbuffer (int target, int renderbuffer) "," no description <br /><br />"
"android.opengl.GLES20.glGetUniformLocation (int program, String name) "," no description <br /><br />"
"android.opengl.GLES20.glLineWidth (float width) "," no description <br /><br />"
"android.opengl.GLES20.glDisableVertexAttribArray (int index) "," no description <br /><br />"
"android.opengl.GLES20.glBlendFuncSeparate (int srcRGB, int dstRGB, int srcAlpha, int dstAlpha) "," no description <br /><br />"
"android.opengl.GLES20.glGetVertexAttribfv (int index, int pname, float[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glUniform1i (int location, int x) "," no description <br /><br />"
"android.opengl.GLES20.glBindTexture (int target, int texture) "," no description <br /><br />"
"android.opengl.GLES20.glFrontFace (int mode) "," no description <br /><br />"
"android.opengl.GLES20.glGetShaderSource (int shader) "," no description <br /><br />"
"android.opengl.GLES20.glGenTextures (int n, int[] textures, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glVertexAttrib2fv (int indx, FloatBuffer values) "," no description <br /><br />"
"android.opengl.GLES20.glDisable (int cap) "," no description <br /><br />"
"android.opengl.GLES20.glGenFramebuffers (int n, IntBuffer framebuffers) "," no description <br /><br />"
"android.opengl.GLES20.glIsEnabled (int cap) "," no description <br /><br />"
"android.opengl.GLES20.glStencilMaskSeparate (int face, int mask) "," no description <br /><br />"
"android.opengl.GLES20.glUniform1iv (int location, int count, int[] v, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glGetProgramInfoLog (int program) "," no description <br /><br />"
"android.opengl.GLES20.glIsFramebuffer (int framebuffer) "," no description <br /><br />"
"android.opengl.GLES20.glGetTexParameteriv (int target, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glCreateProgram () "," no description <br /><br />"
"android.opengl.GLES20.glGetIntegerv (int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glVertexAttrib1fv (int indx, float[] values, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glUniform3fv (int location, int count, FloatBuffer v) "," no description <br /><br />"
"android.opengl.GLES20.glCreateShader (int type) "," no description <br /><br />"
"android.opengl.GLES20.glUniform1iv (int location, int count, IntBuffer v) "," no description <br /><br />"
"android.opengl.GLES20.glUniformMatrix2fv (int location, int count, boolean transpose, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES20.glDepthRangef (float zNear, float zFar) "," no description <br /><br />"
"android.opengl.GLES20.glDeleteBuffers (int n, int[] buffers, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glBindFramebuffer (int target, int framebuffer) "," no description <br /><br />"
"android.opengl.GLES20.glUniform4fv (int location, int count, FloatBuffer v) "," no description <br /><br />"
"android.opengl.GLES20.glDeleteFramebuffers (int n, IntBuffer framebuffers) "," no description <br /><br />"
"android.opengl.GLES20.glGetShaderPrecisionFormat (int shadertype, int precisiontype, int[] range, int rangeOffset, int[] precision, int precisionOffset) "," no description <br /><br />"
"android.opengl.GLES20.glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glUniformMatrix4fv (int location, int count, boolean transpose, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glShaderBinary (int n, int[] shaders, int offset, int binaryformat, Buffer binary, int length) "," no description <br /><br />"
"android.opengl.GLES20.glUniformMatrix2fv (int location, int count, boolean transpose, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glVertexAttrib4fv (int indx, float[] values, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glStencilFuncSeparate (int face, int func, int ref, int mask) "," no description <br /><br />"
"android.opengl.GLES20.glVertexAttribPointer (int indx, int size, int type, boolean normalized, int stride, Buffer ptr) "," no description <br /><br />"
"android.opengl.GLES20.glGetBooleanv (int pname, boolean[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glUniform4iv (int location, int count, int[] v, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glBlendColor (float red, float green, float blue, float alpha) "," no description <br /><br />"
"android.opengl.GLES20.glGetUniformiv (int program, int location, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glVertexAttrib3fv (int indx, FloatBuffer values) "," no description <br /><br />"
"android.opengl.GLES20.glDeleteRenderbuffers (int n, IntBuffer renderbuffers) "," no description <br /><br />"
"android.opengl.GLES20.glGenFramebuffers (int n, int[] framebuffers, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glDeleteTextures (int n, int[] textures, int offset) "," no description <br /><br />"
"android.opengl.GLES20.glStencilOpSeparate (int face, int fail, int zfail, int zpass) "," no description <br /><br />"
"android.opengl.GLES20.glFlush () "," no description <br /><br />"
"android.opengl.GLES20.glUniform2i (int location, int x, int y) "," no description <br /><br />"
"android.opengl.GLES20.glEnable (int cap) "," no description <br /><br />"
"android.opengl.GLES20.glGetAttribLocation (int program, String name) "," no description <br /><br />"
"android.opengl.GLES20.glIsProgram (int program) "," no description <br /><br />"
"android.opengl.GLES20.glGetActiveAttrib (int program, int index, int[] size, int sizeOffset, int[] type, int typeOffset) "," no description <br /><br />"
"android.opengl.GLES20.glPolygonOffset (float factor, float units) "," no description <br /><br />"
"android.opengl.GLES20.glLinkProgram (int program) "," no description <br /><br />"
"android.opengl.GLES20.glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES20.glAttachShader (int program, int shader) "," no description <br /><br />"
"android.opengl.GLES20.glBindAttribLocation (int program, int index, String name) "," no description <br /><br />"
"android.opengl.GLES20.glIsBuffer (int buffer) "," no description <br /><br />"
"android.opengl.GLES30.glUniformMatrix4x2fv (int location, int count, boolean transpose, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES30.glIsSync (long sync) "," no description <br /><br />"
"android.opengl.GLES30.glGetUniformuiv (int program, int location, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES30.glMapBufferRange (int target, int offset, int length, int access) "," no description <br /><br />"
"android.opengl.GLES30.glInvalidateSubFramebuffer (int target, int numAttachments, int[] attachments, int offset, int x, int y, int width, int height) "," no description <br /><br />"
"android.opengl.GLES30.glBlitFramebuffer (int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, int mask, int filter) "," no description <br /><br />"
"android.opengl.GLES30.glDeleteSamplers (int count, IntBuffer samplers) "," no description <br /><br />"
"android.opengl.GLES30.glUniform4uiv (int location, int count, int[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glDeleteSamplers (int count, int[] samplers, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glGetTransformFeedbackVarying (int program, int index, int bufsize, IntBuffer length, IntBuffer size, IntBuffer type, byte name) "," no description <br /><br />"
"android.opengl.GLES30.glGetSamplerParameteriv (int sampler, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glUniform2uiv (int location, int count, int[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glUniform2uiv (int location, int count, IntBuffer value) "," no description <br /><br />"
"android.opengl.GLES30.glGetActiveUniformBlockName (int program, int uniformBlockIndex) "," no description <br /><br />"
"android.opengl.GLES30.glGetInteger64v (int pname, long[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glUniform4ui (int location, int v0, int v1, int v2, int v3) "," no description <br /><br />"
"android.opengl.GLES30.glGetSamplerParameteriv (int sampler, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES30.glFramebufferTextureLayer (int target, int attachment, int texture, int level, int layer) "," no description <br /><br />"
"android.opengl.GLES30.glUniformMatrix3x2fv (int location, int count, boolean transpose, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES30.glUniformMatrix3x4fv (int location, int count, boolean transpose, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glSamplerParameterf (int sampler, int pname, float param) "," no description <br /><br />"
"android.opengl.GLES30.glVertexAttribI4iv (int index, int[] v, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glGetActiveUniformsiv (int program, int uniformCount, int[] uniformIndices, int uniformIndicesOffset, int pname, int[] params, int paramsOffset) "," no description <br /><br />"
"android.opengl.GLES30.glUniform1uiv (int location, int count, int[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glGetSamplerParameterfv (int sampler, int pname, FloatBuffer params) "," no description <br /><br />"
"android.opengl.GLES30.glClearBufferuiv (int buffer, int drawbuffer, int[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glBeginTransformFeedback (int primitiveMode) "," no description <br /><br />"
"android.opengl.GLES30.glGetInternalformativ (int target, int internalformat, int pname, int bufSize, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES30.glTexImage3D (int target, int level, int internalformat, int width, int height, int depth, int border, int format, int type, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glDrawElementsInstanced (int mode, int count, int type, int indicesOffset, int instanceCount) "," no description <br /><br />"
"android.opengl.GLES30.glEndTransformFeedback () "," no description <br /><br />"
"android.opengl.GLES30.glWaitSync (long sync, int flags, long timeout) "," no description <br /><br />"
"android.opengl.GLES30.glBeginQuery (int target, int id) "," no description <br /><br />"
"android.opengl.GLES30.glCompressedTexSubImage3D (int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int imageSize, Buffer data) "," no description <br /><br />"
"android.opengl.GLES30.glUniformMatrix4x3fv (int location, int count, boolean transpose, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES30.glSamplerParameterfv (int sampler, int pname, FloatBuffer param) "," no description <br /><br />"
"android.opengl.GLES30.glUniformMatrix3x4fv (int location, int count, boolean transpose, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES30.glGetProgramBinary (int program, int bufSize, IntBuffer length, IntBuffer binaryFormat, Buffer binary) "," no description <br /><br />"
"android.opengl.GLES30.glGetIntegeri_v (int target, int index, int[] data, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glDrawRangeElements (int mode, int start, int end, int count, int type, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glCopyTexSubImage3D (int target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height) "," no description <br /><br />"
"android.opengl.GLES30.glTexSubImage3D (int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glGetIntegeri_v (int target, int index, IntBuffer data) "," no description <br /><br />"
"android.opengl.GLES30.glCompressedTexImage3D (int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, Buffer data) "," no description <br /><br />"
"android.opengl.GLES30.glSamplerParameteriv (int sampler, int pname, IntBuffer param) "," no description <br /><br />"
"android.opengl.GLES30.glUniformMatrix2x4fv (int location, int count, boolean transpose, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES30.glUniform1uiv (int location, int count, IntBuffer value) "," no description <br /><br />"
"android.opengl.GLES30.glUniformMatrix2x4fv (int location, int count, boolean transpose, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glVertexAttribI4uiv (int index, IntBuffer v) "," no description <br /><br />"
"android.opengl.GLES30.glGenSamplers (int count, IntBuffer samplers) "," no description <br /><br />"
"android.opengl.GLES30.glDrawElementsInstanced (int mode, int count, int type, Buffer indices, int instanceCount) "," no description <br /><br />"
"android.opengl.GLES30.glGetUniformuiv (int program, int location, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glUniform3uiv (int location, int count, IntBuffer value) "," no description <br /><br />"
"android.opengl.GLES30.glDrawBuffers (int n, int[] bufs, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glUniform2ui (int location, int v0, int v1) "," no description <br /><br />"
"android.opengl.GLES30.glGetUniformIndices (int program, String[] uniformNames, int[] uniformIndices, int uniformIndicesOffset) "," no description <br /><br />"
"android.opengl.GLES30.glGenTransformFeedbacks (int n, IntBuffer ids) "," no description <br /><br />"
"android.opengl.GLES30.glDrawArraysInstanced (int mode, int first, int count, int instanceCount) "," no description <br /><br />"
"android.opengl.GLES30.glVertexAttribIPointer (int index, int size, int type, int stride, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glSamplerParameteri (int sampler, int pname, int param) "," no description <br /><br />"
"android.opengl.GLES30.glGetSynciv (long sync, int pname, int bufSize, IntBuffer length, IntBuffer values) "," no description <br /><br />"
"android.opengl.GLES30.glGenTransformFeedbacks (int n, int[] ids, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glCopyBufferSubData (int readTarget, int writeTarget, int readOffset, int writeOffset, int size) "," no description <br /><br />"
"android.opengl.GLES30.glGetQueryObjectuiv (int id, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glTexImage3D (int target, int level, int internalformat, int width, int height, int depth, int border, int format, int type, Buffer pixels) "," no description <br /><br />"
"android.opengl.GLES30.glUniformBlockBinding (int program, int uniformBlockIndex, int uniformBlockBinding) "," no description <br /><br />"
"android.opengl.GLES30.glInvalidateSubFramebuffer (int target, int numAttachments, IntBuffer attachments, int x, int y, int width, int height) "," no description <br /><br />"
"android.opengl.GLES30.glBindBufferRange (int target, int index, int buffer, int offset, int size) "," no description <br /><br />"
"android.opengl.GLES30.glGetActiveUniformBlockiv (int program, int uniformBlockIndex, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glVertexAttribI4ui (int index, int x, int y, int z, int w) "," no description <br /><br />"
"android.opengl.GLES30.glGetUniformIndices (int program, String[] uniformNames, IntBuffer uniformIndices) "," no description <br /><br />"
"android.opengl.GLES30.glUniformMatrix4x2fv (int location, int count, boolean transpose, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glClearBufferfv (int buffer, int drawbuffer, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES30.glInvalidateFramebuffer (int target, int numAttachments, IntBuffer attachments) "," no description <br /><br />"
"android.opengl.GLES30.glFenceSync (int condition, int flags) "," no description <br /><br />"
"android.opengl.GLES30.glGetQueryObjectuiv (int id, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES30.glGetTransformFeedbackVarying (int program, int index, IntBuffer size, IntBuffer type) "," no description <br /><br />"
"android.opengl.GLES30.glGetVertexAttribIuiv (int index, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES30.glUniformMatrix2x3fv (int location, int count, boolean transpose, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glVertexAttribDivisor (int index, int divisor) "," no description <br /><br />"
"android.opengl.GLES30.glVertexAttribI4iv (int index, IntBuffer v) "," no description <br /><br />"
"android.opengl.GLES30.glIsQuery (int id) "," no description <br /><br />"
"android.opengl.GLES30.glCompressedTexSubImage3D (int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int imageSize, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glSamplerParameteriv (int sampler, int pname, int[] param, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glClearBufferiv (int buffer, int drawbuffer, int[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glVertexAttribI4uiv (int index, int[] v, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glUniform4uiv (int location, int count, IntBuffer value) "," no description <br /><br />"
"android.opengl.GLES30.glGetInteger64i_v (int target, int index, LongBuffer data) "," no description <br /><br />"
"android.opengl.GLES30.glPauseTransformFeedback () "," no description <br /><br />"
"android.opengl.GLES30.glIsVertexArray (int array) "," no description <br /><br />"
"android.opengl.GLES30.glGetStringi (int name, int index) "," no description <br /><br />"
"android.opengl.GLES30.glTexStorage3D (int target, int levels, int internalformat, int width, int height, int depth) "," no description <br /><br />"
"android.opengl.GLES30.glIsTransformFeedback (int id) "," no description <br /><br />"
"android.opengl.GLES30.glBindSampler (int unit, int sampler) "," no description <br /><br />"
"android.opengl.GLES30.glGetSamplerParameterfv (int sampler, int pname, float[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glBindVertexArray (int array) "," no description <br /><br />"
"android.opengl.GLES30.glGetBufferPointerv (int target, int pname) "," no description <br /><br />"
"android.opengl.GLES30.glTexStorage2D (int target, int levels, int internalformat, int width, int height) "," no description <br /><br />"
"android.opengl.GLES30.glUnmapBuffer (int target) "," no description <br /><br />"
"android.opengl.GLES30.glUniformMatrix4x3fv (int location, int count, boolean transpose, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glRenderbufferStorageMultisample (int target, int samples, int internalformat, int width, int height) "," no description <br /><br />"
"android.opengl.GLES30.glDeleteQueries (int n, int[] ids, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glGetActiveUniformBlockiv (int program, int uniformBlockIndex, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES30.glSamplerParameterfv (int sampler, int pname, float[] param, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glUniformMatrix2x3fv (int location, int count, boolean transpose, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES30.glDeleteTransformFeedbacks (int n, IntBuffer ids) "," no description <br /><br />"
"android.opengl.GLES30.glEndQuery (int target) "," no description <br /><br />"
"android.opengl.GLES30.glDeleteTransformFeedbacks (int n, int[] ids, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glGetInteger64v (int pname, LongBuffer params) "," no description <br /><br />"
"android.opengl.GLES30.glGetQueryiv (int target, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES30.glDrawRangeElements (int mode, int start, int end, int count, int type, Buffer indices) "," no description <br /><br />"
"android.opengl.GLES30.glDeleteQueries (int n, IntBuffer ids) "," no description <br /><br />"
"android.opengl.GLES30.glTransformFeedbackVaryings (int program, String[] varyings, int bufferMode) "," no description <br /><br />"
"android.opengl.GLES30.glGetTransformFeedbackVarying (int program, int index, int[] size, int sizeOffset, int[] type, int typeOffset) "," no description <br /><br />"
"android.opengl.GLES30.glVertexAttribIPointer (int index, int size, int type, int stride, Buffer pointer) "," no description <br /><br />"
"android.opengl.GLES30.glGetBufferParameteri64v (int target, int pname, LongBuffer params) "," no description <br /><br />"
"android.opengl.GLES30.glIsSampler (int sampler) "," no description <br /><br />"
"android.opengl.GLES30.glGetQueryiv (int target, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glGetFragDataLocation (int program, String name) "," no description <br /><br />"
"android.opengl.GLES30.glGenQueries (int n, int[] ids, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glDeleteSync (long sync) "," no description <br /><br />"
"android.opengl.GLES30.glUniformMatrix3x2fv (int location, int count, boolean transpose, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glGenSamplers (int count, int[] samplers, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glDeleteVertexArrays (int n, IntBuffer arrays) "," no description <br /><br />"
"android.opengl.GLES30.glGetInteger64i_v (int target, int index, long[] data, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glUniform3uiv (int location, int count, int[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glFlushMappedBufferRange (int target, int offset, int length) "," no description <br /><br />"
"android.opengl.GLES30.glGenQueries (int n, IntBuffer ids) "," no description <br /><br />"
"android.opengl.GLES30.glClearBufferfv (int buffer, int drawbuffer, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glCompressedTexImage3D (int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glClientWaitSync (long sync, int flags, long timeout) "," no description <br /><br />"
"android.opengl.GLES30.glBindBufferBase (int target, int index, int buffer) "," no description <br /><br />"
"android.opengl.GLES30.glGenVertexArrays (int n, IntBuffer arrays) "," no description <br /><br />"
"android.opengl.GLES30.glDeleteVertexArrays (int n, int[] arrays, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glGetVertexAttribIiv (int index, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES30.glProgramBinary (int program, int binaryFormat, Buffer binary, int length) "," no description <br /><br />"
"android.opengl.GLES30.glResumeTransformFeedback () "," no description <br /><br />"
"android.opengl.GLES30.glClearBufferiv (int buffer, int drawbuffer, IntBuffer value) "," no description <br /><br />"
"android.opengl.GLES30.glGetProgramBinary (int program, int bufSize, int[] length, int lengthOffset, int[] binaryFormat, int binaryFormatOffset, Buffer binary) "," no description <br /><br />"
"android.opengl.GLES30.glReadBuffer (int mode) "," no description <br /><br />"
"android.opengl.GLES30.glInvalidateFramebuffer (int target, int numAttachments, int[] attachments, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glGetActiveUniformBlockName (int program, int uniformBlockIndex, int bufSize, int[] length, int lengthOffset, byte[] uniformBlockName, int uniformBlockNameOffset) "," no description <br /><br />"
"android.opengl.GLES30.glBindTransformFeedback (int target, int id) "," no description <br /><br />"
"android.opengl.GLES30.glGetActiveUniformsiv (int program, int uniformCount, IntBuffer uniformIndices, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES30.glGetVertexAttribIiv (int index, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glGetTransformFeedbackVarying (int program, int index, int bufsize, int[] length, int lengthOffset, int[] size, int sizeOffset, int[] type, int typeOffset, byte[] name, int nameOffset) "," no description <br /><br />"
"android.opengl.GLES30.glGetBufferParameteri64v (int target, int pname, long[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glClearBufferfi (int buffer, int drawbuffer, float depth, int stencil) "," no description <br /><br />"
"android.opengl.GLES30.glGenVertexArrays (int n, int[] arrays, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glGetSynciv (long sync, int pname, int bufSize, int[] length, int lengthOffset, int[] values, int valuesOffset) "," no description <br /><br />"
"android.opengl.GLES30.glGetActiveUniformBlockName (int program, int uniformBlockIndex, Buffer length, Buffer uniformBlockName) "," no description <br /><br />"
"android.opengl.GLES30.glUniform3ui (int location, int v0, int v1, int v2) "," no description <br /><br />"
"android.opengl.GLES30.glDrawBuffers (int n, IntBuffer bufs) "," no description <br /><br />"
"android.opengl.GLES30.glVertexAttribI4i (int index, int x, int y, int z, int w) "," no description <br /><br />"
"android.opengl.GLES30.glGetUniformBlockIndex (int program, String uniformBlockName) "," no description <br /><br />"
"android.opengl.GLES30.glUniform1ui (int location, int v0) "," no description <br /><br />"
"android.opengl.GLES30.glTexSubImage3D (int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, Buffer pixels) "," no description <br /><br />"
"android.opengl.GLES30.glGetVertexAttribIuiv (int index, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES30.glClearBufferuiv (int buffer, int drawbuffer, IntBuffer value) "," no description <br /><br />"
"android.opengl.GLES30.glProgramParameteri (int program, int pname, int value) "," no description <br /><br />"
"android.opengl.GLES30.glGetInternalformativ (int target, int internalformat, int pname, int bufSize, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniformMatrix3fv (int program, int location, int count, boolean transpose, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform1f (int program, int location, float v0) "," no description <br /><br />"
"android.opengl.GLES31.glGetFramebufferParameteriv (int target, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES31.glGetTexLevelParameterfv (int target, int level, int pname, float[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glGetProgramResourceiv (int program, int programInterface, int index, int propCount, IntBuffer props, int bufSize, IntBuffer length, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform4i (int program, int location, int v0, int v1, int v2, int v3) "," no description <br /><br />"
"android.opengl.GLES31.glValidateProgramPipeline (int pipeline) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform2fv (int program, int location, int count, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform4f (int program, int location, float v0, float v1, float v2, float v3) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform2f (int program, int location, float v0, float v1) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniformMatrix3x2fv (int program, int location, int count, boolean transpose, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform1uiv (int program, int location, int count, IntBuffer value) "," no description <br /><br />"
"android.opengl.GLES31.glActiveShaderProgram (int pipeline, int program) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniformMatrix2x3fv (int program, int location, int count, boolean transpose, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glGetProgramInterfaceiv (int program, int programInterface, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform3ui (int program, int location, int v0, int v1, int v2) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform3uiv (int program, int location, int count, int[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glUseProgramStages (int pipeline, int stages, int program) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform2i (int program, int location, int v0, int v1) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniformMatrix3x2fv (int program, int location, int count, boolean transpose, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform1iv (int program, int location, int count, IntBuffer value) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform4iv (int program, int location, int count, int[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform3iv (int program, int location, int count, int[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glVertexBindingDivisor (int bindingindex, int divisor) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniformMatrix4x3fv (int program, int location, int count, boolean transpose, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniformMatrix2x4fv (int program, int location, int count, boolean transpose, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform1fv (int program, int location, int count, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glBindVertexBuffer (int bindingindex, int buffer, long offset, int stride) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform1fv (int program, int location, int count, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES31.glDeleteProgramPipelines (int n, int[] pipelines, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform2iv (int program, int location, int count, IntBuffer value) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniformMatrix2fv (int program, int location, int count, boolean transpose, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniformMatrix3fv (int program, int location, int count, boolean transpose, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glFramebufferParameteri (int target, int pname, int param) "," no description <br /><br />"
"android.opengl.GLES31.glGetProgramPipelineInfoLog (int program) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniformMatrix3x4fv (int program, int location, int count, boolean transpose, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glBindImageTexture (int unit, int texture, int level, boolean layered, int layer, int access, int format) "," no description <br /><br />"
"android.opengl.GLES31.glGetTexLevelParameteriv (int target, int level, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glMemoryBarrierByRegion (int barriers) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform4fv (int program, int location, int count, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform3i (int program, int location, int v0, int v1, int v2) "," no description <br /><br />"
"android.opengl.GLES31.glGetMultisamplefv (int pname, int index, float[] val, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform2ui (int program, int location, int v0, int v1) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform4uiv (int program, int location, int count, int[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glGetProgramResourceLocation (int program, int programInterface, String name) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniformMatrix3x4fv (int program, int location, int count, boolean transpose, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniformMatrix4fv (int program, int location, int count, boolean transpose, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glGetMultisamplefv (int pname, int index, FloatBuffer val) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform3f (int program, int location, float v0, float v1, float v2) "," no description <br /><br />"
"android.opengl.GLES31.glIsProgramPipeline (int pipeline) "," no description <br /><br />"
"android.opengl.GLES31.glGetProgramResourceiv (int program, int programInterface, int index, int propCount, int[] props, int propsOffset, int bufSize, int[] length, int lengthOffset, int[] params, int paramsOffset) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform2iv (int program, int location, int count, int[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform4fv (int program, int location, int count, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniformMatrix2x4fv (int program, int location, int count, boolean transpose, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniformMatrix2x3fv (int program, int location, int count, boolean transpose, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES31.glDrawArraysIndirect (int mode, long indirect) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform4uiv (int program, int location, int count, IntBuffer value) "," no description <br /><br />"
"android.opengl.GLES31.glVertexAttribBinding (int attribindex, int bindingindex) "," no description <br /><br />"
"android.opengl.GLES31.glGetFramebufferParameteriv (int target, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glVertexAttribIFormat (int attribindex, int size, int type, int relativeoffset) "," no description <br /><br />"
"android.opengl.GLES31.glGetProgramResourceName (int program, int programInterface, int index) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform4iv (int program, int location, int count, IntBuffer value) "," no description <br /><br />"
"android.opengl.GLES31.glGenProgramPipelines (int n, IntBuffer pipelines) "," no description <br /><br />"
"android.opengl.GLES31.glTexStorage2DMultisample (int target, int samples, int internalformat, int width, int height, boolean fixedsamplelocations) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform1iv (int program, int location, int count, int[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glGetTexLevelParameterfv (int target, int level, int pname, FloatBuffer params) "," no description <br /><br />"
"android.opengl.GLES31.glGetProgramInterfaceiv (int program, int programInterface, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform1ui (int program, int location, int v0) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform3iv (int program, int location, int count, IntBuffer value) "," no description <br /><br />"
"android.opengl.GLES31.glDeleteProgramPipelines (int n, IntBuffer pipelines) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform2uiv (int program, int location, int count, int[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glGetBooleani_v (int target, int index, IntBuffer data) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform2uiv (int program, int location, int count, IntBuffer value) "," no description <br /><br />"
"android.opengl.GLES31.glDispatchCompute (int num_groups_x, int num_groups_y, int num_groups_z) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniformMatrix4fv (int program, int location, int count, boolean transpose, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform2fv (int program, int location, int count, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES31.glGetTexLevelParameteriv (int target, int level, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniformMatrix4x3fv (int program, int location, int count, boolean transpose, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniformMatrix4x2fv (int program, int location, int count, boolean transpose, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform1i (int program, int location, int v0) "," no description <br /><br />"
"android.opengl.GLES31.glGetProgramPipelineiv (int pipeline, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniformMatrix2fv (int program, int location, int count, boolean transpose, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES31.glSampleMaski (int maskNumber, int mask) "," no description <br /><br />"
"android.opengl.GLES31.glVertexAttribFormat (int attribindex, int size, int type, boolean normalized, int relativeoffset) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform3uiv (int program, int location, int count, IntBuffer value) "," no description <br /><br />"
"android.opengl.GLES31.glDrawElementsIndirect (int mode, int type, long indirect) "," no description <br /><br />"
"android.opengl.GLES31.glMemoryBarrier (int barriers) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform3fv (int program, int location, int count, float[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glGetBooleani_v (int target, int index, boolean[] data, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glGetProgramPipelineiv (int pipeline, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glCreateShaderProgramv (int type, String[] strings) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform4ui (int program, int location, int v0, int v1, int v2, int v3) "," no description <br /><br />"
"android.opengl.GLES31.glDispatchComputeIndirect (long indirect) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniformMatrix4x2fv (int program, int location, int count, boolean transpose, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform1uiv (int program, int location, int count, int[] value, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glBindProgramPipeline (int pipeline) "," no description <br /><br />"
"android.opengl.GLES31.glGenProgramPipelines (int n, int[] pipelines, int offset) "," no description <br /><br />"
"android.opengl.GLES31.glGetProgramResourceIndex (int program, int programInterface, String name) "," no description <br /><br />"
"android.opengl.GLES31.glProgramUniform3fv (int program, int location, int count, FloatBuffer value) "," no description <br /><br />"
"android.opengl.GLES31Ext.DebugProcKHR.onMessage (int source, int type, int id, int severity, String message) "," no description <br /><br />"
"android.opengl.GLES31Ext.glTexBufferEXT (int target, int internalformat, int buffer) "," no description <br /><br />"
"android.opengl.GLES31Ext.glGetTexParameterIuivEXT (int target, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES31Ext.glGetSamplerParameterIivEXT (int sampler, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES31Ext.glSamplerParameterIivEXT (int sampler, int pname, int[] param, int offset) "," no description <br /><br />"
"android.opengl.GLES31Ext.glGetSamplerParameterIuivEXT (int sampler, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES31Ext.glBlendFuncSeparateiEXT (int buf, int srcRGB, int dstRGB, int srcAlpha, int dstAlpha) "," no description <br /><br />"
"android.opengl.GLES31Ext.glBlendEquationSeparateiEXT (int buf, int modeRGB, int modeAlpha) "," no description <br /><br />"
"android.opengl.GLES31Ext.glBlendBarrierKHR () "," no description <br /><br />"
"android.opengl.GLES31Ext.glGetDebugMessageLogKHR (int count, int[] sources, int sourcesOffset, int[] types, int typesOffset, int[] ids, int idsOffset, int[] severities, int severitiesOffset) "," no description <br /><br />"
"android.opengl.GLES31Ext.glTexParameterIivEXT (int target, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES31Ext.glGetTexParameterIuivEXT (int target, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES31Ext.glTexBufferRangeEXT (int target, int internalformat, int buffer, int offset, int size) "," no description <br /><br />"
"android.opengl.GLES31Ext.glDisableiEXT (int target, int index) "," no description <br /><br />"
"android.opengl.GLES31Ext.glGetSamplerParameterIuivEXT (int sampler, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES31Ext.glDebugMessageCallbackKHR (GLES31Ext.DebugProcKHR callback) "," no description <br /><br />"
"android.opengl.GLES31Ext.glSamplerParameterIivEXT (int sampler, int pname, IntBuffer param) "," no description <br /><br />"
"android.opengl.GLES31Ext.glTexParameterIuivEXT (int target, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES31Ext.glGetDebugMessageCallbackKHR () "," no description <br /><br />"
"android.opengl.GLES31Ext.glIsEnablediEXT (int target, int index) "," no description <br /><br />"
"android.opengl.GLES31Ext.glGetDebugMessageLogKHR (int count, IntBuffer sources, IntBuffer types, IntBuffer ids, IntBuffer severities) "," no description <br /><br />"
"android.opengl.GLES31Ext.glGetDebugMessageLogKHR (int count, int bufSize, int[] sources, int sourcesOffset, int[] types, int typesOffset, int[] ids, int idsOffset, int[] severities, int severitiesOffset, int[] lengths, int lengthsOffset, byte[] messageLog, int messageLogOffset) "," no description <br /><br />"
"android.opengl.GLES31Ext.glPushDebugGroupKHR (int source, int id, int length, String message) "," no description <br /><br />"
"android.opengl.GLES31Ext.glSamplerParameterIuivEXT (int sampler, int pname, int[] param, int offset) "," no description <br /><br />"
"android.opengl.GLES31Ext.glObjectLabelKHR (int identifier, int name, int length, String label) "," no description <br /><br />"
"android.opengl.GLES31Ext.glGetObjectLabelKHR (int identifier, int name) "," no description <br /><br />"
"android.opengl.GLES31Ext.glDebugMessageInsertKHR (int source, int type, int id, int severity, String buf) "," no description <br /><br />"
"android.opengl.GLES31Ext.glGetTexParameterIivEXT (int target, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES31Ext.glGetSamplerParameterIivEXT (int sampler, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES31Ext.glMinSampleShadingOES (float value) "," no description <br /><br />"
"android.opengl.GLES31Ext.glColorMaskiEXT (int index, boolean r, boolean g, boolean b, boolean a) "," no description <br /><br />"
"android.opengl.GLES31Ext.glPrimitiveBoundingBoxEXT (float minX, float minY, float minZ, float minW, float maxX, float maxY, float maxZ, float maxW) "," no description <br /><br />"
"android.opengl.GLES31Ext.glObjectPtrLabelKHR (long ptr, String label) "," no description <br /><br />"
"android.opengl.GLES31Ext.glTexParameterIivEXT (int target, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES31Ext.glCopyImageSubDataEXT (int srcName, int srcTarget, int srcLevel, int srcX, int srcY, int srcZ, int dstName, int dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int srcWidth, int srcHeight, int srcDepth) "," no description <br /><br />"
"android.opengl.GLES31Ext.glFramebufferTextureEXT (int target, int attachment, int texture, int level) "," no description <br /><br />"
"android.opengl.GLES31Ext.glPatchParameteriEXT (int pname, int value) "," no description <br /><br />"
"android.opengl.GLES31Ext.glDebugMessageControlKHR (int source, int type, int severity, int count, IntBuffer ids, boolean enabled) "," no description <br /><br />"
"android.opengl.GLES31Ext.glGetTexParameterIivEXT (int target, int pname, int[] params, int offset) "," no description <br /><br />"
"android.opengl.GLES31Ext.glGetObjectPtrLabelKHR (long ptr) "," no description <br /><br />"
"android.opengl.GLES31Ext.glBlendFunciEXT (int buf, int src, int dst) "," no description <br /><br />"
"android.opengl.GLES31Ext.glBlendEquationiEXT (int buf, int mode) "," no description <br /><br />"
"android.opengl.GLES31Ext.glSamplerParameterIuivEXT (int sampler, int pname, IntBuffer param) "," no description <br /><br />"
"android.opengl.GLES31Ext.glDebugMessageControlKHR (int source, int type, int severity, int count, int[] ids, int offset, boolean enabled) "," no description <br /><br />"
"android.opengl.GLES31Ext.glEnableiEXT (int target, int index) "," no description <br /><br />"
"android.opengl.GLES31Ext.glGetDebugMessageLogKHR (int count, IntBuffer sources, IntBuffer types, IntBuffer ids, IntBuffer severities, IntBuffer lengths, ByteBuffer messageLog) "," no description <br /><br />"
"android.opengl.GLES31Ext.glTexStorage3DMultisampleOES (int target, int samples, int internalformat, int width, int height, int depth, boolean fixedsamplelocations) "," no description <br /><br />"
"android.opengl.GLES31Ext.glTexParameterIuivEXT (int target, int pname, IntBuffer params) "," no description <br /><br />"
"android.opengl.GLES31Ext.glPopDebugGroupKHR () "," no description <br /><br />"
"android.opengl.GLSurfaceView.EGLConfigChooser.chooseConfig (EGL10 egl, EGLDisplay display) "," Choose a configuration from the list. <br /><br />"
"android.opengl.GLSurfaceView.EGLContextFactory.destroyContext (EGL10 egl, EGLDisplay display, EGLContext context) "," no description <br /><br />"
"android.opengl.GLSurfaceView.EGLContextFactory.createContext (EGL10 egl, EGLDisplay display, EGLConfig eglConfig) "," no description <br /><br />"
"android.opengl.GLSurfaceView.EGLWindowSurfaceFactory.destroySurface (EGL10 egl, EGLDisplay display, EGLSurface surface) "," no description <br /><br />"
"android.opengl.GLSurfaceView.EGLWindowSurfaceFactory.createWindowSurface (EGL10 egl, EGLDisplay display, EGLConfig config, Object nativeWindow) "," no description <br /><br />"
"android.opengl.GLSurfaceView.GLWrapper.wrap (GL gl) "," Wraps a gl interface in another gl interface. <br /><br />"
"android.opengl.GLSurfaceView.setDebugFlags (int debugFlags) "," Set the debug flags to a new value. <br /><br />"
"android.opengl.GLSurfaceView.onPause () "," Inform the view that the activity is paused. <br /><br />"
"android.opengl.GLSurfaceView.setEGLContextClientVersion (int version) "," Inform the default EGLContextFactory and default EGLConfigChooser which EGLContext client version to pick. <br /><br />"
"android.opengl.GLSurfaceView.setPreserveEGLContextOnPause (boolean preserveOnPause) "," Control whether the EGL context is preserved when the GLSurfaceView is paused and resumed. <br /><br />"
"android.opengl.GLSurfaceView.getPreserveEGLContextOnPause () "," no description <br /><br />"
"android.opengl.GLSurfaceView.surfaceCreated (SurfaceHolder holder) "," This method is part of the SurfaceHolder.Callback interface, and is not normally called or subclassed by clients of GLSurfaceView. <br /><br />"
"android.opengl.GLSurfaceView.setEGLWindowSurfaceFactory (GLSurfaceView.EGLWindowSurfaceFactory factory) "," Install a custom EGLWindowSurfaceFactory. <br /><br />"
"android.opengl.GLSurfaceView.getDebugFlags () "," Get the current value of the debug flags. <br /><br />"
"android.opengl.GLSurfaceView.setRenderer (GLSurfaceView.Renderer renderer) "," Set the renderer associated with this view. <br /><br />"
"android.opengl.GLSurfaceView.requestRender () "," Request that the renderer render a frame. <br /><br />"
"android.opengl.GLSurfaceView.setEGLConfigChooser (GLSurfaceView.EGLConfigChooser configChooser) "," Install a custom EGLConfigChooser. <br /><br />"
"android.opengl.GLSurfaceView.setEGLConfigChooser (boolean needDepth) "," Install a config chooser which will choose a config as close to 16-bit RGB as possible, with or without an optional depth buffer as close to 16-bits as possible. <br /><br />"
"android.opengl.GLSurfaceView.getRenderMode () "," Get the current rendering mode. <br /><br />"
"android.opengl.GLSurfaceView.setEGLContextFactory (GLSurfaceView.EGLContextFactory factory) "," Install a custom EGLContextFactory. <br /><br />"
"android.opengl.GLSurfaceView.queueEvent (Runnable r) "," Queue a runnable to be run on the GL rendering thread. <br /><br />"
"android.opengl.GLSurfaceView.surfaceDestroyed (SurfaceHolder holder) "," This method is part of the SurfaceHolder.Callback interface, and is not normally called or subclassed by clients of GLSurfaceView. <br /><br />"
"android.opengl.GLSurfaceView.setGLWrapper (GLSurfaceView.GLWrapper glWrapper) "," Set the glWrapper. <br /><br />"
"android.opengl.GLSurfaceView.setEGLConfigChooser (int redSize, int greenSize, int blueSize, int alphaSize, int depthSize, int stencilSize) "," Install a config chooser which will choose a config with at least the specified depthSize and stencilSize, and exactly the specified redSize, greenSize, blueSize and alphaSize. <br /><br />"
"android.opengl.GLSurfaceView.surfaceChanged (SurfaceHolder holder, int format, int w, int h) "," This method is part of the SurfaceHolder.Callback interface, and is not normally called or subclassed by clients of GLSurfaceView. <br /><br />"
"android.opengl.GLSurfaceView.setRenderMode (int renderMode) "," Set the rendering mode. <br /><br />"
"android.opengl.GLSurfaceView.onResume () "," Inform the view that the activity is resumed. <br /><br />"
"android.opengl.GLSurfaceView.Renderer.onSurfaceCreated (GL10 gl, EGLConfig config) "," Called when the surface is created or recreated. <br /><br />"
"android.opengl.GLSurfaceView.Renderer.onSurfaceChanged (GL10 gl, int width, int height) "," Called when the surface changed size. <br /><br />"
"android.opengl.GLSurfaceView.Renderer.onDrawFrame (GL10 gl) "," Called to draw the current frame. <br /><br />"
"android.opengl.GLU.gluErrorString (int error) "," Return an error string from a GL or GLU error code. <br /><br />"
"android.opengl.GLU.gluProject (float objX, float objY, float objZ, float[] model, int modelOffset, float[] project, int projectOffset, int[] view, int viewOffset, float[] win, int winOffset) "," Map object coordinates into window coordinates. <br /><br />"
"android.opengl.GLU.gluLookAt (GL10 gl, float eyeX, float eyeY, float eyeZ, float centerX, float centerY, float centerZ, float upX, float upY, float upZ) "," Define a viewing transformation in terms of an eye point, a center of view, and an up vector. <br /><br />"
"android.opengl.GLU.gluPerspective (GL10 gl, float fovy, float aspect, float zNear, float zFar) "," Set up a perspective projection matrix <br /><br />"
"android.opengl.GLU.gluOrtho2D (GL10 gl, float left, float right, float bottom, float top) "," Set up a 2D orthographic projection matrix <br /><br />"
"android.opengl.GLU.gluUnProject (float winX, float winY, float winZ, float[] model, int modelOffset, float[] project, int projectOffset, int[] view, int viewOffset, float[] obj, int objOffset) "," Map window coordinates to object coordinates. <br /><br />"
"android.opengl.GLUtils.getEGLErrorString (int error) "," Return a string for the EGL error code, or the hex representation if the error is unknown. <br /><br />"
"android.opengl.GLUtils.texImage2D (int target, int level, Bitmap bitmap, int border) "," A version of texImage2D that determines the internalFormat and type automatically. <br /><br />"
"android.opengl.GLUtils.texImage2D (int target, int level, int internalformat, Bitmap bitmap, int border)   Calls glTexImage2D () "," Calls glTexImage2D() on the current OpenGL context. <br /><br />"
"android.opengl.GLUtils.texSubImage2D (int target, int level, int xoffset, int yoffset, Bitmap bitmap, int format, int type)   A version of texSubImage2D () "," A version of texSubImage2D() that takes an explicit type parameter as defined by the OpenGL ES specification. <br /><br />"
"android.opengl.GLUtils.texSubImage2D (int target, int level, int xoffset, int yoffset, Bitmap bitmap)   Calls glTexSubImage2D () "," Calls glTexSubImage2D() on the current OpenGL context. <br /><br />"
"android.opengl.GLUtils.texImage2D (int target, int level, int internalformat, Bitmap bitmap, int type, int border)   A version of texImage2D () "," A version of texImage2D() that takes an explicit type parameter as defined by the OpenGL ES specification. <br /><br />"
"android.opengl.GLUtils.getInternalFormat (Bitmap bitmap) "," return the internal format as defined by OpenGL ES of the supplied bitmap. <br /><br />"
"android.opengl.GLUtils.getType (Bitmap bitmap) "," Return the type as defined by OpenGL ES of the supplied bitmap, if there is one. <br /><br />"
"android.opengl.Matrix.multiplyMV (float[] resultVec, int resultVecOffset, float[] lhsMat, int lhsMatOffset, float[] rhsVec, int rhsVecOffset) "," Multiplies a 4 element vector by a 4x4 matrix and stores the result in a 4-element column vector. <br /><br />"
"android.opengl.Matrix.translateM (float[] m, int mOffset, float x, float y, float z) "," Translates matrix m by x, y, and z in place. <br /><br />"
"android.opengl.Matrix.setIdentityM (float[] sm, int smOffset) "," Sets matrix m to the identity matrix. <br /><br />"
"android.opengl.Matrix.setRotateM (float[] rm, int rmOffset, float a, float x, float y, float z)   Creates a matrix for rotation by angle a  (in degrees) around the axis  (x, y, z) "," Creates a matrix for rotation by angle a (in degrees) around the axis (x, y, z). <br /><br />"
"android.opengl.Matrix.length (float x, float y, float z) "," Computes the length of a vector. <br /><br />"
"android.opengl.Matrix.scaleM (float[] sm, int smOffset, float[] m, int mOffset, float x, float y, float z) "," Scales matrix m by x, y, and z, putting the result in sm. <br /><br />"
"android.opengl.Matrix.transposeM (float[] mTrans, int mTransOffset, float[] m, int mOffset) "," Transposes a 4 x 4 matrix. <br /><br />"
"android.opengl.Matrix.rotateM (float[] rm, int rmOffset, float[] m, int mOffset, float a, float x, float y, float z)   Rotates matrix m by angle a  (in degrees) around the axis  (x, y, z) "," Rotates matrix m by angle a (in degrees) around the axis (x, y, z). <br /><br />"
"android.opengl.Matrix.orthoM (float[] m, int mOffset, float left, float right, float bottom, float top, float near, float far) "," Computes an orthographic projection matrix. <br /><br />"
"android.opengl.Matrix.setLookAtM (float[] rm, int rmOffset, float eyeX, float eyeY, float eyeZ, float centerX, float centerY, float centerZ, float upX, float upY, float upZ) "," Defines a viewing transformation in terms of an eye point, a center of view, and an up vector. <br /><br />"
"android.opengl.Matrix.rotateM (float[] m, int mOffset, float a, float x, float y, float z)   Rotates matrix m in place by angle a  (in degrees) around the axis  (x, y, z) "," Rotates matrix m in place by angle a (in degrees) around the axis (x, y, z). <br /><br />"
"android.opengl.Matrix.translateM (float[] tm, int tmOffset, float[] m, int mOffset, float x, float y, float z) "," Translates matrix m by x, y, and z, putting the result in tm. <br /><br />"
"android.opengl.Matrix.multiplyMM (float[] result, int resultOffset, float[] lhs, int lhsOffset, float[] rhs, int rhsOffset) "," Multiplies two 4x4 matrices together and stores the result in a third 4x4 matrix. <br /><br />"
"android.opengl.Matrix.setRotateEulerM (float[] rm, int rmOffset, float x, float y, float z) "," Converts Euler angles to a rotation matrix. <br /><br />"
"android.opengl.Matrix.perspectiveM (float[] m, int offset, float fovy, float aspect, float zNear, float zFar) "," Defines a projection matrix in terms of a field of view angle, an aspect ratio, and z clip planes. <br /><br />"
"android.opengl.Matrix.invertM (float[] mInv, int mInvOffset, float[] m, int mOffset) "," Inverts a 4 x 4 matrix. <br /><br />"
"android.opengl.Matrix.scaleM (float[] m, int mOffset, float x, float y, float z) "," Scales matrix m in place by sx, sy, and sz. <br /><br />"
"android.opengl.Matrix.frustumM (float[] m, int offset, float left, float right, float bottom, float top, float near, float far) "," Defines a projection matrix in terms of six clip planes. <br /><br />"
"android.opengl.Visibility.visibilityTest (float[] ws, int wsOffset, float[] positions, int positionsOffset, char[] indices, int indicesOffset, int indexCount) "," Test whether a given triangle mesh is visible on the screen. <br /><br />"
"android.opengl.Visibility.computeBoundingSphere (float[] positions, int positionsOffset, int positionsCount, float[] sphere, int sphereOffset) "," Compute a bounding sphere for a set of points. <br /><br />"
"android.opengl.Visibility.frustumCullSpheres (float[] mvp, int mvpOffset, float[] spheres, int spheresOffset, int spheresCount, int[] results, int resultsOffset, int resultsCapacity)   Given an OpenGL ES ModelView-Projection matrix  (which implicitly describes a frustum) "," Given an OpenGL ES ModelView-Projection matrix (which implicitly describes a frustum) and a list of spheres, determine which spheres intersect the frustum. <br /><br />"
"android.os.AsyncTask<Params, Progress, Result>.get (long timeout, TimeUnit unit) "," Waits if necessary for at most the given time for the computation to complete, and then retrieves its result. <br /><br />"
"android.os.AsyncTask<Params, Progress, Result>.execute (Params... params) "," Executes the task with the specified parameters. <br /><br />"
"android.os.AsyncTask<Params, Progress, Result>.execute (Runnable runnable)   Convenience version of execute (Object) "," Convenience version of execute(Object) for use with a simple Runnable object. <br /><br />"
"android.os.AsyncTask<Params, Progress, Result>.cancel (boolean mayInterruptIfRunning) "," Attempts to cancel execution of this task. <br /><br />"
"android.os.AsyncTask<Params, Progress, Result>.getStatus () "," Returns the current status of this task. <br /><br />"
"android.os.AsyncTask<Params, Progress, Result>.get () "," Waits if necessary for the computation to complete, and then retrieves its result. <br /><br />"
"android.os.AsyncTask<Params, Progress, Result>.executeOnExecutor (Executor exec, Params... params) "," Executes the task with the specified parameters. <br /><br />"
"android.os.AsyncTask<Params, Progress, Result>.isCancelled () "," Returns true if this task was cancelled before it completed normally. <br /><br />"
"android.os.BaseBundle.getInt (String key) "," Returns the value associated with the given key, or 0 if no mapping of the desired type exists for the given key. <br /><br />"
"android.os.BaseBundle.putLongArray (String key, long[] value) "," Inserts a long array value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.BaseBundle.get (String key) "," Returns the entry with the given key as an object. <br /><br />"
"android.os.BaseBundle.putInt (String key, int value) "," Inserts an int value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.BaseBundle.putDoubleArray (String key, double[] value) "," Inserts a double array value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.BaseBundle.putBoolean (String key, boolean value) "," Inserts a Boolean value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.BaseBundle.size () "," Returns the number of mappings contained in this Bundle. <br /><br />"
"android.os.BaseBundle.getStringArray (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.BaseBundle.getDouble (String key, double defaultValue) "," Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key. <br /><br />"
"android.os.BaseBundle.getDouble (String key) "," Returns the value associated with the given key, or 0.0 if no mapping of the desired type exists for the given key. <br /><br />"
"android.os.BaseBundle.getBooleanArray (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.BaseBundle.getString (String key, String defaultValue) "," Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key or if a null value is explicitly associated with the given key. <br /><br />"
"android.os.BaseBundle.putString (String key, String value) "," Inserts a String value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.BaseBundle.clear () "," Removes all elements from the mapping of this Bundle. <br /><br />"
"android.os.BaseBundle.containsKey (String key) "," Returns true if the given key is contained in the mapping of this Bundle. <br /><br />"
"android.os.BaseBundle.remove (String key) "," Removes any entry with the given key from the mapping of this Bundle. <br /><br />"
"android.os.BaseBundle.putStringArray (String key, String[] value) "," Inserts a String array value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.BaseBundle.getString (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.BaseBundle.getBoolean (String key, boolean defaultValue) "," Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key. <br /><br />"
"android.os.BaseBundle.getLongArray (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.BaseBundle.getBoolean (String key) "," Returns the value associated with the given key, or false if no mapping of the desired type exists for the given key. <br /><br />"
"android.os.BaseBundle.getIntArray (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.BaseBundle.putBooleanArray (String key, boolean[] value) "," Inserts a boolean array value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.BaseBundle.getInt (String key, int defaultValue) "," Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key. <br /><br />"
"android.os.BaseBundle.getLong (String key, long defaultValue) "," Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key. <br /><br />"
"android.os.BaseBundle.putLong (String key, long value) "," Inserts a long value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.BaseBundle.getLong (String key) "," Returns the value associated with the given key, or 0L if no mapping of the desired type exists for the given key. <br /><br />"
"android.os.BaseBundle.isEmpty () "," Returns true if the mapping of this Bundle is empty, false otherwise. <br /><br />"
"android.os.BaseBundle.keySet () "," Returns a Set containing the Strings used as keys in this Bundle. <br /><br />"
"android.os.BaseBundle.getDoubleArray (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.BaseBundle.putDouble (String key, double value) "," Inserts a double value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.BaseBundle.putIntArray (String key, int[] value) "," Inserts an int array value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.BaseBundle.putAll (PersistableBundle bundle) "," Inserts all mappings from the given PersistableBundle into this BaseBundle. <br /><br />"
"android.os.BatteryManager.getIntProperty (int id) "," Return the value of a battery property of integer type. <br /><br />"
"android.os.BatteryManager.getLongProperty (int id) "," Return the value of a battery property of long type If the platform does not provide the property queried, this value will be Long.MIN_VALUE. <br /><br />"
"android.os.Binder.isBinderAlive () "," Check to see if the process that the binder is in is still alive. Note that if you're calling on a local binder, this always returns true because your process is alive if you're calling it. <br /><br />"
"android.os.Binder.restoreCallingIdentity (long token)   Restore the identity of the incoming IPC on the current thread back to a previously identity that was returned by clearCallingIdentity () "," Restore the identity of the incoming IPC on the current thread back to a previously identity that was returned by clearCallingIdentity(). <br /><br />"
"android.os.Binder.flushPendingCommands () "," Flush any Binder commands pending in the current thread to the kernel driver. <br /><br />"
"android.os.Binder.attachInterface (IInterface owner, String descriptor) "," Convenience method for associating a specific interface with the Binder. <br /><br />"
"android.os.Binder.dumpAsync (FileDescriptor fd, String[] args)   Like dump (FileDescriptor, String[]) "," Like dump(FileDescriptor, String[]), but ensures the target executes asynchronously. <br /><br />"
"android.os.Binder.getCallingPid () "," Return the ID of the process that sent you the current transaction that is being processed. <br /><br />"
"android.os.Binder.pingBinder () "," Default implementation always returns true -- if you got here, the object is alive. <br /><br />"
"android.os.Binder.getCallingUserHandle () "," Return the UserHandle assigned to the process that sent you the current transaction that is being processed. <br /><br />"
"android.os.Binder.unlinkToDeath (IBinder.DeathRecipient recipient, int flags) "," Local implementation is a no-op. <br /><br />"
"android.os.Binder.queryLocalInterface (String descriptor)   Use information supplied to attachInterface () "," Use information supplied to attachInterface() to return the associated IInterface if it matches the requested descriptor. <br /><br />"
"android.os.Binder.getInterfaceDescriptor () "," Default implementation returns an empty interface name. <br /><br />"
"android.os.Binder.transact (int code, Parcel data, Parcel reply, int flags) "," Default implementation rewinds the parcels and calls onTransact. <br /><br />"
"android.os.Binder.joinThreadPool () "," Add the calling thread to the IPC thread pool. <br /><br />"
"android.os.Binder.getCallingUid () "," Return the Linux uid assigned to the process that sent you the current transaction that is being processed. <br /><br />"
"android.os.Binder.linkToDeath (IBinder.DeathRecipient recipient, int flags) "," Local implementation is a no-op. <br /><br />"
"android.os.Binder.clearCallingIdentity () "," Reset the identity of the incoming IPC on the current thread. <br /><br />"
"android.os.Binder.dump (FileDescriptor fd, String[] args)   Implemented to call the more convenient version dump (FileDescriptor, PrintWriter, String[]) "," Implemented to call the more convenient version dump(FileDescriptor, PrintWriter, String[]). <br /><br />"
"android.os.Build.getRadioVersion () "," Returns the version string for the radio firmware. <br /><br />"
"android.os.Bundle.putStringArrayList (String key, ArrayList< String> value) "," Inserts an ArrayList  value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.putSize (String key, Size value) "," Inserts a Size value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.getParcelableArrayList (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.Bundle.getParcelableArray (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.Bundle.putFloatArray (String key, float[] value) "," Inserts a float array value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.putParcelable (String key, Parcelable value) "," Inserts a Parcelable value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.putSparseParcelableArray (String key, SparseArray<? extends  Parcelable> value) "," Inserts a SparceArray of Parcelable values into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.getShort (String key, short defaultValue) "," Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key. <br /><br />"
"android.os.Bundle.getSizeF (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.Bundle.putByteArray (String key, byte[] value) "," Inserts a byte array value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.putBinder (String key, IBinder value) "," Inserts an IBinder value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.getBinder (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.Bundle.clear () "," Removes all elements from the mapping of this Bundle. <br /><br />"
"android.os.Bundle.getIntegerArrayList (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.Bundle.getStringArrayList (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.Bundle.getCharArray (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.Bundle.putByte (String key, byte value) "," Inserts a byte value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.getByte (String key, byte defaultValue) "," Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key. <br /><br />"
"android.os.Bundle.getSerializable (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.Bundle.putCharSequence (String key, CharSequence value) "," Inserts a CharSequence value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.putParcelableArray (String key, Parcelable[] value) "," Inserts an array of Parcelable values into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.putParcelableArrayList (String key, ArrayList<? extends  Parcelable> value) "," Inserts a List of Parcelable values into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.putCharArray (String key, char[] value) "," Inserts a char array value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.putFloat (String key, float value) "," Inserts a float value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.setClassLoader (ClassLoader loader) "," Changes the ClassLoader this Bundle uses when instantiating objects. <br /><br />"
"android.os.Bundle.getParcelable (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.Bundle.getFloat (String key) "," Returns the value associated with the given key, or 0.0f if no mapping of the desired type exists for the given key. <br /><br />"
"android.os.Bundle.putIntegerArrayList (String key, ArrayList< Integer> value) "," Inserts an ArrayList  value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.putSizeF (String key, SizeF value) "," Inserts a SizeF value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.putSerializable (String key, Serializable value) "," Inserts a Serializable value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.getChar (String key, char defaultValue) "," Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key. <br /><br />"
"android.os.Bundle.getSize (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.Bundle.getByte (String key)   Returns the value associated with the given key, or  (byte) "," Returns the value associated with the given key, or (byte) 0 if no mapping of the desired type exists for the given key. <br /><br />"
"android.os.Bundle.getByteArray (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.Bundle.hasFileDescriptors () "," Reports whether the bundle contains any parcelled file descriptors. <br /><br />"
"android.os.Bundle.getCharSequenceArrayList (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.Bundle.writeToParcel (Parcel parcel, int flags) "," Writes the Bundle contents to a Parcel, typically in order for it to be passed through an IBinder connection. <br /><br />"
"android.os.Bundle.putChar (String key, char value) "," Inserts a char value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.os.Bundle.putShortArray (String key, short[] value) "," Inserts a short array value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.putCharSequenceArray (String key, CharSequence[] value) "," Inserts a CharSequence array value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.getClassLoader () "," Return the ClassLoader currently associated with this Bundle. <br /><br />"
"android.os.Bundle.getBundle (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.Bundle.getCharSequence (String key, CharSequence defaultValue) "," Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key or if a null value is explicitly associatd with the given key. <br /><br />"
"android.os.Bundle.getShortArray (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.Bundle.getFloatArray (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.Bundle.putCharSequenceArrayList (String key, ArrayList< CharSequence> value) "," Inserts an ArrayList  value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.putAll (Bundle bundle) "," Inserts all mappings from the given Bundle into this Bundle. <br /><br />"
"android.os.Bundle.readFromParcel (Parcel parcel) "," Reads the Parcel contents into this Bundle, typically in order for it to be passed through an IBinder connection. <br /><br />"
"android.os.Bundle.getCharSequence (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.Bundle.putShort (String key, short value) "," Inserts a short value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.getFloat (String key, float defaultValue) "," Returns the value associated with the given key, or defaultValue if no mapping of the desired type exists for the given key. <br /><br />"
"android.os.Bundle.describeContents () "," Report the nature of this Parcelable's contents <br /><br />"
"android.os.Bundle.putBundle (String key, Bundle value) "," Inserts a Bundle value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.Bundle.getCharSequenceArray (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.Bundle.getShort (String key)   Returns the value associated with the given key, or  (short) "," Returns the value associated with the given key, or (short) 0 if no mapping of the desired type exists for the given key. <br /><br />"
"android.os.Bundle.getChar (String key)   Returns the value associated with the given key, or  (char) "," Returns the value associated with the given key, or (char) 0 if no mapping of the desired type exists for the given key. <br /><br />"
"android.os.Bundle.clone () "," Clones the current Bundle. <br /><br />"
"android.os.Bundle.getSparseParcelableArray (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.CancellationSignal.setOnCancelListener (CancellationSignal.OnCancelListener listener) "," Sets the cancellation listener to be called when canceled. <br /><br />"
"android.os.CancellationSignal.throwIfCanceled () "," Throws OperationCanceledException if the operation has been canceled. <br /><br />"
"android.os.CancellationSignal.isCanceled () "," Returns true if the operation has been canceled. <br /><br />"
"android.os.CancellationSignal.cancel () "," Cancels the operation and signals the cancellation listener. <br /><br />"
"android.os.CancellationSignal.OnCancelListener.onCancel ()   Called when cancel () "," Called when cancel() is invoked. <br /><br />"
"android.os.ConditionVariable.block (long timeout) "," Block the current thread until the condition is opened or until timeout milliseconds have passed. <br /><br />"
"android.os.ConditionVariable.open () "," Open the condition, and release all threads that are blocked. <br /><br />"
"android.os.ConditionVariable.close () "," Reset the condition to the closed state. <br /><br />"
"android.os.ConditionVariable.block () "," Block the current thread until the condition is opened. <br /><br />"
"android.os.CountDownTimer.onFinish () "," Callback fired when the time is up. <br /><br />"
"android.os.CountDownTimer.onTick (long millisUntilFinished) "," Callback fired on regular interval. <br /><br />"
"android.os.CountDownTimer.start () "," Start the countdown. <br /><br />"
"android.os.CountDownTimer.cancel () "," Cancel the countdown. <br /><br />"
"android.os.Debug.dumpService (String name, FileDescriptor fd, String[] args) "," Get a debugging dump of a system service by name. <br /><br />"
"android.os.Debug.resetThreadAllocCount () "," Clears the thread-local count of objects allocated. <br /><br />"
"android.os.Debug.resetThreadExternalAllocCount () "," This method was deprecated in API level 11. This method is now obsolete. <br /><br />"
"android.os.Debug.waitingForDebugger () "," Returns 'true' if one or more threads is waiting for a debugger to attach. <br /><br />"
"android.os.Debug.resetGlobalAllocCount () "," Clears the global count of objects allocated. <br /><br />"
"android.os.Debug.getGlobalAllocCount ()   Returns the global count of objects allocated by the runtime between a start and "," Returns the global count of objects allocated by the runtime between a start and stop. <br /><br />"
"android.os.Debug.getGlobalClassInitCount ()   Returns the number of classes successfully initialized  (ie those that executed without throwing an exception) between a start and "," Returns the number of classes successfully initialized (ie those that executed without throwing an exception) between a start and stop. <br /><br />"
"android.os.Debug.resetGlobalGcInvocationCount () "," Clears the count of non-concurrent GC invocations. <br /><br />"
"android.os.Debug.stopAllocCounting () "," Stop counting the number and aggregate size of memory allocations. <br /><br />"
"android.os.Debug.startAllocCounting () "," This method was deprecated in API level 18. Accurate counting is a burden on the runtime and may be removed. <br /><br />"
"android.os.Debug.changeDebugPort (int port) "," This method was deprecated in API level 3. no longer needed or useful <br /><br />"
"android.os.Debug.getBinderReceivedTransactions () "," Returns the number of received transactions from the binder driver. <br /><br />"
"android.os.Debug.waitForDebugger () "," Wait until a debugger attaches. <br /><br />"
"android.os.Debug.getGlobalExternalAllocSize () "," This method was deprecated in API level 11. This method is now obsolete. <br /><br />"
"android.os.Debug.getThreadAllocCount ()   Returns the thread-local count of objects allocated by the runtime between a start and "," Returns the thread-local count of objects allocated by the runtime between a start and stop. <br /><br />"
"android.os.Debug.getThreadExternalAllocSize () "," This method was deprecated in API level 11. This method is now obsolete. <br /><br />"
"android.os.Debug.threadCpuTimeNanos () "," Get an indication of thread CPU usage. <br /><br />"
"android.os.Debug.startNativeTracing () "," Enable qemu tracing. <br /><br />"
"android.os.Debug.resetGlobalFreedSize () "," Clears the global size of objects freed. <br /><br />"
"android.os.Debug.getGlobalExternalAllocCount () "," This method was deprecated in API level 11. This method is now obsolete. <br /><br />"
"android.os.Debug.getGlobalFreedCount ()   Returns the global count of objects freed by the runtime between a start and "," Returns the global count of objects freed by the runtime between a start and stop. <br /><br />"
"android.os.Debug.resetGlobalExternalAllocSize () "," This method was deprecated in API level 11. This method is now obsolete. <br /><br />"
"android.os.Debug.setGlobalAllocationLimit (int limit) "," This method was deprecated in API level 11. This method is now obsolete. <br /><br />"
"android.os.Debug.getMemoryInfo (Debug.MemoryInfo memoryInfo) "," Retrieves information about this processes memory usages. <br /><br />"
"android.os.Debug.startMethodTracingSampling (String traceName, int bufferSize, int intervalUs) "," Start sampling-based method tracing, specifying the trace log file name, the buffer size, and the sampling interval. <br /><br />"
"android.os.Debug.stopNativeTracing () "," Stop qemu tracing. <br /><br />"
"android.os.Debug.getBinderDeathObjectCount () "," Returns the number of death notification links to Binder objects that exist in the current process. <br /><br />"
"android.os.Debug.startMethodTracing () "," Start method tracing with default log name and buffer size. <br /><br />"
"android.os.Debug.startMethodTracing (String traceName, int bufferSize) "," Start method tracing, specifying the trace log file name and the buffer size. <br /><br />"
"android.os.Debug.getNativeHeapAllocatedSize () "," Returns the amount of allocated memory in the native heap. <br /><br />"
"android.os.Debug.getGlobalFreedSize ()   Returns the global size, in bytes, of objects freed by the runtime between a start and "," Returns the global size, in bytes, of objects freed by the runtime between a start and stop. <br /><br />"
"android.os.Debug.resetGlobalClassInitCount () "," Clears the count of classes initialized. <br /><br />"
"android.os.Debug.resetGlobalExternalAllocCount () "," This method was deprecated in API level 11. This method is now obsolete. <br /><br />"
"android.os.Debug.getBinderProxyObjectCount () "," Returns the number of references to remote proxy Binder objects that exist in the current process. <br /><br />"
"android.os.Debug.resetGlobalFreedCount () "," Clears the global count of objects freed. <br /><br />"
"android.os.Debug.getNativeHeapSize () "," Returns the size of the native heap. <br /><br />"
"android.os.Debug.resetGlobalAllocSize () "," Clears the global size of objects allocated. <br /><br />"
"android.os.Debug.resetThreadGcInvocationCount () "," Clears the thread-local count of non-concurrent GC invocations. <br /><br />"
"android.os.Debug.stopMethodTracing () "," Stop method tracing. <br /><br />"
"android.os.Debug.resetGlobalClassInitTime () "," Clears the count of time spent initializing classes. <br /><br />"
"android.os.Debug.getThreadGcInvocationCount ()   Returns the number of thread-local non-concurrent GC invocations between a start and "," Returns the number of thread-local non-concurrent GC invocations between a start and stop. <br /><br />"
"android.os.Debug.dumpHprofData (String fileName) "," Dump 'hprof' data to the specified file. <br /><br />"
"android.os.Debug.getThreadAllocSize ()   Returns the thread-local size of objects allocated by the runtime between a start and "," Returns the thread-local size of objects allocated by the runtime between a start and stop. <br /><br />"
"android.os.Debug.isDebuggerConnected () "," Determine if a debugger is currently attached. <br /><br />"
"android.os.Debug.getGlobalGcInvocationCount ()   Returns the number of non-concurrent GC invocations between a start and "," Returns the number of non-concurrent GC invocations between a start and stop. <br /><br />"
"android.os.Debug.resetGlobalExternalFreedCount () "," This method was deprecated in API level 11. This method is now obsolete. <br /><br />"
"android.os.Debug.resetAllCounts () "," Clears all the global and thread-local memory allocation counters. <br /><br />"
"android.os.Debug.getGlobalClassInitTime ()   Returns the time spent successfully initializing classes between a start and "," Returns the time spent successfully initializing classes between a start and stop. <br /><br />"
"android.os.Debug.startMethodTracing (String traceName) "," Start method tracing, specifying the trace log file name. <br /><br />"
"android.os.Debug.startMethodTracing (String traceName, int bufferSize, int flags) "," Start method tracing, specifying the trace log file name and the buffer size. <br /><br />"
"android.os.Debug.getBinderLocalObjectCount () "," Returns the number of active local Binder objects that exist in the current process. <br /><br />"
"android.os.Debug.printLoadedClasses (int flags) "," Dump a list of all currently loaded class to the log file. <br /><br />"
"android.os.Debug.getGlobalAllocSize ()   Returns the global size, in bytes, of objects allocated by the runtime between a start and "," Returns the global size, in bytes, of objects allocated by the runtime between a start and stop. <br /><br />"
"android.os.Debug.getPss () "," Retrieves the PSS memory used by the process as given by the smaps. <br /><br />"
"android.os.Debug.resetThreadAllocSize () "," Clears the thread-local count of objects allocated. <br /><br />"
"android.os.Debug.getLoadedClassCount () "," Get the number of loaded classes. <br /><br />"
"android.os.Debug.setAllocationLimit (int limit) "," This method was deprecated in API level 11. This method is now obsolete. <br /><br />"
"android.os.Debug.getGlobalExternalFreedSize () "," This method was deprecated in API level 11. This method is now obsolete. <br /><br />"
"android.os.Debug.resetThreadExternalAllocSize () "," This method was deprecated in API level 11. This method is now obsolete. <br /><br />"
"android.os.Debug.getGlobalExternalFreedCount () "," This method was deprecated in API level 11. This method is now obsolete. <br /><br />"
"android.os.Debug.resetGlobalExternalFreedSize () "," This method was deprecated in API level 11. This method is now obsolete. <br /><br />"
"android.os.Debug.getNativeHeapFreeSize () "," Returns the amount of free memory in the native heap. <br /><br />"
"android.os.Debug.getBinderSentTransactions () "," Returns the number of sent transactions from this process. <br /><br />"
"android.os.Debug.getThreadExternalAllocCount () "," This method was deprecated in API level 11. This method is now obsolete. <br /><br />"
"android.os.Debug.enableEmulatorTraceOutput () "," Enable 'emulator traces', in which information about the current method is made available to the 'emulator -trace' feature. <br /><br />"
"android.os.Debug.InstructionCount.resetAndStart () "," Reset counters and ensure counts are running. <br /><br />"
"android.os.Debug.InstructionCount.globalMethodInvocations () "," Return the total number of method-invocation instructions executed globally. <br /><br />"
"android.os.Debug.InstructionCount.collect () "," Collect instruction counts. <br /><br />"
"android.os.Debug.InstructionCount.globalTotal () "," Return the total number of instructions executed globally (i.e. <br /><br />"
"android.os.Debug.MemoryInfo.getTotalPss () "," Return total PSS memory usage in kB. <br /><br />"
"android.os.Debug.MemoryInfo.readFromParcel (Parcel source) "," no description <br /><br />"
"android.os.Debug.MemoryInfo.getTotalSharedDirty () "," Return total shared dirty memory usage in kB. <br /><br />"
"android.os.Debug.MemoryInfo.getTotalSwappablePss () "," Return total PSS memory usage in kB. <br /><br />"
"android.os.Debug.MemoryInfo.getTotalPrivateClean () "," Return total shared clean memory usage in kB. <br /><br />"
"android.os.Debug.MemoryInfo.getTotalSharedClean () "," Return total shared clean memory usage in kB. <br /><br />"
"android.os.Debug.MemoryInfo.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.os.Debug.MemoryInfo.getTotalPrivateDirty () "," Return total private dirty memory usage in kB. <br /><br />"
"android.os.Debug.MemoryInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.os.DropBoxManager.Entry.getTag () "," no description <br /><br />"
"android.os.DropBoxManager.Entry.getTimeMillis () "," no description <br /><br />"
"android.os.DropBoxManager.Entry.close () "," Close the input stream associated with this entry. <br /><br />"
"android.os.DropBoxManager.Entry.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.os.DropBoxManager.Entry.getFlags () "," no description <br /><br />"
"android.os.DropBoxManager.Entry.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.os.DropBoxManager.Entry.getText (int maxBytes) "," no description <br /><br />"
"android.os.DropBoxManager.Entry.getInputStream () "," no description <br /><br />"
"android.os.DropBoxManager.isTagEnabled (String tag)   Checks any blacklists  (set in system settings) "," Checks any blacklists (set in system settings) to see whether a certain tag is allowed. <br /><br />"
"android.os.DropBoxManager.getNextEntry (String tag, long msec) "," Gets the next entry from the drop box after the specified time. <br /><br />"
"android.os.DropBoxManager.addData (String tag, byte[] data, int flags)   Stores binary data, which may be ignored or discarded as with addText (String, String) "," Stores binary data, which may be ignored or discarded as with addText(String, String). <br /><br />"
"android.os.DropBoxManager.addText (String tag, String data) "," Stores human-readable text. <br /><br />"
"android.os.DropBoxManager.addFile (String tag, File file, int flags)   Stores the contents of a file, which may be ignored or discarded as with addText (String, String) "," Stores the contents of a file, which may be ignored or discarded as with addText(String, String). <br /><br />"
"android.os.Environment.isExternalStorageEmulated () "," Returns whether the primary 'external' storage device is emulated. <br /><br />"
"android.os.Environment.isExternalStorageRemovable () "," Returns whether the primary 'external' storage device is removable. <br /><br />"
"android.os.Environment.getExternalStorageDirectory () "," Return the primary external storage directory. <br /><br />"
"android.os.Environment.isExternalStorageRemovable (File path) "," Returns whether the storage device that provides the given path is removable. <br /><br />"
"android.os.Environment.getExternalStorageState () "," Returns the current state of the primary 'external' storage device. <br /><br />"
"android.os.Environment.getDownloadCacheDirectory () "," Return the download/cache content directory. <br /><br />"
"android.os.Environment.getExternalStoragePublicDirectory (String type) "," Get a top-level public external storage directory for placing files of a particular type. <br /><br />"
"android.os.Environment.getDataDirectory () "," Return the user data directory. <br /><br />"
"android.os.Environment.getStorageState (File path)    This method was deprecated in API level 21. use getExternalStorageState (File) "," This method was deprecated in API level 21. use getExternalStorageState(File) <br /><br />"
"android.os.Environment.getRootDirectory () "," Return root of the 'system' partition holding the core Android OS. <br /><br />"
"android.os.Environment.isExternalStorageEmulated (File path) "," Returns whether the storage device that provides the given path is emulated. <br /><br />"
"android.os.Environment.getExternalStorageState (File path) "," Returns the current state of the storage device that provides the given path. <br /><br />"
"android.os.FileObserver.stopWatching () "," Stop watching for events. <br /><br />"
"android.os.FileObserver.onEvent (int event, String path) "," The event handler, which must be implemented by subclasses. <br /><br />"
"android.os.FileObserver.startWatching () "," Start watching for events. <br /><br />"
"android.os.Handler.Callback.handleMessage (Message msg) "," no description <br /><br />"
"android.os.Handler.postAtTime (Runnable r, long uptimeMillis) "," Causes the Runnable r to be added to the message queue, to be run at a specific time given by uptimeMillis. <br /><br />"
"android.os.Handler.removeMessages (int what) "," Remove any pending posts of messages with code 'what' that are in the message queue. <br /><br />"
"android.os.Handler.sendEmptyMessageAtTime (int what, long uptimeMillis) "," Sends a Message containing only the what value, to be delivered at a specific time. <br /><br />"
"android.os.Handler.obtainMessage (int what, Object obj)   Same as obtainMessage () "," Same as obtainMessage(), except that it also sets the what and obj members of the returned Message. <br /><br />"
"android.os.Handler.getLooper () "," no description <br /><br />"
"android.os.Handler.obtainMessage () "," Returns a new Message from the global message pool. <br /><br />"
"android.os.Handler.hasMessages (int what, Object object) "," Check if there are any pending posts of messages with code 'what' and whose obj is 'object' in the message queue. <br /><br />"
"android.os.Handler.removeCallbacks (Runnable r) "," Remove any pending posts of Runnable r that are in the message queue. <br /><br />"
"android.os.Handler.handleMessage (Message msg) "," Subclasses must implement this to receive messages. <br /><br />"
"android.os.Handler.hasMessages (int what) "," Check if there are any pending posts of messages with code 'what' in the message queue. <br /><br />"
"android.os.Handler.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.os.Handler.removeCallbacks (Runnable r, Object token) "," Remove any pending posts of Runnable r with Object token that are in the message queue. <br /><br />"
"android.os.Handler.dispatchMessage (Message msg) "," Handle system messages here. <br /><br />"
"android.os.Handler.postAtTime (Runnable r, Object token, long uptimeMillis) "," Causes the Runnable r to be added to the message queue, to be run at a specific time given by uptimeMillis. <br /><br />"
"android.os.Handler.postDelayed (Runnable r, long delayMillis) "," Causes the Runnable r to be added to the message queue, to be run after the specified amount of time elapses. <br /><br />"
"android.os.Handler.getMessageName (Message message) "," Returns a string representing the name of the specified message. <br /><br />"
"android.os.Handler.removeCallbacksAndMessages (Object token) "," Remove any pending posts of callbacks and sent messages whose obj is token. <br /><br />"
"android.os.Handler.obtainMessage (int what)   Same as obtainMessage () "," Same as obtainMessage(), except that it also sets the what member of the returned Message. <br /><br />"
"android.os.Handler.obtainMessage (int what, int arg1, int arg2, Object obj)   Same as obtainMessage () "," Same as obtainMessage(), except that it also sets the what, obj, arg1,and arg2 values on the returned Message. <br /><br />"
"android.os.Handler.dump (Printer pw, String prefix) "," no description <br /><br />"
"android.os.Handler.postAtFrontOfQueue (Runnable r) "," Posts a message to an object that implements Runnable. <br /><br />"
"android.os.Handler.post (Runnable r) "," Causes the Runnable r to be added to the message queue. <br /><br />"
"android.os.Handler.removeMessages (int what, Object object) "," Remove any pending posts of messages with code 'what' and whose obj is 'object' that are in the message queue. <br /><br />"
"android.os.Handler.obtainMessage (int what, int arg1, int arg2)   Same as obtainMessage () "," Same as obtainMessage(), except that it also sets the what, arg1 and arg2 members of the returned Message. <br /><br />"
"android.os.Handler.sendMessageDelayed (Message msg, long delayMillis)   Enqueue a message into the message queue after all pending messages before  (current time + delayMillis) "," Enqueue a message into the message queue after all pending messages before (current time + delayMillis). <br /><br />"
"android.os.Handler.sendMessageAtTime (Message msg, long uptimeMillis)   Enqueue a message into the message queue after all pending messages before the absolute time  (in milliseconds) "," Enqueue a message into the message queue after all pending messages before the absolute time (in milliseconds) uptimeMillis. <br /><br />"
"android.os.Handler.sendMessageAtFrontOfQueue (Message msg) "," Enqueue a message at the front of the message queue, to be processed on the next iteration of the message loop. <br /><br />"
"android.os.Handler.sendEmptyMessageDelayed (int what, long delayMillis) "," Sends a Message containing only the what value, to be delivered after the specified amount of time elapses. <br /><br />"
"android.os.Handler.sendEmptyMessage (int what) "," Sends a Message containing only the what value. <br /><br />"
"android.os.Handler.sendMessage (Message msg) "," Pushes a message onto the end of the message queue after all pending messages before the current time. <br /><br />"
"android.os.HandlerThread.run ()   Calls the run () "," Calls the run() method of the Runnable object the receiver holds. <br /><br />"
"android.os.HandlerThread.getThreadId () "," Returns the identifier of this thread. <br /><br />"
"android.os.HandlerThread.getLooper () "," This method returns the Looper associated with this thread. <br /><br />"
"android.os.HandlerThread.quitSafely () "," Quits the handler thread's looper safely. <br /><br />"
"android.os.HandlerThread.quit () "," Quits the handler thread's looper. <br /><br />"
"android.os.IBinder.DeathRecipient.binderDied () "," no description <br /><br />"
"android.os.IBinder.isBinderAlive () "," Check to see if the process that the binder is in is still alive. <br /><br />"
"android.os.IBinder.getInterfaceDescriptor () "," Get the canonical name of the interface supported by this binder. <br /><br />"
"android.os.IBinder.transact (int code, Parcel data, Parcel reply, int flags) "," Perform a generic operation with the object. <br /><br />"
"android.os.IBinder.queryLocalInterface (String descriptor) "," Attempt to retrieve a local implementation of an interface for this Binder object. <br /><br />"
"android.os.IBinder.linkToDeath (IBinder.DeathRecipient recipient, int flags) "," Register the recipient for a notification if this binder goes away. <br /><br />"
"android.os.IBinder.dumpAsync (FileDescriptor fd, String[] args)   Like dump (FileDescriptor, String[]) "," Like dump(FileDescriptor, String[]) but always executes asynchronously. <br /><br />"
"android.os.IBinder.pingBinder () "," Check to see if the object still exists. <br /><br />"
"android.os.IBinder.unlinkToDeath (IBinder.DeathRecipient recipient, int flags) "," Remove a previously registered death notification. <br /><br />"
"android.os.IBinder.dump (FileDescriptor fd, String[] args) "," Print the object's state into the given stream. <br /><br />"
"android.os.IInterface.asBinder () "," Retrieve the Binder object associated with this interface. <br /><br />"
"android.os.Looper.dump (Printer pw, String prefix) "," no description <br /><br />"
"android.os.Looper.myLooper () "," Return the Looper object associated with the current thread. <br /><br />"
"android.os.Looper.quitSafely () "," Quits the looper safely. <br /><br />"
"android.os.Looper.quit () "," Quits the looper. <br /><br />"
"android.os.Looper.prepareMainLooper () "," Initialize the current thread as a looper, marking it as an application's main looper. <br /><br />"
"android.os.Looper.loop () "," Run the message queue in this thread. <br /><br />"
"android.os.Looper.prepare () "," Initialize the current thread as a looper. <br /><br />"
"android.os.Looper.getThread () "," Return the Thread associated with this Looper. <br /><br />"
"android.os.Looper.myQueue () "," Return the MessageQueue object associated with the current thread. <br /><br />"
"android.os.Looper.getMainLooper () "," Returns the application's main looper, which lives in the main thread of the application. <br /><br />"
"android.os.Looper.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.os.Looper.setMessageLogging (Printer printer) "," Control logging of messages as they are processed by this Looper. <br /><br />"
"android.os.MemoryFile.length () "," Returns the length of the memory file. <br /><br />"
"android.os.MemoryFile.writeBytes (byte[] buffer, int srcOffset, int destOffset, int count) "," Write bytes to the memory file. <br /><br />"
"android.os.MemoryFile.readBytes (byte[] buffer, int srcOffset, int destOffset, int count) "," Reads bytes from the memory file. <br /><br />"
"android.os.MemoryFile.getOutputStream () "," Creates a new OutputStream for writing to the memory file. <br /><br />"
"android.os.MemoryFile.allowPurging (boolean allowPurging) "," Enables or disables purging of the memory file. <br /><br />"
"android.os.MemoryFile.close () "," Closes the memory file. <br /><br />"
"android.os.MemoryFile.isPurgingAllowed () "," Is memory file purging enabled? <br /><br />"
"android.os.MemoryFile.getInputStream () "," Creates a new InputStream for reading from the memory file. <br /><br />"
"android.os.Message.peekData ()   Like getData () "," Like getData(), but does not lazily create the Bundle. <br /><br />"
"android.os.Message.copyFrom (Message o) "," Make this message like o. <br /><br />"
"android.os.Message.obtain (Handler h, int what, int arg1, int arg2, Object obj)   Same as obtain () "," Same as obtain(), but sets the values of the target, what, arg1, arg2, and obj members. <br /><br />"
"android.os.Message.getCallback () "," Retrieve callback object that will execute when this message is handled. <br /><br />"
"android.os.Message.obtain (Handler h)   Same as obtain () "," Same as obtain(), but sets the value for the target member on the Message returned. <br /><br />"
"android.os.Message.obtain (Handler h, int what, int arg1, int arg2)   Same as obtain () "," Same as obtain(), but sets the values of the target, what, arg1, and arg2 members. <br /><br />"
"android.os.Message.setAsynchronous (boolean async) "," Sets whether the message is asynchronous, meaning that it is not subject to Looper synchronization barriers. <br /><br />"
"android.os.Message.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.os.Message.obtain (Handler h, int what)   Same as obtain () "," Same as obtain(), but sets the values for both target and what members on the Message. <br /><br />"
"android.os.Message.isAsynchronous () "," Returns true if the message is asynchronous, meaning that it is not subject to Looper synchronization barriers. <br /><br />"
"android.os.Message.sendToTarget ()   Sends this Message to the Handler specified by getTarget () "," Sends this Message to the Handler specified by getTarget(). <br /><br />"
"android.os.Message.obtain (Message orig)   Same as obtain (), but copies the values of an existing message  (including its target) "," Same as obtain(), but copies the values of an existing message (including its target) into the new one. <br /><br />"
"android.os.Message.getWhen () "," Return the targeted delivery time of this message, in milliseconds. <br /><br />"
"android.os.Message.obtain (Handler h, Runnable callback)   Same as obtain (Handler) "," Same as obtain(Handler), but assigns a callback Runnable on the Message that is returned. <br /><br />"
"android.os.Message.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.os.Message.obtain (Handler h, int what, Object obj)   Same as obtain () "," Same as obtain(), but sets the values of the target, what, and obj members. <br /><br />"
"android.os.Message.recycle () "," Return a Message instance to the global pool. <br /><br />"
"android.os.Message.obtain () "," Return a new Message instance from the global pool. <br /><br />"
"android.os.Message.getData () "," Obtains a Bundle of arbitrary data associated with this event, lazily creating it if necessary. <br /><br />"
"android.os.Message.setTarget (Handler target) "," no description <br /><br />"
"android.os.Message.setData (Bundle data) "," Sets a Bundle of arbitrary data values. <br /><br />"
"android.os.Message.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.os.Message.getTarget () "," Retrieve the a Handler implementation that will receive this message. <br /><br />"
"android.os.MessageQueue.IdleHandler.queueIdle () "," Called when the message queue has run out of messages and will now wait for more. <br /><br />"
"android.os.Messenger.send (Message message) "," Send a Message to this Messenger's Handler. <br /><br />"
"android.os.Messenger.writeMessengerOrNullToParcel (Messenger messenger, Parcel out) "," Convenience function for writing either a Messenger or null pointer to a Parcel. <br /><br />"
"android.os.Messenger.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.os.Messenger.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.os.Messenger.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.os.Messenger.readMessengerOrNullFromParcel (Parcel in) "," Convenience function for reading either a Messenger or null pointer from a Parcel. <br /><br />"
"android.os.Messenger.getBinder () "," Retrieve the IBinder that this Messenger is using to communicate with its associated Handler. <br /><br />"
"android.os.Messenger.equals (Object otherObj) "," Comparison operator on two Messenger objects, such that true is returned then they both point to the same Handler. <br /><br />"
"android.os.Parcel.readValue (ClassLoader loader) "," Read a typed object from a parcel. <br /><br />"
"android.os.Parcel.readArrayList (ClassLoader loader)   Read and return a new ArrayList object from the parcel at the current dataPosition () "," Read and return a new ArrayList object from the parcel at the current dataPosition(). <br /><br />"
"android.os.Parcel.writeBooleanArray (boolean[] val) "," no description <br /><br />"
"android.os.Parcel.readPersistableBundle (ClassLoader loader)   Read and return a new Bundle object from the parcel at the current dataPosition () "," Read and return a new Bundle object from the parcel at the current dataPosition(), using the given class loader to initialize the class loader of the Bundle for later retrieval of Parcelable objects. <br /><br />"
"android.os.Parcel.writeValue (Object v) "," Flatten a generic object in to a parcel. <br /><br />"
"android.os.Parcel.createBooleanArray () "," no description <br /><br />"
"android.os.Parcel.readSparseArray (ClassLoader loader)   Read and return a new SparseArray object from the parcel at the current dataPosition () "," Read and return a new SparseArray object from the parcel at the current dataPosition(). <br /><br />"
"android.os.Parcel.readCharArray (char[] val) "," no description <br /><br />"
"android.os.Parcel.createBinderArrayList ()   Read and return a new ArrayList containing IBinder objects from the parcel that was written with writeBinderList (List  )  at the current dataPosition () "," Read and return a new ArrayList containing IBinder objects from the parcel that was written with writeBinderList(List  )  at the current dataPosition(). <br /><br />"
"android.os.Parcel.writeArray (Object[] val)   Flatten an Object array into the parcel at the current dataPosition (), growing dataCapacity () "," Flatten an Object array into the parcel at the current dataPosition(), growing dataCapacity() if needed. <br /><br />"
"android.os.Parcel.readArray (ClassLoader loader)   Read and return a new Object array from the parcel at the current dataPosition () "," Read and return a new Object array from the parcel at the current dataPosition(). <br /><br />"
"android.os.Parcel.dataPosition () "," Returns the current position in the parcel data. <br /><br />"
"android.os.Parcel.readStrongBinder ()   Read an object from the parcel at the current dataPosition () "," Read an object from the parcel at the current dataPosition(). <br /><br />"
"android.os.Parcel.createFloatArray () "," no description <br /><br />"
"android.os.Parcel.appendFrom (Parcel parcel, int offset, int length) "," no description <br /><br />"
"android.os.Parcel.writeParcelableArray (T[] value, int parcelableFlags) "," Write a heterogeneous array of Parcelable objects into the Parcel. <br /><br />"
"android.os.Parcel.writeList (List val)   Flatten a List into the parcel at the current dataPosition (), growing dataCapacity () "," Flatten a List into the parcel at the current dataPosition(), growing dataCapacity() if needed. <br /><br />"
"android.os.Parcel.createTypedArrayList (Creator<T> c)   Read and return a new ArrayList containing a particular object type from the parcel that was written with writeTypedList (List  )  at the current dataPosition () "," Read and return a new ArrayList containing a particular object type from the parcel that was written with writeTypedList(List  )  at the current dataPosition(). <br /><br />"
"android.os.Parcel.marshall () "," Returns the raw bytes of the parcel. <br /><br />"
"android.os.Parcel.readDouble ()   Read a double precision floating point value from the parcel at the current dataPosition () "," Read a double precision floating point value from the parcel at the current dataPosition(). <br /><br />"
"android.os.Parcel.writeDouble (double val)   Write a double precision floating point value into the parcel at the current dataPosition (), growing dataCapacity () "," Write a double precision floating point value into the parcel at the current dataPosition(), growing dataCapacity() if needed. <br /><br />"
"android.os.Parcel.writeByteArray (byte[] b, int offset, int len)   Write a byte array into the parcel at the current dataPosition (), growing dataCapacity () "," Write a byte array into the parcel at the current dataPosition(), growing dataCapacity() if needed. <br /><br />"
"android.os.Parcel.dataSize () "," Returns the total amount of data contained in the parcel. <br /><br />"
"android.os.Parcel.readTypedList (List<T> list, Creator<T> c)   Read into the given List items containing a particular object type that were written with writeTypedList (List  )  at the current dataPosition () "," Read into the given List items containing a particular object type that were written with writeTypedList(List  )  at the current dataPosition(). <br /><br />"
"android.os.Parcel.obtain () "," Retrieve a new Parcel object from the pool. <br /><br />"
"android.os.Parcel.readFloat ()   Read a floating point value from the parcel at the current dataPosition () "," Read a floating point value from the parcel at the current dataPosition(). <br /><br />"
"android.os.Parcel.readHashMap (ClassLoader loader)   Please use readBundle (ClassLoader) instead  (whose data must have been written with writeBundle (Bundle) "," Please use readBundle(ClassLoader) instead (whose data must have been written with writeBundle(Bundle). <br /><br />"
"android.os.Parcel.readParcelableArray (ClassLoader loader) "," Read and return a new Parcelable array from the parcel. <br /><br />"
"android.os.Parcel.readLong ()   Read a long integer value from the parcel at the current dataPosition () "," Read a long integer value from the parcel at the current dataPosition(). <br /><br />"
"android.os.Parcel.readInt ()   Read an integer value from the parcel at the current dataPosition () "," Read an integer value from the parcel at the current dataPosition(). <br /><br />"
"android.os.Parcel.writeParcelable (Parcelable p, int parcelableFlags) "," Flatten the name of the class of the Parcelable and its contents into the parcel. <br /><br />"
"android.os.Parcel.readDoubleArray (double[] val) "," no description <br /><br />"
"android.os.Parcel.writePersistableBundle (PersistableBundle val)   Flatten a PersistableBundle into the parcel at the current dataPosition (), growing dataCapacity () "," Flatten a PersistableBundle into the parcel at the current dataPosition(), growing dataCapacity() if needed. <br /><br />"
"android.os.Parcel.writeBinderArray (IBinder[] val) "," no description <br /><br />"
"android.os.Parcel.writeMap (Map val)   Please use writeBundle (Bundle) "," Please use writeBundle(Bundle) instead. <br /><br />"
"android.os.Parcel.writeLong (long val)   Write a long integer value into the parcel at the current dataPosition (), growing dataCapacity () "," Write a long integer value into the parcel at the current dataPosition(), growing dataCapacity() if needed. <br /><br />"
"android.os.Parcel.writeNoException () "," Special function for writing information at the front of the Parcel indicating that no exception occurred. <br /><br />"
"android.os.Parcel.writeDoubleArray (double[] val) "," no description <br /><br />"
"android.os.Parcel.writeStrongBinder (IBinder val)   Write an object into the parcel at the current dataPosition (), growing dataCapacity () "," Write an object into the parcel at the current dataPosition(), growing dataCapacity() if needed. <br /><br />"
"android.os.Parcel.readBinderArray (IBinder[] val) "," no description <br /><br />"
"android.os.Parcel.writeSparseBooleanArray (SparseBooleanArray val) "," no description <br /><br />"
"android.os.Parcel.readStringList (List< String> list)   Read into the given List items String objects that were written with writeStringList (List  )  at the current dataPosition () "," Read into the given List items String objects that were written with writeStringList(List  )  at the current dataPosition(). <br /><br />"
"android.os.Parcel.writeLongArray (long[] val) "," no description <br /><br />"
"android.os.Parcel.readPersistableBundle ()   Read and return a new Bundle object from the parcel at the current dataPosition () "," Read and return a new Bundle object from the parcel at the current dataPosition(). <br /><br />"
"android.os.Parcel.readLongArray (long[] val) "," no description <br /><br />"
"android.os.Parcel.writeCharArray (char[] val) "," no description <br /><br />"
"android.os.Parcel.unmarshall (byte[] data, int offset, int length) "," Set the bytes in data to be the raw bytes of this Parcel. <br /><br />"
"android.os.Parcel.readBundle ()   Read and return a new Bundle object from the parcel at the current dataPosition () "," Read and return a new Bundle object from the parcel at the current dataPosition(). <br /><br />"
"android.os.Parcel.writeInt (int val)   Write an integer value into the parcel at the current dataPosition (), growing dataCapacity () "," Write an integer value into the parcel at the current dataPosition(), growing dataCapacity() if needed. <br /><br />"
"android.os.Parcel.readIntArray (int[] val) "," no description <br /><br />"
"android.os.Parcel.recycle () "," Put a Parcel object back into the pool. <br /><br />"
"android.os.Parcel.writeInterfaceToken (String interfaceName)   Store or read an IBinder interface token in the parcel at the current dataPosition () "," Store or read an IBinder interface token in the parcel at the current dataPosition(). <br /><br />"
"android.os.Parcel.writeStringArray (String[] val) "," no description <br /><br />"
"android.os.Parcel.writeStringList (List< String> val)   Flatten a List containing String objects into the parcel, at the current dataPosition () and growing dataCapacity () "," Flatten a List containing String objects into the parcel, at the current dataPosition() and growing dataCapacity() if needed. <br /><br />"
"android.os.Parcel.readStringArray (String[] val) "," no description <br /><br />"
"android.os.Parcel.readParcelable (ClassLoader loader) "," Read and return a new Parcelable from the parcel. <br /><br />"
"android.os.Parcel.readSizeF ()   Read a SizeF from the parcel at the current dataPosition () "," Read a SizeF from the parcel at the current dataPosition(). <br /><br />"
"android.os.Parcel.readBooleanArray (boolean[] val) "," no description <br /><br />"
"android.os.Parcel.readBinderList (List< IBinder> list)   Read into the given List items IBinder objects that were written with writeBinderList (List  )  at the current dataPosition () "," Read into the given List items IBinder objects that were written with writeBinderList(List  )  at the current dataPosition(). <br /><br />"
"android.os.Parcel.createStringArrayList ()   Read and return a new ArrayList containing String objects from the parcel that was written with writeStringList (List  )  at the current dataPosition () "," Read and return a new ArrayList containing String objects from the parcel that was written with writeStringList(List  )  at the current dataPosition(). <br /><br />"
"android.os.Parcel.writeFileDescriptor (FileDescriptor val)   Write a FileDescriptor into the parcel at the current dataPosition (), growing dataCapacity () "," Write a FileDescriptor into the parcel at the current dataPosition(), growing dataCapacity() if needed. <br /><br />"
"android.os.Parcel.readString ()   Read a string value from the parcel at the current dataPosition () "," Read a string value from the parcel at the current dataPosition(). <br /><br />"
"android.os.Parcel.writeException (Exception e) "," Special function for writing an exception result at the header of a parcel, to be used when returning an exception from a transaction. <br /><br />"
"android.os.Parcel.readByteArray (byte[] val) "," Read a byte[] object from the parcel and copy it into the given byte array. <br /><br />"
"android.os.Parcel.writeTypedList (List<T> val)   Flatten a List containing a particular object type into the parcel, at the current dataPosition () and growing dataCapacity () "," Flatten a List containing a particular object type into the parcel, at the current dataPosition() and growing dataCapacity() if needed. <br /><br />"
"android.os.Parcel.createCharArray () "," no description <br /><br />"
"android.os.Parcel.readSize ()   Read a Size from the parcel at the current dataPosition () "," Read a Size from the parcel at the current dataPosition(). <br /><br />"
"android.os.Parcel.setDataSize (int size) "," Change the amount of data in the parcel. <br /><br />"
"android.os.Parcel.createBinderArray () "," no description <br /><br />"
"android.os.Parcel.readException (int code, String msg) "," Throw an exception with the given message. <br /><br />"
"android.os.Parcel.readBundle (ClassLoader loader)   Read and return a new Bundle object from the parcel at the current dataPosition () "," Read and return a new Bundle object from the parcel at the current dataPosition(), using the given class loader to initialize the class loader of the Bundle for later retrieval of Parcelable objects. <br /><br />"
"android.os.Parcel.writeByte (byte val)   Write a byte value into the parcel at the current dataPosition (), growing dataCapacity () "," Write a byte value into the parcel at the current dataPosition(), growing dataCapacity() if needed. <br /><br />"
"android.os.Parcel.writeFloat (float val)   Write a floating point value into the parcel at the current dataPosition (), growing dataCapacity () "," Write a floating point value into the parcel at the current dataPosition(), growing dataCapacity() if needed. <br /><br />"
"android.os.Parcel.createByteArray () "," Read and return a byte[] object from the parcel. <br /><br />"
"android.os.Parcel.writeStrongInterface (IInterface val)   Write an object into the parcel at the current dataPosition (), growing dataCapacity () "," Write an object into the parcel at the current dataPosition(), growing dataCapacity() if needed. <br /><br />"
"android.os.Parcel.readSparseBooleanArray ()   Read and return a new SparseBooleanArray object from the parcel at the current dataPosition () "," Read and return a new SparseBooleanArray object from the parcel at the current dataPosition(). <br /><br />"
"android.os.Parcel.writeString (String val)   Write a string value into the parcel at the current dataPosition (), growing dataCapacity () "," Write a string value into the parcel at the current dataPosition(), growing dataCapacity() if needed. <br /><br />"
"android.os.Parcel.writeSize (Size val)   Flatten a Size into the parcel at the current dataPosition (), growing dataCapacity () "," Flatten a Size into the parcel at the current dataPosition(), growing dataCapacity() if needed. <br /><br />"
"android.os.Parcel.setDataPosition (int pos) "," Move the current read/write position in the parcel. <br /><br />"
"android.os.Parcel.readMap (Map outVal, ClassLoader loader)   Please use readBundle (ClassLoader) instead  (whose data must have been written with writeBundle (Bundle) "," Please use readBundle(ClassLoader) instead (whose data must have been written with writeBundle(Bundle). <br /><br />"
"android.os.Parcel.enforceInterface (String interfaceName) "," no description <br /><br />"
"android.os.Parcel.readByte ()   Read a byte value from the parcel at the current dataPosition () "," Read a byte value from the parcel at the current dataPosition(). <br /><br />"
"android.os.Parcel.hasFileDescriptors () "," Report whether the parcel contains any marshalled file descriptors. <br /><br />"
"android.os.Parcel.createStringArray () "," no description <br /><br />"
"android.os.Parcel.readTypedArray (T[] val, Creator<T> c) "," no description <br /><br />"
"android.os.Parcel.createIntArray () "," no description <br /><br />"
"android.os.Parcel.createTypedArray (Creator<T> c)   Read and return a new array containing a particular object type from the parcel at the current dataPosition () "," Read and return a new array containing a particular object type from the parcel at the current dataPosition(). <br /><br />"
"android.os.Parcel.readSerializable () "," Read and return a new Serializable object from the parcel. <br /><br />"
"android.os.Parcel.createLongArray () "," no description <br /><br />"
"android.os.Parcel.writeTypedArray (T[] val, int parcelableFlags)   Flatten a heterogeneous array containing a particular object type into the parcel, at the current dataPosition () and growing dataCapacity () "," Flatten a heterogeneous array containing a particular object type into the parcel, at the current dataPosition() and growing dataCapacity() if needed. <br /><br />"
"android.os.Parcel.writeSizeF (SizeF val)   Flatten a SizeF into the parcel at the current dataPosition (), growing dataCapacity () "," Flatten a SizeF into the parcel at the current dataPosition(), growing dataCapacity() if needed. <br /><br />"
"android.os.Parcel.readException () "," Special function for reading an exception result from the header of a parcel, to be used after receiving the result of a transaction. <br /><br />"
"android.os.Parcel.writeBinderList (List< IBinder> val)   Flatten a List containing IBinder objects into the parcel, at the current dataPosition () and growing dataCapacity () "," Flatten a List containing IBinder objects into the parcel, at the current dataPosition() and growing dataCapacity() if needed. <br /><br />"
"android.os.Parcel.writeSerializable (Serializable s) "," Write a generic serializable object in to a Parcel. <br /><br />"
"android.os.Parcel.writeSparseArray (SparseArray< Object> val)   Flatten a generic SparseArray into the parcel at the current dataPosition (), growing dataCapacity () "," Flatten a generic SparseArray into the parcel at the current dataPosition(), growing dataCapacity() if needed. <br /><br />"
"android.os.Parcel.readList (List outVal, ClassLoader loader)   Read into an existing List object from the parcel at the current dataPosition () "," Read into an existing List object from the parcel at the current dataPosition(), using the given class loader to load any enclosed Parcelables. <br /><br />"
"android.os.Parcel.writeBundle (Bundle val)   Flatten a Bundle into the parcel at the current dataPosition (), growing dataCapacity () "," Flatten a Bundle into the parcel at the current dataPosition(), growing dataCapacity() if needed. <br /><br />"
"android.os.Parcel.writeFloatArray (float[] val) "," no description <br /><br />"
"android.os.Parcel.createDoubleArray () "," no description <br /><br />"
"android.os.Parcel.writeIntArray (int[] val) "," no description <br /><br />"
"android.os.Parcel.readFloatArray (float[] val) "," no description <br /><br />"
"android.os.Parcel.setDataCapacity (int size)   Change the capacity  (current available space) "," Change the capacity (current available space) of the parcel. <br /><br />"
"android.os.Parcel.readFileDescriptor ()   Read a FileDescriptor from the parcel at the current dataPosition () "," Read a FileDescriptor from the parcel at the current dataPosition(). <br /><br />"
"android.os.Parcel.dataAvail () "," Returns the amount of data remaining to be read from the parcel. <br /><br />"
"android.os.Parcel.dataCapacity () "," Returns the total amount of space in the parcel. <br /><br />"
"android.os.Parcel.writeByteArray (byte[] b)   Write a byte array into the parcel at the current dataPosition (), growing dataCapacity () "," Write a byte array into the parcel at the current dataPosition(), growing dataCapacity() if needed. <br /><br />"
"android.os.Parcelable.ClassLoaderCreator<T>.createFromParcel (Parcel source, ClassLoader loader)   Create a new instance of the Parcelable class, instantiating it from the given Parcel whose data had previously been written by Parcelable.writeToParcel () "," Create a new instance of the Parcelable class, instantiating it from the given Parcel whose data had previously been written by Parcelable.writeToParcel() and using the given ClassLoader. <br /><br />"
"android.os.Parcelable.Creator<T>.createFromParcel (Parcel source)   Create a new instance of the Parcelable class, instantiating it from the given Parcel whose data had previously been written by Parcelable.writeToParcel () "," Create a new instance of the Parcelable class, instantiating it from the given Parcel whose data had previously been written by Parcelable.writeToParcel(). <br /><br />"
"android.os.Parcelable.Creator<T>.newArray (int size) "," Create a new array of the Parcelable class. <br /><br />"
"android.os.Parcelable.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.os.Parcelable.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.os.ParcelFileDescriptor.AutoCloseInputStream.close () "," Closes this stream. <br /><br />"
"android.os.ParcelFileDescriptor.AutoCloseOutputStream.close () "," Closes this stream. <br /><br />"
"android.os.ParcelFileDescriptor.adoptFd (int fd) "," Take ownership of a raw native fd in to a new ParcelFileDescriptor. <br /><br />"
"android.os.ParcelFileDescriptor.dup (FileDescriptor orig) "," Create a new ParcelFileDescriptor that is a dup of an existing FileDescriptor. <br /><br />"
"android.os.ParcelFileDescriptor.open (File file, int mode, Handler handler, ParcelFileDescriptor.OnCloseListener listener) "," Create a new ParcelFileDescriptor accessing a given file. <br /><br />"
"android.os.ParcelFileDescriptor.close () "," Close the ParcelFileDescriptor. <br /><br />"
"android.os.ParcelFileDescriptor.fromSocket (Socket socket) "," Create a new ParcelFileDescriptor from the specified Socket. <br /><br />"
"android.os.ParcelFileDescriptor.open (File file, int mode) "," Create a new ParcelFileDescriptor accessing a given file. <br /><br />"
"android.os.ParcelFileDescriptor.fromFd (int fd) "," Create a new ParcelFileDescriptor from a raw native fd. <br /><br />"
"android.os.ParcelFileDescriptor.dup () "," Create a new ParcelFileDescriptor that is a dup of the existing FileDescriptor. <br /><br />"
"android.os.ParcelFileDescriptor.createReliableSocketPair () "," Create two ParcelFileDescriptors structured as a pair of sockets connected to each other. <br /><br />"
"android.os.ParcelFileDescriptor.createSocketPair () "," Create two ParcelFileDescriptors structured as a pair of sockets connected to each other. <br /><br />"
"android.os.ParcelFileDescriptor.getFd () "," Return the native fd int for this ParcelFileDescriptor. <br /><br />"
"android.os.ParcelFileDescriptor.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.os.ParcelFileDescriptor.getStatSize ()   Return the total size of the file representing this fd, as determined by stat () "," Return the total size of the file representing this fd, as determined by stat(). <br /><br />"
"android.os.ParcelFileDescriptor.getFileDescriptor () "," Retrieve the actual FileDescriptor associated with this object. <br /><br />"
"android.os.ParcelFileDescriptor.closeWithError (String msg) "," Close the ParcelFileDescriptor, informing any peer that an error occurred while processing. <br /><br />"
"android.os.ParcelFileDescriptor.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.os.ParcelFileDescriptor.checkError () "," Detect and throw if the other end of a pipe or socket pair encountered an error or crashed. <br /><br />"
"android.os.ParcelFileDescriptor.parseMode (String mode)   Converts a string representing a file mode, such as 'rw', into a bitmask suitable for use with open (File, int) "," Converts a string representing a file mode, such as 'rw', into a bitmask suitable for use with open(File, int). <br /><br />"
"android.os.ParcelFileDescriptor.createReliablePipe () "," Create two ParcelFileDescriptors structured as a data pipe. <br /><br />"
"android.os.ParcelFileDescriptor.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. If PARCELABLE_WRITE_RETURN_VALUE is set in flags, the file descriptor will be closed after a copy is written to the Parcel. <br /><br />"
"android.os.ParcelFileDescriptor.createPipe () "," Create two ParcelFileDescriptors structured as a data pipe. <br /><br />"
"android.os.ParcelFileDescriptor.detachFd () "," Return the native fd int for this ParcelFileDescriptor and detach it from the object here. <br /><br />"
"android.os.ParcelFileDescriptor.fromDatagramSocket (DatagramSocket datagramSocket) "," Create a new ParcelFileDescriptor from the specified DatagramSocket. <br /><br />"
"android.os.ParcelFileDescriptor.canDetectErrors () "," Indicates if this ParcelFileDescriptor can communicate and detect remote errors/crashes. <br /><br />"
"android.os.ParcelFileDescriptor.OnCloseListener.onClose (IOException e) "," Event indicating the ParcelFileDescriptor to which this listener was attached has been closed. <br /><br />"
"android.os.ParcelUuid.equals (Object object) "," Compares this ParcelUuid to another object for equality. <br /><br />"
"android.os.ParcelUuid.getUuid () "," Get the UUID represented by the ParcelUuid. <br /><br />"
"android.os.ParcelUuid.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.os.ParcelUuid.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.os.ParcelUuid.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.os.ParcelUuid.fromString (String uuid) "," Creates a new ParcelUuid from a string representation of UUID. <br /><br />"
"android.os.ParcelUuid.toString () "," Returns a string representation of the ParcelUuid For example: 0000110B-0000-1000-8000-00805F9B34FB will be the return value. <br /><br />"
"android.os.PatternMatcher.getType () "," no description <br /><br />"
"android.os.PatternMatcher.getPath () "," no description <br /><br />"
"android.os.PatternMatcher.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.os.PatternMatcher.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.os.PatternMatcher.match (String str) "," no description <br /><br />"
"android.os.PatternMatcher.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.os.PersistableBundle.getPersistableBundle (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.os.PersistableBundle.putPersistableBundle (String key, PersistableBundle value) "," Inserts a PersistableBundle value into the mapping of this Bundle, replacing any existing value for the given key. <br /><br />"
"android.os.PersistableBundle.writeToParcel (Parcel parcel, int flags) "," Writes the PersistableBundle contents to a Parcel, typically in order for it to be passed through an IBinder connection. <br /><br />"
"android.os.PersistableBundle.clone () "," Clones the current PersistableBundle. <br /><br />"
"android.os.PersistableBundle.describeContents () "," Report the nature of this Parcelable's contents <br /><br />"
"android.os.PersistableBundle.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.os.PowerManager.isScreenOn ()    This method was deprecated in API level 20. Use isInteractive () "," This method was deprecated in API level 20. Use isInteractive() instead. <br /><br />"
"android.os.PowerManager.newWakeLock (int levelAndFlags, String tag) "," Creates a new wake lock with the specified level and flags. <br /><br />"
"android.os.PowerManager.isInteractive () "," Returns true if the device is in an interactive state. <br /><br />"
"android.os.PowerManager.isWakeLockLevelSupported (int level) "," Returns true if the specified wake lock level is supported. <br /><br />"
"android.os.PowerManager.reboot (String reason) "," Reboot the device. <br /><br />"
"android.os.PowerManager.isPowerSaveMode () "," Returns true if the device is currently in power save mode. <br /><br />"
"android.os.PowerManager.WakeLock.setWorkSource (WorkSource ws) "," Sets the work source associated with the wake lock. <br /><br />"
"android.os.PowerManager.WakeLock.isHeld () "," Returns true if the wake lock has been acquired but not yet released. <br /><br />"
"android.os.PowerManager.WakeLock.acquire () "," Acquires the wake lock. <br /><br />"
"android.os.PowerManager.WakeLock.acquire (long timeout) "," Acquires the wake lock with a timeout. <br /><br />"
"android.os.PowerManager.WakeLock.release (int flags) "," Releases the wake lock with flags to modify the release behavior. <br /><br />"
"android.os.PowerManager.WakeLock.setReferenceCounted (boolean value) "," Sets whether this WakeLock is reference counted. <br /><br />"
"android.os.PowerManager.WakeLock.release () "," Releases the wake lock. <br /><br />"
"android.os.PowerManager.WakeLock.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.os.Process.getElapsedCpuTime () "," Returns elapsed milliseconds of the time this process has run. <br /><br />"
"android.os.Process.myPid ()   Returns the identifier of this process, which can be used with killProcess (int) and sendSignal (int, int) "," Returns the identifier of this process, which can be used with killProcess(int) and sendSignal(int, int). <br /><br />"
"android.os.Process.setThreadPriority (int priority) "," Set the priority of the calling thread, based on Linux priorities. <br /><br />"
"android.os.Process.getUidForName (String name) "," Returns the UID assigned to a particular user name, or -1 if there is none. <br /><br />"
"android.os.Process.setThreadPriority (int tid, int priority) "," Set the priority of a thread, based on Linux priorities. <br /><br />"
"android.os.Process.getGidForName (String name) "," Returns the GID assigned to a particular user name, or -1 if there is none. <br /><br />"
"android.os.Process.sendSignal (int pid, int signal) "," Send a signal to the given process. <br /><br />"
"android.os.Process.myUid () "," Returns the identifier of this process's uid. <br /><br />"
"android.os.Process.myUserHandle () "," Returns this process's user handle. <br /><br />"
"android.os.Process.supportsProcesses () "," This method was deprecated in API level 14. This method always returns true. Do not use. <br /><br />"
"android.os.Process.killProcess (int pid) "," Kill the process with the given PID. <br /><br />"
"android.os.Process.getThreadPriority (int tid) "," Return the current priority of a thread, based on Linux priorities. <br /><br />"
"android.os.Process.myTid ()   Returns the identifier of the calling thread, which be used with setThreadPriority (int, int) "," Returns the identifier of the calling thread, which be used with setThreadPriority(int, int). <br /><br />"
"android.os.RecoverySystem.installPackage (Context context, File packageFile) "," Reboots the device in order to install the given update package. <br /><br />"
"android.os.RecoverySystem.rebootWipeUserData (Context context) "," Reboots the device and wipes the user data and cache partitions. <br /><br />"
"android.os.RecoverySystem.rebootWipeCache (Context context) "," Reboot into the recovery system to wipe the /cache partition. <br /><br />"
"android.os.RecoverySystem.verifyPackage (File packageFile, RecoverySystem.ProgressListener listener, File deviceCertsZipFile) "," Verify the cryptographic signature of a system update package before installing it. <br /><br />"
"android.os.RecoverySystem.ProgressListener.onProgress (int progress) "," Called periodically as the verification progresses. <br /><br />"
"android.os.RemoteCallbackList<E extends android.os.IInterface>.finishBroadcast ()   Clean up the state of a broadcast previously initiated by calling beginBroadcast () "," Clean up the state of a broadcast previously initiated by calling beginBroadcast(). <br /><br />"
"android.os.RemoteCallbackList<E extends android.os.IInterface>.onCallbackDied (E callback)   Old version of onCallbackDied (E, Object) "," Old version of onCallbackDied(E, Object) that does not provide a cookie. <br /><br />"
"android.os.RemoteCallbackList<E extends android.os.IInterface>.register (E callback)   Simple version of register (E, Object) "," Simple version of register(E, Object) that does not take a cookie object. <br /><br />"
"android.os.RemoteCallbackList<E extends android.os.IInterface>.getBroadcastCookie (int index)   Retrieve the cookie associated with the item returned by getBroadcastItem (int) "," Retrieve the cookie associated with the item returned by getBroadcastItem(int). <br /><br />"
"android.os.RemoteCallbackList<E extends android.os.IInterface>.onCallbackDied (E callback, Object cookie) "," Called when the process hosting a callback in the list has gone away. <br /><br />"
"android.os.RemoteCallbackList<E extends android.os.IInterface>.register (E callback, Object cookie) "," Add a new callback to the list. <br /><br />"
"android.os.RemoteCallbackList<E extends android.os.IInterface>.beginBroadcast () "," Prepare to start making calls to the currently registered callbacks. <br /><br />"
"android.os.RemoteCallbackList<E extends android.os.IInterface>.getRegisteredCallbackCount () "," Returns the number of registered callbacks. <br /><br />"
"android.os.RemoteCallbackList<E extends android.os.IInterface>.kill () "," Disable this callback list. <br /><br />"
"android.os.RemoteCallbackList<E extends android.os.IInterface>.unregister (E callback)   Remove from the list a callback that was previously added with register (E) "," Remove from the list a callback that was previously added with register(E). <br /><br />"
"android.os.RemoteCallbackList<E extends android.os.IInterface>.getBroadcastItem (int index)   Retrieve an item in the active broadcast that was previously started with beginBroadcast () "," Retrieve an item in the active broadcast that was previously started with beginBroadcast(). <br /><br />"
"android.os.ResultReceiver.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.os.ResultReceiver.send (int resultCode, Bundle resultData) "," Deliver a result to this receiver. <br /><br />"
"android.os.ResultReceiver.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.os.StatFs.getFreeBytes ()   The number of bytes that are free on the file system, including reserved blocks  (that are not available to normal applications) "," The number of bytes that are free on the file system, including reserved blocks (that are not available to normal applications). <br /><br />"
"android.os.StatFs.getBlockCountLong () "," The total number of blocks on the file system. <br /><br />"
"android.os.StatFs.getAvailableBytes () "," The number of bytes that are free on the file system and available to applications. <br /><br />"
"android.os.StatFs.getBlockCount ()    This method was deprecated in API level 18. Use getBlockCountLong () "," This method was deprecated in API level 18. Use getBlockCountLong() instead. <br /><br />"
"android.os.StatFs.getBlockSizeLong () "," The size, in bytes, of a block on the file system. <br /><br />"
"android.os.StatFs.getBlockSize ()    This method was deprecated in API level 18. Use getBlockSizeLong () "," This method was deprecated in API level 18. Use getBlockSizeLong() instead. <br /><br />"
"android.os.StatFs.getFreeBlocks ()    This method was deprecated in API level 18. Use getFreeBlocksLong () "," This method was deprecated in API level 18. Use getFreeBlocksLong() instead. <br /><br />"
"android.os.StatFs.getFreeBlocksLong ()   The total number of blocks that are free on the file system, including reserved blocks  (that are not available to normal applications) "," The total number of blocks that are free on the file system, including reserved blocks (that are not available to normal applications). <br /><br />"
"android.os.StatFs.getTotalBytes () "," The total number of bytes supported by the file system. <br /><br />"
"android.os.StatFs.getAvailableBlocks ()    This method was deprecated in API level 18. Use getAvailableBlocksLong () "," This method was deprecated in API level 18. Use getAvailableBlocksLong() instead. <br /><br />"
"android.os.StatFs.restat (String path) "," Perform a restat of the file system referenced by this object. <br /><br />"
"android.os.StatFs.getAvailableBlocksLong () "," The number of blocks that are free on the file system and available to applications. <br /><br />"
"android.os.storage.OnObbStateChangeListener.onObbStateChange (String path, int state) "," Called when an OBB has changed states. <br /><br />"
"android.os.storage.StorageManager.mountObb (String rawPath, String key, OnObbStateChangeListener listener)   Mount an Opaque Binary Blob  (OBB) "," Mount an Opaque Binary Blob (OBB) file. <br /><br />"
"android.os.storage.StorageManager.isObbMounted (String rawPath)   Check whether an Opaque Binary Blob  (OBB) "," Check whether an Opaque Binary Blob (OBB) is mounted or not. <br /><br />"
"android.os.storage.StorageManager.unmountObb (String rawPath, boolean force, OnObbStateChangeListener listener)   Unmount an Opaque Binary Blob  (OBB) "," Unmount an Opaque Binary Blob (OBB) file asynchronously. <br /><br />"
"android.os.storage.StorageManager.getMountedObbPath (String rawPath)   Check the mounted path of an Opaque Binary Blob  (OBB) "," Check the mounted path of an Opaque Binary Blob (OBB) file. <br /><br />"
"android.os.StrictMode.ThreadPolicy.Builder.permitCustomSlowCalls () "," Disable detection of slow calls. <br /><br />"
"android.os.StrictMode.ThreadPolicy.Builder.detectNetwork () "," Enable detection of network operations. <br /><br />"
"android.os.StrictMode.ThreadPolicy.Builder.penaltyDialog () "," Show an annoying dialog to the developer on detected violations, rate-limited to be only a little annoying. <br /><br />"
"android.os.StrictMode.ThreadPolicy.Builder.penaltyDeath () "," Crash the whole process on violation. <br /><br />"
"android.os.StrictMode.ThreadPolicy.Builder.permitDiskReads () "," Disable detection of disk reads. <br /><br />"
"android.os.StrictMode.ThreadPolicy.Builder.build () "," Construct the ThreadPolicy instance. <br /><br />"
"android.os.StrictMode.ThreadPolicy.Builder.detectAll () "," Detect everything that's potentially suspect. <br /><br />"
"android.os.StrictMode.ThreadPolicy.Builder.permitNetwork () "," Disable detection of network operations. <br /><br />"
"android.os.StrictMode.ThreadPolicy.Builder.permitAll () "," Disable the detection of everything. <br /><br />"
"android.os.StrictMode.ThreadPolicy.Builder.permitDiskWrites () "," Disable detection of disk writes. <br /><br />"
"android.os.StrictMode.ThreadPolicy.Builder.penaltyDeathOnNetwork () "," Crash the whole process on any network usage. <br /><br />"
"android.os.StrictMode.ThreadPolicy.Builder.penaltyFlashScreen () "," Flash the screen during a violation. <br /><br />"
"android.os.StrictMode.ThreadPolicy.Builder.detectCustomSlowCalls () "," Enable detection of slow calls. <br /><br />"
"android.os.StrictMode.ThreadPolicy.Builder.detectDiskWrites () "," Enable detection of disk writes. <br /><br />"
"android.os.StrictMode.ThreadPolicy.Builder.detectDiskReads () "," Enable detection of disk reads. <br /><br />"
"android.os.StrictMode.ThreadPolicy.Builder.penaltyLog () "," Log detected violations to the system log. <br /><br />"
"android.os.StrictMode.ThreadPolicy.Builder.penaltyDropBox () "," Enable detected violations log a stacktrace and timing data to the DropBox on policy violation. <br /><br />"
"android.os.StrictMode.ThreadPolicy.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.os.StrictMode.VmPolicy.Builder.penaltyDeath () "," Crashes the whole process on violation. <br /><br />"
"android.os.StrictMode.VmPolicy.Builder.detectActivityLeaks () "," Detect leaks of Activity subclasses. <br /><br />"
"android.os.StrictMode.VmPolicy.Builder.detectLeakedSqlLiteObjects () "," Detect when an SQLiteCursor or other SQLite object is finalized without having been closed. <br /><br />"
"android.os.StrictMode.VmPolicy.Builder.setClassInstanceLimit (Class klass, int instanceLimit) "," Set an upper bound on how many instances of a class can be in memory at once. <br /><br />"
"android.os.StrictMode.VmPolicy.Builder.detectLeakedClosableObjects () "," Detect when an Closeable or other object with a explict termination method is finalized without having been closed. <br /><br />"
"android.os.StrictMode.VmPolicy.Builder.build () "," Construct the VmPolicy instance. <br /><br />"
"android.os.StrictMode.VmPolicy.Builder.penaltyLog () "," Log detected violations to the system log. <br /><br />"
"android.os.StrictMode.VmPolicy.Builder.detectLeakedRegistrationObjects () "," Detect when a BroadcastReceiver or ServiceConnection is leaked during Context teardown. <br /><br />"
"android.os.StrictMode.VmPolicy.Builder.detectAll () "," Detect everything that's potentially suspect. <br /><br />"
"android.os.StrictMode.VmPolicy.Builder.detectFileUriExposure () "," Detect when a file:// Uri is exposed beyond this app. <br /><br />"
"android.os.StrictMode.VmPolicy.Builder.penaltyDropBox () "," Enable detected violations log a stacktrace and timing data to the DropBox on policy violation. <br /><br />"
"android.os.StrictMode.VmPolicy.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.os.SystemClock.elapsedRealtimeNanos () "," Returns nanoseconds since boot, including time spent in sleep. <br /><br />"
"android.os.SystemClock.currentThreadTimeMillis () "," Returns milliseconds running in the current thread. <br /><br />"
"android.os.SystemClock.uptimeMillis () "," Returns milliseconds since boot, not counting time spent in deep sleep. <br /><br />"
"android.os.SystemClock.setCurrentTimeMillis (long millis) "," Sets the current wall time, in milliseconds. <br /><br />"
"android.os.SystemClock.elapsedRealtime () "," Returns milliseconds since boot, including time spent in sleep. <br /><br />"
"android.os.SystemClock.sleep (long ms)   Waits a given number of milliseconds  (of uptimeMillis) "," Waits a given number of milliseconds (of uptimeMillis) before returning. <br /><br />"
"android.os.TokenWatcher.dump () "," no description <br /><br />"
"android.os.TokenWatcher.acquire (IBinder token, String tag) "," Record that this token has been acquired. <br /><br />"
"android.os.TokenWatcher.acquired () "," Called when the number of active tokens goes from 0 to 1. <br /><br />"
"android.os.TokenWatcher.released () "," Called when the number of active tokens goes from 1 to 0. <br /><br />"
"android.os.TokenWatcher.dump (PrintWriter pw) "," no description <br /><br />"
"android.os.TokenWatcher.release (IBinder token) "," no description <br /><br />"
"android.os.TokenWatcher.cleanup (IBinder token, boolean unlink) "," no description <br /><br />"
"android.os.TokenWatcher.isAcquired () "," no description <br /><br />"
"android.os.Trace.beginSection (String sectionName) "," Writes a trace message to indicate that a given section of code has begun. <br /><br />"
"android.os.Trace.endSection () "," Writes a trace message to indicate that a given section of code has ended. <br /><br />"
"android.os.UserHandle.readFromParcel (Parcel in)   Read a UserHandle from a Parcel that was previously written with writeToParcel (UserHandle, Parcel) "," Read a UserHandle from a Parcel that was previously written with writeToParcel(UserHandle, Parcel), returning either a null or new object as appropriate. <br /><br />"
"android.os.UserHandle.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.os.UserHandle.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.os.UserHandle.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.os.UserHandle.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.os.UserHandle.writeToParcel (UserHandle h, Parcel out) "," Write a UserHandle to a Parcel, handling null pointers. <br /><br />"
"android.os.UserHandle.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.os.UserManager.getSerialNumberForUser (UserHandle user) "," Return the serial number for a user. <br /><br />"
"android.os.UserManager.setUserRestrictions (Bundle restrictions)    This method was deprecated in API level 21. use addUserRestriction (android.content.ComponentName, String) or clearUserRestriction (android.content.ComponentName, String) "," This method was deprecated in API level 21. use addUserRestriction(android.content.ComponentName, String) or clearUserRestriction(android.content.ComponentName, String) instead. <br /><br />"
"android.os.UserManager.getUserCount () "," Return the number of users currently created on the device. <br /><br />"
"android.os.UserManager.getUserRestrictions () "," Returns the user-wide restrictions imposed on this user. <br /><br />"
"android.os.UserManager.getApplicationRestrictions (String packageName) "," Returns a Bundle containing any saved application restrictions for this user, for the given package name. <br /><br />"
"android.os.UserManager.getUserRestrictions (UserHandle userHandle) "," Returns the user-wide restrictions imposed on the user specified by userHandle. <br /><br />"
"android.os.UserManager.setUserRestrictions (Bundle restrictions, UserHandle userHandle)    This method was deprecated in API level 21. use addUserRestriction (android.content.ComponentName, String) or clearUserRestriction (android.content.ComponentName, String) "," This method was deprecated in API level 21. use addUserRestriction(android.content.ComponentName, String) or clearUserRestriction(android.content.ComponentName, String) instead. <br /><br />"
"android.os.UserManager.setRestrictionsChallenge (String newPin) "," Sets a new challenge PIN for restrictions. <br /><br />"
"android.os.UserManager.isUserRunningOrStopping (UserHandle user) "," Return whether the given user is actively running or stopping. <br /><br />"
"android.os.UserManager.setUserRestriction (String key, boolean value)    This method was deprecated in API level 21. use addUserRestriction (android.content.ComponentName, String) or clearUserRestriction (android.content.ComponentName, String) "," This method was deprecated in API level 21. use addUserRestriction(android.content.ComponentName, String) or clearUserRestriction(android.content.ComponentName, String) instead. <br /><br />"
"android.os.UserManager.getUserForSerialNumber (long serialNumber)   Return the user associated with a serial number previously returned by getSerialNumberForUser (UserHandle) "," Return the user associated with a serial number previously returned by getSerialNumberForUser(UserHandle). <br /><br />"
"android.os.UserManager.isUserRunning (UserHandle user) "," Return whether the given user is actively running. <br /><br />"
"android.os.UserManager.getUserName () "," Returns the user name of the user making this call. <br /><br />"
"android.os.UserManager.isUserAGoat () "," Used to determine whether the user making this call is subject to teleportations. <br /><br />"
"android.os.UserManager.getUserProfiles () "," Returns a list of UserHandles for profiles associated with the user that the calling process is running on, including the user itself. <br /><br />"
"android.os.UserManager.hasUserRestriction (String restrictionKey) "," Returns whether the current user has been disallowed from performing certain actions or setting certain settings. <br /><br />"
"android.os.Vibrator.vibrate (long milliseconds) "," Vibrate constantly for the specified period of time. <br /><br />"
"android.os.Vibrator.hasVibrator () "," Check whether the hardware has a vibrator. <br /><br />"
"android.os.Vibrator.vibrate (long milliseconds, AudioAttributes attributes) "," Vibrate constantly for the specified period of time. <br /><br />"
"android.os.Vibrator.vibrate (long[] pattern, int repeat) "," Vibrate with a given pattern. <br /><br />"
"android.os.Vibrator.vibrate (long[] pattern, int repeat, AudioAttributes attributes) "," Vibrate with a given pattern. <br /><br />"
"android.os.Vibrator.cancel () "," Turn the vibrator off. <br /><br />"
"android.os.WorkSource.set (WorkSource other) "," Replace the current contents of this work source with the given work source. <br /><br />"
"android.os.WorkSource.add (WorkSource other) "," Merge the contents of other WorkSource in to this one. <br /><br />"
"android.os.WorkSource.clear () "," Clear this WorkSource to be empty. <br /><br />"
"android.os.WorkSource.diff (WorkSource other) "," Compare this WorkSource with another. <br /><br />"
"android.os.WorkSource.remove (WorkSource other) "," no description <br /><br />"
"android.os.WorkSource.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.os.WorkSource.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.os.WorkSource.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.os.WorkSource.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.os.WorkSource.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.preference.DialogPreference.getDialogLayoutResource () "," Returns the layout resource that is used as the content View for subsequent dialogs. <br /><br />"
"android.preference.DialogPreference.getPositiveButtonText () "," Returns the text of the positive button to be shown on subsequent dialogs. <br /><br />"
"android.preference.DialogPreference.onClick (DialogInterface dialog, int which) "," This method will be invoked when a button in the dialog is clicked. <br /><br />"
"android.preference.DialogPreference.getDialogIcon () "," Returns the icon to be shown on subsequent dialogs. <br /><br />"
"android.preference.DialogPreference.getDialogMessage () "," Returns the message to be shown on subsequent dialogs. <br /><br />"
"android.preference.DialogPreference.setDialogTitle (CharSequence dialogTitle) "," Sets the title of the dialog. <br /><br />"
"android.preference.DialogPreference.setDialogLayoutResource (int dialogLayoutResId) "," Sets the layout resource that is inflated as the View to be shown as the content View of subsequent dialogs. <br /><br />"
"android.preference.DialogPreference.setPositiveButtonText (CharSequence positiveButtonText) "," Sets the text of the positive button of the dialog. <br /><br />"
"android.preference.DialogPreference.setNegativeButtonText (int negativeButtonTextResId) "," no description <br /><br />"
"android.preference.DialogPreference.setDialogIcon (Drawable dialogIcon) "," Sets the icon of the dialog. <br /><br />"
"android.preference.DialogPreference.setNegativeButtonText (CharSequence negativeButtonText) "," Sets the text of the negative button of the dialog. <br /><br />"
"android.preference.DialogPreference.getNegativeButtonText () "," Returns the text of the negative button to be shown on subsequent dialogs. <br /><br />"
"android.preference.DialogPreference.setDialogIcon (int dialogIconRes)   Sets the icon  (resource ID) "," Sets the icon (resource ID) of the dialog. <br /><br />"
"android.preference.DialogPreference.setPositiveButtonText (int positiveButtonTextResId) "," no description <br /><br />"
"android.preference.DialogPreference.setDialogTitle (int dialogTitleResId) "," no description <br /><br />"
"android.preference.DialogPreference.getDialogTitle () "," Returns the title to be shown on subsequent dialogs. <br /><br />"
"android.preference.DialogPreference.onDismiss (DialogInterface dialog) "," This method will be invoked when the dialog is dismissed. <br /><br />"
"android.preference.DialogPreference.getDialog () "," Gets the dialog that is shown by this preference. <br /><br />"
"android.preference.DialogPreference.onActivityDestroy () "," See Activity's onDestroy. <br /><br />"
"android.preference.DialogPreference.setDialogMessage (CharSequence dialogMessage) "," Sets the message of the dialog. <br /><br />"
"android.preference.DialogPreference.setDialogMessage (int dialogMessageResId) "," no description <br /><br />"
"android.preference.EditTextPreference.setText (String text) "," Saves the text to the SharedPreferences. <br /><br />"
"android.preference.EditTextPreference.getEditText () "," Returns the EditText widget that will be shown in the dialog. <br /><br />"
"android.preference.EditTextPreference.getText () "," Gets the text from the SharedPreferences. <br /><br />"
"android.preference.EditTextPreference.shouldDisableDependents () "," Checks whether this preference's dependents should currently be disabled. <br /><br />"
"android.preference.ListPreference.setValue (String value) "," Sets the value of the key. <br /><br />"
"android.preference.ListPreference.setEntries (int entriesResId) "," no description <br /><br />"
"android.preference.ListPreference.setEntryValues (CharSequence[] entryValues) "," The array to find the value to save for a preference when an entry from entries is selected. <br /><br />"
"android.preference.ListPreference.getEntryValues () "," Returns the array of values to be saved for the preference. <br /><br />"
"android.preference.ListPreference.getValue () "," Returns the value of the key. <br /><br />"
"android.preference.ListPreference.setEntryValues (int entryValuesResId) "," no description <br /><br />"
"android.preference.ListPreference.setValueIndex (int index) "," Sets the value to the given index from the entry values. <br /><br />"
"android.preference.ListPreference.setSummary (CharSequence summary) "," Sets the summary for this Preference with a CharSequence. <br /><br />"
"android.preference.ListPreference.findIndexOfValue (String value)   Returns the index of the given value  (in the entry values array) "," Returns the index of the given value (in the entry values array). <br /><br />"
"android.preference.ListPreference.getEntries () "," The list of entries to be shown in the list in subsequent dialogs. <br /><br />"
"android.preference.ListPreference.getSummary () "," Returns the summary of this ListPreference. <br /><br />"
"android.preference.ListPreference.getEntry () "," Returns the entry corresponding to the current value. <br /><br />"
"android.preference.ListPreference.setEntries (CharSequence[] entries) "," Sets the human-readable entries to be shown in the list. <br /><br />"
"android.preference.MultiSelectListPreference.getEntryValues () "," Returns the array of values to be saved for the preference. <br /><br />"
"android.preference.MultiSelectListPreference.setEntryValues (int entryValuesResId) "," no description <br /><br />"
"android.preference.MultiSelectListPreference.getEntries () "," The list of entries to be shown in the list in subsequent dialogs. <br /><br />"
"android.preference.MultiSelectListPreference.findIndexOfValue (String value)   Returns the index of the given value  (in the entry values array) "," Returns the index of the given value (in the entry values array). <br /><br />"
"android.preference.MultiSelectListPreference.setValues (Set< String> values) "," Sets the value of the key. <br /><br />"
"android.preference.MultiSelectListPreference.setEntries (int entriesResId) "," no description <br /><br />"
"android.preference.MultiSelectListPreference.setEntryValues (CharSequence[] entryValues) "," The array to find the value to save for a preference when an entry from entries is selected. <br /><br />"
"android.preference.MultiSelectListPreference.getValues () "," Retrieves the current value of the key. <br /><br />"
"android.preference.MultiSelectListPreference.setEntries (CharSequence[] entries) "," Sets the human-readable entries to be shown in the list. <br /><br />"
"android.preference.Preference.getIntent () "," Return the Intent associated with this Preference. <br /><br />"
"android.preference.Preference.restoreHierarchyState (Bundle container) "," Restore this Preference hierarchy's previously saved state from the given container. <br /><br />"
"android.preference.Preference.notifyDependencyChange (boolean disableDependents) "," Notifies any listening dependents of a change that affects the dependency. <br /><br />"
"android.preference.Preference.onParentChanged (Preference parent, boolean disableChild) "," Called when the implicit parent dependency changes. <br /><br />"
"android.preference.Preference.setIcon (Drawable icon) "," Sets the icon for this Preference with a Drawable. <br /><br />"
"android.preference.Preference.shouldDisableDependents () "," Checks whether this preference's dependents should currently be disabled. <br /><br />"
"android.preference.Preference.setOnPreferenceChangeListener (Preference.OnPreferenceChangeListener onPreferenceChangeListener)   Sets the callback to be invoked when this Preference is changed by the user  (but before the internal state has been updated) "," Sets the callback to be invoked when this Preference is changed by the user (but before the internal state has been updated). <br /><br />"
"android.preference.Preference.getFragment () "," Return the fragment class name associated with this Preference. <br /><br />"
"android.preference.Preference.getOnPreferenceClickListener () "," Returns the callback to be invoked when this Preference is clicked. <br /><br />"
"android.preference.Preference.setEnabled (boolean enabled) "," Sets whether this Preference is enabled. <br /><br />"
"android.preference.Preference.setShouldDisableView (boolean shouldDisableView) "," Sets whether this Preference should disable its view when it gets disabled. <br /><br />"
"android.preference.Preference.getTitle () "," Returns the title of this Preference. <br /><br />"
"android.preference.Preference.getContext () "," Returns the Context of this Preference. <br /><br />"
"android.preference.Preference.peekExtras () "," Return the extras Bundle object associated with this preference, returning null if there is not currently one. <br /><br />"
"android.preference.Preference.isPersistent () "," Checks whether this Preference is persistent. <br /><br />"
"android.preference.Preference.setSummary (int summaryResId) "," Sets the summary for this Preference with a resource ID. <br /><br />"
"android.preference.Preference.setKey (String key) "," Sets the key for this Preference, which is used as a key to the SharedPreferences. <br /><br />"
"android.preference.Preference.setOnPreferenceClickListener (Preference.OnPreferenceClickListener onPreferenceClickListener) "," Sets the callback to be invoked when this Preference is clicked. <br /><br />"
"android.preference.Preference.setSelectable (boolean selectable) "," Sets whether this Preference is selectable. <br /><br />"
"android.preference.Preference.setLayoutResource (int layoutResId) "," Sets the layout resource that is inflated as the View to be shown for this Preference. <br /><br />"
"android.preference.Preference.onDependencyChanged (Preference dependency, boolean disableDependent) "," Called when the dependency changes. <br /><br />"
"android.preference.Preference.getSharedPreferences ()   Returns the SharedPreferences where this Preference can read its value (s) "," Returns the SharedPreferences where this Preference can read its value(s). <br /><br />"
"android.preference.Preference.getExtras () "," Return the extras Bundle object associated with this preference, creating a new Bundle if there currently isn't one. <br /><br />"
"android.preference.Preference.getTitleRes () "," Returns the title resource ID of this Preference. <br /><br />"
"android.preference.Preference.getLayoutResource () "," Gets the layout resource that will be shown as the View for this Preference. <br /><br />"
"android.preference.Preference.setTitle (int titleResId) "," Sets the title for this Preference with a resource ID. <br /><br />"
"android.preference.Preference.setDefaultValue (Object defaultValue) "," Sets the default value for this Preference, which will be set either if persistence is off or persistence is on and the preference is not found in the persistent storage. <br /><br />"
"android.preference.Preference.setDependency (String dependencyKey) "," Sets the key of a Preference that this Preference will depend on. <br /><br />"
"android.preference.Preference.getWidgetLayoutResource () "," Gets the layout resource for the controllable widget portion of this Preference. <br /><br />"
"android.preference.Preference.hasKey () "," Checks whether this Preference has a valid key. <br /><br />"
"android.preference.Preference.setOrder (int order) "," Sets the order of this Preference with respect to other Preference objects on the same level. <br /><br />"
"android.preference.Preference.setWidgetLayoutResource (int widgetLayoutResId) "," Sets the layout for the controllable widget portion of this Preference. <br /><br />"
"android.preference.Preference.getEditor ()   Returns an SharedPreferences.Editor where this Preference can save its value (s) "," Returns an SharedPreferences.Editor where this Preference can save its value(s). <br /><br />"
"android.preference.Preference.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.preference.Preference.shouldCommit ()   Returns whether the Preference should commit its saved value (s) in getEditor () "," Returns whether the Preference should commit its saved value(s) in getEditor(). <br /><br />"
"android.preference.Preference.setPersistent (boolean persistent) "," Sets whether this Preference is persistent. <br /><br />"
"android.preference.Preference.getIcon () "," Returns the icon of this Preference. <br /><br />"
"android.preference.Preference.isSelectable () "," Checks whether this Preference should be selectable in the list. <br /><br />"
"android.preference.Preference.getView (View convertView, ViewGroup parent) "," Gets the View that will be shown in the PreferenceActivity. <br /><br />"
"android.preference.Preference.getKey () "," Gets the key for this Preference, which is also the key used for storing values into SharedPreferences. <br /><br />"
"android.preference.Preference.getOnPreferenceChangeListener ()   Returns the callback to be invoked when this Preference is changed by the user  (but before the internal state has been updated) "," Returns the callback to be invoked when this Preference is changed by the user (but before the internal state has been updated). <br /><br />"
"android.preference.Preference.setFragment (String fragment) "," Sets the class name of a fragment to be shown when this Preference is clicked. <br /><br />"
"android.preference.Preference.getDependency () "," Returns the key of the dependency on this Preference. <br /><br />"
"android.preference.Preference.setIntent (Intent intent)   Sets an Intent to be used for startActivity (Intent) "," Sets an Intent to be used for startActivity(Intent) when this Preference is clicked. <br /><br />"
"android.preference.Preference.isEnabled () "," Checks whether this Preference should be enabled in the list. <br /><br />"
"android.preference.Preference.getPreferenceManager () "," Gets the PreferenceManager that manages this Preference object's tree. <br /><br />"
"android.preference.Preference.setSummary (CharSequence summary) "," Sets the summary for this Preference with a CharSequence. <br /><br />"
"android.preference.Preference.saveHierarchyState (Bundle container) "," Store this Preference hierarchy's frozen state into the given container. <br /><br />"
"android.preference.Preference.setIcon (int iconResId) "," Sets the icon for this Preference with a resource ID. <br /><br />"
"android.preference.Preference.getSummary () "," Returns the summary of this Preference. <br /><br />"
"android.preference.Preference.getShouldDisableView () "," Checks whether this Preference should disable its view when it's action is disabled. <br /><br />"
"android.preference.Preference.getOrder () "," Gets the order of this Preference with respect to other Preference objects on the same level. <br /><br />"
"android.preference.Preference.setTitle (CharSequence title) "," Sets the title for this Preference with a CharSequence. <br /><br />"
"android.preference.Preference.compareTo (Preference another)   Compares Preference objects based on order  (if set) "," Compares Preference objects based on order (if set), otherwise alphabetically on the titles. <br /><br />"
"android.preference.Preference.OnPreferenceChangeListener.onPreferenceChange (Preference preference, Object newValue) "," Called when a Preference has been changed by the user. <br /><br />"
"android.preference.Preference.OnPreferenceClickListener.onPreferenceClick (Preference preference) "," Called when a Preference has been clicked. <br /><br />"
"android.preference.PreferenceActivity.Header.getTitle (Resources res) "," Return the currently set title. <br /><br />"
"android.preference.PreferenceActivity.Header.getBreadCrumbTitle (Resources res) "," Return the currently set bread crumb title. <br /><br />"
"android.preference.PreferenceActivity.Header.getSummary (Resources res) "," Return the currently set summary. <br /><br />"
"android.preference.PreferenceActivity.Header.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.preference.PreferenceActivity.Header.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.preference.PreferenceActivity.Header.getBreadCrumbShortTitle (Resources res) "," Return the currently set bread crumb short title. <br /><br />"
"android.preference.PreferenceActivity.Header.readFromParcel (Parcel in) "," no description <br /><br />"
"android.preference.PreferenceActivity.addPreferencesFromIntent (Intent intent) "," This method was deprecated in API level 11. This function is not relevant for a modern fragment-based PreferenceActivity. <br /><br />"
"android.preference.PreferenceActivity.onGetNewHeader ()   Called after the header list has been updated  (onBuildHeaders (List  )  has been called and returned due to invalidateHeaders ()) "," Called after the header list has been updated ( onBuildHeaders(List  )  has been called and returned due to invalidateHeaders()) to specify the header that should now be selected. <br /><br />"
"android.preference.PreferenceActivity.onIsMultiPane () "," Called to determine if the activity should run in multi-pane mode. <br /><br />"
"android.preference.PreferenceActivity.onBuildHeaders (List< PreferenceActivity.Header> target) "," Called when the activity needs its list of headers build. <br /><br />"
"android.preference.PreferenceActivity.finishPreferencePanel (Fragment caller, int resultCode, Intent resultData) "," Called by a preference panel fragment to finish itself. <br /><br />"
"android.preference.PreferenceActivity.startPreferenceFragment (Fragment fragment, boolean push) "," Start a new fragment. <br /><br />"
"android.preference.PreferenceActivity.hasHeaders () "," Returns true if this activity is currently showing the header list. <br /><br />"
"android.preference.PreferenceActivity.setListFooter (View view) "," Set a footer that should be shown at the bottom of the header list. <br /><br />"
"android.preference.PreferenceActivity.showBreadCrumbs (CharSequence title, CharSequence shortTitle) "," Change the base title of the bread crumbs for the current preferences. <br /><br />"
"android.preference.PreferenceActivity.switchToHeader (PreferenceActivity.Header header) "," When in two-pane mode, switch to the fragment pane to show the given preference fragment. <br /><br />"
"android.preference.PreferenceActivity.onIsHidingHeaders () "," Called to determine whether the header list should be hidden. <br /><br />"
"android.preference.PreferenceActivity.loadHeadersFromResource (int resid, List< PreferenceActivity.Header> target) "," Parse the given XML file as a header description, adding each parsed Header into the target list. <br /><br />"
"android.preference.PreferenceActivity.startPreferencePanel (String fragmentClass, Bundle args, int titleRes, CharSequence titleText, Fragment resultTo, int resultRequestCode) "," Start a new fragment containing a preference panel. <br /><br />"
"android.preference.PreferenceActivity.onGetInitialHeader () "," Called to determine the initial header to be shown. <br /><br />"
"android.preference.PreferenceActivity.switchToHeader (String fragmentName, Bundle args) "," When in two-pane mode, switch the fragment pane to show the given preference fragment. <br /><br />"
"android.preference.PreferenceActivity.startWithFragment (String fragmentName, Bundle args, Fragment resultTo, int resultRequestCode, int titleRes, int shortTitleRes) "," Start a new instance of this activity, showing only the given preference fragment. <br /><br />"
"android.preference.PreferenceActivity.addPreferencesFromResource (int preferencesResId) "," This method was deprecated in API level 11. This function is not relevant for a modern fragment-based PreferenceActivity. <br /><br />"
"android.preference.PreferenceActivity.onBuildStartFragmentIntent (String fragmentName, Bundle args, int titleRes, int shortTitleRes)   Called by startWithFragment (String, Bundle, Fragment, int, int, int) "," Called by startWithFragment(String, Bundle, Fragment, int, int, int) when in single-pane mode, to build an Intent to launch a new activity showing the selected fragment. <br /><br />"
"android.preference.PreferenceActivity.onPreferenceStartFragment (PreferenceFragment caller, Preference pref) "," Called when the user has clicked on a Preference that has a fragment class name associated with it. <br /><br />"
"android.preference.PreferenceActivity.setPreferenceScreen (PreferenceScreen preferenceScreen) "," This method was deprecated in API level 11. This function is not relevant for a modern fragment-based PreferenceActivity. <br /><br />"
"android.preference.PreferenceActivity.findPreference (CharSequence key) "," This method was deprecated in API level 11. This function is not relevant for a modern fragment-based PreferenceActivity. <br /><br />"
"android.preference.PreferenceActivity.startWithFragment (String fragmentName, Bundle args, Fragment resultTo, int resultRequestCode)   Like startWithFragment (String, Bundle, Fragment, int, int, int) "," Like startWithFragment(String, Bundle, Fragment, int, int, int) but uses a 0 titleRes. <br /><br />"
"android.preference.PreferenceActivity.getPreferenceScreen () "," This method was deprecated in API level 11. This function is not relevant for a modern fragment-based PreferenceActivity. <br /><br />"
"android.preference.PreferenceActivity.getPreferenceManager () "," This method was deprecated in API level 11. This function is not relevant for a modern fragment-based PreferenceActivity. <br /><br />"
"android.preference.PreferenceActivity.setParentTitle (CharSequence title, CharSequence shortTitle, View.OnClickListener listener) "," Should be called after onCreate to ensure that the breadcrumbs, if any, were created. <br /><br />"
"android.preference.PreferenceActivity.onPreferenceTreeClick (PreferenceScreen preferenceScreen, Preference preference) "," This method was deprecated in API level 11. This function is not relevant for a modern fragment-based PreferenceActivity. <br /><br />"
"android.preference.PreferenceActivity.invalidateHeaders () "," Call when you need to change the headers being displayed. <br /><br />"
"android.preference.PreferenceActivity.onHeaderClick (PreferenceActivity.Header header, int position) "," Called when the user selects an item in the header list. <br /><br />"
"android.preference.PreferenceActivity.isMultiPane () "," Returns true if this activity is showing multiple panes -- the headers and a preference fragment. <br /><br />"
"android.preference.PreferenceActivity.onContentChanged ()   Updates the screen state  (current list and other views) "," Updates the screen state (current list and other views) when the content changes. <br /><br />"
"android.preference.PreferenceCategory.isEnabled () "," Checks whether this Preference should be enabled in the list. <br /><br />"
"android.preference.PreferenceCategory.shouldDisableDependents () "," Checks whether this preference's dependents should currently be disabled. <br /><br />"
"android.preference.PreferenceFragment.addPreferencesFromIntent (Intent intent) "," Adds preferences from activities that match the given Intent. <br /><br />"
"android.preference.PreferenceFragment.onActivityCreated (Bundle savedInstanceState) "," Called when the fragment's activity has been created and this fragment's view hierarchy instantiated. <br /><br />"
"android.preference.PreferenceFragment.onActivityResult (int requestCode, int resultCode, Intent data)   Receive the result from a previous call to startActivityForResult (Intent, int) "," Receive the result from a previous call to startActivityForResult(Intent, int). <br /><br />"
"android.preference.PreferenceFragment.onSaveInstanceState (Bundle outState) "," Called to ask the fragment to save its current dynamic state, so it can later be reconstructed in a new instance of its process is restarted. <br /><br />"
"android.preference.PreferenceFragment.addPreferencesFromResource (int preferencesResId) "," Inflates the given XML resource and adds the preference hierarchy to the current preference hierarchy. <br /><br />"
"android.preference.PreferenceFragment.setPreferenceScreen (PreferenceScreen preferenceScreen) "," Sets the root of the preference hierarchy that this fragment is showing. <br /><br />"
"android.preference.PreferenceFragment.onStart () "," Called when the Fragment is visible to the user. <br /><br />"
"android.preference.PreferenceFragment.onStop () "," Called when the Fragment is no longer started. <br /><br />"
"android.preference.PreferenceFragment.findPreference (CharSequence key) "," Finds a Preference based on its key. <br /><br />"
"android.preference.PreferenceFragment.onCreate (Bundle savedInstanceState) "," Called to do initial creation of a fragment. <br /><br />"
"android.preference.PreferenceFragment.getPreferenceManager () "," Returns the PreferenceManager used by this fragment. <br /><br />"
"android.preference.PreferenceFragment.getPreferenceScreen () "," Gets the root of the preference hierarchy that this fragment is showing. <br /><br />"
"android.preference.PreferenceFragment.onDestroyView ()   Called when the view previously created by onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called when the view previously created by onCreateView(LayoutInflater, ViewGroup, Bundle) has been detached from the fragment. <br /><br />"
"android.preference.PreferenceFragment.onPreferenceTreeClick (PreferenceScreen preferenceScreen, Preference preference) ","  <br /><br />"
"android.preference.PreferenceFragment.onDestroy () "," Called when the fragment is no longer in use. <br /><br />"
"android.preference.PreferenceFragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Called to have the fragment instantiate its user interface view. <br /><br />"
"android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback.onPreferenceStartFragment (PreferenceFragment caller, Preference pref) "," Called when the user has clicked on a Preference that has a fragment class name associated with it. <br /><br />"
"android.preference.PreferenceGroup.findPreference (CharSequence key) "," Finds a Preference based on its key. <br /><br />"
"android.preference.PreferenceGroup.getPreferenceCount () "," Returns the number of children Preferences. <br /><br />"
"android.preference.PreferenceGroup.removeAll () "," Removes all Preferences from this group. <br /><br />"
"android.preference.PreferenceGroup.setOrderingAsAdded (boolean orderingAsAdded) "," Whether to order the Preference children of this group as they are added. <br /><br />"
"android.preference.PreferenceGroup.notifyDependencyChange (boolean disableDependents) "," Notifies any listening dependents of a change that affects the dependency. <br /><br />"
"android.preference.PreferenceGroup.getPreference (int index) "," Returns the Preference at a particular index. <br /><br />"
"android.preference.PreferenceGroup.removePreference (Preference preference) "," Removes a Preference from this group. <br /><br />"
"android.preference.PreferenceGroup.addPreference (Preference preference) "," Adds a Preference at the correct position based on the preference's order. <br /><br />"
"android.preference.PreferenceGroup.addItemFromInflater (Preference preference) "," Called by the inflater to add an item to this group. <br /><br />"
"android.preference.PreferenceGroup.isOrderingAsAdded () "," Whether this group is ordering preferences in the order they are added. <br /><br />"
"android.preference.PreferenceManager.setSharedPreferencesName (String sharedPreferencesName) "," Sets the name of the SharedPreferences file that preferences managed by this will use. <br /><br />"
"android.preference.PreferenceManager.findPreference (CharSequence key) "," Finds a Preference based on its key. <br /><br />"
"android.preference.PreferenceManager.getSharedPreferences () "," Gets a SharedPreferences instance that preferences managed by this will use. <br /><br />"
"android.preference.PreferenceManager.getSharedPreferencesMode () "," Returns the current mode of the SharedPreferences file that preferences managed by this will use. <br /><br />"
"android.preference.PreferenceManager.setSharedPreferencesMode (int sharedPreferencesMode) "," Sets the mode of the SharedPreferences file that preferences managed by this will use. <br /><br />"
"android.preference.PreferenceManager.getDefaultSharedPreferences (Context context) "," Gets a SharedPreferences instance that points to the default file that is used by the preference framework in the given context. <br /><br />"
"android.preference.PreferenceManager.setDefaultValues (Context context, String sharedPreferencesName, int sharedPreferencesMode, int resId, boolean readAgain)   Similar to setDefaultValues (Context, int, boolean) "," Similar to setDefaultValues(Context, int, boolean) but allows the client to provide the filename and mode of the shared preferences file. <br /><br />"
"android.preference.PreferenceManager.getSharedPreferencesName () "," Returns the current name of the SharedPreferences file that preferences managed by this will use. <br /><br />"
"android.preference.PreferenceManager.createPreferenceScreen (Context context) "," no description <br /><br />"
"android.preference.PreferenceManager.setDefaultValues (Context context, int resId, boolean readAgain) "," Sets the default values from an XML preference file by reading the values defined by each Preference item's android:defaultValue attribute. <br /><br />"
"android.preference.PreferenceManager.OnActivityDestroyListener.onActivityDestroy () "," See Activity's onDestroy. <br /><br />"
"android.preference.PreferenceManager.OnActivityResultListener.onActivityResult (int requestCode, int resultCode, Intent data) "," See Activity's onActivityResult. <br /><br />"
"android.preference.PreferenceManager.OnActivityStopListener.onActivityStop () "," See Activity's onStop. <br /><br />"
"android.preference.PreferenceScreen.onDismiss (DialogInterface dialog) "," This method will be invoked when the dialog is dismissed. <br /><br />"
"android.preference.PreferenceScreen.getRootAdapter () "," Returns an adapter that can be attached to a PreferenceActivity or PreferenceFragment to show the preferences contained in this PreferenceScreen. <br /><br />"
"android.preference.PreferenceScreen.bind (ListView listView)   Binds a ListView to the preferences contained in this PreferenceScreen via getRootAdapter () "," Binds a ListView to the preferences contained in this PreferenceScreen via getRootAdapter(). <br /><br />"
"android.preference.PreferenceScreen.getDialog () "," Used to get a handle to the dialog. <br /><br />"
"android.preference.PreferenceScreen.onItemClick (AdapterView parent, View view, int position, long id) "," no description <br /><br />"
"android.preference.RingtonePreference.getRingtoneType ()   Returns the sound type (s) "," Returns the sound type(s) that are shown in the picker. <br /><br />"
"android.preference.RingtonePreference.setRingtoneType (int type)   Sets the sound type (s) "," Sets the sound type(s) that are shown in the picker. <br /><br />"
"android.preference.RingtonePreference.getShowDefault () "," Returns whether to a show an item for the default sound/ringtone. <br /><br />"
"android.preference.RingtonePreference.setShowSilent (boolean showSilent) "," Sets whether to show an item for 'Silent'. <br /><br />"
"android.preference.RingtonePreference.setShowDefault (boolean showDefault) "," Sets whether to show an item for the default sound/ringtone. <br /><br />"
"android.preference.RingtonePreference.getShowSilent () "," Returns whether to a show an item for 'Silent'. <br /><br />"
"android.preference.RingtonePreference.onActivityResult (int requestCode, int resultCode, Intent data) "," See Activity's onActivityResult. <br /><br />"
"android.preference.SwitchPreference.setSwitchTextOn (CharSequence onText) "," Set the text displayed on the switch widget in the on state. <br /><br />"
"android.preference.SwitchPreference.setSwitchTextOn (int resId) "," Set the text displayed on the switch widget in the on state. <br /><br />"
"android.preference.SwitchPreference.setSwitchTextOff (int resId) "," Set the text displayed on the switch widget in the off state. <br /><br />"
"android.preference.SwitchPreference.getSwitchTextOff () "," no description <br /><br />"
"android.preference.SwitchPreference.getSwitchTextOn () "," no description <br /><br />"
"android.preference.SwitchPreference.setSwitchTextOff (CharSequence offText) "," Set the text displayed on the switch widget in the off state. <br /><br />"
"android.preference.TwoStatePreference.setSummaryOn (int summaryResId) "," no description <br /><br />"
"android.preference.TwoStatePreference.setChecked (boolean checked) "," Sets the checked state and saves it to the SharedPreferences. <br /><br />"
"android.preference.TwoStatePreference.getSummaryOn () "," Returns the summary to be shown when checked. <br /><br />"
"android.preference.TwoStatePreference.setSummaryOff (int summaryResId) "," no description <br /><br />"
"android.preference.TwoStatePreference.setSummaryOff (CharSequence summary) "," Sets the summary to be shown when unchecked. <br /><br />"
"android.preference.TwoStatePreference.getSummaryOff () "," Returns the summary to be shown when unchecked. <br /><br />"
"android.preference.TwoStatePreference.setDisableDependentsState (boolean disableDependentsState)   Sets whether dependents are disabled when this preference is on  (true) or when this preference is off  ( false) "," Sets whether dependents are disabled when this preference is on ( true) or when this preference is off ( false). <br /><br />"
"android.preference.TwoStatePreference.getDisableDependentsState ()   Returns whether dependents are disabled when this preference is on  (true) or when this preference is off  ( false) "," Returns whether dependents are disabled when this preference is on ( true) or when this preference is off ( false). <br /><br />"
"android.preference.TwoStatePreference.setSummaryOn (CharSequence summary) "," Sets the summary to be shown when checked. <br /><br />"
"android.preference.TwoStatePreference.isChecked () "," Returns the checked state. <br /><br />"
"android.preference.TwoStatePreference.shouldDisableDependents () "," Checks whether this preference's dependents should currently be disabled. <br /><br />"
"android.print.PageRange.getEnd ()   Gets the end page index  (zero based and inclusive) "," Gets the end page index (zero based and inclusive). <br /><br />"
"android.print.PageRange.getStart ()   Gets the start page index  (zero based and inclusive) "," Gets the start page index (zero based and inclusive). <br /><br />"
"android.print.PageRange.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.print.PageRange.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.print.PageRange.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.print.PageRange.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.print.PageRange.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.print.pdf.PrintedPdfDocument.startPage (int pageNumber) "," Starts a new page. <br /><br />"
"android.print.pdf.PrintedPdfDocument.getPageContentRect () "," Gets the content rectangle. <br /><br />"
"android.print.pdf.PrintedPdfDocument.getPageWidth () "," Gets the page width. <br /><br />"
"android.print.pdf.PrintedPdfDocument.getPageHeight () "," Gets the page height. <br /><br />"
"android.print.PrintAttributes.Builder.setResolution (PrintAttributes.Resolution resolution) "," Sets the resolution. <br /><br />"
"android.print.PrintAttributes.Builder.setColorMode (int colorMode) "," Sets the color mode. <br /><br />"
"android.print.PrintAttributes.Builder.build () "," Creates a new PrintAttributes instance. <br /><br />"
"android.print.PrintAttributes.Builder.setMinMargins (PrintAttributes.Margins margins) "," Sets the minimal margins. <br /><br />"
"android.print.PrintAttributes.Builder.setMediaSize (PrintAttributes.MediaSize mediaSize) "," Sets the media size. <br /><br />"
"android.print.PrintAttributes.getMediaSize () "," Gets the media size. <br /><br />"
"android.print.PrintAttributes.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.print.PrintAttributes.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.print.PrintAttributes.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.print.PrintAttributes.getMinMargins () "," Gets the minimal margins. <br /><br />"
"android.print.PrintAttributes.getColorMode () "," Gets the color mode. <br /><br />"
"android.print.PrintAttributes.getResolution () "," Gets the resolution. <br /><br />"
"android.print.PrintAttributes.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.print.PrintAttributes.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.print.PrintAttributes.Margins.getRightMils ()   Gets the right margin in mils  (thousands of an inch) "," Gets the right margin in mils (thousands of an inch). <br /><br />"
"android.print.PrintAttributes.Margins.getLeftMils ()   Gets the left margin in mils  (thousands of an inch) "," Gets the left margin in mils (thousands of an inch). <br /><br />"
"android.print.PrintAttributes.Margins.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.print.PrintAttributes.Margins.getTopMils ()   Gets the top margin in mils  (thousands of an inch) "," Gets the top margin in mils (thousands of an inch). <br /><br />"
"android.print.PrintAttributes.Margins.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.print.PrintAttributes.Margins.getBottomMils ()   Gets the bottom margin in mils  (thousands of an inch) "," Gets the bottom margin in mils (thousands of an inch). <br /><br />"
"android.print.PrintAttributes.Margins.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.print.PrintAttributes.MediaSize.getLabel (PackageManager packageManager) "," Gets the human readable media size label. <br /><br />"
"android.print.PrintAttributes.MediaSize.isPortrait () "," Gets whether this media size is in portrait which is the height is greater or equal to the width. <br /><br />"
"android.print.PrintAttributes.MediaSize.getId () "," Gets the unique media size id. <br /><br />"
"android.print.PrintAttributes.MediaSize.getHeightMils ()   Gets the media height in mils  (thousands of an inch) "," Gets the media height in mils (thousands of an inch). <br /><br />"
"android.print.PrintAttributes.MediaSize.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.print.PrintAttributes.MediaSize.getWidthMils ()   Gets the media width in mils  (thousands of an inch) "," Gets the media width in mils (thousands of an inch). <br /><br />"
"android.print.PrintAttributes.MediaSize.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.print.PrintAttributes.MediaSize.asPortrait () "," Returns a new media size instance in a portrait orientation, which is the height is the greater dimension. <br /><br />"
"android.print.PrintAttributes.MediaSize.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.print.PrintAttributes.MediaSize.asLandscape () "," Returns a new media size instance in a landscape orientation, which is the height is the lesser dimension. <br /><br />"
"android.print.PrintAttributes.Resolution.getId () "," Gets the unique resolution id. <br /><br />"
"android.print.PrintAttributes.Resolution.getHorizontalDpi ()   Gets the horizontal resolution in DPI  (dots per inch) "," Gets the horizontal resolution in DPI (dots per inch). <br /><br />"
"android.print.PrintAttributes.Resolution.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.print.PrintAttributes.Resolution.getLabel () "," Gets the resolution human readable label. <br /><br />"
"android.print.PrintAttributes.Resolution.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.print.PrintAttributes.Resolution.getVerticalDpi ()   Gets the vertical resolution in DPI  (dots per inch) "," Gets the vertical resolution in DPI (dots per inch). <br /><br />"
"android.print.PrintAttributes.Resolution.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.print.PrintDocumentAdapter.onFinish () "," Called when printing finishes. <br /><br />"
"android.print.PrintDocumentAdapter.onLayout (PrintAttributes oldAttributes, PrintAttributes newAttributes, CancellationSignal cancellationSignal, PrintDocumentAdapter.LayoutResultCallback callback, Bundle extras)   Called when the print attributes  (page size, density, etc) "," Called when the print attributes (page size, density, etc) changed giving you a chance to layout the content such that it matches the new constraints. <br /><br />"
"android.print.PrintDocumentAdapter.onWrite (PageRange[] pages, ParcelFileDescriptor destination, CancellationSignal cancellationSignal, PrintDocumentAdapter.WriteResultCallback callback) "," Called when specific pages of the content should be written in the form of a PDF file to the given file descriptor. <br /><br />"
"android.print.PrintDocumentAdapter.onStart () "," Called when printing starts. <br /><br />"
"android.print.PrintDocumentAdapter.LayoutResultCallback.onLayoutFinished (PrintDocumentInfo info, boolean changed) "," Notifies that the layout finished and whether the content changed. <br /><br />"
"android.print.PrintDocumentAdapter.LayoutResultCallback.onLayoutFailed (CharSequence error) "," Notifies that an error occurred while laying out the document. <br /><br />"
"android.print.PrintDocumentAdapter.LayoutResultCallback.onLayoutCancelled () "," Notifies that layout was cancelled as a result of a cancellation request. <br /><br />"
"android.print.PrintDocumentAdapter.WriteResultCallback.onWriteFinished (PageRange[] pages) "," Notifies that all the data was written. <br /><br />"
"android.print.PrintDocumentAdapter.WriteResultCallback.onWriteFailed (CharSequence error) "," Notifies that an error occurred while writing the data. <br /><br />"
"android.print.PrintDocumentAdapter.WriteResultCallback.onWriteCancelled () "," Notifies that write was cancelled as a result of a cancellation request. <br /><br />"
"android.print.PrintDocumentInfo.Builder.setContentType (int type) "," Sets the content type. <br /><br />"
"android.print.PrintDocumentInfo.Builder.setPageCount (int pageCount) "," Sets the total number of pages. <br /><br />"
"android.print.PrintDocumentInfo.Builder.build () "," Creates a new PrintDocumentInfo instance. <br /><br />"
"android.print.PrintDocumentInfo.getName () "," Gets the document name. <br /><br />"
"android.print.PrintDocumentInfo.getPageCount () "," Gets the total number of pages. <br /><br />"
"android.print.PrintDocumentInfo.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.print.PrintDocumentInfo.getContentType () "," Gets the content type. <br /><br />"
"android.print.PrintDocumentInfo.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.print.PrintDocumentInfo.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.print.PrintDocumentInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.print.PrintDocumentInfo.getDataSize () "," Gets the document data size in bytes. <br /><br />"
"android.print.PrintDocumentInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.print.PrinterCapabilitiesInfo.Builder.setColorModes (int colorModes, int defaultColorMode) "," Sets the color modes. <br /><br />"
"android.print.PrinterCapabilitiesInfo.Builder.addResolution (PrintAttributes.Resolution resolution, boolean isDefault) "," Adds a supported resolution. <br /><br />"
"android.print.PrinterCapabilitiesInfo.Builder.build () "," Crates a new PrinterCapabilitiesInfo enforcing that all required properties have been specified. <br /><br />"
"android.print.PrinterCapabilitiesInfo.Builder.setMinMargins (PrintAttributes.Margins margins) "," Sets the minimal margins. <br /><br />"
"android.print.PrinterCapabilitiesInfo.Builder.addMediaSize (PrintAttributes.MediaSize mediaSize, boolean isDefault) "," Adds a supported media size. <br /><br />"
"android.print.PrinterCapabilitiesInfo.getMediaSizes () "," Gets the supported media sizes. <br /><br />"
"android.print.PrinterCapabilitiesInfo.getResolutions () "," Gets the supported resolutions. <br /><br />"
"android.print.PrinterCapabilitiesInfo.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.print.PrinterCapabilitiesInfo.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.print.PrinterCapabilitiesInfo.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.print.PrinterCapabilitiesInfo.getMinMargins () "," Gets the minimal margins. <br /><br />"
"android.print.PrinterCapabilitiesInfo.getDefaults () "," Gets the default print attributes. <br /><br />"
"android.print.PrinterCapabilitiesInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.print.PrinterCapabilitiesInfo.getColorModes () "," Gets the bit mask of supported color modes. <br /><br />"
"android.print.PrinterCapabilitiesInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.print.PrinterId.equals (Object object) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.print.PrinterId.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.print.PrinterId.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.print.PrinterId.getLocalId () "," Gets the id of this printer which is unique in the context of the print service that manages it. <br /><br />"
"android.print.PrinterId.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.print.PrinterId.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.print.PrinterInfo.Builder.setCapabilities (PrinterCapabilitiesInfo capabilities) "," Sets the printer capabilities. <br /><br />"
"android.print.PrinterInfo.Builder.setName (String name) "," Sets the localized printer name which is shown to the user <br /><br />"
"android.print.PrinterInfo.Builder.setDescription (String description) "," Sets the localized printer description which is shown to the user <br /><br />"
"android.print.PrinterInfo.Builder.build () "," Creates a new PrinterInfo. <br /><br />"
"android.print.PrinterInfo.Builder.setStatus (int status) "," Sets the printer status. <br /><br />"
"android.print.PrinterInfo.getName () "," Get the printer name. <br /><br />"
"android.print.PrinterInfo.getDescription () "," Gets the printer description. <br /><br />"
"android.print.PrinterInfo.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.print.PrinterInfo.getId () "," Get the globally unique printer id. <br /><br />"
"android.print.PrinterInfo.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.print.PrinterInfo.getStatus () "," Gets the printer status. <br /><br />"
"android.print.PrinterInfo.getCapabilities () "," Gets the printer capabilities. <br /><br />"
"android.print.PrinterInfo.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.print.PrinterInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.print.PrinterInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.print.PrintJob.isStarted () "," Gets whether this print job is started. <br /><br />"
"android.print.PrintJob.isQueued () "," Gets whether this print job is queued. <br /><br />"
"android.print.PrintJob.getInfo () "," Gets the PrintJobInfo that describes this job. <br /><br />"
"android.print.PrintJob.getId () "," Gets the unique print job id. <br /><br />"
"android.print.PrintJob.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.print.PrintJob.isCompleted () "," Gets whether this print job is completed. <br /><br />"
"android.print.PrintJob.isFailed () "," Gets whether this print job is failed. <br /><br />"
"android.print.PrintJob.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.print.PrintJob.restart () "," Restarts this print job. <br /><br />"
"android.print.PrintJob.cancel () "," Cancels this print job. <br /><br />"
"android.print.PrintJob.isCancelled () "," Gets whether this print job is cancelled. <br /><br />"
"android.print.PrintJob.isBlocked () "," Gets whether this print job is blocked. <br /><br />"
"android.print.PrintJobId.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.print.PrintJobId.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.print.PrintJobId.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.print.PrintJobId.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.print.PrintJobInfo.Builder.setAttributes (PrintAttributes attributes) "," Sets the print job attributes. <br /><br />"
"android.print.PrintJobInfo.Builder.setPages (PageRange[] pages) "," Sets the included pages. <br /><br />"
"android.print.PrintJobInfo.Builder.setCopies (int copies) "," Sets the number of copies. <br /><br />"
"android.print.PrintJobInfo.Builder.putAdvancedOption (String key, String value)   Puts an advanced  (printer specific) "," Puts an advanced (printer specific) option. <br /><br />"
"android.print.PrintJobInfo.Builder.build () "," Creates a new PrintJobInfo instance. <br /><br />"
"android.print.PrintJobInfo.Builder.putAdvancedOption (String key, int value)   Puts an advanced  (printer specific) "," Puts an advanced (printer specific) option. <br /><br />"
"android.print.PrintJobInfo.getAttributes () "," Gets the print job attributes. <br /><br />"
"android.print.PrintJobInfo.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.print.PrintJobInfo.getState () "," Gets the current job state. <br /><br />"
"android.print.PrintJobInfo.getId () "," Gets the unique print job id. <br /><br />"
"android.print.PrintJobInfo.getLabel () "," Gets the human readable job label. <br /><br />"
"android.print.PrintJobInfo.getCreationTime () "," Gets the wall time in millisecond when this print job was created. <br /><br />"
"android.print.PrintJobInfo.getPages () "," Gets the included pages. <br /><br />"
"android.print.PrintJobInfo.getPrinterId () "," Gets the unique target printer id. <br /><br />"
"android.print.PrintJobInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.print.PrintJobInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.print.PrintJobInfo.getCopies () "," Gets the number of copies. <br /><br />"
"android.print.PrintManager.print (String printJobName, PrintDocumentAdapter documentAdapter, PrintAttributes attributes) "," Creates a print job for printing a PrintDocumentAdapter with default print attributes. <br /><br />"
"android.print.PrintManager.getPrintJobs () "," Gets the print jobs for this application. <br /><br />"
"android.printservice.PrintDocument.getInfo () "," Gets the PrintDocumentInfo that describes this document. <br /><br />"
"android.printservice.PrintDocument.getData () "," Gets the data associated with this document. <br /><br />"
"android.printservice.PrinterDiscoverySession.removePrinters (List< PrinterId> printerIds) "," Removes added printers. <br /><br />"
"android.printservice.PrinterDiscoverySession.onStartPrinterStateTracking (PrinterId printerId) "," Callback asking you to start tracking the state of a printer. <br /><br />"
"android.printservice.PrinterDiscoverySession.onValidatePrinters (List< PrinterId> printerIds) "," Callback asking you to validate that the given printers are valid, that is they exist. <br /><br />"
"android.printservice.PrinterDiscoverySession.onStopPrinterStateTracking (PrinterId printerId) "," Callback asking you to stop tracking the state of a printer. <br /><br />"
"android.printservice.PrinterDiscoverySession.isPrinterDiscoveryStarted () "," Gets whether printer discovery is started. <br /><br />"
"android.printservice.PrinterDiscoverySession.addPrinters (List< PrinterInfo> printers) "," Adds discovered printers. <br /><br />"
"android.printservice.PrinterDiscoverySession.onStopPrinterDiscovery () "," Callback notifying you that you should stop printer discovery. <br /><br />"
"android.printservice.PrinterDiscoverySession.onDestroy () "," Notifies you that the session is destroyed. <br /><br />"
"android.printservice.PrinterDiscoverySession.onStartPrinterDiscovery (List< PrinterId> priorityList) "," Callback asking you to start printer discovery. <br /><br />"
"android.printservice.PrinterDiscoverySession.isDestroyed () "," Gets whether the session is destroyed. <br /><br />"
"android.printservice.PrinterDiscoverySession.getTrackedPrinters () "," Gets the printers that should be tracked. <br /><br />"
"android.printservice.PrinterDiscoverySession.getPrinters () "," Gets the printers reported in this session. <br /><br />"
"android.printservice.PrintJob.isStarted () "," Gets whether this print job is started. <br /><br />"
"android.printservice.PrintJob.isQueued () "," Gets whether this print job is queued. <br /><br />"
"android.printservice.PrintJob.getInfo () "," Gets the PrintJobInfo that describes this job. <br /><br />"
"android.printservice.PrintJob.setTag (String tag) "," Sets a tag that is valid in the context of a PrintService and is not interpreted by the system. <br /><br />"
"android.printservice.PrintJob.getTag () "," Gets the print job tag. <br /><br />"
"android.printservice.PrintJob.start () "," Starts the print job. <br /><br />"
"android.printservice.PrintJob.isCompleted () "," Gets whether this print job is completed. <br /><br />"
"android.printservice.PrintJob.isCancelled () "," Gets whether this print job is cancelled. <br /><br />"
"android.printservice.PrintJob.isBlocked () "," Gets whether this print job is blocked. <br /><br />"
"android.printservice.PrintJob.block (String reason) "," Blocks the print job. <br /><br />"
"android.printservice.PrintJob.getAdvancedIntOption (String key)   Gets the value of an advanced  (printer specific) "," Gets the value of an advanced (printer specific) print option. <br /><br />"
"android.printservice.PrintJob.getDocument () "," Gets the printed document. <br /><br />"
"android.printservice.PrintJob.hasAdvancedOption (String key)   Gets whether this job has a given advanced  (printer specific) "," Gets whether this job has a given advanced (printer specific) print option. <br /><br />"
"android.printservice.PrintJob.getId () "," Gets the unique print job id. <br /><br />"
"android.printservice.PrintJob.getAdvancedStringOption (String key)   Gets the value of an advanced  (printer specific) "," Gets the value of an advanced (printer specific) print option. <br /><br />"
"android.printservice.PrintJob.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.printservice.PrintJob.isFailed () "," Gets whether this print job is failed. <br /><br />"
"android.printservice.PrintJob.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.printservice.PrintJob.fail (String error) "," Fails the print job. <br /><br />"
"android.printservice.PrintJob.cancel () "," Cancels the print job. <br /><br />"
"android.printservice.PrintJob.complete () "," Completes the print job. <br /><br />"
"android.printservice.PrintService.getActivePrintJobs () "," Gets the active print jobs for the printers managed by this service. <br /><br />"
"android.printservice.PrintService.generatePrinterId (String localId) "," Generates a global printer id given the printer's locally unique one. <br /><br />"
"android.printservice.PrintService.onBind (Intent intent) "," Return the communication channel to the service. <br /><br />"
"android.provider.Browser.clearHistory (ContentResolver cr) "," Delete all entries from the bookmarks/history table which are not bookmarks. <br /><br />"
"android.provider.Browser.truncateHistory (ContentResolver cr) "," If there are more than MAX_HISTORY_COUNT non-bookmark history items in the bookmark/history table, delete TRUNCATE_N_OLDEST of them. <br /><br />"
"android.provider.Browser.deleteFromHistory (ContentResolver cr, String url) "," Remove a specific url from the history database. <br /><br />"
"android.provider.Browser.saveBookmark (Context c, String title, String url) "," Open an activity to save a bookmark. <br /><br />"
"android.provider.Browser.sendString (Context context, String string) "," Sends the given string using an Intent with ACTION_SEND and a mime type of text/plain. <br /><br />"
"android.provider.Browser.getAllBookmarks (ContentResolver cr) "," Return a cursor pointing to a list of all the bookmarks. <br /><br />"
"android.provider.Browser.canClearHistory (ContentResolver cr) "," Returns whether there is any history to clear. <br /><br />"
"android.provider.Browser.updateVisitedHistory (ContentResolver cr, String url, boolean real) "," Update the visited history to acknowledge that a site has been visited. <br /><br />"
"android.provider.Browser.requestAllIcons (ContentResolver cr, String where, WebIconDatabase.IconListener listener) "," Request all icons from the database. <br /><br />"
"android.provider.Browser.addSearchUrl (ContentResolver cr, String search) "," Add a search string to the searches database. <br /><br />"
"android.provider.Browser.clearSearches (ContentResolver cr) "," Remove all searches from the search database. <br /><br />"
"android.provider.Browser.deleteHistoryTimeFrame (ContentResolver cr, long begin, long end) "," Delete all history items from begin to end. <br /><br />"
"android.provider.Browser.getAllVisitedUrls (ContentResolver cr) "," Return a cursor pointing to a list of all visited site urls. <br /><br />"
"android.provider.CalendarContract.Attendees.query (ContentResolver cr, long eventId, String[] projection) "," Queries all attendees associated with the given event. <br /><br />"
"android.provider.CalendarContract.CalendarEntity.newEntityIterator (Cursor cursor) "," Creates an entity iterator for the given cursor. <br /><br />"
"android.provider.CalendarContract.EventDays.query (ContentResolver cr, int startDay, int numDays, String[] projection) "," Retrieves the days with events for the Julian days starting at 'startDay' for 'numDays'. <br /><br />"
"android.provider.CalendarContract.EventsEntity.newEntityIterator (Cursor cursor, ContentProviderClient provider) "," Creates a new iterator for events <br /><br />"
"android.provider.CalendarContract.EventsEntity.newEntityIterator (Cursor cursor, ContentResolver resolver) "," Creates a new iterator for events <br /><br />"
"android.provider.CalendarContract.Instances.query (ContentResolver cr, String[] projection, long begin, long end) "," Performs a query to return all visible instances in the given range. <br /><br />"
"android.provider.CalendarContract.Instances.query (ContentResolver cr, String[] projection, long begin, long end, String searchQuery) "," Performs a query to return all visible instances in the given range that match the given query. <br /><br />"
"android.provider.CalendarContract.Reminders.query (ContentResolver cr, long eventId, String[] projection) "," Queries all reminders associated with the given event. <br /><br />"
"android.provider.CallLog.Calls.getLastOutgoingCall (Context context) "," Query the call log database for the last dialed number. <br /><br />"
"android.provider.Contacts.ContactMethods.decodeImProtocol (String encodedString) "," This method was deprecated in API level 5. see ContactsContract <br /><br />"
"android.provider.Contacts.ContactMethods.encodeCustomImProtocol (String protocolString) "," This method was deprecated in API level 5. see ContactsContract <br /><br />"
"android.provider.Contacts.ContactMethods.getDisplayLabel (Context context, int kind, int type, CharSequence label) "," This method was deprecated in API level 5. see ContactsContract <br /><br />"
"android.provider.Contacts.ContactMethods.addPostalLocation (Context context, long postalId, double latitude, double longitude) "," This method was deprecated in API level 5. see ContactsContract <br /><br />"
"android.provider.Contacts.ContactMethods.encodePredefinedImProtocol (int protocol) "," This method was deprecated in API level 5. see ContactsContract <br /><br />"
"android.provider.Contacts.Organizations.getDisplayLabel (Context context, int type, CharSequence label) "," This method was deprecated in API level 5. see ContactsContract <br /><br />"
"android.provider.Contacts.People.openContactPhotoInputStream (ContentResolver cr, Uri person) "," This method was deprecated in API level 5. see ContactsContract <br /><br />"
"android.provider.Contacts.People.markAsContacted (ContentResolver resolver, long personId) "," This method was deprecated in API level 5. see ContactsContract <br /><br />"
"android.provider.Contacts.People.addToGroup (ContentResolver resolver, long personId, String groupName) "," This method was deprecated in API level 5. see ContactsContract <br /><br />"
"android.provider.Contacts.People.queryGroups (ContentResolver resolver, long person) "," This method was deprecated in API level 5. see ContactsContract <br /><br />"
"android.provider.Contacts.People.createPersonInMyContactsGroup (ContentResolver resolver, ContentValues values) "," This method was deprecated in API level 5. see ContactsContract <br /><br />"
"android.provider.Contacts.People.setPhotoData (ContentResolver cr, Uri person, byte[] data) "," This method was deprecated in API level 5. see ContactsContract <br /><br />"
"android.provider.Contacts.People.addToGroup (ContentResolver resolver, long personId, long groupId) "," This method was deprecated in API level 5. see ContactsContract <br /><br />"
"android.provider.Contacts.People.addToMyContactsGroup (ContentResolver resolver, long personId) "," This method was deprecated in API level 5. see ContactsContract <br /><br />"
"android.provider.Contacts.People.loadContactPhoto (Context context, Uri person, int placeholderImageResource, BitmapFactory.Options options) "," This method was deprecated in API level 5. see ContactsContract <br /><br />"
"android.provider.Contacts.Phones.getDisplayLabel (Context context, int type, CharSequence label) "," This method was deprecated in API level 5. see ContactsContract <br /><br />"
"android.provider.Contacts.Phones.getDisplayLabel (Context context, int type, CharSequence label, CharSequence[] labelArray) "," This method was deprecated in API level 5. see ContactsContract <br /><br />"
"android.provider.Contacts.Settings.getSetting (ContentResolver cr, String account, String key) "," This method was deprecated in API level 5. see ContactsContract <br /><br />"
"android.provider.Contacts.Settings.setSetting (ContentResolver cr, String account, String key, String value) "," This method was deprecated in API level 5. see ContactsContract <br /><br />"
"android.provider.ContactsContract.CommonDataKinds.Email.getTypeLabel (Resources res, int type, CharSequence label) "," Return a CharSequence that best describes the given type, possibly substituting the given LABEL value for TYPE_CUSTOM. <br /><br />"
"android.provider.ContactsContract.CommonDataKinds.Email.getTypeLabelResource (int type) "," Return the string resource that best describes the given TYPE. <br /><br />"
"android.provider.ContactsContract.CommonDataKinds.Event.getTypeResource (Integer type) "," Return the string resource that best describes the given TYPE. <br /><br />"
"android.provider.ContactsContract.CommonDataKinds.Event.getTypeLabel (Resources res, int type, CharSequence label) "," Return a CharSequence that best describes the given type, possibly substituting the given LABEL value for TYPE_CUSTOM. <br /><br />"
"android.provider.ContactsContract.CommonDataKinds.Im.getTypeLabel (Resources res, int type, CharSequence label) "," Return a CharSequence that best describes the given type, possibly substituting the given LABEL value for TYPE_CUSTOM. <br /><br />"
"android.provider.ContactsContract.CommonDataKinds.Im.getTypeLabelResource (int type) "," Return the string resource that best describes the given TYPE. <br /><br />"
"android.provider.ContactsContract.CommonDataKinds.Im.getProtocolLabel (Resources res, int type, CharSequence label) "," Return a CharSequence that best describes the given protocol, possibly substituting the given CUSTOM_PROTOCOL value for PROTOCOL_CUSTOM. <br /><br />"
"android.provider.ContactsContract.CommonDataKinds.Im.getProtocolLabelResource (int type) "," Return the string resource that best describes the given PROTOCOL. <br /><br />"
"android.provider.ContactsContract.CommonDataKinds.Organization.getTypeLabel (Resources res, int type, CharSequence label) "," Return a CharSequence that best describes the given type, possibly substituting the given LABEL value for TYPE_CUSTOM. <br /><br />"
"android.provider.ContactsContract.CommonDataKinds.Organization.getTypeLabelResource (int type) "," Return the string resource that best describes the given TYPE. <br /><br />"
"android.provider.ContactsContract.CommonDataKinds.Phone.getTypeLabel (Resources res, int type, CharSequence label) "," Return a CharSequence that best describes the given type, possibly substituting the given LABEL value for TYPE_CUSTOM. <br /><br />"
"android.provider.ContactsContract.CommonDataKinds.Phone.getTypeLabelResource (int type) "," Return the string resource that best describes the given TYPE. <br /><br />"
"android.provider.ContactsContract.CommonDataKinds.Relation.getTypeLabel (Resources res, int type, CharSequence label) "," Return a CharSequence that best describes the given type, possibly substituting the given LABEL value for TYPE_CUSTOM. <br /><br />"
"android.provider.ContactsContract.CommonDataKinds.Relation.getTypeLabelResource (int type) "," Return the string resource that best describes the given TYPE. <br /><br />"
"android.provider.ContactsContract.CommonDataKinds.SipAddress.getTypeLabel (Resources res, int type, CharSequence label) "," Return a CharSequence that best describes the given type, possibly substituting the given LABEL value for TYPE_CUSTOM. <br /><br />"
"android.provider.ContactsContract.CommonDataKinds.SipAddress.getTypeLabelResource (int type) "," Return the string resource that best describes the given TYPE. <br /><br />"
"android.provider.ContactsContract.CommonDataKinds.StructuredPostal.getTypeLabel (Resources res, int type, CharSequence label) "," Return a CharSequence that best describes the given type, possibly substituting the given LABEL value for TYPE_CUSTOM. <br /><br />"
"android.provider.ContactsContract.CommonDataKinds.StructuredPostal.getTypeLabelResource (int type) "," Return the string resource that best describes the given TYPE. <br /><br />"
"android.provider.ContactsContract.Contacts.isEnterpriseContactId (long contactId) "," Return TRUE if a contact ID is from the contacts provider on the enterprise profile. <br /><br />"
"android.provider.ContactsContract.Contacts.getLookupUri (long contactId, String lookupKey) "," Build a CONTENT_LOOKUP_URI lookup Uri using the given _ID and LOOKUP_KEY. <br /><br />"
"android.provider.ContactsContract.Contacts.openContactPhotoInputStream (ContentResolver cr, Uri contactUri, boolean preferHighres) "," Opens an InputStream for the contacts's photo and returns the photo as a byte stream. <br /><br />"
"android.provider.ContactsContract.Contacts.lookupContact (ContentResolver resolver, Uri lookupUri)   Computes a content URI  (see CONTENT_URI) "," Computes a content URI (see CONTENT_URI) given a lookup URI. <br /><br />"
"android.provider.ContactsContract.Contacts.markAsContacted (ContentResolver resolver, long contactId) "," This method was deprecated in API level 16. The class DataUsageStatUpdater of the Android support library should be used instead. <br /><br />"
"android.provider.ContactsContract.Contacts.openContactPhotoInputStream (ContentResolver cr, Uri contactUri) "," Opens an InputStream for the contacts's thumbnail photo and returns the photo as a byte stream. <br /><br />"
"android.provider.ContactsContract.Contacts.getLookupUri (ContentResolver resolver, Uri contactUri) "," Builds a CONTENT_LOOKUP_URI style Uri describing the requested Contacts entry. <br /><br />"
"android.provider.ContactsContract.Data.getContactLookupUri (ContentResolver resolver, Uri dataUri) "," Build a CONTENT_LOOKUP_URI style Uri for the parent ContactsContract.Contacts entry of the given ContactsContract.Data entry. <br /><br />"
"android.provider.ContactsContract.Directory.notifyDirectoryChange (ContentResolver resolver) "," Notifies the system of a change in the list of directories handled by a particular directory provider. <br /><br />"
"android.provider.ContactsContract.Groups.newEntityIterator (Cursor cursor) "," no description <br /><br />"
"android.provider.ContactsContract.isProfileId (long id) "," This method can be used to identify whether the given ID is associated with profile data. <br /><br />"
"android.provider.ContactsContract.PinnedPositions.pin (ContentResolver contentResolver, long contactId, int pinnedPosition) "," Pins a contact at a provided position, or unpins a contact. <br /><br />"
"android.provider.ContactsContract.PinnedPositions.undemote (ContentResolver contentResolver, long contactId) "," Undemotes a formerly demoted contact. <br /><br />"
"android.provider.ContactsContract.ProfileSyncState.set (ContentProviderClient provider, Account account, byte[] data) "," no description <br /><br />"
"android.provider.ContactsContract.ProfileSyncState.newSetOperation (Account account, byte[] data) "," no description <br /><br />"
"android.provider.ContactsContract.ProfileSyncState.get (ContentProviderClient provider, Account account) "," no description <br /><br />"
"android.provider.ContactsContract.ProfileSyncState.getWithUri (ContentProviderClient provider, Account account) "," no description <br /><br />"
"android.provider.ContactsContract.QuickContact.showQuickContact (Context context, Rect target, Uri lookupUri, int mode, String[] excludeMimes) "," Trigger a dialog that lists the various methods of interacting with the requested Contacts entry. <br /><br />"
"android.provider.ContactsContract.QuickContact.showQuickContact (Context context, View target, Uri lookupUri, int mode, String[] excludeMimes) "," Trigger a dialog that lists the various methods of interacting with the requested Contacts entry. <br /><br />"
"android.provider.ContactsContract.RawContacts.getContactLookupUri (ContentResolver resolver, Uri rawContactUri) "," Build a CONTENT_LOOKUP_URI style Uri for the parent ContactsContract.Contacts entry of the given ContactsContract.RawContacts entry. <br /><br />"
"android.provider.ContactsContract.RawContacts.newEntityIterator (Cursor cursor) "," TODO: javadoc <br /><br />"
"android.provider.ContactsContract.StatusUpdates.getPresenceIconResourceId (int status) "," Gets the resource ID for the proper presence icon. <br /><br />"
"android.provider.ContactsContract.StatusUpdates.getPresencePrecedence (int status) "," Returns the precedence of the status code the higher number being the higher precedence. <br /><br />"
"android.provider.ContactsContract.SyncState.set (ContentProviderClient provider, Account account, byte[] data) "," no description <br /><br />"
"android.provider.ContactsContract.SyncState.newSetOperation (Account account, byte[] data) "," no description <br /><br />"
"android.provider.ContactsContract.SyncState.get (ContentProviderClient provider, Account account) "," no description <br /><br />"
"android.provider.ContactsContract.SyncState.getWithUri (ContentProviderClient provider, Account account) "," no description <br /><br />"
"android.provider.DocumentsContract.buildRecentDocumentsUri (String authority, String rootId) "," Build URI representing the recently modified documents of a specific root in a document provider. <br /><br />"
"android.provider.DocumentsContract.buildDocumentUriUsingTree (Uri treeUri, String documentId) "," Build URI representing the target COLUMN_DOCUMENT_ID in a document provider. <br /><br />"
"android.provider.DocumentsContract.createDocument (ContentResolver resolver, Uri parentDocumentUri, String mimeType, String displayName) "," Create a new document with given MIME type and display name. <br /><br />"
"android.provider.DocumentsContract.getTreeDocumentId (Uri documentUri) "," Extract the via COLUMN_DOCUMENT_ID from the given URI. <br /><br />"
"android.provider.DocumentsContract.buildRootUri (String authority, String rootId) "," Build URI representing the given COLUMN_ROOT_ID in a document provider. <br /><br />"
"android.provider.DocumentsContract.deleteDocument (ContentResolver resolver, Uri documentUri) "," Delete the given document. <br /><br />"
"android.provider.DocumentsContract.getDocumentThumbnail (ContentResolver resolver, Uri documentUri, Point size, CancellationSignal signal) "," Return thumbnail representing the document at the given URI. <br /><br />"
"android.provider.DocumentsContract.isDocumentUri (Context context, Uri uri) "," Test if the given URI represents a DocumentsContract.Document backed by a DocumentsProvider. <br /><br />"
"android.provider.DocumentsContract.buildChildDocumentsUriUsingTree (Uri treeUri, String parentDocumentId) "," Build URI representing the children of the target directory in a document provider. <br /><br />"
"android.provider.DocumentsContract.getRootId (Uri rootUri) "," Extract the COLUMN_ROOT_ID from the given URI. <br /><br />"
"android.provider.DocumentsContract.buildDocumentUri (String authority, String documentId) "," Build URI representing the target COLUMN_DOCUMENT_ID in a document provider. <br /><br />"
"android.provider.DocumentsContract.buildChildDocumentsUri (String authority, String parentDocumentId) "," Build URI representing the children of the target directory in a document provider. <br /><br />"
"android.provider.DocumentsContract.buildSearchDocumentsUri (String authority, String rootId, String query) "," Build URI representing a search for matching documents under a specific root in a document provider. <br /><br />"
"android.provider.DocumentsContract.buildRootsUri (String authority) "," Build URI representing the roots of a document provider. <br /><br />"
"android.provider.DocumentsContract.buildTreeDocumentUri (String authority, String documentId) "," Build URI representing access to descendant documents of the given COLUMN_DOCUMENT_ID. <br /><br />"
"android.provider.DocumentsContract.getDocumentId (Uri documentUri) "," Extract the COLUMN_DOCUMENT_ID from the given URI. <br /><br />"
"android.provider.DocumentsContract.getSearchDocumentsQuery (Uri searchDocumentsUri)   Extract the search query from a URI built by buildSearchDocumentsUri (String, String, String) "," Extract the search query from a URI built by buildSearchDocumentsUri(String, String, String). <br /><br />"
"android.provider.DocumentsContract.renameDocument (ContentResolver resolver, Uri documentUri, String displayName) "," Change the display name of an existing document. <br /><br />"
"android.provider.DocumentsProvider.openAssetFile (Uri uri, String mode, CancellationSignal signal) "," Implementation is provided by the parent class. <br /><br />"
"android.provider.DocumentsProvider.openAssetFile (Uri uri, String mode) "," Implementation is provided by the parent class. <br /><br />"
"android.provider.DocumentsProvider.update (Uri uri, ContentValues values, String selection, String[] selectionArgs) "," Implementation is provided by the parent class. <br /><br />"
"android.provider.DocumentsProvider.insert (Uri uri, ContentValues values) "," Implementation is provided by the parent class. <br /><br />"
"android.provider.DocumentsProvider.openDocumentThumbnail (String documentId, Point sizeHint, CancellationSignal signal) "," Open and return a thumbnail of the requested document. <br /><br />"
"android.provider.DocumentsProvider.getType (Uri uri) "," Implementation is provided by the parent class. <br /><br />"
"android.provider.DocumentsProvider.queryChildDocuments (String parentDocumentId, String[] projection, String sortOrder) "," Return the children documents contained in the requested directory. <br /><br />"
"android.provider.DocumentsProvider.queryRecentDocuments (String rootId, String[] projection) "," Return recently modified documents under the requested root. <br /><br />"
"android.provider.DocumentsProvider.deleteDocument (String documentId) "," Delete the requested document. <br /><br />"
"android.provider.DocumentsProvider.openDocument (String documentId, String mode, CancellationSignal signal) "," Open and return the requested document. <br /><br />"
"android.provider.DocumentsProvider.getDocumentType (String documentId) "," Return concrete MIME type of the requested document. <br /><br />"
"android.provider.DocumentsProvider.querySearchDocuments (String rootId, String query, String[] projection) "," Return documents that that match the given query under the requested root. <br /><br />"
"android.provider.DocumentsProvider.queryDocument (String documentId, String[] projection) "," Return metadata for the single requested document. <br /><br />"
"android.provider.DocumentsProvider.openFile (Uri uri, String mode, CancellationSignal signal) "," Implementation is provided by the parent class. <br /><br />"
"android.provider.DocumentsProvider.renameDocument (String documentId, String displayName) "," Rename an existing document. <br /><br />"
"android.provider.DocumentsProvider.delete (Uri uri, String selection, String[] selectionArgs) "," Implementation is provided by the parent class. <br /><br />"
"android.provider.DocumentsProvider.canonicalize (Uri uri) "," Implementation is provided by the parent class. <br /><br />"
"android.provider.DocumentsProvider.openFile (Uri uri, String mode) "," Implementation is provided by the parent class. <br /><br />"
"android.provider.DocumentsProvider.isChildDocument (String parentDocumentId, String documentId)   Test if a document is descendant  (child, grandchild, etc) "," Test if a document is descendant (child, grandchild, etc) from the given parent. <br /><br />"
"android.provider.DocumentsProvider.call (String method, String arg, Bundle extras) "," Implementation is provided by the parent class. <br /><br />"
"android.provider.DocumentsProvider.queryRoots (String[] projection) "," Return all roots currently provided. <br /><br />"
"android.provider.DocumentsProvider.createDocument (String parentDocumentId, String mimeType, String displayName) "," Create a new document and return its newly generated COLUMN_DOCUMENT_ID. <br /><br />"
"android.provider.DocumentsProvider.attachInfo (Context context, ProviderInfo info) "," Implementation is provided by the parent class. <br /><br />"
"android.provider.DocumentsProvider.openTypedAssetFile (Uri uri, String mimeTypeFilter, Bundle opts) "," Implementation is provided by the parent class. <br /><br />"
"android.provider.DocumentsProvider.revokeDocumentPermission (String documentId) "," Revoke any active permission grants for the given COLUMN_DOCUMENT_ID, usually called when a document becomes invalid. <br /><br />"
"android.provider.DocumentsProvider.openTypedAssetFile (Uri uri, String mimeTypeFilter, Bundle opts, CancellationSignal signal) "," Implementation is provided by the parent class. <br /><br />"
"android.provider.DocumentsProvider.query (Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) "," Implementation is provided by the parent class. <br /><br />"
"android.provider.MediaStore.Audio.Albums.getContentUri (String volumeName) "," Get the content:// style URI for the albums table on the given volume. <br /><br />"
"android.provider.MediaStore.Audio.Artists.Albums.getContentUri (String volumeName, long artistId) "," no description <br /><br />"
"android.provider.MediaStore.Audio.Artists.getContentUri (String volumeName) "," Get the content:// style URI for the artists table on the given volume. <br /><br />"
"android.provider.MediaStore.Audio.Genres.getContentUriForAudioId (String volumeName, int audioId) "," Get the content:// style URI for querying the genres of an audio file. <br /><br />"
"android.provider.MediaStore.Audio.Genres.getContentUri (String volumeName) "," Get the content:// style URI for the audio genres table on the given volume. <br /><br />"
"android.provider.MediaStore.Audio.Genres.Members.getContentUri (String volumeName, long genreId) "," no description <br /><br />"
"android.provider.MediaStore.Audio.keyFor (String name) "," Converts a name to a 'key' that can be used for grouping, sorting and searching. <br /><br />"
"android.provider.MediaStore.Audio.Media.getContentUri (String volumeName) "," Get the content:// style URI for the audio media table on the given volume. <br /><br />"
"android.provider.MediaStore.Audio.Media.getContentUriForPath (String path) "," no description <br /><br />"
"android.provider.MediaStore.Audio.Playlists.getContentUri (String volumeName) "," Get the content:// style URI for the audio playlists table on the given volume. <br /><br />"
"android.provider.MediaStore.Audio.Playlists.Members.moveItem (ContentResolver res, long playlistId, int from, int to) "," Convenience method to move a playlist item to a new location <br /><br />"
"android.provider.MediaStore.Audio.Playlists.Members.getContentUri (String volumeName, long playlistId) "," no description <br /><br />"
"android.provider.MediaStore.Files.getContentUri (String volumeName, long rowId) "," Get the content:// style URI for a single row in the files table on the given volume. <br /><br />"
"android.provider.MediaStore.Files.getContentUri (String volumeName) "," Get the content:// style URI for the files table on the given volume. <br /><br />"
"android.provider.MediaStore.getVersion (Context context) "," Get the media provider's version. <br /><br />"
"android.provider.MediaStore.getMediaScannerUri () "," Uri for querying the state of the media scanner. <br /><br />"
"android.provider.MediaStore.Images.Media.insertImage (ContentResolver cr, String imagePath, String name, String description) "," Insert an image and create a thumbnail for it. <br /><br />"
"android.provider.MediaStore.Images.Media.query (ContentResolver cr, Uri uri, String[] projection) "," no description <br /><br />"
"android.provider.MediaStore.Images.Media.query (ContentResolver cr, Uri uri, String[] projection, String selection, String[] selectionArgs, String orderBy) "," no description <br /><br />"
"android.provider.MediaStore.Images.Media.insertImage (ContentResolver cr, Bitmap source, String title, String description) "," Insert an image and create a thumbnail for it. <br /><br />"
"android.provider.MediaStore.Images.Media.getBitmap (ContentResolver cr, Uri url) "," Retrieves an image for the given url as a Bitmap. <br /><br />"
"android.provider.MediaStore.Images.Media.getContentUri (String volumeName) "," Get the content:// style URI for the image media table on the given volume. <br /><br />"
"android.provider.MediaStore.Images.Media.query (ContentResolver cr, Uri uri, String[] projection, String where, String orderBy) "," no description <br /><br />"
"android.provider.MediaStore.Images.Thumbnails.query (ContentResolver cr, Uri uri, String[] projection) "," no description <br /><br />"
"android.provider.MediaStore.Images.Thumbnails.cancelThumbnailRequest (ContentResolver cr, long origId) "," This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. <br /><br />"
"android.provider.MediaStore.Images.Thumbnails.getContentUri (String volumeName) "," Get the content:// style URI for the image media table on the given volume. <br /><br />"
"android.provider.MediaStore.Images.Thumbnails.cancelThumbnailRequest (ContentResolver cr, long origId, long groupId) "," This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. <br /><br />"
"android.provider.MediaStore.Images.Thumbnails.getThumbnail (ContentResolver cr, long origId, int kind, BitmapFactory.Options options)   This method checks if the thumbnails of the specified image  (origId) "," This method checks if the thumbnails of the specified image (origId) has been created. <br /><br />"
"android.provider.MediaStore.Images.Thumbnails.queryMiniThumbnails (ContentResolver cr, Uri uri, int kind, String[] projection) "," no description <br /><br />"
"android.provider.MediaStore.Images.Thumbnails.queryMiniThumbnail (ContentResolver cr, long origId, int kind, String[] projection) "," no description <br /><br />"
"android.provider.MediaStore.Images.Thumbnails.getThumbnail (ContentResolver cr, long origId, long groupId, int kind, BitmapFactory.Options options)   This method checks if the thumbnails of the specified image  (origId) "," This method checks if the thumbnails of the specified image (origId) has been created. <br /><br />"
"android.provider.MediaStore.Video.query (ContentResolver cr, Uri uri, String[] projection) "," no description <br /><br />"
"android.provider.MediaStore.Video.Media.getContentUri (String volumeName) "," Get the content:// style URI for the video media table on the given volume. <br /><br />"
"android.provider.MediaStore.Video.Thumbnails.cancelThumbnailRequest (ContentResolver cr, long origId) "," This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. <br /><br />"
"android.provider.MediaStore.Video.Thumbnails.getContentUri (String volumeName) "," Get the content:// style URI for the image media table on the given volume. <br /><br />"
"android.provider.MediaStore.Video.Thumbnails.cancelThumbnailRequest (ContentResolver cr, long origId, long groupId) "," This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. <br /><br />"
"android.provider.MediaStore.Video.Thumbnails.getThumbnail (ContentResolver cr, long origId, int kind, BitmapFactory.Options options)   This method checks if the thumbnails of the specified image  (origId) "," This method checks if the thumbnails of the specified image (origId) has been created. <br /><br />"
"android.provider.MediaStore.Video.Thumbnails.getThumbnail (ContentResolver cr, long origId, long groupId, int kind, BitmapFactory.Options options)   This method checks if the thumbnails of the specified image  (origId) "," This method checks if the thumbnails of the specified image (origId) has been created. <br /><br />"
"android.provider.SearchRecentSuggestions.clearHistory () "," Completely delete the history. <br /><br />"
"android.provider.SearchRecentSuggestions.saveRecentQuery (String queryString, String line2) "," Add a query to the recent queries list. <br /><br />"
"android.provider.Settings.Global.putString (ContentResolver resolver, String name, String value) "," Store a name/value pair into the database. <br /><br />"
"android.provider.Settings.Global.putFloat (ContentResolver cr, String name, float value) "," Convenience function for updating a single settings value as a floating point number. <br /><br />"
"android.provider.Settings.Global.putInt (ContentResolver cr, String name, int value) "," Convenience function for updating a single settings value as an integer. <br /><br />"
"android.provider.Settings.Global.getFloat (ContentResolver cr, String name, float def) "," Convenience function for retrieving a single secure settings value as a floating point number. <br /><br />"
"android.provider.Settings.Global.putLong (ContentResolver cr, String name, long value) "," Convenience function for updating a secure settings value as a long integer. <br /><br />"
"android.provider.Settings.Global.getInt (ContentResolver cr, String name, int def) "," Convenience function for retrieving a single secure settings value as an integer. <br /><br />"
"android.provider.Settings.Global.getUriFor (String name) "," Construct the content URI for a particular name/value pair, useful for monitoring changes with a ContentObserver. <br /><br />"
"android.provider.Settings.Global.getLong (ContentResolver cr, String name) "," Convenience function for retrieving a single secure settings value as a long. <br /><br />"
"android.provider.Settings.Global.getInt (ContentResolver cr, String name) "," Convenience function for retrieving a single secure settings value as an integer. <br /><br />"
"android.provider.Settings.Global.getFloat (ContentResolver cr, String name) "," Convenience function for retrieving a single secure settings value as a float. <br /><br />"
"android.provider.Settings.Global.getString (ContentResolver resolver, String name) "," Look up a name in the database. <br /><br />"
"android.provider.Settings.Global.getLong (ContentResolver cr, String name, long def) "," Convenience function for retrieving a single secure settings value as a long. <br /><br />"
"android.provider.Settings.NameValueTable.getUriFor (Uri uri, String name) "," no description <br /><br />"
"android.provider.Settings.Secure.putFloat (ContentResolver cr, String name, float value) "," Convenience function for updating a single settings value as a floating point number. <br /><br />"
"android.provider.Settings.Secure.getFloat (ContentResolver cr, String name, float def) "," Convenience function for retrieving a single secure settings value as a floating point number. <br /><br />"
"android.provider.Settings.Secure.getInt (ContentResolver cr, String name, int def) "," Convenience function for retrieving a single secure settings value as an integer. <br /><br />"
"android.provider.Settings.Secure.setLocationProviderEnabled (ContentResolver cr, String provider, boolean enabled)    This method was deprecated in API level 19. use putInt (ContentResolver, String, int) "," This method was deprecated in API level 19. use putInt(ContentResolver, String, int) and LOCATION_MODE <br /><br />"
"android.provider.Settings.Secure.getFloat (ContentResolver cr, String name) "," Convenience function for retrieving a single secure settings value as a float. <br /><br />"
"android.provider.Settings.Secure.isLocationProviderEnabled (ContentResolver cr, String provider)    This method was deprecated in API level 19. use LOCATION_MODE or isProviderEnabled (String) "," This method was deprecated in API level 19. use LOCATION_MODE or isProviderEnabled(String) <br /><br />"
"android.provider.Settings.Secure.getString (ContentResolver resolver, String name) "," Look up a name in the database. <br /><br />"
"android.provider.Settings.Secure.putString (ContentResolver resolver, String name, String value) "," Store a name/value pair into the database. <br /><br />"
"android.provider.Settings.Secure.putInt (ContentResolver cr, String name, int value) "," Convenience function for updating a single settings value as an integer. <br /><br />"
"android.provider.Settings.Secure.putLong (ContentResolver cr, String name, long value) "," Convenience function for updating a secure settings value as a long integer. <br /><br />"
"android.provider.Settings.Secure.getUriFor (String name) "," Construct the content URI for a particular name/value pair, useful for monitoring changes with a ContentObserver. <br /><br />"
"android.provider.Settings.Secure.getInt (ContentResolver cr, String name) "," Convenience function for retrieving a single secure settings value as an integer. <br /><br />"
"android.provider.Settings.Secure.getLong (ContentResolver cr, String name) "," Convenience function for retrieving a single secure settings value as a long. <br /><br />"
"android.provider.Settings.Secure.getLong (ContentResolver cr, String name, long def) "," Convenience function for retrieving a single secure settings value as a long. <br /><br />"
"android.provider.Settings.System.getConfiguration (ContentResolver cr, Configuration outConfig) "," Convenience function to read all of the current configuration-related settings into a Configuration object. <br /><br />"
"android.provider.Settings.System.putFloat (ContentResolver cr, String name, float value) "," Convenience function for updating a single settings value as a floating point number. <br /><br />"
"android.provider.Settings.System.getFloat (ContentResolver cr, String name, float def) "," Convenience function for retrieving a single system settings value as a floating point number. <br /><br />"
"android.provider.Settings.System.setShowGTalkServiceStatus (ContentResolver cr, boolean flag) "," This method was deprecated in API level 17. - Do not use <br /><br />"
"android.provider.Settings.System.getInt (ContentResolver cr, String name, int def) "," Convenience function for retrieving a single system settings value as an integer. <br /><br />"
"android.provider.Settings.System.putConfiguration (ContentResolver cr, Configuration config) "," Convenience function to write a batch of configuration-related settings from a Configuration object. <br /><br />"
"android.provider.Settings.System.getFloat (ContentResolver cr, String name) "," Convenience function for retrieving a single system settings value as a float. <br /><br />"
"android.provider.Settings.System.getShowGTalkServiceStatus (ContentResolver cr) "," This method was deprecated in API level 17. - Do not use <br /><br />"
"android.provider.Settings.System.getString (ContentResolver resolver, String name) "," Look up a name in the database. <br /><br />"
"android.provider.Settings.System.putString (ContentResolver resolver, String name, String value) "," Store a name/value pair into the database. <br /><br />"
"android.provider.Settings.System.putInt (ContentResolver cr, String name, int value) "," Convenience function for updating a single settings value as an integer. <br /><br />"
"android.provider.Settings.System.putLong (ContentResolver cr, String name, long value) "," Convenience function for updating a single settings value as a long integer. <br /><br />"
"android.provider.Settings.System.getUriFor (String name) "," Construct the content URI for a particular name/value pair, useful for monitoring changes with a ContentObserver. <br /><br />"
"android.provider.Settings.System.getInt (ContentResolver cr, String name) "," Convenience function for retrieving a single system settings value as an integer. <br /><br />"
"android.provider.Settings.System.getLong (ContentResolver cr, String name) "," Convenience function for retrieving a single system settings value as a long. <br /><br />"
"android.provider.Settings.System.getLong (ContentResolver cr, String name, long def) "," Convenience function for retrieving a single system settings value as a long. <br /><br />"
"android.provider.SyncStateContract.Helpers.newSetOperation (Uri uri, Account account, byte[] data) "," Creates and returns a ContentProviderOperation that assigns the data array as the sync state for the given account. <br /><br />"
"android.provider.SyncStateContract.Helpers.get (ContentProviderClient provider, Uri uri, Account account) "," Get the sync state that is associated with the account or null. <br /><br />"
"android.provider.SyncStateContract.Helpers.getWithUri (ContentProviderClient provider, Uri uri, Account account) "," no description <br /><br />"
"android.provider.SyncStateContract.Helpers.newUpdateOperation (Uri uri, byte[] data) "," Creates and returns a ContentProviderOperation that assigns the data array as the sync state for the given account. <br /><br />"
"android.provider.SyncStateContract.Helpers.set (ContentProviderClient provider, Uri uri, Account account, byte[] data) "," Assigns the data array as the sync state for the given account. <br /><br />"
"android.provider.SyncStateContract.Helpers.insert (ContentProviderClient provider, Uri uri, Account account, byte[] data) "," no description <br /><br />"
"android.provider.SyncStateContract.Helpers.update (ContentProviderClient provider, Uri uri, byte[] data) "," no description <br /><br />"
"android.provider.Telephony.Sms.getDefaultSmsPackage (Context context) "," Used to determine the currently configured default SMS package. <br /><br />"
"android.provider.Telephony.Sms.Intents.getMessagesFromIntent (Intent intent) "," Read the PDUs out of an SMS_RECEIVED_ACTION or a DATA_SMS_RECEIVED_ACTION intent. <br /><br />"
"android.provider.UserDictionary.Words.addWord (Context context, String word, int frequency, String shortcut, Locale locale) "," Adds a word to the dictionary, with the given frequency and the specified locale type. <br /><br />"
"android.provider.UserDictionary.Words.addWord (Context context, String word, int frequency, int localeType)    This method was deprecated in API level 16. Please use addWord (Context, String, int, String, Locale) "," This method was deprecated in API level 16. Please use addWord(Context, String, int, String, Locale) instead. <br /><br />"
"android.provider.VoicemailContract.Status.buildSourceUri (String packageName) "," A convenience method to build status URI specific to a source package by appending PARAM_KEY_SOURCE_PACKAGE param to the base URI. <br /><br />"
"android.provider.VoicemailContract.Voicemails.buildSourceUri (String packageName) "," A convenience method to build voicemail URI specific to a source package by appending PARAM_KEY_SOURCE_PACKAGE param to the base URI. <br /><br />"
"android.renderscript.Allocation.copyFrom (Allocation a) "," Copy an Allocation from an Allocation. <br /><br />"
"android.renderscript.Allocation.copyFromUnchecked (byte[] d) "," Copy into this Allocation from an array. <br /><br />"
"android.renderscript.Allocation.createSized (RenderScript rs, Element e, int count) "," Creates an Allocation with a specified number of given elements <br /><br />"
"android.renderscript.Allocation.getType () "," Get the Type of the Allocation. <br /><br />"
"android.renderscript.Allocation.copyFromUnchecked (int[] d) "," Copy into this Allocation from an array. <br /><br />"
"android.renderscript.Allocation.copy1DRangeFrom (int off, int count, int[] d) "," Copy an array into part of this Allocation. <br /><br />"
"android.renderscript.Allocation.copyFrom (short[] d) "," Copy into this Allocation from an array. <br /><br />"
"android.renderscript.Allocation.getElement () "," Get the Element of the Type of the Allocation. <br /><br />"
"android.renderscript.Allocation.resize (int dimX) "," This method was deprecated in API level 18. RenderScript objects should be immutable once created. The replacement is to create a new allocation and copy the contents. This function will throw an exception if API 21 or higher is used. <br /><br />"
"android.renderscript.Allocation.copy1DRangeFrom (int off, int count, Object array) "," Copy an array into part of this Allocation. <br /><br />"
"android.renderscript.Allocation.copyFromUnchecked (Object array) "," Copy into this Allocation from an array. <br /><br />"
"android.renderscript.Allocation.copyTo (Object array) "," Copy from the Allocation into an array. <br /><br />"
"android.renderscript.Allocation.createFromBitmap (RenderScript rs, Bitmap b, Allocation.MipmapControl mips, int usage) "," Creates an Allocation from a Bitmap. <br /><br />"
"android.renderscript.Allocation.createTyped (RenderScript rs, Type type, int usage) "," Creates an Allocation with the size specified by the type and no mipmaps generated by default <br /><br />"
"android.renderscript.Allocation.copy2DRangeFrom (int xoff, int yoff, Bitmap data) "," Copy a Bitmap into an Allocation. <br /><br />"
"android.renderscript.Allocation.createCubemapFromCubeFaces (RenderScript rs, Bitmap xpos, Bitmap xneg, Bitmap ypos, Bitmap yneg, Bitmap zpos, Bitmap zneg, Allocation.MipmapControl mips, int usage) "," Creates a cubemap Allocation from 6 Bitmap objects containing the cube faces. <br /><br />"
"android.renderscript.Allocation.copy2DRangeFrom (int xoff, int yoff, int w, int h, Object array) "," Copy from an array into a rectangular region in this Allocation. <br /><br />"
"android.renderscript.Allocation.copy1DRangeFrom (int off, int count, Allocation data, int dataOff) "," Copy part of an Allocation into this Allocation. <br /><br />"
"android.renderscript.Allocation.copyTo (short[] d) "," Copy from the Allocation into a short array. <br /><br />"
"android.renderscript.Allocation.copyFrom (byte[] d) "," Copy into this Allocation from an array. <br /><br />"
"android.renderscript.Allocation.copy1DRangeFromUnchecked (int off, int count, float[] d) "," Copy an array into part of this Allocation. <br /><br />"
"android.renderscript.Allocation.getBytesSize () "," Get the size of the Allocation in bytes. <br /><br />"
"android.renderscript.Allocation.createTyped (RenderScript rs, Type type) "," Creates an Allocation for use by scripts with a given Type and no mipmaps <br /><br />"
"android.renderscript.Allocation.copyFrom (BaseObj[] d) "," Copy an array of RS objects to the Allocation. <br /><br />"
"android.renderscript.Allocation.createSized (RenderScript rs, Element e, int count, int usage) "," Creates an Allocation with a specified number of given elements <br /><br />"
"android.renderscript.Allocation.generateMipmaps () "," Generate a mipmap chain. <br /><br />"
"android.renderscript.Allocation.copy1DRangeFrom (int off, int count, byte[] d) "," Copy an array into part of this Allocation. <br /><br />"
"android.renderscript.Allocation.syncAll (int srcLocation) "," Propagate changes from one usage of the Allocation to the other usages of the Allocation. <br /><br />"
"android.renderscript.Allocation.copyFrom (Bitmap b) "," Copy into an Allocation from a Bitmap. <br /><br />"
"android.renderscript.Allocation.createFromBitmap (RenderScript rs, Bitmap b) "," Creates an Allocation from a Bitmap. <br /><br />"
"android.renderscript.Allocation.setOnBufferAvailableListener (Allocation.OnBufferAvailableListener callback) "," Set a notification handler for USAGE_IO_INPUT. <br /><br />"
"android.renderscript.Allocation.createCubemapFromBitmap (RenderScript rs, Bitmap b) "," Creates a non-mipmapped cubemap Allocation for use as a graphics texture from a Bitmap containing the horizontal list of cube faces. <br /><br />"
"android.renderscript.Allocation.getUsage () "," Get the usage flags of the Allocation. <br /><br />"
"android.renderscript.Allocation.copyFrom (Object array) "," Copy into this Allocation from an array. <br /><br />"
"android.renderscript.Allocation.copy2DRangeFrom (int xoff, int yoff, int w, int h, Allocation data, int dataXoff, int dataYoff) "," Copy a rectangular region from an Allocation into a rectangular region in this Allocation. <br /><br />"
"android.renderscript.Allocation.copy2DRangeFrom (int xoff, int yoff, int w, int h, short[] data) "," Copy from an array into a rectangular region in this Allocation. <br /><br />"
"android.renderscript.Allocation.copy1DRangeFrom (int off, int count, float[] d) "," Copy an array into part of this Allocation. <br /><br />"
"android.renderscript.Allocation.copy1DRangeFromUnchecked (int off, int count, int[] d) "," Copy an array into part of this Allocation. <br /><br />"
"android.renderscript.Allocation.copy2DRangeFrom (int xoff, int yoff, int w, int h, float[] data) "," Copy from an array into a rectangular region in this Allocation. <br /><br />"
"android.renderscript.Allocation.copyFromUnchecked (float[] d) "," Copy into this Allocation from an array. <br /><br />"
"android.renderscript.Allocation.createCubemapFromCubeFaces (RenderScript rs, Bitmap xpos, Bitmap xneg, Bitmap ypos, Bitmap yneg, Bitmap zpos, Bitmap zneg) "," Creates a non-mipmapped cubemap Allocation for use as a sampler input from 6 Bitmap objects containing the cube faces. <br /><br />"
"android.renderscript.Allocation.createFromBitmapResource (RenderScript rs, Resources res, int id) "," Creates a non-mipmapped Allocation to use as a graphics texture from the Bitmap referenced by resource ID. <br /><br />"
"android.renderscript.Allocation.copy1DRangeFrom (int off, int count, short[] d) "," Copy an array into part of this Allocation. <br /><br />"
"android.renderscript.Allocation.copyTo (int[] d) "," Copy from the Allocation into a int array. <br /><br />"
"android.renderscript.Allocation.copyTo (Bitmap b) "," Copy from the Allocation into a Bitmap. <br /><br />"
"android.renderscript.Allocation.copyTo (float[] d) "," Copy from the Allocation into a float array. <br /><br />"
"android.renderscript.Allocation.createFromBitmapResource (RenderScript rs, Resources res, int id, Allocation.MipmapControl mips, int usage) "," Creates an Allocation from the Bitmap referenced by resource ID. <br /><br />"
"android.renderscript.Allocation.setSurface (Surface sur) "," Associate a Surface with this Allocation. <br /><br />"
"android.renderscript.Allocation.copyTo (byte[] d) "," Copy from the Allocation into a byte array. <br /><br />"
"android.renderscript.Allocation.copyFromUnchecked (short[] d) "," Copy into this Allocation from an array. <br /><br />"
"android.renderscript.Allocation.ioSend () "," Send a buffer to the output stream. <br /><br />"
"android.renderscript.Allocation.copyFrom (int[] d) "," Copy into this Allocation from an array. <br /><br />"
"android.renderscript.Allocation.getSurface () "," Returns the handle to a raw buffer that is being managed by the screen compositor. <br /><br />"
"android.renderscript.Allocation.setFromFieldPacker (int xoff, FieldPacker fp) "," This is only intended to be used by auto-generated code reflected from the RenderScript script files and should not be used by developers. <br /><br />"
"android.renderscript.Allocation.copyFrom (float[] d) "," Copy into this Allocation from an array. <br /><br />"
"android.renderscript.Allocation.setFromFieldPacker (int xoff, int component_number, FieldPacker fp) "," This is only intended to be used by auto-generated code reflected from the RenderScript script files. <br /><br />"
"android.renderscript.Allocation.copy1DRangeFromUnchecked (int off, int count, Object array) "," Copy an array into part of this Allocation. <br /><br />"
"android.renderscript.Allocation.createTyped (RenderScript rs, Type type, Allocation.MipmapControl mips, int usage) "," Creates a new Allocation with the given Type, mipmap flag, and usage flags. <br /><br />"
"android.renderscript.Allocation.copy2DRangeFrom (int xoff, int yoff, int w, int h, int[] data) "," Copy from an array into a rectangular region in this Allocation. <br /><br />"
"android.renderscript.Allocation.copy2DRangeFrom (int xoff, int yoff, int w, int h, byte[] data) "," Copy from an array into a rectangular region in this Allocation. <br /><br />"
"android.renderscript.Allocation.copy1DRangeFromUnchecked (int off, int count, byte[] d) "," Copy an array into part of this Allocation. <br /><br />"
"android.renderscript.Allocation.copy1DRangeFromUnchecked (int off, int count, short[] d) "," Copy an array into part of this Allocation. <br /><br />"
"android.renderscript.Allocation.ioReceive () "," Receive the latest input into the Allocation. <br /><br />"
"android.renderscript.Allocation.createFromString (RenderScript rs, String str, int usage) "," Creates an Allocation containing string data encoded in UTF-8 format. <br /><br />"
"android.renderscript.Allocation.createCubemapFromBitmap (RenderScript rs, Bitmap b, Allocation.MipmapControl mips, int usage) "," Creates a cubemap Allocation from a Bitmap containing the horizontal list of cube faces. <br /><br />"
"android.renderscript.Allocation.OnBufferAvailableListener.onBufferAvailable (Allocation a) "," no description <br /><br />"
"android.renderscript.AllocationAdapter.setLOD (int lod) "," Set the active LOD. <br /><br />"
"android.renderscript.AllocationAdapter.create2D (RenderScript rs, Allocation a) "," no description <br /><br />"
"android.renderscript.AllocationAdapter.setY (int y) "," Set the active Y. <br /><br />"
"android.renderscript.AllocationAdapter.setFace (Type.CubemapFace cf) "," Set the active Face. <br /><br />"
"android.renderscript.AllocationAdapter.create1D (RenderScript rs, Allocation a) "," no description <br /><br />"
"android.renderscript.AllocationAdapter.resize (int dimX) "," This method is deprecated. RenderScript objects should be immutable once created. The replacement is to create a new allocation and copy the contents. This function will throw an exception if API 21 or higher is used. <br /><br />"
"android.renderscript.AllocationAdapter.setZ (int z) "," Set the active Z. <br /><br />"
"android.renderscript.BaseObj.getName () "," no description <br /><br />"
"android.renderscript.BaseObj.destroy () "," Frees any native resources associated with this object. <br /><br />"
"android.renderscript.BaseObj.setName (String name) "," setName assigns a name to an object. <br /><br />"
"android.renderscript.BaseObj.equals (Object obj) "," Compare the current BaseObj with another BaseObj for equality. <br /><br />"
"android.renderscript.BaseObj.hashCode () "," Calculates the hash code value for a BaseObj. <br /><br />"
"android.renderscript.Element.Builder.add (Element element, String name) "," Add a single element to this Element. <br /><br />"
"android.renderscript.Element.Builder.create () "," Create the element from this builder. <br /><br />"
"android.renderscript.Element.Builder.add (Element element, String name, int arraySize) "," Add an array of elements to this element. <br /><br />"
"android.renderscript.FieldPacker.addU64 (long v) "," no description <br /><br />"
"android.renderscript.FieldPacker.subalign (int v) "," no description <br /><br />"
"android.renderscript.FieldPacker.subMatrix2f () "," no description <br /><br />"
"android.renderscript.FieldPacker.subI16 () "," no description <br /><br />"
"android.renderscript.FieldPacker.subInt4 () "," no description <br /><br />"
"android.renderscript.FieldPacker.addI16 (Short4 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addI16 (Short2 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addF64 (double v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addF64 (Double3 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addU64 (Long4 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addI64 (Long3 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.subMatrix3f () "," no description <br /><br />"
"android.renderscript.FieldPacker.addI8 (Byte2 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addI64 (Long4 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.subShort2 () "," no description <br /><br />"
"android.renderscript.FieldPacker.addF32 (Float4 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addMatrix (Matrix3f v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addU16 (Int2 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addU8 (short v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addI8 (Byte3 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addI8 (Byte4 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.subF64 () "," no description <br /><br />"
"android.renderscript.FieldPacker.align (int v) "," no description <br /><br />"
"android.renderscript.FieldPacker.subByte2 () "," no description <br /><br />"
"android.renderscript.FieldPacker.subLong3 () "," no description <br /><br />"
"android.renderscript.FieldPacker.addI32 (int v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addI8 (byte v) "," no description <br /><br />"
"android.renderscript.FieldPacker.subLong4 () "," no description <br /><br />"
"android.renderscript.FieldPacker.subLong2 () "," no description <br /><br />"
"android.renderscript.FieldPacker.addObj (BaseObj obj) "," no description <br /><br />"
"android.renderscript.FieldPacker.addU32 (Long2 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.subByte3 () "," no description <br /><br />"
"android.renderscript.FieldPacker.subInt2 () "," no description <br /><br />"
"android.renderscript.FieldPacker.addU16 (Int4 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addU32 (Long3 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.subI8 () "," no description <br /><br />"
"android.renderscript.FieldPacker.subInt3 () "," no description <br /><br />"
"android.renderscript.FieldPacker.addU32 (Long4 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addU16 (Int3 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addBoolean (boolean v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addI32 (Int4 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addF32 (Float2 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.subI32 () "," no description <br /><br />"
"android.renderscript.FieldPacker.subDouble2 () "," no description <br /><br />"
"android.renderscript.FieldPacker.skip (int i) "," no description <br /><br />"
"android.renderscript.FieldPacker.addI16 (Short3 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addU32 (long v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addU8 (Short3 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addMatrix (Matrix2f v) "," no description <br /><br />"
"android.renderscript.FieldPacker.subDouble3 () "," no description <br /><br />"
"android.renderscript.FieldPacker.subByte4 () "," no description <br /><br />"
"android.renderscript.FieldPacker.reset (int i) "," no description <br /><br />"
"android.renderscript.FieldPacker.addU16 (int v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addU8 (Short2 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addU64 (Long2 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.subShort3 () "," no description <br /><br />"
"android.renderscript.FieldPacker.addF32 (Float3 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.subDouble4 () "," no description <br /><br />"
"android.renderscript.FieldPacker.addI64 (Long2 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.subShort4 () "," no description <br /><br />"
"android.renderscript.FieldPacker.addF64 (Double4 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addF64 (Double2 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.subBoolean () "," no description <br /><br />"
"android.renderscript.FieldPacker.addU64 (Long3 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.subFloat2 () "," no description <br /><br />"
"android.renderscript.FieldPacker.subMatrix4f () "," no description <br /><br />"
"android.renderscript.FieldPacker.subFloat4 () "," no description <br /><br />"
"android.renderscript.FieldPacker.addI64 (long v) "," no description <br /><br />"
"android.renderscript.FieldPacker.subI64 () "," no description <br /><br />"
"android.renderscript.FieldPacker.getData () "," no description <br /><br />"
"android.renderscript.FieldPacker.addF32 (float v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addMatrix (Matrix4f v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addI32 (Int3 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.subFloat3 () "," no description <br /><br />"
"android.renderscript.FieldPacker.reset () "," no description <br /><br />"
"android.renderscript.FieldPacker.addI16 (short v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addU8 (Short4 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.addI32 (Int2 v) "," no description <br /><br />"
"android.renderscript.FieldPacker.subF32 () "," no description <br /><br />"
"android.renderscript.Matrix2f.set (int x, int y, float v) "," Sets the value for a given row and column <br /><br />"
"android.renderscript.Matrix2f.loadRotate (float rot) "," Sets current values to be a rotation matrix of given angle <br /><br />"
"android.renderscript.Matrix2f.load (Matrix2f src) "," Sets the values of the matrix to those of the parameter <br /><br />"
"android.renderscript.Matrix2f.getArray () "," Return a reference to the internal array representing matrix values. <br /><br />"
"android.renderscript.Matrix2f.loadScale (float x, float y) "," Sets current values to be a scale matrix of given dimensions <br /><br />"
"android.renderscript.Matrix2f.multiply (Matrix2f rhs) "," Post-multiplies the current matrix by a given parameter <br /><br />"
"android.renderscript.Matrix2f.loadIdentity () "," Sets the matrix values to identity <br /><br />"
"android.renderscript.Matrix2f.loadMultiply (Matrix2f lhs, Matrix2f rhs) "," Sets current values to be the result of multiplying two given matrices <br /><br />"
"android.renderscript.Matrix2f.transpose () "," Sets the current matrix to its transpose <br /><br />"
"android.renderscript.Matrix2f.scale (float x, float y) "," Modifies the current matrix by post-multiplying it with a scale matrix of given dimensions <br /><br />"
"android.renderscript.Matrix2f.rotate (float rot) "," Modifies the current matrix by post-multiplying it with a rotation matrix of given angle <br /><br />"
"android.renderscript.Matrix2f.get (int x, int y) "," Returns the value for a given row and column <br /><br />"
"android.renderscript.Matrix3f.loadMultiply (Matrix3f lhs, Matrix3f rhs) "," Sets current values to be the result of multiplying two given matrices <br /><br />"
"android.renderscript.Matrix3f.scale (float x, float y, float z) "," Modifies the current matrix by post-multiplying it with a scale matrix of given dimensions <br /><br />"
"android.renderscript.Matrix3f.loadScale (float x, float y) "," Makes the upper 2x2 a scale matrix of given dimensions <br /><br />"
"android.renderscript.Matrix3f.loadIdentity () "," Sets the matrix values to identity <br /><br />"
"android.renderscript.Matrix3f.loadRotate (float rot, float x, float y, float z) "," Sets current values to be a rotation matrix of certain angle about a given axis <br /><br />"
"android.renderscript.Matrix3f.loadScale (float x, float y, float z) "," Sets current values to be a scale matrix of given dimensions <br /><br />"
"android.renderscript.Matrix3f.loadTranslate (float x, float y) "," Sets current values to be a translation matrix of given dimensions <br /><br />"
"android.renderscript.Matrix3f.transpose () "," Sets the current matrix to its transpose <br /><br />"
"android.renderscript.Matrix3f.translate (float x, float y) "," Modifies the current matrix by post-multiplying it with a translation matrix of given dimensions <br /><br />"
"android.renderscript.Matrix3f.multiply (Matrix3f rhs) "," Post-multiplies the current matrix by a given parameter <br /><br />"
"android.renderscript.Matrix3f.get (int x, int y) "," Returns the value for a given row and column <br /><br />"
"android.renderscript.Matrix3f.set (int x, int y, float v) "," Sets the value for a given row and column <br /><br />"
"android.renderscript.Matrix3f.loadRotate (float rot) "," Makes the upper 2x2 a rotation matrix of the given angle <br /><br />"
"android.renderscript.Matrix3f.load (Matrix3f src) "," Sets the values of the matrix to those of the parameter <br /><br />"
"android.renderscript.Matrix3f.getArray () "," Return a reference to the internal array representing matrix values. <br /><br />"
"android.renderscript.Matrix3f.scale (float x, float y) "," Modifies the upper 2x2 of the current matrix by post-multiplying it with a scale matrix of given dimensions <br /><br />"
"android.renderscript.Matrix3f.rotate (float rot) "," Modifies the upper 2x2 of the current matrix by post-multiplying it with a rotation matrix of given angle <br /><br />"
"android.renderscript.Matrix3f.rotate (float rot, float x, float y, float z) "," Modifies the current matrix by post-multiplying it with a rotation matrix of certain angle about a given axis <br /><br />"
"android.renderscript.Matrix4f.multiply (Matrix4f rhs) "," Post-multiplies the current matrix by a given parameter <br /><br />"
"android.renderscript.Matrix4f.translate (float x, float y, float z) "," Modifies the current matrix by post-multiplying it with a translation matrix of given dimensions <br /><br />"
"android.renderscript.Matrix4f.scale (float x, float y, float z) "," Modifies the current matrix by post-multiplying it with a scale matrix of given dimensions <br /><br />"
"android.renderscript.Matrix4f.loadIdentity () "," Sets the matrix values to identity <br /><br />"
"android.renderscript.Matrix4f.loadProjectionNormalized (int w, int h)   Helper function to set the current values to a perspective projection matrix with aspect ratio defined by the parameters and  (near, far),  (bottom, top) mapping to  (-1, 1) "," Helper function to set the current values to a perspective projection matrix with aspect ratio defined by the parameters and (near, far), (bottom, top) mapping to (-1, 1) at z = 0 <br /><br />"
"android.renderscript.Matrix4f.loadScale (float x, float y, float z) "," Sets current values to be a scale matrix of given dimensions <br /><br />"
"android.renderscript.Matrix4f.loadRotate (float rot, float x, float y, float z) "," Sets current values to be a rotation matrix of certain angle about a given axis <br /><br />"
"android.renderscript.Matrix4f.transpose () "," Sets the current matrix to its transpose <br /><br />"
"android.renderscript.Matrix4f.loadTranslate (float x, float y, float z) "," Sets current values to be a translation matrix of given dimensions <br /><br />"
"android.renderscript.Matrix4f.get (int x, int y) "," Returns the value for a given row and column <br /><br />"
"android.renderscript.Matrix4f.loadOrtho (float l, float r, float b, float t, float n, float f) "," Set current values to be an orthographic projection matrix <br /><br />"
"android.renderscript.Matrix4f.loadMultiply (Matrix4f lhs, Matrix4f rhs) "," Sets current values to be the result of multiplying two given matrices <br /><br />"
"android.renderscript.Matrix4f.set (int x, int y, float v) "," Sets the value for a given row and column <br /><br />"
"android.renderscript.Matrix4f.load (Matrix4f src) "," Sets the values of the matrix to those of the parameter <br /><br />"
"android.renderscript.Matrix4f.inverse () "," Sets the current matrix to its inverse <br /><br />"
"android.renderscript.Matrix4f.getArray () "," Return a reference to the internal array representing matrix values. <br /><br />"
"android.renderscript.Matrix4f.inverseTranspose () "," Sets the current matrix to its inverse transpose <br /><br />"
"android.renderscript.Matrix4f.loadPerspective (float fovy, float aspect, float near, float far) "," Sets current values to be a perspective projection matrix <br /><br />"
"android.renderscript.Matrix4f.loadFrustum (float l, float r, float b, float t, float n, float f) "," Sets current values to be a perspective projection matrix <br /><br />"
"android.renderscript.Matrix4f.loadOrthoWindow (int w, int h) "," Set current values to be an orthographic projection matrix with the right and bottom clipping planes set to the given values. <br /><br />"
"android.renderscript.Matrix4f.rotate (float rot, float x, float y, float z) "," Modifies the current matrix by post-multiplying it with a rotation matrix of certain angle about a given axis <br /><br />"
"android.renderscript.RenderScript.getMessageHandler () "," no description <br /><br />"
"android.renderscript.RenderScript.destroy () "," Destroys this RenderScript context. <br /><br />"
"android.renderscript.RenderScript.contextDump () "," Print the currently available debugging information about the state of the RS context to the log. <br /><br />"
"android.renderscript.RenderScript.setErrorHandler (RenderScript.RSErrorHandler msg) "," no description <br /><br />"
"android.renderscript.RenderScript.getErrorHandler () "," no description <br /><br />"
"android.renderscript.RenderScript.setPriority (RenderScript.Priority p) "," Change the priority of the worker threads for this context. <br /><br />"
"android.renderscript.RenderScript.create (Context ctx, RenderScript.ContextType ct, int flags) "," Create a RenderScript context. <br /><br />"
"android.renderscript.RenderScript.finish ()   Wait for any pending asynchronous opeations  (such as copies to a RS allocation or RS script executions) "," Wait for any pending asynchronous opeations (such as copies to a RS allocation or RS script executions) to complete. <br /><br />"
"android.renderscript.RenderScript.sendMessage (int id, int[] data) "," Place a message into the message queue to be sent back to the message handler once all previous commands have been executed. <br /><br />"
"android.renderscript.RenderScript.getApplicationContext () "," Gets the application context associated with the RenderScript context. <br /><br />"
"android.renderscript.RenderScript.create (Context ctx) "," Create a RenderScript context. <br /><br />"
"android.renderscript.RenderScript.setMessageHandler (RenderScript.RSMessageHandler msg) "," no description <br /><br />"
"android.renderscript.RenderScript.create (Context ctx, RenderScript.ContextType ct) "," Create a RenderScript context. <br /><br />"
"android.renderscript.RenderScript.RSErrorHandler.run () "," Starts executing the active part of the class' code. <br /><br />"
"android.renderscript.RenderScript.RSMessageHandler.run () "," Starts executing the active part of the class' code. <br /><br />"
"android.renderscript.Sampler.Builder.create () "," no description <br /><br />"
"android.renderscript.Sampler.Builder.setWrapT (Sampler.Value v) "," no description <br /><br />"
"android.renderscript.Sampler.Builder.setMagnification (Sampler.Value v) "," no description <br /><br />"
"android.renderscript.Sampler.Builder.setWrapS (Sampler.Value v) "," no description <br /><br />"
"android.renderscript.Sampler.Builder.setAnisotropy (float v) "," no description <br /><br />"
"android.renderscript.Sampler.Builder.setMinification (Sampler.Value v) "," no description <br /><br />"
"android.renderscript.Script.FieldBase.getAllocation () "," no description <br /><br />"
"android.renderscript.Script.FieldBase.getType () "," no description <br /><br />"
"android.renderscript.Script.FieldBase.getElement () "," no description <br /><br />"
"android.renderscript.Script.FieldBase.updateAllocation () "," no description <br /><br />"
"android.renderscript.Script.LaunchOptions.setZ (int zstartArg, int zendArg) "," Set the Z range. <br /><br />"
"android.renderscript.Script.LaunchOptions.getYEnd () "," Returns the current Y end <br /><br />"
"android.renderscript.Script.LaunchOptions.setX (int xstartArg, int xendArg) "," Set the X range. <br /><br />"
"android.renderscript.Script.LaunchOptions.getZEnd () "," Returns the current Z end <br /><br />"
"android.renderscript.Script.LaunchOptions.setY (int ystartArg, int yendArg) "," Set the Y range. <br /><br />"
"android.renderscript.Script.LaunchOptions.getYStart () "," Returns the current Y start <br /><br />"
"android.renderscript.Script.LaunchOptions.getXEnd () "," Returns the current X end <br /><br />"
"android.renderscript.Script.LaunchOptions.getZStart () "," Returns the current Z start <br /><br />"
"android.renderscript.Script.LaunchOptions.getXStart () "," Returns the current X start <br /><br />"
"android.renderscript.ScriptGroup.Builder.addKernel (Script.KernelID k) "," Adds a Kernel to the group. <br /><br />"
"android.renderscript.ScriptGroup.Builder.addConnection (Type t, Script.KernelID from, Script.FieldID to) "," Adds a connection to the group. <br /><br />"
"android.renderscript.ScriptGroup.Builder.create () "," Creates the Script group. <br /><br />"
"android.renderscript.ScriptGroup.Builder.addConnection (Type t, Script.KernelID from, Script.KernelID to) "," Adds a connection to the group. <br /><br />"
"android.renderscript.ScriptIntrinsic3DLUT.setLUT (Allocation lut) "," Sets the Allocation to be used as the lookup table. <br /><br />"
"android.renderscript.ScriptIntrinsic3DLUT.getKernelID () "," Get a KernelID for this intrinsic kernel. <br /><br />"
"android.renderscript.ScriptIntrinsic3DLUT.create (RenderScript rs, Element e)   Supported elements types are U8_4 (RenderScript) "," Supported elements types are U8_4(RenderScript) The defaults tables are identity. <br /><br />"
"android.renderscript.ScriptIntrinsic3DLUT.forEach (Allocation ain, Allocation aout, Script.LaunchOptions opt) "," Invoke the kernel and apply the lookup to each cell of ain and copy to aout. <br /><br />"
"android.renderscript.ScriptIntrinsic3DLUT.forEach (Allocation ain, Allocation aout) "," Invoke the kernel and apply the lookup to each cell of ain and copy to aout. <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachAdd (Allocation ain, Allocation aout)   Sets dst = min (src + dst, 1.0) "," Sets dst = min(src + dst, 1.0) <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachSrcAtop (Allocation ain, Allocation aout)   dst.rgb = src.rgb * dst.a +  (1.0 - src.a) "," dst.rgb = src.rgb * dst.a + (1.0 - src.a) * dst.rgb dst.a = dst.a <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.getKernelIDSrcAtop () "," Get a KernelID for the SrcAtop kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.create (RenderScript rs, Element e)   Supported elements types are U8_4 (RenderScript) "," Supported elements types are U8_4(RenderScript) <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachSubtract (Allocation ain, Allocation aout, Script.LaunchOptions opt)   Sets dst = max (dst - src, 0.0) "," Sets dst = max(dst - src, 0.0) <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachSrcOut (Allocation ain, Allocation aout)   Sets dst = src *  (1.0 - dst.a) "," Sets dst = src * (1.0 - dst.a) <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachSubtract (Allocation ain, Allocation aout)   Sets dst = max (dst - src, 0.0) "," Sets dst = max(dst - src, 0.0) <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachDstIn (Allocation ain, Allocation aout, Script.LaunchOptions opt) "," Sets dst = dst * src.a <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachAdd (Allocation ain, Allocation aout, Script.LaunchOptions opt)   Sets dst = min (src + dst, 1.0) "," Sets dst = min(src + dst, 1.0) <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachMultiply (Allocation ain, Allocation aout) "," Sets dst = src * dst <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.getKernelIDSrcOver () "," Get a KernelID for the SrcOver kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.getKernelIDDst () "," Get a KernelID for the Dst kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.getKernelIDSrc () "," Get a KernelID for the Src kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachSrcOver (Allocation ain, Allocation aout, Script.LaunchOptions opt)   Sets dst = src + dst *  (1.0 - src.a) "," Sets dst = src + dst * (1.0 - src.a) <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachSrcOver (Allocation ain, Allocation aout)   Sets dst = src + dst *  (1.0 - src.a) "," Sets dst = src + dst * (1.0 - src.a) <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachMultiply (Allocation ain, Allocation aout, Script.LaunchOptions opt) "," Sets dst = src * dst <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.getKernelIDXor () "," Get a KernelID for the Xor kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachXor (Allocation ain, Allocation aout, Script.LaunchOptions opt) "," Sets dst = {src.r ^ dst.r, src.g ^ dst.g, src.b ^ dst.b, src.a ^ dst.a} <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachDstOut (Allocation ain, Allocation aout, Script.LaunchOptions opt)   Sets dst = dst *  (1.0 - src.a) "," Sets dst = dst * (1.0 - src.a) <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.getKernelIDDstAtop () "," Get a KernelID for the DstAtop kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachDstOut (Allocation ain, Allocation aout)   Sets dst = dst *  (1.0 - src.a) "," Sets dst = dst * (1.0 - src.a) <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachDstOver (Allocation ain, Allocation aout, Script.LaunchOptions opt)   Sets dst = dst + src *  (1.0 - dst.a) "," Sets dst = dst + src * (1.0 - dst.a) <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachDst (Allocation ain, Allocation aout) "," Sets dst = dst This is a NOP. <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachDstAtop (Allocation ain, Allocation aout, Script.LaunchOptions opt)   dst = dst.rgb * src.a +  (1.0 - dst.a) "," dst = dst.rgb * src.a + (1.0 - dst.a) * src.rgb dst.a = src.a <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachDstOver (Allocation ain, Allocation aout)   Sets dst = dst + src *  (1.0 - dst.a) "," Sets dst = dst + src * (1.0 - dst.a) <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachSrc (Allocation ain, Allocation aout) "," Sets dst = src <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachClear (Allocation ain, Allocation aout) "," Sets dst = {0, 0, 0, 0} <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.getKernelIDClear () "," Get a KernelID for the Clear kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.getKernelIDAdd () "," Get a KernelID for the Add kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachDstAtop (Allocation ain, Allocation aout)   dst = dst.rgb * src.a +  (1.0 - dst.a) "," dst = dst.rgb * src.a + (1.0 - dst.a) * src.rgb dst.a = src.a <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.getKernelIDMultiply () "," Get a KernelID for the Multiply kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.getKernelIDDstOut () "," Get a KernelID for the DstOut kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachDst (Allocation ain, Allocation aout, Script.LaunchOptions opt) "," Sets dst = dst This is a NOP. <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachSrcAtop (Allocation ain, Allocation aout, Script.LaunchOptions opt)   dst.rgb = src.rgb * dst.a +  (1.0 - src.a) "," dst.rgb = src.rgb * dst.a + (1.0 - src.a) * dst.rgb dst.a = dst.a <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachSrcIn (Allocation ain, Allocation aout) "," Sets dst = src * dst.a <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.getKernelIDSrcOut () "," Get a KernelID for the SrcOut kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.getKernelIDSubtract () "," Get a KernelID for the Subtract kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.getKernelIDDstOver () "," Get a KernelID for the DstOver kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachSrc (Allocation ain, Allocation aout, Script.LaunchOptions opt) "," Sets dst = src <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachXor (Allocation ain, Allocation aout) "," Sets dst = {src.r ^ dst.r, src.g ^ dst.g, src.b ^ dst.b, src.a ^ dst.a} <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachSrcOut (Allocation ain, Allocation aout, Script.LaunchOptions opt)   Sets dst = src *  (1.0 - dst.a) "," Sets dst = src * (1.0 - dst.a) <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachClear (Allocation ain, Allocation aout, Script.LaunchOptions opt) "," Sets dst = {0, 0, 0, 0} <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachSrcIn (Allocation ain, Allocation aout, Script.LaunchOptions opt) "," Sets dst = src * dst.a <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.forEachDstIn (Allocation ain, Allocation aout) "," Sets dst = dst * src.a <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.getKernelIDSrcIn () "," Get a KernelID for the SrcIn kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicBlend.getKernelIDDstIn () "," Get a KernelID for the DstIn kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicBlur.forEach (Allocation aout, Script.LaunchOptions opt) "," Apply the filter to the input and save to the specified allocation. <br /><br />"
"android.renderscript.ScriptIntrinsicBlur.create (RenderScript rs, Element e) "," Create an intrinsic for applying a blur to an allocation. <br /><br />"
"android.renderscript.ScriptIntrinsicBlur.setRadius (float radius) "," Set the radius of the Blur. <br /><br />"
"android.renderscript.ScriptIntrinsicBlur.forEach (Allocation aout) "," Apply the filter to the input and save to the specified allocation. <br /><br />"
"android.renderscript.ScriptIntrinsicBlur.getFieldID_Input () "," Get a FieldID for the input field of this intrinsic. <br /><br />"
"android.renderscript.ScriptIntrinsicBlur.setInput (Allocation ain) "," Set the input of the blur. <br /><br />"
"android.renderscript.ScriptIntrinsicBlur.getKernelID () "," Get a KernelID for this intrinsic kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicColorMatrix.create (RenderScript rs, Element e) "," This method was deprecated in API level 19. Use the single argument version as Element is now ignored. <br /><br />"
"android.renderscript.ScriptIntrinsicColorMatrix.setGreyscale () "," Set a color matrix to convert from RGB to luminance. <br /><br />"
"android.renderscript.ScriptIntrinsicColorMatrix.setAdd (Float4 f) "," Set the value to be added after the color matrix has been applied. <br /><br />"
"android.renderscript.ScriptIntrinsicColorMatrix.setColorMatrix (Matrix4f m) "," Set the color matrix which will be applied to each cell of the image. <br /><br />"
"android.renderscript.ScriptIntrinsicColorMatrix.getKernelID () "," Get a KernelID for this intrinsic kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicColorMatrix.setYUVtoRGB () "," Set the matrix to convert from YUV to RGB with a direct copy of the 4th channel. <br /><br />"
"android.renderscript.ScriptIntrinsicColorMatrix.setRGBtoYUV () "," Set the matrix to convert from RGB to YUV with a direct copy of the 4th channel. <br /><br />"
"android.renderscript.ScriptIntrinsicColorMatrix.create (RenderScript rs) "," Create an intrinsic for applying a color matrix to an allocation. <br /><br />"
"android.renderscript.ScriptIntrinsicColorMatrix.setAdd (float r, float g, float b, float a) "," Set the value to be added after the color matrix has been applied. <br /><br />"
"android.renderscript.ScriptIntrinsicColorMatrix.forEach (Allocation ain, Allocation aout, Script.LaunchOptions opt) "," Invoke the kernel and apply the matrix to each cell of input Allocation and copy to the output Allocation. <br /><br />"
"android.renderscript.ScriptIntrinsicColorMatrix.forEach (Allocation ain, Allocation aout) "," Invoke the kernel and apply the matrix to each cell of input Allocation and copy to the output Allocation. <br /><br />"
"android.renderscript.ScriptIntrinsicColorMatrix.setColorMatrix (Matrix3f m) "," Set the color matrix which will be applied to each cell of the image. <br /><br />"
"android.renderscript.ScriptIntrinsicConvolve3x3.forEach (Allocation aout, Script.LaunchOptions opt) "," Apply the filter to the input and save to the specified allocation. <br /><br />"
"android.renderscript.ScriptIntrinsicConvolve3x3.create (RenderScript rs, Element e)   Supported elements types are U8 (RenderScript), U8_2 (RenderScript), U8_3 (RenderScript), U8_4 (RenderScript), F32 (RenderScript), F32_2 (RenderScript), F32_3 (RenderScript), and F32_4 (RenderScript) "," Supported elements types are U8(RenderScript), U8_2(RenderScript), U8_3(RenderScript), U8_4(RenderScript), F32(RenderScript), F32_2(RenderScript), F32_3(RenderScript), and F32_4(RenderScript) The default coefficients are. <br /><br />"
"android.renderscript.ScriptIntrinsicConvolve3x3.setCoefficients (float[] v) "," Set the coefficients for the convolve. <br /><br />"
"android.renderscript.ScriptIntrinsicConvolve3x3.forEach (Allocation aout) "," Apply the filter to the input and save to the specified allocation. <br /><br />"
"android.renderscript.ScriptIntrinsicConvolve3x3.getFieldID_Input () "," Get a FieldID for the input field of this intrinsic. <br /><br />"
"android.renderscript.ScriptIntrinsicConvolve3x3.setInput (Allocation ain) "," Set the input of the blur. <br /><br />"
"android.renderscript.ScriptIntrinsicConvolve3x3.getKernelID () "," Get a KernelID for this intrinsic kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicConvolve5x5.forEach (Allocation aout, Script.LaunchOptions opt) "," Apply the filter to the input and save to the specified allocation. <br /><br />"
"android.renderscript.ScriptIntrinsicConvolve5x5.create (RenderScript rs, Element e)   Supported elements types are U8 (RenderScript), U8_2 (RenderScript), U8_3 (RenderScript), U8_4 (RenderScript), F32 (RenderScript), F32_2 (RenderScript), F32_3 (RenderScript), and F32_4 (RenderScript) "," Supported elements types are U8(RenderScript), U8_2(RenderScript), U8_3(RenderScript), U8_4(RenderScript), F32(RenderScript), F32_2(RenderScript), F32_3(RenderScript), and F32_4(RenderScript) The default coefficients are. <br /><br />"
"android.renderscript.ScriptIntrinsicConvolve5x5.setCoefficients (float[] v) "," Set the coefficients for the convolve. <br /><br />"
"android.renderscript.ScriptIntrinsicConvolve5x5.forEach (Allocation aout) "," Apply the filter to the input and save to the specified allocation. <br /><br />"
"android.renderscript.ScriptIntrinsicConvolve5x5.getFieldID_Input () "," Get a FieldID for the input field of this intrinsic. <br /><br />"
"android.renderscript.ScriptIntrinsicConvolve5x5.setInput (Allocation ain) "," Set the input of the blur. <br /><br />"
"android.renderscript.ScriptIntrinsicConvolve5x5.getKernelID () "," Get a KernelID for this intrinsic kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicHistogram.getKernelID_Separate () "," Get a KernelID for this intrinsic kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicHistogram.create (RenderScript rs, Element e) "," Create an intrinsic for calculating the histogram of an uchar or uchar4 image. <br /><br />"
"android.renderscript.ScriptIntrinsicHistogram.getFieldID_Input () "," Get a FieldID for the input field of this intrinsic. <br /><br />"
"android.renderscript.ScriptIntrinsicHistogram.forEach (Allocation ain) "," Process an input buffer and place the histogram into the output allocation. <br /><br />"
"android.renderscript.ScriptIntrinsicHistogram.setOutput (Allocation aout) "," Set the output of the histogram. <br /><br />"
"android.renderscript.ScriptIntrinsicHistogram.forEach_Dot (Allocation ain, Script.LaunchOptions opt) "," Process an input buffer and place the histogram into the output allocation. <br /><br />"
"android.renderscript.ScriptIntrinsicHistogram.forEach (Allocation ain, Script.LaunchOptions opt) "," Process an input buffer and place the histogram into the output allocation. <br /><br />"
"android.renderscript.ScriptIntrinsicHistogram.setDotCoefficients (float r, float g, float b, float a) "," Set the coefficients used for the RGBA to Luminocity calculation. <br /><br />"
"android.renderscript.ScriptIntrinsicHistogram.forEach_Dot (Allocation ain) "," Process an input buffer and place the histogram into the output allocation. <br /><br />"
"android.renderscript.ScriptIntrinsicLUT.setAlpha (int index, int value) "," Set an entry in the alpha channel lookup table <br /><br />"
"android.renderscript.ScriptIntrinsicLUT.setBlue (int index, int value) "," Set an entry in the blue channel lookup table <br /><br />"
"android.renderscript.ScriptIntrinsicLUT.setGreen (int index, int value) "," Set an entry in the green channel lookup table <br /><br />"
"android.renderscript.ScriptIntrinsicLUT.setRed (int index, int value) "," Set an entry in the red channel lookup table <br /><br />"
"android.renderscript.ScriptIntrinsicLUT.getKernelID () "," Get a KernelID for this intrinsic kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicLUT.create (RenderScript rs, Element e)   Supported elements types are U8_4 (RenderScript) "," Supported elements types are U8_4(RenderScript) The defaults tables are identity. <br /><br />"
"android.renderscript.ScriptIntrinsicLUT.forEach (Allocation ain, Allocation aout, Script.LaunchOptions opt) "," Invoke the kernel and apply the lookup to each cell of ain and copy to aout. <br /><br />"
"android.renderscript.ScriptIntrinsicLUT.forEach (Allocation ain, Allocation aout) "," Invoke the kernel and apply the lookup to each cell of ain and copy to aout. <br /><br />"
"android.renderscript.ScriptIntrinsicResize.create (RenderScript rs)   Supported elements types are U8 (RenderScript), U8_2 (RenderScript), U8_3 (RenderScript), U8_4 (RenderScript) "," Supported elements types are U8(RenderScript), U8_2(RenderScript), U8_3(RenderScript), U8_4(RenderScript) <br /><br />"
"android.renderscript.ScriptIntrinsicResize.getFieldID_Input () "," Get a FieldID for the input field of this intrinsic. <br /><br />"
"android.renderscript.ScriptIntrinsicResize.forEach_bicubic (Allocation aout) "," Resize copy the input allocation to the output specified. <br /><br />"
"android.renderscript.ScriptIntrinsicResize.setInput (Allocation ain) "," Set the input of the resize. <br /><br />"
"android.renderscript.ScriptIntrinsicResize.getKernelID_bicubic () "," Get a KernelID for this intrinsic kernel. <br /><br />"
"android.renderscript.ScriptIntrinsicResize.forEach_bicubic (Allocation aout, Script.LaunchOptions opt) "," Resize copy the input allocation to the output specified. <br /><br />"
"android.renderscript.ScriptIntrinsicYuvToRGB.create (RenderScript rs, Element e) "," Create an intrinsic for converting YUV to RGB. <br /><br />"
"android.renderscript.ScriptIntrinsicYuvToRGB.forEach (Allocation aout) "," Convert the image to RGB. <br /><br />"
"android.renderscript.ScriptIntrinsicYuvToRGB.getFieldID_Input () "," Get a FieldID for the input field of this intrinsic. <br /><br />"
"android.renderscript.ScriptIntrinsicYuvToRGB.setInput (Allocation ain)   Set the input yuv allocation, must be U8 (RenderScript) "," Set the input yuv allocation, must be U8(RenderScript). <br /><br />"
"android.renderscript.ScriptIntrinsicYuvToRGB.getKernelID () "," Get a KernelID for this intrinsic kernel. <br /><br />"
"android.renderscript.Type.Builder.setFaces (boolean value) "," no description <br /><br />"
"android.renderscript.Type.Builder.create () "," Validate structure and create a new Type. <br /><br />"
"android.renderscript.Type.Builder.setZ (int value) "," no description <br /><br />"
"android.renderscript.Type.Builder.setMipmaps (boolean value) "," no description <br /><br />"
"android.renderscript.Type.Builder.setY (int value) "," no description <br /><br />"
"android.renderscript.Type.Builder.setX (int value) "," Add a dimension to the Type. <br /><br />"
"android.renderscript.Type.Builder.setYuvFormat (int yuvFormat) "," Set the YUV layout for a Type. <br /><br />"
"android.sax.Element.setEndTextElementListener (EndTextElementListener endTextElementListener) "," Sets a listener for the end of this text element. <br /><br />"
"android.sax.Element.getChild (String uri, String localName) "," Gets the child element with the given name. <br /><br />"
"android.sax.Element.setTextElementListener (TextElementListener elementListener) "," Sets start and end text element listeners at the same time. <br /><br />"
"android.sax.Element.setElementListener (ElementListener elementListener) "," Sets start and end element listeners at the same time. <br /><br />"
"android.sax.Element.requireChild (String uri, String localName) "," Gets the child element with the given name. <br /><br />"
"android.sax.Element.setStartElementListener (StartElementListener startElementListener) "," Sets a listener for the start of this element. <br /><br />"
"android.sax.Element.getChild (String localName) "," Gets the child element with the given name. <br /><br />"
"android.sax.Element.setEndElementListener (EndElementListener endElementListener) "," Sets a listener for the end of this element. <br /><br />"
"android.sax.Element.requireChild (String localName) "," Gets the child element with the given name. <br /><br />"
"android.sax.Element.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.sax.EndElementListener.end () "," Invoked at the end of an element. <br /><br />"
"android.sax.EndTextElementListener.end (String body) "," Invoked at the end of a text element with the body of the element. <br /><br />"
"android.sax.RootElement.getContentHandler () "," Gets the SAX ContentHandler. <br /><br />"
"android.sax.StartElementListener.start (Attributes attributes) "," Invoked at the beginning of an element. <br /><br />"
"android.security.KeyChain.isBoundKeyAlgorithm (String algorithm) "," Returns true if the current device's KeyChain binds any PrivateKey of the given algorithm to the device once imported or generated. <br /><br />"
"android.security.KeyChain.choosePrivateKeyAlias (Activity activity, KeyChainAliasCallback response, String[] keyTypes, Principal[] issuers, String host, int port, String alias) "," Launches an Activity for the user to select the alias for a private key and certificate pair for authentication. <br /><br />"
"android.security.KeyChain.isKeyAlgorithmSupported (String algorithm)   Returns true if the current device's KeyChain supports a specific PrivateKey type indicated by algorithm  (e.g., 'RSA') "," Returns true if the current device's KeyChain supports a specific PrivateKey type indicated by algorithm (e.g., 'RSA'). <br /><br />"
"android.security.KeyChain.getPrivateKey (Context context, String alias) "," Returns the PrivateKey for the requested alias, or null if no there is no result. <br /><br />"
"android.security.KeyChain.getCertificateChain (Context context, String alias) "," Returns the X509Certificate chain for the requested alias, or null if no there is no result. <br /><br />"
"android.security.KeyChain.createInstallIntent () "," Returns an Intent that can be used for credential installation. <br /><br />"
"android.security.KeyChainAliasCallback.alias (String alias) "," Called with the alias of the certificate chosen by the user, or null if no value was chosen. <br /><br />"
"android.security.KeyPairGeneratorSpec.Builder.setStartDate (Date startDate) "," Sets the start of the validity period for the self-signed certificate of the generated key pair. <br /><br />"
"android.security.KeyPairGeneratorSpec.Builder.setSerialNumber (BigInteger serialNumber) "," Sets the serial number used for the self-signed certificate of the generated key pair. <br /><br />"
"android.security.KeyPairGeneratorSpec.Builder.setEncryptionRequired () "," Indicates that this key must be encrypted at rest on storage. <br /><br />"
"android.security.KeyPairGeneratorSpec.Builder.setEndDate (Date endDate) "," Sets the end of the validity period for the self-signed certificate of the generated key pair. <br /><br />"
"android.security.KeyPairGeneratorSpec.Builder.setKeyType (String keyType)   Sets the key type  (e.g., RSA, DSA, EC) "," Sets the key type (e.g., RSA, DSA, EC) of the keypair to be created. <br /><br />"
"android.security.KeyPairGeneratorSpec.Builder.setKeySize (int keySize) "," Sets the key size for the keypair to be created. <br /><br />"
"android.security.KeyPairGeneratorSpec.Builder.build () "," Builds the instance of the KeyPairGeneratorSpec. <br /><br />"
"android.security.KeyPairGeneratorSpec.Builder.setAlgorithmParameterSpec (AlgorithmParameterSpec spec) "," Sets the underlying key type's parameters. <br /><br />"
"android.security.KeyPairGeneratorSpec.Builder.setSubject (X500Principal subject) "," Sets the subject used for the self-signed certificate of the generated key pair. <br /><br />"
"android.security.KeyPairGeneratorSpec.Builder.setAlias (String alias) "," Sets the alias to be used to retrieve the key later from a KeyStore instance using the AndroidKeyStore provider. <br /><br />"
"android.security.KeyStoreParameter.Builder.setEncryptionRequired (boolean required) "," Indicates that this key must be encrypted at rest on storage. <br /><br />"
"android.security.KeyStoreParameter.Builder.build () "," Builds the instance of the KeyPairGeneratorSpec. <br /><br />"
"android.service.carrier.CarrierMessagingService.onSendMms (Uri pduUri, int subId, Uri location, ResultCallback< CarrierMessagingService.SendMmsResult> callback) "," Override this method to intercept MMSs sent from the device. <br /><br />"
"android.service.carrier.CarrierMessagingService.onFilterSms (MessagePdu pdu, String format, int destPort, int subId, ResultCallback< Boolean> callback) "," Override this method to filter inbound SMS messages. <br /><br />"
"android.service.carrier.CarrierMessagingService.onSendMultipartTextSms (List< String> parts, int subId, String destAddress, ResultCallback< CarrierMessagingService.SendMultipartSmsResult> callback) "," Override this method to intercept long SMSs sent from the device. <br /><br />"
"android.service.carrier.CarrierMessagingService.onSendDataSms (byte[] data, int subId, String destAddress, int destPort, ResultCallback< CarrierMessagingService.SendSmsResult> callback) "," Override this method to intercept binary SMSs sent from the device. <br /><br />"
"android.service.carrier.CarrierMessagingService.onSendTextSms (String text, int subId, String destAddress, ResultCallback< CarrierMessagingService.SendSmsResult> callback) "," Override this method to intercept text SMSs sent from the device. <br /><br />"
"android.service.carrier.CarrierMessagingService.onBind (Intent intent) "," Return the communication channel to the service. <br /><br />"
"android.service.carrier.CarrierMessagingService.onDownloadMms (Uri contentUri, int subId, Uri location, ResultCallback< Integer> callback) "," Override this method to download MMSs received. <br /><br />"
"android.service.carrier.CarrierMessagingService.ResultCallback<T>.onReceiveResult (T result) "," Invoked when the result is available. <br /><br />"
"android.service.carrier.CarrierMessagingService.SendMmsResult.getSendStatus () "," Returns the send status of the just-sent MMS. <br /><br />"
"android.service.carrier.CarrierMessagingService.SendMmsResult.getSendConfPdu () "," Returns the SendConf PDU, which confirms that the message was sent. <br /><br />"
"android.service.carrier.CarrierMessagingService.SendMultipartSmsResult.getSendStatus () "," Returns the send status of the just-sent SMS. <br /><br />"
"android.service.carrier.CarrierMessagingService.SendMultipartSmsResult.getMessageRefs () "," Returns the message references of the just-sent multipart SMS. <br /><br />"
"android.service.carrier.CarrierMessagingService.SendSmsResult.getSendStatus () "," Returns the send status of the just-sent SMS. <br /><br />"
"android.service.carrier.CarrierMessagingService.SendSmsResult.getMessageRef () "," Returns the message reference of the just-sent SMS. <br /><br />"
"android.service.carrier.MessagePdu.getPdus () "," Returns the contents of a possibly multi-part SMS. <br /><br />"
"android.service.carrier.MessagePdu.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.service.carrier.MessagePdu.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.service.dreams.DreamService.setFullscreen (boolean fullscreen) "," Controls FLAG_FULLSCREEN on the dream's window. <br /><br />"
"android.service.dreams.DreamService.onPanelClosed (int featureId, Menu menu) "," Called when a panel is being closed. <br /><br />"
"android.service.dreams.DreamService.onActionModeFinished (ActionMode mode) "," Called when an action mode has been finished. <br /><br />"
"android.service.dreams.DreamService.dispatchTouchEvent (MotionEvent event) "," Called to process touch screen events. <br /><br />"
"android.service.dreams.DreamService.wakeUp () "," Wakes the dream up gently. <br /><br />"
"android.service.dreams.DreamService.onCreate () "," Called when this Dream is constructed. <br /><br />"
"android.service.dreams.DreamService.dispatchPopulateAccessibilityEvent (AccessibilityEvent event) "," Called to process population of AccessibilityEvents. <br /><br />"
"android.service.dreams.DreamService.findViewById (int id)   Finds a view that was identified by the id attribute from the XML that was processed in onCreate () "," Finds a view that was identified by the id attribute from the XML that was processed in onCreate(). <br /><br />"
"android.service.dreams.DreamService.isScreenBright () "," Returns whether or not this dream keeps the screen bright while dreaming. <br /><br />"
"android.service.dreams.DreamService.onContentChanged ()   This hook is called whenever the content view of the screen changes  (due to a call to Window.setContentView or Window.addContentView) "," This hook is called whenever the content view of the screen changes (due to a call to Window.setContentView or Window.addContentView). <br /><br />"
"android.service.dreams.DreamService.dispatchTrackballEvent (MotionEvent event) "," Called to process trackball events. <br /><br />"
"android.service.dreams.DreamService.onDreamingStopped ()   Called when this Dream is stopped, either by external request or by calling finish () "," Called when this Dream is stopped, either by external request or by calling finish(), before the window has been removed. <br /><br />"
"android.service.dreams.DreamService.onPreparePanel (int featureId, View view, Menu menu) "," Prepare a panel to be displayed. <br /><br />"
"android.service.dreams.DreamService.isFullscreen () "," Returns whether or not this dream is in fullscreen mode. <br /><br />"
"android.service.dreams.DreamService.onWindowFocusChanged (boolean hasFocus) "," This hook is called whenever the window focus changes. <br /><br />"
"android.service.dreams.DreamService.onWindowAttributesChanged (WindowManager.LayoutParams attrs) "," This is called whenever the current window attributes change. <br /><br />"
"android.service.dreams.DreamService.onAttachedToWindow () "," Called when the window has been attached to the window manager. <br /><br />"
"android.service.dreams.DreamService.onDestroy () "," Called by the system to notify a Service that it is no longer used and is being removed. <br /><br />"
"android.service.dreams.DreamService.setInteractive (boolean interactive) "," Marks this dream as interactive to receive input events. <br /><br />"
"android.service.dreams.DreamService.dispatchKeyShortcutEvent (KeyEvent event) "," Called to process a key shortcut event. <br /><br />"
"android.service.dreams.DreamService.addContentView (View view, ViewGroup.LayoutParams params) "," Adds a view to the Dream's window, leaving other content views in place. <br /><br />"
"android.service.dreams.DreamService.onMenuOpened (int featureId, Menu menu) "," Called when a panel's menu is opened by the user. <br /><br />"
"android.service.dreams.DreamService.onMenuItemSelected (int featureId, MenuItem item) "," Called when a panel's menu item has been selected by the user. <br /><br />"
"android.service.dreams.DreamService.onSearchRequested () "," Called when the user signals the desire to start a search. <br /><br />"
"android.service.dreams.DreamService.dispatchKeyEvent (KeyEvent event) "," Called to process key events. <br /><br />"
"android.service.dreams.DreamService.onCreatePanelMenu (int featureId, Menu menu) "," Initialize the contents of the menu for panel 'featureId'. <br /><br />"
"android.service.dreams.DreamService.onActionModeStarted (ActionMode mode) "," Called when an action mode has been started. <br /><br />"
"android.service.dreams.DreamService.dispatchGenericMotionEvent (MotionEvent event) "," Called to process generic motion events. <br /><br />"
"android.service.dreams.DreamService.onWakeUp () "," Called when the dream is being asked to stop itself and wake. <br /><br />"
"android.service.dreams.DreamService.onBind (Intent intent) "," Return the communication channel to the service. <br /><br />"
"android.service.dreams.DreamService.setContentView (View view) "," Sets a view to be the content view for this Dream. <br /><br />"
"android.service.dreams.DreamService.getWindowManager () "," Retrieves the current WindowManager for the dream. <br /><br />"
"android.service.dreams.DreamService.finish () "," Stops the dream and detaches from the window. <br /><br />"
"android.service.dreams.DreamService.onDetachedFromWindow () "," Called when the window has been attached to the window manager. <br /><br />"
"android.service.dreams.DreamService.onDreamingStarted () "," Called when the dream's window has been created and is visible and animation may now begin. <br /><br />"
"android.service.dreams.DreamService.setContentView (int layoutResID) "," Inflates a layout resource and set it to be the content view for this Dream. <br /><br />"
"android.service.dreams.DreamService.onWindowStartingActionMode (ActionMode.Callback callback) "," Called when an action mode is being started for this window. <br /><br />"
"android.service.dreams.DreamService.getWindow () "," Retrieves the current Window for the dream. <br /><br />"
"android.service.dreams.DreamService.setContentView (View view, ViewGroup.LayoutParams params) "," Sets a view to be the content view for this Dream. <br /><br />"
"android.service.dreams.DreamService.onCreatePanelView (int featureId) "," Instantiate the view to display in the panel for 'featureId'. <br /><br />"
"android.service.dreams.DreamService.isInteractive () "," Returns whether or not this dream is interactive. <br /><br />"
"android.service.dreams.DreamService.setScreenBright (boolean screenBright) "," Marks this dream as keeping the screen bright while dreaming. <br /><br />"
"android.service.media.MediaBrowserService.BrowserRoot.getExtras () "," Gets any extras about the brwoser service. <br /><br />"
"android.service.media.MediaBrowserService.BrowserRoot.getRootId () "," Gets the root id for browsing. <br /><br />"
"android.service.media.MediaBrowserService.setSessionToken (MediaSession.Token token) "," Call to set the media session. <br /><br />"
"android.service.media.MediaBrowserService.getSessionToken () "," Gets the session token, or null if it has not yet been created or if it has been destroyed. <br /><br />"
"android.service.media.MediaBrowserService.dump (FileDescriptor fd, PrintWriter writer, String[] args) "," Print the Service's state into the given stream. <br /><br />"
"android.service.media.MediaBrowserService.onLoadChildren (String parentId, Result< List< MediaBrowser.MediaItem>> result) "," Called to get information about the children of a media item. <br /><br />"
"android.service.media.MediaBrowserService.onCreate () "," Called by the system when the service is first created. <br /><br />"
"android.service.media.MediaBrowserService.onGetRoot (String clientPackageName, int clientUid, Bundle rootHints) "," Called to get the root information for browsing by a particular client. <br /><br />"
"android.service.media.MediaBrowserService.notifyChildrenChanged (String parentId) "," Notifies all connected media browsers that the children of the specified parent id have changed in some way. <br /><br />"
"android.service.media.MediaBrowserService.onBind (Intent intent) "," Return the communication channel to the service. <br /><br />"
"android.service.media.MediaBrowserService.Result<T>.sendResult (T result) "," Send the result back to the caller. <br /><br />"
"android.service.media.MediaBrowserService.Result<T>.detach ()   Detach this message from the current thread and allow the sendResult (T) "," Detach this message from the current thread and allow the sendResult(T) call to happen later. <br /><br />"
"android.service.notification.NotificationListenerService.cancelAllNotifications () "," Inform the notification manager about dismissal of all notifications. <br /><br />"
"android.service.notification.NotificationListenerService.onNotificationPosted (StatusBarNotification sbn, NotificationListenerService.RankingMap rankingMap) "," Implement this method to learn about new notifications as they are posted by apps. <br /><br />"
"android.service.notification.NotificationListenerService.onInterruptionFilterChanged (int interruptionFilter)   Implement this method to be notified when the "," Implement this method to be notified when the interruption filter changed. <br /><br />"
"android.service.notification.NotificationListenerService.onNotificationRankingUpdate (NotificationListenerService.RankingMap rankingMap) "," Implement this method to be notified when the notification ranking changes. <br /><br />"
"android.service.notification.NotificationListenerService.getCurrentListenerHints () "," Gets the set of hints representing current state. <br /><br />"
"android.service.notification.NotificationListenerService.requestInterruptionFilter (int interruptionFilter)   Sets the desired "," Sets the desired interruption filter. <br /><br />"
"android.service.notification.NotificationListenerService.onNotificationPosted (StatusBarNotification sbn) "," Implement this method to learn about new notifications as they are posted by apps. <br /><br />"
"android.service.notification.NotificationListenerService.getCurrentRanking () "," Returns current ranking information. <br /><br />"
"android.service.notification.NotificationListenerService.getCurrentInterruptionFilter () "," Gets the current notification interruption filter active on the host. <br /><br />"
"android.service.notification.NotificationListenerService.onBind (Intent intent) "," Return the communication channel to the service. <br /><br />"
"android.service.notification.NotificationListenerService.requestListenerHints (int hints)   Sets the desired "," Sets the desired listener hints. <br /><br />"
"android.service.notification.NotificationListenerService.onNotificationRemoved (StatusBarNotification sbn) "," Implement this method to learn when notifications are removed. <br /><br />"
"android.service.notification.NotificationListenerService.getActiveNotifications ()   Request the list of outstanding notifications  (that is, those that are visible to the current user) "," Request the list of outstanding notifications (that is, those that are visible to the current user). <br /><br />"
"android.service.notification.NotificationListenerService.onListenerConnected () "," Implement this method to learn about when the listener is enabled and connected to the notification manager. <br /><br />"
"android.service.notification.NotificationListenerService.getActiveNotifications (String[] keys) "," Request one or more notifications by key. <br /><br />"
"android.service.notification.NotificationListenerService.onNotificationRemoved (StatusBarNotification sbn, NotificationListenerService.RankingMap rankingMap) "," Implement this method to learn when notifications are removed. <br /><br />"
"android.service.notification.NotificationListenerService.onListenerHintsChanged (int hints)   Implement this method to be notified when the "," Implement this method to be notified when the Listener hints change. <br /><br />"
"android.service.notification.NotificationListenerService.cancelNotification (String key) "," Inform the notification manager about dismissal of a single notification. <br /><br />"
"android.service.notification.NotificationListenerService.cancelNotifications (String[] keys) "," Inform the notification manager about dismissal of specific notifications. <br /><br />"
"android.service.notification.NotificationListenerService.cancelNotification (String pkg, String tag, int id)    This method was deprecated in API level 21. Use cancelNotification (String) "," This method was deprecated in API level 21. Use cancelNotification(String) instead. Beginning with LOLLIPOP this method will no longer cancel the notification. It will continue to cancel the notification for applications whose targetSdkVersion is earlier than LOLLIPOP. <br /><br />"
"android.service.notification.NotificationListenerService.Ranking.matchesInterruptionFilter () "," Returns whether the notification matches the user's interruption filter. <br /><br />"
"android.service.notification.NotificationListenerService.Ranking.getRank () "," Returns the rank of the notification. <br /><br />"
"android.service.notification.NotificationListenerService.Ranking.getKey () "," Returns the key of the notification this Ranking applies to. <br /><br />"
"android.service.notification.NotificationListenerService.Ranking.isAmbient () "," Returns whether the notification is an ambient notification, that is a notification that doesn't require the user's immediate attention. <br /><br />"
"android.service.notification.NotificationListenerService.RankingMap.getRanking (String key, NotificationListenerService.Ranking outRanking) "," Populates outRanking with ranking information for the notification with the given key. <br /><br />"
"android.service.notification.NotificationListenerService.RankingMap.getOrderedKeys () "," Request the list of notification keys in their current ranking order. <br /><br />"
"android.service.notification.NotificationListenerService.RankingMap.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.service.notification.NotificationListenerService.RankingMap.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.service.notification.StatusBarNotification.getTag ()   The tag supplied to notify (int, Notification) "," The tag supplied to notify(int, Notification), or null if no tag was specified. <br /><br />"
"android.service.notification.StatusBarNotification.getPackageName () "," The package of the app that posted the notification. <br /><br />"
"android.service.notification.StatusBarNotification.getNotification ()   The Notification supplied to notify (int, Notification) "," The Notification supplied to notify(int, Notification). <br /><br />"
"android.service.notification.StatusBarNotification.getUser () "," The UserHandle for whom this notification is intended. <br /><br />"
"android.service.notification.StatusBarNotification.getUserId ()    This method was deprecated in API level 21. Use getUser () "," This method was deprecated in API level 21. Use getUser() instead. <br /><br />"
"android.service.notification.StatusBarNotification.getKey () "," A unique instance key for this notification record. <br /><br />"
"android.service.notification.StatusBarNotification.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.service.notification.StatusBarNotification.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.service.notification.StatusBarNotification.getGroupKey () "," A key that indicates the group with which this message ranks. <br /><br />"
"android.service.notification.StatusBarNotification.isOngoing () "," Convenience method to check the notification's flags for FLAG_ONGOING_EVENT. <br /><br />"
"android.service.notification.StatusBarNotification.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.service.notification.StatusBarNotification.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.service.notification.StatusBarNotification.isClearable () "," Convenience method to check the notification's flags for either FLAG_ONGOING_EVENT or FLAG_NO_CLEAR. <br /><br />"
"android.service.notification.StatusBarNotification.getId ()   The id supplied to notify (int, Notification) "," The id supplied to notify(int, Notification). <br /><br />"
"android.service.notification.StatusBarNotification.getPostTime ()   The time  (in currentTimeMillis () time) "," The time (in currentTimeMillis() time) the notification was posted, which may be different than when. <br /><br />"
"android.service.restrictions.RestrictionsReceiver.onReceive (Context context, Intent intent) "," Intercept standard Restrictions Provider broadcasts. <br /><br />"
"android.service.restrictions.RestrictionsReceiver.onRequestPermission (Context context, String packageName, String requestType, String requestId, PersistableBundle request) "," An asynchronous permission request made by an application for an operation that requires authorization by a local or remote administrator other than the user. <br /><br />"
"android.service.textservice.SpellCheckerService.createSession () "," Factory method to create a spell checker session impl <br /><br />"
"android.service.textservice.SpellCheckerService.onBind (Intent intent) "," Implement to return the implementation of the internal spell checker service interface. <br /><br />"
"android.service.textservice.SpellCheckerService.Session.onClose () "," Request to close this session. <br /><br />"
"android.service.textservice.SpellCheckerService.Session.getLocale () "," no description <br /><br />"
"android.service.textservice.SpellCheckerService.Session.onGetSuggestionsMultiple (TextInfo[] textInfos, int suggestionsLimit, boolean sequentialWords) "," A batch process of onGetSuggestions. <br /><br />"
"android.service.textservice.SpellCheckerService.Session.getBundle () "," no description <br /><br />"
"android.service.textservice.SpellCheckerService.Session.onGetSuggestions (TextInfo textInfo, int suggestionsLimit) "," Get suggestions for specified text in TextInfo. <br /><br />"
"android.service.textservice.SpellCheckerService.Session.onCreate ()   This is called after the class is initialized, at which point it knows it can call getLocale () "," This is called after the class is initialized, at which point it knows it can call getLocale() etc... <br /><br />"
"android.service.textservice.SpellCheckerService.Session.onCancel () "," Request to abort all tasks executed in SpellChecker. <br /><br />"
"android.service.textservice.SpellCheckerService.Session.onGetSentenceSuggestionsMultiple (TextInfo[] textInfos, int suggestionsLimit) "," Get sentence suggestions for specified texts in an array of TextInfo. <br /><br />"
"android.service.voice.AlwaysOnHotwordDetector.Callback.onRecognitionResumed () "," Called when the recognition is resumed after it was temporarily paused. <br /><br />"
"android.service.voice.AlwaysOnHotwordDetector.Callback.onDetected (AlwaysOnHotwordDetector.EventPayload eventPayload) "," Called when the keyphrase is spoken. <br /><br />"
"android.service.voice.AlwaysOnHotwordDetector.Callback.onRecognitionPaused () "," Called when the recognition is paused temporarily for some reason. <br /><br />"
"android.service.voice.AlwaysOnHotwordDetector.Callback.onAvailabilityChanged (int status) "," Called when the hotword availability changes. <br /><br />"
"android.service.voice.AlwaysOnHotwordDetector.Callback.onError () "," Called when the detection fails due to an error. <br /><br />"
"android.service.voice.AlwaysOnHotwordDetector.EventPayload.getCaptureAudioFormat ()   Gets the format of the audio obtained using getTriggerAudio () "," Gets the format of the audio obtained using getTriggerAudio(). <br /><br />"
"android.service.voice.AlwaysOnHotwordDetector.EventPayload.getTriggerAudio () "," Gets the raw audio that triggered the keyphrase. <br /><br />"
"android.service.voice.AlwaysOnHotwordDetector.getSupportedRecognitionModes () "," Gets the recognition modes supported by the associated keyphrase. <br /><br />"
"android.service.voice.AlwaysOnHotwordDetector.createUnEnrollIntent () "," Creates an intent to start the un-enrollment for the associated keyphrase. <br /><br />"
"android.service.voice.AlwaysOnHotwordDetector.startRecognition (int recognitionFlags) "," Starts recognition for the associated keyphrase. <br /><br />"
"android.service.voice.AlwaysOnHotwordDetector.createEnrollIntent () "," Creates an intent to start the enrollment for the associated keyphrase. <br /><br />"
"android.service.voice.AlwaysOnHotwordDetector.createReEnrollIntent () "," Creates an intent to start the re-enrollment for the associated keyphrase. <br /><br />"
"android.service.voice.AlwaysOnHotwordDetector.stopRecognition () "," Stops recognition for the associated keyphrase. <br /><br />"
"android.service.voice.VoiceInteractionService.startSession (Bundle args) "," Initiate the execution of a new VoiceInteractionSession. <br /><br />"
"android.service.voice.VoiceInteractionService.isActiveService (Context context, ComponentName service) "," Check whether the given service component is the currently active VoiceInteractionService. <br /><br />"
"android.service.voice.VoiceInteractionService.onCreate () "," Called by the system when the service is first created. <br /><br />"
"android.service.voice.VoiceInteractionService.createAlwaysOnHotwordDetector (String keyphrase, Locale locale, AlwaysOnHotwordDetector.Callback callback) "," Creates an AlwaysOnHotwordDetector for the given keyphrase and locale. <br /><br />"
"android.service.voice.VoiceInteractionService.onReady () "," Called during service initialization to tell you when the system is ready to receive interaction from it. <br /><br />"
"android.service.voice.VoiceInteractionService.onBind (Intent intent) "," Return the communication channel to the service. <br /><br />"
"android.service.voice.VoiceInteractionService.onShutdown () "," Called during service de-initialization to tell you when the system is shutting the service down. <br /><br />"
"android.service.voice.VoiceInteractionSession.finish () "," Finish the session. <br /><br />"
"android.service.voice.VoiceInteractionSession.onDestroy () "," Last callback to the session as it is being finished. <br /><br />"
"android.service.voice.VoiceInteractionSession.onCloseSystemDialogs ()   Sessions automatically watch for requests that all system UI be closed  (such as when the user presses HOME) "," Sessions automatically watch for requests that all system UI be closed (such as when the user presses HOME), which will appear here. <br /><br />"
"android.service.voice.VoiceInteractionSession.onCreate (Bundle args) "," Initiatize a new session. <br /><br />"
"android.service.voice.VoiceInteractionSession.setContentView (View view) "," no description <br /><br />"
"android.service.voice.VoiceInteractionSessionService.onCreate () "," Called by the system when the service is first created. <br /><br />"
"android.service.voice.VoiceInteractionSessionService.onNewSession (Bundle args) "," no description <br /><br />"
"android.service.voice.VoiceInteractionSessionService.onBind (Intent intent) "," Return the communication channel to the service. <br /><br />"
"android.service.wallpaper.WallpaperService.Engine.onDesiredSizeChanged (int desiredWidth, int desiredHeight) "," Called when an application has changed the desired virtual size of the wallpaper. <br /><br />"
"android.service.wallpaper.WallpaperService.Engine.isVisible ()   Return whether the wallpaper is currently visible to the user, this is the last value supplied to onVisibilityChanged (boolean) "," Return whether the wallpaper is currently visible to the user, this is the last value supplied to onVisibilityChanged(boolean). <br /><br />"
"android.service.wallpaper.WallpaperService.Engine.onSurfaceCreated (SurfaceHolder holder)   Convenience for SurfaceHolder.Callback.surfaceCreated () "," Convenience for SurfaceHolder.Callback.surfaceCreated(). <br /><br />"
"android.service.wallpaper.WallpaperService.Engine.onSurfaceChanged (SurfaceHolder holder, int format, int width, int height)   Convenience for SurfaceHolder.Callback.surfaceChanged () "," Convenience for SurfaceHolder.Callback.surfaceChanged(). <br /><br />"
"android.service.wallpaper.WallpaperService.Engine.onOffsetsChanged (float xOffset, float yOffset, float xOffsetStep, float yOffsetStep, int xPixelOffset, int yPixelOffset)   Called to inform you of the wallpaper's offsets changing within its contain, corresponding to the container's call to WallpaperManager.setWallpaperOffsets () "," Called to inform you of the wallpaper's offsets changing within its contain, corresponding to the container's call to WallpaperManager.setWallpaperOffsets(). <br /><br />"
"android.service.wallpaper.WallpaperService.Engine.setOffsetNotificationsEnabled (boolean enabled) "," Control whether this wallpaper will receive notifications when the wallpaper has been scrolled. <br /><br />"
"android.service.wallpaper.WallpaperService.Engine.onCommand (String action, int x, int y, int z, Bundle extras, boolean resultRequested)   Process a command that was sent to the wallpaper with sendWallpaperCommand (IBinder, String, int, int, int, Bundle) "," Process a command that was sent to the wallpaper with sendWallpaperCommand(IBinder, String, int, int, int, Bundle). <br /><br />"
"android.service.wallpaper.WallpaperService.Engine.getSurfaceHolder () "," Provides access to the surface in which this wallpaper is drawn. <br /><br />"
"android.service.wallpaper.WallpaperService.Engine.isPreview () "," Returns true if this engine is running in preview mode -- that is, it is being shown to the user before they select it as the actual wallpaper. <br /><br />"
"android.service.wallpaper.WallpaperService.Engine.onApplyWindowInsets (WindowInsets insets) "," Called with the current insets that are in effect for the wallpaper. <br /><br />"
"android.service.wallpaper.WallpaperService.Engine.onSurfaceDestroyed (SurfaceHolder holder)   Convenience for SurfaceHolder.Callback.surfaceDestroyed () "," Convenience for SurfaceHolder.Callback.surfaceDestroyed(). <br /><br />"
"android.service.wallpaper.WallpaperService.Engine.onSurfaceRedrawNeeded (SurfaceHolder holder)   Convenience for SurfaceHolder.Callback.surfaceRedrawNeeded () "," Convenience for SurfaceHolder.Callback.surfaceRedrawNeeded(). <br /><br />"
"android.service.wallpaper.WallpaperService.Engine.onCreate (SurfaceHolder surfaceHolder) "," Called once to initialize the engine. <br /><br />"
"android.service.wallpaper.WallpaperService.Engine.onDestroy () "," Called right before the engine is going away. <br /><br />"
"android.service.wallpaper.WallpaperService.Engine.setTouchEventsEnabled (boolean enabled) "," Control whether this wallpaper will receive raw touch events from the window manager as the user interacts with the window that is currently displaying the wallpaper. <br /><br />"
"android.service.wallpaper.WallpaperService.Engine.onVisibilityChanged (boolean visible) "," Called to inform you of the wallpaper becoming visible or hidden. <br /><br />"
"android.service.wallpaper.WallpaperService.Engine.onTouchEvent (MotionEvent event) "," Called as the user performs touch-screen interaction with the window that is currently showing this wallpaper. <br /><br />"
"android.service.wallpaper.WallpaperService.Engine.getDesiredMinimumWidth ()   Convenience for WallpaperManager.getDesiredMinimumWidth () "," Convenience for WallpaperManager.getDesiredMinimumWidth(), returning the width that the system would like this wallpaper to run in. <br /><br />"
"android.service.wallpaper.WallpaperService.Engine.getDesiredMinimumHeight ()   Convenience for WallpaperManager.getDesiredMinimumHeight () "," Convenience for WallpaperManager.getDesiredMinimumHeight(), returning the height that the system would like this wallpaper to run in. <br /><br />"
"android.service.wallpaper.WallpaperService.onCreate () "," Called by the system when the service is first created. <br /><br />"
"android.service.wallpaper.WallpaperService.onCreateEngine () "," Must be implemented to return a new instance of the wallpaper's engine. <br /><br />"
"android.service.wallpaper.WallpaperService.onDestroy () "," Called by the system to notify a Service that it is no longer used and is being removed. <br /><br />"
"android.service.wallpaper.WallpaperService.onBind (Intent intent) "," Implement to return the implementation of the internal accessibility service interface. <br /><br />"
"android.speech.RecognitionListener.onReadyForSpeech (Bundle params) "," Called when the endpointer is ready for the user to start speaking. <br /><br />"
"android.speech.RecognitionListener.onPartialResults (Bundle partialResults) "," Called when partial recognition results are available. <br /><br />"
"android.speech.RecognitionListener.onBufferReceived (byte[] buffer) "," More sound has been received. <br /><br />"
"android.speech.RecognitionListener.onResults (Bundle results) "," Called when recognition results are ready. <br /><br />"
"android.speech.RecognitionListener.onEvent (int eventType, Bundle params) "," Reserved for adding future events. <br /><br />"
"android.speech.RecognitionListener.onRmsChanged (float rmsdB) "," The sound level in the audio stream has changed. <br /><br />"
"android.speech.RecognitionListener.onError (int error) "," A network or recognition error occurred. <br /><br />"
"android.speech.RecognitionListener.onEndOfSpeech () "," Called after the user stops speaking. <br /><br />"
"android.speech.RecognitionListener.onBeginningOfSpeech () "," The user has started to speak. <br /><br />"
"android.speech.RecognitionService.Callback.partialResults (Bundle partialResults) "," The service should call this method when partial recognition results are available. <br /><br />"
"android.speech.RecognitionService.Callback.error (int error) "," The service should call this method when a network or recognition error occurred. <br /><br />"
"android.speech.RecognitionService.Callback.endOfSpeech () "," The service should call this method after the user stops speaking. <br /><br />"
"android.speech.RecognitionService.Callback.bufferReceived (byte[] buffer) "," The service should call this method when sound has been received. <br /><br />"
"android.speech.RecognitionService.Callback.readyForSpeech (Bundle params) "," The service should call this method when the endpointer is ready for the user to start speaking. <br /><br />"
"android.speech.RecognitionService.Callback.beginningOfSpeech () "," The service should call this method when the user has started to speak. <br /><br />"
"android.speech.RecognitionService.Callback.rmsChanged (float rmsdB) "," The service should call this method when the sound level in the audio stream has changed. <br /><br />"
"android.speech.RecognitionService.Callback.results (Bundle results) "," The service should call this method when recognition results are ready. <br /><br />"
"android.speech.RecognitionService.onDestroy () "," Called by the system to notify a Service that it is no longer used and is being removed. <br /><br />"
"android.speech.RecognitionService.onBind (Intent intent) "," Return the communication channel to the service. <br /><br />"
"android.speech.RecognizerIntent.getVoiceDetailsIntent (Context context)   Returns the broadcast intent to fire with sendOrderedBroadcast (Intent, String, BroadcastReceiver, android.os.Handler, int, String, Bundle) "," Returns the broadcast intent to fire with sendOrderedBroadcast(Intent, String, BroadcastReceiver, android.os.Handler, int, String, Bundle) to receive details from the package that implements voice search. <br /><br />"
"android.speech.SpeechRecognizer.destroy () "," Destroys the SpeechRecognizer object. <br /><br />"
"android.speech.SpeechRecognizer.isRecognitionAvailable (Context context) "," Checks whether a speech recognition service is available on the system. <br /><br />"
"android.speech.SpeechRecognizer.setRecognitionListener (RecognitionListener listener) "," Sets the listener that will receive all the callbacks. <br /><br />"
"android.speech.SpeechRecognizer.createSpeechRecognizer (Context context, ComponentName serviceComponent) "," Factory method to create a new SpeechRecognizer. <br /><br />"
"android.speech.SpeechRecognizer.createSpeechRecognizer (Context context) "," Factory method to create a new SpeechRecognizer. <br /><br />"
"android.speech.SpeechRecognizer.cancel () "," Cancels the speech recognition. <br /><br />"
"android.speech.SpeechRecognizer.stopListening () "," Stops listening for speech. <br /><br />"
"android.speech.SpeechRecognizer.startListening (Intent recognizerIntent) "," Starts listening for speech. <br /><br />"
"android.speech.tts.SynthesisCallback.hasFinished ()   Check if done () "," Check if done() was called or not. <br /><br />"
"android.speech.tts.SynthesisCallback.start (int sampleRateInHz, int audioFormat, int channelCount) "," The service should call this when it starts to synthesize audio for this request. <br /><br />"
"android.speech.tts.SynthesisCallback.done ()   The service should call this method when all the synthesized audio for a request has been passed to audioAvailable (byte[], int, int) "," The service should call this method when all the synthesized audio for a request has been passed to audioAvailable(byte[], int, int). <br /><br />"
"android.speech.tts.SynthesisCallback.audioAvailable (byte[] buffer, int offset, int length) "," The service should call this method when synthesized audio is ready for consumption. <br /><br />"
"android.speech.tts.SynthesisCallback.error () "," The service should call this method if the speech synthesis fails. <br /><br />"
"android.speech.tts.SynthesisCallback.error (int errorCode) "," The service should call this method if the speech synthesis fails. <br /><br />"
"android.speech.tts.SynthesisCallback.getMaxBufferSize () "," no description <br /><br />"
"android.speech.tts.SynthesisCallback.hasStarted ()   Check if start (int, int, int) "," Check if start(int, int, int) was called or not. <br /><br />"
"android.speech.tts.SynthesisRequest.getText ()    This method was deprecated in API level 21. As of API level 21, replaced by getCharSequenceText () "," This method was deprecated in API level 21. As of API level 21, replaced by getCharSequenceText(). <br /><br />"
"android.speech.tts.SynthesisRequest.getVoiceName () "," Gets the name of the voice to use. <br /><br />"
"android.speech.tts.SynthesisRequest.getCharSequenceText () "," Gets the text which should be synthesized. <br /><br />"
"android.speech.tts.SynthesisRequest.getSpeechRate () "," Gets the speech rate to use. <br /><br />"
"android.speech.tts.SynthesisRequest.getCountry () "," Gets the ISO 3-letter country code for the language to use. <br /><br />"
"android.speech.tts.SynthesisRequest.getPitch () "," Gets the pitch to use. <br /><br />"
"android.speech.tts.SynthesisRequest.getVariant () "," Gets the language variant to use. <br /><br />"
"android.speech.tts.SynthesisRequest.getCallerUid () "," Gets the request caller Uid. <br /><br />"
"android.speech.tts.SynthesisRequest.getLanguage () "," Gets the ISO 3-letter language code for the language to use. <br /><br />"
"android.speech.tts.SynthesisRequest.getParams () "," Gets the additional params, if any. <br /><br />"
"android.speech.tts.TextToSpeech.EngineInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.speech.tts.TextToSpeech.getDefaultLanguage ()    This method was deprecated in API level 21. As of API level 21, use getDefaultVoice ().getLocale ()  (getDefaultVoice ()) "," This method was deprecated in API level 21. As of API level 21, use getDefaultVoice().getLocale() (getDefaultVoice()) <br /><br />"
"android.speech.tts.TextToSpeech.getEngines () "," Gets a list of all installed TTS engines. <br /><br />"
"android.speech.tts.TextToSpeech.playSilentUtterance (long durationInMs, int queueMode, String utteranceId) "," Plays silence for the specified amount of time using the specified queue mode. <br /><br />"
"android.speech.tts.TextToSpeech.shutdown () "," Releases the resources used by the TextToSpeech engine. <br /><br />"
"android.speech.tts.TextToSpeech.isLanguageAvailable (Locale loc) "," Checks if the specified language as represented by the Locale is available and supported. <br /><br />"
"android.speech.tts.TextToSpeech.setOnUtteranceCompletedListener (TextToSpeech.OnUtteranceCompletedListener listener)    This method was deprecated in API level 15. Use setOnUtteranceProgressListener (UtteranceProgressListener) "," This method was deprecated in API level 15. Use setOnUtteranceProgressListener(UtteranceProgressListener) instead. <br /><br />"
"android.speech.tts.TextToSpeech.setEngineByPackageName (String enginePackageName)    This method was deprecated in API level 14. This doesn't inform callers when the TTS engine has been initialized. TextToSpeech (Context, OnInitListener, String) "," This method was deprecated in API level 14. This doesn't inform callers when the TTS engine has been initialized. TextToSpeech(Context, OnInitListener, String) can be used with the appropriate engine name. Also, there is no guarantee that the engine specified will be loaded. If it isn't installed or disabled, the user / system wide defaults will apply. <br /><br />"
"android.speech.tts.TextToSpeech.setLanguage (Locale loc) "," Sets the text-to-speech language. <br /><br />"
"android.speech.tts.TextToSpeech.addSpeech (CharSequence text, String packagename, int resourceId)   Adds a mapping between a CharSequence  (may be spanned with TtsSpans) "," Adds a mapping between a CharSequence (may be spanned with TtsSpans) of text and a sound resource in a package. <br /><br />"
"android.speech.tts.TextToSpeech.addEarcon (String earcon, File file) "," Adds a mapping between a string of text and a sound file. <br /><br />"
"android.speech.tts.TextToSpeech.synthesizeToFile (String text, HashMap< String,  String> params, String filename)    This method was deprecated in API level 21. As of API level 21, replaced by synthesizeToFile (CharSequence, Bundle, File, String) "," This method was deprecated in API level 21. As of API level 21, replaced by synthesizeToFile(CharSequence, Bundle, File, String). <br /><br />"
"android.speech.tts.TextToSpeech.addEarcon (String earcon, String filename)    This method was deprecated in API level 21. As of API level 21, replaced by addEarcon (String, File) "," This method was deprecated in API level 21. As of API level 21, replaced by addEarcon(String, File). <br /><br />"
"android.speech.tts.TextToSpeech.speak (CharSequence text, int queueMode, Bundle params, String utteranceId) "," Speaks the text using the specified queuing strategy and speech parameters, the text may be spanned with TtsSpans. <br /><br />"
"android.speech.tts.TextToSpeech.addSpeech (String text, String filename) "," Adds a mapping between a string of text and a sound file. <br /><br />"
"android.speech.tts.TextToSpeech.playEarcon (String earcon, int queueMode, HashMap< String,  String> params)    This method was deprecated in API level 21. As of API level 21, replaced by playEarcon (String, int, Bundle, String) "," This method was deprecated in API level 21. As of API level 21, replaced by playEarcon(String, int, Bundle, String). <br /><br />"
"android.speech.tts.TextToSpeech.setPitch (float pitch) "," Sets the speech pitch for the TextToSpeech engine. <br /><br />"
"android.speech.tts.TextToSpeech.setVoice (Voice voice) "," Sets the text-to-speech voice. <br /><br />"
"android.speech.tts.TextToSpeech.getFeatures (Locale locale)    This method was deprecated in API level 21. As of API level 21, please use voices. In order to query features of the voice, call getVoices () to retrieve the list of available voices and getFeatures () "," This method was deprecated in API level 21. As of API level 21, please use voices. In order to query features of the voice, call getVoices() to retrieve the list of available voices and getFeatures() to retrieve the set of features. <br /><br />"
"android.speech.tts.TextToSpeech.getVoice () "," Returns a Voice instance describing the voice currently being used for synthesis requests sent to the TextToSpeech engine. <br /><br />"
"android.speech.tts.TextToSpeech.getMaxSpeechInputLength () "," Limit of length of input string passed to speak and synthesizeToFile. <br /><br />"
"android.speech.tts.TextToSpeech.synthesizeToFile (CharSequence text, Bundle params, File file, String utteranceId) "," Synthesizes the given text to a file using the specified parameters. <br /><br />"
"android.speech.tts.TextToSpeech.addEarcon (String earcon, String packagename, int resourceId) "," Adds a mapping between a string of text and a sound resource in a package. <br /><br />"
"android.speech.tts.TextToSpeech.playSilence (long durationInMs, int queueMode, HashMap< String,  String> params)    This method was deprecated in API level 21. As of API level 21, replaced by playSilentUtterance (long, int, String) "," This method was deprecated in API level 21. As of API level 21, replaced by playSilentUtterance(long, int, String). <br /><br />"
"android.speech.tts.TextToSpeech.setAudioAttributes (AudioAttributes audioAttributes) "," Sets the audio attributes to be used when speaking text or playing back a file. <br /><br />"
"android.speech.tts.TextToSpeech.getDefaultVoice () "," Returns a Voice instance that's the default voice for the default Text-to-speech language. <br /><br />"
"android.speech.tts.TextToSpeech.addSpeech (CharSequence text, File file) "," Adds a mapping between a CharSequence (may be spanned with TtsSpans and a sound file. <br /><br />"
"android.speech.tts.TextToSpeech.isSpeaking () "," Checks whether the TTS engine is busy speaking. <br /><br />"
"android.speech.tts.TextToSpeech.getLanguage ()    This method was deprecated in API level 21. As of API level 21, please use getVoice ().getLocale ()  (getVoice ()) "," This method was deprecated in API level 21. As of API level 21, please use getVoice().getLocale() (getVoice()). <br /><br />"
"android.speech.tts.TextToSpeech.getVoices () "," Query the engine about the set of available voices. <br /><br />"
"android.speech.tts.TextToSpeech.stop ()   Interrupts the current utterance  (whether played or rendered to file) "," Interrupts the current utterance (whether played or rendered to file) and discards other utterances in the queue. <br /><br />"
"android.speech.tts.TextToSpeech.setSpeechRate (float speechRate) "," Sets the speech rate. <br /><br />"
"android.speech.tts.TextToSpeech.addSpeech (String text, String packagename, int resourceId) "," Adds a mapping between a string of text and a sound resource in a package. <br /><br />"
"android.speech.tts.TextToSpeech.getDefaultEngine () "," Gets the package name of the default speech synthesis engine. <br /><br />"
"android.speech.tts.TextToSpeech.speak (String text, int queueMode, HashMap< String,  String> params)    This method was deprecated in API level 21. As of API level 21, replaced by speak (CharSequence, int, Bundle, String) "," This method was deprecated in API level 21. As of API level 21, replaced by speak(CharSequence, int, Bundle, String). <br /><br />"
"android.speech.tts.TextToSpeech.playEarcon (String earcon, int queueMode, Bundle params, String utteranceId) "," Plays the earcon using the specified queueing mode and parameters. <br /><br />"
"android.speech.tts.TextToSpeech.setOnUtteranceProgressListener (UtteranceProgressListener listener) "," Sets the listener that will be notified of various events related to the synthesis of a given utterance. <br /><br />"
"android.speech.tts.TextToSpeech.getAvailableLanguages () "," Query the engine about the set of available languages. <br /><br />"
"android.speech.tts.TextToSpeech.areDefaultsEnforced () "," Checks whether the user's settings should override settings requested by the calling application. <br /><br />"
"android.speech.tts.TextToSpeech.OnInitListener.onInit (int status) "," Called to signal the completion of the TextToSpeech engine initialization. <br /><br />"
"android.speech.tts.TextToSpeech.OnUtteranceCompletedListener.onUtteranceCompleted (String utteranceId) "," Called when an utterance has been synthesized. <br /><br />"
"android.speech.tts.TextToSpeechService.onIsValidVoiceName (String voiceName) "," Checks whether the engine supports a voice with a given name. <br /><br />"
"android.speech.tts.TextToSpeechService.onGetDefaultVoiceNameFor (String lang, String country, String variant) "," Return a name of the default voice for a given locale. <br /><br />"
"android.speech.tts.TextToSpeechService.onCreate () "," Called by the system when the service is first created. <br /><br />"
"android.speech.tts.TextToSpeechService.onDestroy () "," Called by the system to notify a Service that it is no longer used and is being removed. <br /><br />"
"android.speech.tts.TextToSpeechService.onGetVoices () "," Queries the service for a set of supported voices. <br /><br />"
"android.speech.tts.TextToSpeechService.onLoadVoice (String voiceName) "," Notifies the engine that it should load a speech synthesis voice. <br /><br />"
"android.speech.tts.TextToSpeechService.onBind (Intent intent) "," Return the communication channel to the service. <br /><br />"
"android.speech.tts.UtteranceProgressListener.onError (String utteranceId, int errorCode) "," Called when an error has occurred during processing. <br /><br />"
"android.speech.tts.UtteranceProgressListener.onStart (String utteranceId) "," Called when an utterance 'starts' as perceived by the caller. <br /><br />"
"android.speech.tts.UtteranceProgressListener.onDone (String utteranceId) "," Called when an utterance has successfully completed processing. <br /><br />"
"android.speech.tts.UtteranceProgressListener.onError (String utteranceId)    This method was deprecated in API level 21. Use onError (String, int) "," This method was deprecated in API level 21. Use onError(String, int) instead <br /><br />"
"android.speech.tts.Voice.getName () "," no description <br /><br />"
"android.speech.tts.Voice.isNetworkConnectionRequired () "," no description <br /><br />"
"android.speech.tts.Voice.getLocale () "," no description <br /><br />"
"android.speech.tts.Voice.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.speech.tts.Voice.getFeatures () "," Returns the set of features it supports for a given voice. <br /><br />"
"android.speech.tts.Voice.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.speech.tts.Voice.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.speech.tts.Voice.getQuality () "," no description <br /><br />"
"android.speech.tts.Voice.getLatency () "," no description <br /><br />"
"android.speech.tts.Voice.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.speech.tts.Voice.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.multidex.MultiDex.install (Context context) "," Patches the application context class loader by appending extra dex files loaded from the application apk. <br /><br />"
"android.support.v13.app.FragmentCompat.setMenuVisibility (Fragment f, boolean visible)   Call Fragment.setMenuVisibility (boolean) "," Call Fragment.setMenuVisibility(boolean) if running on an appropriate version of the platform. <br /><br />"
"android.support.v13.app.FragmentCompat.setUserVisibleHint (Fragment f, boolean deferStart)   Call setUserVisibleHint (boolean) "," Call setUserVisibleHint(boolean) if running on an appropriate version of the platform. <br /><br />"
"android.support.v13.app.FragmentPagerAdapter.restoreState (Parcelable state, ClassLoader loader)   Restore any instance state associated with this adapter and its pages that was previously saved by saveState () "," Restore any instance state associated with this adapter and its pages that was previously saved by saveState(). <br /><br />"
"android.support.v13.app.FragmentPagerAdapter.getItem (int position) "," Return the Fragment associated with a specified position. <br /><br />"
"android.support.v13.app.FragmentPagerAdapter.setPrimaryItem (ViewGroup container, int position, Object object) "," Called to inform the adapter of which item is currently considered to be the 'primary', that is the one show to the user as the current page. <br /><br />"
"android.support.v13.app.FragmentPagerAdapter.saveState () "," Save any instance state associated with this adapter and its pages that should be restored if the current UI state needs to be reconstructed. <br /><br />"
"android.support.v13.app.FragmentPagerAdapter.finishUpdate (ViewGroup container) "," Called when the a change in the shown pages has been completed. <br /><br />"
"android.support.v13.app.FragmentPagerAdapter.instantiateItem (ViewGroup container, int position) "," Create the page for the given position. <br /><br />"
"android.support.v13.app.FragmentPagerAdapter.destroyItem (ViewGroup container, int position, Object object) "," Remove a page for the given position. <br /><br />"
"android.support.v13.app.FragmentPagerAdapter.isViewFromObject (View view, Object object)   Determines whether a page View is associated with a specific key object as returned by instantiateItem (ViewGroup, int) "," Determines whether a page View is associated with a specific key object as returned by instantiateItem(ViewGroup, int). <br /><br />"
"android.support.v13.app.FragmentPagerAdapter.startUpdate (ViewGroup container) "," Called when a change in the shown pages is going to start being made. <br /><br />"
"android.support.v13.app.FragmentPagerAdapter.getItemId (int position) "," Return a unique identifier for the item at the given position. <br /><br />"
"android.support.v13.app.FragmentStatePagerAdapter.restoreState (Parcelable state, ClassLoader loader)   Restore any instance state associated with this adapter and its pages that was previously saved by saveState () "," Restore any instance state associated with this adapter and its pages that was previously saved by saveState(). <br /><br />"
"android.support.v13.app.FragmentStatePagerAdapter.getItem (int position) "," Return the Fragment associated with a specified position. <br /><br />"
"android.support.v13.app.FragmentStatePagerAdapter.setPrimaryItem (ViewGroup container, int position, Object object) "," Called to inform the adapter of which item is currently considered to be the 'primary', that is the one show to the user as the current page. <br /><br />"
"android.support.v13.app.FragmentStatePagerAdapter.saveState () "," Save any instance state associated with this adapter and its pages that should be restored if the current UI state needs to be reconstructed. <br /><br />"
"android.support.v13.app.FragmentStatePagerAdapter.finishUpdate (ViewGroup container) "," Called when the a change in the shown pages has been completed. <br /><br />"
"android.support.v13.app.FragmentStatePagerAdapter.instantiateItem (ViewGroup container, int position) "," Create the page for the given position. <br /><br />"
"android.support.v13.app.FragmentStatePagerAdapter.destroyItem (ViewGroup container, int position, Object object) "," Remove a page for the given position. <br /><br />"
"android.support.v13.app.FragmentStatePagerAdapter.isViewFromObject (View view, Object object)   Determines whether a page View is associated with a specific key object as returned by instantiateItem (ViewGroup, int) "," Determines whether a page View is associated with a specific key object as returned by instantiateItem(ViewGroup, int). <br /><br />"
"android.support.v13.app.FragmentStatePagerAdapter.startUpdate (ViewGroup container) "," Called when a change in the shown pages is going to start being made. <br /><br />"
"android.support.v13.app.FragmentTabHost.addTab (TabHost.TabSpec tabSpec, Class<?> clss, Bundle args) "," no description <br /><br />"
"android.support.v13.app.FragmentTabHost.onTabChanged (String tabId) "," no description <br /><br />"
"android.support.v13.app.FragmentTabHost.setOnTabChangedListener (TabHost.OnTabChangeListener l) "," Register a callback to be invoked when the selected state of any of the items in this list changes <br /><br />"
"android.support.v13.app.FragmentTabHost.setup (Context context, FragmentManager manager) "," no description <br /><br />"
"android.support.v13.app.FragmentTabHost.setup ()    This method is deprecated. Don't call the original TabHost setup, you must instead call setup (Context, FragmentManager) or setup (Context, FragmentManager, int) "," This method is deprecated. Don't call the original TabHost setup, you must instead call setup(Context, FragmentManager) or setup(Context, FragmentManager, int). <br /><br />"
"android.support.v13.app.FragmentTabHost.setup (Context context, FragmentManager manager, int containerId) "," no description <br /><br />"
"android.support.v17.leanback.app.BackgroundManager.isAttached () "," Returns true if the background manager is currently attached; false otherwise. <br /><br />"
"android.support.v17.leanback.app.BackgroundManager.getDefaultDimLayer () "," Returns the default drawable used as a dim layer. <br /><br />"
"android.support.v17.leanback.app.BackgroundManager.getInstance (Activity activity) "," Get the BackgroundManager associated with the Activity. <br /><br />"
"android.support.v17.leanback.app.BackgroundManager.setDimLayer (Drawable drawable) "," Sets the drawable used as a dim layer. <br /><br />"
"android.support.v17.leanback.app.BackgroundManager.getColor () "," Returns the current background color. <br /><br />"
"android.support.v17.leanback.app.BackgroundManager.getDrawable () "," Returns the current background Drawable. <br /><br />"
"android.support.v17.leanback.app.BackgroundManager.setDrawable (Drawable drawable) "," Set the given drawable into the background. <br /><br />"
"android.support.v17.leanback.app.BackgroundManager.setColor (int color) "," Set the background to the given color. <br /><br />"
"android.support.v17.leanback.app.BackgroundManager.release () "," Release references to Drawables. <br /><br />"
"android.support.v17.leanback.app.BackgroundManager.attach (Window window) "," Make the background visible on the given Window. <br /><br />"
"android.support.v17.leanback.app.BackgroundManager.setBitmap (Bitmap bitmap) "," Set the given bitmap into the background. <br /><br />"
"android.support.v17.leanback.app.BackgroundManager.getDimLayer () "," Returns the drawable used as a dim layer. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.BrowseTransitionListener.onHeadersTransitionStart (boolean withHeaders) "," Callback when headers transition starts. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.BrowseTransitionListener.onHeadersTransitionStop (boolean withHeaders) "," Callback when headers transition stops. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.isShowingHeaders () "," Returns true if headers are shown. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.setOnItemViewSelectedListener (OnItemViewSelectedListener listener) "," Sets an item selection listener. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.setHeaderPresenterSelector (PresenterSelector headerPresenterSelector) "," Sets the PresenterSelector used to render the row headers. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.getHeadersState () "," Returns the state of the headers column in the browse fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.setTitle (String title) "," Sets a title for the browse fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.onPause () "," Called when the Fragment is no longer resumed. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.prepareEntranceTransition () "," Enables entrance transition. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.setBadgeDrawable (Drawable drawable) "," Sets the drawable displayed in the browse fragment title. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.onSaveInstanceState (Bundle outState) "," Called to ask the fragment to save its current dynamic state, so it can later be reconstructed in a new instance of its process is restarted. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.getOnItemViewSelectedListener () "," Returns an item selection listener. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.getOnItemViewClickedListener () "," Returns the item Clicked listener. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.setSelectedPosition (int position, boolean smooth) "," Sets the selected row position. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.getSearchAffordanceColors () "," Returns the SearchOrbView.Colors used to draw the search affordance. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.onDestroy () "," Called when the fragment is no longer in use. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.setSelectedPosition (int position) "," Sets the selected row position with smooth animation. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.setOnItemSelectedListener (OnItemSelectedListener listener)    This method is deprecated. Use setOnItemViewSelectedListener (OnItemViewSelectedListener) "," This method is deprecated. Use setOnItemViewSelectedListener(OnItemViewSelectedListener) <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.startHeadersTransition (boolean withHeaders) "," Start a headers transition. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.setHeadersState (int headersState) "," Sets the state for the headers column in the browse fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.setOnItemClickedListener (OnItemClickedListener listener)    This method is deprecated. Use setOnItemViewClickedListener (OnItemViewClickedListener) "," This method is deprecated. Use setOnItemViewClickedListener(OnItemViewClickedListener) <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.setBrowseTransitionListener (BrowseFragment.BrowseTransitionListener listener) "," Set a listener for browse fragment transitions. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.getTitle () "," Returns the title for the browse fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.enableRowScaling (boolean enable) "," Enables scaling of rows when headers are present. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.onResume () "," Called when the fragment is visible to the user and actively running. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.setOnSearchClickedListener (View.OnClickListener listener) "," Sets a click listener for the search affordance. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.setAdapter (ObjectAdapter adapter) "," Sets the adapter containing the rows for the fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.startEntranceTransition ()   When fragment finishes loading data, it should call startEntranceTransition () "," When fragment finishes loading data, it should call startEntranceTransition() to execute the entrance transition. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.createArgs (Bundle args, String title, int headersState) "," Create arguments for a browse fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.setSearchAffordanceColors (SearchOrbView.Colors colors) "," Sets the SearchOrbView.Colors used to draw the search affordance. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.getOnItemClickedListener ()    This method is deprecated. Use getOnItemViewClickedListener () "," This method is deprecated. Use getOnItemViewClickedListener() <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.getBrandColor () "," Returns the brand color for the browse fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.onViewCreated (View view, Bundle savedInstanceState)   Called immediately after onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called immediately after onCreateView(LayoutInflater, ViewGroup, Bundle) has returned, but before any saved state has been restored in to the view. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.getBadgeDrawable () "," Returns the badge drawable used in the fragment title. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.setSearchAffordanceColor (int color) "," Sets the color used to draw the search affordance. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.onStart () "," Called when the Fragment is visible to the user. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.setOnItemViewClickedListener (OnItemViewClickedListener listener) "," Sets an item clicked listener on the fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.getSearchAffordanceColor () "," Returns the color used to draw the search affordance. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.onCreate (Bundle savedInstanceState) "," Called to do initial creation of a fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.setBrandColor (int color) "," Sets the brand color for the browse fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.getAdapter () "," Returns the adapter containing the rows for the fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.setHeadersTransitionOnBackEnabled (boolean headersBackStackEnabled) "," Enable/disable headers transition on back key support. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.isInHeadersTransition () "," Returns true if the headers transition is currently running. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Called to have the fragment instantiate its user interface view. <br /><br />"
"android.support.v17.leanback.app.BrowseFragment.isHeadersTransitionOnBackEnabled () "," Returns true if headers transition on back key support is enabled. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.BrowseTransitionListener.onHeadersTransitionStart (boolean withHeaders) "," Callback when headers transition starts. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.BrowseTransitionListener.onHeadersTransitionStop (boolean withHeaders) "," Callback when headers transition stops. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.isShowingHeaders () "," Returns true if headers are shown. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.setOnItemViewSelectedListener (OnItemViewSelectedListener listener) "," Sets an item selection listener. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.setHeaderPresenterSelector (PresenterSelector headerPresenterSelector) "," Sets the PresenterSelector used to render the row headers. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.getHeadersState () "," Returns the state of the headers column in the browse fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.setTitle (String title) "," Sets a title for the browse fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.onPause () "," Called when the Fragment is no longer resumed. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.prepareEntranceTransition () "," Enables entrance transition. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.setBrowseTransitionListener (BrowseSupportFragment.BrowseTransitionListener listener) "," Set a listener for browse fragment transitions. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.setBadgeDrawable (Drawable drawable) "," Sets the drawable displayed in the browse fragment title. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.onSaveInstanceState (Bundle outState) "," Called to ask the fragment to save its current dynamic state, so it can later be reconstructed in a new instance of its process is restarted. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.getOnItemViewSelectedListener () "," Returns an item selection listener. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.getOnItemViewClickedListener () "," Returns the item Clicked listener. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.setSelectedPosition (int position, boolean smooth) "," Sets the selected row position. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.getSearchAffordanceColors () "," Returns the SearchOrbView.Colors used to draw the search affordance. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.onDestroy () "," Called when the fragment is no longer in use. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.setSelectedPosition (int position) "," Sets the selected row position with smooth animation. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.setOnItemSelectedListener (OnItemSelectedListener listener)    This method is deprecated. Use setOnItemViewSelectedListener (OnItemViewSelectedListener) "," This method is deprecated. Use setOnItemViewSelectedListener(OnItemViewSelectedListener) <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.startHeadersTransition (boolean withHeaders) "," Start a headers transition. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.setHeadersState (int headersState) "," Sets the state for the headers column in the browse fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.setOnItemClickedListener (OnItemClickedListener listener)    This method is deprecated. Use setOnItemViewClickedListener (OnItemViewClickedListener) "," This method is deprecated. Use setOnItemViewClickedListener(OnItemViewClickedListener) <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.getTitle () "," Returns the title for the browse fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.enableRowScaling (boolean enable) "," Enables scaling of rows when headers are present. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.onResume () "," Called when the fragment is visible to the user and actively running. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.setOnSearchClickedListener (View.OnClickListener listener) "," Sets a click listener for the search affordance. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.setAdapter (ObjectAdapter adapter) "," Sets the adapter containing the rows for the fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.startEntranceTransition ()   When fragment finishes loading data, it should call startEntranceTransition () "," When fragment finishes loading data, it should call startEntranceTransition() to execute the entrance transition. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.createArgs (Bundle args, String title, int headersState) "," Create arguments for a browse fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.setSearchAffordanceColors (SearchOrbView.Colors colors) "," Sets the SearchOrbView.Colors used to draw the search affordance. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.getOnItemClickedListener ()    This method is deprecated. Use getOnItemViewClickedListener () "," This method is deprecated. Use getOnItemViewClickedListener() <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.getBrandColor () "," Returns the brand color for the browse fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.onViewCreated (View view, Bundle savedInstanceState)   Called immediately after onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called immediately after onCreateView(LayoutInflater, ViewGroup, Bundle) has returned, but before any saved state has been restored in to the view. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.getBadgeDrawable () "," Returns the badge drawable used in the fragment title. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.setSearchAffordanceColor (int color) "," Sets the color used to draw the search affordance. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.onStart () "," Called when the Fragment is visible to the user. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.setOnItemViewClickedListener (OnItemViewClickedListener listener) "," Sets an item clicked listener on the fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.getSearchAffordanceColor () "," Returns the color used to draw the search affordance. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.onCreate (Bundle savedInstanceState) "," Called to do initial creation of a fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.setBrandColor (int color) "," Sets the brand color for the browse fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.getAdapter () "," Returns the adapter containing the rows for the fragment. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.setHeadersTransitionOnBackEnabled (boolean headersBackStackEnabled) "," Enable/disable headers transition on back key support. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.isInHeadersTransition () "," Returns true if the headers transition is currently running. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Called to have the fragment instantiate its user interface view. <br /><br />"
"android.support.v17.leanback.app.BrowseSupportFragment.isHeadersTransitionOnBackEnabled () "," Returns true if headers transition on back key support is enabled. <br /><br />"
"android.support.v17.leanback.app.DetailsFragment.startEntranceTransition ()   When fragment finishes loading data, it should call startEntranceTransition () "," When fragment finishes loading data, it should call startEntranceTransition() to execute the entrance transition. <br /><br />"
"android.support.v17.leanback.app.DetailsFragment.setOnItemViewSelectedListener (OnItemViewSelectedListener listener) "," Sets an item selection listener. <br /><br />"
"android.support.v17.leanback.app.DetailsFragment.getOnItemClickedListener ()    This method is deprecated. Use getOnItemViewClickedListener () "," This method is deprecated. Use getOnItemViewClickedListener() <br /><br />"
"android.support.v17.leanback.app.DetailsFragment.onViewCreated (View view, Bundle savedInstanceState)   Called immediately after onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called immediately after onCreateView(LayoutInflater, ViewGroup, Bundle) has returned, but before any saved state has been restored in to the view. <br /><br />"
"android.support.v17.leanback.app.DetailsFragment.prepareEntranceTransition () "," Enables entrance transition. <br /><br />"
"android.support.v17.leanback.app.DetailsFragment.getOnItemViewClickedListener () "," Returns the item Clicked listener. <br /><br />"
"android.support.v17.leanback.app.DetailsFragment.onStart () "," Called when the Fragment is visible to the user. <br /><br />"
"android.support.v17.leanback.app.DetailsFragment.setSelectedPosition (int position, boolean smooth) "," Sets the selected row position. <br /><br />"
"android.support.v17.leanback.app.DetailsFragment.setOnItemViewClickedListener (OnItemViewClickedListener listener) "," Sets an item Clicked listener. <br /><br />"
"android.support.v17.leanback.app.DetailsFragment.onCreate (Bundle savedInstanceState) "," Called to do initial creation of a fragment. <br /><br />"
"android.support.v17.leanback.app.DetailsFragment.getAdapter () "," Returns the list of rows. <br /><br />"
"android.support.v17.leanback.app.DetailsFragment.setSelectedPosition (int position) "," Sets the selected row position with smooth animation. <br /><br />"
"android.support.v17.leanback.app.DetailsFragment.setOnItemSelectedListener (OnItemSelectedListener listener)    This method is deprecated. Use setOnItemViewSelectedListener (OnItemViewSelectedListener) "," This method is deprecated. Use setOnItemViewSelectedListener(OnItemViewSelectedListener) <br /><br />"
"android.support.v17.leanback.app.DetailsFragment.setOnItemClickedListener (OnItemClickedListener listener)    This method is deprecated. Use setOnItemViewClickedListener (OnItemViewClickedListener) "," This method is deprecated. Use setOnItemViewClickedListener(OnItemViewClickedListener) <br /><br />"
"android.support.v17.leanback.app.DetailsFragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Called to have the fragment instantiate its user interface view. <br /><br />"
"android.support.v17.leanback.app.DetailsFragment.setAdapter (ObjectAdapter adapter) "," Sets the list of rows for the fragment. <br /><br />"
"android.support.v17.leanback.app.DetailsSupportFragment.startEntranceTransition ()   When fragment finishes loading data, it should call startEntranceTransition () "," When fragment finishes loading data, it should call startEntranceTransition() to execute the entrance transition. <br /><br />"
"android.support.v17.leanback.app.DetailsSupportFragment.setOnItemViewSelectedListener (OnItemViewSelectedListener listener) "," Sets an item selection listener. <br /><br />"
"android.support.v17.leanback.app.DetailsSupportFragment.getOnItemClickedListener ()    This method is deprecated. Use getOnItemViewClickedListener () "," This method is deprecated. Use getOnItemViewClickedListener() <br /><br />"
"android.support.v17.leanback.app.DetailsSupportFragment.onViewCreated (View view, Bundle savedInstanceState)   Called immediately after onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called immediately after onCreateView(LayoutInflater, ViewGroup, Bundle) has returned, but before any saved state has been restored in to the view. <br /><br />"
"android.support.v17.leanback.app.DetailsSupportFragment.prepareEntranceTransition () "," Enables entrance transition. <br /><br />"
"android.support.v17.leanback.app.DetailsSupportFragment.getOnItemViewClickedListener () "," Returns the item Clicked listener. <br /><br />"
"android.support.v17.leanback.app.DetailsSupportFragment.onStart () "," Called when the Fragment is visible to the user. <br /><br />"
"android.support.v17.leanback.app.DetailsSupportFragment.setSelectedPosition (int position, boolean smooth) "," Sets the selected row position. <br /><br />"
"android.support.v17.leanback.app.DetailsSupportFragment.setOnItemViewClickedListener (OnItemViewClickedListener listener) "," Sets an item Clicked listener. <br /><br />"
"android.support.v17.leanback.app.DetailsSupportFragment.onCreate (Bundle savedInstanceState) "," Called to do initial creation of a fragment. <br /><br />"
"android.support.v17.leanback.app.DetailsSupportFragment.getAdapter () "," Returns the list of rows. <br /><br />"
"android.support.v17.leanback.app.DetailsSupportFragment.setSelectedPosition (int position) "," Sets the selected row position with smooth animation. <br /><br />"
"android.support.v17.leanback.app.DetailsSupportFragment.setOnItemSelectedListener (OnItemSelectedListener listener)    This method is deprecated. Use setOnItemViewSelectedListener (OnItemViewSelectedListener) "," This method is deprecated. Use setOnItemViewSelectedListener(OnItemViewSelectedListener) <br /><br />"
"android.support.v17.leanback.app.DetailsSupportFragment.setOnItemClickedListener (OnItemClickedListener listener)    This method is deprecated. Use setOnItemViewClickedListener (OnItemViewClickedListener) "," This method is deprecated. Use setOnItemViewClickedListener(OnItemViewClickedListener) <br /><br />"
"android.support.v17.leanback.app.DetailsSupportFragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Called to have the fragment instantiate its user interface view. <br /><br />"
"android.support.v17.leanback.app.DetailsSupportFragment.setAdapter (ObjectAdapter adapter) "," Sets the list of rows for the fragment. <br /><br />"
"android.support.v17.leanback.app.ErrorFragment.setMessage (CharSequence message) "," Sets the error message. <br /><br />"
"android.support.v17.leanback.app.ErrorFragment.setTitle (String title) "," Sets a title for the browse fragment. <br /><br />"
"android.support.v17.leanback.app.ErrorFragment.setDefaultBackground (boolean translucent) "," Sets the default background. <br /><br />"
"android.support.v17.leanback.app.ErrorFragment.setButtonText (String text) "," Sets the button text. <br /><br />"
"android.support.v17.leanback.app.ErrorFragment.setBadgeDrawable (Drawable drawable) "," Sets the drawable displayed in the browse fragment title. <br /><br />"
"android.support.v17.leanback.app.ErrorFragment.getImageDrawable () "," Returns the drawable used for the error image. <br /><br />"
"android.support.v17.leanback.app.ErrorFragment.getBadgeDrawable () "," Returns the badge drawable used in the fragment title. <br /><br />"
"android.support.v17.leanback.app.ErrorFragment.onStart () "," Called when the Fragment is visible to the user. <br /><br />"
"android.support.v17.leanback.app.ErrorFragment.getButtonClickListener () "," Returns the button click listener. <br /><br />"
"android.support.v17.leanback.app.ErrorFragment.setBackgroundDrawable (Drawable drawable) "," Sets a drawable for the fragment background. <br /><br />"
"android.support.v17.leanback.app.ErrorFragment.setImageDrawable (Drawable drawable) "," Sets the drawable to be used for the error image. <br /><br />"
"android.support.v17.leanback.app.ErrorFragment.getButtonText () "," Returns the button text. <br /><br />"
"android.support.v17.leanback.app.ErrorFragment.getTitle () "," Returns the title for the browse fragment. <br /><br />"
"android.support.v17.leanback.app.ErrorFragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Called to have the fragment instantiate its user interface view. <br /><br />"
"android.support.v17.leanback.app.ErrorFragment.isBackgroundTranslucent () "," Returns true if the background is translucent. <br /><br />"
"android.support.v17.leanback.app.ErrorFragment.getMessage () "," Returns the error message. <br /><br />"
"android.support.v17.leanback.app.ErrorFragment.setButtonClickListener (View.OnClickListener clickListener) "," Set the button click listener. <br /><br />"
"android.support.v17.leanback.app.ErrorFragment.getBackgroundDrawable () "," Returns the background drawable. <br /><br />"
"android.support.v17.leanback.app.ErrorSupportFragment.setMessage (CharSequence message) "," Sets the error message. <br /><br />"
"android.support.v17.leanback.app.ErrorSupportFragment.setTitle (String title) "," Sets a title for the browse fragment. <br /><br />"
"android.support.v17.leanback.app.ErrorSupportFragment.setDefaultBackground (boolean translucent) "," Sets the default background. <br /><br />"
"android.support.v17.leanback.app.ErrorSupportFragment.setButtonText (String text) "," Sets the button text. <br /><br />"
"android.support.v17.leanback.app.ErrorSupportFragment.setBadgeDrawable (Drawable drawable) "," Sets the drawable displayed in the browse fragment title. <br /><br />"
"android.support.v17.leanback.app.ErrorSupportFragment.getImageDrawable () "," Returns the drawable used for the error image. <br /><br />"
"android.support.v17.leanback.app.ErrorSupportFragment.getBadgeDrawable () "," Returns the badge drawable used in the fragment title. <br /><br />"
"android.support.v17.leanback.app.ErrorSupportFragment.onStart () "," Called when the Fragment is visible to the user. <br /><br />"
"android.support.v17.leanback.app.ErrorSupportFragment.getButtonClickListener () "," Returns the button click listener. <br /><br />"
"android.support.v17.leanback.app.ErrorSupportFragment.setBackgroundDrawable (Drawable drawable) "," Sets a drawable for the fragment background. <br /><br />"
"android.support.v17.leanback.app.ErrorSupportFragment.setImageDrawable (Drawable drawable) "," Sets the drawable to be used for the error image. <br /><br />"
"android.support.v17.leanback.app.ErrorSupportFragment.getButtonText () "," Returns the button text. <br /><br />"
"android.support.v17.leanback.app.ErrorSupportFragment.getTitle () "," Returns the title for the browse fragment. <br /><br />"
"android.support.v17.leanback.app.ErrorSupportFragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Called to have the fragment instantiate its user interface view. <br /><br />"
"android.support.v17.leanback.app.ErrorSupportFragment.isBackgroundTranslucent () "," Returns true if the background is translucent. <br /><br />"
"android.support.v17.leanback.app.ErrorSupportFragment.getMessage () "," Returns the error message. <br /><br />"
"android.support.v17.leanback.app.ErrorSupportFragment.setButtonClickListener (View.OnClickListener clickListener) "," Set the button click listener. <br /><br />"
"android.support.v17.leanback.app.ErrorSupportFragment.getBackgroundDrawable () "," Returns the background drawable. <br /><br />"
"android.support.v17.leanback.app.HeadersFragment.setOnItemSelectedListener (OnItemSelectedListener listener) "," no description <br /><br />"
"android.support.v17.leanback.app.HeadersFragment.onDestroyView ()   Called when the view previously created by onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called when the view previously created by onCreateView(LayoutInflater, ViewGroup, Bundle) has been detached from the fragment. <br /><br />"
"android.support.v17.leanback.app.HeadersFragment.setOnHeaderClickedListener (HeadersFragment.OnHeaderClickedListener listener) "," no description <br /><br />"
"android.support.v17.leanback.app.HeadersFragment.getAdapter () "," Returns the list of rows. <br /><br />"
"android.support.v17.leanback.app.HeadersFragment.onViewCreated (View view, Bundle savedInstanceState)   Called immediately after onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called immediately after onCreateView(LayoutInflater, ViewGroup, Bundle) has returned, but before any saved state has been restored in to the view. <br /><br />"
"android.support.v17.leanback.app.HeadersFragment.setSelectedPosition (int position) "," Sets the selected row position with smooth animation. <br /><br />"
"android.support.v17.leanback.app.HeadersFragment.getPresenterSelector () "," Get the presenter selector used to create and bind views. <br /><br />"
"android.support.v17.leanback.app.HeadersFragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Called to have the fragment instantiate its user interface view. <br /><br />"
"android.support.v17.leanback.app.HeadersFragment.setAdapter (ObjectAdapter rowsAdapter) "," Sets the adapter for the fragment. <br /><br />"
"android.support.v17.leanback.app.HeadersFragment.setSelectedPosition (int position, boolean smooth) "," Sets the selected row position. <br /><br />"
"android.support.v17.leanback.app.HeadersFragment.setPresenterSelector (PresenterSelector presenterSelector) "," Set the presenter selector used to create and bind views. <br /><br />"
"android.support.v17.leanback.app.HeadersSupportFragment.setOnItemSelectedListener (OnItemSelectedListener listener) "," no description <br /><br />"
"android.support.v17.leanback.app.HeadersSupportFragment.onDestroyView ()   Called when the view previously created by onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called when the view previously created by onCreateView(LayoutInflater, ViewGroup, Bundle) has been detached from the fragment. <br /><br />"
"android.support.v17.leanback.app.HeadersSupportFragment.getAdapter () "," Returns the list of rows. <br /><br />"
"android.support.v17.leanback.app.HeadersSupportFragment.onViewCreated (View view, Bundle savedInstanceState)   Called immediately after onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called immediately after onCreateView(LayoutInflater, ViewGroup, Bundle) has returned, but before any saved state has been restored in to the view. <br /><br />"
"android.support.v17.leanback.app.HeadersSupportFragment.setSelectedPosition (int position) "," Sets the selected row position with smooth animation. <br /><br />"
"android.support.v17.leanback.app.HeadersSupportFragment.getPresenterSelector () "," Get the presenter selector used to create and bind views. <br /><br />"
"android.support.v17.leanback.app.HeadersSupportFragment.setOnHeaderClickedListener (HeadersSupportFragment.OnHeaderClickedListener listener) "," no description <br /><br />"
"android.support.v17.leanback.app.HeadersSupportFragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Called to have the fragment instantiate its user interface view. <br /><br />"
"android.support.v17.leanback.app.HeadersSupportFragment.setAdapter (ObjectAdapter rowsAdapter) "," Sets the adapter for the fragment. <br /><br />"
"android.support.v17.leanback.app.HeadersSupportFragment.setSelectedPosition (int position, boolean smooth) "," Sets the selected row position. <br /><br />"
"android.support.v17.leanback.app.HeadersSupportFragment.setPresenterSelector (PresenterSelector presenterSelector) "," Set the presenter selector used to create and bind views. <br /><br />"
"android.support.v17.leanback.app.MediaControllerGlue.detach () "," Detaches from the media controller. <br /><br />"
"android.support.v17.leanback.app.MediaControllerGlue.getMediaDuration () "," Returns the duration of the media item in milliseconds. <br /><br />"
"android.support.v17.leanback.app.MediaControllerGlue.getCurrentSpeedId () "," Returns the current playback speed. <br /><br />"
"android.support.v17.leanback.app.MediaControllerGlue.hasValidMedia () "," Returns true if there is a valid media item. <br /><br />"
"android.support.v17.leanback.app.MediaControllerGlue.getSupportedActions () "," Returns a bitmask of actions supported by the media player. <br /><br />"
"android.support.v17.leanback.app.MediaControllerGlue.getMediaSubtitle () "," Returns the subtitle of the media item. <br /><br />"
"android.support.v17.leanback.app.MediaControllerGlue.getMediaArt () "," Returns a bitmap of the art for the media item. <br /><br />"
"android.support.v17.leanback.app.MediaControllerGlue.getMediaTitle () "," Returns the title of the media item. <br /><br />"
"android.support.v17.leanback.app.MediaControllerGlue.getCurrentPosition () "," Returns the current position of the media item in milliseconds. <br /><br />"
"android.support.v17.leanback.app.MediaControllerGlue.attachToMediaController (MediaControllerCompat mediaController) "," Attaches to the given media controller. <br /><br />"
"android.support.v17.leanback.app.MediaControllerGlue.isMediaPlaying () "," Returns true if media is currently playing. <br /><br />"
"android.support.v17.leanback.app.MediaControllerGlue.getMediaController () "," Returns the media controller currently attached. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.getMediaDuration () "," Returns the duration of the media item in milliseconds. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.hasValidMedia () "," Returns true if there is a valid media item. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.getMediaSubtitle () "," Returns the subtitle of the media item. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.updateProgress () "," Updates the progress bar based on the current media playback position. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.isFadingEnabled () "," Returns true if controls are set to fade when media is playing. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.getUpdatePeriod () "," Returns the time period in milliseconds that should be used to update the progress. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.setFadingEnabled (boolean enable) "," Sets the controls to fade after a timeout when media is playing. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.getMediaTitle () "," Returns the title of the media item. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.createControlsRowAndPresenter () "," Helper method for instantiating a PlaybackControlsRow and corresponding PlaybackControlsRowPresenter. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.getOnItemViewClickedListener () "," Returns the OnItemViewClickedListener. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.getFastForwardSpeeds () "," Returns the fast forward speeds. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.setOnItemViewClickedListener (OnItemViewClickedListener listener) "," Set the OnItemViewClickedListener to be called if the click event is not handled internally. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.getCurrentSpeedId () "," Returns the current playback speed. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.getFragment () "," Returns the fragment. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.getSupportedActions () "," Returns a bitmask of actions supported by the media player. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.setControlsRow (PlaybackControlsRow controlsRow) "," Sets the controls row to be managed by the glue layer. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.getMediaArt () "," Returns a bitmap of the art for the media item. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.enableProgressUpdating (boolean enable)   Override this to start/stop a runnable to call updateProgress () at an interval such as getUpdatePeriod () "," Override this to start/stop a runnable to call updateProgress() at an interval such as getUpdatePeriod(). <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.getCurrentPosition () "," Returns the current position of the media item in milliseconds. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.getRewindSpeeds () "," Returns the rewind speeds. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.isMediaPlaying () "," Returns true if media is currently playing. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.getContext () "," Returns the context. <br /><br />"
"android.support.v17.leanback.app.PlaybackControlGlue.getControlsRow () "," Returns the playback controls row managed by the glue layer. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlayFragment.setFadingEnabled (boolean enabled) "," Enables or disables view fading. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlayFragment.isFadingEnabled () "," Returns true if view fading is enabled. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlayFragment.getBackgroundType () "," Returns the background type. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlayFragment.getInputEventHandler () "," Returns the input event handler. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlayFragment.setInputEventHandler (PlaybackOverlayFragment.InputEventHandler handler) "," Sets the input event handler. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlayFragment.setBackgroundType (int type) "," Sets the background type. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlayFragment.tickle () "," Tickles the playback controls. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlayFragment.onCreate (Bundle savedInstanceState) "," Called to do initial creation of a fragment. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlayFragment.getFadeCompleteListener () "," Returns the listener to be called when fade in or out has completed. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlayFragment.onDestroyView ()   Called when the view previously created by onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called when the view previously created by onCreateView(LayoutInflater, ViewGroup, Bundle) has been detached from the fragment. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlayFragment.setFadeCompleteListener (PlaybackOverlayFragment.OnFadeCompleteListener listener) "," Sets the listener to be called when fade in or out has completed. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlayFragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Called to have the fragment instantiate its user interface view. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlayFragment.onResume () "," Called when the fragment is visible to the user and actively running. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlayFragment.setAdapter (ObjectAdapter adapter) "," Sets the list of rows for the fragment. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlayFragment.InputEventHandler.handleInputEvent (InputEvent event) "," Called when an InputEvent is received. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlayFragment.OnFadeCompleteListener.onFadeOutComplete () "," no description <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlayFragment.OnFadeCompleteListener.onFadeInComplete () "," no description <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlaySupportFragment.setFadingEnabled (boolean enabled) "," Enables or disables view fading. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlaySupportFragment.setInputEventHandler (PlaybackOverlaySupportFragment.InputEventHandler handler) "," Sets the input event handler. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlaySupportFragment.isFadingEnabled () "," Returns true if view fading is enabled. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlaySupportFragment.getBackgroundType () "," Returns the background type. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlaySupportFragment.getInputEventHandler () "," Returns the input event handler. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlaySupportFragment.setFadeCompleteListener (PlaybackOverlaySupportFragment.OnFadeCompleteListener listener) "," Sets the listener to be called when fade in or out has completed. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlaySupportFragment.setBackgroundType (int type) "," Sets the background type. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlaySupportFragment.tickle () "," Tickles the playback controls. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlaySupportFragment.onCreate (Bundle savedInstanceState) "," Called to do initial creation of a fragment. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlaySupportFragment.getFadeCompleteListener () "," Returns the listener to be called when fade in or out has completed. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlaySupportFragment.onDestroyView ()   Called when the view previously created by onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called when the view previously created by onCreateView(LayoutInflater, ViewGroup, Bundle) has been detached from the fragment. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlaySupportFragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Called to have the fragment instantiate its user interface view. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlaySupportFragment.onResume () "," Called when the fragment is visible to the user and actively running. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlaySupportFragment.setAdapter (ObjectAdapter adapter) "," Sets the list of rows for the fragment. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlaySupportFragment.InputEventHandler.handleInputEvent (InputEvent event) "," Called when an InputEvent is received. <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlaySupportFragment.OnFadeCompleteListener.onFadeOutComplete () "," no description <br /><br />"
"android.support.v17.leanback.app.PlaybackOverlaySupportFragment.OnFadeCompleteListener.onFadeInComplete () "," no description <br /><br />"
"android.support.v17.leanback.app.RowsFragment.setOnItemViewSelectedListener (OnItemViewSelectedListener listener) "," Sets an item selection listener. <br /><br />"
"android.support.v17.leanback.app.RowsFragment.onViewCreated (View view, Bundle savedInstanceState)   Called immediately after onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called immediately after onCreateView(LayoutInflater, ViewGroup, Bundle) has returned, but before any saved state has been restored in to the view. <br /><br />"
"android.support.v17.leanback.app.RowsFragment.getPresenterSelector () "," Get the presenter selector used to create and bind views. <br /><br />"
"android.support.v17.leanback.app.RowsFragment.getOnItemViewClickedListener () "," Returns the item clicked listener. <br /><br />"
"android.support.v17.leanback.app.RowsFragment.getOnItemViewSelectedListener () "," Returns an item selection listener. <br /><br />"
"android.support.v17.leanback.app.RowsFragment.setSelectedPosition (int position, boolean smooth) "," Sets the selected row position. <br /><br />"
"android.support.v17.leanback.app.RowsFragment.setOnItemViewClickedListener (OnItemViewClickedListener listener) "," Sets an item clicked listener on the fragment. <br /><br />"
"android.support.v17.leanback.app.RowsFragment.onCreate (Bundle savedInstanceState) "," Called to do initial creation of a fragment. <br /><br />"
"android.support.v17.leanback.app.RowsFragment.onDestroyView ()   Called when the view previously created by onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called when the view previously created by onCreateView(LayoutInflater, ViewGroup, Bundle) has been detached from the fragment. <br /><br />"
"android.support.v17.leanback.app.RowsFragment.getAdapter () "," Returns the list of rows. <br /><br />"
"android.support.v17.leanback.app.RowsFragment.setSelectedPosition (int position) "," Sets the selected row position with smooth animation. <br /><br />"
"android.support.v17.leanback.app.RowsFragment.setOnItemSelectedListener (OnItemSelectedListener listener)    This method is deprecated. Use setOnItemViewSelectedListener (OnItemViewSelectedListener) "," This method is deprecated. Use setOnItemViewSelectedListener(OnItemViewSelectedListener) <br /><br />"
"android.support.v17.leanback.app.RowsFragment.getOnItemClickedListener ()    This method is deprecated. Use getOnItemClickedListener () "," This method is deprecated. Use getOnItemClickedListener() <br /><br />"
"android.support.v17.leanback.app.RowsFragment.setOnItemClickedListener (OnItemClickedListener listener)    This method is deprecated. Use setOnItemViewClickedListener (OnItemViewClickedListener) "," This method is deprecated. Use setOnItemViewClickedListener(OnItemViewClickedListener) <br /><br />"
"android.support.v17.leanback.app.RowsFragment.enableRowScaling (boolean enable) "," Enables scaling of rows. <br /><br />"
"android.support.v17.leanback.app.RowsFragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Called to have the fragment instantiate its user interface view. <br /><br />"
"android.support.v17.leanback.app.RowsFragment.setAdapter (ObjectAdapter rowsAdapter) "," Sets the adapter for the fragment. <br /><br />"
"android.support.v17.leanback.app.RowsFragment.setPresenterSelector (PresenterSelector presenterSelector) "," Set the presenter selector used to create and bind views. <br /><br />"
"android.support.v17.leanback.app.RowsFragment.setExpand (boolean expand) "," Set the visibility of titles/hovercard of browse rows. <br /><br />"
"android.support.v17.leanback.app.RowsSupportFragment.setOnItemViewSelectedListener (OnItemViewSelectedListener listener) "," Sets an item selection listener. <br /><br />"
"android.support.v17.leanback.app.RowsSupportFragment.onViewCreated (View view, Bundle savedInstanceState)   Called immediately after onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called immediately after onCreateView(LayoutInflater, ViewGroup, Bundle) has returned, but before any saved state has been restored in to the view. <br /><br />"
"android.support.v17.leanback.app.RowsSupportFragment.getPresenterSelector () "," Get the presenter selector used to create and bind views. <br /><br />"
"android.support.v17.leanback.app.RowsSupportFragment.getOnItemViewClickedListener () "," Returns the item clicked listener. <br /><br />"
"android.support.v17.leanback.app.RowsSupportFragment.getOnItemViewSelectedListener () "," Returns an item selection listener. <br /><br />"
"android.support.v17.leanback.app.RowsSupportFragment.setSelectedPosition (int position, boolean smooth) "," Sets the selected row position. <br /><br />"
"android.support.v17.leanback.app.RowsSupportFragment.setOnItemViewClickedListener (OnItemViewClickedListener listener) "," Sets an item clicked listener on the fragment. <br /><br />"
"android.support.v17.leanback.app.RowsSupportFragment.onCreate (Bundle savedInstanceState) "," Called to do initial creation of a fragment. <br /><br />"
"android.support.v17.leanback.app.RowsSupportFragment.onDestroyView ()   Called when the view previously created by onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called when the view previously created by onCreateView(LayoutInflater, ViewGroup, Bundle) has been detached from the fragment. <br /><br />"
"android.support.v17.leanback.app.RowsSupportFragment.getAdapter () "," Returns the list of rows. <br /><br />"
"android.support.v17.leanback.app.RowsSupportFragment.setSelectedPosition (int position) "," Sets the selected row position with smooth animation. <br /><br />"
"android.support.v17.leanback.app.RowsSupportFragment.setOnItemSelectedListener (OnItemSelectedListener listener)    This method is deprecated. Use setOnItemViewSelectedListener (OnItemViewSelectedListener) "," This method is deprecated. Use setOnItemViewSelectedListener(OnItemViewSelectedListener) <br /><br />"
"android.support.v17.leanback.app.RowsSupportFragment.getOnItemClickedListener ()    This method is deprecated. Use getOnItemClickedListener () "," This method is deprecated. Use getOnItemClickedListener() <br /><br />"
"android.support.v17.leanback.app.RowsSupportFragment.setOnItemClickedListener (OnItemClickedListener listener)    This method is deprecated. Use setOnItemViewClickedListener (OnItemViewClickedListener) "," This method is deprecated. Use setOnItemViewClickedListener(OnItemViewClickedListener) <br /><br />"
"android.support.v17.leanback.app.RowsSupportFragment.enableRowScaling (boolean enable) "," Enables scaling of rows. <br /><br />"
"android.support.v17.leanback.app.RowsSupportFragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Called to have the fragment instantiate its user interface view. <br /><br />"
"android.support.v17.leanback.app.RowsSupportFragment.setAdapter (ObjectAdapter rowsAdapter) "," Sets the adapter for the fragment. <br /><br />"
"android.support.v17.leanback.app.RowsSupportFragment.setPresenterSelector (PresenterSelector presenterSelector) "," Set the presenter selector used to create and bind views. <br /><br />"
"android.support.v17.leanback.app.RowsSupportFragment.setExpand (boolean expand) "," Set the visibility of titles/hovercard of browse rows. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.setSpeechRecognitionCallback (SpeechRecognitionCallback callback) "," Set this callback to have the fragment pass speech recognition requests to the activity rather than using an internal recognizer. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.setOnItemViewSelectedListener (OnItemViewSelectedListener listener) "," Sets an item selection listener for the results. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.setTitle (String title) "," Sets the title string to be be shown in an empty search bar. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.setSearchResultProvider (SearchFragment.SearchResultProvider searchResultProvider) "," Set the search provider that is responsible for returning results for the search query. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.displayCompletions (List< String> completions) "," Display the completions shown by the IME. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.getRecognizerIntent () "," Returns an intent that can be used to request speech recognition. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.onPause () "," Called when the Fragment is no longer resumed. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.setSearchQuery (String query, boolean submit) "," Sets the text of the search query and optionally submits the query. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.setBadgeDrawable (Drawable drawable) "," Sets the badge drawable that will be shown inside the search bar next to the title. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.newInstance (String query) "," Create a search fragment with a given search query. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.getBadgeDrawable () "," Returns the badge drawable in the search bar. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.onStart () "," Called when the Fragment is visible to the user. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.setSearchQuery (Intent intent, boolean submit) "," Sets the text of the search query based on the EXTRA_RESULTS in the given intent, and optionally submit the query. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.setOnItemViewClickedListener (OnItemViewClickedListener listener) "," Sets an item clicked listener for the results. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.onCreate (Bundle savedInstanceState) "," Called to do initial creation of a fragment. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.createArgs (Bundle args, String query) "," no description <br /><br />"
"android.support.v17.leanback.app.SearchFragment.createArgs (Bundle args, String query, String title) "," no description <br /><br />"
"android.support.v17.leanback.app.SearchFragment.onDestroy () "," Called when the fragment is no longer in use. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.setOnItemSelectedListener (OnItemSelectedListener listener)    This method is deprecated. Use setOnItemViewSelectedListener (OnItemViewSelectedListener) "," This method is deprecated. Use setOnItemViewSelectedListener(OnItemViewSelectedListener) <br /><br />"
"android.support.v17.leanback.app.SearchFragment.setOnItemClickedListener (OnItemClickedListener listener)    This method is deprecated. Use setOnItemViewClickedListener (OnItemViewClickedListener) "," This method is deprecated. Use setOnItemViewClickedListener(OnItemViewClickedListener) <br /><br />"
"android.support.v17.leanback.app.SearchFragment.getTitle () "," Returns the title set in the search bar. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Called to have the fragment instantiate its user interface view. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.startRecognition () "," Starts speech recognition. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.onResume () "," Called when the fragment is visible to the user and actively running. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.SearchResultProvider.getResultsAdapter () "," Method invoked some time prior to the first call to onQueryTextChange to retrieve an ObjectAdapter that will contain the results to future updates of the search query. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.SearchResultProvider.onQueryTextChange (String newQuery) "," Method invoked when the search query is updated. <br /><br />"
"android.support.v17.leanback.app.SearchFragment.SearchResultProvider.onQueryTextSubmit (String query) "," Method invoked when the search query is submitted, either by dismissing the keyboard, pressing search or next on the keyboard or when voice has detected the end of the query. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.setSpeechRecognitionCallback (SpeechRecognitionCallback callback) "," Set this callback to have the fragment pass speech recognition requests to the activity rather than using an internal recognizer. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.setOnItemViewSelectedListener (OnItemViewSelectedListener listener) "," Sets an item selection listener for the results. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.setTitle (String title) "," Sets the title string to be be shown in an empty search bar. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.displayCompletions (List< String> completions) "," Display the completions shown by the IME. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.getRecognizerIntent () "," Returns an intent that can be used to request speech recognition. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.onPause () "," Called when the Fragment is no longer resumed. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.setSearchQuery (String query, boolean submit) "," Sets the text of the search query and optionally submits the query. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.setBadgeDrawable (Drawable drawable) "," Sets the badge drawable that will be shown inside the search bar next to the title. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.newInstance (String query) "," Create a search fragment with a given search query. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.getBadgeDrawable () "," Returns the badge drawable in the search bar. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.onStart () "," Called when the Fragment is visible to the user. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.setSearchQuery (Intent intent, boolean submit) "," Sets the text of the search query based on the EXTRA_RESULTS in the given intent, and optionally submit the query. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.setOnItemViewClickedListener (OnItemViewClickedListener listener) "," Sets an item clicked listener for the results. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.onCreate (Bundle savedInstanceState) "," Called to do initial creation of a fragment. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.setSearchResultProvider (SearchSupportFragment.SearchResultProvider searchResultProvider) "," Set the search provider that is responsible for returning results for the search query. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.createArgs (Bundle args, String query) "," no description <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.createArgs (Bundle args, String query, String title) "," no description <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.onDestroy () "," Called when the fragment is no longer in use. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.setOnItemSelectedListener (OnItemSelectedListener listener)    This method is deprecated. Use setOnItemViewSelectedListener (OnItemViewSelectedListener) "," This method is deprecated. Use setOnItemViewSelectedListener(OnItemViewSelectedListener) <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.setOnItemClickedListener (OnItemClickedListener listener)    This method is deprecated. Use setOnItemViewClickedListener (OnItemViewClickedListener) "," This method is deprecated. Use setOnItemViewClickedListener(OnItemViewClickedListener) <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.getTitle () "," Returns the title set in the search bar. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Called to have the fragment instantiate its user interface view. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.startRecognition () "," Starts speech recognition. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.onResume () "," Called when the fragment is visible to the user and actively running. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.SearchResultProvider.getResultsAdapter () "," Method invoked some time prior to the first call to onQueryTextChange to retrieve an ObjectAdapter that will contain the results to future updates of the search query. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.SearchResultProvider.onQueryTextChange (String newQuery) "," Method invoked when the search query is updated. <br /><br />"
"android.support.v17.leanback.app.SearchSupportFragment.SearchResultProvider.onQueryTextSubmit (String query) "," Method invoked when the search query is submitted, either by dismissing the keyboard, pressing search or next on the keyboard or when voice has detected the end of the query. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.setOnItemViewSelectedListener (OnItemViewSelectedListener listener) "," Sets an item selection listener. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.setTitle (String title) "," Sets a title for the fragment. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.onPause () "," Called when the Fragment is no longer resumed. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.setBadgeDrawable (Drawable drawable) "," Sets the badge drawable displayed in the title area. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.getOnItemViewClickedListener () "," Returns the item clicked listener. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.getSearchAffordanceColors () "," Returns the SearchOrbView.Colors used to draw the search affordance. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.onDestroyView ()   Called when the view previously created by onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called when the view previously created by onCreateView(LayoutInflater, ViewGroup, Bundle) has been detached from the fragment. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.setSelectedPosition (int position) "," Sets the selected item position. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.getGridPresenter () "," Returns the grid presenter. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.setOnItemSelectedListener (OnItemSelectedListener listener)    This method is deprecated. Use setOnItemViewSelectedListener (OnItemViewSelectedListener) "," This method is deprecated. Use setOnItemViewSelectedListener(OnItemViewSelectedListener) <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.setOnItemClickedListener (OnItemClickedListener listener)    This method is deprecated. Use setOnItemViewClickedListener (OnItemViewClickedListener) "," This method is deprecated. Use setOnItemViewClickedListener(OnItemViewClickedListener) <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.getTitle () "," Returns the title for the fragment. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.onResume () "," Called when the fragment is visible to the user and actively running. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.setGridPresenter (VerticalGridPresenter gridPresenter) "," Sets the grid presenter. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.setOnSearchClickedListener (View.OnClickListener listener) "," Sets a click listener for the search affordance. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.setAdapter (ObjectAdapter adapter) "," Sets the object adapter for the fragment. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.getOnItemClickedListener ()    This method is deprecated. Use getOnItemViewClickedListener () "," This method is deprecated. Use getOnItemViewClickedListener() <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.setSearchAffordanceColors (SearchOrbView.Colors colors) "," Sets the SearchOrbView.Colors used to draw the search affordance. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.onViewCreated (View view, Bundle savedInstanceState)   Called immediately after onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called immediately after onCreateView(LayoutInflater, ViewGroup, Bundle) has returned, but before any saved state has been restored in to the view. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.getBadgeDrawable () "," Returns the badge drawable. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.onStart () "," Called when the Fragment is visible to the user. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.setSearchAffordanceColor (int color) "," Sets the color used to draw the search affordance. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.getSearchAffordanceColor () "," Returns the color used to draw the search affordance. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.setOnItemViewClickedListener (OnItemViewClickedListener listener) "," Sets an item clicked listener. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.getAdapter () "," Returns the object adapter. <br /><br />"
"android.support.v17.leanback.app.VerticalGridFragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Called to have the fragment instantiate its user interface view. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.setOnItemViewSelectedListener (OnItemViewSelectedListener listener) "," Sets an item selection listener. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.setTitle (String title) "," Sets a title for the fragment. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.onPause () "," Called when the Fragment is no longer resumed. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.setBadgeDrawable (Drawable drawable) "," Sets the badge drawable displayed in the title area. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.getOnItemViewClickedListener () "," Returns the item clicked listener. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.getSearchAffordanceColors () "," Returns the SearchOrbView.Colors used to draw the search affordance. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.onDestroyView ()   Called when the view previously created by onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called when the view previously created by onCreateView(LayoutInflater, ViewGroup, Bundle) has been detached from the fragment. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.setSelectedPosition (int position) "," Sets the selected item position. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.getGridPresenter () "," Returns the grid presenter. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.setOnItemSelectedListener (OnItemSelectedListener listener)    This method is deprecated. Use setOnItemViewSelectedListener (OnItemViewSelectedListener) "," This method is deprecated. Use setOnItemViewSelectedListener(OnItemViewSelectedListener) <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.setOnItemClickedListener (OnItemClickedListener listener)    This method is deprecated. Use setOnItemViewClickedListener (OnItemViewClickedListener) "," This method is deprecated. Use setOnItemViewClickedListener(OnItemViewClickedListener) <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.getTitle () "," Returns the title for the fragment. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.onResume () "," Called when the fragment is visible to the user and actively running. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.setGridPresenter (VerticalGridPresenter gridPresenter) "," Sets the grid presenter. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.setOnSearchClickedListener (View.OnClickListener listener) "," Sets a click listener for the search affordance. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.setAdapter (ObjectAdapter adapter) "," Sets the object adapter for the fragment. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.getOnItemClickedListener ()    This method is deprecated. Use getOnItemViewClickedListener () "," This method is deprecated. Use getOnItemViewClickedListener() <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.setSearchAffordanceColors (SearchOrbView.Colors colors) "," Sets the SearchOrbView.Colors used to draw the search affordance. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.onViewCreated (View view, Bundle savedInstanceState)   Called immediately after onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called immediately after onCreateView(LayoutInflater, ViewGroup, Bundle) has returned, but before any saved state has been restored in to the view. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.getBadgeDrawable () "," Returns the badge drawable. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.onStart () "," Called when the Fragment is visible to the user. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.setSearchAffordanceColor (int color) "," Sets the color used to draw the search affordance. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.getSearchAffordanceColor () "," Returns the color used to draw the search affordance. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.setOnItemViewClickedListener (OnItemViewClickedListener listener) "," Sets an item clicked listener. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.getAdapter () "," Returns the object adapter. <br /><br />"
"android.support.v17.leanback.app.VerticalGridSupportFragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Called to have the fragment instantiate its user interface view. <br /><br />"
"android.support.v17.leanback.database.CursorMapper.convert (Cursor cursor) "," Convert a Cursor at its current position to an Object. <br /><br />"
"android.support.v17.leanback.graphics.ColorFilterCache.getFilterForLevel (float level) "," Returns a ColorFilter for a given alpha level between 0 and 1.0. <br /><br />"
"android.support.v17.leanback.graphics.ColorFilterCache.getColorFilterCache (int color) "," Get a ColorDimmer for a given color. <br /><br />"
"android.support.v17.leanback.graphics.ColorFilterDimmer.setActiveLevel (float level) "," Sets the active level of the dimmer. <br /><br />"
"android.support.v17.leanback.graphics.ColorFilterDimmer.applyFilterToView (View view) "," Apply current the ColorFilter to a View. <br /><br />"
"android.support.v17.leanback.graphics.ColorFilterDimmer.createDefault (Context context) "," Creates a default ColorFilterDimmer. <br /><br />"
"android.support.v17.leanback.graphics.ColorFilterDimmer.getColorFilter () "," Gets the ColorFilter set to the current dim level. <br /><br />"
"android.support.v17.leanback.graphics.ColorFilterDimmer.getPaint () "," Gets the Paint object set to the current dim level. <br /><br />"
"android.support.v17.leanback.graphics.ColorFilterDimmer.create (ColorFilterCache dimmer, float activeLevel, float dimmedLevel) "," Creates a ColorFilterDimmer for the given color and levels.. <br /><br />"
"android.support.v17.leanback.graphics.ColorOverlayDimmer.setActiveLevel (float level) "," Sets the active level of the dimmer. <br /><br />"
"android.support.v17.leanback.graphics.ColorOverlayDimmer.createColorOverlayDimmer (int dimColor, float activeLevel, float dimmedLevel) "," Creates a ColorOverlayDimmer for the given color and levels. <br /><br />"
"android.support.v17.leanback.graphics.ColorOverlayDimmer.applyToColor (int color) "," Change the RGB of the color according to current dim level. <br /><br />"
"android.support.v17.leanback.graphics.ColorOverlayDimmer.getAlphaFloat () "," Returns the float value between 0 and 1 corresponding to alpha between 0 and 255. <br /><br />"
"android.support.v17.leanback.graphics.ColorOverlayDimmer.drawColorOverlay (Canvas c, View v, boolean includePadding) "," Draw a dim color overlay on top of a child View inside the canvas of the parent View. <br /><br />"
"android.support.v17.leanback.graphics.ColorOverlayDimmer.createDefault (Context context) "," Creates a default ColorOverlayDimmer. <br /><br />"
"android.support.v17.leanback.graphics.ColorOverlayDimmer.needsDraw () "," Returns whether the dimmer needs to draw. <br /><br />"
"android.support.v17.leanback.graphics.ColorOverlayDimmer.getAlpha () "," Returns the alpha value for the dimmer. <br /><br />"
"android.support.v17.leanback.graphics.ColorOverlayDimmer.getPaint () "," Returns the Paint object set to the current alpha value. <br /><br />"
"android.support.v17.leanback.transition.SlideNoPropagation.setSlideEdge (int slideEdge) "," Change the edge that Views appear and disappear from. <br /><br />"
"android.support.v17.leanback.widget.AbstractDetailsDescriptionPresenter.onViewDetachedFromWindow (Presenter.ViewHolder holder) "," Called when a view created by this presenter has been detached from its window. <br /><br />"
"android.support.v17.leanback.widget.AbstractDetailsDescriptionPresenter.onBindViewHolder (Presenter.ViewHolder viewHolder, Object item) "," Binds a View to an item. <br /><br />"
"android.support.v17.leanback.widget.AbstractDetailsDescriptionPresenter.onCreateViewHolder (ViewGroup parent) "," Creates a new View. <br /><br />"
"android.support.v17.leanback.widget.AbstractDetailsDescriptionPresenter.onViewAttachedToWindow (Presenter.ViewHolder holder) "," Called when a view created by this presenter has been attached to a window. <br /><br />"
"android.support.v17.leanback.widget.AbstractDetailsDescriptionPresenter.onUnbindViewHolder (Presenter.ViewHolder viewHolder) "," Unbinds a View from an item. <br /><br />"
"android.support.v17.leanback.widget.AbstractDetailsDescriptionPresenter.ViewHolder.getBody () "," no description <br /><br />"
"android.support.v17.leanback.widget.AbstractDetailsDescriptionPresenter.ViewHolder.getTitle () "," no description <br /><br />"
"android.support.v17.leanback.widget.AbstractDetailsDescriptionPresenter.ViewHolder.getSubtitle () "," no description <br /><br />"
"android.support.v17.leanback.widget.Action.getIcon () "," Returns the icon drawable for this Action. <br /><br />"
"android.support.v17.leanback.widget.Action.getLabel2 () "," Returns the second line label for this Action. <br /><br />"
"android.support.v17.leanback.widget.Action.getId () "," Returns the id for this Action. <br /><br />"
"android.support.v17.leanback.widget.Action.setLabel1 (CharSequence label) "," Set the first line label for this Action. <br /><br />"
"android.support.v17.leanback.widget.Action.setLabel2 (CharSequence label) "," Set the second line label for this Action. <br /><br />"
"android.support.v17.leanback.widget.Action.getLabel1 () "," Returns the first line label for this Action. <br /><br />"
"android.support.v17.leanback.widget.Action.setIcon (Drawable icon) "," Set the icon drawable for this Action. <br /><br />"
"android.support.v17.leanback.widget.Action.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v17.leanback.widget.Action.setId (long id) "," Set id for this Action. <br /><br />"
"android.support.v17.leanback.widget.ArrayObjectAdapter.clear () "," Removes all items from this adapter, leaving it empty. <br /><br />"
"android.support.v17.leanback.widget.ArrayObjectAdapter.remove (Object item) "," Removes the first occurrence of the given item from the adapter. <br /><br />"
"android.support.v17.leanback.widget.ArrayObjectAdapter.get (int index) "," Returns the item for the given position. <br /><br />"
"android.support.v17.leanback.widget.ArrayObjectAdapter.unmodifiableList () "," Gets a read-only view of the list of object of this ArrayObjectAdapter. <br /><br />"
"android.support.v17.leanback.widget.ArrayObjectAdapter.indexOf (Object item) "," Returns the index for the first occurrence of item in the adapter, or -1 if not found. <br /><br />"
"android.support.v17.leanback.widget.ArrayObjectAdapter.add (int index, Object item) "," Inserts an item into this adapter at the specified index. <br /><br />"
"android.support.v17.leanback.widget.ArrayObjectAdapter.addAll (int index, Collection items) "," Adds the objects in the given collection to the adapter, starting at the given index. <br /><br />"
"android.support.v17.leanback.widget.ArrayObjectAdapter.replace (int position, Object item)   Replaces item at position with a new item and calls notifyItemRangeChanged () "," Replaces item at position with a new item and calls notifyItemRangeChanged() at the given position. <br /><br />"
"android.support.v17.leanback.widget.ArrayObjectAdapter.size () "," Returns the number of items in the adapter. <br /><br />"
"android.support.v17.leanback.widget.ArrayObjectAdapter.removeItems (int position, int count) "," Removes a range of items from the adapter. <br /><br />"
"android.support.v17.leanback.widget.ArrayObjectAdapter.add (Object item) "," Adds an item to the end of the adapter. <br /><br />"
"android.support.v17.leanback.widget.ArrayObjectAdapter.notifyArrayItemRangeChanged (int positionStart, int itemCount) "," Notify that the content of a range of items changed. <br /><br />"
"android.support.v17.leanback.widget.BaseCardView.getCardType () "," Returns the type of this Card. <br /><br />"
"android.support.v17.leanback.widget.BaseCardView.setInfoVisibility (int visibility) "," Sets the visibility of the info region of the card. <br /><br />"
"android.support.v17.leanback.widget.BaseCardView.shouldDelayChildPressedState () "," Return true if the pressed state should be delayed for children or descendants of this ViewGroup. <br /><br />"
"android.support.v17.leanback.widget.BaseCardView.setSelectedAnimationDelayed (boolean delay)   Sets a flag indicating if the Selected animation  (if the selected card type implements one) "," Sets a flag indicating if the Selected animation (if the selected card type implements one) should run immediately after the card is selected, or if it should be delayed. <br /><br />"
"android.support.v17.leanback.widget.BaseCardView.setExtraVisibility (int visibility) "," Sets the visibility of the extra region of the card. <br /><br />"
"android.support.v17.leanback.widget.BaseCardView.isSelectedAnimationDelayed () "," Returns a boolean indicating if the selected animation will run immediately or be delayed the next time the card is Selected. <br /><br />"
"android.support.v17.leanback.widget.BaseCardView.setSelected (boolean selected) "," Sets the Selected state of this Card. <br /><br />"
"android.support.v17.leanback.widget.BaseCardView.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v17.leanback.widget.BaseCardView.getExtraVisibility () "," Returns the visibility of the extra region of the card. <br /><br />"
"android.support.v17.leanback.widget.BaseCardView.setActivated (boolean activated) "," Sets the Activated state of this Card. <br /><br />"
"android.support.v17.leanback.widget.BaseCardView.getInfoVisibility () "," Returns the visibility of the info region of the card. <br /><br />"
"android.support.v17.leanback.widget.BaseCardView.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.support.v17.leanback.widget.BaseCardView.setCardType (int type) "," Sets the type of this Card. <br /><br />"
"android.support.v17.leanback.widget.ClassPresenterSelector.getPresenter (Object item) "," Returns a presenter for the given item. <br /><br />"
"android.support.v17.leanback.widget.ClassPresenterSelector.addClassPresenter (Class<?> cls, Presenter presenter) "," no description <br /><br />"
"android.support.v17.leanback.widget.ControlButtonPresenterSelector.getPresenter (Object item) "," Always returns the presenter for primary controls. <br /><br />"
"android.support.v17.leanback.widget.ControlButtonPresenterSelector.getSecondaryPresenter () "," Returns the presenter for secondary controls. <br /><br />"
"android.support.v17.leanback.widget.ControlButtonPresenterSelector.getPrimaryPresenter () "," Returns the presenter for primary controls. <br /><br />"
"android.support.v17.leanback.widget.CursorObjectAdapter.setMapper (CursorMapper mapper) "," Sets the CursorMapper used to convert Cursor rows into Objects. <br /><br />"
"android.support.v17.leanback.widget.CursorObjectAdapter.getMapper () "," Gets the CursorMapper used to convert Cursor rows into Objects. <br /><br />"
"android.support.v17.leanback.widget.CursorObjectAdapter.getCursor () "," Gets the Cursor backing the adapter. <br /><br />"
"android.support.v17.leanback.widget.CursorObjectAdapter.get (int index) "," Returns the item for the given position. <br /><br />"
"android.support.v17.leanback.widget.CursorObjectAdapter.close () "," Closes this adapter, closing the backing Cursor as well. <br /><br />"
"android.support.v17.leanback.widget.CursorObjectAdapter.isClosed () "," Checks whether the adapter, and hence the backing Cursor, is closed. <br /><br />"
"android.support.v17.leanback.widget.CursorObjectAdapter.size () "," Returns the number of items in the adapter. <br /><br />"
"android.support.v17.leanback.widget.CursorObjectAdapter.changeCursor (Cursor cursor) "," Change the underlying cursor to a new cursor. <br /><br />"
"android.support.v17.leanback.widget.CursorObjectAdapter.swapCursor (Cursor cursor) "," Swap in a new Cursor, returning the old Cursor. <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRow.isImageScaleUpAllowed () "," Returns true if the image may be scaled up; false otherwise. <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRow.setImageBitmap (Context context, Bitmap bm) "," Sets a Bitmap as the image of this details overview. <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRow.getItem () "," Gets the main item for the details page. <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRow.getActionsAdapter () "," Gets ObjectAdapter for actions. <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRow.setImageDrawable (Drawable drawable) "," Sets a drawable as the image of this details overview. <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRow.removeAction (Action action)    This method is deprecated. Use setActionsAdapter (ObjectAdapter) and getActionsAdapter () "," This method is deprecated. Use setActionsAdapter(ObjectAdapter) and getActionsAdapter() <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRow.getActions ()    This method is deprecated. Use setActionsAdapter (ObjectAdapter) and getActionsAdapter () "," This method is deprecated. Use setActionsAdapter(ObjectAdapter) and getActionsAdapter() <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRow.getImageDrawable () "," Gets the image drawable of this details overview. <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRow.addAction (int pos, Action action)    This method is deprecated. Use setActionsAdapter (ObjectAdapter) and getActionsAdapter () "," This method is deprecated. Use setActionsAdapter(ObjectAdapter) and getActionsAdapter() <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRow.setActionsAdapter (ObjectAdapter adapter) "," Sets ObjectAdapter for actions. <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRow.setItem (Object item) "," Sets the main item for the details page. <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRow.setImageScaleUpAllowed (boolean allowed) "," Allows or disallows scaling up of images. <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRow.addAction (Action action)    This method is deprecated. Use setActionsAdapter (ObjectAdapter) and getActionsAdapter () "," This method is deprecated. Use setActionsAdapter(ObjectAdapter) and getActionsAdapter() <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRowPresenter.setBackgroundColor (int color) "," Sets the background color. <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRowPresenter.setOnActionClickedListener (OnActionClickedListener listener) "," Sets the listener for Action click events. <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRowPresenter.isStyleLarge () "," Returns true if the layout style is large. <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRowPresenter.getOnActionClickedListener () "," Gets the listener for Action click events. <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRowPresenter.setSharedElementEnterTransition (Activity activity, String sharedElementName)   Set enter transition of target activity  (typically a DetailActivity) "," Set enter transition of target activity (typically a DetailActivity) to be transiting into overview row created by this presenter. <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRowPresenter.isUsingDefaultSelectEffect () "," Return whether this RowPresenter is using the default dimming effect provided by the library. <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRowPresenter.getBackgroundColor () "," Returns the background color. <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRowPresenter.setSharedElementEnterTransition (Activity activity, String sharedElementName, long timeoutMs)   Set enter transition of target activity  (typically a DetailActivity) "," Set enter transition of target activity (typically a DetailActivity) to be transiting into overview row created by this presenter. <br /><br />"
"android.support.v17.leanback.widget.DetailsOverviewRowPresenter.setStyleLarge (boolean large) "," Sets the layout style to be large or small. <br /><br />"
"android.support.v17.leanback.widget.FocusHighlightHelper.setupHeaderItemFocusHighlight (VerticalGridView gridView) "," Setup the focus highlight behavior of a focused item in header list. <br /><br />"
"android.support.v17.leanback.widget.FocusHighlightHelper.setupBrowseItemFocusHighlight (ItemBridgeAdapter adapter, int zoomIndex, boolean useDimmer) "," Setup the focus highlight behavior of a focused item in browse list row. <br /><br />"
"android.support.v17.leanback.widget.HeaderItem.getName () "," Returns the name of this header item. <br /><br />"
"android.support.v17.leanback.widget.HeaderItem.getId () "," Returns a unique identifier for this item. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.getWindowAlignmentOffsetPercent ()   Get offset percent for window alignment in addition to getWindowAlignmentOffset () "," Get offset percent for window alignment in addition to getWindowAlignmentOffset(). <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.getSaveChildrenPolicy () "," no description <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.onRtlPropertiesChanged (int layoutDirection) "," Notify layout manager that layout directionality has been updated <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setItemAlignmentOffset (int offset) "," Set the absolute offset in pixels for item alignment. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.getFadingRightEdgeOffset () "," Set distance in pixels between fading start position and right padding edge. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setRecyclerListener (RecyclerView.RecyclerListener listener) "," Register a listener that will be notified whenever a child view is recycled. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.getViewSelectedOffsets (View view, int[] offsets) "," Get the x/y offsets to final position from current position if the view is selected. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setFadingRightEdgeLength (int fadeLength) "," Set right edge fading length in pixels. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setFocusDrawingOrderEnabled (boolean enabled) "," Enable or disable the default 'focus draw at last' order rule. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.getItemAlignmentOffset () "," Get the absolute offset in pixels for item alignment. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.getFadingLeftEdge () "," Return true if fading left edge. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setAnimateChildLayout (boolean animateChildLayout) "," Set if an animation should run when a child changes size or when adding or removing a child. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.dispatchGenericFocusedEvent (MotionEvent event) "," Dispatch a generic motion event to the currently focused view. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.getItemAlignmentOffsetPercent ()   Get offset percent for item alignment in addition to getItemAlignmentOffset () "," Get offset percent for item alignment in addition to getItemAlignmentOffset(). <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.onRequestFocusInDescendants (int direction, Rect previouslyFocusedRect)   Look for a descendant to call requestFocus () "," Look for a descendant to call requestFocus() on. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setOnChildLaidOutListener (OnChildLaidOutListener listener) "," Register a callback to be invoked when an item in BaseGridView has been laid out. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.getSaveChildrenLimitNumber () "," no description <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setOnMotionInterceptListener (BaseGridView.OnMotionInterceptListener listener) "," Sets the generic motion intercept listener. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setFadingLeftEdgeOffset (int fadeOffset) "," Set distance in pixels between fading start position and left padding edge. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setVerticalMargin (int margin) "," Set the margin in pixels between two child items vertically. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setSelectedPositionSmooth (int position) "," Change the selected item and run an animation to scroll to the target position. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setWindowAlignment (int windowAlignment) "," Set how the focused item gets aligned in the view. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setSaveChildrenPolicy (int savePolicy) "," Set policy for saving children. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.getFadingLeftEdgeOffset () "," Get distance in pixels between fading start position and left padding edge. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setNumRows (int numRows) "," Set the number of rows. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.getFadingRightEdgeLength () "," Get right edge fading length in pixels. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setOnTouchInterceptListener (BaseGridView.OnTouchInterceptListener listener) "," Sets the touch intercept listener. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setItemAlignmentOffsetWithPadding (boolean withPadding) "," Set to true if include padding in calculating item align offset. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setHasOverlappingRendering (boolean hasOverlapping) "," no description <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.isItemAlignmentOffsetWithPadding () "," Returns true if include padding in calculating item align offset. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.isFocusDrawingOrderEnabled () "," Returns true if default 'focus draw at last' order rule is enabled. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.hasOverlappingRendering () "," Returns whether this View has content which overlaps. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setFadingLeftEdge (boolean fading) "," Set fade out left edge to transparent. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.getWindowAlignment () "," Get how the focused item gets aligned in the view. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.getFadingRightEdge () "," Return true if fading right edge. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.isChildLayoutAnimated () "," Return true if an animation will run when a child changes size or when adding or removing a child. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setFocusScrollStrategy (int scrollStrategy)   Set the strategy used to scroll in response to item focus changing:  FOCUS_SCROLL_ALIGNED  (default) "," Set the strategy used to scroll in response to item focus changing:  FOCUS_SCROLL_ALIGNED (default)  FOCUS_SCROLL_ITEM FOCUS_SCROLL_PAGE <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.dispatchTouchEvent (MotionEvent event) "," Pass the touch screen motion event down to the target view, or this view if it is the target. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setWindowAlignmentOffsetPercent (float offsetPercent)   Set offset percent for window alignment in addition to getWindowAlignmentOffset () "," Set offset percent for window alignment in addition to getWindowAlignmentOffset(). <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.getSelectedPosition () "," Get the selected item position. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setFocusSearchDisabled (boolean disabled) "," Disable or enable focus search. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setHorizontalMargin (int margin) "," Set the margin in pixels between two child items horizontally. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.getItemAlignmentViewId () "," Get the id of the view to align with, or zero for the item view itself. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setGravity (int gravity) "," Describes how the child views are positioned. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.getChildDrawingOrder (int childCount, int i) "," Returns the index of the child to draw for this iteration. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setFadingRightEdgeOffset (int fadeOffset) "," Get distance in pixels between fading start position and right padding edge. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setWindowAlignmentOffset (int offset) "," Set the offset in pixels for window alignment. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setLayoutEnabled (boolean layoutEnabled) "," Enable or disable layout. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setSelectedPosition (int position) "," Change the selected item immediately without animation. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.isScrollEnabled () "," Returns true if scrolling is enabled. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setFadingRightEdge (boolean fading) "," Set fade out right edge to transparent. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.getFocusScrollStrategy () "," Returns the strategy used to scroll in response to item focus changing. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setOnChildSelectedListener (OnChildSelectedListener listener) "," Register a callback to be invoked when an item in BaseGridView has been selected. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setRowHeight (int height) "," Set the row height. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setPruneChild (boolean pruneChild) "," Enable or disable pruning child. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setItemAlignmentViewId (int viewId) "," Set the id of the view to align with. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.getVerticalMargin () "," Get the margin in pixels between two child items vertically. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.hasPreviousViewInSameRow (int position) "," Returns true if the view at the given position has a same row sibling in front of it. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setFadingLeftEdgeLength (int fadeLength) "," Set left edge fading length in pixels. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.dispatchKeyEvent (KeyEvent event) "," Dispatch a key event to the next view on the focus path. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setChildrenVisibility (int visibility) "," Change and override children's visibility. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setOnKeyInterceptListener (BaseGridView.OnKeyInterceptListener listener) "," Sets the key intercept listener. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setSaveChildrenLimitNumber (int limitNumber)   Set limit number when getSaveChildrenPolicy () "," Set limit number when getSaveChildrenPolicy() is SAVE_LIMITED_CHILD. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setItemAlignmentOffsetPercent (float offsetPercent)   Set offset percent for item alignment in addition to getItemAlignmentOffset () "," Set offset percent for item alignment in addition to getItemAlignmentOffset(). <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.getFadingLeftEdgeLength () "," Get left edge fading length in pixels. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.draw (Canvas canvas)   Manually render this view  (and all of its children) "," Manually render this view (and all of its children) to the given Canvas. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.getHorizontalMargin () "," Get the margin in pixels between two child items horizontally. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.getWindowAlignmentOffset () "," Get the offset in pixels for window alignment. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setScrollEnabled (boolean scrollEnabled) "," Enable or disable scrolling. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.setItemMargin (int margin) "," Set the margin in pixels between two child items. <br /><br />"
"android.support.v17.leanback.widget.HorizontalGridView.isFocusSearchDisabled () "," Return true if focus search is disabled. <br /><br />"
"android.support.v17.leanback.widget.HorizontalHoverCardSwitcher.select (HorizontalGridView gridView, View childView, Object object) "," Select a childView inside a grid view and create/bind a corresponding hover card view for the object. <br /><br />"
"android.support.v17.leanback.widget.ImageCardView.setMainImageScaleType (ImageView.ScaleType scaleType) "," no description <br /><br />"
"android.support.v17.leanback.widget.ImageCardView.setInfoAreaBackground (Drawable drawable) "," no description <br /><br />"
"android.support.v17.leanback.widget.ImageCardView.setMainImageAdjustViewBounds (boolean adjustViewBounds) "," no description <br /><br />"
"android.support.v17.leanback.widget.ImageCardView.getTitleText () "," no description <br /><br />"
"android.support.v17.leanback.widget.ImageCardView.getMainImage () "," no description <br /><br />"
"android.support.v17.leanback.widget.ImageCardView.setContentText (CharSequence text) "," no description <br /><br />"
"android.support.v17.leanback.widget.ImageCardView.getBadgeImage () "," no description <br /><br />"
"android.support.v17.leanback.widget.ImageCardView.setMainImageDimensions (int width, int height) "," no description <br /><br />"
"android.support.v17.leanback.widget.ImageCardView.hasOverlappingRendering () "," Returns whether this View has content which overlaps. <br /><br />"
"android.support.v17.leanback.widget.ImageCardView.setMainImage (Drawable drawable, boolean fade) "," Set drawable with optional fade-in animation. <br /><br />"
"android.support.v17.leanback.widget.ImageCardView.setMainImage (Drawable drawable) "," Set drawable with fade-in animation. <br /><br />"
"android.support.v17.leanback.widget.ImageCardView.getContentText () "," no description <br /><br />"
"android.support.v17.leanback.widget.ImageCardView.getMainImageView () "," no description <br /><br />"
"android.support.v17.leanback.widget.ImageCardView.setBadgeImage (Drawable drawable) "," no description <br /><br />"
"android.support.v17.leanback.widget.ImageCardView.setInfoAreaBackgroundColor (int color) "," no description <br /><br />"
"android.support.v17.leanback.widget.ImageCardView.getInfoAreaBackground () "," no description <br /><br />"
"android.support.v17.leanback.widget.ImageCardView.setTitleText (CharSequence text) "," no description <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.AdapterListener.onDetachedFromWindow (ItemBridgeAdapter.ViewHolder viewHolder) "," no description <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.AdapterListener.onCreate (ItemBridgeAdapter.ViewHolder viewHolder) "," no description <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.AdapterListener.onBind (ItemBridgeAdapter.ViewHolder viewHolder) "," no description <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.AdapterListener.onAttachedToWindow (ItemBridgeAdapter.ViewHolder viewHolder) "," no description <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.AdapterListener.onAddPresenter (Presenter presenter, int type) "," no description <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.AdapterListener.onUnbind (ItemBridgeAdapter.ViewHolder viewHolder) "," no description <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.onViewRecycled (RecyclerView.ViewHolder holder) "," Called when a view created by this adapter has been recycled. <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.setPresenterMapper (ArrayList< Presenter> presenters) "," no description <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.getWrapper () "," no description <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.setWrapper (ItemBridgeAdapter.Wrapper wrapper) "," no description <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.onViewDetachedFromWindow (RecyclerView.ViewHolder holder) "," Called when a view created by this adapter has been detached from its window. <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.getItemCount () "," Returns the total number of items in the data set hold by the adapter. <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.getItemId (int position) "," Return the stable ID for the item at position. <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.onViewAttachedToWindow (RecyclerView.ViewHolder holder) "," Called when a view created by this adapter has been attached to a window. <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.clear () "," no description <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.onBindViewHolder (RecyclerView.ViewHolder holder, int position) "," Called by RecyclerView to display the data at the specified position. <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.getPresenterMapper () "," no description <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.setAdapterListener (ItemBridgeAdapter.AdapterListener listener) "," no description <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.onCreateViewHolder (ViewGroup parent, int viewType)   View.OnFocusChangeListener that assigned in onCreateViewHolder (ViewGroup) "," View.OnFocusChangeListener that assigned in onCreateViewHolder(ViewGroup) may be chained, user should never change View.OnFocusChangeListener after that. <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.getItemViewType (int position) "," Return the view type of the item at position for the purposes of view recycling. <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.setAdapter (ObjectAdapter adapter) "," no description <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.ViewHolder.setExtraObject (Object object) "," Set extra object associated with the view. <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.ViewHolder.getItem () "," Get currently bound object. <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.ViewHolder.getExtraObject () "," Get extra object associated with the view. <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.ViewHolder.getViewHolder () "," Get Presenter.ViewHolder. <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.ViewHolder.getPresenter () "," Get Presenter. <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.Wrapper.wrap (View wrapper, View wrapped) "," no description <br /><br />"
"android.support.v17.leanback.widget.ItemBridgeAdapter.Wrapper.createWrapper (View root) "," no description <br /><br />"
"android.support.v17.leanback.widget.ListRow.getAdapter () "," Get the ObjectAdapter that represents a list of objects. <br /><br />"
"android.support.v17.leanback.widget.ListRowHoverCardView.setTitle (CharSequence text) "," no description <br /><br />"
"android.support.v17.leanback.widget.ListRowHoverCardView.setDescription (CharSequence text) "," no description <br /><br />"
"android.support.v17.leanback.widget.ListRowHoverCardView.getDescription () "," no description <br /><br />"
"android.support.v17.leanback.widget.ListRowHoverCardView.getTitle () "," no description <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.setEntranceTransitionState (RowPresenter.ViewHolder holder, boolean afterEntrance) "," Change visibility of views, entrance transition will be run against the views that change visibilities. <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.isUsingZOrder () "," Returns true if SDK >= L, where Z shadow is enabled so that Z order is enabled on each child of horizontal list. <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.isUsingDefaultShadow () "," Returns true if SDK >= 18, where default shadow is applied to each individual child of HorizontalGridView. <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.freeze (RowPresenter.ViewHolder holder, boolean freeze) "," Freeze/Unfreeze the row, typically used when transition starts/ends. <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.isUsingDefaultSelectEffect () "," ListRowPresenter overrides the default select effect of RowPresenter and return false. <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.setHoverCardPresenterSelector (PresenterSelector selector) "," Set PresenterSelector used for showing a select object in a hover card. <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.getRecycledPoolSize (Presenter presenter) "," Returns the recycled pool size for the given presenter. <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.getZoomFactor () "," Returns the zoom factor used for focus highlighting. <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.setRowHeight (int rowHeight) "," Sets the row height for rows created by this Presenter. <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.setRecycledPoolSize (Presenter presenter, int size) "," Sets the recycled pool size for the given presenter. <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.getRowHeight () "," Returns the row height for list rows created by this Presenter. <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.enableChildRoundedCorners (boolean enable) "," Enables or disabled rounded corners on children of this row. <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.getHoverCardPresenterSelector () "," Get PresenterSelector used for showing a select object in a hover card. <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.setExpandedRowHeight (int rowHeight) "," Sets the expanded row height for rows created by this Presenter. <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.canDrawOutOfBounds () "," Return true if the Row view can draw outside its bounds. <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.getShadowEnabled () "," Returns true if child shadow is enabled. <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.getExpandedRowHeight () "," Returns the expanded row height for rows created by this Presenter. <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.isUsingDefaultListSelectEffect () "," Returns true so that default select effect is applied to each individual child of HorizontalGridView. <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.setShadowEnabled (boolean enabled) "," Enable or disable child shadow. <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.areChildRoundedCornersEnabled () "," Returns true if rounded corners are enabled for children of this row. <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.ViewHolder.getBridgeAdapter () "," no description <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.ViewHolder.getGridView () "," no description <br /><br />"
"android.support.v17.leanback.widget.ListRowPresenter.ViewHolder.getListRowPresenter () "," no description <br /><br />"
"android.support.v17.leanback.widget.ListRowView.getGridView () "," no description <br /><br />"
"android.support.v17.leanback.widget.ObjectAdapter.DataObserver.onItemRangeRemoved (int positionStart, int itemCount) "," Called when a range of items is removed from the ObjectAdapter. <br /><br />"
"android.support.v17.leanback.widget.ObjectAdapter.DataObserver.onChanged () "," Called whenever the ObjectAdapter's data has changed in some manner outside of the set of changes covered by the other range-based change notification methods. <br /><br />"
"android.support.v17.leanback.widget.ObjectAdapter.DataObserver.onItemRangeChanged (int positionStart, int itemCount) "," Called when a range of items in the ObjectAdapter has changed. <br /><br />"
"android.support.v17.leanback.widget.ObjectAdapter.DataObserver.onItemRangeInserted (int positionStart, int itemCount) "," Called when a range of items is inserted into the ObjectAdapter. <br /><br />"
"android.support.v17.leanback.widget.ObjectAdapter.getPresenter (Object item) "," Returns the Presenter for the given item from the adapter. <br /><br />"
"android.support.v17.leanback.widget.ObjectAdapter.registerObserver (ObjectAdapter.DataObserver observer) "," Register a DataObserver for data change notifications. <br /><br />"
"android.support.v17.leanback.widget.ObjectAdapter.getPresenterSelector () "," Returns the presenter selector for this ObjectAdapter. <br /><br />"
"android.support.v17.leanback.widget.ObjectAdapter.getId (int position) "," Returns id for the given position. <br /><br />"
"android.support.v17.leanback.widget.ObjectAdapter.get (int position) "," Returns the item for the given position. <br /><br />"
"android.support.v17.leanback.widget.ObjectAdapter.setHasStableIds (boolean hasStableIds) "," Sets whether the item ids are stable across changes to the underlying data. <br /><br />"
"android.support.v17.leanback.widget.ObjectAdapter.hasStableIds () "," Indicates whether the item ids are stable across changes to the underlying data. <br /><br />"
"android.support.v17.leanback.widget.ObjectAdapter.unregisterObserver (ObjectAdapter.DataObserver observer) "," Unregister a DataObserver for data change notifications. <br /><br />"
"android.support.v17.leanback.widget.ObjectAdapter.size () "," Returns the number of items in the adapter. <br /><br />"
"android.support.v17.leanback.widget.ObjectAdapter.unregisterAllObservers () "," Unregister all DataObservers for this ObjectAdapter. <br /><br />"
"android.support.v17.leanback.widget.ObjectAdapter.setPresenterSelector (PresenterSelector presenterSelector) "," Set the presenter selector. <br /><br />"
"android.support.v17.leanback.widget.OnActionClickedListener.onActionClicked (Action action) "," no description <br /><br />"
"android.support.v17.leanback.widget.OnChildLaidOutListener.onChildLaidOut (ViewGroup parent, View view, int position, long id) "," Callback method to be invoked when a child of this ViewGroup has been added to view hierarchy laid out. <br /><br />"
"android.support.v17.leanback.widget.OnChildSelectedListener.onChildSelected (ViewGroup parent, View view, int position, long id) "," Callback method to be invoked when a child of this viewgroup has been selected. <br /><br />"
"android.support.v17.leanback.widget.OnItemClickedListener.onItemClicked (Object item, Row row) "," no description <br /><br />"
"android.support.v17.leanback.widget.OnItemSelectedListener.onItemSelected (Object item, Row row) "," Called when the a row or a new item becomes selected. <br /><br />"
"android.support.v17.leanback.widget.OnItemViewClickedListener.onItemClicked (Presenter.ViewHolder itemViewHolder, Object item, RowPresenter.ViewHolder rowViewHolder, Row row) "," no description <br /><br />"
"android.support.v17.leanback.widget.OnItemViewSelectedListener.onItemSelected (Presenter.ViewHolder itemViewHolder, Object item, RowPresenter.ViewHolder rowViewHolder, Row row) "," Called when the a row or a new item becomes selected. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.getCurrentTime () "," Returns the current time in milliseconds for the playback controls row. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.getItem () "," Gets the main item for the details page. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.setPrimaryActionsAdapter (ObjectAdapter adapter) "," Sets the primary actions ObjectAdapter. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.getImageDrawable () "," Gets the image Drawable of this row. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.getBufferedProgress () "," Returns the buffered progress for the playback controls row. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.setCurrentTime (int ms) "," Sets the current time in milliseconds for the playback controls row. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.setTotalTime (int ms) "," Sets the total time in milliseconds for the playback controls row. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.setImageBitmap (Context context, Bitmap bm) "," Sets a Bitmap for this row. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.setSecondaryActionsAdapter (ObjectAdapter adapter) "," Sets the secondary actions ObjectAdapter. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.setImageDrawable (Drawable drawable) "," Sets a {link @Drawable} image for this row. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.getTotalTime () "," Returns the total time in milliseconds for the playback controls row. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.getPrimaryActionsAdapter () "," Returns the primary actions ObjectAdapter. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.getSecondaryActionsAdapter () "," Returns the secondary actions ObjectAdapter. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.setBufferedProgress (int ms) "," Sets the buffered progress for the playback controls row. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.MultiAction.getDrawable (int index) "," Returns the drawable at the given index. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.MultiAction.setIndex (int index) "," Sets the current index. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.MultiAction.setDrawables (Drawable[] drawables) "," Sets the array of drawables. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.MultiAction.setLabels (String[] labels) "," Sets the array of strings used as labels. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.MultiAction.getLabel (int index) "," Returns the label at the given index. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.MultiAction.getActionCount () "," Returns the number of actions. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.MultiAction.getSecondaryLabel (int index) "," Returns the secondary label at the given index. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.MultiAction.nextIndex () "," Increments the index, wrapping to zero once the end is reached. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.MultiAction.setSecondaryLabels (String[] labels) "," Sets the array of strings used as secondary labels. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRow.MultiAction.getIndex () "," Gets the current index. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRowPresenter.setBackgroundColor (int color) "," Sets the background color. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRowPresenter.setOnActionClickedListener (OnActionClickedListener listener) "," Sets the listener for Action click events. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRowPresenter.showBottomSpace (PlaybackControlsRowPresenter.ViewHolder vh, boolean show) "," Shows or hides space at the bottom of the playback controls row. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRowPresenter.setSecondaryActionsHidden (boolean hidden) "," Sets the secondary actions to be hidden behind a 'more actions' button. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRowPresenter.setProgressColor (int color) "," Sets the primary color for the progress bar. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRowPresenter.areSecondaryActionsHidden () "," Returns true if secondary actions are hidden. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRowPresenter.getOnActionClickedListener () "," Gets the listener for Action click events. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRowPresenter.getProgressColor () "," Returns the primary color for the progress bar. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRowPresenter.getBackgroundColor () "," Returns the background color. <br /><br />"
"android.support.v17.leanback.widget.PlaybackControlsRowPresenter.showPrimaryActions (PlaybackControlsRowPresenter.ViewHolder vh) "," Display the primary actions. <br /><br />"
"android.support.v17.leanback.widget.Presenter.onViewDetachedFromWindow (Presenter.ViewHolder holder) "," Called when a view created by this presenter has been detached from its window. <br /><br />"
"android.support.v17.leanback.widget.Presenter.onBindViewHolder (Presenter.ViewHolder viewHolder, Object item) "," Binds a View to an item. <br /><br />"
"android.support.v17.leanback.widget.Presenter.setOnClickListener (Presenter.ViewHolder holder, View.OnClickListener listener) "," Called to set a click listener for the given view holder. <br /><br />"
"android.support.v17.leanback.widget.Presenter.onCreateViewHolder (ViewGroup parent) "," Creates a new View. <br /><br />"
"android.support.v17.leanback.widget.Presenter.onViewAttachedToWindow (Presenter.ViewHolder holder) "," Called when a view created by this presenter has been attached to a window. <br /><br />"
"android.support.v17.leanback.widget.Presenter.onUnbindViewHolder (Presenter.ViewHolder viewHolder) "," Unbinds a View from an item. <br /><br />"
"android.support.v17.leanback.widget.PresenterSelector.getPresenter (Object item) "," Returns a presenter for the given item. <br /><br />"
"android.support.v17.leanback.widget.PresenterSwitcher.unselect () "," no description <br /><br />"
"android.support.v17.leanback.widget.PresenterSwitcher.select (Object object) "," no description <br /><br />"
"android.support.v17.leanback.widget.PresenterSwitcher.init (ViewGroup parent, PresenterSelector presenterSelector) "," Initialize switcher with a parent view to insert view into and a PresenterSelector for choose Presenter for object. <br /><br />"
"android.support.v17.leanback.widget.PresenterSwitcher.getParentViewGroup () "," no description <br /><br />"
"android.support.v17.leanback.widget.PresenterSwitcher.clear () "," Destroy created views. <br /><br />"
"android.support.v17.leanback.widget.Row.getId () "," Returns a unique identifier for this row. <br /><br />"
"android.support.v17.leanback.widget.Row.setHeaderItem (HeaderItem headerItem) "," Set the HeaderItem that represents metadata for the row. <br /><br />"
"android.support.v17.leanback.widget.Row.getHeaderItem () "," Get the HeaderItem that represents metadata for the row. <br /><br />"
"android.support.v17.leanback.widget.Row.setId (long id) "," Set the id for this row. <br /><br />"
"android.support.v17.leanback.widget.RowHeaderPresenter.getSpaceUnderBaseline (RowHeaderPresenter.ViewHolder holder)   Returns the space  (distance in pixels) "," Returns the space (distance in pixels) below the baseline of the text view, if one exists; otherwise, returns 0. <br /><br />"
"android.support.v17.leanback.widget.RowHeaderPresenter.setSelectLevel (RowHeaderPresenter.ViewHolder holder, float selectLevel) "," no description <br /><br />"
"android.support.v17.leanback.widget.RowHeaderPresenter.isNullItemVisibilityGone () "," Returns true if the view visibility is set to GONE when bound to null. <br /><br />"
"android.support.v17.leanback.widget.RowHeaderPresenter.setNullItemVisibilityGone (boolean nullItemVisibilityGone) "," Optionally sets the view visibility to GONE when bound to null. <br /><br />"
"android.support.v17.leanback.widget.RowHeaderPresenter.onBindViewHolder (Presenter.ViewHolder viewHolder, Object item) "," Binds a View to an item. <br /><br />"
"android.support.v17.leanback.widget.RowHeaderPresenter.onCreateViewHolder (ViewGroup parent) "," Creates a new View. <br /><br />"
"android.support.v17.leanback.widget.RowHeaderPresenter.onUnbindViewHolder (Presenter.ViewHolder viewHolder) "," Unbinds a View from an item. <br /><br />"
"android.support.v17.leanback.widget.RowHeaderPresenter.ViewHolder.getSelectLevel () "," no description <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.setOnItemViewSelectedListener (OnItemViewSelectedListener listener) "," Set listener for item or row selection. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.setSyncActivatePolicy (int syncActivatePolicy) "," Sets policy of updating row view activated status. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.getOnItemSelectedListener () "," Get the listener for item or row selection. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.getRowViewHolder (Presenter.ViewHolder holder) "," Get the RowPresenter.ViewHolder from the given Presenter ViewHolder. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.setEntranceTransitionState (RowPresenter.ViewHolder holder, boolean afterTransition) "," Change visibility of views, entrance transition will be run against the views that change visibilities. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.getOnItemClickedListener () "," Get the listener for item click events. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.freeze (RowPresenter.ViewHolder holder, boolean freeze) "," Freeze/Unfreeze the row, typically used when transition starts/ends. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.isUsingDefaultSelectEffect () "," Return whether this RowPresenter is using the default dimming effect provided by the library. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.getOnItemViewSelectedListener () "," Get listener for item or row selection. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.getOnItemViewClickedListener () "," Set listener for item click event. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.setSelectEffectEnabled (boolean applyDimOnSelect) "," Enables or disables the row selection effect. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.onUnbindViewHolder (Presenter.ViewHolder viewHolder) "," Unbinds a View from an item. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.getSyncActivatePolicy () "," Returns policy of updating row view activated status. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.getHeaderPresenter () "," Get the Presenter used for rendering the header, or null if none has been set. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.setOnItemSelectedListener (OnItemSelectedListener listener) "," Set the listener for item or row selection. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.setHeaderPresenter (RowHeaderPresenter headerPresenter) "," Set the Presenter used for rendering the header. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.onViewDetachedFromWindow (Presenter.ViewHolder holder) "," Called when a view created by this presenter has been detached from its window. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.setSelectLevel (Presenter.ViewHolder vh, float level)   Set the current select level to a value between 0  (unselected) and 1  (selected) "," Set the current select level to a value between 0 (unselected) and 1 (selected). <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.setOnItemViewClickedListener (OnItemViewClickedListener listener) "," Set listener for item click event. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.setOnItemClickedListener (OnItemClickedListener listener) "," Set the listener for item click events. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.setRowViewExpanded (Presenter.ViewHolder holder, boolean expanded) "," Set the expanded state of a Row view. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.setRowViewSelected (Presenter.ViewHolder holder, boolean selected) "," Set the selected state of a Row view. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.getSelectEffectEnabled () "," Returns true if the row selection effect is enabled. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.getSelectLevel (Presenter.ViewHolder vh) "," Get the current select level. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.canDrawOutOfBounds () "," Return true if the Row view can draw outside its bounds. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.onBindViewHolder (Presenter.ViewHolder viewHolder, Object item) "," Binds a View to an item. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.onCreateViewHolder (ViewGroup parent) "," Creates a new View. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.onViewAttachedToWindow (Presenter.ViewHolder holder) "," Called when a view created by this presenter has been attached to a window. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.ViewHolder.setActivated (boolean activated) "," Sets the row view's activated status. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.ViewHolder.getHeaderViewHolder () "," Returns the view holder for the Row header for this Row. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.ViewHolder.getRow () "," Returns the Row bound to the View in this ViewHolder. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.ViewHolder.getSelectLevel () "," Returns the current selection level of the Row. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.ViewHolder.isSelected () "," Returns whether the Row is selected. <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.ViewHolder.syncActivatedStatus (View view)   Synchronizes the activated status of view to the last value passed through setActivated (boolean) "," Synchronizes the activated status of view to the last value passed through setActivated(boolean). <br /><br />"
"android.support.v17.leanback.widget.RowPresenter.ViewHolder.isExpanded () "," Returns whether the Row is in its expanded state. <br /><br />"
"android.support.v17.leanback.widget.SearchBar.getHint () "," Returns the current search bar hint text. <br /><br />"
"android.support.v17.leanback.widget.SearchBar.setSpeechRecognizer (SpeechRecognizer recognizer) "," Set the speech recognizer to be used when doing voice search. <br /><br />"
"android.support.v17.leanback.widget.SearchBar.setTitle (String title) "," Set the title text used in the hint shown in the search bar. <br /><br />"
"android.support.v17.leanback.widget.SearchBar.setNextFocusDownId (int viewId) "," Sets the id of the view to use when the next focus is FOCUS_DOWN. <br /><br />"
"android.support.v17.leanback.widget.SearchBar.displayCompletions (List< String> completions) "," Update the completion list shown by the IME <br /><br />"
"android.support.v17.leanback.widget.SearchBar.setSpeechRecognitionCallback (SpeechRecognitionCallback request) "," no description <br /><br />"
"android.support.v17.leanback.widget.SearchBar.setBadgeDrawable (Drawable drawable) "," Set the badge drawable showing inside the search bar. <br /><br />"
"android.support.v17.leanback.widget.SearchBar.getBadgeDrawable () "," Returns the badge drawable <br /><br />"
"android.support.v17.leanback.widget.SearchBar.setSearchBarListener (SearchBar.SearchBarListener listener) "," Set a listener for when the term search changes <br /><br />"
"android.support.v17.leanback.widget.SearchBar.getTitle () "," Returns the current title <br /><br />"
"android.support.v17.leanback.widget.SearchBar.startRecognition () "," Start the voice recognition <br /><br />"
"android.support.v17.leanback.widget.SearchBar.setSearchQuery (String query) "," Set the search query <br /><br />"
"android.support.v17.leanback.widget.SearchBar.stopRecognition () "," Stop the recognition if already started <br /><br />"
"android.support.v17.leanback.widget.SearchBar.SearchBarListener.onKeyboardDismiss (String query) "," Method invoked when the IME is being dismissed. <br /><br />"
"android.support.v17.leanback.widget.SearchBar.SearchBarListener.onSearchQueryChange (String query) "," Method invoked when the search bar detects a change in the query. <br /><br />"
"android.support.v17.leanback.widget.SearchBar.SearchBarListener.onSearchQuerySubmit (String query) "," Method invoked when the search query is submitted. <br /><br />"
"android.support.v17.leanback.widget.SearchEditText.updateRecognizedText (String stableText, String pendingText) "," no description <br /><br />"
"android.support.v17.leanback.widget.SearchEditText.setOnKeyboardDismissListener (SearchEditText.OnKeyboardDismissListener listener) "," Set a keyboard dismissed listener. <br /><br />"
"android.support.v17.leanback.widget.SearchEditText.setFinalRecognizedText (CharSequence finalText) "," Sets the final, non changing, full text result. <br /><br />"
"android.support.v17.leanback.widget.SearchEditText.isLayoutRtl (View view) "," no description <br /><br />"
"android.support.v17.leanback.widget.SearchEditText.updateRecognizedText (String stableText, List< Float> rmsValues) "," no description <br /><br />"
"android.support.v17.leanback.widget.SearchEditText.reset () "," no description <br /><br />"
"android.support.v17.leanback.widget.SearchEditText.onKeyPreIme (int keyCode, KeyEvent event) "," Handle a key event before it is processed by any input method associated with the view hierarchy. <br /><br />"
"android.support.v17.leanback.widget.SearchEditText.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," This is required to make the View findable by uiautomator <br /><br />"
"android.support.v17.leanback.widget.SearchEditText.OnKeyboardDismissListener.onKeyboardDismiss () "," no description <br /><br />"
"android.support.v17.leanback.widget.SearchOrbView.Colors.getBrightColor (int color) "," Computes a default brighter version of the given color. <br /><br />"
"android.support.v17.leanback.widget.SearchOrbView.setOrbColor (int color) "," Sets the background color of the search orb. <br /><br />"
"android.support.v17.leanback.widget.SearchOrbView.onClick (View view) "," Called when a view has been clicked. <br /><br />"
"android.support.v17.leanback.widget.SearchOrbView.setOrbColors (SearchOrbView.Colors colors) "," Set the SearchOrbView.Colors used to display the search orb. <br /><br />"
"android.support.v17.leanback.widget.SearchOrbView.getOrbIcon () "," Returns the orb icon <br /><br />"
"android.support.v17.leanback.widget.SearchOrbView.getOrbColor () "," Returns the orb color <br /><br />"
"android.support.v17.leanback.widget.SearchOrbView.setOrbIcon (Drawable icon) "," Set the orb icon <br /><br />"
"android.support.v17.leanback.widget.SearchOrbView.getOrbColors () "," Returns the SearchOrbView.Colors used to display the search orb. <br /><br />"
"android.support.v17.leanback.widget.SearchOrbView.enableOrbColorAnimation (boolean enable) "," Enables or disables the orb color animation. <br /><br />"
"android.support.v17.leanback.widget.SearchOrbView.setOnOrbClickedListener (View.OnClickListener listener) "," Set the on click listener for the orb <br /><br />"
"android.support.v17.leanback.widget.SearchOrbView.setOrbColor (int color, int brightColor)    This method is deprecated. Use setOrbColors (Colors) "," This method is deprecated. Use setOrbColors(Colors) instead. <br /><br />"
"android.support.v17.leanback.widget.ShadowOverlayContainer.setOverlayColor (int overlayColor)   Set color  (with alpha) "," Set color (with alpha) of the overlay. <br /><br />"
"android.support.v17.leanback.widget.ShadowOverlayContainer.prepareParentForShadow (ViewGroup parent)   prepareParentForShadow (ViewGroup) "," prepareParentForShadow(ViewGroup) must be called on parent of container before using shadow. <br /><br />"
"android.support.v17.leanback.widget.ShadowOverlayContainer.initialize (boolean hasShadow, boolean hasColorDimOverlay, boolean roundedCorners) "," Initialize shadows, color overlay, and rounded corners. <br /><br />"
"android.support.v17.leanback.widget.ShadowOverlayContainer.initialize (boolean hasShadow, boolean hasColorDimOverlay)    This method is deprecated. use initialize (boolean, boolean, boolean) "," This method is deprecated. use initialize(boolean, boolean, boolean) instead. <br /><br />"
"android.support.v17.leanback.widget.ShadowOverlayContainer.wrap (View view) "," Inserts view into the wrapper. <br /><br />"
"android.support.v17.leanback.widget.ShadowOverlayContainer.setShadowFocusLevel (float level)   Set shadow focus level  (0 to 1) "," Set shadow focus level (0 to 1). <br /><br />"
"android.support.v17.leanback.widget.ShadowOverlayContainer.supportsShadow () "," Return true if the platform sdk supports shadow. <br /><br />"
"android.support.v17.leanback.widget.SinglePresenterSelector.getPresenter (Object item) "," Returns a presenter for the given item. <br /><br />"
"android.support.v17.leanback.widget.SparseArrayObjectAdapter.clear (int key) "," Clears the given key and associated item from the adapter. <br /><br />"
"android.support.v17.leanback.widget.SparseArrayObjectAdapter.clear () "," Removes all items from this adapter, leaving it empty. <br /><br />"
"android.support.v17.leanback.widget.SparseArrayObjectAdapter.lookup (int key) "," Returns the object for the given key, or null if no mapping for that key exists. <br /><br />"
"android.support.v17.leanback.widget.SparseArrayObjectAdapter.indexOf (Object item) "," Returns the index for the given item in the adapter. <br /><br />"
"android.support.v17.leanback.widget.SparseArrayObjectAdapter.indexOf (int key) "," Returns the index for the given key in the adapter. <br /><br />"
"android.support.v17.leanback.widget.SparseArrayObjectAdapter.get (int position) "," Returns the item for the given position. <br /><br />"
"android.support.v17.leanback.widget.SparseArrayObjectAdapter.size () "," Returns the number of items in the adapter. <br /><br />"
"android.support.v17.leanback.widget.SparseArrayObjectAdapter.set (int key, Object item) "," Sets the item for the given key. <br /><br />"
"android.support.v17.leanback.widget.SparseArrayObjectAdapter.notifyArrayItemRangeChanged (int positionStart, int itemCount) "," Notify that the content of a range of items changed. <br /><br />"
"android.support.v17.leanback.widget.SpeechOrbView.setSoundLevel (int level) "," no description <br /><br />"
"android.support.v17.leanback.widget.SpeechOrbView.showNotListening () "," no description <br /><br />"
"android.support.v17.leanback.widget.SpeechOrbView.showListening () "," no description <br /><br />"
"android.support.v17.leanback.widget.SpeechRecognitionCallback.recognizeSpeech () "," Called by the fragment when the user has requested speech recognition. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridPresenter.setOnItemViewSelectedListener (OnItemViewSelectedListener listener) "," Sets the item selected listener. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridPresenter.isUsingZOrder () "," Returns true if SDK >= L, where Z shadow is enabled so that Z order is enabled on each child of vertical grid. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridPresenter.getNumberOfColumns () "," Returns the number of columns in the vertical grid. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridPresenter.getOnItemClickedListener ()    This method is deprecated. Use getOnItemViewClickedListener () "," This method is deprecated. Use getOnItemViewClickedListener() <br /><br />"
"android.support.v17.leanback.widget.VerticalGridPresenter.getOnItemSelectedListener ()    This method is deprecated. Use getOnItemViewSelectedListener () "," This method is deprecated. Use getOnItemViewSelectedListener() <br /><br />"
"android.support.v17.leanback.widget.VerticalGridPresenter.getOnItemViewClickedListener () "," Returns the item clicked listener. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridPresenter.getOnItemViewSelectedListener () "," Returns the item selected listener. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridPresenter.setNumberOfColumns (int numColumns) "," Sets the number of columns in the vertical grid. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridPresenter.isUsingDefaultShadow ()   Returns true if opticalBounds is supported  (SDK >= 18) "," Returns true if opticalBounds is supported (SDK >= 18) so that default shadow is applied to each individual child of VerticalGridView. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridPresenter.onUnbindViewHolder (Presenter.ViewHolder viewHolder) "," Unbinds a View from an item. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridPresenter.setOnItemViewClickedListener (OnItemViewClickedListener listener) "," Sets the item clicked listener. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridPresenter.enableChildRoundedCorners (boolean enable) "," Enables or disabled rounded corners on children of this row. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridPresenter.setOnItemSelectedListener (OnItemSelectedListener listener)    This method is deprecated. Use setOnItemViewSelectedListener (OnItemViewSelectedListener) "," This method is deprecated. Use setOnItemViewSelectedListener(OnItemViewSelectedListener) <br /><br />"
"android.support.v17.leanback.widget.VerticalGridPresenter.setOnItemClickedListener (OnItemClickedListener listener)    This method is deprecated. Use setOnItemViewClickedListener (OnItemViewClickedListener) "," This method is deprecated. Use setOnItemViewClickedListener(OnItemViewClickedListener) <br /><br />"
"android.support.v17.leanback.widget.VerticalGridPresenter.getShadowEnabled () "," Returns true if child shadow is enabled. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridPresenter.onBindViewHolder (Presenter.ViewHolder viewHolder, Object item) "," Binds a View to an item. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridPresenter.onCreateViewHolder (ViewGroup parent) "," Creates a new View. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridPresenter.setShadowEnabled (boolean enabled) "," Enable or disable child shadow. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridPresenter.areChildRoundedCornersEnabled () "," Returns true if rounded corners are enabled for children of this row. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridPresenter.ViewHolder.getGridView () "," no description <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.getWindowAlignmentOffsetPercent ()   Get offset percent for window alignment in addition to getWindowAlignmentOffset () "," Get offset percent for window alignment in addition to getWindowAlignmentOffset(). <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.getSaveChildrenPolicy () "," no description <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.onRtlPropertiesChanged (int layoutDirection) "," Notify layout manager that layout directionality has been updated <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setItemAlignmentOffset (int offset) "," Set the absolute offset in pixels for item alignment. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setRecyclerListener (RecyclerView.RecyclerListener listener) "," Register a listener that will be notified whenever a child view is recycled. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.getViewSelectedOffsets (View view, int[] offsets) "," Get the x/y offsets to final position from current position if the view is selected. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setFocusDrawingOrderEnabled (boolean enabled) "," Enable or disable the default 'focus draw at last' order rule. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.getItemAlignmentOffset () "," Get the absolute offset in pixels for item alignment. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setAnimateChildLayout (boolean animateChildLayout) "," Set if an animation should run when a child changes size or when adding or removing a child. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.dispatchGenericFocusedEvent (MotionEvent event) "," Dispatch a generic motion event to the currently focused view. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.getItemAlignmentOffsetPercent ()   Get offset percent for item alignment in addition to getItemAlignmentOffset () "," Get offset percent for item alignment in addition to getItemAlignmentOffset(). <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.onRequestFocusInDescendants (int direction, Rect previouslyFocusedRect)   Look for a descendant to call requestFocus () "," Look for a descendant to call requestFocus() on. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setOnChildLaidOutListener (OnChildLaidOutListener listener) "," Register a callback to be invoked when an item in BaseGridView has been laid out. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.getSaveChildrenLimitNumber () "," no description <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setOnMotionInterceptListener (BaseGridView.OnMotionInterceptListener listener) "," Sets the generic motion intercept listener. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setVerticalMargin (int margin) "," Set the margin in pixels between two child items vertically. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setSelectedPositionSmooth (int position) "," Change the selected item and run an animation to scroll to the target position. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setWindowAlignment (int windowAlignment) "," Set how the focused item gets aligned in the view. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setSaveChildrenPolicy (int savePolicy) "," Set policy for saving children. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setOnTouchInterceptListener (BaseGridView.OnTouchInterceptListener listener) "," Sets the touch intercept listener. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setItemAlignmentOffsetWithPadding (boolean withPadding) "," Set to true if include padding in calculating item align offset. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setHasOverlappingRendering (boolean hasOverlapping) "," no description <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.isItemAlignmentOffsetWithPadding () "," Returns true if include padding in calculating item align offset. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.isFocusDrawingOrderEnabled () "," Returns true if default 'focus draw at last' order rule is enabled. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.hasOverlappingRendering () "," Returns whether this View has content which overlaps. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.getWindowAlignment () "," Get how the focused item gets aligned in the view. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.isChildLayoutAnimated () "," Return true if an animation will run when a child changes size or when adding or removing a child. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setFocusScrollStrategy (int scrollStrategy)   Set the strategy used to scroll in response to item focus changing:  FOCUS_SCROLL_ALIGNED  (default) "," Set the strategy used to scroll in response to item focus changing:  FOCUS_SCROLL_ALIGNED (default)  FOCUS_SCROLL_ITEM FOCUS_SCROLL_PAGE <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.dispatchTouchEvent (MotionEvent event) "," Pass the touch screen motion event down to the target view, or this view if it is the target. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setWindowAlignmentOffsetPercent (float offsetPercent)   Set offset percent for window alignment in addition to getWindowAlignmentOffset () "," Set offset percent for window alignment in addition to getWindowAlignmentOffset(). <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.getSelectedPosition () "," Get the selected item position. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setFocusSearchDisabled (boolean disabled) "," Disable or enable focus search. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setHorizontalMargin (int margin) "," Set the margin in pixels between two child items horizontally. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.getItemAlignmentViewId () "," Get the id of the view to align with, or zero for the item view itself. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setGravity (int gravity) "," Describes how the child views are positioned. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.getChildDrawingOrder (int childCount, int i) "," Returns the index of the child to draw for this iteration. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setNumColumns (int numColumns) "," Set the number of columns. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setWindowAlignmentOffset (int offset) "," Set the offset in pixels for window alignment. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setLayoutEnabled (boolean layoutEnabled) "," Enable or disable layout. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setSelectedPosition (int position) "," Change the selected item immediately without animation. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.isScrollEnabled () "," Returns true if scrolling is enabled. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.getFocusScrollStrategy () "," Returns the strategy used to scroll in response to item focus changing. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setOnChildSelectedListener (OnChildSelectedListener listener) "," Register a callback to be invoked when an item in BaseGridView has been selected. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.getVerticalMargin () "," Get the margin in pixels between two child items vertically. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setItemAlignmentViewId (int viewId) "," Set the id of the view to align with. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setPruneChild (boolean pruneChild) "," Enable or disable pruning child. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.hasPreviousViewInSameRow (int position) "," Returns true if the view at the given position has a same row sibling in front of it. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.dispatchKeyEvent (KeyEvent event) "," Dispatch a key event to the next view on the focus path. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setChildrenVisibility (int visibility) "," Change and override children's visibility. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setOnKeyInterceptListener (BaseGridView.OnKeyInterceptListener listener) "," Sets the key intercept listener. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setSaveChildrenLimitNumber (int limitNumber)   Set limit number when getSaveChildrenPolicy () "," Set limit number when getSaveChildrenPolicy() is SAVE_LIMITED_CHILD. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setItemAlignmentOffsetPercent (float offsetPercent)   Set offset percent for item alignment in addition to getItemAlignmentOffset () "," Set offset percent for item alignment in addition to getItemAlignmentOffset(). <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.getHorizontalMargin () "," Get the margin in pixels between two child items horizontally. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.getWindowAlignmentOffset () "," Get the offset in pixels for window alignment. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setScrollEnabled (boolean scrollEnabled) "," Enable or disable scrolling. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setColumnWidth (int width) "," Set the column width. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.isFocusSearchDisabled () "," Return true if focus search is disabled. <br /><br />"
"android.support.v17.leanback.widget.VerticalGridView.setItemMargin (int margin) "," Set the margin in pixels between two child items. <br /><br />"
"android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat.getResolveInfo (AccessibilityServiceInfo info) "," The service ResolveInfo. <br /><br />"
"android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat.getId (AccessibilityServiceInfo info) "," The accessibility service id. <br /><br />"
"android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat.feedbackTypeToString (int feedbackType) "," Returns the string representation of a feedback type. <br /><br />"
"android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat.getCapabilities (AccessibilityServiceInfo info) "," Returns the bit mask of capabilities this accessibility service has such as being able to retrieve the active window content, etc. <br /><br />"
"android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat.getDescription (AccessibilityServiceInfo info) "," Description of the accessibility service. <br /><br />"
"android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat.getCanRetrieveWindowContent (AccessibilityServiceInfo info) "," Whether this service can retrieve the current window's content. <br /><br />"
"android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat.getSettingsActivityName (AccessibilityServiceInfo info) "," The settings activity name. <br /><br />"
"android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat.flagToString (int flag) "," Returns the string representation of a flag. <br /><br />"
"android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat.capabilityToString (int capability) "," Returns the string representation of a capability. <br /><br />"
"android.support.v4.app.ActionBarDrawerToggle.Delegate.setActionBarDescription (int contentDescRes) "," Set the Action Bar's up indicator content description. <br /><br />"
"android.support.v4.app.ActionBarDrawerToggle.Delegate.setActionBarUpIndicator (Drawable upDrawable, int contentDescRes) "," Set the Action Bar's up indicator drawable and content description. <br /><br />"
"android.support.v4.app.ActionBarDrawerToggle.Delegate.getThemeUpIndicator () "," no description <br /><br />"
"android.support.v4.app.ActionBarDrawerToggle.DelegateProvider.getDrawerToggleDelegate () "," no description <br /><br />"
"android.support.v4.app.ActionBarDrawerToggle.onDrawerStateChanged (int newState) "," DrawerLayout.DrawerListener callback method. <br /><br />"
"android.support.v4.app.ActionBarDrawerToggle.setHomeAsUpIndicator (int resId) "," Set the up indicator to display when the drawer indicator is not enabled. <br /><br />"
"android.support.v4.app.ActionBarDrawerToggle.setDrawerIndicatorEnabled (boolean enable) "," Enable or disable the drawer indicator. <br /><br />"
"android.support.v4.app.ActionBarDrawerToggle.onDrawerClosed (View drawerView) "," DrawerLayout.DrawerListener callback method. <br /><br />"
"android.support.v4.app.ActionBarDrawerToggle.onConfigurationChanged (Configuration newConfig)   This method should always be called by your Activity's "," This method should always be called by your Activity's onConfigurationChanged method. <br /><br />"
"android.support.v4.app.ActionBarDrawerToggle.isDrawerIndicatorEnabled () "," no description <br /><br />"
"android.support.v4.app.ActionBarDrawerToggle.setHomeAsUpIndicator (Drawable indicator) "," Set the up indicator to display when the drawer indicator is not enabled. <br /><br />"
"android.support.v4.app.ActionBarDrawerToggle.syncState () "," Synchronize the state of the drawer indicator/affordance with the linked DrawerLayout. <br /><br />"
"android.support.v4.app.ActionBarDrawerToggle.onOptionsItemSelected (MenuItem item)   This method should be called by your Activity's "," This method should be called by your Activity's onOptionsItemSelected method. <br /><br />"
"android.support.v4.app.ActionBarDrawerToggle.onDrawerSlide (View drawerView, float slideOffset) "," DrawerLayout.DrawerListener callback method. <br /><br />"
"android.support.v4.app.ActionBarDrawerToggle.onDrawerOpened (View drawerView) "," DrawerLayout.DrawerListener callback method. <br /><br />"
"android.support.v4.app.ActivityCompat.startActivity (Activity activity, Intent intent, Bundle options) "," Start an activity with additional launch information, if able. <br /><br />"
"android.support.v4.app.ActivityCompat.finishAffinity (Activity activity) "," Finish this activity, and tries to finish all activities immediately below it in the current task that have the same affinity. <br /><br />"
"android.support.v4.app.ActivityCompat.finishAfterTransition (Activity activity) "," Reverses the Activity Scene entry Transition and triggers the calling Activity to reverse its exit Transition. <br /><br />"
"android.support.v4.app.ActivityCompat.setEnterSharedElementCallback (Activity activity, SharedElementCallback callback)   When makeSceneTransitionAnimation (Activity, android.view.View, String) "," When makeSceneTransitionAnimation(Activity, android.view.View, String) was used to start an Activity, callback will be called to handle shared elements on the launched Activity. <br /><br />"
"android.support.v4.app.ActivityCompat.setExitSharedElementCallback (Activity activity, SharedElementCallback callback)   When makeSceneTransitionAnimation (Activity, android.view.View, String) "," When makeSceneTransitionAnimation(Activity, android.view.View, String) was used to start an Activity, callback will be called to handle shared elements on the launching Activity. <br /><br />"
"android.support.v4.app.ActivityCompat.invalidateOptionsMenu (Activity activity) "," Invalidate the activity's options menu, if able. <br /><br />"
"android.support.v4.app.ActivityCompat.postponeEnterTransition (Activity activity) "," no description <br /><br />"
"android.support.v4.app.ActivityCompat.startPostponedEnterTransition (Activity activity) "," no description <br /><br />"
"android.support.v4.app.ActivityCompat.startActivityForResult (Activity activity, Intent intent, int requestCode, Bundle options) "," Start new activity with options, if able, for which you would like a result when it finished. <br /><br />"
"android.support.v4.app.ActivityManagerCompat.isLowRamDevice (ActivityManager am) "," Returns true if this is a low-RAM device. <br /><br />"
"android.support.v4.app.ActivityOptionsCompat.makeScaleUpAnimation (View source, int startX, int startY, int startWidth, int startHeight) "," Create an ActivityOptions specifying an animation where the new activity is scaled from a small originating area of the screen to its final full representation. <br /><br />"
"android.support.v4.app.ActivityOptionsCompat.makeSceneTransitionAnimation (Activity activity, Pair...< View,  String> sharedElements) "," Create an ActivityOptions to transition between Activities using cross-Activity scene animations. <br /><br />"
"android.support.v4.app.ActivityOptionsCompat.makeThumbnailScaleUpAnimation (View source, Bitmap thumbnail, int startX, int startY) "," Create an ActivityOptions specifying an animation where a thumbnail is scaled from a given position to the new activity window that is being started. <br /><br />"
"android.support.v4.app.ActivityOptionsCompat.update (ActivityOptionsCompat otherOptions) "," Update the current values in this ActivityOptions from those supplied in otherOptions. <br /><br />"
"android.support.v4.app.ActivityOptionsCompat.toBundle ()   Returns the created options as a Bundle, which can be passed to startActivity (android.app.Activity, android.content.Intent, android.os.Bundle) "," Returns the created options as a Bundle, which can be passed to startActivity(android.app.Activity, android.content.Intent, android.os.Bundle). <br /><br />"
"android.support.v4.app.ActivityOptionsCompat.makeSceneTransitionAnimation (Activity activity, View sharedElement, String sharedElementName) "," Create an ActivityOptions to transition between Activities using cross-Activity scene animations. <br /><br />"
"android.support.v4.app.ActivityOptionsCompat.makeCustomAnimation (Context context, int enterResId, int exitResId) "," Create an ActivityOptions specifying a custom animation to run when the activity is displayed. <br /><br />"
"android.support.v4.app.DialogFragment.show (FragmentManager manager, String tag) "," Display the dialog, adding the fragment to the given FragmentManager. <br /><br />"
"android.support.v4.app.DialogFragment.onActivityCreated (Bundle savedInstanceState) "," Called when the fragment's activity has been created and this fragment's view hierarchy instantiated. <br /><br />"
"android.support.v4.app.DialogFragment.onDetach () "," Called when the fragment is no longer attached to its activity. <br /><br />"
"android.support.v4.app.DialogFragment.onDestroyView () "," Remove dialog. <br /><br />"
"android.support.v4.app.DialogFragment.onSaveInstanceState (Bundle outState) "," Called to ask the fragment to save its current dynamic state, so it can later be reconstructed in a new instance of its process is restarted. <br /><br />"
"android.support.v4.app.DialogFragment.onCancel (DialogInterface dialog) "," This method will be invoked when the dialog is canceled. <br /><br />"
"android.support.v4.app.DialogFragment.isCancelable ()   Return the current value of setCancelable (boolean) "," Return the current value of setCancelable(boolean). <br /><br />"
"android.support.v4.app.DialogFragment.onStart () "," Called when the Fragment is visible to the user. <br /><br />"
"android.support.v4.app.DialogFragment.onCreateDialog (Bundle savedInstanceState) "," Override to build your own custom Dialog container. <br /><br />"
"android.support.v4.app.DialogFragment.onAttach (Activity activity) "," Called when a fragment is first attached to its activity. <br /><br />"
"android.support.v4.app.DialogFragment.setShowsDialog (boolean showsDialog) "," Controls whether this fragment should be shown in a dialog. <br /><br />"
"android.support.v4.app.DialogFragment.onStop () "," Called when the Fragment is no longer started. <br /><br />"
"android.support.v4.app.DialogFragment.getShowsDialog ()   Return the current value of setShowsDialog (boolean) "," Return the current value of setShowsDialog(boolean). <br /><br />"
"android.support.v4.app.DialogFragment.dismiss () "," Dismiss the fragment and its dialog. <br /><br />"
"android.support.v4.app.DialogFragment.getTheme () "," no description <br /><br />"
"android.support.v4.app.DialogFragment.onCreate (Bundle savedInstanceState) "," Called to do initial creation of a fragment. <br /><br />"
"android.support.v4.app.DialogFragment.show (FragmentTransaction transaction, String tag) "," Display the dialog, adding the fragment using an existing transaction and then committing the transaction. <br /><br />"
"android.support.v4.app.DialogFragment.onDismiss (DialogInterface dialog) "," This method will be invoked when the dialog is dismissed. <br /><br />"
"android.support.v4.app.DialogFragment.setCancelable (boolean cancelable) "," Control whether the shown Dialog is cancelable. <br /><br />"
"android.support.v4.app.DialogFragment.getDialog () "," no description <br /><br />"
"android.support.v4.app.DialogFragment.dismissAllowingStateLoss ()   Version of dismiss () that uses FragmentTransaction.commitAllowingStateLoss () "," Version of dismiss() that uses FragmentTransaction.commitAllowingStateLoss(). <br /><br />"
"android.support.v4.app.DialogFragment.setStyle (int style, int theme) "," Call to customize the basic appearance and behavior of the fragment's dialog. <br /><br />"
"android.support.v4.app.Fragment.getView ()   Get the root view for the fragment's layout  (the one returned by onCreateView (LayoutInflater, ViewGroup, Bundle)) "," Get the root view for the fragment's layout (the one returned by onCreateView(LayoutInflater, ViewGroup, Bundle)), if provided. <br /><br />"
"android.support.v4.app.Fragment.getTargetRequestCode ()   Return the target request code set by setTargetFragment (Fragment, int) "," Return the target request code set by setTargetFragment(Fragment, int). <br /><br />"
"android.support.v4.app.Fragment.getExitTransition () "," Returns the Transition that will be used to move Views out of the scene when the fragment is removed, hidden, or detached when not popping the back stack. <br /><br />"
"android.support.v4.app.Fragment.getTag () "," Get the tag name of the fragment, if specified. <br /><br />"
"android.support.v4.app.Fragment.getSharedElementEnterTransition () "," Returns the Transition that will be used for shared elements transferred into the content Scene. <br /><br />"
"android.support.v4.app.Fragment.onPause () "," Called when the Fragment is no longer resumed. <br /><br />"
"android.support.v4.app.Fragment.getFragmentManager () "," Return the FragmentManager for interacting with fragments associated with this fragment's activity. <br /><br />"
"android.support.v4.app.Fragment.onSaveInstanceState (Bundle outState) "," Called to ask the fragment to save its current dynamic state, so it can later be reconstructed in a new instance of its process is restarted. <br /><br />"
"android.support.v4.app.Fragment.hashCode ()   Subclasses can not override hashCode () "," Subclasses can not override hashCode(). <br /><br />"
"android.support.v4.app.Fragment.instantiate (Context context, String fname)   Like instantiate (Context, String, Bundle) "," Like instantiate(Context, String, Bundle) but with a null argument Bundle. <br /><br />"
"android.support.v4.app.Fragment.setEnterSharedElementCallback (SharedElementCallback callback) "," When custom transitions are used with Fragments, the enter transition callback is called when this Fragment is attached or detached when not popping the back stack. <br /><br />"
"android.support.v4.app.Fragment.onStop () "," Called when the Fragment is no longer started. <br /><br />"
"android.support.v4.app.Fragment.onDestroyView ()   Called when the view previously created by onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called when the view previously created by onCreateView(LayoutInflater, ViewGroup, Bundle) has been detached from the fragment. <br /><br />"
"android.support.v4.app.Fragment.getRetainInstance () "," no description <br /><br />"
"android.support.v4.app.Fragment.setSharedElementEnterTransition (Object transition) "," Sets the Transition that will be used for shared elements transferred into the content Scene. <br /><br />"
"android.support.v4.app.Fragment.onDestroy () "," Called when the fragment is no longer in use. <br /><br />"
"android.support.v4.app.Fragment.getUserVisibleHint () "," no description <br /><br />"
"android.support.v4.app.Fragment.isRemoving () "," Return true if this fragment is currently being removed from its activity. <br /><br />"
"android.support.v4.app.Fragment.setReturnTransition (Object transition) "," Sets the Transition that will be used to move Views out of the scene when the Fragment is preparing to be removed, hidden, or detached because of popping the back stack. <br /><br />"
"android.support.v4.app.Fragment.getTargetFragment ()   Return the target fragment set by setTargetFragment (Fragment, int) "," Return the target fragment set by setTargetFragment(Fragment, int). <br /><br />"
"android.support.v4.app.Fragment.onResume () "," Called when the fragment is visible to the user and actively running. <br /><br />"
"android.support.v4.app.Fragment.onContextItemSelected (MenuItem item) "," This hook is called whenever an item in a context menu is selected. <br /><br />"
"android.support.v4.app.Fragment.setAllowEnterTransitionOverlap (boolean allow) "," Sets whether the the exit transition and enter transition overlap or not. <br /><br />"
"android.support.v4.app.Fragment.setRetainInstance (boolean retain)   Control whether a fragment instance is retained across Activity re-creation  (such as from a configuration change) "," Control whether a fragment instance is retained across Activity re-creation (such as from a configuration change). <br /><br />"
"android.support.v4.app.Fragment.getAllowEnterTransitionOverlap () "," Returns whether the the exit transition and enter transition overlap or not. <br /><br />"
"android.support.v4.app.Fragment.onCreateContextMenu (ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) "," Called when a context menu for the view is about to be shown. <br /><br />"
"android.support.v4.app.Fragment.setExitSharedElementCallback (SharedElementCallback callback) "," When custom transitions are used with Fragments, the exit transition callback is called when this Fragment is attached or detached when popping the back stack. <br /><br />"
"android.support.v4.app.Fragment.onStart () "," Called when the Fragment is visible to the user. <br /><br />"
"android.support.v4.app.Fragment.onDestroyOptionsMenu () "," Called when this fragment's option menu items are no longer being included in the overall options menu. <br /><br />"
"android.support.v4.app.Fragment.getText (int resId) "," Return a localized, styled CharSequence from the application's package's default string table. <br /><br />"
"android.support.v4.app.Fragment.onOptionsItemSelected (MenuItem item) "," This hook is called whenever an item in your options menu is selected. <br /><br />"
"android.support.v4.app.Fragment.onLowMemory () "," This is called when the overall system is running low on memory, and actively running processes should trim their memory usage. <br /><br />"
"android.support.v4.app.Fragment.onCreate (Bundle savedInstanceState) "," Called to do initial creation of a fragment. <br /><br />"
"android.support.v4.app.Fragment.getParentFragment () "," Returns the parent Fragment containing this Fragment. <br /><br />"
"android.support.v4.app.Fragment.getId () "," Return the identifier this fragment is known by. <br /><br />"
"android.support.v4.app.Fragment.getEnterTransition () "," Returns the Transition that will be used to move Views into the initial scene. <br /><br />"
"android.support.v4.app.Fragment.onCreateOptionsMenu (Menu menu, MenuInflater inflater) "," Initialize the contents of the Activity's standard options menu. <br /><br />"
"android.support.v4.app.Fragment.startActivity (Intent intent)   Call startActivity (Intent) "," Call startActivity(Intent) on the fragment's containing Activity. <br /><br />"
"android.support.v4.app.Fragment.onOptionsMenuClosed (Menu menu)   This hook is called whenever the options menu is being closed  (either by the user canceling the menu with the back/menu button, or when an item is selected) "," This hook is called whenever the options menu is being closed (either by the user canceling the menu with the back/menu button, or when an item is selected). <br /><br />"
"android.support.v4.app.Fragment.registerForContextMenu (View view)   Registers a context menu to be shown for the given view  (multiple views can show the context menu) "," Registers a context menu to be shown for the given view (multiple views can show the context menu). <br /><br />"
"android.support.v4.app.Fragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Called to have the fragment instantiate its user interface view. <br /><br />"
"android.support.v4.app.Fragment.getReturnTransition () "," Returns the Transition that will be used to move Views out of the scene when the Fragment is preparing to be removed, hidden, or detached because of popping the back stack. <br /><br />"
"android.support.v4.app.Fragment.setUserVisibleHint (boolean isVisibleToUser) "," Set a hint to the system about whether this fragment's UI is currently visible to the user. <br /><br />"
"android.support.v4.app.Fragment.onDetach () "," Called when the fragment is no longer attached to its activity. <br /><br />"
"android.support.v4.app.Fragment.isVisible () "," Return true if the fragment is currently visible to the user. <br /><br />"
"android.support.v4.app.Fragment.setReenterTransition (Object transition) "," Sets the Transition that will be used to move Views in to the scene when returning due to popping a back stack. <br /><br />"
"android.support.v4.app.Fragment.setAllowReturnTransitionOverlap (boolean allow) "," Sets whether the the return transition and reenter transition overlap or not. <br /><br />"
"android.support.v4.app.Fragment.unregisterForContextMenu (View view) "," Prevents a context menu to be shown for the given view. <br /><br />"
"android.support.v4.app.Fragment.onHiddenChanged (boolean hidden)   Called when the hidden state  (as returned by isHidden () "," Called when the hidden state (as returned by isHidden() of the fragment has changed. <br /><br />"
"android.support.v4.app.Fragment.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v4.app.Fragment.onConfigurationChanged (Configuration newConfig) "," Called by the system when the device configuration changes while your component is running. <br /><br />"
"android.support.v4.app.Fragment.setInitialSavedState (Fragment.SavedState state)   Set the initial saved state that this Fragment should restore itself from when first being constructed, as returned by "," Set the initial saved state that this Fragment should restore itself from when first being constructed, as returned by FragmentManager.saveFragmentInstanceState. <br /><br />"
"android.support.v4.app.Fragment.getResources ()   Return getActivity ().getResources () "," Return getActivity().getResources(). <br /><br />"
"android.support.v4.app.Fragment.setHasOptionsMenu (boolean hasMenu)   Report that this fragment would like to participate in populating the options menu by receiving a call to onCreateOptionsMenu (Menu, MenuInflater) "," Report that this fragment would like to participate in populating the options menu by receiving a call to onCreateOptionsMenu(Menu, MenuInflater) and related methods. <br /><br />"
"android.support.v4.app.Fragment.setSharedElementReturnTransition (Object transition) "," Sets the Transition that will be used for shared elements transferred back during a pop of the back stack. <br /><br />"
"android.support.v4.app.Fragment.getAllowReturnTransitionOverlap () "," Returns whether the the return transition and reenter transition overlap or not. <br /><br />"
"android.support.v4.app.Fragment.getReenterTransition () "," Returns the Transition that will be used to move Views in to the scene when returning due to popping a back stack. <br /><br />"
"android.support.v4.app.Fragment.getString (int resId) "," Return a localized string from the application's package's default string table. <br /><br />"
"android.support.v4.app.Fragment.startActivityForResult (Intent intent, int requestCode)   Call startActivityForResult (Intent, int) "," Call startActivityForResult(Intent, int) on the fragment's containing Activity. <br /><br />"
"android.support.v4.app.Fragment.getLoaderManager () "," Return the LoaderManager for this fragment, creating it if needed. <br /><br />"
"android.support.v4.app.Fragment.isResumed () "," Return true if the fragment is in the resumed state. <br /><br />"
"android.support.v4.app.Fragment.setEnterTransition (Object transition) "," Sets the Transition that will be used to move Views into the initial scene. <br /><br />"
"android.support.v4.app.Fragment.setExitTransition (Object transition) "," Sets the Transition that will be used to move Views out of the scene when the fragment is removed, hidden, or detached when not popping the back stack. <br /><br />"
"android.support.v4.app.Fragment.getChildFragmentManager () "," Return a private FragmentManager for placing and managing Fragments inside of this Fragment. <br /><br />"
"android.support.v4.app.Fragment.setTargetFragment (Fragment fragment, int requestCode) "," Optional target for this fragment. <br /><br />"
"android.support.v4.app.Fragment.equals (Object o)   Subclasses can not override equals () "," Subclasses can not override equals(). <br /><br />"
"android.support.v4.app.Fragment.onActivityCreated (Bundle savedInstanceState) "," Called when the fragment's activity has been created and this fragment's view hierarchy instantiated. <br /><br />"
"android.support.v4.app.Fragment.onActivityResult (int requestCode, int resultCode, Intent data)   Receive the result from a previous call to startActivityForResult (Intent, int) "," Receive the result from a previous call to startActivityForResult(Intent, int). <br /><br />"
"android.support.v4.app.Fragment.onViewCreated (View view, Bundle savedInstanceState)   Called immediately after onCreateView (LayoutInflater, ViewGroup, Bundle) "," Called immediately after onCreateView(LayoutInflater, ViewGroup, Bundle) has returned, but before any saved state has been restored in to the view. <br /><br />"
"android.support.v4.app.Fragment.getString (int resId, Object... formatArgs)   Return a localized formatted string from the application's package's default string table, substituting the format arguments as defined in Formatter and format (String, Object...) "," Return a localized formatted string from the application's package's default string table, substituting the format arguments as defined in Formatter and format(String, Object...). <br /><br />"
"android.support.v4.app.Fragment.getActivity () "," Return the Activity this fragment is currently associated with. <br /><br />"
"android.support.v4.app.Fragment.isInLayout () "," Return true if the layout is included as part of an activity view hierarchy via the <fragment> tag. <br /><br />"
"android.support.v4.app.Fragment.instantiate (Context context, String fname, Bundle args) "," Create a new instance of a Fragment with the given class name. <br /><br />"
"android.support.v4.app.Fragment.isAdded () "," Return true if the fragment is currently added to its activity. <br /><br />"
"android.support.v4.app.Fragment.onCreateAnimation (int transit, boolean enter, int nextAnim) "," Called when a fragment loads an animation. <br /><br />"
"android.support.v4.app.Fragment.onAttach (Activity activity) "," Called when a fragment is first attached to its activity. <br /><br />"
"android.support.v4.app.Fragment.isDetached () "," Return true if the fragment has been explicitly detached from the UI. <br /><br />"
"android.support.v4.app.Fragment.onViewStateRestored (Bundle savedInstanceState) "," Called when all saved state has been restored into the view hierarchy of the fragment. <br /><br />"
"android.support.v4.app.Fragment.setMenuVisibility (boolean menuVisible) "," Set a hint for whether this fragment's menu should be visible. <br /><br />"
"android.support.v4.app.Fragment.getSharedElementReturnTransition () "," Return the Transition that will be used for shared elements transferred back during a pop of the back stack. <br /><br />"
"android.support.v4.app.Fragment.getArguments () "," Return the arguments supplied when the fragment was instantiated, if any. <br /><br />"
"android.support.v4.app.Fragment.onInflate (Activity activity, AttributeSet attrs, Bundle savedInstanceState) "," Called when a fragment is being created as part of a view layout inflation, typically from setting the content view of an activity. <br /><br />"
"android.support.v4.app.Fragment.onPrepareOptionsMenu (Menu menu) "," Prepare the Screen's standard options menu to be displayed. <br /><br />"
"android.support.v4.app.Fragment.isHidden () "," Return true if the fragment has been hidden. <br /><br />"
"android.support.v4.app.Fragment.setArguments (Bundle args) "," Supply the construction arguments for this fragment. <br /><br />"
"android.support.v4.app.Fragment.dump (String prefix, FileDescriptor fd, PrintWriter writer, String[] args) "," Print the Fragments's state into the given stream. <br /><br />"
"android.support.v4.app.Fragment.SavedState.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.support.v4.app.Fragment.SavedState.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.support.v4.app.FragmentActivity.supportPostponeEnterTransition ()   Support library version of postponeEnterTransition () "," Support library version of postponeEnterTransition() that works only on API 21 and later. <br /><br />"
"android.support.v4.app.FragmentActivity.supportFinishAfterTransition () "," Reverses the Activity Scene entry Transition and triggers the calling Activity to reverse its exit Transition. <br /><br />"
"android.support.v4.app.FragmentActivity.startActivityForResult (Intent intent, int requestCode) "," Modifies the standard behavior to allow results to be delivered to fragments. <br /><br />"
"android.support.v4.app.FragmentActivity.onBackPressed () "," Take care of popping the fragment back stack or finishing the activity as appropriate. <br /><br />"
"android.support.v4.app.FragmentActivity.onPanelClosed (int featureId, Menu menu)   Call onOptionsMenuClosed () "," Call onOptionsMenuClosed() on fragments. <br /><br />"
"android.support.v4.app.FragmentActivity.setEnterSharedElementCallback (SharedElementCallback callback)   When makeSceneTransitionAnimation (Activity, android.view.View, String) "," When makeSceneTransitionAnimation(Activity, android.view.View, String) was used to start an Activity, callback will be called to handle shared elements on the launched Activity. <br /><br />"
"android.support.v4.app.FragmentActivity.supportInvalidateOptionsMenu ()   Support library version of invalidateOptionsMenu () "," Support library version of invalidateOptionsMenu(). <br /><br />"
"android.support.v4.app.FragmentActivity.onPreparePanel (int featureId, View view, Menu menu)   Dispatch onPrepareOptionsMenu () "," Dispatch onPrepareOptionsMenu() to fragments. <br /><br />"
"android.support.v4.app.FragmentActivity.supportStartPostponedEnterTransition ()   Support library version of startPostponedEnterTransition () "," Support library version of startPostponedEnterTransition() that only works with API 21 and later. <br /><br />"
"android.support.v4.app.FragmentActivity.onCreatePanelMenu (int featureId, Menu menu)   Dispatch to Fragment.onCreateOptionsMenu () "," Dispatch to Fragment.onCreateOptionsMenu(). <br /><br />"
"android.support.v4.app.FragmentActivity.onRetainNonConfigurationInstance ()    This method is deprecated. Use the new Fragment API setRetainInstance (boolean) "," This method is deprecated. Use the new Fragment API setRetainInstance(boolean) instead; this is also available on older platforms through the Android compatibility package. <br /><br />"
"android.support.v4.app.FragmentActivity.onRetainCustomNonConfigurationInstance ()   Use this instead of onRetainNonConfigurationInstance () "," Use this instead of onRetainNonConfigurationInstance(). <br /><br />"
"android.support.v4.app.FragmentActivity.getSupportLoaderManager () "," Return the LoaderManager for this fragment, creating it if needed. <br /><br />"
"android.support.v4.app.FragmentActivity.onConfigurationChanged (Configuration newConfig) "," Dispatch configuration change to all fragments. <br /><br />"
"android.support.v4.app.FragmentActivity.getLastCustomNonConfigurationInstance ()   Return the value previously returned from onRetainCustomNonConfigurationInstance () "," Return the value previously returned from onRetainCustomNonConfigurationInstance(). <br /><br />"
"android.support.v4.app.FragmentActivity.onCreateView (String name, Context context, AttributeSet attrs) "," Add support for inflating the <fragment> tag. <br /><br />"
"android.support.v4.app.FragmentActivity.onLowMemory ()   Dispatch onLowMemory () "," Dispatch onLowMemory() to all fragments. <br /><br />"
"android.support.v4.app.FragmentActivity.setExitSharedElementCallback (SharedElementCallback listener)   When makeSceneTransitionAnimation (Activity, android.view.View, String) "," When makeSceneTransitionAnimation(Activity, android.view.View, String) was used to start an Activity, listener will be called to handle shared elements on the launching Activity. <br /><br />"
"android.support.v4.app.FragmentActivity.startActivityFromFragment (Fragment fragment, Intent intent, int requestCode)   Called by Fragment.startActivityForResult () "," Called by Fragment.startActivityForResult() to implement its behavior. <br /><br />"
"android.support.v4.app.FragmentActivity.getSupportFragmentManager () "," Return the FragmentManager for interacting with fragments associated with this activity. <br /><br />"
"android.support.v4.app.FragmentActivity.onAttachFragment (Fragment fragment) "," Called when a fragment is attached to the activity. <br /><br />"
"android.support.v4.app.FragmentActivity.onKeyDown (int keyCode, KeyEvent event)   Take care of calling onBackPressed () "," Take care of calling onBackPressed() for pre-Eclair platforms. <br /><br />"
"android.support.v4.app.FragmentActivity.dump (String prefix, FileDescriptor fd, PrintWriter writer, String[] args) "," Print the Activity's state into the given stream. <br /><br />"
"android.support.v4.app.FragmentActivity.onMenuItemSelected (int featureId, MenuItem item) "," Dispatch context and options menu to fragments. <br /><br />"
"android.support.v4.app.FragmentManager.BackStackEntry.getName ()   Get the name that was supplied to FragmentTransaction.addToBackStack (String) "," Get the name that was supplied to FragmentTransaction.addToBackStack(String) when creating this entry. <br /><br />"
"android.support.v4.app.FragmentManager.BackStackEntry.getBreadCrumbShortTitleRes () "," Return the short bread crumb title resource identifier for the entry, or 0 if it does not have one. <br /><br />"
"android.support.v4.app.FragmentManager.BackStackEntry.getId () "," Return the unique identifier for the entry. <br /><br />"
"android.support.v4.app.FragmentManager.BackStackEntry.getBreadCrumbTitle () "," Return the full bread crumb title for the entry, or null if it does not have one. <br /><br />"
"android.support.v4.app.FragmentManager.BackStackEntry.getBreadCrumbTitleRes () "," Return the full bread crumb title resource identifier for the entry, or 0 if it does not have one. <br /><br />"
"android.support.v4.app.FragmentManager.BackStackEntry.getBreadCrumbShortTitle () "," Return the short bread crumb title for the entry, or null if it does not have one. <br /><br />"
"android.support.v4.app.FragmentManager.putFragment (Bundle bundle, String key, Fragment fragment) "," Put a reference to a fragment in a Bundle. <br /><br />"
"android.support.v4.app.FragmentManager.findFragmentById (int id) "," Finds a fragment that was identified by the given id either when inflated from XML or as the container ID when added in a transaction. <br /><br />"
"android.support.v4.app.FragmentManager.removeOnBackStackChangedListener (FragmentManager.OnBackStackChangedListener listener)   Remove a listener that was previously added with addOnBackStackChangedListener (OnBackStackChangedListener) "," Remove a listener that was previously added with addOnBackStackChangedListener(OnBackStackChangedListener). <br /><br />"
"android.support.v4.app.FragmentManager.getBackStackEntryCount () "," Return the number of entries currently in the back stack. <br /><br />"
"android.support.v4.app.FragmentManager.popBackStackImmediate ()   Like popBackStack () "," Like popBackStack(), but performs the operation immediately inside of the call. <br /><br />"
"android.support.v4.app.FragmentManager.beginTransaction () "," Start a series of edit operations on the Fragments associated with this FragmentManager. <br /><br />"
"android.support.v4.app.FragmentManager.getFragment (Bundle bundle, String key)   Retrieve the current Fragment instance for a reference previously placed with putFragment (Bundle, String, Fragment) "," Retrieve the current Fragment instance for a reference previously placed with putFragment(Bundle, String, Fragment). <br /><br />"
"android.support.v4.app.FragmentManager.popBackStack () "," Pop the top state off the back stack. <br /><br />"
"android.support.v4.app.FragmentManager.popBackStackImmediate (String name, int flags)   Like popBackStack (String, int) "," Like popBackStack(String, int), but performs the operation immediately inside of the call. <br /><br />"
"android.support.v4.app.FragmentManager.popBackStackImmediate (int id, int flags)   Like popBackStack (int, int) "," Like popBackStack(int, int), but performs the operation immediately inside of the call. <br /><br />"
"android.support.v4.app.FragmentManager.addOnBackStackChangedListener (FragmentManager.OnBackStackChangedListener listener) "," Add a new listener for changes to the fragment back stack. <br /><br />"
"android.support.v4.app.FragmentManager.popBackStack (String name, int flags) "," Pop the last fragment transition from the manager's fragment back stack. <br /><br />"
"android.support.v4.app.FragmentManager.popBackStack (int id, int flags) "," Pop all back stack states up to the one with the given identifier. <br /><br />"
"android.support.v4.app.FragmentManager.isDestroyed ()   Returns true if the final Activity.onDestroy () "," Returns true if the final Activity.onDestroy() call has been made on the FragmentManager's Activity, so this instance is now dead. <br /><br />"
"android.support.v4.app.FragmentManager.enableDebugLogging (boolean enabled) "," Control whether the framework's internal fragment manager debugging logs are turned on. <br /><br />"
"android.support.v4.app.FragmentManager.findFragmentByTag (String tag) "," Finds a fragment that was identified by the given tag either when inflated from XML or as supplied when added in a transaction. <br /><br />"
"android.support.v4.app.FragmentManager.getBackStackEntryAt (int index) "," Return the BackStackEntry at index index in the back stack; entries start index 0 being the bottom of the stack. <br /><br />"
"android.support.v4.app.FragmentManager.saveFragmentInstanceState (Fragment f) "," Save the current instance state of the given Fragment. <br /><br />"
"android.support.v4.app.FragmentManager.executePendingTransactions ()   After a FragmentTransaction is committed with FragmentTransaction.commit () "," After a FragmentTransaction is committed with FragmentTransaction.commit(), it is scheduled to be executed asynchronously on the process's main thread. <br /><br />"
"android.support.v4.app.FragmentManager.dump (String prefix, FileDescriptor fd, PrintWriter writer, String[] args) "," Print the FragmentManager's state into the given stream. <br /><br />"
"android.support.v4.app.FragmentManager.OnBackStackChangedListener.onBackStackChanged () "," Called whenever the contents of the back stack change. <br /><br />"
"android.support.v4.app.FragmentPagerAdapter.restoreState (Parcelable state, ClassLoader loader)   Restore any instance state associated with this adapter and its pages that was previously saved by saveState () "," Restore any instance state associated with this adapter and its pages that was previously saved by saveState(). <br /><br />"
"android.support.v4.app.FragmentPagerAdapter.getItem (int position) "," Return the Fragment associated with a specified position. <br /><br />"
"android.support.v4.app.FragmentPagerAdapter.setPrimaryItem (ViewGroup container, int position, Object object) "," Called to inform the adapter of which item is currently considered to be the 'primary', that is the one show to the user as the current page. <br /><br />"
"android.support.v4.app.FragmentPagerAdapter.saveState () "," Save any instance state associated with this adapter and its pages that should be restored if the current UI state needs to be reconstructed. <br /><br />"
"android.support.v4.app.FragmentPagerAdapter.finishUpdate (ViewGroup container) "," Called when the a change in the shown pages has been completed. <br /><br />"
"android.support.v4.app.FragmentPagerAdapter.instantiateItem (ViewGroup container, int position) "," Create the page for the given position. <br /><br />"
"android.support.v4.app.FragmentPagerAdapter.destroyItem (ViewGroup container, int position, Object object) "," Remove a page for the given position. <br /><br />"
"android.support.v4.app.FragmentPagerAdapter.isViewFromObject (View view, Object object)   Determines whether a page View is associated with a specific key object as returned by instantiateItem (ViewGroup, int) "," Determines whether a page View is associated with a specific key object as returned by instantiateItem(ViewGroup, int). <br /><br />"
"android.support.v4.app.FragmentPagerAdapter.startUpdate (ViewGroup container) "," Called when a change in the shown pages is going to start being made. <br /><br />"
"android.support.v4.app.FragmentPagerAdapter.getItemId (int position) "," Return a unique identifier for the item at the given position. <br /><br />"
"android.support.v4.app.FragmentStatePagerAdapter.restoreState (Parcelable state, ClassLoader loader)   Restore any instance state associated with this adapter and its pages that was previously saved by saveState () "," Restore any instance state associated with this adapter and its pages that was previously saved by saveState(). <br /><br />"
"android.support.v4.app.FragmentStatePagerAdapter.getItem (int position) "," Return the Fragment associated with a specified position. <br /><br />"
"android.support.v4.app.FragmentStatePagerAdapter.setPrimaryItem (ViewGroup container, int position, Object object) "," Called to inform the adapter of which item is currently considered to be the 'primary', that is the one show to the user as the current page. <br /><br />"
"android.support.v4.app.FragmentStatePagerAdapter.saveState () "," Save any instance state associated with this adapter and its pages that should be restored if the current UI state needs to be reconstructed. <br /><br />"
"android.support.v4.app.FragmentStatePagerAdapter.finishUpdate (ViewGroup container) "," Called when the a change in the shown pages has been completed. <br /><br />"
"android.support.v4.app.FragmentStatePagerAdapter.instantiateItem (ViewGroup container, int position) "," Create the page for the given position. <br /><br />"
"android.support.v4.app.FragmentStatePagerAdapter.destroyItem (ViewGroup container, int position, Object object) "," Remove a page for the given position. <br /><br />"
"android.support.v4.app.FragmentStatePagerAdapter.isViewFromObject (View view, Object object)   Determines whether a page View is associated with a specific key object as returned by instantiateItem (ViewGroup, int) "," Determines whether a page View is associated with a specific key object as returned by instantiateItem(ViewGroup, int). <br /><br />"
"android.support.v4.app.FragmentStatePagerAdapter.startUpdate (ViewGroup container) "," Called when a change in the shown pages is going to start being made. <br /><br />"
"android.support.v4.app.FragmentTabHost.addTab (TabHost.TabSpec tabSpec, Class<?> clss, Bundle args) "," no description <br /><br />"
"android.support.v4.app.FragmentTabHost.onTabChanged (String tabId) "," no description <br /><br />"
"android.support.v4.app.FragmentTabHost.setOnTabChangedListener (TabHost.OnTabChangeListener l) "," Register a callback to be invoked when the selected state of any of the items in this list changes <br /><br />"
"android.support.v4.app.FragmentTabHost.setup (Context context, FragmentManager manager) "," no description <br /><br />"
"android.support.v4.app.FragmentTabHost.setup ()    This method is deprecated. Don't call the original TabHost setup, you must instead call setup (Context, FragmentManager) or setup (Context, FragmentManager, int) "," This method is deprecated. Don't call the original TabHost setup, you must instead call setup(Context, FragmentManager) or setup(Context, FragmentManager, int). <br /><br />"
"android.support.v4.app.FragmentTabHost.setup (Context context, FragmentManager manager, int containerId) "," no description <br /><br />"
"android.support.v4.app.FragmentTransaction.commit () "," Schedules a commit of this transaction. <br /><br />"
"android.support.v4.app.FragmentTransaction.setBreadCrumbShortTitle (int res) "," Set the short title to show as a bread crumb when this transaction is on the back stack. <br /><br />"
"android.support.v4.app.FragmentTransaction.add (int containerViewId, Fragment fragment)   Calls add (int, Fragment, String) "," Calls add(int, Fragment, String) with a null tag. <br /><br />"
"android.support.v4.app.FragmentTransaction.add (Fragment fragment, String tag)   Calls add (int, Fragment, String) "," Calls add(int, Fragment, String) with a 0 containerViewId. <br /><br />"
"android.support.v4.app.FragmentTransaction.setCustomAnimations (int enter, int exit, int popEnter, int popExit) "," Set specific animation resources to run for the fragments that are entering and exiting in this transaction. <br /><br />"
"android.support.v4.app.FragmentTransaction.setBreadCrumbTitle (int res) "," Set the full title to show as a bread crumb when this transaction is on the back stack. <br /><br />"
"android.support.v4.app.FragmentTransaction.attach (Fragment fragment)   Re-attach a fragment after it had previously been deatched from the UI with detach (Fragment) "," Re-attach a fragment after it had previously been deatched from the UI with detach(Fragment). <br /><br />"
"android.support.v4.app.FragmentTransaction.add (int containerViewId, Fragment fragment, String tag) "," Add a fragment to the activity state. <br /><br />"
"android.support.v4.app.FragmentTransaction.setBreadCrumbTitle (CharSequence text)   Like setBreadCrumbTitle (int) "," Like setBreadCrumbTitle(int) but taking a raw string; this method is not recommended, as the string can not be changed later if the locale changes. <br /><br />"
"android.support.v4.app.FragmentTransaction.replace (int containerViewId, Fragment fragment)   Calls replace (int, Fragment, String) "," Calls replace(int, Fragment, String) with a null tag. <br /><br />"
"android.support.v4.app.FragmentTransaction.detach (Fragment fragment) "," Detach the given fragment from the UI. <br /><br />"
"android.support.v4.app.FragmentTransaction.addToBackStack (String name) "," Add this transaction to the back stack. <br /><br />"
"android.support.v4.app.FragmentTransaction.setCustomAnimations (int enter, int exit) "," Set specific animation resources to run for the fragments that are entering and exiting in this transaction. <br /><br />"
"android.support.v4.app.FragmentTransaction.disallowAddToBackStack ()   Disallow calls to addToBackStack (String) "," Disallow calls to addToBackStack(String). <br /><br />"
"android.support.v4.app.FragmentTransaction.commitAllowingStateLoss ()   Like commit () "," Like commit() but allows the commit to be executed after an activity's state is saved. <br /><br />"
"android.support.v4.app.FragmentTransaction.replace (int containerViewId, Fragment fragment, String tag) "," Replace an existing fragment that was added to a container. <br /><br />"
"android.support.v4.app.FragmentTransaction.setBreadCrumbShortTitle (CharSequence text)   Like setBreadCrumbShortTitle (int) "," Like setBreadCrumbShortTitle(int) but taking a raw string; this method is not recommended, as the string can not be changed later if the locale changes. <br /><br />"
"android.support.v4.app.FragmentTransaction.addSharedElement (View sharedElement, String name) "," Used with custom Transitions to map a View from a removed or hidden Fragment to a View from a shown or added Fragment. <br /><br />"
"android.support.v4.app.FragmentTransaction.isEmpty () "," no description <br /><br />"
"android.support.v4.app.FragmentTransaction.isAddToBackStackAllowed () "," Returns true if this FragmentTransaction is allowed to be added to the back stack. <br /><br />"
"android.support.v4.app.FragmentTransaction.hide (Fragment fragment) "," Hides an existing fragment. <br /><br />"
"android.support.v4.app.FragmentTransaction.show (Fragment fragment) "," Shows a previously hidden fragment. <br /><br />"
"android.support.v4.app.FragmentTransaction.remove (Fragment fragment) "," Remove an existing fragment. <br /><br />"
"android.support.v4.app.FragmentTransaction.setTransition (int transit) "," Select a standard transition animation for this transaction. <br /><br />"
"android.support.v4.app.FragmentTransaction.setTransitionStyle (int styleRes) "," Set a custom style resource that will be used for resolving transit animations. <br /><br />"
"android.support.v4.app.ListFragment.onListItemClick (ListView l, View v, int position, long id) "," This method will be called when an item in the list is selected. <br /><br />"
"android.support.v4.app.ListFragment.onViewCreated (View view, Bundle savedInstanceState) "," Attach to list view once the view hierarchy has been created. <br /><br />"
"android.support.v4.app.ListFragment.getListView () "," Get the activity's list view widget. <br /><br />"
"android.support.v4.app.ListFragment.getSelectedItemPosition () "," Get the position of the currently selected list item. <br /><br />"
"android.support.v4.app.ListFragment.getListAdapter () "," Get the ListAdapter associated with this activity's ListView. <br /><br />"
"android.support.v4.app.ListFragment.onDestroyView () "," Detach from list view. <br /><br />"
"android.support.v4.app.ListFragment.setListShownNoAnimation (boolean shown)   Like setListShown (boolean) "," Like setListShown(boolean), but no animation is used when transitioning from the previous state. <br /><br />"
"android.support.v4.app.ListFragment.setListShown (boolean shown) "," Control whether the list is being displayed. <br /><br />"
"android.support.v4.app.ListFragment.setListAdapter (ListAdapter adapter) "," Provide the cursor for the list view. <br /><br />"
"android.support.v4.app.ListFragment.setEmptyText (CharSequence text) "," The default content for a ListFragment has a TextView that can be shown when the list is empty. <br /><br />"
"android.support.v4.app.ListFragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Provide default implementation to return a simple list view. <br /><br />"
"android.support.v4.app.ListFragment.getSelectedItemId () "," Get the cursor row ID of the currently selected list item. <br /><br />"
"android.support.v4.app.ListFragment.setSelection (int position) "," Set the currently selected list item to the specified position with the adapter's data <br /><br />"
"android.support.v4.app.LoaderManager.enableDebugLogging (boolean enabled) "," Control whether the framework's internal loader manager debugging logs are turned on. <br /><br />"
"android.support.v4.app.LoaderManager.destroyLoader (int id) "," Stops and removes the loader with the given ID. <br /><br />"
"android.support.v4.app.LoaderManager.restartLoader (int id, Bundle args, LoaderCallbacks<D> callback)   Starts a new or restarts an existing Loader in this manager, registers the callbacks to it, and  (if the activity/fragment is currently started) "," Starts a new or restarts an existing Loader in this manager, registers the callbacks to it, and (if the activity/fragment is currently started) starts loading it. <br /><br />"
"android.support.v4.app.LoaderManager.initLoader (int id, Bundle args, LoaderCallbacks<D> callback) "," Ensures a loader is initialized and active. <br /><br />"
"android.support.v4.app.LoaderManager.hasRunningLoaders () "," Returns true if any loaders managed are currently running and have not returned data to the application yet. <br /><br />"
"android.support.v4.app.LoaderManager.getLoader (int id) "," Return the Loader with the given id or null if no matching Loader is found. <br /><br />"
"android.support.v4.app.LoaderManager.dump (String prefix, FileDescriptor fd, PrintWriter writer, String[] args) "," Print the LoaderManager's state into the given stream. <br /><br />"
"android.support.v4.app.LoaderManager.LoaderCallbacks<D>.onLoadFinished (Loader<D> loader, D data) "," Called when a previously created loader has finished its load. <br /><br />"
"android.support.v4.app.LoaderManager.LoaderCallbacks<D>.onLoaderReset (Loader<D> loader) "," Called when a previously created loader is being reset, and thus making its data unavailable. <br /><br />"
"android.support.v4.app.LoaderManager.LoaderCallbacks<D>.onCreateLoader (int id, Bundle args) "," Instantiate and return a new Loader for the given ID. <br /><br />"
"android.support.v4.app.NavUtils.navigateUpTo (Activity sourceActivity, Intent upIntent) "," Navigate from sourceActivity to the activity specified by upIntent, finishing sourceActivity in the process. <br /><br />"
"android.support.v4.app.NavUtils.navigateUpFromSameTask (Activity sourceActivity)   Convenience method that is equivalent to calling navigateUpTo (sourceActivity, getParentActivityIntent  (sourceActivity)) "," Convenience method that is equivalent to calling navigateUpTo(sourceActivity, getParentActivityIntent (sourceActivity)). <br /><br />"
"android.support.v4.app.NavUtils.shouldUpRecreateTask (Activity sourceActivity, Intent targetIntent) "," Returns true if sourceActivity should recreate the task when navigating 'up' by using targetIntent. <br /><br />"
"android.support.v4.app.NavUtils.getParentActivityName (Activity sourceActivity) "," Return the fully qualified class name of sourceActivity's parent activity as specified by a PARENT_ACTIVITY <meta-data> element within the activity element in the application's manifest. <br /><br />"
"android.support.v4.app.NavUtils.getParentActivityIntent (Context context, Class<?> sourceActivityClass) "," Obtain an Intent that will launch an explicit target activity specified by sourceActivityClass's PARENT_ACTIVITY <meta-data> element in the application's manifest. <br /><br />"
"android.support.v4.app.NavUtils.getParentActivityIntent (Activity sourceActivity) "," Obtain an Intent that will launch an explicit target activity specified by sourceActivity's PARENT_ACTIVITY <meta-data> element in the application's manifest. <br /><br />"
"android.support.v4.app.NavUtils.getParentActivityName (Context context, ComponentName componentName) "," Return the fully qualified class name of a source activity's parent activity as specified by a PARENT_ACTIVITY <meta-data> element within the activity element in the application's manifest. <br /><br />"
"android.support.v4.app.NavUtils.getParentActivityIntent (Context context, ComponentName componentName) "," Obtain an Intent that will launch an explicit target activity specified by sourceActivityClass's PARENT_ACTIVITY <meta-data> element in the application's manifest. <br /><br />"
"android.support.v4.app.NotificationCompat.Action.Builder.getExtras () "," Get the metadata Bundle used by this Builder. <br /><br />"
"android.support.v4.app.NotificationCompat.Action.Builder.extend (NotificationCompat.Action.Extender extender) "," Apply an extender to this action builder. <br /><br />"
"android.support.v4.app.NotificationCompat.Action.Builder.addRemoteInput (RemoteInput remoteInput) "," Add an input to be collected from the user when this action is sent. <br /><br />"
"android.support.v4.app.NotificationCompat.Action.Builder.addExtras (Bundle extras) "," Merge additional metadata into this builder. <br /><br />"
"android.support.v4.app.NotificationCompat.Action.Builder.build () "," Combine all of the options that have been set and return a new NotificationCompat.Action object. <br /><br />"
"android.support.v4.app.NotificationCompat.Action.Extender.extend (NotificationCompat.Action.Builder builder) "," Apply this extender to a notification action builder. <br /><br />"
"android.support.v4.app.NotificationCompat.Action.getExtras () "," Get additional metadata carried around with this Action. <br /><br />"
"android.support.v4.app.NotificationCompat.Action.getRemoteInputs () "," Get the list of inputs to be collected from the user when this action is sent. <br /><br />"
"android.support.v4.app.NotificationCompat.Action.WearableExtender.setAvailableOffline (boolean availableOffline) "," Set whether this action is available when the wearable device is not connected to a companion device. <br /><br />"
"android.support.v4.app.NotificationCompat.Action.WearableExtender.getInProgressLabel () "," Get the label to display while the wearable is preparing to automatically execute the action. <br /><br />"
"android.support.v4.app.NotificationCompat.Action.WearableExtender.getCancelLabel () "," Get the label to display to cancel the action. <br /><br />"
"android.support.v4.app.NotificationCompat.Action.WearableExtender.extend (NotificationCompat.Action.Builder builder) "," Apply wearable extensions to a notification action that is being built. <br /><br />"
"android.support.v4.app.NotificationCompat.Action.WearableExtender.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.support.v4.app.NotificationCompat.Action.WearableExtender.setInProgressLabel (CharSequence label) "," Set a label to display while the wearable is preparing to automatically execute the action. <br /><br />"
"android.support.v4.app.NotificationCompat.Action.WearableExtender.getConfirmLabel () "," Get the label to display to confirm that the action should be executed. <br /><br />"
"android.support.v4.app.NotificationCompat.Action.WearableExtender.setConfirmLabel (CharSequence label) "," Set a label to display to confirm that the action should be executed. <br /><br />"
"android.support.v4.app.NotificationCompat.Action.WearableExtender.setCancelLabel (CharSequence label) "," Set a label to display to cancel the action. <br /><br />"
"android.support.v4.app.NotificationCompat.Action.WearableExtender.isAvailableOffline () "," Get whether this action is available when the wearable device is not connected to a companion device. <br /><br />"
"android.support.v4.app.NotificationCompat.BigPictureStyle.setBigContentTitle (CharSequence title) "," Overrides ContentTitle in the big form of the template. <br /><br />"
"android.support.v4.app.NotificationCompat.BigPictureStyle.bigPicture (Bitmap b) "," Provide the bitmap to be used as the payload for the BigPicture notification. <br /><br />"
"android.support.v4.app.NotificationCompat.BigPictureStyle.setSummaryText (CharSequence cs) "," Set the first line of text after the detail section in the big form of the template. <br /><br />"
"android.support.v4.app.NotificationCompat.BigPictureStyle.bigLargeIcon (Bitmap b) "," Override the large icon when the big notification is shown. <br /><br />"
"android.support.v4.app.NotificationCompat.BigTextStyle.setBigContentTitle (CharSequence title) "," Overrides ContentTitle in the big form of the template. <br /><br />"
"android.support.v4.app.NotificationCompat.BigTextStyle.bigText (CharSequence cs) "," Provide the longer text to be displayed in the big form of the template in place of the content text. <br /><br />"
"android.support.v4.app.NotificationCompat.BigTextStyle.setSummaryText (CharSequence cs) "," Set the first line of text after the detail section in the big form of the template. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setSubText (CharSequence text) "," Set the third line of text in the platform notification template. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setVibrate (long[] pattern) "," Set the vibration pattern to use. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setNumber (int number) "," Set the large number at the right-hand side of the notification. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.getNotification ()    This method is deprecated. Use build () "," This method is deprecated. Use build() instead. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setOnlyAlertOnce (boolean onlyAlertOnce) "," Set this flag if you would only like the sound, vibrate and ticker to be played if the notification is not already showing. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setDefaults (int defaults) "," Set the default notification options that will be used. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setAutoCancel (boolean autoCancel) "," Setting this flag will make it so the notification is automatically canceled when the user clicks it in the panel. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setSound (Uri sound) "," Set the sound to play. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.build () "," Combine all of the options that have been set and return a new Notification object. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setSmallIcon (int icon, int level)   A variant of setSmallIcon (int) "," A variant of setSmallIcon(int) that takes an additional level parameter for when the icon is a LevelListDrawable. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.addAction (NotificationCompat.Action action) "," Add an action to this notification. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setLargeIcon (Bitmap icon) "," Set the large icon that is shown in the ticker and notification. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setGroup (String groupKey) "," Set this notification to be part of a group of notifications sharing the same key. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setExtras (Bundle extras) "," Set metadata for this notification. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setWhen (long when) "," Set the time that the event occurred. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setPriority (int pri) "," Set the relative priority for this notification. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setStyle (NotificationCompat.Style style) "," Add a rich notification style to be applied at build time. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setTicker (CharSequence tickerText, RemoteViews views) "," Set the text that is displayed in the status bar when the notification first arrives, and also a RemoteViews object that may be displayed instead on some devices. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setCategory (String category) "," Set the notification category. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setContentInfo (CharSequence info) "," Set the large text at the right-hand side of the notification. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setProgress (int max, int progress, boolean indeterminate) "," Set the progress this notification represents, which may be represented as a ProgressBar. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.addPerson (String uri) "," Add a person that is relevant to this notification. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.addExtras (Bundle extras) "," Merge additional metadata into this notification. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setPublicVersion (Notification n) "," Supply a replacement Notification whose contents should be shown in insecure contexts (i.e. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setLights (int argb, int onMs, int offMs) "," Set the argb value that you would like the LED on the device to blnk, as well as the rate. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setVisibility (int visibility) "," Sets visibility. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setLocalOnly (boolean b) "," Set whether or not this notification is only relevant to the current device. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.addAction (int icon, CharSequence title, PendingIntent intent) "," Add an action to this notification. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setDeleteIntent (PendingIntent intent) "," Supply a PendingIntent to send when the notification is cleared by the user directly from the notification panel. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setShowWhen (boolean show)   Control whether the timestamp set with "," Control whether the timestamp set with setWhen is shown in the content view. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setGroupSummary (boolean isGroupSummary) "," Set this notification to be the group summary for a group of notifications. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.getExtras () "," Get the current metadata Bundle used by this notification Builder. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setSortKey (String sortKey) "," Set a sort key that orders this notification among other notifications from the same package. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setContentText (CharSequence text)   Set the text  (second row) "," Set the text (second row) of the notification, in a standard notification. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setColor (int argb) "," Sets color. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setContentTitle (CharSequence title)   Set the title  (first row) "," Set the title (first row) of the notification, in a standard notification. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setTicker (CharSequence tickerText) "," Set the text that is displayed in the status bar when the notification first arrives. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setContentIntent (PendingIntent intent) "," Supply a PendingIntent to send when the notification is clicked. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setSmallIcon (int icon) "," Set the small icon to use in the notification layouts. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setContent (RemoteViews views) "," Supply a custom RemoteViews to use instead of the standard one. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setFullScreenIntent (PendingIntent intent, boolean highPriority) "," An intent to launch instead of posting the notification to the status bar. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setUsesChronometer (boolean b) "," Show the when field as a stopwatch. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setSound (Uri sound, int streamType) "," Set the sound to play. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.extend (NotificationCompat.Extender extender) "," Apply an extender to this notification builder. <br /><br />"
"android.support.v4.app.NotificationCompat.Builder.setOngoing (boolean ongoing) "," Set whether this is an ongoing notification. <br /><br />"
"android.support.v4.app.NotificationCompat.CarExtender.setLargeIcon (Bitmap largeIcon) "," Sets the large icon of the car notification. <br /><br />"
"android.support.v4.app.NotificationCompat.CarExtender.setUnreadConversation (NotificationCompat.CarExtender.UnreadConversation unreadConversation) "," Sets the unread conversation in a message notification. <br /><br />"
"android.support.v4.app.NotificationCompat.CarExtender.extend (NotificationCompat.Builder builder) "," Apply car extensions to a notification that is being built. <br /><br />"
"android.support.v4.app.NotificationCompat.CarExtender.getColor () "," Gets the accent color. <br /><br />"
"android.support.v4.app.NotificationCompat.CarExtender.setColor (int color) "," Sets the accent color to use when Android Auto presents the notification. <br /><br />"
"android.support.v4.app.NotificationCompat.CarExtender.getLargeIcon () "," Gets the large icon used in this car notification, or null if no icon has been set. <br /><br />"
"android.support.v4.app.NotificationCompat.CarExtender.getUnreadConversation () "," Returns the unread conversation conveyed by this notification. <br /><br />"
"android.support.v4.app.NotificationCompat.CarExtender.UnreadConversation.Builder.setLatestTimestamp (long timestamp) "," Sets the timestamp of the most recent message in an unread conversation. <br /><br />"
"android.support.v4.app.NotificationCompat.CarExtender.UnreadConversation.Builder.setReadPendingIntent (PendingIntent pendingIntent) "," Sets the pending intent that will be sent once the messages in this notification are read. <br /><br />"
"android.support.v4.app.NotificationCompat.CarExtender.UnreadConversation.Builder.setReplyAction (PendingIntent pendingIntent, RemoteInput remoteInput) "," Sets the pending intent and remote input which will convey the reply to this notification. <br /><br />"
"android.support.v4.app.NotificationCompat.CarExtender.UnreadConversation.Builder.addMessage (String message) "," Appends a new unread message to the list of messages for this conversation. <br /><br />"
"android.support.v4.app.NotificationCompat.CarExtender.UnreadConversation.Builder.build () "," Builds a new unread conversation object. <br /><br />"
"android.support.v4.app.NotificationCompat.Extender.extend (NotificationCompat.Builder builder) "," Apply this extender to a notification builder. <br /><br />"
"android.support.v4.app.NotificationCompat.getCategory (Notification notif) "," Get the category of this notification in a backwards compatible manner. <br /><br />"
"android.support.v4.app.NotificationCompat.getAction (Notification notif, int actionIndex) "," Get an action on this notification in a backwards compatible manner. <br /><br />"
"android.support.v4.app.NotificationCompat.getSortKey (Notification notif) "," Get a sort key that orders this notification among other notifications from the same package. <br /><br />"
"android.support.v4.app.NotificationCompat.isGroupSummary (Notification notif) "," Get whether this notification to be the group summary for a group of notifications. <br /><br />"
"android.support.v4.app.NotificationCompat.getExtras (Notification notif) "," Gets the extras field from a notification in a backwards compatible manner. <br /><br />"
"android.support.v4.app.NotificationCompat.getLocalOnly (Notification notif) "," Get whether or not this notification is only relevant to the current device. <br /><br />"
"android.support.v4.app.NotificationCompat.getGroup (Notification notif) "," Get the key used to group this notification into a cluster or stack with other notifications on devices which support such rendering. <br /><br />"
"android.support.v4.app.NotificationCompat.getActionCount (Notification notif) "," Get the number of actions in this notification in a backwards compatible manner. <br /><br />"
"android.support.v4.app.NotificationCompat.InboxStyle.setBigContentTitle (CharSequence title) "," Overrides ContentTitle in the big form of the template. <br /><br />"
"android.support.v4.app.NotificationCompat.InboxStyle.setSummaryText (CharSequence cs) "," Set the first line of text after the detail section in the big form of the template. <br /><br />"
"android.support.v4.app.NotificationCompat.InboxStyle.addLine (CharSequence cs) "," Append a line to the digest section of the Inbox notification. <br /><br />"
"android.support.v4.app.NotificationCompat.Style.setBuilder (NotificationCompat.Builder builder) "," no description <br /><br />"
"android.support.v4.app.NotificationCompat.Style.build () "," no description <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.getContentIcon () "," Get an icon that goes with the content of this notification. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.setContentIconGravity (int contentIconGravity) "," Set the gravity that the content icon should have within the notification display. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.getStartScrollBottom () "," Get whether the scrolling position for the contents of this notification should start at the bottom of the contents instead of the top when the contents are too long to display within the screen. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.setDisplayIntent (PendingIntent intent) "," Set an intent to launch inside of an activity view when displaying this notification. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.setContentAction (int actionIndex) "," Set an action from this notification's actions to be clickable with the content of this notification. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.setHintScreenTimeout (int timeout) "," Set a hint that the screen should remain on for at least this duration when this notification is displayed on the screen. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.getContentIntentAvailableOffline () "," Get whether the content intent is available when the wearable device is not connected to a companion device. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.setStartScrollBottom (boolean startScrollBottom) "," Set whether the scrolling position for the contents of this notification should start at the bottom of the contents instead of the top when the contents are too long to display within the screen. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.setCustomContentHeight (int height) "," Set the custom height in pixels for the display of this notification's content. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.setHintHideIcon (boolean hintHideIcon) "," Set a hint that this notification's icon should not be displayed. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.addPage (Notification page) "," Add an additional page of content to display with this notification. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.setCustomSizePreset (int sizePreset) "," Set the custom size preset for the display of this notification out of the available presets found in NotificationCompat.WearableExtender, e.g. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.addPages (List< Notification> pages) "," Add additional pages of content to display with this notification. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.addAction (NotificationCompat.Action action) "," Add a wearable action to this notification. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.getHintShowBackgroundOnly () "," Get a visual hint that only the background image of this notification should be displayed, and other semantic content should be hidden. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.setGravity (int gravity) "," Set the gravity that this notification should have within the available viewport space. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.getCustomContentHeight () "," Get the custom height in pixels for the display of this notification's content. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.getHintAvoidBackgroundClipping () "," Get a hint that this notification's background should not be clipped if possible, and should instead be resized to fully display on the screen, retaining the aspect ratio of the image. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.getDisplayIntent () "," Get the intent to launch inside of an activity view when displaying this notification. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.getHintScreenTimeout () "," Get the duration, in milliseconds, that the screen should remain on for when this notification is displayed. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.setContentIntentAvailableOffline (boolean contentIntentAvailableOffline) "," Set whether the content intent is available when the wearable device is not connected to a companion device. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.extend (NotificationCompat.Builder builder) "," Apply wearable extensions to a notification that is being built. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.getCustomSizePreset () "," Get the custom size preset for the display of this notification out of the available presets found in NotificationCompat.WearableExtender, e.g. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.clearPages () "," Clear all additional pages present on this builder. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.setContentIcon (int icon) "," Set an icon that goes with the content of this notification. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.getContentAction () "," Get the index of the notification action, if any, that was specified as being clickable with the content of this notification. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.addActions (List< NotificationCompat.Action> actions) "," Adds wearable actions to this notification. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.getPages () "," Get the array of additional pages of content for displaying this notification. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.setHintShowBackgroundOnly (boolean hintShowBackgroundOnly) "," Set a visual hint that only the background image of this notification should be displayed, and other semantic content should be hidden. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.setHintAvoidBackgroundClipping (boolean hintAvoidBackgroundClipping) "," Set a hint that this notification's background should not be clipped if possible, and should instead be resized to fully display on the screen, retaining the aspect ratio of the image. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.getContentIconGravity () "," Get the gravity that the content icon should have within the notification display. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.getGravity () "," Get the gravity that this notification should have within the available viewport space. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.getActions () "," Get the wearable actions present on this notification. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.getHintHideIcon () "," Get a hint that this notification's icon should not be displayed. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.setBackground (Bitmap background) "," Set a background image to be displayed behind the notification content. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.getBackground () "," Get a background image to be displayed behind the notification content. <br /><br />"
"android.support.v4.app.NotificationCompat.WearableExtender.clearActions () "," Clear all wearable actions present on this builder. <br /><br />"
"android.support.v4.app.NotificationCompatSideChannelService.cancelAll (String packageName) "," Handle the side-channelled cancelling of all notifications for a package. <br /><br />"
"android.support.v4.app.NotificationCompatSideChannelService.notify (String packageName, int id, String tag, Notification notification) "," Handle a side-channeled notification being posted. <br /><br />"
"android.support.v4.app.NotificationCompatSideChannelService.cancel (String packageName, int id, String tag) "," Handle a side-channelled notification being cancelled. <br /><br />"
"android.support.v4.app.NotificationCompatSideChannelService.onBind (Intent intent) "," Return the communication channel to the service. <br /><br />"
"android.support.v4.app.NotificationManagerCompat.notify (int id, Notification notification) "," Post a notification to be shown in the status bar, stream, etc. <br /><br />"
"android.support.v4.app.NotificationManagerCompat.getEnabledListenerPackages (Context context) "," Get the set of packages that have an enabled notification listener component within them. <br /><br />"
"android.support.v4.app.NotificationManagerCompat.cancel (String tag, int id) "," Cancel a previously shown notification. <br /><br />"
"android.support.v4.app.NotificationManagerCompat.cancel (int id) "," Cancel a previously shown notification. <br /><br />"
"android.support.v4.app.NotificationManagerCompat.cancelAll () "," Cancel all previously shown notifications. <br /><br />"
"android.support.v4.app.NotificationManagerCompat.notify (String tag, int id, Notification notification) "," Post a notification to be shown in the status bar, stream, etc. <br /><br />"
"android.support.v4.app.NotificationManagerCompat.from (Context context) "," Get a NotificationManagerCompat instance for a provided context. <br /><br />"
"android.support.v4.app.RemoteInput.Builder.getExtras () "," Get the metadata Bundle used by this Builder. <br /><br />"
"android.support.v4.app.RemoteInput.Builder.addExtras (Bundle extras) "," Merge additional metadata into this builder. <br /><br />"
"android.support.v4.app.RemoteInput.Builder.setLabel (CharSequence label) "," Set a label to be displayed to the user when collecting this input. <br /><br />"
"android.support.v4.app.RemoteInput.Builder.setChoices (CharSequence[] choices) "," Specifies choices available to the user to satisfy this input. <br /><br />"
"android.support.v4.app.RemoteInput.Builder.build () "," Combine all of the options that have been set and return a new RemoteInput object. <br /><br />"
"android.support.v4.app.RemoteInput.Builder.setAllowFreeFormInput (boolean allowFreeFormInput) "," Specifies whether the user can provide arbitrary values. <br /><br />"
"android.support.v4.app.RemoteInput.getExtras () "," Get additional metadata carried around with this remote input. <br /><br />"
"android.support.v4.app.RemoteInput.addResultsToIntent (RemoteInput[] remoteInputs, Intent intent, Bundle results) "," Populate an intent object with the results gathered from remote input. <br /><br />"
"android.support.v4.app.RemoteInput.getResultsFromIntent (Intent intent) "," Get the remote input results bundle from an intent. <br /><br />"
"android.support.v4.app.RemoteInput.getLabel () "," Get the label to display to users when collecting this input. <br /><br />"
"android.support.v4.app.RemoteInput.getAllowFreeFormInput () "," Get whether or not users can provide an arbitrary value for input. <br /><br />"
"android.support.v4.app.RemoteInput.getResultKey ()   Get the key that the result of this input will be set in from the Bundle returned by getResultsFromIntent (Intent) "," Get the key that the result of this input will be set in from the Bundle returned by getResultsFromIntent(Intent) when the PendingIntent is sent. <br /><br />"
"android.support.v4.app.RemoteInput.getChoices () "," Get possible input choices. <br /><br />"
"android.support.v4.app.ShareCompat.getCallingActivity (Activity calledActivity) "," Retrieve the ComponentName of the activity that launched calledActivity from a share intent. <br /><br />"
"android.support.v4.app.ShareCompat.getCallingPackage (Activity calledActivity) "," Retrieve the name of the package that launched calledActivity from a share intent. <br /><br />"
"android.support.v4.app.ShareCompat.configureMenuItem (Menu menu, int menuItemId, ShareCompat.IntentBuilder shareIntent) "," Configure a menu item to act as a sharing action. <br /><br />"
"android.support.v4.app.ShareCompat.configureMenuItem (MenuItem item, ShareCompat.IntentBuilder shareIntent) "," Configure a MenuItem to act as a sharing action. <br /><br />"
"android.support.v4.app.ShareCompat.IntentBuilder.addStream (Uri streamUri) "," Add a stream URI to the data that should be shared. <br /><br />"
"android.support.v4.app.ShareCompat.IntentBuilder.setHtmlText (String htmlText) "," Set an HTML string to be sent as part of the share. <br /><br />"
"android.support.v4.app.ShareCompat.IntentBuilder.addEmailBcc (String[] addresses) "," Add an array of email addresses to be used in the 'bcc' field of the final Intent. <br /><br />"
"android.support.v4.app.ShareCompat.IntentBuilder.getIntent () "," Retrieve the Intent as configured so far by the IntentBuilder. <br /><br />"
"android.support.v4.app.ShareCompat.IntentBuilder.setStream (Uri streamUri) "," Set a stream URI to the data that should be shared. <br /><br />"
"android.support.v4.app.ShareCompat.IntentBuilder.setText (CharSequence text) "," Set the literal text data to be sent as part of the share. <br /><br />"
"android.support.v4.app.ShareCompat.IntentBuilder.setChooserTitle (int resId) "," Set the title that will be used for the activity chooser for this share. <br /><br />"
"android.support.v4.app.ShareCompat.IntentBuilder.addEmailTo (String[] addresses) "," Add an array of email addresses to be used in the 'to' field of the final Intent. <br /><br />"
"android.support.v4.app.ShareCompat.IntentBuilder.setType (String mimeType) "," Set the type of data being shared <br /><br />"
"android.support.v4.app.ShareCompat.IntentBuilder.addEmailBcc (String address) "," Add an email address to be used in the 'bcc' field of the final Intent. <br /><br />"
"android.support.v4.app.ShareCompat.IntentBuilder.addEmailCc (String address) "," Add an email address to be used in the 'cc' field of the final Intent. <br /><br />"
"android.support.v4.app.ShareCompat.IntentBuilder.createChooserIntent () "," Create an Intent that will launch the standard Android activity chooser, allowing the user to pick what activity/app on the system should handle the share. <br /><br />"
"android.support.v4.app.ShareCompat.IntentBuilder.setEmailBcc (String[] addresses) "," Set an array of email addresses to BCC on this share. <br /><br />"
"android.support.v4.app.ShareCompat.IntentBuilder.addEmailCc (String[] addresses) "," Add an array of email addresses to be used in the 'cc' field of the final Intent. <br /><br />"
"android.support.v4.app.ShareCompat.IntentBuilder.from (Activity launchingActivity) "," Create a new IntentBuilder for launching a sharing action from launchingActivity. <br /><br />"
"android.support.v4.app.ShareCompat.IntentBuilder.setEmailCc (String[] addresses) "," Set an array of email addresses to CC on this share. <br /><br />"
"android.support.v4.app.ShareCompat.IntentBuilder.setEmailTo (String[] addresses) "," Set an array of email addresses as recipients of this share. <br /><br />"
"android.support.v4.app.ShareCompat.IntentBuilder.startChooser () "," Start a chooser activity for the current share intent. <br /><br />"
"android.support.v4.app.ShareCompat.IntentBuilder.setSubject (String subject) "," Set a subject heading for this share; useful for sharing via email. <br /><br />"
"android.support.v4.app.ShareCompat.IntentBuilder.addEmailTo (String address) "," Add an email address to be used in the 'to' field of the final Intent. <br /><br />"
"android.support.v4.app.ShareCompat.IntentBuilder.setChooserTitle (CharSequence title) "," Set the title that will be used for the activity chooser for this share. <br /><br />"
"android.support.v4.app.ShareCompat.IntentReader.isMultipleShare () "," Returns true if the activity this reader was obtained for was started with an ACTION_SEND_MULTIPLE intent. <br /><br />"
"android.support.v4.app.ShareCompat.IntentReader.getCallingApplicationIcon () "," Get the icon of the calling application as a Drawable if data about the calling package is available. <br /><br />"
"android.support.v4.app.ShareCompat.IntentReader.getEmailCc () "," Get an array of Strings, each an email address to CC on this share. <br /><br />"
"android.support.v4.app.ShareCompat.IntentReader.getCallingApplicationLabel ()   Get the human-readable label  (title) "," Get the human-readable label (title) of the calling application if data about the calling package is available. <br /><br />"
"android.support.v4.app.ShareCompat.IntentReader.getType () "," Get the mimetype of the data shared to this activity. <br /><br />"
"android.support.v4.app.ShareCompat.IntentReader.getStreamCount () "," Return the number of stream items shared. <br /><br />"
"android.support.v4.app.ShareCompat.IntentReader.isShareIntent () "," Returns true if the activity this reader was obtained for was started with an ACTION_SEND or ACTION_SEND_MULTIPLE sharing Intent. <br /><br />"
"android.support.v4.app.ShareCompat.IntentReader.getHtmlText () "," Get the styled HTML text shared with the target activity. <br /><br />"
"android.support.v4.app.ShareCompat.IntentReader.getStream () "," Get a URI referring to a data stream shared with the target activity. <br /><br />"
"android.support.v4.app.ShareCompat.IntentReader.getSubject () "," Get a subject heading for this share; useful when sharing via email. <br /><br />"
"android.support.v4.app.ShareCompat.IntentReader.getText () "," Get the literal text shared with the target activity. <br /><br />"
"android.support.v4.app.ShareCompat.IntentReader.getCallingPackage () "," Get the name of the package that invoked this sharing intent. <br /><br />"
"android.support.v4.app.ShareCompat.IntentReader.from (Activity activity) "," Get an IntentReader for parsing and interpreting the sharing intent used to start the given activity. <br /><br />"
"android.support.v4.app.ShareCompat.IntentReader.getCallingActivity () "," Get the ComponentName of the Activity that invoked this sharing intent. <br /><br />"
"android.support.v4.app.ShareCompat.IntentReader.getEmailBcc () "," Get an array of Strings, each an email address to BCC on this share. <br /><br />"
"android.support.v4.app.ShareCompat.IntentReader.getEmailTo () "," Get an array of Strings, each an email address to share to. <br /><br />"
"android.support.v4.app.ShareCompat.IntentReader.getStream (int index) "," Get the URI of a stream item shared with the target activity. <br /><br />"
"android.support.v4.app.ShareCompat.IntentReader.isSingleShare () "," Returns true if the activity this reader was obtained for was started with an ACTION_SEND intent and contains a single shared item. <br /><br />"
"android.support.v4.app.ShareCompat.IntentReader.getCallingActivityIcon () "," Get the icon of the calling activity as a Drawable if data about the calling activity is available. <br /><br />"
"android.support.v4.app.SharedElementCallback.onMapSharedElements (List< String> names, Map< String,  View> sharedElements) "," Lets the SharedElementCallback adjust the mapping of shared element names to Views. <br /><br />"
"android.support.v4.app.SharedElementCallback.onCreateSnapshotView (Context context, Parcelable snapshot)   Reconstitutes a snapshot View from a Parcelable returned in onCaptureSharedElementSnapshot (android.view.View, android.graphics.Matrix, android.graphics.RectF) to be used in onSharedElementStart (java.util.List, java.util.List, java.util.List) and onSharedElementEnd (java.util.List, java.util.List, java.util.List) "," Reconstitutes a snapshot View from a Parcelable returned in onCaptureSharedElementSnapshot(android.view.View, android.graphics.Matrix, android.graphics.RectF) to be used in onSharedElementStart(java.util.List, java.util.List, java.util.List) and onSharedElementEnd(java.util.List, java.util.List, java.util.List). <br /><br />"
"android.support.v4.app.SharedElementCallback.onRejectSharedElements (List< View> rejectedSharedElements)   Called after onMapSharedElements (java.util.List, java.util.Map) "," Called after onMapSharedElements(java.util.List, java.util.Map) when transferring shared elements in. <br /><br />"
"android.support.v4.app.SharedElementCallback.onSharedElementEnd (List< String> sharedElementNames, List< View> sharedElements, List< View> sharedElementSnapshots) "," Called after the end state is set for the shared element, but before the end state is captured by the shared element transition. <br /><br />"
"android.support.v4.app.SharedElementCallback.onSharedElementStart (List< String> sharedElementNames, List< View> sharedElements, List< View> sharedElementSnapshots) "," Called immediately after the start state is set for the shared element. <br /><br />"
"android.support.v4.app.SharedElementCallback.onCaptureSharedElementSnapshot (View sharedElement, Matrix viewToGlobalMatrix, RectF screenBounds)   Creates a snapshot of a shared element to be used by the remote Activity and reconstituted with onCreateSnapshotView (android.content.Context, android.os.Parcelable) "," Creates a snapshot of a shared element to be used by the remote Activity and reconstituted with onCreateSnapshotView(android.content.Context, android.os.Parcelable). <br /><br />"
"android.support.v4.app.TaskStackBuilder.SupportParentable.getSupportParentActivityIntent () "," no description <br /><br />"
"android.support.v4.content.AsyncTaskLoader<D>.cancelLoad () "," Attempt to cancel the current load task. <br /><br />"
"android.support.v4.content.AsyncTaskLoader<D>.setUpdateThrottle (long delayMS) "," Set amount to throttle updates by. <br /><br />"
"android.support.v4.content.AsyncTaskLoader<D>.onCanceled (D data) "," Called if the task was canceled before it was completed. <br /><br />"
"android.support.v4.content.AsyncTaskLoader<D>.loadInBackground () "," no description <br /><br />"
"android.support.v4.content.AsyncTaskLoader<D>.dump (String prefix, FileDescriptor fd, PrintWriter writer, String[] args) "," Print the Loader's state into the given stream. <br /><br />"
"android.support.v4.content.ContextCompat.getObbDirs (Context context)   Returns absolute paths to application-specific directories on all external storage devices where the application's OBB files  (if there are any) "," Returns absolute paths to application-specific directories on all external storage devices where the application's OBB files (if there are any) can be found. <br /><br />"
"android.support.v4.content.ContextCompat.startActivities (Context context, Intent[] intents) "," Start a set of activities as a synthesized task stack, if able. <br /><br />"
"android.support.v4.content.ContextCompat.getExternalCacheDirs (Context context) "," Returns absolute paths to application-specific directories on all external storage devices where the application can place cache files it owns. <br /><br />"
"android.support.v4.content.ContextCompat.getCodeCacheDir (Context context) "," Returns the absolute path to the application specific cache directory on the filesystem designed for storing cached code. <br /><br />"
"android.support.v4.content.ContextCompat.getDrawable (Context context, int id) "," Return a drawable object associated with a particular resource ID. <br /><br />"
"android.support.v4.content.ContextCompat.startActivities (Context context, Intent[] intents, Bundle options) "," Start a set of activities as a synthesized task stack, if able. <br /><br />"
"android.support.v4.content.ContextCompat.getNoBackupFilesDir (Context context)   Returns the absolute path to the directory on the filesystem similar to getFilesDir () "," Returns the absolute path to the directory on the filesystem similar to getFilesDir(). <br /><br />"
"android.support.v4.content.ContextCompat.getExternalFilesDirs (Context context, String type) "," Returns absolute paths to application-specific directories on all external storage devices where the application can place persistent files it owns. <br /><br />"
"android.support.v4.content.CursorLoader.setSelection (String selection) "," no description <br /><br />"
"android.support.v4.content.CursorLoader.loadInBackground () "," no description <br /><br />"
"android.support.v4.content.CursorLoader.setUri (Uri uri) "," no description <br /><br />"
"android.support.v4.content.CursorLoader.getSortOrder () "," no description <br /><br />"
"android.support.v4.content.CursorLoader.setProjection (String[] projection) "," no description <br /><br />"
"android.support.v4.content.CursorLoader.deliverResult (Cursor cursor) "," Sends the result of the load to the registered listener. <br /><br />"
"android.support.v4.content.CursorLoader.setSortOrder (String sortOrder) "," no description <br /><br />"
"android.support.v4.content.CursorLoader.getSelectionArgs () "," no description <br /><br />"
"android.support.v4.content.CursorLoader.getSelection () "," no description <br /><br />"
"android.support.v4.content.CursorLoader.setSelectionArgs (String[] selectionArgs) "," no description <br /><br />"
"android.support.v4.content.CursorLoader.onCanceled (Cursor cursor) "," Called if the task was canceled before it was completed. <br /><br />"
"android.support.v4.content.CursorLoader.getProjection () "," no description <br /><br />"
"android.support.v4.content.CursorLoader.dump (String prefix, FileDescriptor fd, PrintWriter writer, String[] args) "," Print the Loader's state into the given stream. <br /><br />"
"android.support.v4.content.CursorLoader.getUri () "," no description <br /><br />"
"android.support.v4.content.FileProvider.onCreate () "," The default FileProvider implementation does not need to be initialized. <br /><br />"
"android.support.v4.content.FileProvider.openFile (Uri uri, String mode) "," By default, FileProvider automatically returns the ParcelFileDescriptor for a file associated with a content:// Uri. <br /><br />"
"android.support.v4.content.FileProvider.attachInfo (Context context, ProviderInfo info) "," After the FileProvider is instantiated, this method is called to provide the system with information about the provider. <br /><br />"
"android.support.v4.content.FileProvider.getUriForFile (Context context, String authority, File file) "," Return a content URI for a given File. <br /><br />"
"android.support.v4.content.FileProvider.update (Uri uri, ContentValues values, String selection, String[] selectionArgs) "," By default, this method throws an UnsupportedOperationException. <br /><br />"
"android.support.v4.content.FileProvider.query (Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder)   Use a content URI returned by getUriForFile () "," Use a content URI returned by getUriForFile() to get information about a file managed by the FileProvider. <br /><br />"
"android.support.v4.content.FileProvider.insert (Uri uri, ContentValues values) "," By default, this method throws an UnsupportedOperationException. <br /><br />"
"android.support.v4.content.FileProvider.delete (Uri uri, String selection, String[] selectionArgs)   Deletes the file associated with the specified content URI, as returned by getUriForFile () "," Deletes the file associated with the specified content URI, as returned by getUriForFile(). <br /><br />"
"android.support.v4.content.FileProvider.getType (Uri uri)   Returns the MIME type of a content URI returned by getUriForFile () "," Returns the MIME type of a content URI returned by getUriForFile(). <br /><br />"
"android.support.v4.content.IntentCompat.makeRestartActivityTask (ComponentName mainActivity) "," Make an Intent that can be used to re-launch an application's task in its base state. <br /><br />"
"android.support.v4.content.IntentCompat.makeMainSelectorActivity (String selectorAction, String selectorCategory) "," Make an Intent for the main activity of an application, without specifying a specific activity to run but giving a selector to find the activity. <br /><br />"
"android.support.v4.content.IntentCompat.makeMainActivity (ComponentName mainActivity)   Create an intent to launch the main  (root) "," Create an intent to launch the main (root) activity of a task. <br /><br />"
"android.support.v4.content.Loader.ForceLoadContentObserver.deliverSelfNotifications () "," Returns true if this observer is interested receiving self-change notifications. <br /><br />"
"android.support.v4.content.Loader.ForceLoadContentObserver.onChange (boolean selfChange) "," This method is called when a content change occurs. <br /><br />"
"android.support.v4.content.Loader<D>.isStarted () "," Return whether this load has been started. <br /><br />"
"android.support.v4.content.Loader<D>.rollbackContentChanged ()   Report that you have abandoned the processing of a content change that was returned by takeContentChanged () "," Report that you have abandoned the processing of a content change that was returned by takeContentChanged() and would like to rollback to the state where there is again a pending content change. <br /><br />"
"android.support.v4.content.Loader<D>.deliverResult (D data) "," Sends the result of the load to the registered listener. <br /><br />"
"android.support.v4.content.Loader<D>.isAbandoned () "," Return whether this loader has been abandoned. <br /><br />"
"android.support.v4.content.Loader<D>.commitContentChanged ()   Commit that you have actually fully processed a content change that was returned by takeContentChanged () "," Commit that you have actually fully processed a content change that was returned by takeContentChanged(). <br /><br />"
"android.support.v4.content.Loader<D>.isReset () "," Return whether this load has been reset. <br /><br />"
"android.support.v4.content.Loader<D>.registerListener (int id, OnLoadCompleteListener<D> listener) "," Registers a class that will receive callbacks when a load is complete. <br /><br />"
"android.support.v4.content.Loader<D>.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v4.content.Loader<D>.dataToString (D data) "," For debugging, converts an instance of the Loader's data class to a string that can be printed. <br /><br />"
"android.support.v4.content.Loader<D>.takeContentChanged () "," Take the current flag indicating whether the loader's content had changed while it was stopped. <br /><br />"
"android.support.v4.content.Loader<D>.onContentChanged () "," Called when Loader.ForceLoadContentObserver detects a change. <br /><br />"
"android.support.v4.content.Loader<D>.abandon () "," Tell the Loader that it is being abandoned. <br /><br />"
"android.support.v4.content.Loader<D>.getId () "," no description <br /><br />"
"android.support.v4.content.Loader<D>.stopLoading ()   Stops delivery of updates until the next time startLoading () "," Stops delivery of updates until the next time startLoading() is called. <br /><br />"
"android.support.v4.content.Loader<D>.forceLoad () "," Force an asynchronous load. <br /><br />"
"android.support.v4.content.Loader<D>.reset () "," Resets the state of the Loader. <br /><br />"
"android.support.v4.content.Loader<D>.startLoading () "," Starts an asynchronous load of the Loader's data. <br /><br />"
"android.support.v4.content.Loader<D>.unregisterListener (OnLoadCompleteListener<D> listener)   Remove a listener that was previously added with registerListener (int, Loader.OnLoadCompleteListener  ) "," Remove a listener that was previously added with registerListener(int, Loader.OnLoadCompleteListener  ) . <br /><br />"
"android.support.v4.content.Loader<D>.dump (String prefix, FileDescriptor fd, PrintWriter writer, String[] args) "," Print the Loader's state into the given stream. <br /><br />"
"android.support.v4.content.Loader<D>.getContext () "," no description <br /><br />"
"android.support.v4.content.Loader.OnLoadCompleteListener<D>.onLoadComplete (Loader<D> loader, D data) "," Called on the thread that created the Loader when the load is complete. <br /><br />"
"android.support.v4.content.LocalBroadcastManager.getInstance (Context context) "," no description <br /><br />"
"android.support.v4.content.LocalBroadcastManager.unregisterReceiver (BroadcastReceiver receiver) "," Unregister a previously registered BroadcastReceiver. <br /><br />"
"android.support.v4.content.LocalBroadcastManager.registerReceiver (BroadcastReceiver receiver, IntentFilter filter) "," Register a receive for any local broadcasts that match the given IntentFilter. <br /><br />"
"android.support.v4.content.LocalBroadcastManager.sendBroadcast (Intent intent) "," Broadcast the given intent to all interested BroadcastReceivers. <br /><br />"
"android.support.v4.content.LocalBroadcastManager.sendBroadcastSync (Intent intent)   Like sendBroadcast (Intent) "," Like sendBroadcast(Intent), but if there are any receivers for the Intent this function will block and immediately dispatch them before returning. <br /><br />"
"android.support.v4.content.res.ResourcesCompat.getDrawableForDensity (Resources res, int id, int density, Resources.Theme theme) "," Return a drawable object associated with a particular resource ID for the given screen density in DPI and styled for the specified theme. <br /><br />"
"android.support.v4.content.res.ResourcesCompat.getDrawable (Resources res, int id, Resources.Theme theme) "," Return a drawable object associated with a particular resource ID and styled for the specified theme. <br /><br />"
"android.support.v4.content.WakefulBroadcastReceiver.startWakefulService (Context context, Intent intent)   Do a "," Do a Context.startService, but holding a wake lock while the service starts. <br /><br />"
"android.support.v4.content.WakefulBroadcastReceiver.completeWakefulIntent (Intent intent)   Finish the execution from a previous startWakefulService (Context, Intent) "," Finish the execution from a previous startWakefulService(Context, Intent). <br /><br />"
"android.support.v4.database.DatabaseUtilsCompat.concatenateWhere (String a, String b) "," Concatenates two SQL WHERE clauses, handling empty or null values. <br /><br />"
"android.support.v4.database.DatabaseUtilsCompat.appendSelectionArgs (String[] originalValues, String[] newValues) "," Appends one set of selection args to another. <br /><br />"
"android.support.v4.graphics.BitmapCompat.getAllocationByteCount (Bitmap bitmap) "," Returns the size of the allocated memory used to store this bitmap's pixels in a backwards compatible way. <br /><br />"
"android.support.v4.graphics.BitmapCompat.hasMipMap (Bitmap bitmap) "," no description <br /><br />"
"android.support.v4.graphics.BitmapCompat.setHasMipMap (Bitmap bitmap, boolean hasMipMap) "," no description <br /><br />"
"android.support.v4.graphics.ColorUtils.compositeColors (int foreground, int background) "," Composite two potentially translucent colors over each other and returns the result. <br /><br />"
"android.support.v4.graphics.ColorUtils.HSLToColor (float[] hsl)   Convert HSL  (hue-saturation-lightness) "," Convert HSL (hue-saturation-lightness) components to a RGB color. <br /><br />"
"android.support.v4.graphics.ColorUtils.setAlphaComponent (int color, int alpha) "," Set the alpha component of color to be alpha. <br /><br />"
"android.support.v4.graphics.ColorUtils.RGBToHSL (int r, int g, int b, float[] hsl)   Convert RGB components to HSL  (hue-saturation-lightness) "," Convert RGB components to HSL (hue-saturation-lightness). <br /><br />"
"android.support.v4.graphics.ColorUtils.calculateMinimumAlpha (int foreground, int background, float minContrastRatio) "," Calculates the minimum alpha value which can be applied to foreground so that would have a contrast value of at least minContrastRatio when compared to background. <br /><br />"
"android.support.v4.graphics.ColorUtils.colorToHSL (int color, float[] hsl)   Convert the ARGB color to its HSL  (hue-saturation-lightness) "," Convert the ARGB color to its HSL (hue-saturation-lightness) components. <br /><br />"
"android.support.v4.graphics.ColorUtils.calculateLuminance (int color) "," Returns the luminance of a color. <br /><br />"
"android.support.v4.graphics.ColorUtils.calculateContrast (int foreground, int background) "," Returns the contrast ratio between foreground and background. <br /><br />"
"android.support.v4.graphics.drawable.DrawableCompat.setTintMode (Drawable drawable, PorterDuff.Mode tintMode) "," Specifies a tint blending mode for drawable. <br /><br />"
"android.support.v4.graphics.drawable.DrawableCompat.setTintList (Drawable drawable, ColorStateList tint) "," Specifies a tint for drawable as a color state list. <br /><br />"
"android.support.v4.graphics.drawable.DrawableCompat.unwrap (Drawable drawable)   Unwrap drawable if it is the result of a call to wrap (Drawable) "," Unwrap drawable if it is the result of a call to wrap(Drawable). <br /><br />"
"android.support.v4.graphics.drawable.DrawableCompat.setTint (Drawable drawable, int tint) "," Specifies a tint for drawable. <br /><br />"
"android.support.v4.graphics.drawable.DrawableCompat.jumpToCurrentState (Drawable drawable)   Call Drawable.jumpToCurrentState () "," Call Drawable.jumpToCurrentState(). <br /><br />"
"android.support.v4.graphics.drawable.DrawableCompat.wrap (Drawable drawable) "," Potentially wrap drawable so that it may be used for tinting across the different API levels, via the tinting methods in this class. <br /><br />"
"android.support.v4.graphics.drawable.DrawableCompat.setHotspotBounds (Drawable drawable, int left, int top, int right, int bottom) "," Sets the bounds to which the hotspot is constrained, if they should be different from the drawable bounds. <br /><br />"
"android.support.v4.graphics.drawable.DrawableCompat.isAutoMirrored (Drawable drawable) "," Tells if this Drawable will be automatically mirrored when its layout direction is RTL right-to-left. <br /><br />"
"android.support.v4.graphics.drawable.DrawableCompat.setHotspot (Drawable drawable, float x, float y) "," Specifies the hotspot's location within the drawable. <br /><br />"
"android.support.v4.graphics.drawable.DrawableCompat.setAutoMirrored (Drawable drawable, boolean mirrored)   Set whether this Drawable is automatically mirrored when its layout direction is RTL  (right-to left) "," Set whether this Drawable is automatically mirrored when its layout direction is RTL (right-to left). <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.setColorFilter (ColorFilter cf) "," Specify an optional color filter for the drawable. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.setAntiAlias (boolean aa) "," Enables or disables anti-aliasing for this drawable. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.getOpacity () "," Return the opacity/transparency of this Drawable. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.getIntrinsicWidth () "," Return the intrinsic width of the underlying drawable object. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.setAlpha (int alpha) "," Specify an alpha value for the drawable. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.setTargetDensity (int density) "," Set the density at which this drawable will be rendered. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.setCornerRadius (float cornerRadius) "," Sets the corner radius to be applied when drawing the bitmap. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.getIntrinsicHeight () "," Return the intrinsic height of the underlying drawable object. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.hasMipMap () "," Indicates whether the mipmap hint is enabled on this drawable's bitmap. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.getBitmap () "," Returns the bitmap used by this drawable to render. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.getCornerRadius () "," no description <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.getPaint () "," Returns the paint used to render this drawable. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.hasAntiAlias () "," Indicates whether anti-aliasing is enabled for this drawable. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.setDither (boolean dither) "," Set to true to have the drawable dither its colors when drawn to a device with fewer than 8-bits per color component. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.setGravity (int gravity) "," Set the gravity used to position/stretch the bitmap within its bounds. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.setMipMap (boolean mipMap) "," Enables or disables the mipmap hint for this drawable's bitmap. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.getGravity () "," Get the gravity used to position/stretch the bitmap within its bounds. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.draw (Canvas canvas)   Draw in its bounds  (set via setBounds) respecting optional effects such as alpha  (set via setAlpha) and color filter  (set via setColorFilter) "," Draw in its bounds (set via setBounds) respecting optional effects such as alpha (set via setAlpha) and color filter (set via setColorFilter). <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.getColorFilter () "," Returns the current color filter, or null if none set. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.setTargetDensity (Canvas canvas) "," Set the density scale at which this drawable will be rendered. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.setTargetDensity (DisplayMetrics metrics) "," Set the density scale at which this drawable will be rendered. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.getAlpha () "," Gets the current alpha value for the drawable. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawable.setFilterBitmap (boolean filter)   Set to true to have the drawable filter its bitmap when scaled or rotated  (for drawables that use bitmaps) "," Set to true to have the drawable filter its bitmap when scaled or rotated (for drawables that use bitmaps). <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory.create (Resources res, InputStream is) "," Returns a new drawable, creating it by decoding a bitmap from the given input stream. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory.create (Resources res, Bitmap bitmap) "," Returns a new drawable by creating it from a bitmap, setting initial target density based on the display metrics of the resources. <br /><br />"
"android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory.create (Resources res, String filepath) "," Returns a new drawable, creating it by opening a given file path and decoding the bitmap. <br /><br />"
"android.support.v4.hardware.display.DisplayManagerCompat.getDisplays () "," Gets all currently valid logical displays. <br /><br />"
"android.support.v4.hardware.display.DisplayManagerCompat.getInstance (Context context) "," Gets an instance of the display manager given the context. <br /><br />"
"android.support.v4.hardware.display.DisplayManagerCompat.getDisplays (String category) "," Gets all currently valid logical displays of the specified category. <br /><br />"
"android.support.v4.hardware.display.DisplayManagerCompat.getDisplay (int displayId) "," Gets information about a logical display. <br /><br />"
"android.support.v4.media.MediaDescriptionCompat.Builder.setExtras (Bundle extras) "," Sets a bundle of extras. <br /><br />"
"android.support.v4.media.MediaDescriptionCompat.Builder.setDescription (CharSequence description) "," Sets the description. <br /><br />"
"android.support.v4.media.MediaDescriptionCompat.Builder.setIconUri (Uri iconUri) "," Sets the icon uri. <br /><br />"
"android.support.v4.media.MediaDescriptionCompat.Builder.build () "," Creates a MediaDescriptionCompat instance with the specified fields. <br /><br />"
"android.support.v4.media.MediaDescriptionCompat.Builder.setTitle (CharSequence title) "," Sets the title. <br /><br />"
"android.support.v4.media.MediaDescriptionCompat.Builder.setSubtitle (CharSequence subtitle) "," Sets the subtitle. <br /><br />"
"android.support.v4.media.MediaDescriptionCompat.Builder.setMediaId (String mediaId) "," Sets the media id. <br /><br />"
"android.support.v4.media.MediaDescriptionCompat.Builder.setIconBitmap (Bitmap icon) "," Sets the icon. <br /><br />"
"android.support.v4.media.MediaDescriptionCompat.getMediaDescription () "," Gets the underlying framework MediaDescription object. <br /><br />"
"android.support.v4.media.MediaDescriptionCompat.getExtras () "," Returns any extras that were added to the description. <br /><br />"
"android.support.v4.media.MediaDescriptionCompat.getDescription () "," Returns a description suitable for display or null. <br /><br />"
"android.support.v4.media.MediaDescriptionCompat.getIconBitmap () "," Returns a bitmap icon suitable for display or null. <br /><br />"
"android.support.v4.media.MediaDescriptionCompat.fromMediaDescription (Object descriptionObj) "," Creates an instance from a framework MediaDescription object. <br /><br />"
"android.support.v4.media.MediaDescriptionCompat.getMediaId () "," Returns the media id or null. <br /><br />"
"android.support.v4.media.MediaDescriptionCompat.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.support.v4.media.MediaDescriptionCompat.getTitle () "," Returns a title suitable for display or null. <br /><br />"
"android.support.v4.media.MediaDescriptionCompat.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.support.v4.media.MediaDescriptionCompat.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v4.media.MediaDescriptionCompat.getSubtitle () "," Returns a subtitle suitable for display or null. <br /><br />"
"android.support.v4.media.MediaDescriptionCompat.getIconUri () "," Returns a Uri for an icon suitable for display or null. <br /><br />"
"android.support.v4.media.MediaDescriptionCompatApi21.Builder.setTitle (Object builderObj, CharSequence title) "," no description <br /><br />"
"android.support.v4.media.MediaDescriptionCompatApi21.Builder.setDescription (Object builderObj, CharSequence description) "," no description <br /><br />"
"android.support.v4.media.MediaDescriptionCompatApi21.Builder.setSubtitle (Object builderObj, CharSequence subtitle) "," no description <br /><br />"
"android.support.v4.media.MediaDescriptionCompatApi21.Builder.newInstance () "," no description <br /><br />"
"android.support.v4.media.MediaDescriptionCompatApi21.Builder.build (Object builderObj) "," no description <br /><br />"
"android.support.v4.media.MediaDescriptionCompatApi21.Builder.setIconUri (Object builderObj, Uri iconUri) "," no description <br /><br />"
"android.support.v4.media.MediaDescriptionCompatApi21.Builder.setIconBitmap (Object builderObj, Bitmap iconBitmap) "," no description <br /><br />"
"android.support.v4.media.MediaDescriptionCompatApi21.Builder.setExtras (Object builderObj, Bundle extras) "," no description <br /><br />"
"android.support.v4.media.MediaDescriptionCompatApi21.Builder.setMediaId (Object builderObj, String mediaId) "," no description <br /><br />"
"android.support.v4.media.MediaDescriptionCompatApi21.getIconUri (Object descriptionObj) "," no description <br /><br />"
"android.support.v4.media.MediaDescriptionCompatApi21.getSubtitle (Object descriptionObj) "," no description <br /><br />"
"android.support.v4.media.MediaDescriptionCompatApi21.getTitle (Object descriptionObj) "," no description <br /><br />"
"android.support.v4.media.MediaDescriptionCompatApi21.writeToParcel (Object descriptionObj, Parcel dest, int flags) "," no description <br /><br />"
"android.support.v4.media.MediaDescriptionCompatApi21.getIconBitmap (Object descriptionObj) "," no description <br /><br />"
"android.support.v4.media.MediaDescriptionCompatApi21.fromParcel (Parcel in) "," no description <br /><br />"
"android.support.v4.media.MediaDescriptionCompatApi21.getExtras (Object descriptionObj) "," no description <br /><br />"
"android.support.v4.media.MediaDescriptionCompatApi21.getMediaId (Object descriptionObj) "," no description <br /><br />"
"android.support.v4.media.MediaDescriptionCompatApi21.getDescription (Object descriptionObj) "," no description <br /><br />"
"android.support.v4.media.MediaMetadataCompat.Builder.putString (String key, String value) "," Put a String value into the metadata. <br /><br />"
"android.support.v4.media.MediaMetadataCompat.Builder.putLong (String key, long value) "," Put a long value into the metadata. <br /><br />"
"android.support.v4.media.MediaMetadataCompat.Builder.putBitmap (String key, Bitmap value) "," Put a Bitmap into the metadata. <br /><br />"
"android.support.v4.media.MediaMetadataCompat.Builder.build () "," Creates a MediaMetadataCompat instance with the specified fields. <br /><br />"
"android.support.v4.media.MediaMetadataCompat.Builder.putText (String key, CharSequence value) "," Put a CharSequence value into the metadata. <br /><br />"
"android.support.v4.media.MediaMetadataCompat.Builder.putRating (String key, RatingCompat value) "," Put a RatingCompat into the metadata. <br /><br />"
"android.support.v4.media.MediaMetadataCompat.getRating (String key) "," Return a RatingCompat for the given key or null if no rating exists for the given key. <br /><br />"
"android.support.v4.media.MediaMetadataCompat.getString (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.support.v4.media.MediaMetadataCompat.getBundle () "," Gets the bundle backing the metadata object. <br /><br />"
"android.support.v4.media.MediaMetadataCompat.getMediaMetadata () "," Gets the underlying framework MediaMetadata object. <br /><br />"
"android.support.v4.media.MediaMetadataCompat.getBitmap (String key) "," Return a Bitmap for the given key or null if no bitmap exists for the given key. <br /><br />"
"android.support.v4.media.MediaMetadataCompat.size () "," Get the number of fields in this metadata. <br /><br />"
"android.support.v4.media.MediaMetadataCompat.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.support.v4.media.MediaMetadataCompat.getDescription () "," Returns a simple description of this metadata for display purposes. <br /><br />"
"android.support.v4.media.MediaMetadataCompat.getText (String key) "," Returns the value associated with the given key, or null if no mapping of the desired type exists for the given key or a null value is explicitly associated with the key. <br /><br />"
"android.support.v4.media.MediaMetadataCompat.containsKey (String key) "," Returns true if the given key is contained in the metadata <br /><br />"
"android.support.v4.media.MediaMetadataCompat.getLong (String key) "," Returns the value associated with the given key, or 0L if no long exists for the given key. <br /><br />"
"android.support.v4.media.MediaMetadataCompat.keySet () "," Returns a Set containing the Strings used as keys in this metadata. <br /><br />"
"android.support.v4.media.MediaMetadataCompat.fromMediaMetadata (Object metadataObj) "," Creates an instance from a framework MediaMetadata object. <br /><br />"
"android.support.v4.media.MediaMetadataCompat.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.support.v4.media.RatingCompat.hasHeart () "," Return whether the rating is 'heart selected'. <br /><br />"
"android.support.v4.media.RatingCompat.newHeartRating (boolean hasHeart) "," Return a Rating instance with a heart-based rating. <br /><br />"
"android.support.v4.media.RatingCompat.newStarRating (int starRatingStyle, float starRating) "," Return a Rating instance with a star-based rating. <br /><br />"
"android.support.v4.media.RatingCompat.getRating () "," Gets the underlying framework Rating object. <br /><br />"
"android.support.v4.media.RatingCompat.isRated () "," Return whether there is a rating value available. <br /><br />"
"android.support.v4.media.RatingCompat.newPercentageRating (float percent) "," Return a Rating instance with a percentage-based rating. <br /><br />"
"android.support.v4.media.RatingCompat.newUnratedRating (int ratingStyle) "," Return a Rating instance with no rating. <br /><br />"
"android.support.v4.media.RatingCompat.fromRating (Object ratingObj) "," Creates an instance from a framework Rating object. <br /><br />"
"android.support.v4.media.RatingCompat.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.support.v4.media.RatingCompat.newThumbRating (boolean thumbIsUp) "," Return a Rating instance with a thumb-based rating. <br /><br />"
"android.support.v4.media.RatingCompat.getRatingStyle () "," Return the rating style. <br /><br />"
"android.support.v4.media.RatingCompat.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v4.media.RatingCompat.getPercentRating () "," Return the percentage-based rating value. <br /><br />"
"android.support.v4.media.RatingCompat.getStarRating () "," Return the star-based rating value. <br /><br />"
"android.support.v4.media.RatingCompat.isThumbUp () "," Return whether the rating is 'thumb up'. <br /><br />"
"android.support.v4.media.RatingCompat.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.Callback.onMetadataChanged (MediaMetadataCompat metadata) "," Override to handle changes to the current metadata. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.Callback.onAudioInfoChanged (MediaControllerCompat.PlaybackInfo info) "," Override to handle changes to the audio info. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.Callback.onSessionDestroyed () "," Override to handle the session being destroyed. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.Callback.onQueueTitleChanged (CharSequence title) "," Override to handle changes to the queue title. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.Callback.binderDied () "," no description <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.Callback.onQueueChanged (List< MediaSessionCompat.QueueItem> queue) "," Override to handle changes to items in the queue. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.Callback.onExtrasChanged (Bundle extras) "," Override to handle chagnes to the MediaSessionCompat extras. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.Callback.onPlaybackStateChanged (PlaybackStateCompat state) "," Override to handle changes in playback state. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.Callback.onSessionEvent (String event, Bundle extras) "," Override to handle custom events sent by the session owner without a specified interface. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.getSessionToken () "," Get the token for the session this controller is connected to. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.getPackageName () "," Get the session owner's package name. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.getSessionActivity () "," Get an intent for launching UI associated with this session if one exists. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.getFlags () "," Get the flags for this session. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.registerCallback (MediaControllerCompat.Callback callback, Handler handler) "," Adds a callback to receive updates from the session. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.getTransportControls () "," Get a MediaControllerCompat.TransportControls instance for this session. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.getMediaController () "," Gets the underlying framework MediaController object. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.getExtras () "," Get the extras for this session. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.unregisterCallback (MediaControllerCompat.Callback callback) "," Stop receiving updates on the specified callback. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.dispatchMediaButtonEvent (KeyEvent keyEvent) "," Send the specified media button event to the session. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.registerCallback (MediaControllerCompat.Callback callback) "," Adds a callback to receive updates from the Session. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.getMetadata () "," Get the current metadata for this session. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.getQueue () "," Get the current play queue for this session if one is set. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.getRatingType () "," Get the rating type supported by the session. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.setVolumeTo (int value, int flags) "," Set the volume of the output this session is playing on. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.sendCommand (String command, Bundle params, ResultReceiver cb) "," Sends a generic command to the session. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.getPlaybackState () "," Get the current playback state for this session. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.getQueueTitle () "," Get the queue title for this session. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.adjustVolume (int direction, int flags) "," Adjust the volume of the output this session is playing on. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.getPlaybackInfo () "," Get the current playback info for this session. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.PlaybackInfo.getAudioStream () "," Get the stream this is currently controlling volume on. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.PlaybackInfo.getVolumeControl () "," Get the type of volume control that can be used. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.PlaybackInfo.getPlaybackType () "," Get the type of volume handling, either local or remote. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.PlaybackInfo.getMaxVolume () "," Get the maximum volume that may be set for this session. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.PlaybackInfo.getCurrentVolume () "," Get the current volume for this session. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.TransportControls.skipToPrevious () "," Skip to the previous item. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.TransportControls.rewind () "," Start rewinding. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.TransportControls.stop () "," Request that the player stop its playback; it may clear its state in whatever way is appropriate. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.TransportControls.sendCustomAction (String action, Bundle args) "," Send the id and args from a custom action for the MediaSessionCompat to perform. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.TransportControls.playFromMediaId (String mediaId, Bundle extras) "," Request that the player start playback for a specific Uri. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.TransportControls.seekTo (long pos) "," Move to a new location in the media stream. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.TransportControls.fastForward () "," Start fast forwarding. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.TransportControls.sendCustomAction (PlaybackStateCompat.CustomAction customAction, Bundle args) "," Send a custom action for the MediaSessionCompat to perform. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.TransportControls.skipToNext () "," Skip to the next item. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.TransportControls.playFromSearch (String query, Bundle extras) "," Request that the player start playback for a specific search query. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.TransportControls.pause () "," Request that the player pause its playback and stay at its current position. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.TransportControls.skipToQueueItem (long id) "," Play an item with a specific id in the play queue. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.TransportControls.setRating (RatingCompat rating) "," Rate the current content. <br /><br />"
"android.support.v4.media.session.MediaControllerCompat.TransportControls.play () "," Request that the player start its playback at its current position. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.Callback.onCustomAction (String action, Bundle extras) "," Called when a MediaControllerCompat wants a PlaybackStateCompat.CustomAction to be performed. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.Callback.onSkipToNext () "," Override to handle requests to skip to the next media item. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.Callback.onPlayFromSearch (String query, Bundle extras) "," Override to handle requests to begin playback from a search query. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.Callback.onPause () "," Override to handle requests to pause playback. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.Callback.onPlay () "," Override to handle requests to begin playback. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.Callback.onFastForward () "," Override to handle requests to fast forward. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.Callback.onRewind () "," Override to handle requests to rewind. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.Callback.onCommand (String command, Bundle extras, ResultReceiver cb) "," Called when a controller has sent a custom command to this session. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.Callback.onMediaButtonEvent (Intent mediaButtonEvent) "," Override to handle media button events. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.Callback.onSetRating (RatingCompat rating) "," Override to handle the item being rated. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.Callback.onStop () "," Override to handle requests to stop playback. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.Callback.onSeekTo (long pos) "," Override to handle requests to seek to a specific position in ms. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.Callback.onSkipToQueueItem (long id) "," Override to handle requests to play an item with a given id from the play queue. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.Callback.onPlayFromMediaId (String mediaId, Bundle extras) "," Override to handle requests to play a specific mediaId that was provided by your app. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.Callback.onSkipToPrevious () "," Override to handle requests to skip to the previous media item. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.getSessionToken () "," Retrieve a token object that can be used by apps to create a MediaControllerCompat for interacting with this session. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.setSessionActivity (PendingIntent pi) "," Set an intent for launching UI for this Session. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.setCallback (MediaSessionCompat.Callback callback) "," Add a callback to receive updates on for the MediaSession. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.setPlaybackToRemote (VolumeProviderCompat volumeProvider) "," Configure this session to use remote volume handling. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.getController () "," Get a controller for this session. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.getMediaSession () "," Gets the underlying framework MediaSession object. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.setMediaButtonReceiver (PendingIntent mbr) "," Set a pending intent for your media button receiver to allow restarting playback after the session has been stopped. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.obtain (Context context, Object mediaSession) "," Obtain a compat wrapper for an existing MediaSession. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.getRemoteControlClient () "," Gets the underlying framework RemoteControlClient object. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.release () "," This must be called when an app has finished performing playback. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.removeOnActiveChangeListener (MediaSessionCompat.OnActiveChangeListener listener) "," Stops the listener from being notified when the active status of this session changes. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.addOnActiveChangeListener (MediaSessionCompat.OnActiveChangeListener listener) "," Adds a listener to be notified when the active status of this session changes. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.setMetadata (MediaMetadataCompat metadata) "," Update the current metadata. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.sendSessionEvent (String event, Bundle extras) "," Send a proprietary event to all MediaControllers listening to this Session. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.setPlaybackState (PlaybackStateCompat state) "," Update the current playback state. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.setFlags (int flags) "," Set any flags for the session. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.setExtras (Bundle extras) "," Set some extras that can be associated with the MediaSessionCompat. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.setRatingType (int type) "," Set the style of rating used by this session. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.setCallback (MediaSessionCompat.Callback callback, Handler handler) "," Set the callback to receive updates for the MediaSession. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.isActive () "," Get the current active state of this session. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.setActive (boolean active) "," Set if this session is currently active and ready to receive commands. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.setQueueTitle (CharSequence title) "," Set the title of the play queue. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.setPlaybackToLocal (int stream) "," Set the stream this session is playing on. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.setQueue (List< MediaSessionCompat.QueueItem> queue) "," Update the list of items in the play queue. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.OnActiveChangeListener.onActiveChanged () "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.QueueItem.getDescription () "," Get the description for this item. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.QueueItem.getQueueItem () "," Get the underlying MediaSession.QueueItem. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.QueueItem.obtain (Object queueItem) "," Obtain a compat wrapper for an existing QueueItem. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.QueueItem.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.QueueItem.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.QueueItem.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.QueueItem.getQueueId () "," Get the queue id for this item. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.Token.fromToken (Object token) "," Creates a compat Token from a framework MediaSession.Token object. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.Token.getToken () "," Gets the underlying framework MediaSession.Token object. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.Token.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.support.v4.media.session.MediaSessionCompat.Token.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi14.Callback.onStop () "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi14.Callback.onSeekTo (long pos) "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi14.Callback.onSkipToNext () "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi14.Callback.onPause () "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi14.Callback.onSetRating (Object ratingObj) "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi14.Callback.onPlay () "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi14.Callback.onFastForward () "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi14.Callback.onRewind () "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi14.Callback.onSkipToPrevious () "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi14.Callback.onMediaButtonEvent (Intent mediaButtonIntent) "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi14.Callback.onCommand (String command, Bundle extras, ResultReceiver cb) "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi14.setState (Object rccObj, int state) "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi14.createRemoteControlClient (PendingIntent mbIntent) "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi14.registerRemoteControlClient (Context context, Object rccObj) "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi14.setMetadata (Object rccObj, Bundle metadata) "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi14.unregisterRemoteControlClient (Context context, Object rccObj) "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi18.setState (Object rccObj, int state, long position, float speed, long updateTime) "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi18.unregisterMediaButtonEventReceiver (Context context, PendingIntent pi) "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi18.setOnPlaybackPositionUpdateListener (Object rccObj, Object onPositionUpdateObj) "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi18.registerMediaButtonEventReceiver (Context context, PendingIntent pi) "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi18.createPlaybackPositionUpdateListener (MediaSessionCompatApi14.Callback callback) "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi19.setMetadata (Object rccObj, Bundle metadata, boolean supportRating) "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi19.createMetadataUpdateListener (MediaSessionCompatApi14.Callback callback) "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi19.setOnMetadataUpdateListener (Object rccObj, Object onMetadataUpdateObj) "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi8.registerMediaButtonEventReceiver (Context context, ComponentName mbr) "," no description <br /><br />"
"android.support.v4.media.session.MediaSessionCompatApi8.unregisterMediaButtonEventReceiver (Context context, ComponentName mbr) "," no description <br /><br />"
"android.support.v4.media.session.ParcelableVolumeInfo.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.support.v4.media.session.ParcelableVolumeInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.Builder.setState (int state, long position, float playbackSpeed, long updateTime) "," Set the current state of playback. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.Builder.setErrorMessage (CharSequence errorMessage) "," Set a user readable error message. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.Builder.setActions (long capabilities) "," Set the current capabilities available on this session. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.Builder.setState (int state, long position, float playbackSpeed) "," Set the current state of playback. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.Builder.build () "," Creates the playback state object. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.Builder.setBufferedPosition (long bufferPosition) "," Set the current buffered position in ms. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.CustomAction.Builder.setExtras (Bundle extras) "," Set optional extras for the PlaybackStateCompat.CustomAction. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.CustomAction.Builder.build () "," Build and return the PlaybackStateCompat.CustomAction instance with the specified values. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.CustomAction.getName () "," Returns the display name of this action. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.CustomAction.getExtras () "," Returns extras which provide additional application-specific information about the action, or null if none. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.CustomAction.getIcon () "," Returns the resource id of the icon in the Session's package. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.CustomAction.getAction () "," Returns the action of the PlaybackStateCompat.CustomAction. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.CustomAction.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.CustomAction.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.CustomAction.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.getLastPositionUpdateTime () "," Get the elapsed real time at which position was last updated. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.fromPlaybackState (Object stateObj) "," Creates an instance from a framework PlaybackState object. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.getState () "," Get the current state of playback. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.getErrorMessage () "," Get a user readable error message. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.getActions () "," Get the current actions available on this session. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.getPlaybackSpeed () "," Get the current playback speed as a multiple of normal playback. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.getBufferedPosition () "," Get the current buffered position in ms. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.getPosition () "," Get the current playback position in ms. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.getPlaybackState () "," Gets the underlying framework PlaybackState object. <br /><br />"
"android.support.v4.media.session.PlaybackStateCompat.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v4.media.TransportController.isPlaying () "," Return whether the player is currently playing its stream. <br /><br />"
"android.support.v4.media.TransportController.unregisterStateListener (TransportStateListener listener) "," Stop listening to changes in playback state. <br /><br />"
"android.support.v4.media.TransportController.getBufferPercentage ()   Retrieve amount, in percentage  (0-100) "," Retrieve amount, in percentage (0-100), that the media stream has been buffered on to the local device. <br /><br />"
"android.support.v4.media.TransportController.seekTo (long pos) "," Move to a new location in the media stream. <br /><br />"
"android.support.v4.media.TransportController.registerStateListener (TransportStateListener listener) "," Start listening to changes in playback state. <br /><br />"
"android.support.v4.media.TransportController.pausePlaying () "," Request that the player pause its playback and stay at its current position. <br /><br />"
"android.support.v4.media.TransportController.startPlaying () "," Request that the player start its playback at its current position. <br /><br />"
"android.support.v4.media.TransportController.getCurrentPosition () "," Retrieve the current playback location in the media stream, in milliseconds. <br /><br />"
"android.support.v4.media.TransportController.getTransportControlFlags () "," Retrieve the flags for the media transport control buttons that this transport supports. <br /><br />"
"android.support.v4.media.TransportController.stopPlaying () "," Request that the player stop its playback; it may clear its state in whatever way is appropriate. <br /><br />"
"android.support.v4.media.TransportController.getDuration () "," Retrieve the total duration of the media stream, in milliseconds. <br /><br />"
"android.support.v4.media.TransportMediator.destroy () "," Optionally call when no longer using the TransportController. <br /><br />"
"android.support.v4.media.TransportMediator.getBufferPercentage ()   Retrieve amount, in percentage  (0-100) "," Retrieve amount, in percentage (0-100), that the media stream has been buffered on to the local device. <br /><br />"
"android.support.v4.media.TransportMediator.dispatchKeyEvent (KeyEvent event)   Must call from "," Must call from Activity.dispatchKeyEvent to give the transport an opportunity to intercept media keys. <br /><br />"
"android.support.v4.media.TransportMediator.registerStateListener (TransportStateListener listener) "," Start listening to changes in playback state. <br /><br />"
"android.support.v4.media.TransportMediator.getRemoteControlClient () "," Return the RemoteControlClient associated with this transport. <br /><br />"
"android.support.v4.media.TransportMediator.getTransportControlFlags () "," Retrieves the flags for the media transport control buttons that this transport supports. <br /><br />"
"android.support.v4.media.TransportMediator.stopPlaying () "," Move the controller into the stopped state. <br /><br />"
"android.support.v4.media.TransportMediator.isPlaying () "," Return whether the player is currently playing its stream. <br /><br />"
"android.support.v4.media.TransportMediator.refreshState () "," no description <br /><br />"
"android.support.v4.media.TransportMediator.unregisterStateListener (TransportStateListener listener) "," Stop listening to changes in playback state. <br /><br />"
"android.support.v4.media.TransportMediator.pausePlaying () "," Move the controller into the paused state. <br /><br />"
"android.support.v4.media.TransportMediator.seekTo (long pos) "," Move to a new location in the media stream. <br /><br />"
"android.support.v4.media.TransportMediator.startPlaying () "," Move the controller into the playing state. <br /><br />"
"android.support.v4.media.TransportMediator.getCurrentPosition () "," Retrieve the current playback location in the media stream, in milliseconds. <br /><br />"
"android.support.v4.media.TransportMediator.getDuration () "," Retrieve the total duration of the media stream, in milliseconds. <br /><br />"
"android.support.v4.media.TransportPerformer.onGetDuration () "," Request to return the duration of the current media, in milliseconds. <br /><br />"
"android.support.v4.media.TransportPerformer.onStop () "," Request to completely stop playback of the media, clearing whatever state the player thinks is appropriate. <br /><br />"
"android.support.v4.media.TransportPerformer.onSeekTo (long pos) "," Request to move the current playback position. <br /><br />"
"android.support.v4.media.TransportPerformer.onMediaButtonUp (int keyCode, KeyEvent event) "," Report that a media button has been released. <br /><br />"
"android.support.v4.media.TransportPerformer.onGetBufferPercentage () "," Request to find out how much of the media has been buffered on the local device. <br /><br />"
"android.support.v4.media.TransportPerformer.onAudioFocusChange (int focusChange) "," Report that audio focus has changed on the app. <br /><br />"
"android.support.v4.media.TransportPerformer.onGetCurrentPosition () "," Request to return the current playback position, in milliseconds. <br /><br />"
"android.support.v4.media.TransportPerformer.onIsPlaying () "," Request to find out whether the player is currently playing its media. <br /><br />"
"android.support.v4.media.TransportPerformer.onMediaButtonDown (int keyCode, KeyEvent event) "," Report that a media button has been pressed. <br /><br />"
"android.support.v4.media.TransportPerformer.onPause ()   Request to pause playback of the media, staying at the current playback position and other state so a later call to onStart () "," Request to pause playback of the media, staying at the current playback position and other state so a later call to onStart() will resume at the same place. <br /><br />"
"android.support.v4.media.TransportPerformer.onGetTransportControlFlags () "," Retrieves the flags for the media transport control buttons that this transport supports. <br /><br />"
"android.support.v4.media.TransportPerformer.onStart ()   Request to start playback on the media, resuming from whatever current state  (position etc) "," Request to start playback on the media, resuming from whatever current state (position etc) it is in. <br /><br />"
"android.support.v4.media.TransportStateListener.onTransportControlsChanged (TransportController controller) "," The available controls of the transport changed. <br /><br />"
"android.support.v4.media.TransportStateListener.onPlayingChanged (TransportController controller) "," The play state of the transport changed. <br /><br />"
"android.support.v4.media.VolumeProviderCompat.Callback.onVolumeChanged (VolumeProviderCompat volumeProvider) "," no description <br /><br />"
"android.support.v4.media.VolumeProviderCompat.onAdjustVolume (int direction) "," Override to handle requests to adjust the volume of the current output. <br /><br />"
"android.support.v4.media.VolumeProviderCompat.getVolumeProvider () "," Gets the underlying framework VolumeProvider object. <br /><br />"
"android.support.v4.media.VolumeProviderCompat.getVolumeControl () "," Get the volume control type that this volume provider uses. <br /><br />"
"android.support.v4.media.VolumeProviderCompat.getMaxVolume () "," Get the maximum volume this provider allows. <br /><br />"
"android.support.v4.media.VolumeProviderCompat.setCurrentVolume (int currentVolume) "," Set the current volume and notify the system that the volume has been changed. <br /><br />"
"android.support.v4.media.VolumeProviderCompat.onSetVolumeTo (int volume) "," Override to handle requests to set the volume of the current output. <br /><br />"
"android.support.v4.media.VolumeProviderCompat.setCallback (VolumeProviderCompat.Callback callback) "," Sets a callback to receive volume changes. <br /><br />"
"android.support.v4.media.VolumeProviderCompat.getCurrentVolume () "," Get the current volume of the provider. <br /><br />"
"android.support.v4.net.ConnectivityManagerCompat.getNetworkInfoFromBroadcast (ConnectivityManager cm, Intent intent) "," Return the NetworkInfo that caused the given CONNECTIVITY_ACTION broadcast. <br /><br />"
"android.support.v4.net.ConnectivityManagerCompat.isActiveNetworkMetered (ConnectivityManager cm) "," Returns if the currently active data network is metered. <br /><br />"
"android.support.v4.net.TrafficStatsCompat.incrementOperationCount (int operationCount) "," Increment count of network operations performed under the accounting tag currently active on the calling thread. <br /><br />"
"android.support.v4.net.TrafficStatsCompat.incrementOperationCount (int tag, int operationCount) "," Increment count of network operations performed under the given accounting tag. <br /><br />"
"android.support.v4.net.TrafficStatsCompat.tagSocket (Socket socket) "," Tag the given Socket with any statistics parameters active for the current thread. <br /><br />"
"android.support.v4.net.TrafficStatsCompat.untagSocket (Socket socket) "," Remove any statistics parameters from the given Socket. <br /><br />"
"android.support.v4.net.TrafficStatsCompat.clearThreadStatsTag () "," Clear active tag used when accounting Socket traffic originating from the current thread. <br /><br />"
"android.support.v4.net.TrafficStatsCompat.getThreadStatsTag () "," Get the active tag used when accounting Socket traffic originating from the current thread. <br /><br />"
"android.support.v4.net.TrafficStatsCompat.setThreadStatsTag (int tag) "," Set active tag to use when accounting Socket traffic originating from the current thread. <br /><br />"
"android.support.v4.os.AsyncTaskCompat.executeParallel (AsyncTask<Params, Progress, Result> task, Params... params) "," Executes the task with the specified parameters, allowing multiple tasks to run in parallel on a pool of threads managed by AsyncTask. <br /><br />"
"android.support.v4.os.EnvironmentCompat.getStorageState (File path) "," Returns the current state of the storage device that provides the given path. <br /><br />"
"android.support.v4.os.ParcelableCompat.newCreator (ParcelableCompatCreatorCallbacks<T> callbacks) "," Factory method for Parcelable.Creator. <br /><br />"
"android.support.v4.os.ParcelableCompatCreatorCallbacks<T>.newArray (int size) "," Create a new array of the Parcelable class. <br /><br />"
"android.support.v4.os.ParcelableCompatCreatorCallbacks<T>.createFromParcel (Parcel in, ClassLoader loader)   Create a new instance of the Parcelable class, instantiating it from the given Parcel whose data had previously been written by Parcelable.writeToParcel () "," Create a new instance of the Parcelable class, instantiating it from the given Parcel whose data had previously been written by Parcelable.writeToParcel() and using the given ClassLoader. <br /><br />"
"android.support.v4.print.PrintHelper.printBitmap (String jobName, Bitmap bitmap) "," Prints a bitmap. <br /><br />"
"android.support.v4.print.PrintHelper.printBitmap (String jobName, Bitmap bitmap, PrintHelper.OnPrintFinishCallback callback) "," Prints a bitmap. <br /><br />"
"android.support.v4.print.PrintHelper.printBitmap (String jobName, Uri imageFile, PrintHelper.OnPrintFinishCallback callback) "," Prints an image located at the Uri. <br /><br />"
"android.support.v4.print.PrintHelper.getOrientation () "," Gets whether the image will be printed in landscape or portrait. <br /><br />"
"android.support.v4.print.PrintHelper.setColorMode (int colorMode)   Sets whether the image will be printed in color  (default) "," Sets whether the image will be printed in color (default) COLOR_MODE_COLOR or in back and white COLOR_MODE_MONOCHROME. <br /><br />"
"android.support.v4.print.PrintHelper.setScaleMode (int scaleMode) "," Selects whether the image will fill the paper and be cropped SCALE_MODE_FIT or whether the image will be scaled but leave white space SCALE_MODE_FILL. <br /><br />"
"android.support.v4.print.PrintHelper.systemSupportsPrint () "," Gets whether the system supports printing. <br /><br />"
"android.support.v4.print.PrintHelper.printBitmap (String jobName, Uri imageFile) "," Prints an image located at the Uri. <br /><br />"
"android.support.v4.print.PrintHelper.getColorMode () "," Gets the color mode with which the image will be printed. <br /><br />"
"android.support.v4.print.PrintHelper.getScaleMode () "," Returns the scale mode with which the image will fill the paper. <br /><br />"
"android.support.v4.print.PrintHelper.setOrientation (int orientation)   Sets whether the image will be printed in landscape ORIENTATION_LANDSCAPE  (default) "," Sets whether the image will be printed in landscape ORIENTATION_LANDSCAPE (default) or portrait ORIENTATION_PORTRAIT. <br /><br />"
"android.support.v4.print.PrintHelper.OnPrintFinishCallback.onFinish () "," Called when a print operation is finished. <br /><br />"
"android.support.v4.provider.DocumentFile.length () "," Returns the length of this file in bytes. <br /><br />"
"android.support.v4.provider.DocumentFile.delete () "," Deletes this file. <br /><br />"
"android.support.v4.provider.DocumentFile.fromTreeUri (Context context, Uri treeUri) "," Create a DocumentFile representing the document tree rooted at the given Uri. <br /><br />"
"android.support.v4.provider.DocumentFile.canWrite () "," Indicates whether the current context is allowed to write to this file. <br /><br />"
"android.support.v4.provider.DocumentFile.getType () "," Return the MIME type of this document. <br /><br />"
"android.support.v4.provider.DocumentFile.canRead () "," Indicates whether the current context is allowed to read from this file. <br /><br />"
"android.support.v4.provider.DocumentFile.isDirectory () "," Indicates if this file represents a directory. <br /><br />"
"android.support.v4.provider.DocumentFile.createFile (String mimeType, String displayName) "," Create a new document as a direct child of this directory. <br /><br />"
"android.support.v4.provider.DocumentFile.getParentFile () "," Return the parent file of this document. <br /><br />"
"android.support.v4.provider.DocumentFile.isFile () "," Indicates if this file represents a file. <br /><br />"
"android.support.v4.provider.DocumentFile.exists () "," Returns a boolean indicating whether this file can be found. <br /><br />"
"android.support.v4.provider.DocumentFile.fromFile (File file) "," Create a DocumentFile representing the filesystem tree rooted at the given Uri. <br /><br />"
"android.support.v4.provider.DocumentFile.isDocumentUri (Context context, Uri uri) "," Test if given Uri is backed by a DocumentsProvider. <br /><br />"
"android.support.v4.provider.DocumentFile.fromSingleUri (Context context, Uri singleUri) "," Create a DocumentFile representing the single document at the given Uri. <br /><br />"
"android.support.v4.provider.DocumentFile.getName () "," Return the display name of this document. <br /><br />"
"android.support.v4.provider.DocumentFile.createDirectory (String displayName) "," Create a new directory as a direct child of this directory. <br /><br />"
"android.support.v4.provider.DocumentFile.listFiles () "," Returns an array of files contained in the directory represented by this file. <br /><br />"
"android.support.v4.provider.DocumentFile.lastModified () "," Returns the time when this file was last modified, measured in milliseconds since January 1st, 1970, midnight. <br /><br />"
"android.support.v4.provider.DocumentFile.findFile (String displayName)   Search through listFiles () "," Search through listFiles() for the first document matching the given display name. <br /><br />"
"android.support.v4.provider.DocumentFile.renameTo (String displayName) "," Renames this file to displayName. <br /><br />"
"android.support.v4.provider.DocumentFile.getUri () "," Return a Uri for the underlying document represented by this file. <br /><br />"
"android.support.v4.text.BidiFormatter.Builder.setTextDirectionHeuristic (TextDirectionHeuristicCompat heuristic) "," Specifies the default directionality estimation algorithm to be used by the BidiFormatter. <br /><br />"
"android.support.v4.text.BidiFormatter.Builder.build () "," no description <br /><br />"
"android.support.v4.text.BidiFormatter.Builder.stereoReset (boolean stereoReset) "," Specifies whether the BidiFormatter to be built should also 'reset' directionality before a string being bidi-wrapped, not just after it. <br /><br />"
"android.support.v4.text.ICUCompat.getScript (String locale)   Returns the script  (language code) "," Returns the script (language code) of a script. <br /><br />"
"android.support.v4.text.ICUCompat.addLikelySubtags (String locale) "," Add the likely subtags for a provided locale ID, per the algorithm described in the following CLDR technical report: http://www.unicode.org/reports/tr35/#Likely_Subtags If locale is already in the maximal form, or there is no data available for maximization, it will be just returned. <br /><br />"
"android.support.v4.text.TextDirectionHeuristicCompat.isRtl (CharSequence cs, int start, int count) "," Guess if a CharSequence is in the RTL direction or not. <br /><br />"
"android.support.v4.text.TextDirectionHeuristicCompat.isRtl (char[] array, int start, int count) "," Guess if a chars array is in the RTL direction or not. <br /><br />"
"android.support.v4.text.TextUtilsCompat.getLayoutDirectionFromLocale (Locale locale) "," Return the layout direction for a given Locale <br /><br />"
"android.support.v4.text.TextUtilsCompat.htmlEncode (String s) "," Html-encode the string. <br /><br />"
"android.support.v4.util.ArrayMap<K, V>.removeAll (Collection<?> collection) "," Remove all keys in the array map that exist in the given collection. <br /><br />"
"android.support.v4.util.ArrayMap<K, V>.retainAll (Collection<?> collection) "," Remove all keys in the array map that do not exist in the given collection. <br /><br />"
"android.support.v4.util.ArrayMap<K, V>.keySet () "," Return a Set for iterating over and interacting with all keys in the array map. <br /><br />"
"android.support.v4.util.ArrayMap<K, V>.values () "," Return a Collection for iterating over and interacting with all values in the array map. <br /><br />"
"android.support.v4.util.ArrayMap<K, V>.containsAll (Collection<?> collection) "," Determine if the array map contains all of the keys in the given collection. <br /><br />"
"android.support.v4.util.ArrayMap<K, V>.entrySet () "," Return a Set for iterating over and interacting with all mappings in the array map. <br /><br />"
"android.support.v4.util.ArrayMap<K, V>.putAll (Map<? extends K, ? extends V> map)   Perform a put (Object, Object) "," Perform a put(Object, Object) of all key/value pairs in map <br /><br />"
"android.support.v4.util.AtomicFile.failWrite (FileOutputStream str)   Call when you have failed for some reason at writing to the stream returned by startWrite () "," Call when you have failed for some reason at writing to the stream returned by startWrite(). <br /><br />"
"android.support.v4.util.AtomicFile.delete () "," Delete the atomic file. <br /><br />"
"android.support.v4.util.AtomicFile.finishWrite (FileOutputStream str)   Call when you have successfully finished writing to the stream returned by startWrite () "," Call when you have successfully finished writing to the stream returned by startWrite(). <br /><br />"
"android.support.v4.util.AtomicFile.startWrite () "," Start a new write operation on the file. <br /><br />"
"android.support.v4.util.AtomicFile.openRead () "," Open the atomic file for reading. <br /><br />"
"android.support.v4.util.AtomicFile.getBaseFile () "," Return the path to the base file. <br /><br />"
"android.support.v4.util.AtomicFile.readFully ()   A convenience for openRead () "," A convenience for openRead() that also reads all of the file contents into a byte array which is returned. <br /><br />"
"android.support.v4.util.CircularArray<E>.clear () "," Remove all elements from the CircularArray. <br /><br />"
"android.support.v4.util.CircularArray<E>.get (int n)   Get nth  (0 <= n <= size ()-1) "," Get nth (0 <= n <= size()-1) element of the CircularArray. <br /><br />"
"android.support.v4.util.CircularArray<E>.removeFromStart (int numOfElements) "," Remove multiple elements from front of the CircularArray, ignore when numOfElements is less than or equals to 0. <br /><br />"
"android.support.v4.util.CircularArray<E>.removeFromEnd (int numOfElements) "," Remove multiple elements from end of the CircularArray, ignore when numOfElements is less than or equals to 0. <br /><br />"
"android.support.v4.util.CircularArray<E>.isEmpty ()   Return true if size () "," Return true if size() is 0. <br /><br />"
"android.support.v4.util.CircularArray<E>.size () "," Get number of elements in the CircularArray. <br /><br />"
"android.support.v4.util.CircularArray<E>.getLast () "," Get last element of the CircularArray. <br /><br />"
"android.support.v4.util.CircularArray<E>.popLast () "," Remove last element from end of the CircularArray and return it. <br /><br />"
"android.support.v4.util.CircularArray<E>.getFirst () "," Get first element of the CircularArray. <br /><br />"
"android.support.v4.util.CircularArray<E>.addLast (E e) "," Add an element at end of the CircularArray. <br /><br />"
"android.support.v4.util.CircularArray<E>.addFirst (E e) "," Add an element in front of the CircularArray. <br /><br />"
"android.support.v4.util.CircularArray<E>.popFirst () "," Remove first element from front of the CircularArray and return it. <br /><br />"
"android.support.v4.util.CircularIntArray.addLast (int e) "," Add an integer at end of the CircularIntArray. <br /><br />"
"android.support.v4.util.CircularIntArray.addFirst (int e) "," Add an integer in front of the CircularIntArray. <br /><br />"
"android.support.v4.util.CircularIntArray.clear () "," Remove all integers from the CircularIntArray. <br /><br />"
"android.support.v4.util.CircularIntArray.get (int n)   Get nth  (0 <= n <= size ()-1) "," Get nth (0 <= n <= size()-1) integer of the CircularIntArray. <br /><br />"
"android.support.v4.util.CircularIntArray.removeFromStart (int numOfElements) "," Remove multiple integers from front of the CircularIntArray, ignore when numOfElements is less than or equals to 0. <br /><br />"
"android.support.v4.util.CircularIntArray.removeFromEnd (int numOfElements) "," Remove multiple elements from end of the CircularIntArray, ignore when numOfElements is less than or equals to 0. <br /><br />"
"android.support.v4.util.CircularIntArray.isEmpty ()   Return true if size () "," Return true if size() is 0. <br /><br />"
"android.support.v4.util.CircularIntArray.size () "," Get number of integers in the CircularIntArray. <br /><br />"
"android.support.v4.util.CircularIntArray.getLast () "," Get last integer of the CircularIntArray. <br /><br />"
"android.support.v4.util.CircularIntArray.popLast () "," Remove last integer from end of the CircularIntArray and return it. <br /><br />"
"android.support.v4.util.CircularIntArray.getFirst () "," Get first integer of the CircularIntArray. <br /><br />"
"android.support.v4.util.CircularIntArray.popFirst () "," Remove first integer from front of the CircularIntArray and return it. <br /><br />"
"android.support.v4.util.LongSparseArray<E>.keyAt (int index)   Given an index in the range 0...size () "," Given an index in the range 0...size()-1, returns the key from the indexth key-value mapping that this LongSparseArray stores. <br /><br />"
"android.support.v4.util.LongSparseArray<E>.get (long key) "," Gets the Object mapped from the specified key, or null if no such mapping has been made. <br /><br />"
"android.support.v4.util.LongSparseArray<E>.indexOfValue (E value)   Returns an index for which valueAt (int) "," Returns an index for which valueAt(int) would return the specified key, or a negative number if no keys map to the specified value. <br /><br />"
"android.support.v4.util.LongSparseArray<E>.removeAt (int index) "," Removes the mapping at the specified index. <br /><br />"
"android.support.v4.util.LongSparseArray<E>.size () "," Returns the number of key-value mappings that this LongSparseArray currently stores. <br /><br />"
"android.support.v4.util.LongSparseArray<E>.delete (long key) "," Removes the mapping from the specified key, if there was any. <br /><br />"
"android.support.v4.util.LongSparseArray<E>.get (long key, E valueIfKeyNotFound) "," Gets the Object mapped from the specified key, or the specified Object if no such mapping has been made. <br /><br />"
"android.support.v4.util.LongSparseArray<E>.toString () "," Returns a string containing a concise, human-readable description of this object. This implementation composes a string by iterating over its mappings. <br /><br />"
"android.support.v4.util.LongSparseArray<E>.setValueAt (int index, E value)   Given an index in the range 0...size () "," Given an index in the range 0...size()-1, sets a new value for the indexth key-value mapping that this LongSparseArray stores. <br /><br />"
"android.support.v4.util.LongSparseArray<E>.clear () "," Removes all key-value mappings from this LongSparseArray. <br /><br />"
"android.support.v4.util.LongSparseArray<E>.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.support.v4.util.LongSparseArray<E>.valueAt (int index)   Given an index in the range 0...size () "," Given an index in the range 0...size()-1, returns the value from the indexth key-value mapping that this LongSparseArray stores. <br /><br />"
"android.support.v4.util.LongSparseArray<E>.append (long key, E value) "," Puts a key/value pair into the array, optimizing for the case where the key is greater than all existing keys in the array. <br /><br />"
"android.support.v4.util.LongSparseArray<E>.remove (long key)   Alias for delete (long) "," Alias for delete(long). <br /><br />"
"android.support.v4.util.LongSparseArray<E>.indexOfKey (long key)   Returns the index for which keyAt (int) "," Returns the index for which keyAt(int) would return the specified key, or a negative number if the specified key is not mapped. <br /><br />"
"android.support.v4.util.LongSparseArray<E>.put (long key, E value) "," Adds a mapping from the specified key to the specified value, replacing the previous mapping from the specified key if there was one. <br /><br />"
"android.support.v4.util.LruCache<K, V>.evictAll ()   Clear the cache, calling entryRemoved (boolean, K, V, V) "," Clear the cache, calling entryRemoved(boolean, K, V, V) on each removed entry. <br /><br />"
"android.support.v4.util.LruCache<K, V>.hitCount ()   Returns the number of times get (K) "," Returns the number of times get(K) returned a value that was already present in the cache. <br /><br />"
"android.support.v4.util.LruCache<K, V>.evictionCount () "," Returns the number of values that have been evicted. <br /><br />"
"android.support.v4.util.LruCache<K, V>.remove (K key) "," Removes the entry for key if it exists. <br /><br />"
"android.support.v4.util.LruCache<K, V>.get (K key) "," Returns the value for key if it exists in the cache or can be created by #create. <br /><br />"
"android.support.v4.util.LruCache<K, V>.maxSize ()   For caches that do not override sizeOf (K, V) "," For caches that do not override sizeOf(K, V), this returns the maximum number of entries in the cache. <br /><br />"
"android.support.v4.util.LruCache<K, V>.trimToSize (int maxSize) "," Remove the eldest entries until the total of remaining entries is at or below the requested size. <br /><br />"
"android.support.v4.util.LruCache<K, V>.createCount ()   Returns the number of times create (Object) "," Returns the number of times create(Object) returned a value. <br /><br />"
"android.support.v4.util.LruCache<K, V>.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v4.util.LruCache<K, V>.snapshot () "," Returns a copy of the current contents of the cache, ordered from least recently accessed to most recently accessed. <br /><br />"
"android.support.v4.util.LruCache<K, V>.resize (int maxSize) "," Sets the size of the cache. <br /><br />"
"android.support.v4.util.LruCache<K, V>.put (K key, V value) "," Caches value for key. <br /><br />"
"android.support.v4.util.LruCache<K, V>.putCount ()   Returns the number of times put (K, V) "," Returns the number of times put(K, V) was called. <br /><br />"
"android.support.v4.util.LruCache<K, V>.missCount ()   Returns the number of times get (K) "," Returns the number of times get(K) returned null or required a new value to be created. <br /><br />"
"android.support.v4.util.LruCache<K, V>.size ()   For caches that do not override sizeOf (K, V) "," For caches that do not override sizeOf(K, V), this returns the number of entries in the cache. <br /><br />"
"android.support.v4.util.Pair<F, S>.equals (Object o)   Checks the two objects for equality by delegating to their respective equals (Object) "," Checks the two objects for equality by delegating to their respective equals(Object) methods. <br /><br />"
"android.support.v4.util.Pair<F, S>.create (A a, B b) "," Convenience method for creating an appropriately typed pair. <br /><br />"
"android.support.v4.util.Pair<F, S>.hashCode () "," Compute a hash code using the hash codes of the underlying objects <br /><br />"
"android.support.v4.util.Pools.Pool<T>.acquire () "," no description <br /><br />"
"android.support.v4.util.Pools.Pool<T>.release (T instance) "," Release an instance to the pool. <br /><br />"
"android.support.v4.util.Pools.SimplePool<T>.acquire () "," no description <br /><br />"
"android.support.v4.util.Pools.SimplePool<T>.release (T instance) "," Release an instance to the pool. <br /><br />"
"android.support.v4.util.Pools.SynchronizedPool<T>.acquire () "," no description <br /><br />"
"android.support.v4.util.Pools.SynchronizedPool<T>.release (T element) "," Release an instance to the pool. <br /><br />"
"android.support.v4.util.SimpleArrayMap<K, V>.equals (Object object) "," Compares this instance with the specified object and indicates if they are equal. This implementation returns false if the object is not a map, or if the maps have different sizes. <br /><br />"
"android.support.v4.util.SimpleArrayMap<K, V>.keyAt (int index) "," Return the key at the given index in the array. <br /><br />"
"android.support.v4.util.SimpleArrayMap<K, V>.removeAt (int index) "," Remove the key/value mapping at the given index. <br /><br />"
"android.support.v4.util.SimpleArrayMap<K, V>.containsValue (Object value) "," Check whether a value exists in the array. <br /><br />"
"android.support.v4.util.SimpleArrayMap<K, V>.size () "," Return the number of items in this array map. <br /><br />"
"android.support.v4.util.SimpleArrayMap<K, V>.ensureCapacity (int minimumCapacity) "," Ensure the array map can hold at least minimumCapacity items. <br /><br />"
"android.support.v4.util.SimpleArrayMap<K, V>.setValueAt (int index, V value) "," Set the value at a given index in the array. <br /><br />"
"android.support.v4.util.SimpleArrayMap<K, V>.toString () "," Returns a string containing a concise, human-readable description of this object. This implementation composes a string by iterating over its mappings. <br /><br />"
"android.support.v4.util.SimpleArrayMap<K, V>.clear () "," Make the array map empty. <br /><br />"
"android.support.v4.util.SimpleArrayMap<K, V>.putAll (SimpleArrayMap<? extends K, ? extends V> array)   Perform a put (Object, Object) "," Perform a put(Object, Object) of all key/value pairs in array <br /><br />"
"android.support.v4.util.SimpleArrayMap<K, V>.valueAt (int index) "," Return the value at the given index in the array. <br /><br />"
"android.support.v4.util.SimpleArrayMap<K, V>.isEmpty () "," Return true if the array map contains no items. <br /><br />"
"android.support.v4.util.SimpleArrayMap<K, V>.put (K key, V value) "," Add a new value to the array map. <br /><br />"
"android.support.v4.util.SimpleArrayMap<K, V>.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.support.v4.util.SimpleArrayMap<K, V>.indexOfKey (Object key) "," Returns the index of a key in the set. <br /><br />"
"android.support.v4.util.SimpleArrayMap<K, V>.get (Object key) "," Retrieve a value from the array. <br /><br />"
"android.support.v4.util.SimpleArrayMap<K, V>.remove (Object key) "," Remove an existing key from the array map. <br /><br />"
"android.support.v4.util.SimpleArrayMap<K, V>.containsKey (Object key) "," Check whether a key exists in the array. <br /><br />"
"android.support.v4.util.SparseArrayCompat<E>.indexOfKey (int key)   Returns the index for which keyAt (int) "," Returns the index for which keyAt(int) would return the specified key, or a negative number if the specified key is not mapped. <br /><br />"
"android.support.v4.util.SparseArrayCompat<E>.keyAt (int index)   Given an index in the range 0...size () "," Given an index in the range 0...size()-1, returns the key from the indexth key-value mapping that this SparseArray stores. <br /><br />"
"android.support.v4.util.SparseArrayCompat<E>.indexOfValue (E value)   Returns an index for which valueAt (int) "," Returns an index for which valueAt(int) would return the specified key, or a negative number if no keys map to the specified value. <br /><br />"
"android.support.v4.util.SparseArrayCompat<E>.delete (int key) "," Removes the mapping from the specified key, if there was any. <br /><br />"
"android.support.v4.util.SparseArrayCompat<E>.removeAt (int index) "," Removes the mapping at the specified index. <br /><br />"
"android.support.v4.util.SparseArrayCompat<E>.size () "," Returns the number of key-value mappings that this SparseArray currently stores. <br /><br />"
"android.support.v4.util.SparseArrayCompat<E>.remove (int key)   Alias for delete (int) "," Alias for delete(int). <br /><br />"
"android.support.v4.util.SparseArrayCompat<E>.append (int key, E value) "," Puts a key/value pair into the array, optimizing for the case where the key is greater than all existing keys in the array. <br /><br />"
"android.support.v4.util.SparseArrayCompat<E>.toString () "," Returns a string containing a concise, human-readable description of this object. This implementation composes a string by iterating over its mappings. <br /><br />"
"android.support.v4.util.SparseArrayCompat<E>.get (int key, E valueIfKeyNotFound) "," Gets the Object mapped from the specified key, or the specified Object if no such mapping has been made. <br /><br />"
"android.support.v4.util.SparseArrayCompat<E>.setValueAt (int index, E value)   Given an index in the range 0...size () "," Given an index in the range 0...size()-1, sets a new value for the indexth key-value mapping that this SparseArray stores. <br /><br />"
"android.support.v4.util.SparseArrayCompat<E>.clear () "," Removes all key-value mappings from this SparseArray. <br /><br />"
"android.support.v4.util.SparseArrayCompat<E>.get (int key) "," Gets the Object mapped from the specified key, or null if no such mapping has been made. <br /><br />"
"android.support.v4.util.SparseArrayCompat<E>.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.support.v4.util.SparseArrayCompat<E>.valueAt (int index)   Given an index in the range 0...size () "," Given an index in the range 0...size()-1, returns the value from the indexth key-value mapping that this SparseArray stores. <br /><br />"
"android.support.v4.util.SparseArrayCompat<E>.removeAtRange (int index, int size) "," Remove a range of mappings as a batch. <br /><br />"
"android.support.v4.util.SparseArrayCompat<E>.put (int key, E value) "," Adds a mapping from the specified key to the specified value, replacing the previous mapping from the specified key if there was one. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityEventCompat.appendRecord (AccessibilityEvent event, AccessibilityRecordCompat record) "," Appends an AccessibilityRecord to the end of event records. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityEventCompat.asRecord (AccessibilityEvent event) "," Creates an AccessibilityRecordCompat from an AccessibilityEvent that can be used to manipulate the event properties defined in AccessibilityRecord. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityEventCompat.getRecordCount (AccessibilityEvent event) "," Gets the number of records contained in the event. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityEventCompat.getRecord (AccessibilityEvent event, int index) "," Gets the record at a given index. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityManagerCompat.AccessibilityStateChangeListenerCompat.onAccessibilityStateChanged (boolean enabled) "," Called back on change in the accessibility state. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityManagerCompat.getInstalledAccessibilityServiceList (AccessibilityManager manager) "," Returns the AccessibilityServiceInfos of the installed accessibility services. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityManagerCompat.getEnabledAccessibilityServiceList (AccessibilityManager manager, int feedbackTypeFlags) "," Returns the AccessibilityServiceInfos of the enabled accessibility services for a given feedback type. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityManagerCompat.addAccessibilityStateChangeListener (AccessibilityManager manager, AccessibilityManagerCompat.AccessibilityStateChangeListenerCompat listener) "," Registers an AccessibilityManager.AccessibilityStateChangeListener for changes in the global accessibility state of the system. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityManagerCompat.isTouchExplorationEnabled (AccessibilityManager manager) "," Returns if the touch exploration in the system is enabled. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityManagerCompat.removeAccessibilityStateChangeListener (AccessibilityManager manager, AccessibilityManagerCompat.AccessibilityStateChangeListenerCompat listener) "," Unregisters an AccessibilityManager.AccessibilityStateChangeListener. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat.getId () "," Gets the id for this action. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat.getLabel () "," Gets the label for this action. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat.obtain (int rowCount, int columnCount, boolean hierarchical, int selectionMode) "," Returns a cached instance if such is available otherwise a new one. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat.getColumnCount () "," no description <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat.getRowCount () "," no description <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat.isHierarchical () "," no description <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat.getRowSpan () "," no description <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat.obtain (int rowIndex, int rowSpan, int columnIndex, int columnSpan, boolean heading, boolean selected) "," Returns a cached instance if such is available otherwise a new one. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat.getColumnSpan () "," no description <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat.isSelected () "," no description <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat.isHeading () "," no description <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat.getRowIndex () "," no description <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat.getColumnIndex () "," no description <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setSource (View root, int virtualDescendantId) "," Sets the source to be a virtual descendant of the given root. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setClickable (boolean clickable) "," Sets whether this node is clickable. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isVisibleToUser () "," Sets whether this node is visible to the user. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setChecked (boolean checked) "," Sets whether this node is checked. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getInfo () "," no description <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isFocused () "," Gets whether this node is focused. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setBoundsInScreen (Rect bounds) "," Sets the node bounds in screen coordinates. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setText (CharSequence text) "," Sets the text of this node. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setCollectionItemInfo (Object collectionItemInfo) "," no description <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setScrollable (boolean scrollable) "," Sets if the node is scrollable. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.addAction (int action) "," Adds an action that can be performed on the node. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setMovementGranularities (int granularities) "," Sets the movement granularities for traversing the text of this node. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.addChild (View root, int virtualDescendantId) "," Adds a virtual child which is a descendant of the given root. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setLongClickable (boolean longClickable) "," Sets whether this node is long clickable. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.focusSearch (int direction) "," Searches for the nearest view in the specified direction that can take input focus. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isAccessibilityFocused () "," Gets whether this node is accessibility focused. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setEnabled (boolean enabled) "," Sets whether this node is enabled. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.addAction (AccessibilityNodeInfoCompat.AccessibilityActionCompat action) "," Adds an action that can be performed on the node. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isFocusable () "," Gets whether this node is focusable. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setVisibleToUser (boolean visibleToUser) "," Sets whether this node is visible to the user. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isLongClickable () "," Gets whether this node is long clickable. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setLiveRegion (int mode) "," Sets the node's live region mode. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.performAction (int action, Bundle arguments) "," Performs an action on the node. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getChild (int index) "," Get the child at given index. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.addChild (View child) "," Adds a child. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getRangeInfo () "," Gets the range info if this node is a range. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getLiveRegion () "," Gets the node's live region mode. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isScrollable () "," Gets if the node is scrollable. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getActionList () "," Gets the actions that can be performed on the node. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getActions () "," Gets the actions that can be performed on the node. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.obtain () "," Returns a cached instance if such is available otherwise a new one. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isPassword () "," Gets whether this node is a password. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getContentDescription () "," Gets the content description of this node. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isSelected () "," Gets whether this node is selected. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setCheckable (boolean checkable) "," Sets whether this node is checkable. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getClassName () "," Gets the class this node comes from. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getPackageName () "," Gets the package this node comes from. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setFocused (boolean focused) "," Sets whether this node is focused. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getCollectionInfo () "," Gets the collection info if the node is a collection. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setSelected (boolean selected) "," Sets whether this node is selected. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setParent (View parent) "," Sets the parent. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.findAccessibilityNodeInfosByText (String text) "," Finds AccessibilityNodeInfos by text. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setPackageName (CharSequence packageName) "," Sets the package this node comes from. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setCollectionInfo (Object collectionInfo) "," no description <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setViewIdResourceName (String viewId) "," Sets the fully qualified resource name of the source view's id. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getViewIdResourceName () "," Gets the fully qualified resource name of the source view's id. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setAccessibilityFocused (boolean focused) "," Sets whether this node is accessibility focused. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setParent (View root, int virtualDescendantId) "," Sets the parent to be a virtual descendant of the given root. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isChecked () "," Gets whether this node is checked. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setClassName (CharSequence className) "," Sets the class this node comes from. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setBoundsInParent (Rect bounds) "," Sets the node bounds in parent coordinates. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getText () "," Gets the text of this node. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isClickable () "," Gets whether this node is clickable. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.obtain (View root, int virtualDescendantId) "," Returns a cached instance if such is available otherwise a new one and sets the source. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setContentDescription (CharSequence contentDescription) "," Sets the content description of this node. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.obtain (AccessibilityNodeInfoCompat info) "," Returns a cached instance if such is available or a new one is create. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getBoundsInScreen (Rect outBounds) "," Gets the node bounds in screen coordinates. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isEnabled () "," Gets whether this node is enabled. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.obtain (View source) "," Returns a cached instance if such is available otherwise a new one and sets the source. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getChildCount () "," Gets the number of children. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.recycle () "," Return an instance back to be reused. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setFocusable (boolean focusable) "," Sets whether this node is focusable. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getParent () "," Gets the parent. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getCollectionItemInfo () "," Gets the collection item info if the node is a collection item. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setSource (View source) "," Sets the source. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getWindowId () "," Gets the id of the window from which the info comes from. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.performAction (int action) "," Performs an action on the node. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setPassword (boolean password) "," Sets whether this node is a password. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getBoundsInParent (Rect outBounds) "," Gets the node bounds in parent coordinates. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getMovementGranularities () "," Gets the movement granularities for traversing the text of this node. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.findFocus (int focus) "," Find the view that has the specified focus type. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.isCheckable () "," Gets whether this node is checkable. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.RangeInfoCompat.getCurrent () "," no description <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.RangeInfoCompat.getType () "," no description <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.RangeInfoCompat.getMin () "," no description <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.RangeInfoCompat.getMax () "," no description <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeProviderCompat.getProvider () "," no description <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeProviderCompat.performAction (int virtualViewId, int action, Bundle arguments) "," Performs an accessibility action on a virtual view, i.e. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeProviderCompat.createAccessibilityNodeInfo (int virtualViewId) "," Returns an AccessibilityNodeInfoCompat representing a virtual view, i.e. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeProviderCompat.findAccessibilityNodeInfosByText (String text, int virtualViewId) "," Finds AccessibilityNodeInfoCompats by text. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityNodeProviderCompat.findFocus (int focus) "," Find the virtual view, i.e. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.setToIndex (int toIndex) "," Sets the index of text selection end or the index of the last visible item when scrolling. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.setSource (View root, int virtualDescendantId) "," Sets the source to be a virtual descendant of the given root. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.getScrollY () "," Gets the scroll offset of the source top edge in pixels. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.setScrollable (boolean scrollable) "," Sets if the source is scrollable. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.getScrollX () "," Gets the scroll offset of the source left edge in pixels. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.setBeforeText (CharSequence beforeText) "," Sets the text before a change. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.setCurrentItemIndex (int currentItemIndex) "," Sets the index of the source in the list of items that can be visited. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.setRemovedCount (int removedCount) "," Sets the number of removed characters. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.setMaxScrollY (int maxScrollY) "," Sets the max scroll offset of the source top edge in pixels. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.getParcelableData () "," Gets the Parcelable data. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.getFromIndex () "," Gets the index of the first character of the changed sequence, or the beginning of a text selection or the index of the first visible item when scrolling. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.setPassword (boolean isPassword) "," Sets if the source is a password field. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.setChecked (boolean isChecked) "," Sets if the source is checked. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.getMaxScrollY () "," Gets the max scroll offset of the source top edge in pixels. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.setMaxScrollX (int maxScrollX) "," Sets the max scroll offset of the source left edge in pixels. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.setScrollX (int scrollX) "," Sets the scroll offset of the source left edge in pixels. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.obtain (AccessibilityRecordCompat record) "," Returns a cached instance if such is available or a new one is instantiated. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.setFromIndex (int fromIndex) "," Sets the index of the first character of the changed sequence or the beginning of a text selection or the index of the first visible item when scrolling. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.getItemCount () "," Gets the number of items that can be visited. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.isScrollable () "," Gets if the source is scrollable. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.setEnabled (boolean isEnabled) "," Sets if the source is enabled. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.obtain () "," Returns a cached instance if such is available or a new one is instantiated. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.getMaxScrollX () "," Gets the max scroll offset of the source left edge in pixels. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.isPassword () "," Gets if the source is a password field. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.getContentDescription () "," Gets the description of the source. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.getClassName () "," Gets the class name of the source. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.setItemCount (int itemCount) "," Sets the number of items that can be visited. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.setAddedCount (int addedCount) "," Sets the number of added characters. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.setScrollY (int scrollY) "," Sets the scroll offset of the source top edge in pixels. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.isChecked () "," Gets if the source is checked. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.setClassName (CharSequence className) "," Sets the class name of the source. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.getBeforeText () "," Sets the text before a change. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.setParcelableData (Parcelable parcelableData) "," Sets the Parcelable data of the event. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.getText () "," Gets the text of the event. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.getSource () "," Gets the AccessibilityNodeInfo of the event source. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.getToIndex () "," Gets the index of text selection end or the index of the last visible item when scrolling. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.setContentDescription (CharSequence contentDescription) "," Sets the description of the source. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.getAddedCount () "," Gets the number of added characters. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.getCurrentItemIndex () "," Gets the index of the source in the list of items the can be visited. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.isEnabled () "," Gets if the source is enabled. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.getRemovedCount () "," Gets the number of removed characters. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.isFullScreen () "," Gets if the source is taking the entire screen. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.recycle () "," Return an instance back to be reused. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.getImpl () "," This method is deprecated. This method will be removed in a subsequent release of the support library. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.getWindowId () "," Gets the id of the window from which the event comes from. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.setSource (View source) "," Sets the event source. <br /><br />"
"android.support.v4.view.accessibility.AccessibilityRecordCompat.setFullScreen (boolean isFullScreen) "," Sets if the source is taking the entire screen. <br /><br />"
"android.support.v4.view.AccessibilityDelegateCompat.sendAccessibilityEventUnchecked (View host, AccessibilityEvent event) "," Sends an accessibility event. <br /><br />"
"android.support.v4.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo (View host, AccessibilityNodeInfoCompat info) "," Initializes an AccessibilityNodeInfoCompat with information about the host view. <br /><br />"
"android.support.v4.view.AccessibilityDelegateCompat.onPopulateAccessibilityEvent (View host, AccessibilityEvent event) "," Gives a chance to the host View to populate the accessibility event with its text content. <br /><br />"
"android.support.v4.view.AccessibilityDelegateCompat.onInitializeAccessibilityEvent (View host, AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about the the host View which is the event source. <br /><br />"
"android.support.v4.view.AccessibilityDelegateCompat.performAccessibilityAction (View host, int action, Bundle args) "," Performs the specified accessibility action on the view. <br /><br />"
"android.support.v4.view.AccessibilityDelegateCompat.sendAccessibilityEvent (View host, int eventType) "," Sends an accessibility event of the given type. <br /><br />"
"android.support.v4.view.AccessibilityDelegateCompat.dispatchPopulateAccessibilityEvent (View host, AccessibilityEvent event) "," Dispatches an AccessibilityEvent to the host View first and then to its children for adding their text content to the event. <br /><br />"
"android.support.v4.view.AccessibilityDelegateCompat.onRequestSendAccessibilityEvent (ViewGroup host, View child, AccessibilityEvent event)   Called when a child of the host View has requested sending an AccessibilityEvent and gives an opportunity to the parent  (the host) "," Called when a child of the host View has requested sending an AccessibilityEvent and gives an opportunity to the parent (the host) to augment the event. <br /><br />"
"android.support.v4.view.AccessibilityDelegateCompat.getAccessibilityNodeProvider (View host) "," Gets the provider for managing a virtual view hierarchy rooted at this View and reported to AccessibilityServices that explore the window content. <br /><br />"
"android.support.v4.view.ActionProvider.onPerformDefaultAction () "," Performs an optional default action. <br /><br />"
"android.support.v4.view.ActionProvider.refreshVisibility ()   If this ActionProvider is associated with an item in a menu, refresh the visibility of the item based on overridesItemVisibility () and isVisible () "," If this ActionProvider is associated with an item in a menu, refresh the visibility of the item based on overridesItemVisibility() and isVisible(). <br /><br />"
"android.support.v4.view.ActionProvider.onPrepareSubMenu (SubMenu subMenu) "," Called to prepare an associated submenu for the menu item backed by this ActionProvider. <br /><br />"
"android.support.v4.view.ActionProvider.onCreateActionView () "," Factory method for creating new action views. <br /><br />"
"android.support.v4.view.ActionProvider.hasSubMenu () "," Determines if this ActionProvider has a submenu associated with it. <br /><br />"
"android.support.v4.view.ActionProvider.overridesItemVisibility ()   The result of this method determines whether or not isVisible () "," The result of this method determines whether or not isVisible() will be used by the MenuItem this ActionProvider is bound to help determine its visibility. <br /><br />"
"android.support.v4.view.ActionProvider.onCreateActionView (MenuItem forItem) "," Factory method called by the Android framework to create new action views. <br /><br />"
"android.support.v4.view.ActionProvider.isVisible ()   If overridesItemVisibility () "," If overridesItemVisibility() returns true, the return value of this method will help determine the visibility of the MenuItem this ActionProvider is bound to. <br /><br />"
"android.support.v4.view.ActionProvider.setVisibilityListener (ActionProvider.VisibilityListener listener) "," Set a listener to be notified when this ActionProvider's overridden visibility changes. <br /><br />"
"android.support.v4.view.ActionProvider.getContext () "," Gets the context associated with this action provider. <br /><br />"
"android.support.v4.view.ActionProvider.VisibilityListener.onActionProviderVisibilityChanged (boolean isVisible) "," no description <br /><br />"
"android.support.v4.view.animation.FastOutLinearInInterpolator.getInterpolation (float input) "," Maps a value representing the elapsed fraction of an animation to a value that represents the interpolated fraction. <br /><br />"
"android.support.v4.view.animation.FastOutSlowInInterpolator.getInterpolation (float input) "," Maps a value representing the elapsed fraction of an animation to a value that represents the interpolated fraction. <br /><br />"
"android.support.v4.view.animation.LinearOutSlowInInterpolator.getInterpolation (float input) "," Maps a value representing the elapsed fraction of an animation to a value that represents the interpolated fraction. <br /><br />"
"android.support.v4.view.GestureDetectorCompat.setOnDoubleTapListener (GestureDetector.OnDoubleTapListener listener) "," Sets the listener which will be called for double-tap and related gestures. <br /><br />"
"android.support.v4.view.GestureDetectorCompat.onTouchEvent (MotionEvent event) "," Analyzes the given motion event and if applicable triggers the appropriate callbacks on the GestureDetector.OnGestureListener supplied. <br /><br />"
"android.support.v4.view.GestureDetectorCompat.setIsLongpressEnabled (boolean enabled) "," Set whether longpress is enabled, if this is enabled when a user presses and holds down you get a longpress event and nothing further. <br /><br />"
"android.support.v4.view.GestureDetectorCompat.isLongpressEnabled () "," no description <br /><br />"
"android.support.v4.view.GravityCompat.getAbsoluteGravity (int gravity, int layoutDirection) "," Convert script specific gravity to absolute horizontal value. <br /><br />"
"android.support.v4.view.GravityCompat.apply (int gravity, int w, int h, Rect container, Rect outRect, int layoutDirection) "," Apply a gravity constant to an object and take care if layout direction is RTL or not. <br /><br />"
"android.support.v4.view.GravityCompat.apply (int gravity, int w, int h, Rect container, int xAdj, int yAdj, Rect outRect, int layoutDirection) "," Apply a gravity constant to an object. <br /><br />"
"android.support.v4.view.GravityCompat.applyDisplay (int gravity, Rect display, Rect inoutObj, int layoutDirection) "," Apply additional gravity behavior based on the overall 'display' that an object exists in. <br /><br />"
"android.support.v4.view.KeyEventCompat.normalizeMetaState (int metaState) "," no description <br /><br />"
"android.support.v4.view.KeyEventCompat.metaStateHasNoModifiers (int metaState) "," no description <br /><br />"
"android.support.v4.view.KeyEventCompat.hasNoModifiers (KeyEvent event) "," no description <br /><br />"
"android.support.v4.view.KeyEventCompat.metaStateHasModifiers (int metaState, int modifiers) "," no description <br /><br />"
"android.support.v4.view.KeyEventCompat.startTracking (KeyEvent event) "," no description <br /><br />"
"android.support.v4.view.KeyEventCompat.getKeyDispatcherState (View view) "," no description <br /><br />"
"android.support.v4.view.KeyEventCompat.dispatch (KeyEvent event, KeyEvent.Callback receiver, Object state, Object target) "," no description <br /><br />"
"android.support.v4.view.KeyEventCompat.isTracking (KeyEvent event) "," no description <br /><br />"
"android.support.v4.view.KeyEventCompat.hasModifiers (KeyEvent event, int modifiers) "," no description <br /><br />"
"android.support.v4.view.LayoutInflaterCompat.setFactory (LayoutInflater inflater, LayoutInflaterFactory factory) "," Attach a custom Factory interface for creating views while using this LayoutInflater. <br /><br />"
"android.support.v4.view.LayoutInflaterFactory.onCreateView (View parent, String name, Context context, AttributeSet attrs) "," Hook you can supply that is called when inflating from a LayoutInflater. <br /><br />"
"android.support.v4.view.MarginLayoutParamsCompat.getMarginStart (ViewGroup.MarginLayoutParams lp) "," Get the relative starting margin that was set. <br /><br />"
"android.support.v4.view.MarginLayoutParamsCompat.isMarginRelative (ViewGroup.MarginLayoutParams lp) "," Check if margins are relative. <br /><br />"
"android.support.v4.view.MarginLayoutParamsCompat.setMarginStart (ViewGroup.MarginLayoutParams lp, int marginStart) "," Set the relative start margin. <br /><br />"
"android.support.v4.view.MarginLayoutParamsCompat.getMarginEnd (ViewGroup.MarginLayoutParams lp) "," Get the relative ending margin that was set. <br /><br />"
"android.support.v4.view.MarginLayoutParamsCompat.setMarginEnd (ViewGroup.MarginLayoutParams lp, int marginEnd) "," Set the relative end margin. <br /><br />"
"android.support.v4.view.MarginLayoutParamsCompat.setLayoutDirection (ViewGroup.MarginLayoutParams lp, int layoutDirection) "," Set the layout direction. <br /><br />"
"android.support.v4.view.MarginLayoutParamsCompat.resolveLayoutDirection (ViewGroup.MarginLayoutParams lp, int layoutDirection)   This will be called by requestLayout () "," This will be called by requestLayout(). <br /><br />"
"android.support.v4.view.MarginLayoutParamsCompat.getLayoutDirection (ViewGroup.MarginLayoutParams lp) "," Retuns the layout direction. <br /><br />"
"android.support.v4.view.MenuCompat.setShowAsAction (MenuItem item, int actionEnum)    This method is deprecated. Use MenuItemCompat.setShowAsAction (MenuItem, int) "," This method is deprecated. Use MenuItemCompat.setShowAsAction(MenuItem, int) <br /><br />"
"android.support.v4.view.MenuItemCompat.isActionViewExpanded (MenuItem item) "," Returns true if this menu item's action view has been expanded. <br /><br />"
"android.support.v4.view.MenuItemCompat.setShowAsAction (MenuItem item, int actionEnum) "," Sets how this item should display in the presence of a compatible Action Bar. <br /><br />"
"android.support.v4.view.MenuItemCompat.collapseActionView (MenuItem item) "," Collapse the action view associated with this menu item. <br /><br />"
"android.support.v4.view.MenuItemCompat.setActionProvider (MenuItem item, ActionProvider provider) "," Sets the ActionProvider responsible for creating an action view if the item is placed on the action bar. <br /><br />"
"android.support.v4.view.MenuItemCompat.setOnActionExpandListener (MenuItem item, MenuItemCompat.OnActionExpandListener listener) "," Set an MenuItemCompat.OnActionExpandListener on this menu item to be notified when the associated action view is expanded or collapsed. <br /><br />"
"android.support.v4.view.MenuItemCompat.getActionProvider (MenuItem item) "," Gets the ActionProvider. <br /><br />"
"android.support.v4.view.MenuItemCompat.expandActionView (MenuItem item) "," Expand the action view associated with this menu item. <br /><br />"
"android.support.v4.view.MenuItemCompat.setActionView (MenuItem item, View view) "," Set an action view for this menu item. <br /><br />"
"android.support.v4.view.MenuItemCompat.setActionView (MenuItem item, int resId) "," Set an action view for this menu item. <br /><br />"
"android.support.v4.view.MenuItemCompat.getActionView (MenuItem item) "," Returns the currently set action view for this menu item. <br /><br />"
"android.support.v4.view.MenuItemCompat.OnActionExpandListener.onMenuItemActionCollapse (MenuItem item) "," Called when a menu item with SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW is collapsed. <br /><br />"
"android.support.v4.view.MenuItemCompat.OnActionExpandListener.onMenuItemActionExpand (MenuItem item) "," Called when a menu item with SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW is expanded. <br /><br />"
"android.support.v4.view.MotionEventCompat.getSource (MotionEvent event) "," Gets the source of the event. <br /><br />"
"android.support.v4.view.MotionEventCompat.getAxisValue (MotionEvent event, int axis)   Get axis value for the first pointer index  (may be an arbitrary pointer identifier) "," Get axis value for the first pointer index (may be an arbitrary pointer identifier). <br /><br />"
"android.support.v4.view.MotionEventCompat.getY (MotionEvent event, int pointerIndex)   Call getY (int) "," Call getY(int). <br /><br />"
"android.support.v4.view.MotionEventCompat.findPointerIndex (MotionEvent event, int pointerId)   Call findPointerIndex (int) "," Call findPointerIndex(int). <br /><br />"
"android.support.v4.view.MotionEventCompat.getPointerId (MotionEvent event, int pointerIndex)   Call getPointerId (int) "," Call getPointerId(int). <br /><br />"
"android.support.v4.view.MotionEventCompat.getActionMasked (MotionEvent event)   Call getAction () "," Call getAction(), returning only the ACTION_MASK portion. <br /><br />"
"android.support.v4.view.MotionEventCompat.getX (MotionEvent event, int pointerIndex)   Call getX (int) "," Call getX(int). <br /><br />"
"android.support.v4.view.MotionEventCompat.getAxisValue (MotionEvent event, int axis, int pointerIndex)   Returns the value of the requested axis for the given pointer index  (use getPointerId (MotionEvent, int) to find the pointer identifier for this index) "," Returns the value of the requested axis for the given pointer index (use getPointerId(MotionEvent, int) to find the pointer identifier for this index). <br /><br />"
"android.support.v4.view.MotionEventCompat.getActionIndex (MotionEvent event)   Call getAction () "," Call getAction(), returning only the pointer index portion <br /><br />"
"android.support.v4.view.MotionEventCompat.getPointerCount (MotionEvent event) "," The number of pointers of data contained in this event. <br /><br />"
"android.support.v4.view.NestedScrollingChild.dispatchNestedPreScroll (int dx, int dy, int[] consumed, int[] offsetInWindow) "," Dispatch one step of a nested scroll in progress before this view consumes any portion of it. <br /><br />"
"android.support.v4.view.NestedScrollingChild.setNestedScrollingEnabled (boolean enabled) "," Enable or disable nested scrolling for this view. <br /><br />"
"android.support.v4.view.NestedScrollingChild.dispatchNestedScroll (int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int[] offsetInWindow) "," Dispatch one step of a nested scroll in progress. <br /><br />"
"android.support.v4.view.NestedScrollingChild.stopNestedScroll () "," Stop a nested scroll in progress. <br /><br />"
"android.support.v4.view.NestedScrollingChild.hasNestedScrollingParent () "," Returns true if this view has a nested scrolling parent. <br /><br />"
"android.support.v4.view.NestedScrollingChild.isNestedScrollingEnabled () "," Returns true if nested scrolling is enabled for this view. <br /><br />"
"android.support.v4.view.NestedScrollingChild.dispatchNestedPreFling (float velocityX, float velocityY) "," Dispatch a fling to a nested scrolling parent before it is processed by this view. <br /><br />"
"android.support.v4.view.NestedScrollingChild.startNestedScroll (int axes) "," Begin a nestable scroll operation along the given axes. <br /><br />"
"android.support.v4.view.NestedScrollingChild.dispatchNestedFling (float velocityX, float velocityY, boolean consumed) "," Dispatch a fling to a nested scrolling parent. <br /><br />"
"android.support.v4.view.NestedScrollingChildHelper.onDetachedFromWindow () "," View subclasses should always call this method on their NestedScrollingChildHelper when detached from a window. <br /><br />"
"android.support.v4.view.NestedScrollingChildHelper.dispatchNestedPreScroll (int dx, int dy, int[] consumed, int[] offsetInWindow) "," Dispatch one step of a nested pre-scrolling operation to the current nested scrolling parent. <br /><br />"
"android.support.v4.view.NestedScrollingChildHelper.setNestedScrollingEnabled (boolean enabled) "," Enable nested scrolling. <br /><br />"
"android.support.v4.view.NestedScrollingChildHelper.dispatchNestedScroll (int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int[] offsetInWindow) "," Dispatch one step of a nested scrolling operation to the current nested scrolling parent. <br /><br />"
"android.support.v4.view.NestedScrollingChildHelper.onStopNestedScroll (View child) "," Called when a nested scrolling child stops its current nested scroll operation. <br /><br />"
"android.support.v4.view.NestedScrollingChildHelper.stopNestedScroll () "," Stop a nested scroll in progress. <br /><br />"
"android.support.v4.view.NestedScrollingChildHelper.hasNestedScrollingParent () "," Check if this view has a nested scrolling parent view currently receiving events for a nested scroll in progress. <br /><br />"
"android.support.v4.view.NestedScrollingChildHelper.isNestedScrollingEnabled () "," Check if nested scrolling is enabled for this view. <br /><br />"
"android.support.v4.view.NestedScrollingChildHelper.dispatchNestedPreFling (float velocityX, float velocityY) "," Dispatch a nested pre-fling operation to the current nested scrolling parent. <br /><br />"
"android.support.v4.view.NestedScrollingChildHelper.startNestedScroll (int axes) "," Start a new nested scroll for this view. <br /><br />"
"android.support.v4.view.NestedScrollingChildHelper.dispatchNestedFling (float velocityX, float velocityY, boolean consumed) "," Dispatch a nested fling operation to the current nested scrolling parent. <br /><br />"
"android.support.v4.view.NestedScrollingParent.onNestedScroll (View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed) "," React to a nested scroll in progress. <br /><br />"
"android.support.v4.view.NestedScrollingParent.onNestedPreScroll (View target, int dx, int dy, int[] consumed) "," React to a nested scroll in progress before the target view consumes a portion of the scroll. <br /><br />"
"android.support.v4.view.NestedScrollingParent.onStartNestedScroll (View child, View target, int nestedScrollAxes) "," React to a descendant view initiating a nestable scroll operation, claiming the nested scroll operation if appropriate. <br /><br />"
"android.support.v4.view.NestedScrollingParent.onNestedScrollAccepted (View child, View target, int nestedScrollAxes) "," React to the successful claiming of a nested scroll operation. <br /><br />"
"android.support.v4.view.NestedScrollingParent.getNestedScrollAxes () "," Return the current axes of nested scrolling for this NestedScrollingParent. <br /><br />"
"android.support.v4.view.NestedScrollingParent.onNestedFling (View target, float velocityX, float velocityY, boolean consumed) "," Request a fling from a nested scroll. <br /><br />"
"android.support.v4.view.NestedScrollingParent.onNestedPreFling (View target, float velocityX, float velocityY) "," React to a nested fling before the target view consumes it. <br /><br />"
"android.support.v4.view.NestedScrollingParent.onStopNestedScroll (View target) "," React to a nested scroll operation ending. <br /><br />"
"android.support.v4.view.NestedScrollingParentHelper.getNestedScrollAxes () "," Return the current axes of nested scrolling for this ViewGroup. <br /><br />"
"android.support.v4.view.NestedScrollingParentHelper.onNestedScrollAccepted (View child, View target, int axes) "," Called when a nested scrolling operation initiated by a descendant view is accepted by this ViewGroup. <br /><br />"
"android.support.v4.view.OnApplyWindowInsetsListener.onApplyWindowInsets (View v, WindowInsetsCompat insets)   When "," When set on a View, this listener method will be called instead of the view's own onApplyWindowInsets method. <br /><br />"
"android.support.v4.view.PagerAdapter.unregisterDataSetObserver (DataSetObserver observer) "," Unregister an observer from callbacks related to the adapter's data changing. <br /><br />"
"android.support.v4.view.PagerAdapter.saveState () "," Save any instance state associated with this adapter and its pages that should be restored if the current UI state needs to be reconstructed. <br /><br />"
"android.support.v4.view.PagerAdapter.registerDataSetObserver (DataSetObserver observer) "," Register an observer to receive callbacks related to the adapter's data changing. <br /><br />"
"android.support.v4.view.PagerAdapter.finishUpdate (ViewGroup container) "," Called when the a change in the shown pages has been completed. <br /><br />"
"android.support.v4.view.PagerAdapter.getPageWidth (int position) "," Returns the proportional width of a given page as a percentage of the ViewPager's measured width from (0.f-1.f] <br /><br />"
"android.support.v4.view.PagerAdapter.getCount () "," Return the number of views available. <br /><br />"
"android.support.v4.view.PagerAdapter.startUpdate (ViewGroup container) "," Called when a change in the shown pages is going to start being made. <br /><br />"
"android.support.v4.view.PagerAdapter.restoreState (Parcelable state, ClassLoader loader)   Restore any instance state associated with this adapter and its pages that was previously saved by saveState () "," Restore any instance state associated with this adapter and its pages that was previously saved by saveState(). <br /><br />"
"android.support.v4.view.PagerAdapter.setPrimaryItem (ViewGroup container, int position, Object object) "," Called to inform the adapter of which item is currently considered to be the 'primary', that is the one show to the user as the current page. <br /><br />"
"android.support.v4.view.PagerAdapter.instantiateItem (View container, int position)    This method is deprecated. Use instantiateItem (ViewGroup, int) "," This method is deprecated. Use instantiateItem(ViewGroup, int) <br /><br />"
"android.support.v4.view.PagerAdapter.getItemPosition (Object object) "," Called when the host view is attempting to determine if an item's position has changed. <br /><br />"
"android.support.v4.view.PagerAdapter.instantiateItem (ViewGroup container, int position) "," Create the page for the given position. <br /><br />"
"android.support.v4.view.PagerAdapter.setPrimaryItem (View container, int position, Object object)    This method is deprecated. Use setPrimaryItem (ViewGroup, int, Object) "," This method is deprecated. Use setPrimaryItem(ViewGroup, int, Object) <br /><br />"
"android.support.v4.view.PagerAdapter.destroyItem (ViewGroup container, int position, Object object) "," Remove a page for the given position. <br /><br />"
"android.support.v4.view.PagerAdapter.getPageTitle (int position) "," This method may be called by the ViewPager to obtain a title string to describe the specified page. <br /><br />"
"android.support.v4.view.PagerAdapter.destroyItem (View container, int position, Object object)    This method is deprecated. Use destroyItem (ViewGroup, int, Object) "," This method is deprecated. Use destroyItem(ViewGroup, int, Object) <br /><br />"
"android.support.v4.view.PagerAdapter.startUpdate (View container)    This method is deprecated. Use startUpdate (ViewGroup) "," This method is deprecated. Use startUpdate(ViewGroup) <br /><br />"
"android.support.v4.view.PagerAdapter.finishUpdate (View container)    This method is deprecated. Use finishUpdate (ViewGroup) "," This method is deprecated. Use finishUpdate(ViewGroup) <br /><br />"
"android.support.v4.view.PagerAdapter.isViewFromObject (View view, Object object)   Determines whether a page View is associated with a specific key object as returned by instantiateItem (ViewGroup, int) "," Determines whether a page View is associated with a specific key object as returned by instantiateItem(ViewGroup, int). <br /><br />"
"android.support.v4.view.PagerAdapter.notifyDataSetChanged () "," This method should be called by the application if the data backing this adapter has changed and associated views should update. <br /><br />"
"android.support.v4.view.PagerTabStrip.getTabIndicatorColor () "," no description <br /><br />"
"android.support.v4.view.PagerTabStrip.setBackgroundColor (int color) "," Sets the background color for this view. <br /><br />"
"android.support.v4.view.PagerTabStrip.setPadding (int left, int top, int right, int bottom) "," Sets the padding. <br /><br />"
"android.support.v4.view.PagerTabStrip.setBackgroundResource (int resId) "," Set the background to a given resource. <br /><br />"
"android.support.v4.view.PagerTabStrip.setTabIndicatorColor (int color) "," Set the color of the tab indicator bar. <br /><br />"
"android.support.v4.view.PagerTabStrip.getDrawFullUnderline () "," Return whether or not this tab strip will draw a full-width underline. <br /><br />"
"android.support.v4.view.PagerTabStrip.setDrawFullUnderline (boolean drawFull) "," Set whether this tab strip should draw a full-width underline in the current tab indicator color. <br /><br />"
"android.support.v4.view.PagerTabStrip.setTextSpacing (int textSpacing) "," Set the required spacing between title segments. <br /><br />"
"android.support.v4.view.PagerTabStrip.onTouchEvent (MotionEvent ev) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.support.v4.view.PagerTabStrip.setTabIndicatorColorResource (int resId) "," Set the color of the tab indicator bar from a color resource. <br /><br />"
"android.support.v4.view.PagerTabStrip.setBackgroundDrawable (Drawable d)    This method is deprecated. use setBackground (Drawable) "," This method is deprecated. use setBackground(Drawable) instead <br /><br />"
"android.support.v4.view.PagerTitleStrip.setTextSpacing (int spacingPixels) "," Set the required spacing between title segments. <br /><br />"
"android.support.v4.view.PagerTitleStrip.setGravity (int gravity) "," Set the Gravity used to position text within the title strip. <br /><br />"
"android.support.v4.view.PagerTitleStrip.setTextColor (int color) "," Set the color value used as the base color for all displayed page titles. <br /><br />"
"android.support.v4.view.PagerTitleStrip.setNonPrimaryAlpha (float alpha) "," Set the alpha value used for non-primary page titles. <br /><br />"
"android.support.v4.view.PagerTitleStrip.requestLayout () "," Call this when something has changed which has invalidated the layout of this view. <br /><br />"
"android.support.v4.view.PagerTitleStrip.getTextSpacing () "," no description <br /><br />"
"android.support.v4.view.PagerTitleStrip.setTextSize (int unit, float size) "," Set the default text size to a given unit and value. <br /><br />"
"android.support.v4.view.ScaleGestureDetectorCompat.isQuickScaleEnabled (Object scaleGestureDetector) "," Return whether the quick scale gesture, in which the user performs a double tap followed by a swipe, should perform scaling. <br /><br />"
"android.support.v4.view.ScaleGestureDetectorCompat.setQuickScaleEnabled (Object scaleGestureDetector, boolean enabled) "," Set whether the associated OnScaleGestureListener should receive onScale callbacks when the user performs a doubleTap followed by a swipe. <br /><br />"
"android.support.v4.view.ScrollingView.computeVerticalScrollRange () "," Compute the vertical range that the vertical scrollbar represents. <br /><br />"
"android.support.v4.view.ScrollingView.computeHorizontalScrollOffset () "," Compute the horizontal offset of the horizontal scrollbar's thumb within the horizontal range. <br /><br />"
"android.support.v4.view.ScrollingView.computeVerticalScrollOffset () "," Compute the vertical offset of the vertical scrollbar's thumb within the horizontal range. <br /><br />"
"android.support.v4.view.ScrollingView.computeHorizontalScrollRange () "," Compute the horizontal range that the horizontal scrollbar represents. <br /><br />"
"android.support.v4.view.ScrollingView.computeVerticalScrollExtent () "," Compute the vertical extent of the vertical scrollbar's thumb within the vertical range. <br /><br />"
"android.support.v4.view.ScrollingView.computeHorizontalScrollExtent () "," Compute the horizontal extent of the horizontal scrollbar's thumb within the horizontal range. <br /><br />"
"android.support.v4.view.TintableBackgroundView.getSupportBackgroundTintList () "," Return the tint applied to the background drawable, if specified. <br /><br />"
"android.support.v4.view.TintableBackgroundView.setSupportBackgroundTintList (ColorStateList tint) "," Applies a tint to the background drawable. <br /><br />"
"android.support.v4.view.TintableBackgroundView.getSupportBackgroundTintMode () "," Return the blending mode used to apply the tint to the background drawable, if specified. <br /><br />"
"android.support.v4.view.TintableBackgroundView.setSupportBackgroundTintMode (PorterDuff.Mode tintMode)   Specifies the blending mode used to apply the tint specified by setSupportBackgroundTintList (ColorStateList) "," Specifies the blending mode used to apply the tint specified by setSupportBackgroundTintList(ColorStateList)} to the background drawable. <br /><br />"
"android.support.v4.view.VelocityTrackerCompat.getYVelocity (VelocityTracker tracker, int pointerId)   Call getYVelocity (int) "," Call getYVelocity(int). <br /><br />"
"android.support.v4.view.VelocityTrackerCompat.getXVelocity (VelocityTracker tracker, int pointerId)   Call getXVelocity (int) "," Call getXVelocity(int). <br /><br />"
"android.support.v4.view.ViewCompat.canScrollVertically (View v, int direction) "," Check if this view can be scrolled vertically in a certain direction. <br /><br />"
"android.support.v4.view.ViewCompat.getOverScrollMode (View v) "," Returns the over-scroll mode for this view. <br /><br />"
"android.support.v4.view.ViewCompat.getMeasuredHeightAndState (View view)   Return the full height measurement information for this view as computed by the most recent call to measure (int, int) "," Return the full height measurement information for this view as computed by the most recent call to measure(int, int). <br /><br />"
"android.support.v4.view.ViewCompat.setScaleY (View view, float value) "," Sets the amount that the view is scaled in Y around the pivot point, as a proportion of the view's unscaled width. <br /><br />"
"android.support.v4.view.ViewCompat.setRotationY (View view, float value) "," Sets the degrees that the view is rotated around the vertical axis through the pivot point. <br /><br />"
"android.support.v4.view.ViewCompat.jumpDrawablesToCurrentState (View v)   On API 11 devices and above, call Drawable.jumpToCurrentState () "," On API 11 devices and above, call Drawable.jumpToCurrentState() on all Drawable objects associated with this view. <br /><br />"
"android.support.v4.view.ViewCompat.setRotation (View view, float value) "," Sets the degrees that the view is rotated around the pivot point. <br /><br />"
"android.support.v4.view.ViewCompat.setAccessibilityDelegate (View v, AccessibilityDelegateCompat delegate) "," Sets a delegate for implementing accessibility support via compositon as opposed to inheritance. <br /><br />"
"android.support.v4.view.ViewCompat.dispatchApplyWindowInsets (View view, WindowInsetsCompat insets) "," Request to apply the given window insets to this view or another view in its subtree. <br /><br />"
"android.support.v4.view.ViewCompat.getY (View view) "," no description <br /><br />"
"android.support.v4.view.ViewCompat.getLayerType (View view) "," Indicates what type of layer is currently associated with this view. <br /><br />"
"android.support.v4.view.ViewCompat.dispatchNestedPreFling (View view, float velocityX, float velocityY) "," Dispatch a fling to a nested scrolling parent before it is processed by this view. <br /><br />"
"android.support.v4.view.ViewCompat.getBackgroundTintMode (View view) "," Return the blending mode used to apply the tint to the background drawable, if specified. <br /><br />"
"android.support.v4.view.ViewCompat.getFitsSystemWindows (View v) "," Returns true if this view should adapt to fit system window insets. <br /><br />"
"android.support.v4.view.ViewCompat.setNestedScrollingEnabled (View view, boolean enabled) "," Enable or disable nested scrolling for this view. <br /><br />"
"android.support.v4.view.ViewCompat.getRotationX (View view) "," no description <br /><br />"
"android.support.v4.view.ViewCompat.dispatchNestedFling (View view, float velocityX, float velocityY, boolean consumed) "," Dispatch a fling to a nested scrolling parent. <br /><br />"
"android.support.v4.view.ViewCompat.onInitializeAccessibilityEvent (View v, AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.support.v4.view.ViewCompat.getAccessibilityLiveRegion (View view) "," Gets the live region mode for the specified View. <br /><br />"
"android.support.v4.view.ViewCompat.setScaleX (View view, float value) "," Sets the amount that the view is scaled in x around the pivot point, as a proportion of the view's unscaled width. <br /><br />"
"android.support.v4.view.ViewCompat.getPivotX (View view)   The x location of the point around which the view is rotated and "," The x location of the point around which the view is rotated and scaled. <br /><br />"
"android.support.v4.view.ViewCompat.setImportantForAccessibility (View view, int mode) "," Sets how to determine whether this view is important for accessibility which is if it fires accessibility events and if it is reported to accessibility services that query the screen. <br /><br />"
"android.support.v4.view.ViewCompat.postInvalidateOnAnimation (View view) "," Cause an invalidate to happen on the next animation time step, typically the next display frame. <br /><br />"
"android.support.v4.view.ViewCompat.setAlpha (View view, float value) "," Sets the opacity of the view. <br /><br />"
"android.support.v4.view.ViewCompat.setOverScrollMode (View v, int overScrollMode) "," Set the over-scroll mode for this view. <br /><br />"
"android.support.v4.view.ViewCompat.getBackgroundTintList (View view) "," Return the tint applied to the background drawable, if specified. <br /><br />"
"android.support.v4.view.ViewCompat.setRotationX (View view, float value) "," Sets the degrees that the view is rotated around the horizontal axis through the pivot point. <br /><br />"
"android.support.v4.view.ViewCompat.dispatchStartTemporaryDetach (View view) "," Notify a view that it is being temporarily detached. <br /><br />"
"android.support.v4.view.ViewCompat.startNestedScroll (View view, int axes) "," Begin a nestable scroll operation along the given axes. <br /><br />"
"android.support.v4.view.ViewCompat.getRotationY (View view) "," no description <br /><br />"
"android.support.v4.view.ViewCompat.getPaddingStart (View view) "," Returns the start padding of the specified view depending on its resolved layout direction. <br /><br />"
"android.support.v4.view.ViewCompat.dispatchNestedScroll (View view, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int[] offsetInWindow) "," Dispatch one step of a nested scroll in progress. <br /><br />"
"android.support.v4.view.ViewCompat.setLabelFor (View view, int labeledId) "," Sets the id of a view for which a given view serves as a label for accessibility purposes. <br /><br />"
"android.support.v4.view.ViewCompat.getPivotY (View view)   The y location of the point around which the view is rotated and "," The y location of the point around which the view is rotated and scaled. <br /><br />"
"android.support.v4.view.ViewCompat.postInvalidateOnAnimation (View view, int left, int top, int right, int bottom) "," Cause an invalidate of the specified area to happen on the next animation time step, typically the next display frame. <br /><br />"
"android.support.v4.view.ViewCompat.setPivotY (View view, float value)   Sets the y location of the point around which the view is rotated and "," Sets the y location of the point around which the view is rotated and scaled. <br /><br />"
"android.support.v4.view.ViewCompat.getMinimumHeight (View view) "," Returns the minimum height of the view. <br /><br />"
"android.support.v4.view.ViewCompat.getParentForAccessibility (View view) "," Gets the parent for accessibility purposes. <br /><br />"
"android.support.v4.view.ViewCompat.requestApplyInsets (View view)   Ask that a new dispatch of View.onApplyWindowInsets (WindowInsets) "," Ask that a new dispatch of View.onApplyWindowInsets(WindowInsets) be performed. <br /><br />"
"android.support.v4.view.ViewCompat.setPaddingRelative (View view, int start, int top, int end, int bottom) "," Sets the relative padding. <br /><br />"
"android.support.v4.view.ViewCompat.isNestedScrollingEnabled (View view) "," Returns true if nested scrolling is enabled for this view. <br /><br />"
"android.support.v4.view.ViewCompat.isOpaque (View view) "," Indicates whether this View is opaque. <br /><br />"
"android.support.v4.view.ViewCompat.setAccessibilityLiveRegion (View view, int mode) "," Sets the live region mode for the specified view. <br /><br />"
"android.support.v4.view.ViewCompat.setHasTransientState (View view, boolean hasTransientState) "," Set whether this view is currently tracking transient state that the framework should attempt to preserve when possible. <br /><br />"
"android.support.v4.view.ViewCompat.setY (View view, float value) "," Sets the visual y position of this view, in pixels. <br /><br />"
"android.support.v4.view.ViewCompat.postOnAnimationDelayed (View view, Runnable action, long delayMillis) "," Causes the Runnable to execute on the next animation time step, after the specified amount of time elapses. <br /><br />"
"android.support.v4.view.ViewCompat.setFitsSystemWindows (View view, boolean fitSystemWindows)   Sets whether or not this view should account for system screen decorations such as the status bar and inset its content; that is, controlling whether the default implementation of fitSystemWindows (Rect) "," Sets whether or not this view should account for system screen decorations such as the status bar and inset its content; that is, controlling whether the default implementation of fitSystemWindows(Rect) will be executed. <br /><br />"
"android.support.v4.view.ViewCompat.setLayerPaint (View view, Paint paint)   Updates the Paint object used with the current layer  (used only if the current layer type is not set to LAYER_TYPE_NONE) "," Updates the Paint object used with the current layer (used only if the current layer type is not set to LAYER_TYPE_NONE). <br /><br />"
"android.support.v4.view.ViewCompat.isLaidOut (View view) "," Returns true if view has been through at least one layout since it was last attached to or detached from a window. <br /><br />"
"android.support.v4.view.ViewCompat.animate (View view) "," This method returns a ViewPropertyAnimator object, which can be used to animate specific properties on this View. <br /><br />"
"android.support.v4.view.ViewCompat.stopNestedScroll (View view) "," Stop a nested scroll in progress. <br /><br />"
"android.support.v4.view.ViewCompat.setPivotX (View view, float value)   Sets the x location of the point around which the view is rotated and "," Sets the x location of the point around which the view is rotated and scaled. <br /><br />"
"android.support.v4.view.ViewCompat.setLayoutDirection (View view, int layoutDirection) "," Set the layout direction for this view. <br /><br />"
"android.support.v4.view.ViewCompat.hasTransientState (View view) "," Indicates whether the view is currently tracking transient state that the app should not need to concern itself with saving and restoring, but that the framework should take special note to preserve when possible. <br /><br />"
"android.support.v4.view.ViewCompat.hasNestedScrollingParent (View view) "," Returns true if this view has a nested scrolling parent. <br /><br />"
"android.support.v4.view.ViewCompat.getTranslationY (View view)   The vertical location of this view relative to its "," The vertical location of this view relative to its left position. <br /><br />"
"android.support.v4.view.ViewCompat.getLabelFor (View view) "," Gets the id of a view for which a given view serves as a label for accessibility purposes. <br /><br />"
"android.support.v4.view.ViewCompat.setElevation (View view, float elevation) "," Sets the base elevation of this view, in pixels. <br /><br />"
"android.support.v4.view.ViewCompat.setTranslationZ (View view, float translationZ)   Sets the depth location of this view relative to its "," Sets the depth location of this view relative to its elevation. <br /><br />"
"android.support.v4.view.ViewCompat.setChildrenDrawingOrderEnabled (ViewGroup viewGroup, boolean enabled)   Tells the ViewGroup whether to draw its children in the order defined by the method ViewGroup.getChildDrawingOrder (int, int) "," Tells the ViewGroup whether to draw its children in the order defined by the method ViewGroup.getChildDrawingOrder(int, int). <br /><br />"
"android.support.v4.view.ViewCompat.onInitializeAccessibilityNodeInfo (View v, AccessibilityNodeInfoCompat info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.support.v4.view.ViewCompat.resolveSizeAndState (int size, int measureSpec, int childMeasuredState) "," Utility to reconcile a desired size and state, with constraints imposed by a MeasureSpec. <br /><br />"
"android.support.v4.view.ViewCompat.setBackgroundTintList (View view, ColorStateList tintList) "," Applies a tint to the background drawable. <br /><br />"
"android.support.v4.view.ViewCompat.getWindowSystemUiVisibility (View view) "," Returns the current system UI visibility that is currently set for the entire window. <br /><br />"
"android.support.v4.view.ViewCompat.setBackgroundTintMode (View view, PorterDuff.Mode mode)   Specifies the blending mode used to apply the tint specified by setBackgroundTintList (android.view.View, android.content.res.ColorStateList) "," Specifies the blending mode used to apply the tint specified by setBackgroundTintList(android.view.View, android.content.res.ColorStateList) to the background drawable. <br /><br />"
"android.support.v4.view.ViewCompat.getMinimumWidth (View view) "," Returns the minimum width of the view. <br /><br />"
"android.support.v4.view.ViewCompat.getTranslationX (View view)   The horizontal location of this view relative to its "," The horizontal location of this view relative to its left position. <br /><br />"
"android.support.v4.view.ViewCompat.performAccessibilityAction (View view, int action, Bundle arguments) "," Performs the specified accessibility action on the view. <br /><br />"
"android.support.v4.view.ViewCompat.getScaleY (View view) "," no description <br /><br />"
"android.support.v4.view.ViewCompat.getPaddingEnd (View view) "," Returns the end padding of the specified view depending on its resolved layout direction. <br /><br />"
"android.support.v4.view.ViewCompat.setSaveFromParentEnabled (View v, boolean enabled) "," Controls whether the entire hierarchy under this view will save its state when a state saving traversal occurs from its parent. <br /><br />"
"android.support.v4.view.ViewCompat.setTranslationY (View view, float value) "," Sets the vertical location of this view relative to its top position. <br /><br />"
"android.support.v4.view.ViewCompat.onPopulateAccessibilityEvent (View v, AccessibilityEvent event)   Called from dispatchPopulateAccessibilityEvent (AccessibilityEvent) "," Called from dispatchPopulateAccessibilityEvent(AccessibilityEvent) giving a chance to this View to populate the accessibility event with its text content. <br /><br />"
"android.support.v4.view.ViewCompat.dispatchFinishTemporaryDetach (View view) "," Notify a view that its temporary detach has ended; the view is now reattached. <br /><br />"
"android.support.v4.view.ViewCompat.getMeasuredState (View view)   Return only the state bits of getMeasuredWidthAndState (View) and getMeasuredHeightAndState (View) "," Return only the state bits of getMeasuredWidthAndState(View) and getMeasuredHeightAndState(View), combined into one integer. <br /><br />"
"android.support.v4.view.ViewCompat.dispatchNestedPreScroll (View view, int dx, int dy, int[] consumed, int[] offsetInWindow) "," Dispatch one step of a nested scroll in progress before this view consumes any portion of it. <br /><br />"
"android.support.v4.view.ViewCompat.hasAccessibilityDelegate (View v) "," Checks whether provided View has an accessibility delegate attached to it. <br /><br />"
"android.support.v4.view.ViewCompat.canScrollHorizontally (View v, int direction) "," Check if this view can be scrolled horizontally in a certain direction. <br /><br />"
"android.support.v4.view.ViewCompat.setTransitionName (View view, String transitionName) "," Sets the name of the View to be used to identify Views in Transitions. <br /><br />"
"android.support.v4.view.ViewCompat.isPaddingRelative (View view)   Return if the padding as been set through relative values View.setPaddingRelative (int, int, int, int) "," Return if the padding as been set through relative values View.setPaddingRelative(int, int, int, int) or thru <br /><br />"
"android.support.v4.view.ViewCompat.setTranslationX (View view, float value) "," Sets the horizontal location of this view relative to its left position. <br /><br />"
"android.support.v4.view.ViewCompat.getAlpha (View view) "," The opacity of the view. <br /><br />"
"android.support.v4.view.ViewCompat.getLayoutDirection (View view) "," Returns the resolved layout direction for this view. <br /><br />"
"android.support.v4.view.ViewCompat.setLayerType (View view, int layerType, Paint paint) "," Specifies the type of layer backing this view. <br /><br />"
"android.support.v4.view.ViewCompat.getMeasuredWidthAndState (View view)   Return the full width measurement information for this view as computed by the most recent call to measure (int, int) "," Return the full width measurement information for this view as computed by the most recent call to measure(int, int). <br /><br />"
"android.support.v4.view.ViewCompat.setX (View view, float value) "," Sets the visual x position of this view, in pixels. <br /><br />"
"android.support.v4.view.ViewCompat.getX (View view) "," no description <br /><br />"
"android.support.v4.view.ViewCompat.getScaleX (View view) "," no description <br /><br />"
"android.support.v4.view.ViewCompat.onApplyWindowInsets (View view, WindowInsetsCompat insets) "," Called when the view should apply WindowInsetsCompat according to its internal policy. <br /><br />"
"android.support.v4.view.ViewCompat.setOnApplyWindowInsetsListener (View v, OnApplyWindowInsetsListener listener) "," Set an OnApplyWindowInsetsListener to take over the policy for applying window insets to this view. <br /><br />"
"android.support.v4.view.ViewCompat.postOnAnimation (View view, Runnable action) "," Causes the Runnable to execute on the next animation time step. <br /><br />"
"android.support.v4.view.ViewCompat.getTranslationZ (View view)   The depth location of this view relative to its "," The depth location of this view relative to its elevation. <br /><br />"
"android.support.v4.view.ViewCompat.getImportantForAccessibility (View view) "," Gets the mode for determining whether this View is important for accessibility which is if it fires accessibility events and if it is reported to accessibility services that query the screen. <br /><br />"
"android.support.v4.view.ViewCompat.getAccessibilityNodeProvider (View view) "," Gets the provider for managing a virtual view hierarchy rooted at this View and reported to AccessibilityServices that explore the window content. <br /><br />"
"android.support.v4.view.ViewCompat.getTransitionName (View view) "," Returns the name of the View to be used to identify Views in Transitions. <br /><br />"
"android.support.v4.view.ViewCompat.setActivated (View view, boolean activated) "," Changes the activated state of this view. <br /><br />"
"android.support.v4.view.ViewCompat.getElevation (View view) "," The base elevation of this view relative to its parent, in pixels. <br /><br />"
"android.support.v4.view.ViewCompat.getRotation (View view) "," no description <br /><br />"
"android.support.v4.view.ViewConfigurationCompat.getScaledPagingTouchSlop (ViewConfiguration config)   Call getScaledPagingTouchSlop () "," Call getScaledPagingTouchSlop(). <br /><br />"
"android.support.v4.view.ViewConfigurationCompat.hasPermanentMenuKey (ViewConfiguration config) "," Report if the device has a permanent menu key available to the user, in a backwards compatible way. <br /><br />"
"android.support.v4.view.ViewGroupCompat.setLayoutMode (ViewGroup group, int mode) "," Sets the basis of alignment during the layout of this ViewGroup. <br /><br />"
"android.support.v4.view.ViewGroupCompat.onRequestSendAccessibilityEvent (ViewGroup group, View child, AccessibilityEvent event) "," Called when a child has requested sending an AccessibilityEvent and gives an opportunity to its parent to augment the event. <br /><br />"
"android.support.v4.view.ViewGroupCompat.getLayoutMode (ViewGroup group) "," Returns the basis of alignment during layout operations on this ViewGroup: either LAYOUT_MODE_CLIP_BOUNDS or LAYOUT_MODE_OPTICAL_BOUNDS. <br /><br />"
"android.support.v4.view.ViewGroupCompat.setMotionEventSplittingEnabled (ViewGroup group, boolean split) "," Enable or disable the splitting of MotionEvents to multiple children during touch event dispatch. <br /><br />"
"android.support.v4.view.ViewGroupCompat.setTransitionGroup (ViewGroup group, boolean isTransitionGroup) "," Changes whether or not this ViewGroup should be treated as a single entity during Activity Transitions. <br /><br />"
"android.support.v4.view.ViewGroupCompat.getNestedScrollAxes (ViewGroup group) "," Return the current axes of nested scrolling for this ViewGroup. <br /><br />"
"android.support.v4.view.ViewGroupCompat.isTransitionGroup (ViewGroup group) "," Returns true if this ViewGroup should be considered as a single entity for removal when executing an Activity transition. <br /><br />"
"android.support.v4.view.ViewPager.addView (View child, int index, ViewGroup.LayoutParams params) "," Adds a child view with the specified layout parameters. <br /><br />"
"android.support.v4.view.ViewPager.addTouchables (ArrayList< View> views) "," We only want the current page that is being shown to be touchable. <br /><br />"
"android.support.v4.view.ViewPager.onRestoreInstanceState (Parcelable state)   Hook allowing a view to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState () "," Hook allowing a view to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState(). <br /><br />"
"android.support.v4.view.ViewPager.dispatchPopulateAccessibilityEvent (AccessibilityEvent event) "," Dispatches an AccessibilityEvent to the View first and then to its children for adding their text content to the event. <br /><br />"
"android.support.v4.view.ViewPager.setPageMargin (int marginPixels) "," Set the margin between pages. <br /><br />"
"android.support.v4.view.ViewPager.setCurrentItem (int item, boolean smoothScroll) "," Set the currently selected page. <br /><br />"
"android.support.v4.view.ViewPager.removeView (View view)   Note: do not invoke this method from draw (android.graphics.Canvas), onDraw (android.graphics.Canvas), dispatchDraw (android.graphics.Canvas) "," Note: do not invoke this method from draw(android.graphics.Canvas), onDraw(android.graphics.Canvas), dispatchDraw(android.graphics.Canvas) or any related method. <br /><br />"
"android.support.v4.view.ViewPager.onSaveInstanceState () "," Hook allowing a view to generate a representation of its internal state that can later be used to create a new instance with that same state. <br /><br />"
"android.support.v4.view.ViewPager.canScrollHorizontally (int direction) "," Check if this view can be scrolled horizontally in a certain direction. <br /><br />"
"android.support.v4.view.ViewPager.arrowScroll (int direction) "," no description <br /><br />"
"android.support.v4.view.ViewPager.beginFakeDrag () "," Start a fake drag of the pager. <br /><br />"
"android.support.v4.view.ViewPager.endFakeDrag () "," End a fake drag of the pager. <br /><br />"
"android.support.v4.view.ViewPager.addFocusables (ArrayList< View> views, int direction, int focusableMode) "," We only want the current page that is being shown to be focusable. <br /><br />"
"android.support.v4.view.ViewPager.getCurrentItem () "," no description <br /><br />"
"android.support.v4.view.ViewPager.setPageTransformer (boolean reverseDrawingOrder, ViewPager.PageTransformer transformer) "," Set a ViewPager.PageTransformer that will be called for each attached page whenever the scroll position is changed. <br /><br />"
"android.support.v4.view.ViewPager.dispatchKeyEvent (KeyEvent event) "," Dispatch a key event to the next view on the focus path. <br /><br />"
"android.support.v4.view.ViewPager.setPageMarginDrawable (Drawable d) "," Set a drawable that will be used to fill the margin between pages. <br /><br />"
"android.support.v4.view.ViewPager.setOffscreenPageLimit (int limit) "," Set the number of pages that should be retained to either side of the current page in the view hierarchy in an idle state. <br /><br />"
"android.support.v4.view.ViewPager.setAdapter (PagerAdapter adapter) "," Set a PagerAdapter that will supply views for this pager as needed. <br /><br />"
"android.support.v4.view.ViewPager.getOffscreenPageLimit () "," Returns the number of pages that will be retained to either side of the current page in the view hierarchy in an idle state. <br /><br />"
"android.support.v4.view.ViewPager.isFakeDragging () "," Returns true if a fake drag is in progress. <br /><br />"
"android.support.v4.view.ViewPager.getPageMargin () "," Return the margin between pages. <br /><br />"
"android.support.v4.view.ViewPager.draw (Canvas canvas)   Manually render this view  (and all of its children) "," Manually render this view (and all of its children) to the given Canvas. <br /><br />"
"android.support.v4.view.ViewPager.setPageMarginDrawable (int resId) "," Set a drawable that will be used to fill the margin between pages. <br /><br />"
"android.support.v4.view.ViewPager.computeScroll () "," Called by a parent to request that a child update its values for mScrollX and mScrollY if necessary. <br /><br />"
"android.support.v4.view.ViewPager.setCurrentItem (int item) "," Set the currently selected page. <br /><br />"
"android.support.v4.view.ViewPager.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.support.v4.view.ViewPager.getAdapter () "," Retrieve the current adapter supplying pages. <br /><br />"
"android.support.v4.view.ViewPager.setOnPageChangeListener (ViewPager.OnPageChangeListener listener) "," Set a listener that will be invoked whenever the page changes or is incrementally scrolled. <br /><br />"
"android.support.v4.view.ViewPager.executeKeyEvent (KeyEvent event) "," You can call this function yourself to have the scroll view perform scrolling from a key event, just as if the event had been dispatched to it by the view hierarchy. <br /><br />"
"android.support.v4.view.ViewPager.onInterceptTouchEvent (MotionEvent ev) "," Implement this method to intercept all touch screen motion events. <br /><br />"
"android.support.v4.view.ViewPager.onTouchEvent (MotionEvent ev) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.support.v4.view.ViewPager.fakeDragBy (float xOffset) "," Fake drag by an offset in pixels. <br /><br />"
"android.support.v4.view.ViewPager.OnPageChangeListener.onPageSelected (int position) "," This method will be invoked when a new page becomes selected. <br /><br />"
"android.support.v4.view.ViewPager.OnPageChangeListener.onPageScrolled (int position, float positionOffset, int positionOffsetPixels) "," This method will be invoked when the current page is scrolled, either as part of a programmatically initiated smooth scroll or a user initiated touch scroll. <br /><br />"
"android.support.v4.view.ViewPager.OnPageChangeListener.onPageScrollStateChanged (int state) "," Called when the scroll state changes. <br /><br />"
"android.support.v4.view.ViewPager.PageTransformer.transformPage (View page, float position) "," Apply a property transformation to the given page. <br /><br />"
"android.support.v4.view.ViewPager.SavedState.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.support.v4.view.ViewPager.SavedState.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v4.view.ViewPager.SimpleOnPageChangeListener.onPageSelected (int position) "," This method will be invoked when a new page becomes selected. <br /><br />"
"android.support.v4.view.ViewPager.SimpleOnPageChangeListener.onPageScrolled (int position, float positionOffset, int positionOffsetPixels) "," This method will be invoked when the current page is scrolled, either as part of a programmatically initiated smooth scroll or a user initiated touch scroll. <br /><br />"
"android.support.v4.view.ViewPager.SimpleOnPageChangeListener.onPageScrollStateChanged (int state) "," Called when the scroll state changes. <br /><br />"
"android.support.v4.view.ViewParentCompat.onStopNestedScroll (ViewParent parent, View target) "," React to a nested scroll operation ending. <br /><br />"
"android.support.v4.view.ViewParentCompat.onNestedScroll (ViewParent parent, View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed) "," React to a nested scroll in progress. <br /><br />"
"android.support.v4.view.ViewParentCompat.onNestedPreFling (ViewParent parent, View target, float velocityX, float velocityY) "," React to a nested fling before the target view consumes it. <br /><br />"
"android.support.v4.view.ViewParentCompat.onNestedPreScroll (ViewParent parent, View target, int dx, int dy, int[] consumed) "," React to a nested scroll in progress before the target view consumes a portion of the scroll. <br /><br />"
"android.support.v4.view.ViewParentCompat.requestSendAccessibilityEvent (ViewParent parent, View child, AccessibilityEvent event) "," Called by a child to request from its parent to send an AccessibilityEvent. <br /><br />"
"android.support.v4.view.ViewParentCompat.onNestedFling (ViewParent parent, View target, float velocityX, float velocityY, boolean consumed) "," Request a fling from a nested scroll. <br /><br />"
"android.support.v4.view.ViewParentCompat.onNestedScrollAccepted (ViewParent parent, View child, View target, int nestedScrollAxes) "," React to the successful claiming of a nested scroll operation. <br /><br />"
"android.support.v4.view.ViewParentCompat.onStartNestedScroll (ViewParent parent, View child, View target, int nestedScrollAxes) "," React to a descendant view initiating a nestable scroll operation, claiming the nested scroll operation if appropriate. <br /><br />"
"android.support.v4.view.ViewParentCompatICS.requestSendAccessibilityEvent (ViewParent parent, View child, AccessibilityEvent event) "," no description <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.scaleXBy (float value) "," This method will cause the View's scaleX property to be animated by the specified value. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.translationX (float value) "," This method will cause the View's translationX property to be animated to the specified value. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.rotationX (float value) "," This method will cause the View's rotationX property to be animated to the specified value. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.alphaBy (float value) "," This method will cause the View's alpha property to be animated by the specified value. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.setInterpolator (Interpolator value) "," Sets the interpolator for the underlying animator that animates the requested properties. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.setDuration (long value) "," Sets the duration for the underlying animator that animates the requested properties. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.withLayer ()   The View associated with this ViewPropertyAnimator will have its "," The View associated with this ViewPropertyAnimator will have its layer type set to LAYER_TYPE_HARDWARE for the duration of the next animation. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.scaleY (float value) "," This method will cause the View's scaleY property to be animated to the specified value. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.y (float value) "," This method will cause the View's y property to be animated to the specified value. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.withEndAction (Runnable runnable) "," Specifies an action to take place when the next animation ends. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.cancel () "," Cancels all property animations that are currently running or pending. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.translationYBy (float value) "," This method will cause the View's translationY property to be animated by the specified value. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.withStartAction (Runnable runnable) "," Specifies an action to take place when the next animation runs. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.getDuration () "," Returns the current duration of property animations. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.scaleYBy (float value) "," This method will cause the View's scaleY property to be animated by the specified value. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.translationXBy (float value) "," This method will cause the View's translationX property to be animated by the specified value. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.setStartDelay (long value) "," Sets the startDelay for the underlying animator that animates the requested properties. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.rotation (float value) "," This method will cause the View's rotation property to be animated to the specified value. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.rotationYBy (float value) "," This method will cause the View's rotationY property to be animated by the specified value. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.start () "," Starts the currently pending property animations immediately. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.rotationXBy (float value) "," This method will cause the View's rotationX property to be animated by the specified value. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.getStartDelay () "," Returns the current startDelay of property animations. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.yBy (float value) "," This method will cause the View's y property to be animated by the specified value. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.xBy (float value) "," This method will cause the View's x property to be animated by the specified value. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.rotationBy (float value) "," This method will cause the View's rotation property to be animated by the specified value. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.scaleX (float value) "," This method will cause the View's scaleX property to be animated to the specified value. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.translationY (float value) "," This method will cause the View's translationY property to be animated to the specified value. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.alpha (float value) "," This method will cause the View's alpha property to be animated to the specified value. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.x (float value) "," This method will cause the View's x property to be animated to the specified value. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.setUpdateListener (ViewPropertyAnimatorUpdateListener listener) "," Sets a listener for update events in the underlying Animator that runs the property animations. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.rotationY (float value) "," This method will cause the View's rotationY property to be animated to the specified value. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.getInterpolator () "," Returns the timing interpolator that this animation uses. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorCompat.setListener (ViewPropertyAnimatorListener listener) "," Sets a listener for events in the underlying Animators that run the property animations. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorListener.onAnimationStart (View view) "," Notifies the start of the animation. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorListener.onAnimationEnd (View view) "," Notifies the end of the animation. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorListener.onAnimationCancel (View view) "," Notifies the cancellation of the animation. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorListenerAdapter.onAnimationStart (View view) "," Notifies the start of the animation. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorListenerAdapter.onAnimationEnd (View view) "," Notifies the end of the animation. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorListenerAdapter.onAnimationCancel (View view) "," Notifies the cancellation of the animation. <br /><br />"
"android.support.v4.view.ViewPropertyAnimatorUpdateListener.onAnimationUpdate (View view) "," Notifies the occurrence of another frame of the animation. <br /><br />"
"android.support.v4.view.WindowInsetsCompat.consumeStableInsets () "," Returns a copy of this WindowInsets with the stable insets fully consumed. <br /><br />"
"android.support.v4.view.WindowInsetsCompat.hasStableInsets () "," Returns true if this WindowInsets has nonzero stable insets. <br /><br />"
"android.support.v4.view.WindowInsetsCompat.isRound () "," Returns true if the associated window has a round shape. <br /><br />"
"android.support.v4.view.WindowInsetsCompat.hasSystemWindowInsets () "," Returns true if this WindowInsets has nonzero system window insets. <br /><br />"
"android.support.v4.view.WindowInsetsCompat.consumeSystemWindowInsets () "," Returns a copy of this WindowInsets with the system window insets fully consumed. <br /><br />"
"android.support.v4.view.WindowInsetsCompat.getStableInsetRight () "," Returns the right stable inset in pixels. <br /><br />"
"android.support.v4.view.WindowInsetsCompat.hasInsets () "," Returns true if this WindowInsets has any nonzero insets. <br /><br />"
"android.support.v4.view.WindowInsetsCompat.isConsumed () "," Check if these insets have been fully consumed. <br /><br />"
"android.support.v4.view.WindowInsetsCompat.getStableInsetTop () "," Returns the top stable inset in pixels. <br /><br />"
"android.support.v4.view.WindowInsetsCompat.getStableInsetBottom () "," Returns the bottom stable inset in pixels. <br /><br />"
"android.support.v4.view.WindowInsetsCompat.getSystemWindowInsetLeft () "," Returns the left system window inset in pixels. <br /><br />"
"android.support.v4.view.WindowInsetsCompat.getSystemWindowInsetBottom () "," Returns the bottom system window inset in pixels. <br /><br />"
"android.support.v4.view.WindowInsetsCompat.getSystemWindowInsetTop () "," Returns the top system window inset in pixels. <br /><br />"
"android.support.v4.view.WindowInsetsCompat.getSystemWindowInsetRight () "," Returns the right system window inset in pixels. <br /><br />"
"android.support.v4.view.WindowInsetsCompat.getStableInsetLeft () "," Returns the left stable inset in pixels. <br /><br />"
"android.support.v4.view.WindowInsetsCompat.replaceSystemWindowInsets (int left, int top, int right, int bottom) "," Returns a copy of this WindowInsets with selected system window insets replaced with new values. <br /><br />"
"android.support.v4.view.WindowInsetsCompat.replaceSystemWindowInsets (Rect systemWindowInsets) "," Returns a copy of this WindowInsets with selected system window insets replaced with new values. <br /><br />"
"android.support.v4.widget.AutoScrollHelper.canTargetScrollHorizontally (int direction) "," Override this method to return whether the target view can be scrolled horizontally in a certain direction. <br /><br />"
"android.support.v4.widget.AutoScrollHelper.setRampUpDuration (int durationMillis) "," Sets the amount of time after activation of auto-scrolling that is takes to reach target velocity for the current touch position. <br /><br />"
"android.support.v4.widget.AutoScrollHelper.setMinimumVelocity (float horizontalMin, float verticalMin) "," Sets the absolute minimum scrolling velocity. <br /><br />"
"android.support.v4.widget.AutoScrollHelper.setRelativeEdges (float horizontal, float vertical) "," Sets the activation edge size relative to the host view's dimensions. <br /><br />"
"android.support.v4.widget.AutoScrollHelper.scrollTargetBy (int deltaX, int deltaY) "," Override this method to scroll the target view by the specified number of pixels. <br /><br />"
"android.support.v4.widget.AutoScrollHelper.setEdgeType (int type) "," Sets the activation edge type, one of:  EDGE_TYPE_INSIDE for edges that respond to touches inside the bounds of the host view. <br /><br />"
"android.support.v4.widget.AutoScrollHelper.setMaximumVelocity (float horizontalMax, float verticalMax) "," Sets the absolute maximum scrolling velocity. <br /><br />"
"android.support.v4.widget.AutoScrollHelper.isExclusive () "," Indicates whether the scroll helper handles touch events exclusively during scrolling. <br /><br />"
"android.support.v4.widget.AutoScrollHelper.setActivationDelay (int delayMillis) "," Sets the delay after entering an activation edge before activation of auto-scrolling. <br /><br />"
"android.support.v4.widget.AutoScrollHelper.onTouch (View v, MotionEvent event) "," Handles touch events by activating automatic scrolling, adjusting scroll velocity, or stopping. <br /><br />"
"android.support.v4.widget.AutoScrollHelper.isEnabled () "," no description <br /><br />"
"android.support.v4.widget.AutoScrollHelper.canTargetScrollVertically (int direction) "," Override this method to return whether the target view can be scrolled vertically in a certain direction. <br /><br />"
"android.support.v4.widget.AutoScrollHelper.setRelativeVelocity (float horizontal, float vertical) "," Sets the target scrolling velocity relative to the host view's dimensions. <br /><br />"
"android.support.v4.widget.AutoScrollHelper.setExclusive (boolean exclusive) "," Enables or disables exclusive handling of touch events during scrolling. <br /><br />"
"android.support.v4.widget.AutoScrollHelper.setEnabled (boolean enabled) "," Sets whether the scroll helper is enabled and should respond to touch events. <br /><br />"
"android.support.v4.widget.AutoScrollHelper.setRampDownDuration (int durationMillis) "," Sets the amount of time after de-activation of auto-scrolling that is takes to slow to a stop. <br /><br />"
"android.support.v4.widget.AutoScrollHelper.setMaximumEdges (float horizontalMax, float verticalMax) "," Sets the absolute maximum edge size. <br /><br />"
"android.support.v4.widget.ContentLoadingProgressBar.hide () "," Hide the progress view if it is visible. <br /><br />"
"android.support.v4.widget.ContentLoadingProgressBar.show () "," Show the progress view after waiting for a minimum delay. <br /><br />"
"android.support.v4.widget.ContentLoadingProgressBar.onDetachedFromWindow () "," This is called when the view is detached from a window. <br /><br />"
"android.support.v4.widget.ContentLoadingProgressBar.onAttachedToWindow () "," This is called when the view is attached to a window. <br /><br />"
"android.support.v4.widget.CursorAdapter.setFilterQueryProvider (FilterQueryProvider filterQueryProvider) "," Sets the query filter provider used to filter the current Cursor. <br /><br />"
"android.support.v4.widget.CursorAdapter.bindView (View view, Context context, Cursor cursor) "," Bind an existing view to the data pointed to by cursor <br /><br />"
"android.support.v4.widget.CursorAdapter.newView (Context context, Cursor cursor, ViewGroup parent) "," Makes a new view to hold the data pointed to by cursor. <br /><br />"
"android.support.v4.widget.CursorAdapter.swapCursor (Cursor newCursor) "," Swap in a new Cursor, returning the old Cursor. <br /><br />"
"android.support.v4.widget.CursorAdapter.getCursor () "," Returns the cursor. <br /><br />"
"android.support.v4.widget.CursorAdapter.newDropDownView (Context context, Cursor cursor, ViewGroup parent) "," Makes a new drop down view to hold the data pointed to by cursor. <br /><br />"
"android.support.v4.widget.CursorAdapter.convertToString (Cursor cursor) "," Converts the cursor into a CharSequence. <br /><br />"
"android.support.v4.widget.CursorAdapter.getView (int position, View convertView, ViewGroup parent) "," no description <br /><br />"
"android.support.v4.widget.CursorAdapter.getCount () "," no description <br /><br />"
"android.support.v4.widget.CursorAdapter.hasStableIds () "," Indicates whether the item ids are stable across changes to the underlying data. <br /><br />"
"android.support.v4.widget.CursorAdapter.changeCursor (Cursor cursor) "," Change the underlying cursor to a new cursor. <br /><br />"
"android.support.v4.widget.CursorAdapter.getDropDownView (int position, View convertView, ViewGroup parent) "," Get a View that displays in the drop down popup the data at the specified position in the data set. <br /><br />"
"android.support.v4.widget.CursorAdapter.getFilterQueryProvider () "," Returns the query filter provider used for filtering. <br /><br />"
"android.support.v4.widget.CursorAdapter.getItemId (int position) "," no description <br /><br />"
"android.support.v4.widget.CursorAdapter.getItem (int position) "," no description <br /><br />"
"android.support.v4.widget.CursorAdapter.getFilter () "," Returns a filter that can be used to constrain data with a filtering pattern. <br /><br />"
"android.support.v4.widget.CursorAdapter.runQueryOnBackgroundThread (CharSequence constraint) "," Runs a query with the specified constraint. <br /><br />"
"android.support.v4.widget.DrawerLayout.DrawerListener.onDrawerStateChanged (int newState) "," Called when the drawer motion state changes. <br /><br />"
"android.support.v4.widget.DrawerLayout.DrawerListener.onDrawerClosed (View drawerView) "," Called when a drawer has settled in a completely closed state. <br /><br />"
"android.support.v4.widget.DrawerLayout.DrawerListener.onDrawerSlide (View drawerView, float slideOffset) "," Called when a drawer's position changes. <br /><br />"
"android.support.v4.widget.DrawerLayout.DrawerListener.onDrawerOpened (View drawerView) "," Called when a drawer has settled in a completely open state. <br /><br />"
"android.support.v4.widget.DrawerLayout.addView (View child, int index, ViewGroup.LayoutParams params) "," Adds a child view with the specified layout parameters. <br /><br />"
"android.support.v4.widget.DrawerLayout.setDrawerLockMode (int lockMode, int edgeGravity) "," Enable or disable interaction with the given drawer. <br /><br />"
"android.support.v4.widget.DrawerLayout.setStatusBarBackground (Drawable bg) "," Set a drawable to draw in the insets area for the status bar. <br /><br />"
"android.support.v4.widget.DrawerLayout.setDrawerListener (DrawerLayout.DrawerListener listener) "," Set a listener to be notified of drawer events. <br /><br />"
"android.support.v4.widget.DrawerLayout.getDrawerTitle (int edgeGravity) "," Returns the title of the drawer with the given gravity. <br /><br />"
"android.support.v4.widget.DrawerLayout.isDrawerOpen (View drawer) "," Check if the given drawer view is currently in an open state. <br /><br />"
"android.support.v4.widget.DrawerLayout.isDrawerVisible (View drawer) "," Check if a given drawer view is currently visible on-screen. <br /><br />"
"android.support.v4.widget.DrawerLayout.closeDrawer (int gravity) "," Close the specified drawer by animating it out of view. <br /><br />"
"android.support.v4.widget.DrawerLayout.isDrawerOpen (int drawerGravity) "," Check if the given drawer view is currently in an open state. <br /><br />"
"android.support.v4.widget.DrawerLayout.setDrawerShadow (int resId, int gravity) "," Set a simple drawable used for the left or right shadow. <br /><br />"
"android.support.v4.widget.DrawerLayout.closeDrawers () "," Close all currently open drawer views by animating them out of view. <br /><br />"
"android.support.v4.widget.DrawerLayout.setScrimColor (int color) "," Set a color to use for the scrim that obscures primary content while a drawer is open. <br /><br />"
"android.support.v4.widget.DrawerLayout.setDrawerShadow (Drawable shadowDrawable, int gravity) "," Set a simple drawable used for the left or right shadow. <br /><br />"
"android.support.v4.widget.DrawerLayout.setDrawerLockMode (int lockMode) "," Enable or disable interaction with all drawers. <br /><br />"
"android.support.v4.widget.DrawerLayout.getStatusBarBackgroundDrawable () "," Gets the drawable used to draw in the insets area for the status bar. <br /><br />"
"android.support.v4.widget.DrawerLayout.onDraw (Canvas c) "," Implement this to do your drawing. <br /><br />"
"android.support.v4.widget.DrawerLayout.setDrawerTitle (int edgeGravity, CharSequence title) "," Sets the title of the drawer with the given gravity. <br /><br />"
"android.support.v4.widget.DrawerLayout.getDrawerLockMode (View drawerView) "," Check the lock mode of the given drawer view. <br /><br />"
"android.support.v4.widget.DrawerLayout.setDrawerLockMode (int lockMode, View drawerView) "," Enable or disable interaction with the given drawer. <br /><br />"
"android.support.v4.widget.DrawerLayout.getDrawerLockMode (int edgeGravity) "," Check the lock mode of the drawer with the given gravity. <br /><br />"
"android.support.v4.widget.DrawerLayout.requestLayout () "," Call this when something has changed which has invalidated the layout of this view. <br /><br />"
"android.support.v4.widget.DrawerLayout.onKeyDown (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyDown () "," Default implementation of KeyEvent.Callback.onKeyDown(): perform press of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released, if the view is enabled and clickable. <br /><br />"
"android.support.v4.widget.DrawerLayout.onKeyUp (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyUp () "," Default implementation of KeyEvent.Callback.onKeyUp(): perform clicking of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released. <br /><br />"
"android.support.v4.widget.DrawerLayout.openDrawer (int gravity) "," Open the specified drawer by animating it out of view. <br /><br />"
"android.support.v4.widget.DrawerLayout.requestDisallowInterceptTouchEvent (boolean disallowIntercept)   Called when a child does not want this parent and its ancestors to intercept touch events with onInterceptTouchEvent (MotionEvent) "," Called when a child does not want this parent and its ancestors to intercept touch events with onInterceptTouchEvent(MotionEvent). <br /><br />"
"android.support.v4.widget.DrawerLayout.closeDrawer (View drawerView) "," Close the specified drawer view by animating it into view. <br /><br />"
"android.support.v4.widget.DrawerLayout.setStatusBarBackground (int resId) "," Set a drawable to draw in the insets area for the status bar. <br /><br />"
"android.support.v4.widget.DrawerLayout.computeScroll () "," Called by a parent to request that a child update its values for mScrollX and mScrollY if necessary. <br /><br />"
"android.support.v4.widget.DrawerLayout.isDrawerVisible (int drawerGravity) "," Check if a given drawer view is currently visible on-screen. <br /><br />"
"android.support.v4.widget.DrawerLayout.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.support.v4.widget.DrawerLayout.onInterceptTouchEvent (MotionEvent ev) "," Implement this method to intercept all touch screen motion events. <br /><br />"
"android.support.v4.widget.DrawerLayout.onTouchEvent (MotionEvent ev) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.support.v4.widget.DrawerLayout.setStatusBarBackgroundColor (int color) "," Set a drawable to draw in the insets area for the status bar. <br /><br />"
"android.support.v4.widget.DrawerLayout.openDrawer (View drawerView) "," Open the specified drawer view by animating it into view. <br /><br />"
"android.support.v4.widget.DrawerLayout.SavedState.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.support.v4.widget.DrawerLayout.SimpleDrawerListener.onDrawerStateChanged (int newState) "," Called when the drawer motion state changes. <br /><br />"
"android.support.v4.widget.DrawerLayout.SimpleDrawerListener.onDrawerClosed (View drawerView) "," Called when a drawer has settled in a completely closed state. <br /><br />"
"android.support.v4.widget.DrawerLayout.SimpleDrawerListener.onDrawerSlide (View drawerView, float slideOffset) "," Called when a drawer's position changes. <br /><br />"
"android.support.v4.widget.DrawerLayout.SimpleDrawerListener.onDrawerOpened (View drawerView) "," Called when a drawer has settled in a completely open state. <br /><br />"
"android.support.v4.widget.EdgeEffectCompat.finish () "," Immediately finish the current animation. <br /><br />"
"android.support.v4.widget.EdgeEffectCompat.onRelease () "," Call when the object is released after being pulled. <br /><br />"
"android.support.v4.widget.EdgeEffectCompat.isFinished () "," Reports if this EdgeEffectCompat's animation is finished. <br /><br />"
"android.support.v4.widget.EdgeEffectCompat.setSize (int width, int height) "," Set the size of this edge effect in pixels. <br /><br />"
"android.support.v4.widget.EdgeEffectCompat.onPull (float deltaDistance, float displacement) "," A view should call this when content is pulled away from an edge by the user. <br /><br />"
"android.support.v4.widget.EdgeEffectCompat.draw (Canvas canvas) "," Draw into the provided canvas. <br /><br />"
"android.support.v4.widget.EdgeEffectCompat.onPull (float deltaDistance)    This method is deprecated. use onPull (float, float) "," This method is deprecated. use onPull(float, float) <br /><br />"
"android.support.v4.widget.EdgeEffectCompat.onAbsorb (int velocity) "," Call when the effect absorbs an impact at the given velocity. <br /><br />"
"android.support.v4.widget.ExploreByTouchHelper.invalidateVirtualView (int virtualViewId) "," Notifies the accessibility framework that the properties of a particular item have changed. <br /><br />"
"android.support.v4.widget.ExploreByTouchHelper.getFocusedVirtualView () "," Returns the virtual view id for the currently focused item, <br /><br />"
"android.support.v4.widget.ExploreByTouchHelper.sendEventForVirtualView (int virtualViewId, int eventType) "," Populates an event of the specified type with information about an item and attempts to send it up through the view hierarchy. <br /><br />"
"android.support.v4.widget.ExploreByTouchHelper.invalidateRoot () "," Notifies the accessibility framework that the properties of the parent view have changed. <br /><br />"
"android.support.v4.widget.ExploreByTouchHelper.dispatchHoverEvent (MotionEvent event) "," Dispatches hover MotionEvents to the virtual view hierarchy when the Explore by Touch feature is enabled. <br /><br />"
"android.support.v4.widget.ExploreByTouchHelper.getAccessibilityNodeProvider (View host) "," Returns the AccessibilityNodeProviderCompat for this helper. <br /><br />"
"android.support.v4.widget.ListPopupWindowCompat.createDragToOpenListener (Object listPopupWindow, View src) "," On API KITKAT and higher, returns an View.OnTouchListener that can be added to the source view to implement drag-to-open behavior. <br /><br />"
"android.support.v4.widget.ListViewAutoScrollHelper.canTargetScrollHorizontally (int direction) "," Override this method to return whether the target view can be scrolled horizontally in a certain direction. <br /><br />"
"android.support.v4.widget.ListViewAutoScrollHelper.canTargetScrollVertically (int direction) "," Override this method to return whether the target view can be scrolled vertically in a certain direction. <br /><br />"
"android.support.v4.widget.ListViewAutoScrollHelper.scrollTargetBy (int deltaX, int deltaY) "," Override this method to scroll the target view by the specified number of pixels. <br /><br />"
"android.support.v4.widget.NestedScrollView.onNestedPreScroll (View target, int dx, int dy, int[] consumed) "," React to a nested scroll in progress before the target view consumes a portion of the scroll. <br /><br />"
"android.support.v4.widget.NestedScrollView.addView (View child, int index, ViewGroup.LayoutParams params) "," Adds a child view with the specified layout parameters. <br /><br />"
"android.support.v4.widget.NestedScrollView.setSmoothScrollingEnabled (boolean smoothScrollingEnabled) "," Set whether arrow scrolling will animate its transition. <br /><br />"
"android.support.v4.widget.NestedScrollView.onStartNestedScroll (View child, View target, int nestedScrollAxes) "," React to a descendant view initiating a nestable scroll operation, claiming the nested scroll operation if appropriate. <br /><br />"
"android.support.v4.widget.NestedScrollView.onNestedScrollAccepted (View child, View target, int nestedScrollAxes) "," React to the successful claiming of a nested scroll operation. <br /><br />"
"android.support.v4.widget.NestedScrollView.addView (View child, ViewGroup.LayoutParams params) "," Adds a child view with the specified layout parameters. <br /><br />"
"android.support.v4.widget.NestedScrollView.getMaxScrollAmount () "," no description <br /><br />"
"android.support.v4.widget.NestedScrollView.dispatchNestedPreFling (float velocityX, float velocityY) "," Dispatch a fling to a nested scrolling parent before it is processed by this view. <br /><br />"
"android.support.v4.widget.NestedScrollView.addView (View child, int index) "," Adds a child view. <br /><br />"
"android.support.v4.widget.NestedScrollView.isFillViewport () "," Indicates whether this ScrollView's content is stretched to fill the viewport. <br /><br />"
"android.support.v4.widget.NestedScrollView.startNestedScroll (int axes) "," Begin a nestable scroll operation along the given axes. <br /><br />"
"android.support.v4.widget.NestedScrollView.onStopNestedScroll (View target) "," React to a nested scroll operation ending. <br /><br />"
"android.support.v4.widget.NestedScrollView.onNestedScroll (View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed) "," React to a nested scroll in progress. <br /><br />"
"android.support.v4.widget.NestedScrollView.arrowScroll (int direction) "," Handle scrolling in response to an up or down arrow click. <br /><br />"
"android.support.v4.widget.NestedScrollView.isSmoothScrollingEnabled () "," no description <br /><br />"
"android.support.v4.widget.NestedScrollView.getNestedScrollAxes () "," Return the current axes of nested scrolling for this ViewGroup. <br /><br />"
"android.support.v4.widget.NestedScrollView.onNestedFling (View target, float velocityX, float velocityY, boolean consumed) "," Request a fling from a nested scroll. <br /><br />"
"android.support.v4.widget.NestedScrollView.dispatchNestedPreScroll (int dx, int dy, int[] consumed, int[] offsetInWindow) "," Dispatch one step of a nested scroll in progress before this view consumes any portion of it. <br /><br />"
"android.support.v4.widget.NestedScrollView.onAttachedToWindow () "," This is called when the view is attached to a window. <br /><br />"
"android.support.v4.widget.NestedScrollView.setNestedScrollingEnabled (boolean enabled) "," Enable or disable nested scrolling for this view. <br /><br />"
"android.support.v4.widget.NestedScrollView.smoothScrollTo (int x, int y)   Like scrollTo (int, int) "," Like scrollTo(int, int), but scroll smoothly instead of immediately. <br /><br />"
"android.support.v4.widget.NestedScrollView.stopNestedScroll () "," Stop a nested scroll in progress. <br /><br />"
"android.support.v4.widget.NestedScrollView.smoothScrollBy (int dx, int dy)   Like scrollBy (int, int) "," Like scrollBy(int, int), but scroll smoothly instead of immediately. <br /><br />"
"android.support.v4.widget.NestedScrollView.pageScroll (int direction) "," Handles scrolling in response to a 'page up/down' shortcut press. <br /><br />"
"android.support.v4.widget.NestedScrollView.isNestedScrollingEnabled () "," Returns true if nested scrolling is enabled for this view. <br /><br />"
"android.support.v4.widget.NestedScrollView.fling (int velocityY) "," Fling the scroll view <br /><br />"
"android.support.v4.widget.NestedScrollView.setFillViewport (boolean fillViewport) "," Indicates this ScrollView whether it should stretch its content height to fill the viewport or not. <br /><br />"
"android.support.v4.widget.NestedScrollView.dispatchKeyEvent (KeyEvent event) "," Dispatch a key event to the next view on the focus path. <br /><br />"
"android.support.v4.widget.NestedScrollView.shouldDelayChildPressedState () "," Return true if the pressed state should be delayed for children or descendants of this ViewGroup. <br /><br />"
"android.support.v4.widget.NestedScrollView.requestLayout () "," Call this when something has changed which has invalidated the layout of this view. <br /><br />"
"android.support.v4.widget.NestedScrollView.scrollTo (int x, int y) "," Set the scrolled position of your view. This version also clamps the scrolling to the bounds of our child. <br /><br />"
"android.support.v4.widget.NestedScrollView.requestChildFocus (View child, View focused) "," Called when a child of this parent wants focus <br /><br />"
"android.support.v4.widget.NestedScrollView.hasNestedScrollingParent () "," Returns true if this view has a nested scrolling parent. <br /><br />"
"android.support.v4.widget.NestedScrollView.fullScroll (int direction) "," Handles scrolling in response to a 'home/end' shortcut press. <br /><br />"
"android.support.v4.widget.NestedScrollView.requestDisallowInterceptTouchEvent (boolean disallowIntercept)   Called when a child does not want this parent and its ancestors to intercept touch events with onInterceptTouchEvent (MotionEvent) "," Called when a child does not want this parent and its ancestors to intercept touch events with onInterceptTouchEvent(MotionEvent). <br /><br />"
"android.support.v4.widget.NestedScrollView.draw (Canvas canvas)   Manually render this view  (and all of its children) "," Manually render this view (and all of its children) to the given Canvas. <br /><br />"
"android.support.v4.widget.NestedScrollView.computeScroll () "," Called by a parent to request that a child update its values for mScrollX and mScrollY if necessary. <br /><br />"
"android.support.v4.widget.NestedScrollView.addView (View child) "," Adds a child view. <br /><br />"
"android.support.v4.widget.NestedScrollView.onGenericMotionEvent (MotionEvent event) "," Implement this method to handle generic motion events. <br /><br />"
"android.support.v4.widget.NestedScrollView.requestChildRectangleOnScreen (View child, Rect rectangle, boolean immediate) "," Called when a child of this group wants a particular rectangle to be positioned onto the screen. <br /><br />"
"android.support.v4.widget.NestedScrollView.dispatchNestedScroll (int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int[] offsetInWindow) "," Dispatch one step of a nested scroll in progress. <br /><br />"
"android.support.v4.widget.NestedScrollView.executeKeyEvent (KeyEvent event) "," You can call this function yourself to have the scroll view perform scrolling from a key event, just as if the event had been dispatched to it by the view hierarchy. <br /><br />"
"android.support.v4.widget.NestedScrollView.onInterceptTouchEvent (MotionEvent ev) "," Implement this method to intercept all touch screen motion events. <br /><br />"
"android.support.v4.widget.NestedScrollView.onTouchEvent (MotionEvent ev) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.support.v4.widget.NestedScrollView.onNestedPreFling (View target, float velocityX, float velocityY) "," React to a nested fling before the target view consumes it. <br /><br />"
"android.support.v4.widget.NestedScrollView.dispatchNestedFling (float velocityX, float velocityY, boolean consumed) "," Dispatch a fling to a nested scrolling parent. <br /><br />"
"android.support.v4.widget.PopupMenuCompat.getDragToOpenListener (Object popupMenu) "," On API KITKAT and higher, returns an View.OnTouchListener that can be added to the anchor view to implement drag-to-open behavior. <br /><br />"
"android.support.v4.widget.PopupWindowCompat.showAsDropDown (PopupWindow popup, View anchor, int xoff, int yoff, int gravity) "," Display the content view in a popup window anchored to the bottom-left corner of the anchor view offset by the specified x and y coordinates. <br /><br />"
"android.support.v4.widget.ResourceCursorAdapter.setViewResource (int layout) "," Sets the layout resource of the item views. <br /><br />"
"android.support.v4.widget.ResourceCursorAdapter.newView (Context context, Cursor cursor, ViewGroup parent)   Inflates view (s) "," Inflates view(s) from the specified XML file. <br /><br />"
"android.support.v4.widget.ResourceCursorAdapter.newDropDownView (Context context, Cursor cursor, ViewGroup parent) "," Makes a new drop down view to hold the data pointed to by cursor. <br /><br />"
"android.support.v4.widget.ResourceCursorAdapter.setDropDownViewResource (int dropDownLayout) "," Sets the layout resource of the drop down views. <br /><br />"
"android.support.v4.widget.ScrollerCompat.getFinalX () "," no description <br /><br />"
"android.support.v4.widget.ScrollerCompat.computeScrollOffset () "," Call this when you want to know the new location. <br /><br />"
"android.support.v4.widget.ScrollerCompat.isFinished () "," Returns whether the scroller has finished scrolling. <br /><br />"
"android.support.v4.widget.ScrollerCompat.notifyVerticalEdgeReached (int startY, int finalY, int overY) "," Notify the scroller that we've reached a vertical boundary. <br /><br />"
"android.support.v4.widget.ScrollerCompat.notifyHorizontalEdgeReached (int startX, int finalX, int overX) "," Notify the scroller that we've reached a horizontal boundary. <br /><br />"
"android.support.v4.widget.ScrollerCompat.getCurrX () "," Returns the current X offset in the scroll. <br /><br />"
"android.support.v4.widget.ScrollerCompat.create (Context context) "," no description <br /><br />"
"android.support.v4.widget.ScrollerCompat.abortAnimation () "," Stops the animation. <br /><br />"
"android.support.v4.widget.ScrollerCompat.getCurrVelocity () "," Returns the current velocity on platform versions that support it. <br /><br />"
"android.support.v4.widget.ScrollerCompat.isOverScrolled () "," Returns whether the current Scroller is currently returning to a valid position. <br /><br />"
"android.support.v4.widget.ScrollerCompat.create (Context context, Interpolator interpolator) "," no description <br /><br />"
"android.support.v4.widget.ScrollerCompat.fling (int startX, int startY, int velocityX, int velocityY, int minX, int maxX, int minY, int maxY) "," Start scrolling based on a fling gesture. <br /><br />"
"android.support.v4.widget.ScrollerCompat.startScroll (int startX, int startY, int dx, int dy) "," Start scrolling by providing a starting point and the distance to travel. <br /><br />"
"android.support.v4.widget.ScrollerCompat.getCurrY () "," Returns the current Y offset in the scroll. <br /><br />"
"android.support.v4.widget.ScrollerCompat.getFinalY () "," no description <br /><br />"
"android.support.v4.widget.ScrollerCompat.startScroll (int startX, int startY, int dx, int dy, int duration) "," Start scrolling by providing a starting point and the distance to travel. <br /><br />"
"android.support.v4.widget.ScrollerCompat.fling (int startX, int startY, int velocityX, int velocityY, int minX, int maxX, int minY, int maxY, int overX, int overY) "," Start scrolling based on a fling gesture. <br /><br />"
"android.support.v4.widget.ScrollerCompatTestBase.testTargetReached () "," no description <br /><br />"
"android.support.v4.widget.ScrollerCompatTestBase.testAbort () "," no description <br /><br />"
"android.support.v4.widget.SearchViewCompat.OnCloseListenerCompat.onClose () "," The user is attempting to close the SearchView. <br /><br />"
"android.support.v4.widget.SearchViewCompat.OnQueryTextListenerCompat.onQueryTextChange (String newText) "," Called when the query text is changed by the user. <br /><br />"
"android.support.v4.widget.SearchViewCompat.OnQueryTextListenerCompat.onQueryTextSubmit (String query) "," Called when the user submits the query. <br /><br />"
"android.support.v4.widget.SimpleCursorAdapter.CursorToStringConverter.convertToString (Cursor cursor) "," Returns a CharSequence representing the specified Cursor. <br /><br />"
"android.support.v4.widget.SimpleCursorAdapter.getCursorToStringConverter () "," Returns the converter used to convert the filtering Cursor into a String. <br /><br />"
"android.support.v4.widget.SimpleCursorAdapter.bindView (View view, Context context, Cursor cursor) "," Binds all of the field names passed into the 'to' parameter of the constructor with their corresponding cursor columns as specified in the 'from' parameter. <br /><br />"
"android.support.v4.widget.SimpleCursorAdapter.setViewText (TextView v, String text)   Called by bindView () "," Called by bindView() to set the text for a TextView but only if there is no existing ViewBinder or if the existing ViewBinder cannot handle binding to an TextView. <br /><br />"
"android.support.v4.widget.SimpleCursorAdapter.setStringConversionColumn (int stringConversionColumn) "," Defines the index of the column in the Cursor used to get a String representation of that Cursor. <br /><br />"
"android.support.v4.widget.SimpleCursorAdapter.swapCursor (Cursor c) "," Swap in a new Cursor, returning the old Cursor. <br /><br />"
"android.support.v4.widget.SimpleCursorAdapter.getStringConversionColumn () "," Return the index of the column used to get a String representation of the Cursor. <br /><br />"
"android.support.v4.widget.SimpleCursorAdapter.convertToString (Cursor cursor) "," Returns a CharSequence representation of the specified Cursor as defined by the current CursorToStringConverter. <br /><br />"
"android.support.v4.widget.SimpleCursorAdapter.changeCursorAndColumns (Cursor c, String[] from, int[] to) "," Change the cursor and change the column-to-view mappings at the same time. <br /><br />"
"android.support.v4.widget.SimpleCursorAdapter.setViewBinder (SimpleCursorAdapter.ViewBinder viewBinder) "," Sets the binder used to bind data to views. <br /><br />"
"android.support.v4.widget.SimpleCursorAdapter.setCursorToStringConverter (SimpleCursorAdapter.CursorToStringConverter cursorToStringConverter) "," Sets the converter used to convert the filtering Cursor into a String. <br /><br />"
"android.support.v4.widget.SimpleCursorAdapter.setViewImage (ImageView v, String value)   Called by bindView () "," Called by bindView() to set the image for an ImageView but only if there is no existing ViewBinder or if the existing ViewBinder cannot handle binding to an ImageView. <br /><br />"
"android.support.v4.widget.SimpleCursorAdapter.getViewBinder () "," Returns the SimpleCursorAdapter.ViewBinder used to bind data to views. <br /><br />"
"android.support.v4.widget.SimpleCursorAdapter.ViewBinder.setViewValue (View view, Cursor cursor, int columnIndex) "," Binds the Cursor column defined by the specified index to the specified view. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.setShadowResourceRight (int resId) "," Set a drawable to use as a shadow cast by the left pane onto the right pane during opening/closing to support right to left language. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.openPane () "," Open the sliding pane if it is currently slideable. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.setPanelSlideListener (SlidingPaneLayout.PanelSlideListener listener) "," no description <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.setShadowDrawable (Drawable d)    This method is deprecated. Renamed to setShadowDrawableLeft (Drawable) to support LTR  (left to right language) and setShadowDrawableRight (Drawable) to support RTL  (right to left language) "," This method is deprecated. Renamed to setShadowDrawableLeft(Drawable) to support LTR (left to right language) and setShadowDrawableRight(Drawable) to support RTL (right to left language) during opening/closing. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.closePane () "," Close the sliding pane if it is currently slideable. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.setParallaxDistance (int parallaxBy) "," Set a distance to parallax the lower pane by when the upper pane is in its fully closed state. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.isOpen () "," Check if the layout is completely open. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.setShadowResource (int resId) "," Set a drawable to use as a shadow cast by the right pane onto the left pane during opening/closing. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.getCoveredFadeColor () "," no description <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.draw (Canvas c)   Manually render this view  (and all of its children) "," Manually render this view (and all of its children) to the given Canvas. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.smoothSlideClosed ()    This method is deprecated. Renamed to closePane () "," This method is deprecated. Renamed to closePane() - this method is going away soon! <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.requestChildFocus (View child, View focused) "," Called when a child of this parent wants focus <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.setSliderFadeColor (int color) "," Set the color used to fade the sliding pane out when it is slid most of the way offscreen. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.setCoveredFadeColor (int color) "," Set the color used to fade the pane covered by the sliding pane out when the pane will become fully covered in the closed state. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.computeScroll () "," Called by a parent to request that a child update its values for mScrollX and mScrollY if necessary. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.getSliderFadeColor () "," no description <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.getParallaxDistance () "," no description <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.setShadowResourceLeft (int resId) "," Set a drawable to use as a shadow cast by the right pane onto the left pane during opening/closing. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.isSlideable () "," Check if the content in this layout cannot fully fit side by side and therefore the content pane can be slid back and forth. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.setShadowDrawableRight (Drawable d) "," Set a drawable to use as a shadow cast by the left pane onto the right pane during opening/closing to support right to left language. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.onInterceptTouchEvent (MotionEvent ev) "," Implement this method to intercept all touch screen motion events. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.onTouchEvent (MotionEvent ev) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.canSlide ()    This method is deprecated. Renamed to isSlideable () "," This method is deprecated. Renamed to isSlideable() - this method is going away soon! <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.smoothSlideOpen ()    This method is deprecated. Renamed to openPane () "," This method is deprecated. Renamed to openPane() - this method is going away soon! <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.setShadowDrawableLeft (Drawable d) "," Set a drawable to use as a shadow cast by the right pane onto the left pane during opening/closing. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.PanelSlideListener.onPanelClosed (View panel) "," Called when a sliding pane becomes slid completely closed. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.PanelSlideListener.onPanelOpened (View panel) "," Called when a sliding pane becomes slid completely open. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.PanelSlideListener.onPanelSlide (View panel, float slideOffset) "," Called when a sliding pane's position changes. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.SimplePanelSlideListener.onPanelClosed (View panel) "," Called when a sliding pane becomes slid completely closed. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.SimplePanelSlideListener.onPanelOpened (View panel) "," Called when a sliding pane becomes slid completely open. <br /><br />"
"android.support.v4.widget.SlidingPaneLayout.SimplePanelSlideListener.onPanelSlide (View panel, float slideOffset) "," Called when a sliding pane's position changes. <br /><br />"
"android.support.v4.widget.SwipeRefreshLayout.canChildScrollUp () "," no description <br /><br />"
"android.support.v4.widget.SwipeRefreshLayout.setOnRefreshListener (SwipeRefreshLayout.OnRefreshListener listener) "," Set the listener to be notified when a refresh is triggered via the swipe gesture. <br /><br />"
"android.support.v4.widget.SwipeRefreshLayout.setColorSchemeResources (int... colorResIds) "," Set the color resources used in the progress animation from color resources. <br /><br />"
"android.support.v4.widget.SwipeRefreshLayout.getProgressCircleDiameter () "," Get the diameter of the progress circle that is displayed as part of the swipe to refresh layout. <br /><br />"
"android.support.v4.widget.SwipeRefreshLayout.requestDisallowInterceptTouchEvent (boolean b)   Called when a child does not want this parent and its ancestors to intercept touch events with onInterceptTouchEvent (MotionEvent) "," Called when a child does not want this parent and its ancestors to intercept touch events with onInterceptTouchEvent(MotionEvent). <br /><br />"
"android.support.v4.widget.SwipeRefreshLayout.isRefreshing () "," no description <br /><br />"
"android.support.v4.widget.SwipeRefreshLayout.setColorSchemeColors (int... colors) "," Set the colors used in the progress animation. <br /><br />"
"android.support.v4.widget.SwipeRefreshLayout.setProgressViewEndTarget (boolean scale, int end) "," The refresh indicator resting position is always positioned near the top of the refreshing content. <br /><br />"
"android.support.v4.widget.SwipeRefreshLayout.setProgressBackgroundColorSchemeColor (int color) "," Set the background color of the progress spinner disc. <br /><br />"
"android.support.v4.widget.SwipeRefreshLayout.setSize (int size) "," One of DEFAULT, or LARGE. <br /><br />"
"android.support.v4.widget.SwipeRefreshLayout.setColorScheme (int... colors)    This method is deprecated. Use setColorSchemeResources (int) "," This method is deprecated. Use setColorSchemeResources(int) <br /><br />"
"android.support.v4.widget.SwipeRefreshLayout.onMeasure (int widthMeasureSpec, int heightMeasureSpec) "," Measure the view and its content to determine the measured width and the measured height. <br /><br />"
"android.support.v4.widget.SwipeRefreshLayout.setRefreshing (boolean refreshing) "," Notify the widget that refresh state has changed. <br /><br />"
"android.support.v4.widget.SwipeRefreshLayout.setProgressViewOffset (boolean scale, int start, int end) "," The refresh indicator starting and resting position is always positioned near the top of the refreshing content. <br /><br />"
"android.support.v4.widget.SwipeRefreshLayout.setProgressBackgroundColor (int colorRes)    This method is deprecated. Use setProgressBackgroundColorSchemeResource (int) "," This method is deprecated. Use setProgressBackgroundColorSchemeResource(int) <br /><br />"
"android.support.v4.widget.SwipeRefreshLayout.onInterceptTouchEvent (MotionEvent ev) "," Implement this method to intercept all touch screen motion events. <br /><br />"
"android.support.v4.widget.SwipeRefreshLayout.onTouchEvent (MotionEvent ev) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.support.v4.widget.SwipeRefreshLayout.setProgressBackgroundColorSchemeResource (int colorRes) "," Set the background color of the progress spinner disc. <br /><br />"
"android.support.v4.widget.SwipeRefreshLayout.setDistanceToTriggerSync (int distance) "," Set the distance to trigger a sync in dips <br /><br />"
"android.support.v4.widget.SwipeRefreshLayout.OnRefreshListener.onRefresh () "," no description <br /><br />"
"android.support.v4.widget.ViewDragHelper.Callback.getViewVerticalDragRange (View child) "," Return the magnitude of a draggable child view's vertical range of motion in pixels. <br /><br />"
"android.support.v4.widget.ViewDragHelper.Callback.tryCaptureView (View child, int pointerId) "," Called when the user's input indicates that they want to capture the given child view with the pointer indicated by pointerId. <br /><br />"
"android.support.v4.widget.ViewDragHelper.Callback.clampViewPositionVertical (View child, int top, int dy) "," Restrict the motion of the dragged child view along the vertical axis. <br /><br />"
"android.support.v4.widget.ViewDragHelper.Callback.onViewReleased (View releasedChild, float xvel, float yvel) "," Called when the child view is no longer being actively dragged. <br /><br />"
"android.support.v4.widget.ViewDragHelper.Callback.getViewHorizontalDragRange (View child) "," Return the magnitude of a draggable child view's horizontal range of motion in pixels. <br /><br />"
"android.support.v4.widget.ViewDragHelper.Callback.onEdgeDragStarted (int edgeFlags, int pointerId) "," Called when the user has started a deliberate drag away from one of the subscribed edges in the parent view while no child view is currently captured. <br /><br />"
"android.support.v4.widget.ViewDragHelper.Callback.onEdgeTouched (int edgeFlags, int pointerId) "," Called when one of the subscribed edges in the parent view has been touched by the user while no child view is currently captured. <br /><br />"
"android.support.v4.widget.ViewDragHelper.Callback.getOrderedChildIndex (int index) "," Called to determine the Z-order of child views. <br /><br />"
"android.support.v4.widget.ViewDragHelper.Callback.onViewDragStateChanged (int state) "," Called when the drag state changes. <br /><br />"
"android.support.v4.widget.ViewDragHelper.Callback.clampViewPositionHorizontal (View child, int left, int dx) "," Restrict the motion of the dragged child view along the horizontal axis. <br /><br />"
"android.support.v4.widget.ViewDragHelper.Callback.onViewCaptured (View capturedChild, int activePointerId) "," Called when a child view is captured for dragging or settling. <br /><br />"
"android.support.v4.widget.ViewDragHelper.Callback.onEdgeLock (int edgeFlags) "," Called when the given edge may become locked. <br /><br />"
"android.support.v4.widget.ViewDragHelper.Callback.onViewPositionChanged (View changedView, int left, int top, int dx, int dy) "," Called when the captured view's position changes as the result of a drag or settle. <br /><br />"
"android.support.v4.widget.ViewDragHelper.checkTouchSlop (int directions, int pointerId) "," Check if the specified pointer tracked in the current gesture has crossed the required slop threshold. <br /><br />"
"android.support.v4.widget.ViewDragHelper.checkTouchSlop (int directions) "," Check if any pointer tracked in the current gesture has crossed the required slop threshold. <br /><br />"
"android.support.v4.widget.ViewDragHelper.isEdgeTouched (int edges, int pointerId) "," Check if any of the edges specified were initially touched by the pointer with the specified ID. <br /><br />"
"android.support.v4.widget.ViewDragHelper.settleCapturedViewAt (int finalLeft, int finalTop)   Settle the captured view at the given  (left, top) "," Settle the captured view at the given (left, top) position. <br /><br />"
"android.support.v4.widget.ViewDragHelper.findTopChildUnder (int x, int y) "," Find the topmost child under the given point within the parent view's coordinate system. <br /><br />"
"android.support.v4.widget.ViewDragHelper.continueSettling (boolean deferCallbacks) "," Move the captured settling view by the appropriate amount for the current time. <br /><br />"
"android.support.v4.widget.ViewDragHelper.smoothSlideViewTo (View child, int finalLeft, int finalTop)   Animate the view child to the given  (left, top) "," Animate the view child to the given (left, top) position. <br /><br />"
"android.support.v4.widget.ViewDragHelper.cancel ()   The result of a call to this method is equivalent to processTouchEvent (android.view.MotionEvent) "," The result of a call to this method is equivalent to processTouchEvent(android.view.MotionEvent) receiving an ACTION_CANCEL event. <br /><br />"
"android.support.v4.widget.ViewDragHelper.getMinVelocity () "," Return the currently configured minimum velocity. <br /><br />"
"android.support.v4.widget.ViewDragHelper.create (ViewGroup forParent, ViewDragHelper.Callback cb) "," Factory method to create a new ViewDragHelper. <br /><br />"
"android.support.v4.widget.ViewDragHelper.isEdgeTouched (int edges) "," Check if any of the edges specified were initially touched in the currently active gesture. <br /><br />"
"android.support.v4.widget.ViewDragHelper.isCapturedViewUnder (int x, int y) "," Determine if the currently captured view is under the given point in the parent view's coordinate system. <br /><br />"
"android.support.v4.widget.ViewDragHelper.processTouchEvent (MotionEvent ev) "," Process a touch event received by the parent view. <br /><br />"
"android.support.v4.widget.ViewDragHelper.shouldInterceptTouchEvent (MotionEvent ev) "," Check if this event as provided to the parent view's onInterceptTouchEvent should cause the parent to intercept the touch event stream. <br /><br />"
"android.support.v4.widget.ViewDragHelper.getTouchSlop () "," no description <br /><br />"
"android.support.v4.widget.ViewDragHelper.create (ViewGroup forParent, float sensitivity, ViewDragHelper.Callback cb) "," Factory method to create a new ViewDragHelper. <br /><br />"
"android.support.v4.widget.ViewDragHelper.isPointerDown (int pointerId)   Check if the given pointer ID represents a pointer that is currently down  (to the best of the ViewDragHelper's knowledge) "," Check if the given pointer ID represents a pointer that is currently down (to the best of the ViewDragHelper's knowledge). <br /><br />"
"android.support.v4.widget.ViewDragHelper.flingCapturedView (int minLeft, int minTop, int maxLeft, int maxTop) "," Settle the captured view based on standard free-moving fling behavior. <br /><br />"
"android.support.v4.widget.ViewDragHelper.captureChildView (View childView, int activePointerId) "," Capture a specific child view for dragging within the parent. <br /><br />"
"android.support.v4.widget.ViewDragHelper.getViewDragState () "," Retrieve the current drag state of this helper. <br /><br />"
"android.support.v4.widget.ViewDragHelper.setMinVelocity (float minVel) "," Set the minimum velocity that will be detected as having a magnitude greater than zero in pixels per second. <br /><br />"
"android.support.v4.widget.ViewDragHelper.abort ()   cancel () "," cancel(), but also abort all motion in progress and snap to the end of any animation. <br /><br />"
"android.support.v4.widget.ViewDragHelper.getEdgeSize () "," Return the size of an edge. <br /><br />"
"android.support.v4.widget.ViewDragHelper.setEdgeTrackingEnabled (int edgeFlags) "," Enable edge tracking for the selected edges of the parent view. <br /><br />"
"android.support.v4.widget.ViewDragHelper.getCapturedView () "," no description <br /><br />"
"android.support.v4.widget.ViewDragHelper.isViewUnder (View view, int x, int y) "," Determine if the supplied view is under the given point in the parent view's coordinate system. <br /><br />"
"android.support.v4.widget.ViewDragHelper.getActivePointerId () "," no description <br /><br />"
"android.support.v7.app.ActionBar.setDisplayHomeAsUpEnabled (boolean showHomeAsUp) "," Set whether home should be displayed as an 'up' affordance. <br /><br />"
"android.support.v7.app.ActionBar.setHomeAsUpIndicator (int resId) "," Set an alternate drawable to display next to the icon/logo/title when DISPLAY_HOME_AS_UP is enabled. <br /><br />"
"android.support.v7.app.ActionBar.addTab (ActionBar.Tab tab) "," This method is deprecated. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.support.v7.app.ActionBar.setBackgroundDrawable (Drawable d) "," Set the ActionBar's background. <br /><br />"
"android.support.v7.app.ActionBar.setIcon (Drawable icon) "," Set the icon to display in the 'home' section of the action bar. <br /><br />"
"android.support.v7.app.ActionBar.setListNavigationCallbacks (SpinnerAdapter adapter, ActionBar.OnNavigationListener callback) "," This method is deprecated. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.support.v7.app.ActionBar.setHomeAsUpIndicator (Drawable indicator) "," Set an alternate drawable to display next to the icon/logo/title when DISPLAY_HOME_AS_UP is enabled. <br /><br />"
"android.support.v7.app.ActionBar.setSubtitle (CharSequence subtitle) "," Set the action bar's subtitle. <br /><br />"
"android.support.v7.app.ActionBar.setDisplayOptions (int options) "," Set display options. <br /><br />"
"android.support.v7.app.ActionBar.setSelectedNavigationItem (int position) "," This method is deprecated. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.support.v7.app.ActionBar.isShowing () "," no description <br /><br />"
"android.support.v7.app.ActionBar.getHeight () "," Retrieve the current height of the ActionBar. <br /><br />"
"android.support.v7.app.ActionBar.getNavigationMode () "," This method is deprecated. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.support.v7.app.ActionBar.setLogo (int resId) "," Set the logo to display in the 'home' section of the action bar. <br /><br />"
"android.support.v7.app.ActionBar.removeTab (ActionBar.Tab tab) "," This method is deprecated. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.support.v7.app.ActionBar.setIcon (int resId) "," Set the icon to display in the 'home' section of the action bar. <br /><br />"
"android.support.v7.app.ActionBar.getTitle () "," Returns the current ActionBar title in standard mode. <br /><br />"
"android.support.v7.app.ActionBar.setDisplayShowCustomEnabled (boolean showCustom) "," Set whether a custom view should be displayed, if set. <br /><br />"
"android.support.v7.app.ActionBar.addOnMenuVisibilityListener (ActionBar.OnMenuVisibilityListener listener) "," Add a listener that will respond to menu visibility change events. <br /><br />"
"android.support.v7.app.ActionBar.setCustomView (View view, ActionBar.LayoutParams layoutParams) "," Set the action bar into custom navigation mode, supplying a view for custom navigation. <br /><br />"
"android.support.v7.app.ActionBar.getHideOffset () "," Return the current vertical offset of the action bar. <br /><br />"
"android.support.v7.app.ActionBar.setHideOffset (int offset) "," Set the current hide offset of the action bar. <br /><br />"
"android.support.v7.app.ActionBar.getTabCount () "," This method is deprecated. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.support.v7.app.ActionBar.setLogo (Drawable logo) "," Set the logo to display in the 'home' section of the action bar. <br /><br />"
"android.support.v7.app.ActionBar.newTab () "," This method is deprecated. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.support.v7.app.ActionBar.setStackedBackgroundDrawable (Drawable d) "," Set the ActionBar's stacked background. <br /><br />"
"android.support.v7.app.ActionBar.setHomeButtonEnabled (boolean enabled) "," Enable or disable the 'home' button in the corner of the action bar. <br /><br />"
"android.support.v7.app.ActionBar.setHomeActionContentDescription (CharSequence description) "," Set an alternate description for the Home/Up action, when enabled. <br /><br />"
"android.support.v7.app.ActionBar.removeOnMenuVisibilityListener (ActionBar.OnMenuVisibilityListener listener) "," Remove a menu visibility listener. <br /><br />"
"android.support.v7.app.ActionBar.setHideOnContentScrollEnabled (boolean hideOnContentScroll) "," Enable hiding the action bar on content scroll. <br /><br />"
"android.support.v7.app.ActionBar.addTab (ActionBar.Tab tab, int position) "," This method is deprecated. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.support.v7.app.ActionBar.getNavigationItemCount () "," This method is deprecated. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.support.v7.app.ActionBar.removeTabAt (int position) "," This method is deprecated. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.support.v7.app.ActionBar.selectTab (ActionBar.Tab tab) "," This method is deprecated. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.support.v7.app.ActionBar.addTab (ActionBar.Tab tab, int position, boolean setSelected) "," This method is deprecated. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.support.v7.app.ActionBar.setNavigationMode (int mode) "," This method is deprecated. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.support.v7.app.ActionBar.setDisplayOptions (int options, int mask) "," Set selected display options. <br /><br />"
"android.support.v7.app.ActionBar.setSubtitle (int resId) "," Set the action bar's subtitle. <br /><br />"
"android.support.v7.app.ActionBar.setElevation (float elevation) "," Set the Z-axis elevation of the action bar in pixels. <br /><br />"
"android.support.v7.app.ActionBar.getThemedContext () "," Returns a Context with an appropriate theme for creating views that will appear in the action bar. <br /><br />"
"android.support.v7.app.ActionBar.setCustomView (View view) "," Set the action bar into custom navigation mode, supplying a view for custom navigation. <br /><br />"
"android.support.v7.app.ActionBar.setTitle (int resId) "," Set the action bar's title. <br /><br />"
"android.support.v7.app.ActionBar.getTabAt (int index) "," This method is deprecated. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.support.v7.app.ActionBar.getSubtitle () "," Returns the current ActionBar subtitle in standard mode. <br /><br />"
"android.support.v7.app.ActionBar.hide () "," Hide the ActionBar if it is currently showing. <br /><br />"
"android.support.v7.app.ActionBar.getSelectedNavigationIndex () "," This method is deprecated. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.support.v7.app.ActionBar.getCustomView () "," no description <br /><br />"
"android.support.v7.app.ActionBar.getDisplayOptions () "," no description <br /><br />"
"android.support.v7.app.ActionBar.setSplitBackgroundDrawable (Drawable d) "," Set the ActionBar's split background. <br /><br />"
"android.support.v7.app.ActionBar.setHomeActionContentDescription (int resId) "," Set an alternate description for the Home/Up action, when enabled. <br /><br />"
"android.support.v7.app.ActionBar.setDisplayShowHomeEnabled (boolean showHome) "," Set whether to include the application home affordance in the action bar. <br /><br />"
"android.support.v7.app.ActionBar.setCustomView (int resId) "," Set the action bar into custom navigation mode, supplying a view for custom navigation. <br /><br />"
"android.support.v7.app.ActionBar.setDisplayShowTitleEnabled (boolean showTitle) "," Set whether an activity title/subtitle should be displayed. <br /><br />"
"android.support.v7.app.ActionBar.isHideOnContentScrollEnabled ()   Return whether the action bar is configured to scroll out of sight along with a "," Return whether the action bar is configured to scroll out of sight along with a nested scrolling child. <br /><br />"
"android.support.v7.app.ActionBar.getElevation () "," Get the Z-axis elevation of the action bar in pixels. <br /><br />"
"android.support.v7.app.ActionBar.getSelectedTab () "," This method is deprecated. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.support.v7.app.ActionBar.show () "," Show the ActionBar if it is not currently showing. <br /><br />"
"android.support.v7.app.ActionBar.addTab (ActionBar.Tab tab, boolean setSelected) "," This method is deprecated. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.support.v7.app.ActionBar.setDisplayUseLogoEnabled (boolean useLogo) "," Set whether to display the activity logo rather than the activity icon. <br /><br />"
"android.support.v7.app.ActionBar.removeAllTabs () "," This method is deprecated. Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead. <br /><br />"
"android.support.v7.app.ActionBar.setTitle (CharSequence title) "," Set the action bar's title. <br /><br />"
"android.support.v7.app.ActionBar.OnMenuVisibilityListener.onMenuVisibilityChanged (boolean isVisible) "," Called when an action bar menu is shown or hidden. <br /><br />"
"android.support.v7.app.ActionBar.OnNavigationListener.onNavigationItemSelected (int itemPosition, long itemId) "," This method is called whenever a navigation item in your action bar is selected. <br /><br />"
"android.support.v7.app.ActionBar.Tab.setTag (Object obj) "," Give this Tab an arbitrary object to hold for later use. <br /><br />"
"android.support.v7.app.ActionBar.Tab.getIcon () "," Return the icon associated with this tab. <br /><br />"
"android.support.v7.app.ActionBar.Tab.select () "," Select this tab. <br /><br />"
"android.support.v7.app.ActionBar.Tab.getTag () "," no description <br /><br />"
"android.support.v7.app.ActionBar.Tab.setText (CharSequence text) "," Set the text displayed on this tab. <br /><br />"
"android.support.v7.app.ActionBar.Tab.setText (int resId) "," Set the text displayed on this tab. <br /><br />"
"android.support.v7.app.ActionBar.Tab.setIcon (Drawable icon) "," Set the icon displayed on this tab. <br /><br />"
"android.support.v7.app.ActionBar.Tab.getText () "," Return the text of this tab. <br /><br />"
"android.support.v7.app.ActionBar.Tab.setCustomView (View view) "," Set a custom view to be used for this tab. <br /><br />"
"android.support.v7.app.ActionBar.Tab.setTabListener (ActionBar.TabListener listener) "," Set the ActionBar.TabListener that will handle switching to and from this tab. <br /><br />"
"android.support.v7.app.ActionBar.Tab.getCustomView () "," Retrieve a previously set custom view for this tab. <br /><br />"
"android.support.v7.app.ActionBar.Tab.setContentDescription (int resId) "," Set a description of this tab's content for use in accessibility support. <br /><br />"
"android.support.v7.app.ActionBar.Tab.setContentDescription (CharSequence contentDesc) "," Set a description of this tab's content for use in accessibility support. <br /><br />"
"android.support.v7.app.ActionBar.Tab.setIcon (int resId) "," Set the icon displayed on this tab. <br /><br />"
"android.support.v7.app.ActionBar.Tab.getPosition () "," Return the current position of this tab in the action bar. <br /><br />"
"android.support.v7.app.ActionBar.Tab.setCustomView (int layoutResId) "," Set a custom view to be used for this tab. <br /><br />"
"android.support.v7.app.ActionBar.Tab.getContentDescription () "," Gets a brief description of this tab's content for use in accessibility support. <br /><br />"
"android.support.v7.app.ActionBar.TabListener.onTabUnselected (ActionBar.Tab tab, FragmentTransaction ft) "," Called when a tab exits the selected state. <br /><br />"
"android.support.v7.app.ActionBar.TabListener.onTabReselected (ActionBar.Tab tab, FragmentTransaction ft) "," Called when a tab that is already selected is chosen again by the user. <br /><br />"
"android.support.v7.app.ActionBar.TabListener.onTabSelected (ActionBar.Tab tab, FragmentTransaction ft) "," Called when a tab enters the selected state. <br /><br />"
"android.support.v7.app.ActionBarDrawerToggle.Delegate.setActionBarDescription (int contentDescRes) "," Set the Action Bar's up indicator content description. <br /><br />"
"android.support.v7.app.ActionBarDrawerToggle.Delegate.getActionBarThemedContext () "," Returns the context of ActionBar <br /><br />"
"android.support.v7.app.ActionBarDrawerToggle.Delegate.setActionBarUpIndicator (Drawable upDrawable, int contentDescRes) "," Set the Action Bar's up indicator drawable and content description. <br /><br />"
"android.support.v7.app.ActionBarDrawerToggle.Delegate.getThemeUpIndicator () "," Returns the drawable to be set as up button when DrawerToggle is disabled <br /><br />"
"android.support.v7.app.ActionBarDrawerToggle.Delegate.isNavigationVisible () "," Returns whether navigation icon is visible or not. <br /><br />"
"android.support.v7.app.ActionBarDrawerToggle.DelegateProvider.getDrawerToggleDelegate () "," no description <br /><br />"
"android.support.v7.app.ActionBarDrawerToggle.setToolbarNavigationClickListener (View.OnClickListener onToolbarNavigationClickListener) "," When DrawerToggle is constructed with a Toolbar, it sets the click listener on the Navigation icon. <br /><br />"
"android.support.v7.app.ActionBarDrawerToggle.getToolbarNavigationClickListener () "," Returns the fallback listener for Navigation icon click events. <br /><br />"
"android.support.v7.app.ActionBarDrawerToggle.onDrawerStateChanged (int newState) "," DrawerLayout.DrawerListener callback method. <br /><br />"
"android.support.v7.app.ActionBarDrawerToggle.setHomeAsUpIndicator (int resId) "," Set the up indicator to display when the drawer indicator is not enabled. <br /><br />"
"android.support.v7.app.ActionBarDrawerToggle.setDrawerIndicatorEnabled (boolean enable) "," Enable or disable the drawer indicator. <br /><br />"
"android.support.v7.app.ActionBarDrawerToggle.onDrawerClosed (View drawerView) "," DrawerLayout.DrawerListener callback method. <br /><br />"
"android.support.v7.app.ActionBarDrawerToggle.onConfigurationChanged (Configuration newConfig)   This method should always be called by your Activity's "," This method should always be called by your Activity's onConfigurationChanged method. <br /><br />"
"android.support.v7.app.ActionBarDrawerToggle.isDrawerIndicatorEnabled () "," no description <br /><br />"
"android.support.v7.app.ActionBarDrawerToggle.setHomeAsUpIndicator (Drawable indicator) "," Set the up indicator to display when the drawer indicator is not enabled. <br /><br />"
"android.support.v7.app.ActionBarDrawerToggle.syncState () "," Synchronize the state of the drawer indicator/affordance with the linked DrawerLayout. <br /><br />"
"android.support.v7.app.ActionBarDrawerToggle.onOptionsItemSelected (MenuItem item)   This method should be called by your Activity's "," This method should be called by your Activity's onOptionsItemSelected method. <br /><br />"
"android.support.v7.app.ActionBarDrawerToggle.onDrawerSlide (View drawerView, float slideOffset) "," DrawerLayout.DrawerListener callback method. <br /><br />"
"android.support.v7.app.ActionBarDrawerToggle.onDrawerOpened (View drawerView) "," DrawerLayout.DrawerListener callback method. <br /><br />"
"android.support.v7.app.AppCompatActivity.setSupportProgress (int progress) "," This method is deprecated. Progress bars are no longer provided in AppCompat. <br /><br />"
"android.support.v7.app.AppCompatActivity.supportShouldUpRecreateTask (Intent targetIntent) "," Returns true if sourceActivity should recreate the task when navigating 'up' by using targetIntent. <br /><br />"
"android.support.v7.app.AppCompatActivity.onSupportActionModeStarted (ActionMode mode) "," Notifies the Activity that a support action mode has been started. <br /><br />"
"android.support.v7.app.AppCompatActivity.setSupportProgressBarIndeterminateVisibility (boolean visible) "," This method is deprecated. Progress bars are no longer provided in AppCompat. <br /><br />"
"android.support.v7.app.AppCompatActivity.supportInvalidateOptionsMenu ()   Support library version of invalidateOptionsMenu () "," Support library version of invalidateOptionsMenu(). <br /><br />"
"android.support.v7.app.AppCompatActivity.onSupportNavigateUp () "," This method is called whenever the user chooses to navigate Up within your application's activity hierarchy from the action bar. <br /><br />"
"android.support.v7.app.AppCompatActivity.onContentChanged ()   This hook is called whenever the content view of the screen changes  (due to a call to Window.setContentView or Window.addContentView) "," This hook is called whenever the content view of the screen changes (due to a call to Window.setContentView or Window.addContentView). <br /><br />"
"android.support.v7.app.AppCompatActivity.getDelegate () "," no description <br /><br />"
"android.support.v7.app.AppCompatActivity.onConfigurationChanged (Configuration newConfig) "," Dispatch configuration change to all fragments. <br /><br />"
"android.support.v7.app.AppCompatActivity.supportNavigateUpTo (Intent upIntent) "," Navigate from sourceActivity to the activity specified by upIntent, finishing sourceActivity in the process. <br /><br />"
"android.support.v7.app.AppCompatActivity.onPrepareSupportNavigateUpTaskStack (TaskStackBuilder builder)   Support version of onPrepareNavigateUpTaskStack (android.app.TaskStackBuilder) "," Support version of onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder). <br /><br />"
"android.support.v7.app.AppCompatActivity.onSupportContentChanged ()    This method is deprecated. Use onContentChanged () "," This method is deprecated. Use onContentChanged() instead. <br /><br />"
"android.support.v7.app.AppCompatActivity.getSupportParentActivityIntent () "," Obtain an Intent that will launch an explicit target activity specified by sourceActivity's PARENT_ACTIVITY <meta-data> element in the application's manifest. <br /><br />"
"android.support.v7.app.AppCompatActivity.onSupportActionModeFinished (ActionMode mode) "," Notifies the activity that a support action mode has finished. <br /><br />"
"android.support.v7.app.AppCompatActivity.addContentView (View view, ViewGroup.LayoutParams params) "," Add an additional content view to the activity. <br /><br />"
"android.support.v7.app.AppCompatActivity.onMenuItemSelected (int featureId, MenuItem item) "," Dispatch context and options menu to fragments. <br /><br />"
"android.support.v7.app.AppCompatActivity.getDrawerToggleDelegate () "," no description <br /><br />"
"android.support.v7.app.AppCompatActivity.supportRequestWindowFeature (int featureId) "," Enable extended support library window features. <br /><br />"
"android.support.v7.app.AppCompatActivity.setContentView (View view) "," Set the activity content to an explicit view. <br /><br />"
"android.support.v7.app.AppCompatActivity.getSupportActionBar ()   Support library version of getActionBar () "," Support library version of getActionBar(). <br /><br />"
"android.support.v7.app.AppCompatActivity.setSupportActionBar (Toolbar toolbar) "," Set a Toolbar to act as the ActionBar for this Activity window. <br /><br />"
"android.support.v7.app.AppCompatActivity.setContentView (int layoutResID) "," Set the activity content from a layout resource. <br /><br />"
"android.support.v7.app.AppCompatActivity.setContentView (View view, ViewGroup.LayoutParams params) "," Set the activity content to an explicit view. <br /><br />"
"android.support.v7.app.AppCompatActivity.getMenuInflater () "," Returns a MenuInflater with this context. <br /><br />"
"android.support.v7.app.AppCompatActivity.startSupportActionMode (ActionMode.Callback callback) "," no description <br /><br />"
"android.support.v7.app.AppCompatActivity.onCreateSupportNavigateUpTaskStack (TaskStackBuilder builder)   Support version of onCreateNavigateUpTaskStack (android.app.TaskStackBuilder) "," Support version of onCreateNavigateUpTaskStack(android.app.TaskStackBuilder). <br /><br />"
"android.support.v7.app.AppCompatActivity.setSupportProgressBarVisibility (boolean visible) "," This method is deprecated. Progress bars are no longer provided in AppCompat. <br /><br />"
"android.support.v7.app.AppCompatActivity.setSupportProgressBarIndeterminate (boolean indeterminate) "," This method is deprecated. Progress bars are no longer provided in AppCompat. <br /><br />"
"android.support.v7.app.AppCompatCallback.onSupportActionModeStarted (ActionMode mode) "," Called when a support action mode has been started. <br /><br />"
"android.support.v7.app.AppCompatCallback.onSupportActionModeFinished (ActionMode mode) "," Called when a support action mode has finished. <br /><br />"
"android.support.v7.app.AppCompatDelegate.create (Dialog dialog, AppCompatCallback callback) "," Create a AppCompatDelegate to use with dialog. <br /><br />"
"android.support.v7.app.AppCompatDelegate.requestWindowFeature (int featureId) "," Enable extended window features. <br /><br />"
"android.support.v7.app.AppCompatDelegate.getDrawerToggleDelegate () "," Returns an ActionBarDrawerToggle.Delegate which can be returned from your Activity if it implements ActionBarDrawerToggle.DelegateProvider. <br /><br />"
"android.support.v7.app.AppCompatDelegate.getMenuInflater ()   Return the value of this call from your getMenuInflater () "," Return the value of this call from your getMenuInflater() <br /><br />"
"android.support.v7.app.AppCompatDelegate.installViewFactory () "," Installs AppCompat's LayoutInflater Factory so that it can replace the framework widgets with compatible tinted versions. <br /><br />"
"android.support.v7.app.AppCompatDelegate.addContentView (View v, ViewGroup.LayoutParams lp)   Should be called instead of addContentView (android.view.View, android.view.ViewGroup.LayoutParams) "," Should be called instead of addContentView(android.view.View, android.view.ViewGroup.LayoutParams)} <br /><br />"
"android.support.v7.app.AppCompatDelegate.createView (View parent, String name, Context context, AttributeSet attrs) "," This should be called from a LayoutInflaterFactory in order to return tint-aware widgets. <br /><br />"
"android.support.v7.app.AppCompatDelegate.setContentView (View v)   Should be called instead of setContentView (android.view.View) "," Should be called instead of setContentView(android.view.View)} <br /><br />"
"android.support.v7.app.AppCompatDelegate.onCreate (Bundle savedInstanceState)   Should be called from Activity.onCreate () "," Should be called from Activity.onCreate() <br /><br />"
"android.support.v7.app.AppCompatDelegate.onPostResume ()   Should be called from onPostResume () "," Should be called from onPostResume() <br /><br />"
"android.support.v7.app.AppCompatDelegate.create (Activity activity, AppCompatCallback callback) "," Create a AppCompatDelegate to use with activity. <br /><br />"
"android.support.v7.app.AppCompatDelegate.getSupportActionBar ()   Support library version of getActionBar () "," Support library version of getActionBar(). <br /><br />"
"android.support.v7.app.AppCompatDelegate.setSupportActionBar (Toolbar toolbar) "," Set a Toolbar to act as the ActionBar for this delegate. <br /><br />"
"android.support.v7.app.AppCompatDelegate.setContentView (int resId)   Should be called instead of setContentView (int) "," Should be called instead of setContentView(int)} <br /><br />"
"android.support.v7.app.AppCompatDelegate.invalidateOptionsMenu ()   Should be called from invalidateOptionsMenu ()} or supportInvalidateOptionsMenu () "," Should be called from invalidateOptionsMenu()} or supportInvalidateOptionsMenu(). <br /><br />"
"android.support.v7.app.AppCompatDelegate.onDestroy ()   Should be called from onDestroy () "," Should be called from onDestroy() <br /><br />"
"android.support.v7.app.AppCompatDelegate.onConfigurationChanged (Configuration newConfig)   Should be called from onConfigurationChanged (Configuration) "," Should be called from onConfigurationChanged(Configuration) <br /><br />"
"android.support.v7.app.AppCompatDelegate.setTitle (CharSequence title)   Should be called from onTitleChanged (CharSequence, int) "," Should be called from onTitleChanged(CharSequence, int)} <br /><br />"
"android.support.v7.app.AppCompatDelegate.onPostCreate (Bundle savedInstanceState)   Should be called from onPostCreate (android.os.Bundle) "," Should be called from onPostCreate(android.os.Bundle) <br /><br />"
"android.support.v7.app.AppCompatDelegate.startSupportActionMode (ActionMode.Callback callback) "," Start an action mode. <br /><br />"
"android.support.v7.app.AppCompatDelegate.setContentView (View v, ViewGroup.LayoutParams lp)   Should be called instead of setContentView (android.view.View, android.view.ViewGroup.LayoutParams) "," Should be called instead of setContentView(android.view.View, android.view.ViewGroup.LayoutParams)} <br /><br />"
"android.support.v7.app.AppCompatDelegate.onStop ()   Should be called from Activity.onStop () "," Should be called from Activity.onStop() <br /><br />"
"android.support.v7.app.AppCompatDialog.getSupportActionBar ()   Support library version of getActionBar () "," Support library version of getActionBar(). <br /><br />"
"android.support.v7.app.AppCompatDialog.setTitle (int titleId) "," Set the title text for this dialog's window. <br /><br />"
"android.support.v7.app.AppCompatDialog.setContentView (int layoutResID) "," Set the screen content from a layout resource. <br /><br />"
"android.support.v7.app.AppCompatDialog.setContentView (View view, ViewGroup.LayoutParams params) "," Set the screen content to an explicit view. <br /><br />"
"android.support.v7.app.AppCompatDialog.onSupportActionModeStarted (ActionMode mode) "," Called when a support action mode has been started. <br /><br />"
"android.support.v7.app.AppCompatDialog.supportRequestWindowFeature (int featureId) "," Enable extended support library window features. <br /><br />"
"android.support.v7.app.AppCompatDialog.onSupportActionModeFinished (ActionMode mode) "," Called when a support action mode has finished. <br /><br />"
"android.support.v7.app.AppCompatDialog.addContentView (View view, ViewGroup.LayoutParams params) "," Add an additional content view to the screen. <br /><br />"
"android.support.v7.app.AppCompatDialog.setTitle (CharSequence title) "," Set the title text for this dialog's window. <br /><br />"
"android.support.v7.app.AppCompatDialog.getDelegate () "," no description <br /><br />"
"android.support.v7.app.AppCompatDialog.setContentView (View view) "," Set the screen content to an explicit view. <br /><br />"
"android.support.v7.app.MediaRouteActionProvider.onPerformDefaultAction () "," Performs an optional default action. <br /><br />"
"android.support.v7.app.MediaRouteActionProvider.getRouteSelector () "," Gets the media route selector for filtering the routes that the user can select using the media route chooser dialog. <br /><br />"
"android.support.v7.app.MediaRouteActionProvider.onCreateActionView () "," Factory method for creating new action views. <br /><br />"
"android.support.v7.app.MediaRouteActionProvider.overridesItemVisibility ()   The result of this method determines whether or not isVisible () "," The result of this method determines whether or not isVisible() will be used by the MenuItem this ActionProvider is bound to help determine its visibility. <br /><br />"
"android.support.v7.app.MediaRouteActionProvider.onCreateMediaRouteButton () "," Called when the media route button is being created. <br /><br />"
"android.support.v7.app.MediaRouteActionProvider.isVisible ()   If overridesItemVisibility () "," If overridesItemVisibility() returns true, the return value of this method will help determine the visibility of the MenuItem this ActionProvider is bound to. <br /><br />"
"android.support.v7.app.MediaRouteActionProvider.setRouteSelector (MediaRouteSelector selector) "," Sets the media route selector for filtering the routes that the user can select using the media route chooser dialog. <br /><br />"
"android.support.v7.app.MediaRouteActionProvider.setDialogFactory (MediaRouteDialogFactory factory) "," Sets the media route dialog factory to use when showing the route chooser or controller dialog. <br /><br />"
"android.support.v7.app.MediaRouteActionProvider.getMediaRouteButton () "," Gets the associated media route button, or null if it has not yet been created. <br /><br />"
"android.support.v7.app.MediaRouteActionProvider.getDialogFactory () "," Gets the media route dialog factory to use when showing the route chooser or controller dialog. <br /><br />"
"android.support.v7.app.MediaRouteButton.performLongClick () "," Call this view's OnLongClickListener, if it is defined. <br /><br />"
"android.support.v7.app.MediaRouteButton.jumpDrawablesToCurrentState ()   Call Drawable.jumpToCurrentState () "," Call Drawable.jumpToCurrentState() on all Drawable objects associated with this view. <br /><br />"
"android.support.v7.app.MediaRouteButton.getRouteSelector () "," Gets the media route selector for filtering the routes that the user can select using the media route chooser dialog. <br /><br />"
"android.support.v7.app.MediaRouteButton.onDetachedFromWindow () "," This is called when the view is detached from a window. <br /><br />"
"android.support.v7.app.MediaRouteButton.setVisibility (int visibility) "," Set the enabled state of this view. <br /><br />"
"android.support.v7.app.MediaRouteButton.performClick () "," Call this view's OnClickListener, if it is defined. <br /><br />"
"android.support.v7.app.MediaRouteButton.onAttachedToWindow () "," This is called when the view is attached to a window. <br /><br />"
"android.support.v7.app.MediaRouteButton.showDialog () "," Show the route chooser or controller dialog. <br /><br />"
"android.support.v7.app.MediaRouteButton.setRouteSelector (MediaRouteSelector selector) "," Sets the media route selector for filtering the routes that the user can select using the media route chooser dialog. <br /><br />"
"android.support.v7.app.MediaRouteButton.setDialogFactory (MediaRouteDialogFactory factory) "," Sets the media route dialog factory to use when showing the route chooser or controller dialog. <br /><br />"
"android.support.v7.app.MediaRouteButton.getDialogFactory () "," Gets the media route dialog factory to use when showing the route chooser or controller dialog. <br /><br />"
"android.support.v7.app.MediaRouteChooserDialog.getRouteSelector () "," Gets the media route selector for filtering the routes that the user can select. <br /><br />"
"android.support.v7.app.MediaRouteChooserDialog.refreshRoutes () "," Refreshes the list of routes that are shown in the chooser dialog. <br /><br />"
"android.support.v7.app.MediaRouteChooserDialog.onDetachedFromWindow () "," Called when the window has been attached to the window manager. <br /><br />"
"android.support.v7.app.MediaRouteChooserDialog.onFilterRoutes (List< MediaRouter.RouteInfo> routes) "," Called to filter the set of routes that should be included in the list. <br /><br />"
"android.support.v7.app.MediaRouteChooserDialog.onAttachedToWindow () "," Called when the window has been attached to the window manager. <br /><br />"
"android.support.v7.app.MediaRouteChooserDialog.onFilterRoute (MediaRouter.RouteInfo route) "," Returns true if the route should be included in the list. <br /><br />"
"android.support.v7.app.MediaRouteChooserDialog.setRouteSelector (MediaRouteSelector selector) "," Sets the media route selector for filtering the routes that the user can select. <br /><br />"
"android.support.v7.app.MediaRouteChooserDialogFragment.getRouteSelector () "," Gets the media route selector for filtering the routes that the user can select. <br /><br />"
"android.support.v7.app.MediaRouteChooserDialogFragment.onCreateChooserDialog (Context context, Bundle savedInstanceState) "," Called when the chooser dialog is being created. <br /><br />"
"android.support.v7.app.MediaRouteChooserDialogFragment.setRouteSelector (MediaRouteSelector selector) "," Sets the media route selector for filtering the routes that the user can select. <br /><br />"
"android.support.v7.app.MediaRouteChooserDialogFragment.onCreateDialog (Bundle savedInstanceState) "," Override to build your own custom Dialog container. <br /><br />"
"android.support.v7.app.MediaRouteControllerDialog.onDetachedFromWindow () "," Called when the window has been attached to the window manager. <br /><br />"
"android.support.v7.app.MediaRouteControllerDialog.onKeyDown (int keyCode, KeyEvent event) "," A key was pressed down. <br /><br />"
"android.support.v7.app.MediaRouteControllerDialog.getRoute () "," Gets the route that this dialog is controlling. <br /><br />"
"android.support.v7.app.MediaRouteControllerDialog.onAttachedToWindow () "," Called when the window has been attached to the window manager. <br /><br />"
"android.support.v7.app.MediaRouteControllerDialog.getMediaSession () "," Gets the description being used by the default UI. <br /><br />"
"android.support.v7.app.MediaRouteControllerDialog.onKeyUp (int keyCode, KeyEvent event) "," A key was released. <br /><br />"
"android.support.v7.app.MediaRouteControllerDialog.getMediaControlView ()   Gets the media control view that was created by onCreateMediaControlView (Bundle) "," Gets the media control view that was created by onCreateMediaControlView(Bundle). <br /><br />"
"android.support.v7.app.MediaRouteControllerDialog.onCreateMediaControlView (Bundle savedInstanceState) "," Provides the subclass an opportunity to create a view that will be included within the body of the dialog to offer additional media controls for the currently playing content. <br /><br />"
"android.support.v7.app.MediaRouteControllerDialogFragment.onCreateControllerDialog (Context context, Bundle savedInstanceState) "," Called when the controller dialog is being created. <br /><br />"
"android.support.v7.app.MediaRouteControllerDialogFragment.onCreateDialog (Bundle savedInstanceState) "," Override to build your own custom Dialog container. <br /><br />"
"android.support.v7.app.MediaRouteDialogFactory.onCreateControllerDialogFragment () "," Called when the controller dialog is being opened and it is time to create the fragment. <br /><br />"
"android.support.v7.app.MediaRouteDialogFactory.getDefault () "," Gets the default factory instance. <br /><br />"
"android.support.v7.app.MediaRouteDialogFactory.onCreateChooserDialogFragment () "," Called when the chooser dialog is being opened and it is time to create the fragment. <br /><br />"
"android.support.v7.app.MediaRouteDiscoveryFragment.onPrepareCallbackFlags () "," Called to prepare the callback flags that will be used when the callback is registered. <br /><br />"
"android.support.v7.app.MediaRouteDiscoveryFragment.onStop () "," Called when the Fragment is no longer started. <br /><br />"
"android.support.v7.app.MediaRouteDiscoveryFragment.getRouteSelector () "," Gets the media route selector for filtering the routes to be discovered. <br /><br />"
"android.support.v7.app.MediaRouteDiscoveryFragment.getMediaRouter () "," Gets the media router instance. <br /><br />"
"android.support.v7.app.MediaRouteDiscoveryFragment.onCreateCallback () "," Called to create the callback that will be registered. <br /><br />"
"android.support.v7.app.MediaRouteDiscoveryFragment.setRouteSelector (MediaRouteSelector selector) "," Sets the media route selector for filtering the routes to be discovered. <br /><br />"
"android.support.v7.app.MediaRouteDiscoveryFragment.onStart () "," Called when the Fragment is visible to the user. <br /><br />"
"android.support.v7.graphics.Palette.Builder.generate (Palette.PaletteAsyncListener listener) "," Generate the Palette asynchronously. <br /><br />"
"android.support.v7.graphics.Palette.Builder.generate () "," Generate and return the Palette synchronously. <br /><br />"
"android.support.v7.graphics.Palette.Builder.generator (Palette.Generator generator) "," Set the Palette.Generator to use when generating the Palette. <br /><br />"
"android.support.v7.graphics.Palette.Builder.resizeBitmapSize (int maxDimension) "," Set the resize value when using a Bitmap as the source. <br /><br />"
"android.support.v7.graphics.Palette.Builder.maximumColorCount (int colors) "," Set the maximum number of colors to use in the quantization step when using a Bitmap as the source. <br /><br />"
"android.support.v7.graphics.Palette.Generator.getLightVibrantSwatch () "," Return a light and vibrant Palette.Swatch <br /><br />"
"android.support.v7.graphics.Palette.Generator.getDarkMutedSwatch () "," Return a muted and dark Palette.Swatch <br /><br />"
"android.support.v7.graphics.Palette.Generator.getLightMutedSwatch () "," Return a muted and light Palette.Swatch <br /><br />"
"android.support.v7.graphics.Palette.Generator.generate (List< Palette.Swatch> swatches) "," This method will be called with the Palette.Swatch that represent an image. <br /><br />"
"android.support.v7.graphics.Palette.Generator.getDarkVibrantSwatch () "," Return a dark and vibrant Palette.Swatch <br /><br />"
"android.support.v7.graphics.Palette.Generator.getVibrantSwatch () "," Return the most vibrant Palette.Swatch <br /><br />"
"android.support.v7.graphics.Palette.Generator.getMutedSwatch () "," Return a muted Palette.Swatch <br /><br />"
"android.support.v7.graphics.Palette.PaletteAsyncListener.onGenerated (Palette palette) "," Called when the Palette has been generated. <br /><br />"
"android.support.v7.graphics.Palette.Swatch.getPopulation () "," no description <br /><br />"
"android.support.v7.graphics.Palette.Swatch.getRgb () "," no description <br /><br />"
"android.support.v7.graphics.Palette.Swatch.getHsl () "," Return this swatch's HSL values. <br /><br />"
"android.support.v7.graphics.Palette.Swatch.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.support.v7.graphics.Palette.Swatch.getTitleTextColor () "," Returns an appropriate color to use for any 'title' text which is displayed over this Palette.Swatch's color. <br /><br />"
"android.support.v7.graphics.Palette.Swatch.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v7.graphics.Palette.Swatch.getBodyTextColor () "," Returns an appropriate color to use for any 'body' text which is displayed over this Palette.Swatch's color. <br /><br />"
"android.support.v7.graphics.Palette.Swatch.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.support.v7.internal.widget.TintAutoCompleteTextView.setDropDownBackgroundResource (int id) "," Sets the background of the auto-complete drop-down list. <br /><br />"
"android.support.v7.internal.widget.TintCheckBox.setButtonDrawable (int resid) "," Set the button graphic to a given Drawable, identified by its resource id. <br /><br />"
"android.support.v7.internal.widget.TintCheckedTextView.setCheckMarkDrawable (int resid) "," Set the checkmark to a given Drawable, identified by its resourece id. <br /><br />"
"android.support.v7.internal.widget.TintMultiAutoCompleteTextView.setDropDownBackgroundResource (int id) "," Sets the background of the auto-complete drop-down list. <br /><br />"
"android.support.v7.internal.widget.TintRadioButton.setButtonDrawable (int resid) "," Set the button graphic to a given Drawable, identified by its resource id. <br /><br />"
"android.support.v7.media.MediaItemStatus.Builder.setContentDuration (long durationMilliseconds) "," Sets the total duration of the content to be played as a long integer number of milliseconds. <br /><br />"
"android.support.v7.media.MediaItemStatus.Builder.setExtras (Bundle extras) "," Sets a bundle of extras for this status object. <br /><br />"
"android.support.v7.media.MediaItemStatus.Builder.setContentPosition (long positionMilliseconds) "," Sets the content playback position as a long integer number of milliseconds from the beginning of the content. <br /><br />"
"android.support.v7.media.MediaItemStatus.Builder.setTimestamp (long elapsedRealtimeTimestamp)   Sets the timestamp associated with the status information in milliseconds since boot in the elapsedRealtime () "," Sets the timestamp associated with the status information in milliseconds since boot in the elapsedRealtime() time base. <br /><br />"
"android.support.v7.media.MediaItemStatus.Builder.build () "," Builds the media item status object. <br /><br />"
"android.support.v7.media.MediaItemStatus.Builder.setPlaybackState (int playbackState) "," Sets the playback state of the media item. <br /><br />"
"android.support.v7.media.MediaItemStatus.getExtras () "," Gets a bundle of extras for this status object. <br /><br />"
"android.support.v7.media.MediaItemStatus.asBundle () "," Converts this object to a bundle for serialization. <br /><br />"
"android.support.v7.media.MediaItemStatus.getTimestamp ()   Gets the timestamp associated with the status information in milliseconds since boot in the elapsedRealtime () "," Gets the timestamp associated with the status information in milliseconds since boot in the elapsedRealtime() time base. <br /><br />"
"android.support.v7.media.MediaItemStatus.fromBundle (Bundle bundle) "," Creates an instance from a bundle. <br /><br />"
"android.support.v7.media.MediaItemStatus.getContentDuration () "," Gets the total duration of the content to be played as a long integer number of milliseconds. <br /><br />"
"android.support.v7.media.MediaItemStatus.getContentPosition () "," Gets the content playback position as a long integer number of milliseconds from the beginning of the content. <br /><br />"
"android.support.v7.media.MediaItemStatus.getPlaybackState () "," Gets the playback state of the media item. <br /><br />"
"android.support.v7.media.MediaItemStatus.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v7.media.MediaRouteDescriptor.Builder.setDescription (String description) "," Sets the user-visible description of the route. <br /><br />"
"android.support.v7.media.MediaRouteDescriptor.Builder.setCanDisconnect (boolean canDisconnect) "," Sets whether the route can be disconnected without stopping playback. <br /><br />"
"android.support.v7.media.MediaRouteDescriptor.Builder.addControlFilters (Collection< IntentFilter> filters) "," Adds a list of media control intent filters for the route. <br /><br />"
"android.support.v7.media.MediaRouteDescriptor.Builder.build () "," Builds the media route descriptor. <br /><br />"
"android.support.v7.media.MediaRouteDescriptor.Builder.setConnecting (boolean connecting) "," Sets whether the route is in the process of connecting and is not yet ready for use. <br /><br />"
"android.support.v7.media.MediaRouteDescriptor.Builder.setId (String id) "," Sets the unique id of the route. <br /><br />"
"android.support.v7.media.MediaRouteDescriptor.Builder.setVolume (int volume) "," Sets the route's current volume, or 0 if unknown. <br /><br />"
"android.support.v7.media.MediaRouteDescriptor.Builder.setSettingsActivity (IntentSender is) "," Sets an intent sender for launching the settings activity for this route. <br /><br />"
"android.support.v7.media.MediaRouteDescriptor.Builder.setPlaybackType (int playbackType) "," Sets the route's playback type. <br /><br />"
"android.support.v7.media.MediaRouteDescriptor.Builder.setName (String name) "," Sets the user-visible name of the route. <br /><br />"
"android.support.v7.media.MediaRouteDescriptor.Builder.setExtras (Bundle extras) "," Sets a bundle of extras for this route descriptor. <br /><br />"
"android.support.v7.media.MediaRouteDescriptor.Builder.setPresentationDisplayId (int presentationDisplayId) "," Sets the route's presentation display id, or -1 if none. <br /><br />"
"android.support.v7.media.MediaRouteDescriptor.Builder.addControlFilter (IntentFilter filter) "," Adds a media control intent filter for the route. <br /><br />"
"android.support.v7.media.MediaRouteDescriptor.Builder.setEnabled (boolean enabled) "," Sets whether the route is enabled. <br /><br />"
"android.support.v7.media.MediaRouteDescriptor.Builder.setVolumeHandling (int volumeHandling) "," Sets the route's volume handling. <br /><br />"
"android.support.v7.media.MediaRouteDescriptor.Builder.setPlaybackStream (int playbackStream) "," Sets the route's playback stream. <br /><br />"
"android.support.v7.media.MediaRouteDescriptor.Builder.setVolumeMax (int volumeMax) "," Sets the route's maximum volume, or 0 if unknown. <br /><br />"
"android.support.v7.media.MediaRouteDiscoveryRequest.asBundle () "," Converts this object to a bundle for serialization. <br /><br />"
"android.support.v7.media.MediaRouteDiscoveryRequest.isActiveScan () "," Returns true if active scanning should be performed. <br /><br />"
"android.support.v7.media.MediaRouteDiscoveryRequest.getSelector () "," Gets the route selector that specifies the kinds of routes to discover. <br /><br />"
"android.support.v7.media.MediaRouteDiscoveryRequest.fromBundle (Bundle bundle) "," Creates an instance from a bundle. <br /><br />"
"android.support.v7.media.MediaRouteDiscoveryRequest.isValid () "," Returns true if the discovery request has all of the required fields. <br /><br />"
"android.support.v7.media.MediaRouteDiscoveryRequest.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.support.v7.media.MediaRouteDiscoveryRequest.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v7.media.MediaRouteDiscoveryRequest.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.support.v7.media.MediaRouteProvider.Callback.onDescriptorChanged (MediaRouteProvider provider, MediaRouteProviderDescriptor descriptor) "," Called when information about a route provider and its routes changes. <br /><br />"
"android.support.v7.media.MediaRouteProvider.getMetadata () "," Gets some metadata about the provider's implementation. <br /><br />"
"android.support.v7.media.MediaRouteProvider.setDescriptor (MediaRouteProviderDescriptor descriptor) "," Sets the provider's descriptor. <br /><br />"
"android.support.v7.media.MediaRouteProvider.getDiscoveryRequest () "," Gets the current discovery request which informs the provider about the kinds of routes to discover and whether to perform active scanning. <br /><br />"
"android.support.v7.media.MediaRouteProvider.onDiscoveryRequestChanged (MediaRouteDiscoveryRequest request) "," Called by the media router when the discovery request has changed. <br /><br />"
"android.support.v7.media.MediaRouteProvider.onCreateRouteController (String routeId) "," Called by the media router to obtain a route controller for a particular route. <br /><br />"
"android.support.v7.media.MediaRouteProvider.getDescriptor () "," Gets the provider's descriptor. <br /><br />"
"android.support.v7.media.MediaRouteProvider.setCallback (MediaRouteProvider.Callback callback) "," Sets a callback to invoke when the provider's descriptor changes. <br /><br />"
"android.support.v7.media.MediaRouteProvider.setDiscoveryRequest (MediaRouteDiscoveryRequest request) "," Sets a discovery request to inform the provider about the kinds of routes that its clients would like to discover and whether to perform active scanning. <br /><br />"
"android.support.v7.media.MediaRouteProvider.getHandler () "," Gets the provider's handler which is associated with the main thread. <br /><br />"
"android.support.v7.media.MediaRouteProvider.getContext () "," Gets the context of the media route provider. <br /><br />"
"android.support.v7.media.MediaRouteProvider.ProviderMetadata.getComponentName () "," Gets the provider's component name. <br /><br />"
"android.support.v7.media.MediaRouteProvider.ProviderMetadata.getPackageName () "," Gets the provider's package name. <br /><br />"
"android.support.v7.media.MediaRouteProvider.ProviderMetadata.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v7.media.MediaRouteProvider.RouteController.onUnselect (int reason) "," Unselects the route and provides a reason. <br /><br />"
"android.support.v7.media.MediaRouteProvider.RouteController.onUnselect () "," Unselects the route. <br /><br />"
"android.support.v7.media.MediaRouteProvider.RouteController.onRelease () "," Releases the route controller, allowing it to free its resources. <br /><br />"
"android.support.v7.media.MediaRouteProvider.RouteController.onUpdateVolume (int delta) "," Requests an incremental volume update for the route. <br /><br />"
"android.support.v7.media.MediaRouteProvider.RouteController.onControlRequest (Intent intent, MediaRouter.ControlRequestCallback callback) "," Performs a media control request asynchronously on behalf of the route. <br /><br />"
"android.support.v7.media.MediaRouteProvider.RouteController.onSetVolume (int volume) "," Requests to set the volume of the route. <br /><br />"
"android.support.v7.media.MediaRouteProvider.RouteController.onSelect () "," Selects the route. <br /><br />"
"android.support.v7.media.MediaRouteProviderDescriptor.Builder.addRoute (MediaRouteDescriptor route) "," Adds a route. <br /><br />"
"android.support.v7.media.MediaRouteProviderDescriptor.Builder.build () "," Builds the media route provider descriptor. <br /><br />"
"android.support.v7.media.MediaRouteProviderDescriptor.Builder.addRoutes (Collection< MediaRouteDescriptor> routes) "," Adds a list of routes. <br /><br />"
"android.support.v7.media.MediaRouteProviderService.onCreateMediaRouteProvider () "," Called by the system when it is time to create the media route provider. <br /><br />"
"android.support.v7.media.MediaRouteProviderService.onBind (Intent intent) "," Return the communication channel to the service. <br /><br />"
"android.support.v7.media.MediaRouteProviderService.getMediaRouteProvider () "," Gets the media route provider offered by this service. <br /><br />"
"android.support.v7.media.MediaRouter.Callback.onRouteSelected (MediaRouter router, MediaRouter.RouteInfo route) "," Called when the supplied media route becomes selected as the active route. <br /><br />"
"android.support.v7.media.MediaRouter.Callback.onRouteChanged (MediaRouter router, MediaRouter.RouteInfo route) "," Called when a property of the indicated media route has changed. <br /><br />"
"android.support.v7.media.MediaRouter.Callback.onRouteRemoved (MediaRouter router, MediaRouter.RouteInfo route) "," Called when a media route has been removed. <br /><br />"
"android.support.v7.media.MediaRouter.Callback.onRoutePresentationDisplayChanged (MediaRouter router, MediaRouter.RouteInfo route) "," Called when a media route's presentation display changes. <br /><br />"
"android.support.v7.media.MediaRouter.Callback.onRouteAdded (MediaRouter router, MediaRouter.RouteInfo route) "," Called when a media route has been added. <br /><br />"
"android.support.v7.media.MediaRouter.Callback.onProviderChanged (MediaRouter router, MediaRouter.ProviderInfo provider) "," Called when a property of the indicated media route provider has changed. <br /><br />"
"android.support.v7.media.MediaRouter.Callback.onRouteUnselected (MediaRouter router, MediaRouter.RouteInfo route) "," Called when the supplied media route becomes unselected as the active route. <br /><br />"
"android.support.v7.media.MediaRouter.Callback.onRouteVolumeChanged (MediaRouter router, MediaRouter.RouteInfo route) "," Called when a media route's volume changes. <br /><br />"
"android.support.v7.media.MediaRouter.Callback.onProviderAdded (MediaRouter router, MediaRouter.ProviderInfo provider) "," Called when a media route provider has been added. <br /><br />"
"android.support.v7.media.MediaRouter.Callback.onProviderRemoved (MediaRouter router, MediaRouter.ProviderInfo provider) "," Called when a media route provider has been removed. <br /><br />"
"android.support.v7.media.MediaRouter.ControlRequestCallback.onResult (Bundle data) "," Called when a media control request succeeds. <br /><br />"
"android.support.v7.media.MediaRouter.ControlRequestCallback.onError (String error, Bundle data) "," Called when a media control request fails. <br /><br />"
"android.support.v7.media.MediaRouter.getRoutes () "," Gets information about the routes currently known to this media router. <br /><br />"
"android.support.v7.media.MediaRouter.setMediaSession (Object mediaSession) "," Sets the media session to enable remote control of the volume of the selected route. <br /><br />"
"android.support.v7.media.MediaRouter.addCallback (MediaRouteSelector selector, MediaRouter.Callback callback) "," Registers a callback to discover routes that match the selector and to receive events when they change. <br /><br />"
"android.support.v7.media.MediaRouter.getDefaultRoute () "," Gets the default route for playing media content on the system. <br /><br />"
"android.support.v7.media.MediaRouter.getInstance (Context context) "," Gets an instance of the media router service associated with the context. <br /><br />"
"android.support.v7.media.MediaRouter.updateSelectedRoute (MediaRouteSelector selector) "," Returns the selected route if it matches the specified selector, otherwise selects the default route and returns it. <br /><br />"
"android.support.v7.media.MediaRouter.addCallback (MediaRouteSelector selector, MediaRouter.Callback callback, int flags) "," Registers a callback to discover routes that match the selector and to receive events when they change. <br /><br />"
"android.support.v7.media.MediaRouter.getSelectedRoute () "," Gets the currently selected route. <br /><br />"
"android.support.v7.media.MediaRouter.getProviders () "," Gets information about the route providers currently known to this media router. <br /><br />"
"android.support.v7.media.MediaRouter.unselect (int reason) "," Unselects the current round and selects the default route instead. <br /><br />"
"android.support.v7.media.MediaRouter.addProvider (MediaRouteProvider providerInstance) "," Registers a media route provider within this application process. <br /><br />"
"android.support.v7.media.MediaRouter.selectRoute (MediaRouter.RouteInfo route) "," Selects the specified route. <br /><br />"
"android.support.v7.media.MediaRouter.removeProvider (MediaRouteProvider providerInstance) "," Unregisters a media route provider within this application process. <br /><br />"
"android.support.v7.media.MediaRouter.removeRemoteControlClient (Object remoteControlClient) "," Removes a remote control client. <br /><br />"
"android.support.v7.media.MediaRouter.getMediaSessionToken () "," no description <br /><br />"
"android.support.v7.media.MediaRouter.setMediaSessionCompat (MediaSessionCompat mediaSession) "," Sets a compat media session to enable remote control of the volume of the selected route. <br /><br />"
"android.support.v7.media.MediaRouter.removeCallback (MediaRouter.Callback callback) "," Removes the specified callback. <br /><br />"
"android.support.v7.media.MediaRouter.isRouteAvailable (MediaRouteSelector selector, int flags) "," Returns true if there is a route that matches the specified selector. <br /><br />"
"android.support.v7.media.MediaRouter.addRemoteControlClient (Object remoteControlClient) "," Adds a remote control client to enable remote control of the volume of the selected route. <br /><br />"
"android.support.v7.media.MediaRouter.ProviderInfo.getRoutes () "," Gets the routes published by this route provider. <br /><br />"
"android.support.v7.media.MediaRouter.ProviderInfo.getComponentName () "," Gets the component name of the media route provider. <br /><br />"
"android.support.v7.media.MediaRouter.ProviderInfo.getProviderInstance () "," Gets the provider's underlying MediaRouteProvider instance. <br /><br />"
"android.support.v7.media.MediaRouter.ProviderInfo.getPackageName () "," Gets the package name of the media route provider. <br /><br />"
"android.support.v7.media.MediaRouter.ProviderInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.supportsControlRequest (Intent intent) "," Returns true if the route supports the specified media control request. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.getSettingsIntent () "," Gets an intent sender for launching a settings activity for this route. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.select () "," Selects this media route. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.getPlaybackType () "," Gets the type of playback associated with this route. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.isDefault () "," Returns true if this route is the default route. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.supportsControlAction (String category, String action) "," Returns true if the route supports the specified media control category and action. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.getVolumeMax () "," Gets the maximum volume at which the playback associated with this route is performed. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.requestSetVolume (int volume) "," Requests a volume change for this route asynchronously. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.getName () "," Gets the user-visible name of the route. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.getDescription () "," Gets the user-visible description of the route. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.supportsControlCategory (String category) "," Returns true if the route supports the specified media control category. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.getProvider () "," Gets information about the provider of this media route. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.getPlaybackStream () "," Gets the audio stream over which the playback associated with this route is performed. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.canDisconnect () "," Gets whether this route supports disconnecting without interrupting playback. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.getControlFilters () "," Gets a list of media control intent filters that describe the capabilities of this route and the media control actions that it supports. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.getPresentationDisplay () "," Gets the Display that should be used by the application to show a Presentation on an external display when this route is selected. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.requestUpdateVolume (int delta) "," Requests an incremental volume update for this route asynchronously. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.sendControlRequest (Intent intent, MediaRouter.ControlRequestCallback callback) "," Sends a media control request to be performed asynchronously by the route's destination. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.getVolume () "," Gets the current volume for this route. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.getVolumeHandling () "," Gets information about how volume is handled on the route. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.getExtras () "," Gets a collection of extra properties about this route that were supplied by its media route provider, or null if none. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.matchesSelector (MediaRouteSelector selector) "," Returns true if the route supports at least one of the capabilities described by a media route selector. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.isEnabled () "," Returns true if this route is enabled and may be selected. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.getId () "," Gets the unique id of the route. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.isSelected () "," Returns true if this route is currently selected. <br /><br />"
"android.support.v7.media.MediaRouter.RouteInfo.isConnecting () "," Returns true if the route is in the process of connecting and is not yet ready for use. <br /><br />"
"android.support.v7.media.MediaRouteSelector.Builder.build () "," Builds the media route selector. <br /><br />"
"android.support.v7.media.MediaRouteSelector.Builder.addSelector (MediaRouteSelector selector) "," Adds the contents of an existing media route selector to the builder. <br /><br />"
"android.support.v7.media.MediaRouteSelector.Builder.addControlCategory (String category) "," Adds a media control category to the builder. <br /><br />"
"android.support.v7.media.MediaRouteSelector.Builder.addControlCategories (Collection< String> categories) "," Adds a list of media control categories to the builder. <br /><br />"
"android.support.v7.media.MediaRouteSelector.hasControlCategory (String category) "," Returns true if the selector contains the specified category. <br /><br />"
"android.support.v7.media.MediaRouteSelector.contains (MediaRouteSelector selector) "," Returns true if this selector contains all of the capabilities described by the specified selector. <br /><br />"
"android.support.v7.media.MediaRouteSelector.asBundle () "," Converts this object to a bundle for serialization. <br /><br />"
"android.support.v7.media.MediaRouteSelector.matchesControlFilters (List< IntentFilter> filters) "," Returns true if the selector matches at least one of the specified control filters. <br /><br />"
"android.support.v7.media.MediaRouteSelector.fromBundle (Bundle bundle) "," Creates an instance from a bundle. <br /><br />"
"android.support.v7.media.MediaRouteSelector.isEmpty () "," Returns true if the selector does not specify any capabilities. <br /><br />"
"android.support.v7.media.MediaRouteSelector.isValid () "," Returns true if the selector has all of the required fields. <br /><br />"
"android.support.v7.media.MediaRouteSelector.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.support.v7.media.MediaRouteSelector.getControlCategories () "," Gets the list of media control categories in the selector. <br /><br />"
"android.support.v7.media.MediaRouteSelector.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v7.media.MediaRouteSelector.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.support.v7.media.MediaSessionStatus.Builder.setQueuePaused (boolean queuePaused) "," Sets whether the queue is paused. <br /><br />"
"android.support.v7.media.MediaSessionStatus.Builder.setExtras (Bundle extras) "," Sets a bundle of extras for this status object. <br /><br />"
"android.support.v7.media.MediaSessionStatus.Builder.setTimestamp (long elapsedRealtimeTimestamp)   Sets the timestamp associated with the status information in milliseconds since boot in the elapsedRealtime () "," Sets the timestamp associated with the status information in milliseconds since boot in the elapsedRealtime() time base. <br /><br />"
"android.support.v7.media.MediaSessionStatus.Builder.build () "," Builds the media session status object. <br /><br />"
"android.support.v7.media.MediaSessionStatus.Builder.setSessionState (int sessionState) "," Sets the session state. <br /><br />"
"android.support.v7.media.MediaSessionStatus.getExtras () "," Gets a bundle of extras for this status object. <br /><br />"
"android.support.v7.media.MediaSessionStatus.isQueuePaused () "," Returns true if the session's queue is paused. <br /><br />"
"android.support.v7.media.MediaSessionStatus.asBundle () "," Converts this object to a bundle for serialization. <br /><br />"
"android.support.v7.media.MediaSessionStatus.getTimestamp ()   Gets the timestamp associated with the status information in milliseconds since boot in the elapsedRealtime () "," Gets the timestamp associated with the status information in milliseconds since boot in the elapsedRealtime() time base. <br /><br />"
"android.support.v7.media.MediaSessionStatus.getSessionState () "," Gets the session state. <br /><br />"
"android.support.v7.media.MediaSessionStatus.fromBundle (Bundle bundle) "," Creates an instance from a bundle. <br /><br />"
"android.support.v7.media.MediaSessionStatus.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.ActionCallback.onError (String error, int code, Bundle data) "," Called when a media control request fails. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.getSessionId () "," Gets the current session id if there is one. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.isRemotePlaybackSupported () "," Returns true if the route supports remote playback. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.getStatus (String itemId, Bundle extras, RemotePlaybackClient.ItemActionCallback callback) "," Sends a request to get the status of a media item. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.stop (Bundle extras, RemotePlaybackClient.SessionActionCallback callback) "," Sends a request to stop media playback and clear the media playback queue. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.resume (Bundle extras, RemotePlaybackClient.SessionActionCallback callback)   Sends a request to resume  (unpause) "," Sends a request to resume (unpause) media playback. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.endSession (Bundle extras, RemotePlaybackClient.SessionActionCallback callback) "," Sends a request to end the media playback session. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.release () "," Releases resources owned by the client. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.pause (Bundle extras, RemotePlaybackClient.SessionActionCallback callback) "," Sends a request to pause media playback. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.startSession (Bundle extras, RemotePlaybackClient.SessionActionCallback callback) "," Sends a request to start a new media playback session. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.setSessionId (String sessionId) "," Sets the current session id. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.getSessionStatus (Bundle extras, RemotePlaybackClient.SessionActionCallback callback) "," Sends a request to get the status of the media playback session. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.play (Uri contentUri, String mimeType, Bundle metadata, long positionMillis, Bundle extras, RemotePlaybackClient.ItemActionCallback callback) "," Sends a request to play a media item. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.seek (String itemId, long positionMillis, Bundle extras, RemotePlaybackClient.ItemActionCallback callback) "," Sends a request to seek to a new position in a media item. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.isQueuingSupported () "," Returns true if the route supports queuing features. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.remove (String itemId, Bundle extras, RemotePlaybackClient.ItemActionCallback callback) "," Sends a request to remove a media item from the queue. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.enqueue (Uri contentUri, String mimeType, Bundle metadata, long positionMillis, Bundle extras, RemotePlaybackClient.ItemActionCallback callback) "," Sends a request to enqueue a media item. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.hasSession () "," Returns true if the client currently has a session. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.isSessionManagementSupported () "," Returns true if the route supports session management features. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.setStatusCallback (RemotePlaybackClient.StatusCallback callback) "," Sets a callback that should receive status updates when the state of media sessions or media items created by this instance of the remote playback client changes. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.ItemActionCallback.onResult (Bundle data, String sessionId, MediaSessionStatus sessionStatus, String itemId, MediaItemStatus itemStatus) "," Called when the request succeeds. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.SessionActionCallback.onResult (Bundle data, String sessionId, MediaSessionStatus sessionStatus) "," Called when the request succeeds. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.StatusCallback.onSessionStatusChanged (Bundle data, String sessionId, MediaSessionStatus sessionStatus) "," Called when the status of a media session changes. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.StatusCallback.onItemStatusChanged (Bundle data, String sessionId, MediaSessionStatus sessionStatus, String itemId, MediaItemStatus itemStatus) "," Called when the status of a media item changes. <br /><br />"
"android.support.v7.media.RemotePlaybackClient.StatusCallback.onSessionChanged (String sessionId) "," Called when the session of the remote playback client changes. <br /><br />"
"android.support.v7.util.SortedList.BatchedCallback<T2>.onInserted (int position, int count) "," Called by the SortedList when an item is inserted at the given position. <br /><br />"
"android.support.v7.util.SortedList.BatchedCallback<T2>.onChanged (int position, int count) "," Called by the SortedList when the item at the given position is updated. <br /><br />"
"android.support.v7.util.SortedList.BatchedCallback<T2>.compare (T2 o1, T2 o2)   Similar to compare (Object, Object) "," Similar to compare(Object, Object), should compare two and return how they should be ordered. <br /><br />"
"android.support.v7.util.SortedList.BatchedCallback<T2>.onRemoved (int position, int count) "," Called by the SortedList when an item is removed from the given position. <br /><br />"
"android.support.v7.util.SortedList.BatchedCallback<T2>.dispatchLastEvent () "," This method dispatches any pending event notifications to the wrapped Callback. <br /><br />"
"android.support.v7.util.SortedList.BatchedCallback<T2>.areItemsTheSame (T2 item1, T2 item2) "," Called by the SortedList to decide whether two object represent the same Item or not. <br /><br />"
"android.support.v7.util.SortedList.BatchedCallback<T2>.areContentsTheSame (T2 oldItem, T2 newItem) "," Called by the SortedList when it wants to check whether two items have the same data or not. <br /><br />"
"android.support.v7.util.SortedList.BatchedCallback<T2>.onMoved (int fromPosition, int toPosition) "," Called by the SortedList when an item changes its position in the list. <br /><br />"
"android.support.v7.util.SortedList.Callback<T2>.onInserted (int position, int count) "," Called by the SortedList when an item is inserted at the given position. <br /><br />"
"android.support.v7.util.SortedList.Callback<T2>.onChanged (int position, int count) "," Called by the SortedList when the item at the given position is updated. <br /><br />"
"android.support.v7.util.SortedList.Callback<T2>.compare (T2 o1, T2 o2)   Similar to compare (Object, Object) "," Similar to compare(Object, Object), should compare two and return how they should be ordered. <br /><br />"
"android.support.v7.util.SortedList.Callback<T2>.onRemoved (int position, int count) "," Called by the SortedList when an item is removed from the given position. <br /><br />"
"android.support.v7.util.SortedList.Callback<T2>.areItemsTheSame (T2 item1, T2 item2) "," Called by the SortedList to decide whether two object represent the same Item or not. <br /><br />"
"android.support.v7.util.SortedList.Callback<T2>.areContentsTheSame (T2 oldItem, T2 newItem) "," Called by the SortedList when it wants to check whether two items have the same data or not. <br /><br />"
"android.support.v7.util.SortedList.Callback<T2>.onMoved (int fromPosition, int toPosition) "," Called by the SortedList when an item changes its position in the list. <br /><br />"
"android.support.v7.util.SortedList<T>.beginBatchedUpdates ()   Batches adapter updates that happen between calling this method until calling endBatchedUpdates () "," Batches adapter updates that happen between calling this method until calling endBatchedUpdates(). <br /><br />"
"android.support.v7.util.SortedList<T>.get (int index) "," Returns the item at the given index. <br /><br />"
"android.support.v7.util.SortedList<T>.removeItemAt (int index)   Removes the item at the given index and calls onRemoved (int, int) "," Removes the item at the given index and calls onRemoved(int, int). <br /><br />"
"android.support.v7.util.SortedList<T>.endBatchedUpdates () "," Ends the update transaction and dispatches any remaining event to the callback. <br /><br />"
"android.support.v7.util.SortedList<T>.recalculatePositionOfItemAt (int index)   This method can be used to recalculate the position of the item at the given index, without triggering an onChanged (int, int) "," This method can be used to recalculate the position of the item at the given index, without triggering an onChanged(int, int) callback. <br /><br />"
"android.support.v7.util.SortedList<T>.indexOf (T item) "," Returns the position of the provided item. <br /><br />"
"android.support.v7.util.SortedList<T>.remove (T item)   Removes the provided item from the list and calls onRemoved (int, int) "," Removes the provided item from the list and calls onRemoved(int, int). <br /><br />"
"android.support.v7.util.SortedList<T>.size () "," The number of items in the list. <br /><br />"
"android.support.v7.util.SortedList<T>.updateItemAt (int index, T item)   Updates the item at the given index and calls onChanged (int, int) and/or onMoved (int, int) "," Updates the item at the given index and calls onChanged(int, int) and/or onMoved(int, int) if necessary. <br /><br />"
"android.support.v7.util.SortedList<T>.add (T item) "," Adds the given item to the list. <br /><br />"
"android.support.v7.util.SortedListAdapterCallbackWrapperTest.testAdd () "," no description <br /><br />"
"android.support.v7.util.SortedListAdapterCallbackWrapperTest.testBatchAddReverseLoop () "," no description <br /><br />"
"android.support.v7.util.SortedListAdapterCallbackWrapperTest.testBatchChange4 () "," no description <br /><br />"
"android.support.v7.util.SortedListAdapterCallbackWrapperTest.testRemove () "," no description <br /><br />"
"android.support.v7.util.SortedListAdapterCallbackWrapperTest.testBatchAdd6 () "," no description <br /><br />"
"android.support.v7.util.SortedListAdapterCallbackWrapperTest.testBatchChange5 () "," no description <br /><br />"
"android.support.v7.util.SortedListAdapterCallbackWrapperTest.testBatchAdd3 () "," no description <br /><br />"
"android.support.v7.util.SortedListAdapterCallbackWrapperTest.testBatchRemove2 () "," no description <br /><br />"
"android.support.v7.util.SortedListAdapterCallbackWrapperTest.testBatchChange2 () "," no description <br /><br />"
"android.support.v7.util.SortedListAdapterCallbackWrapperTest.testBatchAddLoop () "," no description <br /><br />"
"android.support.v7.util.SortedListAdapterCallbackWrapperTest.testMove () "," no description <br /><br />"
"android.support.v7.util.SortedListAdapterCallbackWrapperTest.testBatchChange1 () "," no description <br /><br />"
"android.support.v7.util.SortedListAdapterCallbackWrapperTest.testBadBatchAddReverseLoop () "," no description <br /><br />"
"android.support.v7.util.SortedListAdapterCallbackWrapperTest.testBatchAdd5 () "," no description <br /><br />"
"android.support.v7.util.SortedListAdapterCallbackWrapperTest.testChange () "," no description <br /><br />"
"android.support.v7.util.SortedListAdapterCallbackWrapperTest.testBatchAdd4 () "," no description <br /><br />"
"android.support.v7.util.SortedListAdapterCallbackWrapperTest.testBatchAdd2 () "," no description <br /><br />"
"android.support.v7.util.SortedListAdapterCallbackWrapperTest.testBatchAdd1 () "," no description <br /><br />"
"android.support.v7.util.SortedListAdapterCallbackWrapperTest.testBatchRemove3 () "," no description <br /><br />"
"android.support.v7.util.SortedListAdapterCallbackWrapperTest.testBatchRemove1 () "," no description <br /><br />"
"android.support.v7.util.SortedListAdapterCallbackWrapperTest.testBatchChange3 () "," no description <br /><br />"
"android.support.v7.util.SortedListTest.testEmpty () "," no description <br /><br />"
"android.support.v7.util.SortedListTest.testAdd () "," no description <br /><br />"
"android.support.v7.util.SortedListTest.testRemove () "," no description <br /><br />"
"android.support.v7.util.SortedListTest.testRandom () "," no description <br /><br />"
"android.support.v7.util.SortedListTest.testBatch () "," no description <br /><br />"
"android.support.v7.util.SortedListTest.testRemove2 () "," no description <br /><br />"
"android.support.v7.util.SortedListTest.testAddDuplicate () "," no description <br /><br />"
"android.support.v7.util.SortedListTest.setUp () "," Sets up the fixture, for example, open a network connection. <br /><br />"
"android.support.v7.view.ActionMode.Callback.onActionItemClicked (ActionMode mode, MenuItem item) "," Called to report a user click on an action button. <br /><br />"
"android.support.v7.view.ActionMode.Callback.onCreateActionMode (ActionMode mode, Menu menu) "," Called when action mode is first created. <br /><br />"
"android.support.v7.view.ActionMode.Callback.onPrepareActionMode (ActionMode mode, Menu menu) "," Called to refresh an action mode's action menu whenever it is invalidated. <br /><br />"
"android.support.v7.view.ActionMode.Callback.onDestroyActionMode (ActionMode mode) "," Called when an action mode is about to be exited and destroyed. <br /><br />"
"android.support.v7.view.ActionMode.getTag () "," Retrieve the tag object associated with this ActionMode. <br /><br />"
"android.support.v7.view.ActionMode.getMenu () "," Returns the menu of actions that this action mode presents. <br /><br />"
"android.support.v7.view.ActionMode.setTag (Object tag) "," Set a tag object associated with this ActionMode. <br /><br />"
"android.support.v7.view.ActionMode.setTitleOptionalHint (boolean titleOptional) "," Set whether or not the title/subtitle display for this action mode is optional. <br /><br />"
"android.support.v7.view.ActionMode.setSubtitle (int resId) "," Set the subtitle of the action mode. <br /><br />"
"android.support.v7.view.ActionMode.setSubtitle (CharSequence subtitle) "," Set the subtitle of the action mode. <br /><br />"
"android.support.v7.view.ActionMode.setCustomView (View view) "," Set a custom view for this action mode. <br /><br />"
"android.support.v7.view.ActionMode.setTitle (int resId) "," Set the title of the action mode. <br /><br />"
"android.support.v7.view.ActionMode.getSubtitle () "," Returns the current subtitle of this action mode. <br /><br />"
"android.support.v7.view.ActionMode.finish () "," Finish and close this action mode. <br /><br />"
"android.support.v7.view.ActionMode.isTitleOptional () "," no description <br /><br />"
"android.support.v7.view.ActionMode.getCustomView () "," Returns the current custom view for this action mode. <br /><br />"
"android.support.v7.view.ActionMode.getMenuInflater () "," Returns a MenuInflater with the ActionMode's context. <br /><br />"
"android.support.v7.view.ActionMode.getTitle () "," Returns the current title of this action mode. <br /><br />"
"android.support.v7.view.ActionMode.getTitleOptionalHint () "," no description <br /><br />"
"android.support.v7.view.ActionMode.setTitle (CharSequence title) "," Set the title of the action mode. <br /><br />"
"android.support.v7.view.ActionMode.invalidate () "," Invalidate the action mode and refresh menu content. <br /><br />"
"android.support.v7.view.CollapsibleActionView.onActionViewCollapsed () "," Called when this view is collapsed as an action view. <br /><br />"
"android.support.v7.view.CollapsibleActionView.onActionViewExpanded () "," Called when this view is expanded as an action view. <br /><br />"
"android.support.v7.widget.ActionMenuView.onConfigurationChanged (Configuration newConfig) "," Called when the current configuration of the resources being used by the application have changed. <br /><br />"
"android.support.v7.widget.ActionMenuView.isOverflowMenuShowing () "," Check whether the overflow menu is currently showing. <br /><br />"
"android.support.v7.widget.ActionMenuView.getPopupTheme () "," no description <br /><br />"
"android.support.v7.widget.ActionMenuView.onDetachedFromWindow () "," This is called when the view is detached from a window. <br /><br />"
"android.support.v7.widget.ActionMenuView.showOverflowMenu () "," Show the overflow items from the associated menu. <br /><br />"
"android.support.v7.widget.ActionMenuView.dismissPopupMenus () "," Dismiss any popups associated with this menu view. <br /><br />"
"android.support.v7.widget.ActionMenuView.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.support.v7.widget.ActionMenuView.setPopupTheme (int resId) "," Specifies the theme to use when inflating popup menus. <br /><br />"
"android.support.v7.widget.ActionMenuView.hideOverflowMenu () "," Hide the overflow items from the associated menu. <br /><br />"
"android.support.v7.widget.ActionMenuView.getMenu () "," Returns the Menu object that this ActionMenuView is currently presenting. <br /><br />"
"android.support.v7.widget.ActionMenuView.dispatchPopulateAccessibilityEvent (AccessibilityEvent event) "," Dispatches an AccessibilityEvent to the View first and then to its children for adding their text content to the event. <br /><br />"
"android.support.v7.widget.ActionMenuView.setOnMenuItemClickListener (ActionMenuView.OnMenuItemClickListener listener) "," no description <br /><br />"
"android.support.v7.widget.ActionMenuView.OnMenuItemClickListener.onMenuItemClick (MenuItem item) "," This method will be invoked when a menu item is clicked if the item itself did not already handle the event. <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario21 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario5 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario22 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testMoveAdded () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario6 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario12 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario24 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.randomTest (Random random, int opCount) "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testDeleteCount () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario9 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenerio33 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario23 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario27 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario8 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario20 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.assertOps (List<AdapterHelper.UpdateOp> actual, UpdateOp... expected) "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario26 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenerio45 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testAddProcess () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenerio29 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenerio36 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.run (TestResult result) "," Runs the test case and collects the results in TestResult. <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testAddRemoveSeparate () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenerio44 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario18 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario17 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenerio28 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenerio46 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenerio37 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario19 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenerio35 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenerio43 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testAddCount () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testChangeAll () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testFindPositionOffsetInPreLayout () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testDeleteVisible () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenerio34 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenerio42 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenerio39 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testDeleteInvisible () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenerio41 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenerio32 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenerio31 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testRandom () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testSinglePass () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario25 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenerio38 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario16 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario15 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenerio40 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario4 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testDivideDelete () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario13 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario25a () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario1 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenerio30 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario14 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario11 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario2 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario10 () "," no description <br /><br />"
"android.support.v7.widget.AdapterHelperTest.testScenario3 () "," no description <br /><br />"
"android.support.v7.widget.BaseRecyclerViewInstrumentationTest.AttachDetachCountingAdapter.getCounter () "," no description <br /><br />"
"android.support.v7.widget.BaseRecyclerViewInstrumentationTest.setRecyclerView (RecyclerView recyclerView, boolean assignDummyPool, boolean addPositionCheckItemAnimator) "," no description <br /><br />"
"android.support.v7.widget.BaseRecyclerViewInstrumentationTest.requestFocus (View view) "," no description <br /><br />"
"android.support.v7.widget.BaseRecyclerViewInstrumentationTest.scrollBy (int dt) "," no description <br /><br />"
"android.support.v7.widget.BaseRecyclerViewInstrumentationTest.removeRecyclerView () "," no description <br /><br />"
"android.support.v7.widget.BaseRecyclerViewInstrumentationTest.setRecyclerView (RecyclerView recyclerView) "," no description <br /><br />"
"android.support.v7.widget.BaseRecyclerViewInstrumentationTest.getDecoratedRecyclerViewBounds () "," no description <br /><br />"
"android.support.v7.widget.BaseRecyclerViewInstrumentationTest.setRecyclerView (RecyclerView recyclerView, boolean assignDummyPool) "," no description <br /><br />"
"android.support.v7.widget.BaseRecyclerViewInstrumentationTest.runTestOnUiThread (Runnable r) "," Helper for running portions of a test on the UI thread. <br /><br />"
"android.support.v7.widget.BaseRecyclerViewInstrumentationTest.requestLayoutOnUIThread (View view) "," no description <br /><br />"
"android.support.v7.widget.BaseRecyclerViewInstrumentationTest.isMainThread () "," no description <br /><br />"
"android.support.v7.widget.BaseRecyclerViewInstrumentationTest.ViewAttachDetachCounter.onViewDetached (RecyclerView.ViewHolder viewHolder) "," no description <br /><br />"
"android.support.v7.widget.BaseRecyclerViewInstrumentationTest.ViewAttachDetachCounter.validateRemaining (RecyclerView recyclerView) "," no description <br /><br />"
"android.support.v7.widget.BaseRecyclerViewInstrumentationTest.ViewAttachDetachCounter.onViewAttached (RecyclerView.ViewHolder viewHolder) "," no description <br /><br />"
"android.support.v7.widget.BaseRecyclerViewInstrumentationTest.ViewAttachDetachCounter.onAttached (RecyclerView recyclerView) "," no description <br /><br />"
"android.support.v7.widget.BaseRecyclerViewInstrumentationTest.ViewAttachDetachCounter.onDetached (RecyclerView recyclerView) "," no description <br /><br />"
"android.support.v7.widget.BucketTest.testSetClear () "," no description <br /><br />"
"android.support.v7.widget.BucketTest.testInsert () "," no description <br /><br />"
"android.support.v7.widget.BucketTest.testRemove () "," no description <br /><br />"
"android.support.v7.widget.BucketTest.setUp () "," Sets up the fixture, for example, open a network connection. <br /><br />"
"android.support.v7.widget.BucketTest.testCountOnesBefore () "," no description <br /><br />"
"android.support.v7.widget.CardView.setCardBackgroundColor (int color) "," Updates the background color of the CardView <br /><br />"
"android.support.v7.widget.CardView.setPadding (int left, int top, int right, int bottom) "," Sets the padding. <br /><br />"
"android.support.v7.widget.CardView.setUseCompatPadding (boolean useCompatPadding) "," CardView adds additional padding to draw shadows on platforms before L. <br /><br />"
"android.support.v7.widget.CardView.setPreventCornerOverlap (boolean preventCornerOverlap) "," On API 20 and before, CardView does not clip the bounds of the Card for the rounded corners. <br /><br />"
"android.support.v7.widget.CardView.getContentPaddingTop () "," Returns the inner padding after the Card's top edge <br /><br />"
"android.support.v7.widget.CardView.setMaxCardElevation (float radius) "," Updates the backward compatible elevation of the CardView. <br /><br />"
"android.support.v7.widget.CardView.setPaddingRelative (int start, int top, int end, int bottom) "," Sets the relative padding. <br /><br />"
"android.support.v7.widget.CardView.getContentPaddingRight () "," Returns the inner padding before the Card's right edge <br /><br />"
"android.support.v7.widget.CardView.getContentPaddingBottom () "," Returns the inner padding before the Card's bottom edge <br /><br />"
"android.support.v7.widget.CardView.getPreventCornerOverlap () "," Returns whether CardView should add extra padding to content to avoid overlaps with rounded corners on API versions 20 and below. <br /><br />"
"android.support.v7.widget.CardView.getRadius () "," Returns the corner radius of the CardView. <br /><br />"
"android.support.v7.widget.CardView.setContentPadding (int left, int top, int right, int bottom) "," Sets the padding between the Card's edges and the children of CardView. <br /><br />"
"android.support.v7.widget.CardView.setRadius (float radius) "," Updates the corner radius of the CardView. <br /><br />"
"android.support.v7.widget.CardView.getContentPaddingLeft () "," Returns the inner padding after the Card's left edge <br /><br />"
"android.support.v7.widget.CardView.getMaxCardElevation () "," Returns the backward compatible elevation of the CardView. <br /><br />"
"android.support.v7.widget.CardView.getUseCompatPadding () "," Returns whether CardView will add inner padding on platforms L and after. <br /><br />"
"android.support.v7.widget.CardView.setCardElevation (float radius) "," Updates the backward compatible elevation of the CardView. <br /><br />"
"android.support.v7.widget.CardView.getCardElevation () "," Returns the backward compatible elevation of the CardView. <br /><br />"
"android.support.v7.widget.DefaultItemAnimator.animateMove (RecyclerView.ViewHolder holder, int fromX, int fromY, int toX, int toY) "," Called when an item is moved in the RecyclerView. <br /><br />"
"android.support.v7.widget.DefaultItemAnimator.animateAdd (RecyclerView.ViewHolder holder) "," Called when an item is added to the RecyclerView. <br /><br />"
"android.support.v7.widget.DefaultItemAnimator.isRunning () "," Method which returns whether there are any item animations currently running. <br /><br />"
"android.support.v7.widget.DefaultItemAnimator.animateChange (RecyclerView.ViewHolder oldHolder, RecyclerView.ViewHolder newHolder, int fromX, int fromY, int toX, int toY)   Called when an item is changed in the RecyclerView, as indicated by a call to notifyItemChanged (int) or notifyItemRangeChanged (int, int) "," Called when an item is changed in the RecyclerView, as indicated by a call to notifyItemChanged(int) or notifyItemRangeChanged(int, int). <br /><br />"
"android.support.v7.widget.DefaultItemAnimator.endAnimations () "," Method called when all item animations should be ended immediately. <br /><br />"
"android.support.v7.widget.DefaultItemAnimator.endAnimation (RecyclerView.ViewHolder item) "," Method called when an animation on a view should be ended immediately. <br /><br />"
"android.support.v7.widget.DefaultItemAnimator.animateRemove (RecyclerView.ViewHolder holder) "," Called when an item is removed from the RecyclerView. <br /><br />"
"android.support.v7.widget.DefaultItemAnimator.runPendingAnimations () "," Called when there are pending animations waiting to be started. <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.cancelChangeNewTest (boolean before) "," no description <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.testCancelChangeNewAfter () "," no description <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.testCancelChangeBothAfter () "," no description <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.testCancelChangeOldAfter () "," no description <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.testCancelChangeNewBefore () "," no description <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.cancelAfter (int count, ViewHolder... toCancel) "," no description <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.cancelChangeBothTest (boolean before) "," no description <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.testCancelAddAfter () "," no description <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.testAnimateAdd () "," no description <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.testCancelMoveAfter () "," no description <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.testAnimateMove () "," no description <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.testCancelAddBefore () "," no description <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.cancelBefore (int count, ViewHolder... toCancel) "," no description <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.testCancelChangeBothBefore () "," no description <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.testAnimateRemove () "," no description <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.testCancelMoveBefore () "," no description <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.cancelChangeOldTest (boolean before) "," no description <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.testCancelRemove () "," no description <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.testCancelChangeOldBefore () "," no description <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.cancelTest (boolean before, int count, ViewHolder... toCancel) "," no description <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.runTestOnUiThread (Runnable r) "," Helper for running portions of a test on the UI thread. <br /><br />"
"android.support.v7.widget.DefaultItemAnimatorTest.testAnimateChange () "," no description <br /><br />"
"android.support.v7.widget.GridLayout.setPrinter (Printer printer) "," Set the printer that will log diagnostics from this layout. <br /><br />"
"android.support.v7.widget.GridLayout.getOrientation () "," Returns the current orientation. <br /><br />"
"android.support.v7.widget.GridLayout.spec (int start, int size, GridLayout.Alignment alignment)   Equivalent to: spec (start, size, alignment, 0f) "," Equivalent to: spec(start, size, alignment, 0f). <br /><br />"
"android.support.v7.widget.GridLayout.setRowOrderPreserved (boolean rowOrderPreserved) "," When this property is true, GridLayout is forced to place the row boundaries so that their associated grid indices are in ascending order in the view. <br /><br />"
"android.support.v7.widget.GridLayout.spec (int start, int size, float weight)   Equivalent to: spec (start, 1, default_alignment, weight) "," Equivalent to: spec(start, 1, default_alignment, weight) - where default_alignment is specified in GridLayout.LayoutParams. <br /><br />"
"android.support.v7.widget.GridLayout.spec (int start, float weight)   Equivalent to: spec (start, 1, weight) "," Equivalent to: spec(start, 1, weight). <br /><br />"
"android.support.v7.widget.GridLayout.getUseDefaultMargins () "," Returns whether or not this GridLayout will allocate default margins when no corresponding layout parameters are defined. <br /><br />"
"android.support.v7.widget.GridLayout.setOrientation (int orientation) "," GridLayout uses the orientation property for two purposes:   To control the 'direction' in which default row/column indices are generated when they are not specified in a component's layout parameters. <br /><br />"
"android.support.v7.widget.GridLayout.setUseDefaultMargins (boolean useDefaultMargins) "," When true, GridLayout allocates default margins around children based on the child's visual characteristics. <br /><br />"
"android.support.v7.widget.GridLayout.setRowCount (int rowCount) "," RowCount is used only to generate default row/column indices when they are not specified by a component's layout parameters. <br /><br />"
"android.support.v7.widget.GridLayout.spec (int start, GridLayout.Alignment alignment) "," Return a Spec, spec, where:   spec.span = [start, start + 1]   spec.alignment = alignment    To leave the start index undefined, use the value UNDEFINED. <br /><br />"
"android.support.v7.widget.GridLayout.spec (int start) "," Return a Spec, spec, where:   spec.span = [start, start + 1]    To leave the start index undefined, use the value UNDEFINED. <br /><br />"
"android.support.v7.widget.GridLayout.getRowCount () "," Returns the current number of rows. <br /><br />"
"android.support.v7.widget.GridLayout.setColumnCount (int columnCount) "," ColumnCount is used only to generate default column/column indices when they are not specified by a component's layout parameters. <br /><br />"
"android.support.v7.widget.GridLayout.spec (int start, int size, GridLayout.Alignment alignment, float weight) "," Return a Spec, spec, where:   spec.span = [start, start + size]   spec.alignment = alignment   spec.weight = weight    To leave the start index undefined, use the value UNDEFINED. <br /><br />"
"android.support.v7.widget.GridLayout.isColumnOrderPreserved () "," Returns whether or not column boundaries are ordered by their grid indices. <br /><br />"
"android.support.v7.widget.GridLayout.requestLayout () "," Call this when something has changed which has invalidated the layout of this view. <br /><br />"
"android.support.v7.widget.GridLayout.getAlignmentMode () "," Returns the alignment mode. <br /><br />"
"android.support.v7.widget.GridLayout.setColumnOrderPreserved (boolean columnOrderPreserved) "," When this property is true, GridLayout is forced to place the column boundaries so that their associated grid indices are in ascending order in the view. <br /><br />"
"android.support.v7.widget.GridLayout.getPrinter () "," Return the printer that will log diagnostics from this layout. <br /><br />"
"android.support.v7.widget.GridLayout.getColumnCount () "," Returns the current number of columns. <br /><br />"
"android.support.v7.widget.GridLayout.spec (int start, GridLayout.Alignment alignment, float weight)   Equivalent to: spec (start, 1, alignment, weight) "," Equivalent to: spec(start, 1, alignment, weight). <br /><br />"
"android.support.v7.widget.GridLayout.setAlignmentMode (int alignmentMode) "," Sets the alignment mode to be used for all of the alignments between the children of this container. <br /><br />"
"android.support.v7.widget.GridLayout.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.support.v7.widget.GridLayout.isRowOrderPreserved () "," Returns whether or not row boundaries are ordered by their grid indices. <br /><br />"
"android.support.v7.widget.GridLayout.spec (int start, int size) "," Return a Spec, spec, where:   spec.span = [start, start + size]    To leave the start index undefined, use the value UNDEFINED. <br /><br />"
"android.support.v7.widget.GridLayout.LayoutParams.setGravity (int gravity) "," Describes how the child views are positioned. <br /><br />"
"android.support.v7.widget.GridLayout.LayoutParams.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.support.v7.widget.GridLayout.LayoutParams.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.support.v7.widget.GridLayout.Spec.equals (Object that) "," Returns true if the class, alignment and span properties of this Spec and the supplied parameter are pairwise equal, false otherwise. <br /><br />"
"android.support.v7.widget.GridLayout.Spec.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.support.v7.widget.GridLayoutManager.DefaultSpanSizeLookup.getSpanIndex (int position, int spanCount) "," Returns the final span index of the provided position. <br /><br />"
"android.support.v7.widget.GridLayoutManager.DefaultSpanSizeLookup.getSpanSize (int position) "," Returns the number of span occupied by the item at position. <br /><br />"
"android.support.v7.widget.GridLayoutManager.getColumnCountForAccessibility (RecyclerView.Recycler recycler, RecyclerView.State state) "," Returns the number of columns for accessibility. <br /><br />"
"android.support.v7.widget.GridLayoutManager.getSpanSizeLookup () "," Returns the current GridLayoutManager.SpanSizeLookup used by the GridLayoutManager. <br /><br />"
"android.support.v7.widget.GridLayoutManager.onItemsAdded (RecyclerView recyclerView, int positionStart, int itemCount) "," Called when items have been added to the adapter. <br /><br />"
"android.support.v7.widget.GridLayoutManager.getSpanCount () "," Returns the number of spans laid out by this grid. <br /><br />"
"android.support.v7.widget.GridLayoutManager.getRowCountForAccessibility (RecyclerView.Recycler recycler, RecyclerView.State state) "," Returns the number of rows for accessibility. <br /><br />"
"android.support.v7.widget.GridLayoutManager.onInitializeAccessibilityNodeInfoForItem (RecyclerView.Recycler recycler, RecyclerView.State state, View host, AccessibilityNodeInfoCompat info) "," Called by the AccessibilityDelegate when the accessibility information for a specific item should be populated. <br /><br />"
"android.support.v7.widget.GridLayoutManager.supportsPredictiveItemAnimations () "," Returns whether this LayoutManager supports automatic item animations. <br /><br />"
"android.support.v7.widget.GridLayoutManager.setSpanSizeLookup (GridLayoutManager.SpanSizeLookup spanSizeLookup) "," Sets the source to get the number of spans occupied by each item in the adapter. <br /><br />"
"android.support.v7.widget.GridLayoutManager.onItemsChanged (RecyclerView recyclerView)   Called when notifyDataSetChanged () "," Called when notifyDataSetChanged() is triggered instead of giving detailed information on what has actually changed. <br /><br />"
"android.support.v7.widget.GridLayoutManager.setSpanCount (int spanCount) "," Sets the number of spans to be laid out. <br /><br />"
"android.support.v7.widget.GridLayoutManager.checkLayoutParams (RecyclerView.LayoutParams lp) "," Determines the validity of the supplied LayoutParams object. <br /><br />"
"android.support.v7.widget.GridLayoutManager.generateDefaultLayoutParams () "," Create a default LayoutParams object for a child of the RecyclerView. <br /><br />"
"android.support.v7.widget.GridLayoutManager.onItemsMoved (RecyclerView recyclerView, int from, int to, int itemCount) "," Called when an item is moved withing the adapter. <br /><br />"
"android.support.v7.widget.GridLayoutManager.generateLayoutParams (ViewGroup.LayoutParams lp) "," Create a LayoutParams object suitable for this LayoutManager, copying relevant values from the supplied LayoutParams object if possible. <br /><br />"
"android.support.v7.widget.GridLayoutManager.setStackFromEnd (boolean stackFromEnd) "," stackFromEnd is not supported by GridLayoutManager. <br /><br />"
"android.support.v7.widget.GridLayoutManager.onItemsUpdated (RecyclerView recyclerView, int positionStart, int itemCount) "," Called when items have been changed in the adapter. <br /><br />"
"android.support.v7.widget.GridLayoutManager.onLayoutChildren (RecyclerView.Recycler recycler, RecyclerView.State state) "," Lay out all relevant child views from the given adapter. <br /><br />"
"android.support.v7.widget.GridLayoutManager.onItemsRemoved (RecyclerView recyclerView, int positionStart, int itemCount) "," Called when items have been removed from the adapter. <br /><br />"
"android.support.v7.widget.GridLayoutManager.generateLayoutParams (Context c, AttributeSet attrs) "," Create a LayoutParams object suitable for this LayoutManager from an inflated layout resource. <br /><br />"
"android.support.v7.widget.GridLayoutManager.LayoutParams.getSpanSize () "," Returns the number of spans occupied by this View. <br /><br />"
"android.support.v7.widget.GridLayoutManager.LayoutParams.getSpanIndex () "," Returns the current span index of this View. <br /><br />"
"android.support.v7.widget.GridLayoutManager.SpanSizeLookup.setSpanIndexCacheEnabled (boolean cacheSpanIndices)   Sets whether the results of getSpanIndex (int, int) "," Sets whether the results of getSpanIndex(int, int) method should be cached or not. <br /><br />"
"android.support.v7.widget.GridLayoutManager.SpanSizeLookup.isSpanIndexCacheEnabled ()   Returns whether results of getSpanIndex (int, int) "," Returns whether results of getSpanIndex(int, int) method are cached or not. <br /><br />"
"android.support.v7.widget.GridLayoutManager.SpanSizeLookup.getSpanGroupIndex (int adapterPosition, int spanCount) "," Returns the index of the group this position belongs. <br /><br />"
"android.support.v7.widget.GridLayoutManager.SpanSizeLookup.invalidateSpanIndexCache () "," Clears the span index cache. <br /><br />"
"android.support.v7.widget.GridLayoutManager.SpanSizeLookup.getSpanIndex (int position, int spanCount) "," Returns the final span index of the provided position. <br /><br />"
"android.support.v7.widget.GridLayoutManager.SpanSizeLookup.getSpanSize (int position) "," Returns the number of span occupied by the item at position. <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.testUnevenHeights () "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.testSpanLookupCache () "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.testLayoutParams () "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.ensureGridLp (View view) "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.scrollBackAndPreservePositionsTest (GridLayoutManagerTest.Config config) "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.testUnevenWidths () "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.setupBasic (GridLayoutManagerTest.Config config, GridLayoutManagerTest.GridTestAdapter testAdapter) "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.testCacheSpanIndices () "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.testScrollBackAndPreservePositions () "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.waitForFirstLayout (RecyclerView recyclerView) "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.testSpanLookupWithCache () "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.testAnchorUpdate () "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.testCustomHeightInVertical () "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.spanLookupTest (boolean enableCache) "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.testVerticalAccessibilitySpanIndices () "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.customSizeInScrollDirectionTest (GridLayoutManagerTest.Config config) "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.accessibilitySpanIndicesTest (int orientation) "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.testSpanLookup () "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.testHorizontalAccessibilitySpanIndices () "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.testCustomWidthInHorizontal () "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.layoutParamsTest (int orientation) "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.testNotifyDataSetChange () "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.setupBasic (GridLayoutManagerTest.Config config) "," no description <br /><br />"
"android.support.v7.widget.GridLayoutManagerTest.testSpanGroupIndex () "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.setWeightSum (float weightSum) "," Defines the desired weights sum. <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.getDividerPadding () "," Get the padding size used to inset dividers in pixels <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.shouldDelayChildPressedState () "," Return true if the pressed state should be delayed for children or descendants of this ViewGroup. <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.getOrientation () "," Returns the current orientation. <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.setBaselineAlignedChildIndex (int i) "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.getBaseline () "," Return the offset of the widget's text baseline from the widget's top boundary. <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.setShowDividers (int showDividers) "," Set how dividers should be shown between items in this layout <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.getBaselineAlignedChildIndex () "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.setDividerPadding (int padding) "," Set padding displayed on both ends of dividers. <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.setOrientation (int orientation) "," Should the layout be a column or a row. <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.setDividerDrawable (Drawable divider) "," Set a drawable to be used as a divider between items. <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.setGravity (int gravity) "," Describes how the child views are positioned. <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.setBaselineAligned (boolean baselineAligned) "," Defines whether widgets contained in this layout are baseline-aligned or not. <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.getShowDividers () "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.getWeightSum () "," Returns the desired weights sum. <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.isBaselineAligned () "," Indicates whether widgets contained within this layout are aligned on their baseline or not. <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.getDividerDrawable () "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.setHorizontalGravity (int horizontalGravity) "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.setMeasureWithLargestChildEnabled (boolean enabled) "," When set to true, all children with a weight will be considered having the minimum size of the largest child. <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.setVerticalGravity (int verticalGravity) "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutCompat.isMeasureWithLargestChildEnabled () "," When true, all children with a weight will be considered having the minimum size of the largest child. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.computeHorizontalScrollOffset (RecyclerView.State state) "," Override this method if you want to support scroll bars. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.findViewByPosition (int position) "," Finds the view which represents the given adapter position. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.getOrientation () "," Returns the current orientaion of the layout. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.computeHorizontalScrollRange (RecyclerView.State state) "," Override this method if you want to support scroll bars. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.findFirstCompletelyVisibleItemPosition () "," Returns the adapter position of the first fully visible view. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.getReverseLayout () "," Returns if views are laid out from the opposite direction of the layout. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.computeVerticalScrollRange (RecyclerView.State state) "," Override this method if you want to support scroll bars. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.setReverseLayout (boolean reverseLayout) "," Used to reverse item traversal and layout order. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.setOrientation (int orientation) "," Sets the orientation of the layout. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.onSaveInstanceState () "," Called when the LayoutManager should save its state. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.isSmoothScrollbarEnabled () "," Returns the current state of the smooth scrollbar feature. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.onRestoreInstanceState (Parcelable state) "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManager.findLastCompletelyVisibleItemPosition () "," Returns the adapter position of the last fully visible view. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.canScrollHorizontally () "," Query if horizontal scrolling is currently supported. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.generateDefaultLayoutParams () "," Create a default LayoutParams object for a child of the RecyclerView. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.smoothScrollToPosition (RecyclerView recyclerView, RecyclerView.State state, int position) "," Smooth scroll to the specified adapter position. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.setRecycleChildrenOnDetach (boolean recycleChildrenOnDetach) "," Set whether LayoutManager will recycle its children when it is detached from RecyclerView. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.canScrollVertically () "," Query if vertical scrolling is currently supported. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.computeScrollVectorForPosition (int targetPosition) "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManager.setStackFromEnd (boolean stackFromEnd)   Compatibility support for setStackFromBottom (boolean) "," Compatibility support for setStackFromBottom(boolean) <br /><br />"
"android.support.v7.widget.LinearLayoutManager.scrollHorizontallyBy (int dx, RecyclerView.Recycler recycler, RecyclerView.State state) "," Scroll horizontally by dx pixels in screen coordinates and return the distance traveled. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.getRecycleChildrenOnDetach () "," Returns whether LayoutManager will recycle its children when it is detached from RecyclerView. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.onDetachedFromWindow (RecyclerView view, RecyclerView.Recycler recycler) "," Called when this LayoutManager is detached from its parent RecyclerView or when its parent RecyclerView is detached from its window. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.scrollToPositionWithOffset (int position, int offset) "," Scroll to the specified adapter position with the given offset from resolved layout start. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.computeHorizontalScrollExtent (RecyclerView.State state) "," Override this method if you want to support scroll bars. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.computeVerticalScrollOffset (RecyclerView.State state) "," Override this method if you want to support scroll bars. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.findFirstVisibleItemPosition () "," Returns the adapter position of the first visible view. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.supportsPredictiveItemAnimations () "," Returns whether this LayoutManager supports automatic item animations. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.scrollToPosition (int position) "," Scroll the RecyclerView to make the position visible. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.scrollVerticallyBy (int dy, RecyclerView.Recycler recycler, RecyclerView.State state) "," Scroll vertically by dy pixels in screen coordinates and return the distance traveled. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.setSmoothScrollbarEnabled (boolean enabled) "," When smooth scrollbar is enabled, the position and size of the scrollbar thumb is computed based on the number of visible pixels in the visible items. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.getStackFromEnd () "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManager.computeVerticalScrollExtent (RecyclerView.State state) "," Override this method if you want to support scroll bars. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.onInitializeAccessibilityEvent (AccessibilityEvent event) "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManager.findLastVisibleItemPosition () "," Returns the adapter position of the last visible view. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.onFocusSearchFailed (View focused, int focusDirection, RecyclerView.Recycler recycler, RecyclerView.State state) "," Called when searching for a focusable view in the given direction has failed for the current content of the RecyclerView. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.onLayoutChildren (RecyclerView.Recycler recycler, RecyclerView.State state) "," Lay out all relevant child views from the given adapter. <br /><br />"
"android.support.v7.widget.LinearLayoutManager.assertNotInLayoutOrScroll (String message) "," Checks if RecyclerView is in the middle of a layout or scroll and throws an IllegalStateException if it is. <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.testKeepStackFromEndPartialFocusOnResize () "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.testRecycleDuringAnimations () "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.testKeepReversePartialFocusOnResize () "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.testRecycleChildrenOnDetach () "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.testKeepFullFocusOnResize () "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.testAccessibilityPositions () "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.testKeepReverseFullFocusOnResize () "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.testDontRecycleChildrenOnDetach () "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.scrollToPositionWithOffsetTest (LinearLayoutManagerTest.Config config) "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.getFirstLastChildrenTest (LinearLayoutManagerTest.Config config) "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.testKeepFocusOnRelayout () "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.testResize () "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.testKeepPartialFocusOnResize () "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.assertRectSetsEqual (String message, Map<BaseRecyclerViewInstrumentationTest.Item,  Rect> before, Map<BaseRecyclerViewInstrumentationTest.Item,  Rect> after) "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.savedStateTest (LinearLayoutManagerTest.Config config, boolean waitForLayout, LinearLayoutManagerTest.PostLayoutRunnable postLayoutOperation, LinearLayoutManagerTest.PostRestoreRunnable postRestoreOperation) "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.stackFromEndTest (LinearLayoutManagerTest.Config config) "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.testGetFirstLastChildrenTest () "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.keepFocusOnResizeTest (LinearLayoutManagerTest.Config config, boolean fullyVisible) "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.scrollToPositionWithPredictive (int scrollPosition, int scrollOffset) "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.assertRectSetsNotEqual (String message, Map<BaseRecyclerViewInstrumentationTest.Item,  Rect> before, Map<BaseRecyclerViewInstrumentationTest.Item,  Rect> after) "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.testKeepStackFromEndFullFocusOnResize () "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.testScrollToPositionWithOffset () "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.testScrollToPositionWithPredictive () "," no description <br /><br />"
"android.support.v7.widget.LinearLayoutManagerTest.testSavedState () "," no description <br /><br />"
"android.support.v7.widget.LinearSmoothScroller.calculateDxToMakeVisible (View view, int snapPreference) "," Calculates the horizontal scroll amount necessary to make the given view fully visible inside the RecyclerView. <br /><br />"
"android.support.v7.widget.LinearSmoothScroller.computeScrollVectorForPosition (int targetPosition) "," no description <br /><br />"
"android.support.v7.widget.LinearSmoothScroller.calculateDyToMakeVisible (View view, int snapPreference) "," Calculates the vertical scroll amount necessary to make the given view fully visible inside the RecyclerView. <br /><br />"
"android.support.v7.widget.LinearSmoothScroller.calculateDtToFit (int viewStart, int viewEnd, int boxStart, int boxEnd, int snapPreference)   Helper method for calculateDxToMakeVisible (android.view.View, int) and calculateDyToMakeVisible (android.view.View, int) "," Helper method for calculateDxToMakeVisible(android.view.View, int) and calculateDyToMakeVisible(android.view.View, int) <br /><br />"
"android.support.v7.widget.ListPopupWindow.setAdapter (ListAdapter adapter) "," Sets the adapter that provides the data and the views to represent the data in this popup window. <br /><br />"
"android.support.v7.widget.ListPopupWindow.setOnDismissListener (PopupWindow.OnDismissListener listener) "," Set a listener to receive a callback when the popup is dismissed. <br /><br />"
"android.support.v7.widget.ListPopupWindow.setWidth (int width) "," Sets the width of the popup window in pixels. <br /><br />"
"android.support.v7.widget.ListPopupWindow.setAnchorView (View anchor) "," Sets the popup's anchor view. <br /><br />"
"android.support.v7.widget.ListPopupWindow.getSelectedItem () "," no description <br /><br />"
"android.support.v7.widget.ListPopupWindow.setBackgroundDrawable (Drawable d) "," Sets a drawable to be the background for the popup window. <br /><br />"
"android.support.v7.widget.ListPopupWindow.setOnItemSelectedListener (AdapterView.OnItemSelectedListener selectedListener) "," Sets a listener to receive events when a list item is selected. <br /><br />"
"android.support.v7.widget.ListPopupWindow.getAnchorView () "," Returns the view that will be used to anchor this popup. <br /><br />"
"android.support.v7.widget.ListPopupWindow.setPromptView (View prompt) "," Set a view to act as a user prompt for this popup window. <br /><br />"
"android.support.v7.widget.ListPopupWindow.getHeight () "," no description <br /><br />"
"android.support.v7.widget.ListPopupWindow.dismiss () "," Dismiss the popup window. <br /><br />"
"android.support.v7.widget.ListPopupWindow.getSelectedItemPosition () "," no description <br /><br />"
"android.support.v7.widget.ListPopupWindow.isShowing () "," no description <br /><br />"
"android.support.v7.widget.ListPopupWindow.onKeyDown (int keyCode, KeyEvent event) "," Filter key down events. <br /><br />"
"android.support.v7.widget.ListPopupWindow.setHorizontalOffset (int offset) "," Set the horizontal offset of this popup from its anchor view in pixels. <br /><br />"
"android.support.v7.widget.ListPopupWindow.getSoftInputMode ()   Returns the current value in setSoftInputMode (int) "," Returns the current value in setSoftInputMode(int). <br /><br />"
"android.support.v7.widget.ListPopupWindow.setListSelector (Drawable selector) "," Sets a drawable to use as the list item selector. <br /><br />"
"android.support.v7.widget.ListPopupWindow.performItemClick (int position) "," Perform an item click operation on the specified list adapter position. <br /><br />"
"android.support.v7.widget.ListPopupWindow.isModal () "," Returns whether the popup window will be modal when shown. <br /><br />"
"android.support.v7.widget.ListPopupWindow.setVerticalOffset (int offset) "," Set the vertical offset of this popup from its anchor view in pixels. <br /><br />"
"android.support.v7.widget.ListPopupWindow.getSelectedItemId () "," no description <br /><br />"
"android.support.v7.widget.ListPopupWindow.postShow ()   Post a show () "," Post a show() call to the UI thread. <br /><br />"
"android.support.v7.widget.ListPopupWindow.getWidth () "," no description <br /><br />"
"android.support.v7.widget.ListPopupWindow.setSoftInputMode (int mode) "," Sets the operating mode for the soft input area. <br /><br />"
"android.support.v7.widget.ListPopupWindow.setOnItemClickListener (AdapterView.OnItemClickListener clickListener) "," Sets a listener to receive events when a list item is clicked. <br /><br />"
"android.support.v7.widget.ListPopupWindow.getListView () "," no description <br /><br />"
"android.support.v7.widget.ListPopupWindow.setPromptPosition (int position) "," Set where the optional prompt view should appear. <br /><br />"
"android.support.v7.widget.ListPopupWindow.getPromptPosition () "," no description <br /><br />"
"android.support.v7.widget.ListPopupWindow.getInputMethodMode ()   Return the current value in setInputMethodMode (int) "," Return the current value in setInputMethodMode(int). <br /><br />"
"android.support.v7.widget.ListPopupWindow.createDragToOpenListener (View src) "," Returns an View.OnTouchListener that can be added to the source view to implement drag-to-open behavior. <br /><br />"
"android.support.v7.widget.ListPopupWindow.onKeyUp (int keyCode, KeyEvent event) "," Filter key down events. <br /><br />"
"android.support.v7.widget.ListPopupWindow.setSelection (int position) "," Set the selected position of the list. <br /><br />"
"android.support.v7.widget.ListPopupWindow.setAnimationStyle (int animationStyle) "," Set an animation style to use when the popup window is shown or dismissed. <br /><br />"
"android.support.v7.widget.ListPopupWindow.setModal (boolean modal) "," Set whether this window should be modal when shown. <br /><br />"
"android.support.v7.widget.ListPopupWindow.setDropDownGravity (int gravity) "," Set the gravity of the dropdown list. <br /><br />"
"android.support.v7.widget.ListPopupWindow.getSelectedView () "," no description <br /><br />"
"android.support.v7.widget.ListPopupWindow.show () "," Show the popup list. <br /><br />"
"android.support.v7.widget.ListPopupWindow.getVerticalOffset () "," no description <br /><br />"
"android.support.v7.widget.ListPopupWindow.getHorizontalOffset () "," no description <br /><br />"
"android.support.v7.widget.ListPopupWindow.getAnimationStyle () "," Returns the animation style that will be used when the popup window is shown or dismissed. <br /><br />"
"android.support.v7.widget.ListPopupWindow.clearListSelection () "," Clear any current list selection. <br /><br />"
"android.support.v7.widget.ListPopupWindow.setHeight (int height) "," Sets the height of the popup window in pixels. <br /><br />"
"android.support.v7.widget.ListPopupWindow.setContentWidth (int width) "," Sets the width of the popup window by the size of its content. <br /><br />"
"android.support.v7.widget.ListPopupWindow.getBackground () "," no description <br /><br />"
"android.support.v7.widget.ListPopupWindow.setInputMethodMode (int mode) "," Control how the popup operates with an input method: one of INPUT_METHOD_FROM_FOCUSABLE, INPUT_METHOD_NEEDED, or INPUT_METHOD_NOT_NEEDED. <br /><br />"
"android.support.v7.widget.ListPopupWindow.isInputMethodNotNeeded () "," no description <br /><br />"
"android.support.v7.widget.ListPopupWindow.onKeyPreIme (int keyCode, KeyEvent event) "," Filter pre-IME key events. <br /><br />"
"android.support.v7.widget.OpReorderTest.testSwapMoveRemove_3 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testRandomMoveUpdate () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testSwapMoveRemove_16 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.test2 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.test1 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testSwapMoveRemove_5 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testSwapMoveRemove_1 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.test3 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testRandomMoveAdd () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testSwapMoveRemove_15 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testSwapMoveRemove_6 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testMoveRemove () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.test6 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testSwapMoveRemove_13 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.orderedRandom (int... ops) "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testSwapMoveUpdate_2 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testSwapMoveRemove_14 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testSwapMoveUpdate_0 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testSwapMoveRemove_4 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.test7 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testRandomMoveRemove () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testSwapMoveRemove_10 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testSwapMoveUpdate_1 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testRandom () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testSwapMoveRemove_7 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.test8 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testSwapMoveRemove_8 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.test9 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.test5 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testMoveRemoved () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.setup (int count) "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testSwapMoveRemove_11 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testSwapMoveRemove_9 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.test4 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testSwapMoveRemove_12 () "," no description <br /><br />"
"android.support.v7.widget.OpReorderTest.testSwapMoveRemove_2 () "," no description <br /><br />"
"android.support.v7.widget.OrientationHelper.getDecoratedMeasurement (View view) "," Returns the space occupied by this View in the current orientation including decorations and margins. <br /><br />"
"android.support.v7.widget.OrientationHelper.getDecoratedMeasurementInOther (View view) "," Returns the space occupied by this View in the perpendicular orientation including decorations and margins. <br /><br />"
"android.support.v7.widget.OrientationHelper.getEndPadding () "," Returns the padding at the end of the layout. <br /><br />"
"android.support.v7.widget.OrientationHelper.createHorizontalHelper (RecyclerView.LayoutManager layoutManager) "," Creates a horizontal OrientationHelper for the given LayoutManager. <br /><br />"
"android.support.v7.widget.OrientationHelper.createOrientationHelper (RecyclerView.LayoutManager layoutManager, int orientation) "," Creates an OrientationHelper for the given LayoutManager and orientation. <br /><br />"
"android.support.v7.widget.OrientationHelper.getDecoratedStart (View view) "," Returns the start of the view including its decoration and margin. <br /><br />"
"android.support.v7.widget.OrientationHelper.getEndAfterPadding () "," Returns the end position of the layout after the end padding is removed. <br /><br />"
"android.support.v7.widget.OrientationHelper.getDecoratedEnd (View view) "," Returns the end of the view including its decoration and margin. <br /><br />"
"android.support.v7.widget.OrientationHelper.getEnd () "," Returns the end position of the layout without taking padding into account. <br /><br />"
"android.support.v7.widget.OrientationHelper.offsetChild (View view, int offset) "," Offsets the child in this orientation. <br /><br />"
"android.support.v7.widget.OrientationHelper.onLayoutComplete () "," Call this method after onLayout method is complete if state is NOT pre-layout. <br /><br />"
"android.support.v7.widget.OrientationHelper.offsetChildren (int amount) "," Offsets all children's positions by the given amount. <br /><br />"
"android.support.v7.widget.OrientationHelper.getStartAfterPadding () "," Returns the start position of the layout after the start padding is added. <br /><br />"
"android.support.v7.widget.OrientationHelper.getTotalSpace () "," Returns the total space to layout. <br /><br />"
"android.support.v7.widget.OrientationHelper.getTotalSpaceChange () "," Returns the layout space change between the previous layout pass and current layout pass. <br /><br />"
"android.support.v7.widget.OrientationHelper.createVerticalHelper (RecyclerView.LayoutManager layoutManager) "," Creates a vertical OrientationHelper for the given LayoutManager. <br /><br />"
"android.support.v7.widget.PopupMenu.show () "," Show the menu popup anchored to the view specified during construction. <br /><br />"
"android.support.v7.widget.PopupMenu.dismiss () "," Dismiss the menu popup. <br /><br />"
"android.support.v7.widget.PopupMenu.getMenu () "," no description <br /><br />"
"android.support.v7.widget.PopupMenu.getDragToOpenListener () "," Returns an View.OnTouchListener that can be added to the anchor view to implement drag-to-open behavior. <br /><br />"
"android.support.v7.widget.PopupMenu.setOnDismissListener (PopupMenu.OnDismissListener listener) "," Set a listener that will be notified when this menu is dismissed. <br /><br />"
"android.support.v7.widget.PopupMenu.inflate (int menuRes) "," Inflate a menu resource into this PopupMenu. <br /><br />"
"android.support.v7.widget.PopupMenu.getMenuInflater () "," no description <br /><br />"
"android.support.v7.widget.PopupMenu.setOnMenuItemClickListener (PopupMenu.OnMenuItemClickListener listener) "," Set a listener that will be notified when the user selects an item from the menu. <br /><br />"
"android.support.v7.widget.PopupMenu.OnDismissListener.onDismiss (PopupMenu menu) "," Called when the associated menu has been dismissed. <br /><br />"
"android.support.v7.widget.PopupMenu.OnMenuItemClickListener.onMenuItemClick (MenuItem item) "," This method will be invoked when a menu item is clicked if the item itself did not already handle the event. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.notifyItemChanged (int position) "," Notify any registered observers that the item at position has changed. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.onViewAttachedToWindow (VH holder) "," Called when a view created by this adapter has been attached to a window. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.bindViewHolder (VH holder, int position)   This method internally calls onBindViewHolder (ViewHolder, int) "," This method internally calls onBindViewHolder(ViewHolder, int) to update the RecyclerView.ViewHolder contents with the item at the given position and also sets up some private fields to be used by RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.notifyItemRangeInserted (int positionStart, int itemCount) "," Notify any registered observers that the currently reflected itemCount items starting at positionStart have been newly inserted. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.onAttachedToRecyclerView (RecyclerView recyclerView) "," Called by RecyclerView when it starts observing this Adapter. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.setHasStableIds (boolean hasStableIds) "," Indicates whether each item in the data set can be represented with a unique identifier of type Long. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.hasStableIds () "," Returns true if this adapter publishes a unique long value that can act as a key for the item at a given position in the data set. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.registerAdapterDataObserver (RecyclerView.AdapterDataObserver observer) "," Register a new observer to listen for data changes. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.getItemId (int position) "," Return the stable ID for the item at position. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.notifyItemRangeChanged (int positionStart, int itemCount) "," Notify any registered observers that the itemCount items starting at position positionStart have changed. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.onBindViewHolder (VH holder, int position) "," Called by RecyclerView to display the data at the specified position. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.notifyItemMoved (int fromPosition, int toPosition) "," Notify any registered observers that the item reflected at fromPosition has been moved to toPosition. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.onFailedToRecycleView (VH holder) "," Called by the RecyclerView if a ViewHolder created by this Adapter cannot be recycled due to its transient state. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.onViewRecycled (VH holder) "," Called when a view created by this adapter has been recycled. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.unregisterAdapterDataObserver (RecyclerView.AdapterDataObserver observer) "," Unregister an observer currently listening for data changes. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.notifyItemRemoved (int position) "," Notify any registered observers that the item previously located at position has been removed from the data set. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.notifyItemInserted (int position) "," Notify any registered observers that the item reflected at position has been newly inserted. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.onDetachedFromRecyclerView (RecyclerView recyclerView) "," Called by RecyclerView when it stops observing this Adapter. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.onCreateViewHolder (ViewGroup parent, int viewType) "," Called when RecyclerView needs a new RecyclerView.ViewHolder of the given type to represent an item. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.hasObservers () "," Returns true if one or more observers are attached to this adapter. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.onViewDetachedFromWindow (VH holder) "," Called when a view created by this adapter has been detached from its window. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.getItemCount () "," Returns the total number of items in the data set hold by the adapter. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.createViewHolder (ViewGroup parent, int viewType)   This method calls onCreateViewHolder (ViewGroup, int) "," This method calls onCreateViewHolder(ViewGroup, int) to create a new RecyclerView.ViewHolder and initializes some private fields to be used by RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.notifyItemRangeRemoved (int positionStart, int itemCount) "," Notify any registered observers that the itemCount items previously located at positionStart have been removed from the data set. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.getItemViewType (int position) "," Return the view type of the item at position for the purposes of view recycling. <br /><br />"
"android.support.v7.widget.RecyclerView.Adapter<VH extends android.support.v7.widget.RecyclerView.ViewHolder>.notifyDataSetChanged () "," Notify any registered observers that the data set has changed. <br /><br />"
"android.support.v7.widget.RecyclerView.AdapterDataObserver.onItemRangeRemoved (int positionStart, int itemCount) "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.AdapterDataObserver.onChanged () "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.AdapterDataObserver.onItemRangeChanged (int positionStart, int itemCount) "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.AdapterDataObserver.onItemRangeInserted (int positionStart, int itemCount) "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.AdapterDataObserver.onItemRangeMoved (int fromPosition, int toPosition, int itemCount) "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.setScrollingTouchSlop (int slopConstant) "," Configure the scrolling touch slop for a specific use case. <br /><br />"
"android.support.v7.widget.RecyclerView.setRecyclerListener (RecyclerView.RecyclerListener listener) "," Register a listener that will be notified whenever a child view is recycled. <br /><br />"
"android.support.v7.widget.RecyclerView.computeVerticalScrollRange () "," Compute the vertical range that the vertical scrollbar represents. <br /><br />"
"android.support.v7.widget.RecyclerView.addItemDecoration (RecyclerView.ItemDecoration decor, int index) "," Add an RecyclerView.ItemDecoration to this RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.onInterceptTouchEvent (MotionEvent e) "," Implement this method to intercept all touch screen motion events. <br /><br />"
"android.support.v7.widget.RecyclerView.setHasFixedSize (boolean hasFixedSize) "," RecyclerView can perform several optimizations if it can know in advance that changes in adapter content cannot change the size of the RecyclerView itself. <br /><br />"
"android.support.v7.widget.RecyclerView.setRecycledViewPool (RecyclerView.RecycledViewPool pool) "," Recycled view pools allow multiple RecyclerViews to share a common pool of scrap views. <br /><br />"
"android.support.v7.widget.RecyclerView.getChildItemId (View child) "," Return the stable item id that the given child view corresponds to. <br /><br />"
"android.support.v7.widget.RecyclerView.smoothScrollToPosition (int position) "," Starts a smooth scroll to an adapter position. <br /><br />"
"android.support.v7.widget.RecyclerView.setViewCacheExtension (RecyclerView.ViewCacheExtension extension) "," Sets a new RecyclerView.ViewCacheExtension to be used by the Recycler. <br /><br />"
"android.support.v7.widget.RecyclerView.setAccessibilityDelegateCompat (RecyclerViewAccessibilityDelegate accessibilityDelegate) "," Sets the accessibility delegate compatibility implementation used by RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.getLayoutManager () "," Return the RecyclerView.LayoutManager currently responsible for layout policy for this RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.onDraw (Canvas c) "," Implement this to do your drawing. <br /><br />"
"android.support.v7.widget.RecyclerView.stopScroll ()   Stop any current scroll in progress, such as one started by smoothScrollBy (int, int), fling (int, int) "," Stop any current scroll in progress, such as one started by smoothScrollBy(int, int), fling(int, int) or a touch-initiated fling. <br /><br />"
"android.support.v7.widget.RecyclerView.computeVerticalScrollExtent () "," Compute the vertical extent of the vertical scrollbar's thumb within the vertical range. <br /><br />"
"android.support.v7.widget.RecyclerView.offsetChildrenVertical (int dy) "," Offset the bounds of all child views by dy pixels. <br /><br />"
"android.support.v7.widget.RecyclerView.focusSearch (View focused, int direction) "," Find the nearest view in the specified direction that wants to take focus. <br /><br />"
"android.support.v7.widget.RecyclerView.offsetChildrenHorizontal (int dx) "," Offset the bounds of all child views by dx pixels. <br /><br />"
"android.support.v7.widget.RecyclerView.onChildAttachedToWindow (View child) "," Called when an item view is attached to this RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.draw (Canvas c)   Manually render this view  (and all of its children) "," Manually render this view (and all of its children) to the given Canvas. <br /><br />"
"android.support.v7.widget.RecyclerView.invalidateItemDecorations () "," Invalidates all ItemDecorations. <br /><br />"
"android.support.v7.widget.RecyclerView.setItemAnimator (RecyclerView.ItemAnimator animator) "," Sets the RecyclerView.ItemAnimator that will handle animations involving changes to the items in this RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.requestLayout () "," Call this when something has changed which has invalidated the layout of this view. <br /><br />"
"android.support.v7.widget.RecyclerView.getChildLayoutPosition (View child) "," Return the adapter position of the given child view as of the latest completed layout pass. <br /><br />"
"android.support.v7.widget.RecyclerView.findViewHolderForItemId (long id) "," Return the ViewHolder for the item with the given id. <br /><br />"
"android.support.v7.widget.RecyclerView.requestChildFocus (View child, View focused) "," Called when a child of this parent wants focus <br /><br />"
"android.support.v7.widget.RecyclerView.removeOnItemTouchListener (RecyclerView.OnItemTouchListener listener) "," Remove an RecyclerView.OnItemTouchListener. <br /><br />"
"android.support.v7.widget.RecyclerView.computeHorizontalScrollExtent () "," Compute the horizontal extent of the horizontal scrollbar's thumb within the horizontal range. <br /><br />"
"android.support.v7.widget.RecyclerView.getScrollState () "," Return the current scrolling state of the RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.findViewHolderForPosition (int position)    This method is deprecated. use findViewHolderForLayoutPosition (int) or findViewHolderForAdapterPosition (int) "," This method is deprecated. use findViewHolderForLayoutPosition(int) or findViewHolderForAdapterPosition(int) <br /><br />"
"android.support.v7.widget.RecyclerView.onGenericMotionEvent (MotionEvent event) "," Implement this method to handle generic motion events. <br /><br />"
"android.support.v7.widget.RecyclerView.setAdapter (Adapter adapter) "," Set a new adapter to provide child views on demand. <br /><br />"
"android.support.v7.widget.RecyclerView.addFocusables (ArrayList< View> views, int direction, int focusableMode)   Adds any focusable views that are descendants of this view  (possibly including this view if it is focusable itself) "," Adds any focusable views that are descendants of this view (possibly including this view if it is focusable itself) to views. <br /><br />"
"android.support.v7.widget.RecyclerView.setItemViewCacheSize (int size)   Set the number of offscreen views to retain before adding them to the potentially shared "," Set the number of offscreen views to retain before adding them to the potentially shared recycled view pool. <br /><br />"
"android.support.v7.widget.RecyclerView.findChildViewUnder (float x, float y) "," Find the topmost view under the given point. <br /><br />"
"android.support.v7.widget.RecyclerView.scrollBy (int x, int y) "," Move the scrolled position of your view. <br /><br />"
"android.support.v7.widget.RecyclerView.addOnItemTouchListener (RecyclerView.OnItemTouchListener listener) "," Add an RecyclerView.OnItemTouchListener to intercept touch events before they are dispatched to child views or this view's standard scrolling behavior. <br /><br />"
"android.support.v7.widget.RecyclerView.swapAdapter (Adapter adapter, boolean removeAndRecycleExistingViews) "," Swaps the current adapter with the provided one. <br /><br />"
"android.support.v7.widget.RecyclerView.computeHorizontalScrollOffset () "," Compute the horizontal offset of the horizontal scrollbar's thumb within the horizontal range. <br /><br />"
"android.support.v7.widget.RecyclerView.getItemAnimator () "," Gets the current ItemAnimator for this RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.computeHorizontalScrollRange () "," Compute the horizontal range that the horizontal scrollbar represents. <br /><br />"
"android.support.v7.widget.RecyclerView.onChildDetachedFromWindow (View child) "," Called when an item view is detached from this RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.setLayoutManager (RecyclerView.LayoutManager layout) "," Set the RecyclerView.LayoutManager that this RecyclerView will use. <br /><br />"
"android.support.v7.widget.RecyclerView.findViewHolderForAdapterPosition (int position) "," Return the ViewHolder for the item in the given position of the data set. <br /><br />"
"android.support.v7.widget.RecyclerView.getRecycledViewPool () "," Retrieve this RecyclerView's RecyclerView.RecycledViewPool. <br /><br />"
"android.support.v7.widget.RecyclerView.getCompatAccessibilityDelegate () "," Returns the accessibility delegate compatibility implementation used by the RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.getChildAdapterPosition (View child) "," Return the adapter position that the given child view corresponds to. <br /><br />"
"android.support.v7.widget.RecyclerView.computeVerticalScrollOffset () "," Compute the vertical offset of the vertical scrollbar's thumb within the vertical range. <br /><br />"
"android.support.v7.widget.RecyclerView.findViewHolderForLayoutPosition (int position) "," Return the ViewHolder for the item in the given position of the data set as of the latest layout pass. <br /><br />"
"android.support.v7.widget.RecyclerView.removeItemDecoration (RecyclerView.ItemDecoration decor) "," Remove an RecyclerView.ItemDecoration from this RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.smoothScrollBy (int dx, int dy) "," Animate a scroll by the given amount of pixels along either axis. <br /><br />"
"android.support.v7.widget.RecyclerView.getChildViewHolder (View child) "," Retrieve the RecyclerView.ViewHolder for the given child view. <br /><br />"
"android.support.v7.widget.RecyclerView.getChildPosition (View child)    This method is deprecated. use getChildAdapterPosition (View) or getChildLayoutPosition (View) "," This method is deprecated. use getChildAdapterPosition(View) or getChildLayoutPosition(View). <br /><br />"
"android.support.v7.widget.RecyclerView.scrollTo (int x, int y) "," Set the scrolled position of your view. <br /><br />"
"android.support.v7.widget.RecyclerView.setClipToPadding (boolean clipToPadding) "," Sets whether this ViewGroup will clip its children to its padding, if padding is present. <br /><br />"
"android.support.v7.widget.RecyclerView.addItemDecoration (RecyclerView.ItemDecoration decor) "," Add an RecyclerView.ItemDecoration to this RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.scrollToPosition (int position) "," Convenience method to scroll to a certain position. <br /><br />"
"android.support.v7.widget.RecyclerView.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.support.v7.widget.RecyclerView.getAdapter () "," Retrieves the previously set adapter or null if no adapter is set. <br /><br />"
"android.support.v7.widget.RecyclerView.fling (int velocityX, int velocityY) "," Begin a standard fling with an initial velocity along each axis in pixels per second. <br /><br />"
"android.support.v7.widget.RecyclerView.setOnScrollListener (RecyclerView.OnScrollListener listener) "," Set a listener that will be notified of any changes in scroll state or position. <br /><br />"
"android.support.v7.widget.RecyclerView.hasFixedSize () "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.onTouchEvent (MotionEvent e) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.support.v7.widget.RecyclerView.requestChildRectangleOnScreen (View child, Rect rect, boolean immediate) "," Called when a child of this group wants a particular rectangle to be positioned onto the screen. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.animateMove (RecyclerView.ViewHolder holder, int fromX, int fromY, int toX, int toY) "," Called when an item is moved in the RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.dispatchChangeStarting (RecyclerView.ViewHolder item, boolean oldItem) "," Method to be called by subclasses when a change animation is being started. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.animateChange (RecyclerView.ViewHolder oldHolder, RecyclerView.ViewHolder newHolder, int fromLeft, int fromTop, int toLeft, int toTop)   Called when an item is changed in the RecyclerView, as indicated by a call to notifyItemChanged (int) or notifyItemRangeChanged (int, int) "," Called when an item is changed in the RecyclerView, as indicated by a call to notifyItemChanged(int) or notifyItemRangeChanged(int, int). <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.dispatchRemoveStarting (RecyclerView.ViewHolder item) "," Method to be called by subclasses when a remove animation is being started. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.dispatchAddStarting (RecyclerView.ViewHolder item) "," Method to be called by subclasses when an add animation is being started. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.setMoveDuration (long moveDuration) "," Sets the duration for which all move animations will run. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.runPendingAnimations () "," Called when there are pending animations waiting to be started. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.onRemoveFinished (RecyclerView.ViewHolder item) "," Called when a remove animation has ended on the given ViewHolder. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.onAddStarting (RecyclerView.ViewHolder item) "," Called when an add animation is being started on the given ViewHolder. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.setRemoveDuration (long removeDuration) "," Sets the duration for which all remove animations will run. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.onAddFinished (RecyclerView.ViewHolder item) "," Called when an add animation has ended on the given ViewHolder. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.animateAdd (RecyclerView.ViewHolder holder) "," Called when an item is added to the RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.isRunning () "," Method which returns whether there are any item animations currently running. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.getSupportsChangeAnimations () "," Returns whether this ItemAnimator supports animations of change events. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.dispatchChangeFinished (RecyclerView.ViewHolder item, boolean oldItem) "," Method to be called by subclasses when a change animation is done. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.dispatchAnimationsFinished () "," This method should be called by ItemAnimator implementations to notify any listeners that all pending and active item animations are finished. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.onMoveFinished (RecyclerView.ViewHolder item) "," Called when a move animation has ended on the given ViewHolder. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.endAnimations () "," Method called when all item animations should be ended immediately. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.onChangeFinished (RecyclerView.ViewHolder item, boolean oldItem) "," Called when a change animation has ended on the given ViewHolder. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.getChangeDuration () "," Gets the current duration for which all change animations will run. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.endAnimation (RecyclerView.ViewHolder item) "," Method called when an animation on a view should be ended immediately. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.dispatchRemoveFinished (RecyclerView.ViewHolder item) "," Method to be called by subclasses when a remove animation is done. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.setAddDuration (long addDuration) "," Sets the duration for which all add animations will run. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.dispatchAddFinished (RecyclerView.ViewHolder item) "," Method to be called by subclasses when an add animation is done. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.animateRemove (RecyclerView.ViewHolder holder) "," Called when an item is removed from the RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.dispatchMoveStarting (RecyclerView.ViewHolder item) "," Method to be called by subclasses when a move animation is being started. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.getMoveDuration () "," Gets the current duration for which all move animations will run. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.setSupportsChangeAnimations (boolean supportsChangeAnimations) "," Sets whether this ItemAnimator supports animations of item change events. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.getRemoveDuration () "," Gets the current duration for which all remove animations will run. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.onMoveStarting (RecyclerView.ViewHolder item) "," Called when a move animation is being started on the given ViewHolder. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.getAddDuration () "," Gets the current duration for which all add animations will run. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.onChangeStarting (RecyclerView.ViewHolder item, boolean oldItem) "," Called when a change animation is being started on the given ViewHolder. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.setChangeDuration (long changeDuration) "," Sets the duration for which all change animations will run. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.onRemoveStarting (RecyclerView.ViewHolder item) "," Called when a remove animation is being started on the given ViewHolder. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.dispatchMoveFinished (RecyclerView.ViewHolder item) "," Method to be called by subclasses when a move animation is done. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.isRunning (RecyclerView.ItemAnimator.ItemAnimatorFinishedListener listener)   Like isRunning () "," Like isRunning(), this method returns whether there are any item animations currently running. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemAnimator.ItemAnimatorFinishedListener.onAnimationsFinished () "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.ItemDecoration.onDraw (Canvas c, RecyclerView parent, RecyclerView.State state) "," Draw any appropriate decorations into the Canvas supplied to the RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemDecoration.getItemOffsets (Rect outRect, int itemPosition, RecyclerView parent)    This method is deprecated. Use getItemOffsets (Rect, View, RecyclerView, State) "," This method is deprecated. Use getItemOffsets(Rect, View, RecyclerView, State) <br /><br />"
"android.support.v7.widget.RecyclerView.ItemDecoration.getItemOffsets (Rect outRect, View view, RecyclerView parent, RecyclerView.State state) "," Retrieve any offsets for the given item. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemDecoration.onDrawOver (Canvas c, RecyclerView parent, RecyclerView.State state) "," Draw any appropriate decorations into the Canvas supplied to the RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.ItemDecoration.onDraw (Canvas c, RecyclerView parent)    This method is deprecated. Override onDraw (Canvas, RecyclerView, RecyclerView.State) "," This method is deprecated. Override onDraw(Canvas, RecyclerView, RecyclerView.State) <br /><br />"
"android.support.v7.widget.RecyclerView.ItemDecoration.onDrawOver (Canvas c, RecyclerView parent)    This method is deprecated. Override onDrawOver (Canvas, RecyclerView, RecyclerView.State) "," This method is deprecated. Override onDrawOver(Canvas, RecyclerView, RecyclerView.State) <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onRequestChildFocus (RecyclerView parent, RecyclerView.State state, View child, View focused) "," Called when a descendant view of the RecyclerView requests focus. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.computeHorizontalScrollOffset (RecyclerView.State state) "," Override this method if you want to support scroll bars. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getColumnCountForAccessibility (RecyclerView.Recycler recycler, RecyclerView.State state) "," Returns the number of columns for accessibility. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.isFocused () "," Returns true if the RecyclerView this LayoutManager is bound to has focus. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getPaddingRight () "," Return the right padding of the parent RecyclerView <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.detachAndScrapViewAt (int index, RecyclerView.Recycler recycler) "," Detach a child view and add it to a Recycler's scrap heap. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.ignoreView (View view) "," Flags a view so that it will not be scrapped or recycled. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.computeHorizontalScrollRange (RecyclerView.State state) "," Override this method if you want to support scroll bars. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onInterceptFocusSearch (View focused, int direction) "," This method gives a LayoutManager an opportunity to intercept the initial focus search before the default behavior of FocusFinder is used. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.removeViewAt (int index) "," Remove a view from the currently attached RecyclerView if needed. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.removeDetachedView (View child)   Finish removing a view that was previously temporarily "," Finish removing a view that was previously temporarily detached. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.removeAndRecycleView (View child, RecyclerView.Recycler recycler) "," Remove a child view and recycle it using the given Recycler. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getPaddingTop () "," Return the top padding of the parent RecyclerView <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getPosition (View view) "," Returns the adapter position of the item represented by the given View. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onAddFocusables (RecyclerView recyclerView, ArrayList< View> views, int direction, int focusableMode) "," Called to populate focusable views within the RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onInitializeAccessibilityNodeInfo (RecyclerView.Recycler recycler, RecyclerView.State state, AccessibilityNodeInfoCompat info) "," Called by the AccessibilityDelegate when the information about the current layout should be populated. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getHeight () "," Return the height of the parent RecyclerView <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.canScrollHorizontally () "," Query if horizontal scrolling is currently supported. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.checkLayoutParams (RecyclerView.LayoutParams lp) "," Determines the validity of the supplied LayoutParams object. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.generateLayoutParams (ViewGroup.LayoutParams lp) "," Create a LayoutParams object suitable for this LayoutManager, copying relevant values from the supplied LayoutParams object if possible. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.measureChildWithMargins (View child, int widthUsed, int heightUsed) "," Measure a child view using standard measurement policy, taking the padding of the parent RecyclerView, any added item decorations and the child margins into account. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getLayoutDirection () "," Returns the resolved layout direction for this RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onDetachedFromWindow (RecyclerView view, RecyclerView.Recycler recycler) "," Called when this LayoutManager is detached from its parent RecyclerView or when its parent RecyclerView is detached from its window. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getClipToPadding () "," Check if the RecyclerView is configured to clip child views to its padding. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getRowCountForAccessibility (RecyclerView.Recycler recycler, RecyclerView.State state) "," Returns the number of rows for accessibility. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getDecoratedLeft (View child) "," Returns the left edge of the given child view within its parent, offset by any applied ItemDecorations. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.moveView (int fromIndex, int toIndex) "," Moves a View from one position to another. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.supportsPredictiveItemAnimations () "," Returns whether this LayoutManager supports automatic item animations. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.scrollVerticallyBy (int dy, RecyclerView.Recycler recycler, RecyclerView.State state) "," Scroll vertically by dy pixels in screen coordinates and return the distance traveled. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getMinimumHeight () "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onInitializeAccessibilityEvent (RecyclerView.Recycler recycler, RecyclerView.State state, AccessibilityEvent event) "," Called by the accessibility delegate to initialize an accessibility event. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.assertNotInLayoutOrScroll (String message) "," Checks if RecyclerView is in the middle of a layout or scroll and throws an IllegalStateException if it is. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.setMeasuredDimension (int widthSize, int heightSize) "," Set the measured dimensions of the host RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getLeftDecorationWidth (View child) "," Returns the total width of item decorations applied to child's left. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getSelectionModeForAccessibility (RecyclerView.Recycler recycler, RecyclerView.State state) "," Returns the selection mode for accessibility. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onItemsAdded (RecyclerView recyclerView, int positionStart, int itemCount) "," Called when items have been added to the adapter. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.computeVerticalScrollRange (RecyclerView.State state) "," Override this method if you want to support scroll bars. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getDecoratedBottom (View child) "," Returns the bottom edge of the given child view within its parent, offset by any applied ItemDecorations. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onScrollStateChanged (int state) "," RecyclerView calls this method to notify LayoutManager that scroll state has changed. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getPaddingLeft () "," Return the left padding of the parent RecyclerView <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getPaddingBottom () "," Return the bottom padding of the parent RecyclerView <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getChildAt (int index) "," Return the child view at the given index <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onFocusSearchFailed (View focused, int direction, RecyclerView.Recycler recycler, RecyclerView.State state) "," Called when searching for a focusable view in the given direction has failed for the current content of the RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.attachView (View child, int index)   Reattach a previously "," Reattach a previously detached view. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getChildMeasureSpec (int parentSize, int padding, int childDimension, boolean canScroll) "," Calculate a MeasureSpec value for measuring a child view in one dimension. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getWidth () "," Return the width of the parent RecyclerView <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.detachAndScrapAttachedViews (RecyclerView.Recycler recycler) "," Temporarily detach and scrap all currently attached child views. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getMinimumWidth () "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.attachView (View child, int index, RecyclerView.LayoutParams lp)   Reattach a previously "," Reattach a previously detached view. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.measureChild (View child, int widthUsed, int heightUsed) "," Measure a child view using standard measurement policy, taking the padding of the parent RecyclerView and any added item decorations into account. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.performAccessibilityAction (RecyclerView.Recycler recycler, RecyclerView.State state, int action, Bundle args) "," Called by AccessibilityDelegate when an action is requested from the RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getPaddingStart () "," Return the start padding of the parent RecyclerView <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.scrollToPosition (int position) "," Scroll to the specified adapter position. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onItemsChanged (RecyclerView recyclerView)   Called when notifyDataSetChanged () "," Called when notifyDataSetChanged() is triggered instead of giving detailed information on what has actually changed. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.detachViewAt (int index) "," Temporarily detach a child view. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onMeasure (RecyclerView.Recycler recycler, RecyclerView.State state, int widthSpec, int heightSpec) "," Measure the attached RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.detachView (View child) "," Temporarily detach a child view. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.computeVerticalScrollExtent (RecyclerView.State state) "," Override this method if you want to support scroll bars. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onInitializeAccessibilityEvent (AccessibilityEvent event) "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getDecoratedTop (View child) "," Returns the top edge of the given child view within its parent, offset by any applied ItemDecorations. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.detachAndScrapView (View child, RecyclerView.Recycler recycler) "," Detach a child view and add it to a Recycler's scrap heap. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.stopIgnoringView (View view) "," View can be scrapped and recycled again. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onRequestChildFocus (RecyclerView parent, View child, View focused)    This method is deprecated. Use onRequestChildFocus (RecyclerView, State, View, View) "," This method is deprecated. Use onRequestChildFocus(RecyclerView, State, View, View) <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.startSmoothScroll (RecyclerView.SmoothScroller smoothScroller) "," Starts a smooth scroll using the provided SmoothScroller. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.removeAndRecycleAllViews (RecyclerView.Recycler recycler) "," Removes all views and recycles them using the given recycler. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.addDisappearingView (View child)   To be called only during onLayoutChildren (Recycler, State) to add a view to the layout that is known to be going away, either because it has been "," To be called only during onLayoutChildren(Recycler, State) to add a view to the layout that is known to be going away, either because it has been removed or because it is actually not in the visible portion of the container but is being laid out in order to inform RecyclerView in how to animate the item out of view. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getTopDecorationHeight (View child) "," Returns the total height of item decorations applied to child's top. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.requestSimpleAnimationsInNextLayout () "," A LayoutManager can call this method to force RecyclerView to run simple animations in the next layout pass, even if there is not any trigger to do so. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onAttachedToWindow (RecyclerView view) "," Called when this LayoutManager is both attached to a RecyclerView and that RecyclerView is attached to a window. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.attachView (View child)   Reattach a previously "," Reattach a previously detached view. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.addView (View child, int index) "," Add a view to the currently attached RecyclerView if needed. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onRestoreInstanceState (Parcelable state) "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.smoothScrollToPosition (RecyclerView recyclerView, RecyclerView.State state, int position) "," Smooth scroll to the specified adapter position. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.canScrollVertically () "," Query if vertical scrolling is currently supported. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getDecoratedMeasuredWidth (View child) "," Returns the measured width of the given child, plus the additional size of any insets applied by ItemDecorations. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onItemsRemoved (RecyclerView recyclerView, int positionStart, int itemCount) "," Called when items have been removed from the adapter. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.offsetChildrenVertical (int dy) "," Offset all child views attached to the parent RecyclerView by dy pixels along the vertical axis. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.requestChildRectangleOnScreen (RecyclerView parent, View child, Rect rect, boolean immediate) "," Called when a child of the RecyclerView wants a particular rectangle to be positioned onto the screen. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.scrollHorizontallyBy (int dx, RecyclerView.Recycler recycler, RecyclerView.State state) "," Scroll horizontally by dx pixels in screen coordinates and return the distance traveled. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.offsetChildrenHorizontal (int dx) "," Offset all child views attached to the parent RecyclerView by dx pixels along the horizontal axis. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.computeHorizontalScrollExtent (RecyclerView.State state) "," Override this method if you want to support scroll bars. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.computeVerticalScrollOffset (RecyclerView.State state) "," Override this method if you want to support scroll bars. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.requestLayout () "," Calls RecyclerView#requestLayout on the underlying RecyclerView <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.addDisappearingView (View child, int index)   To be called only during onLayoutChildren (Recycler, State) to add a view to the layout that is known to be going away, either because it has been "," To be called only during onLayoutChildren(Recycler, State) to add a view to the layout that is known to be going away, either because it has been removed or because it is actually not in the visible portion of the container but is being laid out in order to inform RecyclerView in how to animate the item out of view. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getItemCount () "," Returns the number of items in the adapter bound to the parent RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.hasFocus () "," Returns true if the RecyclerView this LayoutManager is bound to has or contains focus. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.addView (View child) "," Add a view to the currently attached RecyclerView if needed. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.removeAndRecycleViewAt (int index, RecyclerView.Recycler recycler) "," Remove a child view and recycle it using the given Recycler. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.removeAllViews () "," Remove all views from the currently attached RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onItemsUpdated (RecyclerView recyclerView, int positionStart, int itemCount) "," Called when items have been changed in the adapter. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getDecoratedMeasuredHeight (View child) "," Returns the measured height of the given child, plus the additional size of any insets applied by ItemDecorations. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.assertInLayoutOrScroll (String message) "," Checks if RecyclerView is in the middle of a layout or scroll and throws an IllegalStateException if it is not. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.generateLayoutParams (Context c, AttributeSet attrs) "," Create a LayoutParams object suitable for this LayoutManager from an inflated layout resource. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.endAnimation (View view) "," Ends all animations on the view created by the RecyclerView.ItemAnimator. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onDetachedFromWindow (RecyclerView view)    This method is deprecated. override onDetachedFromWindow (RecyclerView, Recycler) "," This method is deprecated. override onDetachedFromWindow(RecyclerView, Recycler) <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.findViewByPosition (int position) "," Finds the view which represents the given adapter position. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getDecoratedRight (View child) "," Returns the right edge of the given child view within its parent, offset by any applied ItemDecorations. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.calculateItemDecorationsForChild (View child, Rect outRect) "," Calculates the item decor insets applied to the given child and updates the provided Rect instance with the inset values. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onSaveInstanceState () "," Called when the LayoutManager should save its state. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getFocusedChild () "," Returns the item View which has or contains focus. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onAdapterChanged (Adapter oldAdapter, Adapter newAdapter) "," Called if the RecyclerView this LayoutManager is bound to has a different adapter set. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.generateDefaultLayoutParams () "," Create a default LayoutParams object for a child of the RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.isSmoothScrolling () "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.performAccessibilityActionForItem (RecyclerView.Recycler recycler, RecyclerView.State state, View view, int action, Bundle args) "," Called by AccessibilityDelegate when an accessibility action is requested on one of the children of LayoutManager. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getBottomDecorationHeight (View child) "," Returns the total height of item decorations applied to child's bottom. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getPaddingEnd () "," Return the end padding of the parent RecyclerView <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.layoutDecorated (View child, int left, int top, int right, int bottom) "," Lay out the given child view within the RecyclerView using coordinates that include any current ItemDecorations. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getRightDecorationWidth (View child) "," Returns the total width of item decorations applied to child's right. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getItemViewType (View view) "," Returns the View type defined by the adapter. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.isLayoutHierarchical (RecyclerView.Recycler recycler, RecyclerView.State state) "," Returns whether layout is hierarchical or not to be used for accessibility. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onInitializeAccessibilityNodeInfoForItem (RecyclerView.Recycler recycler, RecyclerView.State state, View host, AccessibilityNodeInfoCompat info) "," Called by the AccessibilityDelegate when the accessibility information for a specific item should be populated. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onItemsMoved (RecyclerView recyclerView, int from, int to, int itemCount) "," Called when an item is moved withing the adapter. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.getChildCount () "," Return the current number of child views attached to the parent RecyclerView. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.removeView (View child) "," Remove a view from the currently attached RecyclerView if needed. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutManager.onLayoutChildren (RecyclerView.Recycler recycler, RecyclerView.State state) "," Lay out all relevant child views from the given adapter. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutParams.isItemRemoved () "," Returns true if the adapter data item corresponding to the view this LayoutParams is attached to has been removed from the data set. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutParams.getViewPosition ()    This method is deprecated. use getViewLayoutPosition () or getViewAdapterPosition () "," This method is deprecated. use getViewLayoutPosition() or getViewAdapterPosition() <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutParams.viewNeedsUpdate () "," Returns true if the view this LayoutParams is attached to needs to have its content updated from the corresponding adapter. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutParams.isItemChanged () "," Returns true if the adapter data item corresponding to the view this LayoutParams is attached to has been changed in the data set. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutParams.getViewLayoutPosition () "," Returns the adapter position that the view this LayoutParams is attached to corresponds to as of latest layout calculation. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutParams.getViewAdapterPosition () "," Returns the up-to-date adapter position that the view this LayoutParams is attached to corresponds to. <br /><br />"
"android.support.v7.widget.RecyclerView.LayoutParams.isViewInvalid () "," Returns true if the view this LayoutParams is attached to is now representing potentially invalid data. <br /><br />"
"android.support.v7.widget.RecyclerView.OnItemTouchListener.onTouchEvent (RecyclerView rv, MotionEvent e)   Process a touch event as part of a gesture that was claimed by returning true from a previous call to onInterceptTouchEvent (RecyclerView, MotionEvent) "," Process a touch event as part of a gesture that was claimed by returning true from a previous call to onInterceptTouchEvent(RecyclerView, MotionEvent). <br /><br />"
"android.support.v7.widget.RecyclerView.OnItemTouchListener.onInterceptTouchEvent (RecyclerView rv, MotionEvent e) "," Silently observe and/or take over touch events sent to the RecyclerView before they are handled by either the RecyclerView itself or its child views. <br /><br />"
"android.support.v7.widget.RecyclerView.OnScrollListener.onScrolled (RecyclerView recyclerView, int dx, int dy) "," Callback method to be invoked when the RecyclerView has been scrolled. <br /><br />"
"android.support.v7.widget.RecyclerView.OnScrollListener.onScrollStateChanged (RecyclerView recyclerView, int newState) "," Callback method to be invoked when RecyclerView's scroll state changes. <br /><br />"
"android.support.v7.widget.RecyclerView.RecycledViewPool.clear () "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.RecycledViewPool.getRecycledView (int viewType) "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.RecycledViewPool.putRecycledView (RecyclerView.ViewHolder scrap) "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.RecycledViewPool.setMaxRecycledViews (int viewType, int max) "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.Recycler.recycleView (View view) "," Recycle a detached view. <br /><br />"
"android.support.v7.widget.RecyclerView.Recycler.clear () "," Clear scrap views out of this recycler. <br /><br />"
"android.support.v7.widget.RecyclerView.Recycler.convertPreLayoutPositionToPostLayout (int position)   RecyclerView provides artificial position range  (item count) in pre-layout state and automatically maps these positions to RecyclerView.Adapter positions when getViewForPosition (int) or bindViewToPosition (View, int) "," RecyclerView provides artificial position range (item count) in pre-layout state and automatically maps these positions to RecyclerView.Adapter positions when getViewForPosition(int) or bindViewToPosition(View, int) is called. <br /><br />"
"android.support.v7.widget.RecyclerView.Recycler.getScrapList () "," Returns an unmodifiable list of ViewHolders that are currently in the scrap list. <br /><br />"
"android.support.v7.widget.RecyclerView.Recycler.getViewForPosition (int position) "," Obtain a view initialized for the given position. <br /><br />"
"android.support.v7.widget.RecyclerView.Recycler.bindViewToPosition (View view, int position) "," Binds the given View to the position. <br /><br />"
"android.support.v7.widget.RecyclerView.Recycler.setViewCacheSize (int viewCount) "," Set the maximum number of detached, valid views we should retain for later use. <br /><br />"
"android.support.v7.widget.RecyclerView.RecyclerListener.onViewRecycled (RecyclerView.ViewHolder holder) "," This method is called whenever the view in the ViewHolder is recycled. <br /><br />"
"android.support.v7.widget.RecyclerView.SmoothScroller.Action.getInterpolator () "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.SmoothScroller.Action.setDy (int dy) "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.SmoothScroller.Action.setInterpolator (Interpolator interpolator) "," Sets the interpolator to calculate scroll steps <br /><br />"
"android.support.v7.widget.RecyclerView.SmoothScroller.Action.getDy () "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.SmoothScroller.Action.getDx () "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.SmoothScroller.Action.setDuration (int duration) "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.SmoothScroller.Action.update (int dx, int dy, int duration, Interpolator interpolator) "," Updates the action with given parameters. <br /><br />"
"android.support.v7.widget.RecyclerView.SmoothScroller.Action.setDx (int dx) "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.SmoothScroller.Action.getDuration () "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.SmoothScroller.instantScrollToPosition (int position) "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.SmoothScroller.isRunning () "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.SmoothScroller.findViewByPosition (int position) "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.SmoothScroller.getChildCount () "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.SmoothScroller.getLayoutManager () "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.SmoothScroller.getTargetPosition () "," Returns the adapter position of the target item <br /><br />"
"android.support.v7.widget.RecyclerView.SmoothScroller.isPendingInitialRun () "," Returns true if SmoothScroller has been started but has not received the first animation callback yet. <br /><br />"
"android.support.v7.widget.RecyclerView.SmoothScroller.setTargetPosition (int targetPosition) "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.SmoothScroller.getChildPosition (View view) "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.State.getTargetScrollPosition () "," If scroll is triggered to make a certain item visible, this value will return the adapter index of that item. <br /><br />"
"android.support.v7.widget.RecyclerView.State.willRunSimpleAnimations () "," Returns whether RecyclerView will run simple animations in this layout pass or not. <br /><br />"
"android.support.v7.widget.RecyclerView.State.isPreLayout () "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.State.put (int resourceId, Object data) "," Adds a mapping from the specified id to the specified value, replacing the previous mapping from the specified key if there was one. <br /><br />"
"android.support.v7.widget.RecyclerView.State.remove (int resourceId) "," Removes the mapping from the specified id, if there was any. <br /><br />"
"android.support.v7.widget.RecyclerView.State.get (int resourceId) "," Gets the Object mapped from the specified id, or null if no such data exists. <br /><br />"
"android.support.v7.widget.RecyclerView.State.willRunPredictiveAnimations () "," Returns whether RecyclerView will run predictive animations in this layout pass or not. <br /><br />"
"android.support.v7.widget.RecyclerView.State.getItemCount () "," Returns the total number of items that can be laid out. <br /><br />"
"android.support.v7.widget.RecyclerView.State.hasTargetScrollPosition () "," Returns if current scroll has a target position. <br /><br />"
"android.support.v7.widget.RecyclerView.State.didStructureChange () "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.State.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v7.widget.RecyclerView.State.onViewIgnored (RecyclerView.ViewHolder holder) "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.ViewCacheExtension.getViewForPositionAndType (RecyclerView.Recycler recycler, int position, int type) "," Returns a View that can be binded to the given Adapter position. <br /><br />"
"android.support.v7.widget.RecyclerView.ViewHolder.setIsRecyclable (boolean recyclable) "," Informs the recycler whether this item can be recycled. <br /><br />"
"android.support.v7.widget.RecyclerView.ViewHolder.getAdapterPosition () "," Returns the Adapter position of the item represented by this ViewHolder. <br /><br />"
"android.support.v7.widget.RecyclerView.ViewHolder.getPosition ()    This method is deprecated. This method is deprecated because its meaning is ambiguous due to the async handling of adapter updates. Please use getLayoutPosition () or getAdapterPosition () "," This method is deprecated. This method is deprecated because its meaning is ambiguous due to the async handling of adapter updates. Please use getLayoutPosition() or getAdapterPosition() depending on your use case. <br /><br />"
"android.support.v7.widget.RecyclerView.ViewHolder.getItemViewType () "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.ViewHolder.getLayoutPosition () "," Returns the position of the ViewHolder in terms of the latest layout pass. <br /><br />"
"android.support.v7.widget.RecyclerView.ViewHolder.isRecyclable () "," no description <br /><br />"
"android.support.v7.widget.RecyclerView.ViewHolder.getItemId () "," Returns The itemId represented by this ViewHolder. <br /><br />"
"android.support.v7.widget.RecyclerView.ViewHolder.getOldPosition () "," When LayoutManager supports animations, RecyclerView tracks 3 positions for ViewHolders to perform animations. <br /><br />"
"android.support.v7.widget.RecyclerView.ViewHolder.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.support.v7.widget.RecyclerViewAccessibilityDelegate.onInitializeAccessibilityNodeInfo (View host, AccessibilityNodeInfoCompat info) "," Initializes an AccessibilityNodeInfoCompat with information about the host view. <br /><br />"
"android.support.v7.widget.RecyclerViewAccessibilityDelegate.onInitializeAccessibilityEvent (View host, AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about the the host View which is the event source. <br /><br />"
"android.support.v7.widget.RecyclerViewAccessibilityDelegate.performAccessibilityAction (View host, int action, Bundle args) "," Performs the specified accessibility action on the view. <br /><br />"
"android.support.v7.widget.RecyclerViewAccessibilityTest.onInitializeAccessibilityNodeInfoTest (boolean verticalScrollBefore, boolean horizontalScrollBefore, boolean verticalScrollAfter, boolean horizontalScrollAfter) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAccessibilityTest.testOnInitializeAccessibilityNodeInfo () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testAdapterChangeDuringScrolling () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testNotifyDataSetChanged () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testDeleteTwice () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testAddRemoveSamePass () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testDeleteVisibleAndInvisible () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testBasicDelete () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testNotifyDataSetChangedDuringScroll () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testStableIdNotifyDataSetChanged () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testAddInvisible () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testAddDelete1 () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testAddSameIndexTwice () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testDeleteInvisible () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testFindPositionOffset () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testRecycleDuringAnimations () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testDetachBeforeAnimations () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.collectPositions (RecyclerView recyclerView, RecyclerView.Recycler recycler, RecyclerView.State state, int... positions) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testAddDelete2 () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.getItemForDeletedViewTest (boolean stableIds) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testPreLayoutPositionCleanup () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.positionStatesTest (int itemCount, int firstLayoutStartIndex, int firstLayoutItemCount, RecyclerViewAnimationsTest.AdapterOps adapterChanges, PositionConstraint... constraints) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.getTestRecyclerView () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testGetItemForDeletedView () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testAddManyMultiStep () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.positionStatesTest (int itemCount, int firstLayoutStartIndex, int firstLayoutItemCount, BaseRecyclerViewInstrumentationTest.TestAdapter adapter, RecyclerViewAnimationsTest.AdapterOps adapterChanges, PositionConstraint... constraints) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testChangeAnimations () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testBasicAdd () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testAddInvisibleAndVisible () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.changeAnimTest (boolean supportsChangeAnim, boolean changeType, boolean hasStableIds, boolean deleteSomeItems) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testDeleteInvisibleMultiStep () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewAnimationsTest.testRemoveScrapInvalidate () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewBasicTest.testLayoutWithoutAdapter () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewBasicTest.testSavedStateWithStatelessLayoutManager () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewBasicTest.testAdapterChangeCallbacks () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewBasicTest.testMeasureWithoutLayoutManager () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewBasicTest.testSmoothScrollWithoutLayoutManager () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewBasicTest.testSmoothScrollToPositionWithoutLayoutManager () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewBasicTest.testFocusWithoutLayoutManager () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewBasicTest.testScrollWithoutLayoutManager () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewBasicTest.testScrollToPositionWithoutLayoutManager () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewBasicTest.testLayoutWithoutLayoutManager () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewBasicTest.testLayout () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewBasicTest.testSavedState () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewBasicTest.testObservingAdapters () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.adapterChangeDuringScrollTest (String msg, int orientation, Runnable onScrollRunnable) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testInvalidateAllDecorOffsets () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testScrollInBothDirectionMoreVerticalReverse () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.addItemDecoration (RecyclerView recyclerView, RecyclerView.ItemDecoration itemDecoration) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testNotifyDataSetChangedWithStableIds () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testScrollInBothDirectionMoreHorizontalReverse () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testRecycleOnDetach () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testScrollStateDrag () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testAdapterPositionInvalidation () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testDragVertical () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testTypeForExistingViews () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.scrollInBothDirection (int horizontalScrollCount, int verticalScrollCount, int horizontalVelocity, int verticalVelocity) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testFindViewById () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testDetachWithoutLayoutManager () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testScrollInBothDirectionMoreHorizontal () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testScrollInBothDirectionEqualReverse () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testScrollHorizontalOnlyReverse () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testRecycleIgnored () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testUpdatesAfterDetach () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.removeItemDecoration (RecyclerView recyclerView, RecyclerView.ItemDecoration itemDecoration) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testFocusRectOnScreenWithout () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testUpdateHiddenView () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testAdapterPositionsAddItemsBefore () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testSetIncompatibleAdapter () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testRecycleScrap () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testScrollVerticalOnly () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testConsecutiveSmoothScroll () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testAdapterPositionsNotifyDataSetChanged () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testAccessRecyclerOnOnMeasure () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testCallbacksDuringAdapterSwap () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.stableIdsMoveTest (boolean supportsPredictive) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.callbacksDuringAdapterChange (boolean swap) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.incompatibleAdapterTest (boolean useCustomPool) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testState () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testTransientStateRecycleViaAdapter () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testInvalidateDecorOffsets () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.transientStateRecycleTest (boolean succeed, boolean unsetTransientState) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.adapterPositionsTest (RecyclerViewLayoutTest.AdapterRunnable adapterChanges) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testFocusRectOnScreenWithDecorOffsets () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testFindIgnoredByPosition () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.recycleScrapTest (boolean useRecycler) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testTransientStateRecycleViaTransientStateCleanup () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testAdapterChangeDuringLayout () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.smoothScrollTest (boolean removeItem) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testFlingHorizontal () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testScrollStateForSmoothScrollWithStop () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.scrollInOtherOrientationTest (boolean horizontal, boolean drag) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testAdapterPositionsRemoveItemsBefore () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testSetCompatibleAdapter () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.focusRectOnScreenTest (boolean addItemDecors) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testScrollInBothDirectionEqual () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.adapterChangeInMainThreadTest (String msg, Runnable onLayoutRunnable) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testScrollInBothDirectionMoreVertical () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.drag (ViewGroup view, float fromX, float toX, float fromY, float toY, int stepCount) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testAdapterChangeDuringScroll () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testScrollStateForSmoothScroll () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testFlingVertical () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testAdapterPositionsAddItemsInside () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testAdapterPositionsMoveItems () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testScrollVerticalOnlyReverse () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testMovingViaStableIds () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testUpdatesWhileDetached () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testTypeForCache () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.accessRecyclerOnOnMeasureTest (boolean enablePredictiveAnimations) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testAvoidLeakingRecyclerViewViaViewHolder () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.findViewByIdTest (boolean supportPredictive) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testAvoidLeakingRecyclerViewIfViewIsNotRecycled () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.invalidateDecorOffsets (RecyclerView recyclerView) "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testScrollToPositionCallback () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testCallbacksDuringAdapterSet () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testTransientStateDontRecycle () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testScrollStateForFling () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testAdapterPositionsRemoveItems () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testSmoothScrollWithRemovedItems () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testScrollStateForFlingWithStop () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testScrollHorizontalOnly () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testAdapterPositionsBasic () "," no description <br /><br />"
"android.support.v7.widget.RecyclerViewLayoutTest.testDraglHorizontal () "," no description <br /><br />"
"android.support.v7.widget.SearchView.getInputType () "," Returns the input type set on the query text field. <br /><br />"
"android.support.v7.widget.SearchView.setMaxWidth (int maxpixels) "," Makes the view at most this many pixels wide <br /><br />"
"android.support.v7.widget.SearchView.onActionViewCollapsed () "," Called when this view is collapsed as an action view. <br /><br />"
"android.support.v7.widget.SearchView.isIconfiedByDefault () "," Returns the default iconified state of the search field. <br /><br />"
"android.support.v7.widget.SearchView.setInputType (int inputType) "," Sets the input type on the query text field. <br /><br />"
"android.support.v7.widget.SearchView.onActionViewExpanded () "," Called when this view is expanded as an action view. <br /><br />"
"android.support.v7.widget.SearchView.setOnQueryTextListener (SearchView.OnQueryTextListener listener) "," Sets a listener for user actions within the SearchView. <br /><br />"
"android.support.v7.widget.SearchView.getImeOptions () "," Returns the IME options set on the query text field. <br /><br />"
"android.support.v7.widget.SearchView.setSuggestionsAdapter (CursorAdapter adapter) "," You can set a custom adapter if you wish. <br /><br />"
"android.support.v7.widget.SearchView.getQueryHint () "," Gets the hint text to display in the query text field. <br /><br />"
"android.support.v7.widget.SearchView.getQuery () "," Returns the query string currently in the text field. <br /><br />"
"android.support.v7.widget.SearchView.getMaxWidth () "," Gets the specified maximum width in pixels, if set. <br /><br />"
"android.support.v7.widget.SearchView.onWindowFocusChanged (boolean hasWindowFocus) "," Called when the window containing this view gains or loses focus. <br /><br />"
"android.support.v7.widget.SearchView.setIconified (boolean iconify) "," Iconifies or expands the SearchView. <br /><br />"
"android.support.v7.widget.SearchView.isIconified () "," Returns the current iconified state of the SearchView. <br /><br />"
"android.support.v7.widget.SearchView.setQueryRefinementEnabled (boolean enable) "," Specifies if a query refinement button should be displayed alongside each suggestion or if it should depend on the flags set in the individual items retrieved from the suggestions provider. <br /><br />"
"android.support.v7.widget.SearchView.setOnSearchClickListener (View.OnClickListener listener) "," Sets a listener to inform when the search button is pressed. <br /><br />"
"android.support.v7.widget.SearchView.setOnSuggestionListener (SearchView.OnSuggestionListener listener) "," Sets a listener to inform when a suggestion is focused or clicked. <br /><br />"
"android.support.v7.widget.SearchView.setSubmitButtonEnabled (boolean enabled) "," Enables showing a submit button when the query is non-empty. <br /><br />"
"android.support.v7.widget.SearchView.setOnCloseListener (SearchView.OnCloseListener listener) "," Sets a listener to inform when the user closes the SearchView. <br /><br />"
"android.support.v7.widget.SearchView.getSuggestionsAdapter () "," Returns the adapter used for suggestions, if any. <br /><br />"
"android.support.v7.widget.SearchView.setIconifiedByDefault (boolean iconified) "," Sets the default or resting state of the search field. <br /><br />"
"android.support.v7.widget.SearchView.setOnQueryTextFocusChangeListener (View.OnFocusChangeListener listener) "," Sets a listener to inform when the focus of the query text field changes. <br /><br />"
"android.support.v7.widget.SearchView.setQuery (CharSequence query, boolean submit) "," Sets a query string in the text field and optionally submits the query as well. <br /><br />"
"android.support.v7.widget.SearchView.setSearchableInfo (SearchableInfo searchable) "," Sets the SearchableInfo for this SearchView. <br /><br />"
"android.support.v7.widget.SearchView.isQueryRefinementEnabled () "," Returns whether query refinement is enabled for all items or only specific ones. <br /><br />"
"android.support.v7.widget.SearchView.setQueryHint (CharSequence hint) "," Sets the hint text to display in the query text field. <br /><br />"
"android.support.v7.widget.SearchView.isSubmitButtonEnabled () "," Returns whether the submit button is enabled when necessary or never displayed. <br /><br />"
"android.support.v7.widget.SearchView.setImeOptions (int imeOptions) "," Sets the IME options on the query text field. <br /><br />"
"android.support.v7.widget.SearchView.OnCloseListener.onClose () "," The user is attempting to close the SearchView. <br /><br />"
"android.support.v7.widget.SearchView.OnQueryTextListener.onQueryTextChange (String newText) "," Called when the query text is changed by the user. <br /><br />"
"android.support.v7.widget.SearchView.OnQueryTextListener.onQueryTextSubmit (String query) "," Called when the user submits the query. <br /><br />"
"android.support.v7.widget.SearchView.OnSuggestionListener.onSuggestionClick (int position) "," Called when a suggestion was clicked. <br /><br />"
"android.support.v7.widget.SearchView.OnSuggestionListener.onSuggestionSelect (int position) "," Called when a suggestion was selected by navigating to it. <br /><br />"
"android.support.v7.widget.ShareActionProvider.setShareIntent (Intent shareIntent) "," Sets an intent with information about the share action. <br /><br />"
"android.support.v7.widget.ShareActionProvider.onPrepareSubMenu (SubMenu subMenu) "," Called to prepare an associated submenu for the menu item backed by this ActionProvider. <br /><br />"
"android.support.v7.widget.ShareActionProvider.onCreateActionView () "," Factory method for creating new action views. <br /><br />"
"android.support.v7.widget.ShareActionProvider.setShareHistoryFileName (String shareHistoryFile) "," Sets the file name of a file for persisting the share history which history will be used for ordering share targets. <br /><br />"
"android.support.v7.widget.ShareActionProvider.hasSubMenu () "," Determines if this ActionProvider has a submenu associated with it. <br /><br />"
"android.support.v7.widget.ShareActionProvider.setOnShareTargetSelectedListener (ShareActionProvider.OnShareTargetSelectedListener listener) "," Sets a listener to be notified when a share target has been selected. <br /><br />"
"android.support.v7.widget.ShareActionProvider.OnShareTargetSelectedListener.onShareTargetSelected (ShareActionProvider source, Intent intent) "," Called when a share target has been selected. <br /><br />"
"android.support.v7.widget.Space.draw (Canvas canvas) "," Draw nothing. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.computeHorizontalScrollOffset (RecyclerView.State state) "," Override this method if you want to support scroll bars. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.getColumnCountForAccessibility (RecyclerView.Recycler recycler, RecyclerView.State state) "," Returns the number of columns for accessibility. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.getGapStrategy () "," Returns the current gap handling strategy for StaggeredGridLayoutManager. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.getOrientation () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.findFirstCompletelyVisibleItemPositions (int[] into) "," Returns the adapter position of the first completely visible view for each span. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.computeHorizontalScrollRange (RecyclerView.State state) "," Override this method if you want to support scroll bars. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.onItemsAdded (RecyclerView recyclerView, int positionStart, int itemCount) "," Called when items have been added to the adapter. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.getReverseLayout () "," Returns whether views are laid out in reverse order or not. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.computeVerticalScrollRange (RecyclerView.State state) "," Override this method if you want to support scroll bars. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.setReverseLayout (boolean reverseLayout) "," Sets whether LayoutManager should start laying out items from the end of the UI. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.onScrollStateChanged (int state) "," RecyclerView calls this method to notify LayoutManager that scroll state has changed. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.setOrientation (int orientation) "," Sets the orientation of the layout. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.onSaveInstanceState () "," Called when the LayoutManager should save its state. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.setSpanCount (int spanCount) "," Sets the number of spans for the layout. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.onRestoreInstanceState (Parcelable state) "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.checkLayoutParams (RecyclerView.LayoutParams lp) "," Determines the validity of the supplied LayoutParams object. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.canScrollHorizontally () "," Query if horizontal scrolling is currently supported. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.generateDefaultLayoutParams () "," Create a default LayoutParams object for a child of the RecyclerView. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.smoothScrollToPosition (RecyclerView recyclerView, RecyclerView.State state, int position) "," Smooth scroll to the specified adapter position. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.generateLayoutParams (ViewGroup.LayoutParams lp) "," Create a LayoutParams object suitable for this LayoutManager, copying relevant values from the supplied LayoutParams object if possible. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.canScrollVertically () "," Query if vertical scrolling is currently supported. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.onItemsRemoved (RecyclerView recyclerView, int positionStart, int itemCount) "," Called when items have been removed from the adapter. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.offsetChildrenVertical (int dy) "," Offset all child views attached to the parent RecyclerView by dy pixels along the vertical axis. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.scrollHorizontallyBy (int dx, RecyclerView.Recycler recycler, RecyclerView.State state) "," Scroll horizontally by dx pixels in screen coordinates and return the distance traveled. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.onDetachedFromWindow (RecyclerView view, RecyclerView.Recycler recycler) "," Called when this LayoutManager is detached from its parent RecyclerView or when its parent RecyclerView is detached from its window. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.invalidateSpanAssignments () "," For consistency, StaggeredGridLayoutManager keeps a mapping between spans and items. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.offsetChildrenHorizontal (int dx) "," Offset all child views attached to the parent RecyclerView by dx pixels along the horizontal axis. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.findLastCompletelyVisibleItemPositions (int[] into) "," Returns the adapter position of the last completely visible view for each span. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.scrollToPositionWithOffset (int position, int offset) "," Scroll to the specified adapter position with the given offset from layout start. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.computeHorizontalScrollExtent (RecyclerView.State state) "," Override this method if you want to support scroll bars. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.computeVerticalScrollOffset (RecyclerView.State state) "," Override this method if you want to support scroll bars. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.getSpanCount () "," Returns the number of spans laid out by StaggeredGridLayoutManager. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.getRowCountForAccessibility (RecyclerView.Recycler recycler, RecyclerView.State state) "," Returns the number of rows for accessibility. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.onInitializeAccessibilityNodeInfoForItem (RecyclerView.Recycler recycler, RecyclerView.State state, View host, AccessibilityNodeInfoCompat info) "," Called by the AccessibilityDelegate when the accessibility information for a specific item should be populated. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.supportsPredictiveItemAnimations () "," Returns whether this LayoutManager supports automatic item animations. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.scrollToPosition (int position) "," Scroll to the specified adapter position. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.onItemsChanged (RecyclerView recyclerView)   Called when notifyDataSetChanged () "," Called when notifyDataSetChanged() is triggered instead of giving detailed information on what has actually changed. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.scrollVerticallyBy (int dy, RecyclerView.Recycler recycler, RecyclerView.State state) "," Scroll vertically by dy pixels in screen coordinates and return the distance traveled. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.onItemsMoved (RecyclerView recyclerView, int from, int to, int itemCount) "," Called when an item is moved withing the adapter. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.findFirstVisibleItemPositions (int[] into) "," Returns the adapter position of the first visible view for each span. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.onInitializeAccessibilityEvent (AccessibilityEvent event) "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.computeVerticalScrollExtent (RecyclerView.State state) "," Override this method if you want to support scroll bars. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.onItemsUpdated (RecyclerView recyclerView, int positionStart, int itemCount) "," Called when items have been changed in the adapter. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.findLastVisibleItemPositions (int[] into) "," Returns the adapter position of the last visible view for each span. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.setGapStrategy (int gapStrategy) "," Sets the gap handling strategy for StaggeredGridLayoutManager. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.onLayoutChildren (RecyclerView.Recycler recycler, RecyclerView.State state) "," Lay out all relevant child views from the given adapter. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.generateLayoutParams (Context c, AttributeSet attrs) "," Create a LayoutParams object suitable for this LayoutManager from an inflated layout resource. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.assertNotInLayoutOrScroll (String message) "," Checks if RecyclerView is in the middle of a layout or scroll and throws an IllegalStateException if it is. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.LayoutParams.isFullSpan () "," Returns whether this View occupies all available spans or just one. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.LayoutParams.getSpanIndex () "," Returns the Span index to which this View is assigned. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManager.LayoutParams.setFullSpan (boolean fullSpan) "," When set to true, the item will layout using all span area. <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.innerGapHandlingTest (int strategy) "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.updateAfterFullSpanGapHandlingTest (int fullSpanIndex) "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testSpanCountChangeOnRestoreSavedState () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.gapInTheMiddle (StaggeredGridLayoutManagerTest.Config config) "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.consistentRelayoutTest (StaggeredGridLayoutManagerTest.Config config, boolean firstChildMultiSpan) "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testRTL () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.scrollByTest (StaggeredGridLayoutManagerTest.Config config) "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testLayoutOrder () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.scrollToPositionTest (StaggeredGridLayoutManagerTest.Config config) "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testAccessibilityPositions () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testScrollBackAndPreservePositions () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testUpdateAfterFullSpan () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testSpanReassignmentsOnItemChange () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testAreAllEndsTheSame () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.viewSnapTest (StaggeredGridLayoutManagerTest.Config config) "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testScrollBy () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.getFirstLastChildrenTest (StaggeredGridLayoutManagerTest.Config config, boolean provideArr) "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testGapAtTheBeginning () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testMoveGapHandling () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testPartialSpanInvalidation () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.assertRectSetsNotEqual (String message, Map<BaseRecyclerViewInstrumentationTest.Item,  Rect> before, Map<BaseRecyclerViewInstrumentationTest.Item,  Rect> after) "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testUpdateAfterFullSpan2 () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testScrollToPositionWithOffset () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.savedStateTest (StaggeredGridLayoutManagerTest.Config config, boolean waitForLayout, StaggeredGridLayoutManagerTest.PostLayoutRunnable postLayoutOperations) "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testSavedState () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testAreAllStartsTheSame () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testViewSnapping () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testConsistentRelayout () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testGrowLookup () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testFindLastInUnevenDistribution () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testInnerGapHandling () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.scrollToPositionWithOffsetTest (StaggeredGridLayoutManagerTest.Config config) "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testFullSizeSpans () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testTemporaryGapHandling () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.assertRectSetsEqual (String message, Map<BaseRecyclerViewInstrumentationTest.Item,  Rect> before, Map<BaseRecyclerViewInstrumentationTest.Item,  Rect> after) "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testScrollToPosition () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testGetFirstLastChildrenTest () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.layoutOrderTest (StaggeredGridLayoutManagerTest.Config config) "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testCustomHeightInVertical () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.scrollToPositionWithPredictive (int scrollPosition, int scrollOffset) "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.gapAtTheBeginningOfTheListTest (StaggeredGridLayoutManagerTest.Config config, int deletePosition, int deleteCount) "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testCustomWidthInHorizontal () "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.customSizeInScrollDirectionTest (StaggeredGridLayoutManagerTest.Config config) "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.scrollBackAndPreservePositionsTest (StaggeredGridLayoutManagerTest.Config config, boolean saveRestoreInBetween) "," no description <br /><br />"
"android.support.v7.widget.StaggeredGridLayoutManagerTest.testScrollToPositionWithPredictive () "," no description <br /><br />"
"android.support.v7.widget.SwitchCompat.toggle () "," Change the checked state of the view to the inverse of its current state <br /><br />"
"android.support.v7.widget.SwitchCompat.setThumbResource (int resId) "," Set the drawable used for the switch 'thumb' - the piece that the user can physically touch and drag along the track. <br /><br />"
"android.support.v7.widget.SwitchCompat.getSplitTrack () "," Returns whether the track should be split by the thumb. <br /><br />"
"android.support.v7.widget.SwitchCompat.setChecked (boolean checked) "," Changes the checked state of this button. <br /><br />"
"android.support.v7.widget.SwitchCompat.getTrackDrawable () "," Get the drawable used for the track that the switch slides within. <br /><br />"
"android.support.v7.widget.SwitchCompat.setSwitchMinWidth (int pixels) "," Set the minimum width of the switch in pixels. <br /><br />"
"android.support.v7.widget.SwitchCompat.getShowText () "," no description <br /><br />"
"android.support.v7.widget.SwitchCompat.setThumbDrawable (Drawable thumb) "," Set the drawable used for the switch 'thumb' - the piece that the user can physically touch and drag along the track. <br /><br />"
"android.support.v7.widget.SwitchCompat.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.support.v7.widget.SwitchCompat.getSwitchPadding () "," Get the amount of horizontal padding between the switch and the associated text. <br /><br />"
"android.support.v7.widget.SwitchCompat.getTextOff () "," Returns the text displayed when the button is not in the checked state. <br /><br />"
"android.support.v7.widget.SwitchCompat.getSwitchMinWidth () "," Get the minimum width of the switch in pixels. <br /><br />"
"android.support.v7.widget.SwitchCompat.onMeasure (int widthMeasureSpec, int heightMeasureSpec) "," Measure the view and its content to determine the measured width and the measured height. <br /><br />"
"android.support.v7.widget.SwitchCompat.setSplitTrack (boolean splitTrack) "," Specifies whether the track should be split by the thumb. <br /><br />"
"android.support.v7.widget.SwitchCompat.setSwitchTypeface (Typeface tf, int style) "," Sets the typeface and style in which the text should be displayed on the switch, and turns on the fake bold and italic bits in the Paint if the Typeface that you provided does not have all the bits in the style that you specified. <br /><br />"
"android.support.v7.widget.SwitchCompat.getTextOn () "," Returns the text displayed when the button is in the checked state. <br /><br />"
"android.support.v7.widget.SwitchCompat.getCompoundPaddingRight () "," Returns the right padding of the view, plus space for the right Drawable if any. <br /><br />"
"android.support.v7.widget.SwitchCompat.setTextOn (CharSequence textOn) "," Sets the text displayed when the button is in the checked state. <br /><br />"
"android.support.v7.widget.SwitchCompat.setSwitchPadding (int pixels) "," Set the amount of horizontal padding between the switch and the associated text. <br /><br />"
"android.support.v7.widget.SwitchCompat.onPopulateAccessibilityEvent (AccessibilityEvent event)   Called from dispatchPopulateAccessibilityEvent (AccessibilityEvent) "," Called from dispatchPopulateAccessibilityEvent(AccessibilityEvent) giving a chance to this View to populate the accessibility event with its text content. <br /><br />"
"android.support.v7.widget.SwitchCompat.draw (Canvas c)   Manually render this view  (and all of its children) "," Manually render this view (and all of its children) to the given Canvas. <br /><br />"
"android.support.v7.widget.SwitchCompat.setSwitchTextAppearance (Context context, int resid) "," Sets the switch text color, size, style, hint color, and highlight color from the specified TextAppearance resource. <br /><br />"
"android.support.v7.widget.SwitchCompat.drawableHotspotChanged (float x, float y) "," This function is called whenever the view hotspot changes and needs to be propagated to drawables or child views managed by the view. <br /><br />"
"android.support.v7.widget.SwitchCompat.setThumbTextPadding (int pixels) "," Set the horizontal padding around the text drawn on the switch itself. <br /><br />"
"android.support.v7.widget.SwitchCompat.setTextOff (CharSequence textOff) "," Sets the text displayed when the button is not in the checked state. <br /><br />"
"android.support.v7.widget.SwitchCompat.getThumbTextPadding () "," Get the horizontal padding around the text drawn on the switch itself. <br /><br />"
"android.support.v7.widget.SwitchCompat.jumpDrawablesToCurrentState ()   Call Drawable.jumpToCurrentState () "," Call Drawable.jumpToCurrentState() on all Drawable objects associated with this view. <br /><br />"
"android.support.v7.widget.SwitchCompat.getThumbDrawable () "," Get the drawable used for the switch 'thumb' - the piece that the user can physically touch and drag along the track. <br /><br />"
"android.support.v7.widget.SwitchCompat.setTrackResource (int resId) "," Set the drawable used for the track that the switch slides within. <br /><br />"
"android.support.v7.widget.SwitchCompat.setSwitchTypeface (Typeface tf) "," Sets the typeface in which the text should be displayed on the switch. <br /><br />"
"android.support.v7.widget.SwitchCompat.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.support.v7.widget.SwitchCompat.getCompoundPaddingLeft () "," Returns the left padding of the view, plus space for the left Drawable if any. <br /><br />"
"android.support.v7.widget.SwitchCompat.onTouchEvent (MotionEvent ev) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.support.v7.widget.SwitchCompat.setTrackDrawable (Drawable track) "," Set the drawable used for the track that the switch slides within. <br /><br />"
"android.support.v7.widget.SwitchCompat.setShowText (boolean showText) "," Sets whether the on/off text should be displayed. <br /><br />"
"android.support.v7.widget.Toolbar.getPopupTheme () "," no description <br /><br />"
"android.support.v7.widget.Toolbar.setLogo (Drawable drawable) "," Set a logo drawable. <br /><br />"
"android.support.v7.widget.Toolbar.dismissPopupMenus () "," Dismiss all currently showing popup menus, including overflow or submenus. <br /><br />"
"android.support.v7.widget.Toolbar.setLogoDescription (int resId) "," Set a description of the toolbar's logo. <br /><br />"
"android.support.v7.widget.Toolbar.getMenu () "," Return the Menu shown in the toolbar. <br /><br />"
"android.support.v7.widget.Toolbar.getNavigationIcon () "," Return the current drawable used as the navigation icon. <br /><br />"
"android.support.v7.widget.Toolbar.setSubtitle (int resId) "," Set the subtitle of this toolbar. <br /><br />"
"android.support.v7.widget.Toolbar.onRtlPropertiesChanged (int layoutDirection)   Called when any RTL property  (layout direction or text direction or text alignment) "," Called when any RTL property (layout direction or text direction or text alignment) has been changed. <br /><br />"
"android.support.v7.widget.Toolbar.setSubtitle (CharSequence subtitle) "," Set the subtitle of this toolbar. <br /><br />"
"android.support.v7.widget.Toolbar.setTitle (int resId) "," Set the title of this toolbar. <br /><br />"
"android.support.v7.widget.Toolbar.setNavigationIcon (int resId) "," Set the icon to use for the toolbar's navigation button. <br /><br />"
"android.support.v7.widget.Toolbar.getSubtitle () "," Return the subtitle of this toolbar. <br /><br />"
"android.support.v7.widget.Toolbar.setMinimumHeight (int minHeight) "," Sets the minimum height of the view. <br /><br />"
"android.support.v7.widget.Toolbar.setTitleTextAppearance (Context context, int resId) "," Sets the text color, size, style, hint color, and highlight color from the specified TextAppearance resource. <br /><br />"
"android.support.v7.widget.Toolbar.setLogo (int resId) "," Set a logo drawable from a resource id. <br /><br />"
"android.support.v7.widget.Toolbar.getContentInsetStart () "," Get the starting content inset for this toolbar. <br /><br />"
"android.support.v7.widget.Toolbar.hideOverflowMenu () "," Hide the overflow items from the associated menu. <br /><br />"
"android.support.v7.widget.Toolbar.setSubtitleTextAppearance (Context context, int resId) "," Sets the text color, size, style, hint color, and highlight color from the specified TextAppearance resource. <br /><br />"
"android.support.v7.widget.Toolbar.getTitle () "," Returns the title of this toolbar. <br /><br />"
"android.support.v7.widget.Toolbar.setOnMenuItemClickListener (Toolbar.OnMenuItemClickListener listener) "," Set a listener to respond to menu item click events. <br /><br />"
"android.support.v7.widget.Toolbar.setNavigationIcon (Drawable icon) "," Set the icon to use for the toolbar's navigation button. <br /><br />"
"android.support.v7.widget.Toolbar.setNavigationContentDescription (int resId) "," Set a content description for the navigation button if one is present. <br /><br />"
"android.support.v7.widget.Toolbar.showOverflowMenu () "," Show the overflow items from the associated menu. <br /><br />"
"android.support.v7.widget.Toolbar.getLogo () "," Return the current logo drawable. <br /><br />"
"android.support.v7.widget.Toolbar.setPopupTheme (int resId) "," Specifies the theme to use when inflating popup menus. <br /><br />"
"android.support.v7.widget.Toolbar.getContentInsetRight () "," Get the right content inset for this toolbar. <br /><br />"
"android.support.v7.widget.Toolbar.setContentInsetsAbsolute (int contentInsetLeft, int contentInsetRight) "," Set the content insets for this toolbar. <br /><br />"
"android.support.v7.widget.Toolbar.getLogoDescription () "," Return the description of the toolbar's logo. <br /><br />"
"android.support.v7.widget.Toolbar.setNavigationContentDescription (CharSequence description) "," Set a content description for the navigation button if one is present. <br /><br />"
"android.support.v7.widget.Toolbar.setSubtitleTextColor (int color) "," Sets the text color of the subtitle, if present. <br /><br />"
"android.support.v7.widget.Toolbar.getContentInsetEnd () "," Get the ending content inset for this toolbar. <br /><br />"
"android.support.v7.widget.Toolbar.isOverflowMenuShowing () "," Check whether the overflow menu is currently showing. <br /><br />"
"android.support.v7.widget.Toolbar.getContentInsetLeft () "," Get the left content inset for this toolbar. <br /><br />"
"android.support.v7.widget.Toolbar.collapseActionView () "," Collapse a currently expanded action view. <br /><br />"
"android.support.v7.widget.Toolbar.setNavigationOnClickListener (View.OnClickListener listener) "," Set a listener to respond to navigation events. <br /><br />"
"android.support.v7.widget.Toolbar.setContentInsetsRelative (int contentInsetStart, int contentInsetEnd) "," Set the content insets for this toolbar relative to layout direction. <br /><br />"
"android.support.v7.widget.Toolbar.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.support.v7.widget.Toolbar.setTitleTextColor (int color) "," Sets the text color of the title, if present. <br /><br />"
"android.support.v7.widget.Toolbar.onTouchEvent (MotionEvent ev) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.support.v7.widget.Toolbar.setTitle (CharSequence title) "," Set the title of this toolbar. <br /><br />"
"android.support.v7.widget.Toolbar.hasExpandedActionView () "," Check whether this Toolbar is currently hosting an expanded action view. <br /><br />"
"android.support.v7.widget.Toolbar.onHoverEvent (MotionEvent ev) "," Implement this method to handle hover events. <br /><br />"
"android.support.v7.widget.Toolbar.setLogoDescription (CharSequence description) "," Set a description of the toolbar's logo. <br /><br />"
"android.support.v7.widget.Toolbar.getNavigationContentDescription () "," Retrieve the currently configured content description for the navigation button view. <br /><br />"
"android.support.v7.widget.Toolbar.inflateMenu (int resId) "," Inflate a menu resource into this toolbar. <br /><br />"
"android.support.v7.widget.Toolbar.OnMenuItemClickListener.onMenuItemClick (MenuItem item) "," This method will be invoked when a menu item is clicked if the item itself did not already handle the event. <br /><br />"
"android.support.v7.widget.util.SortedListAdapterCallback<T2>.onInserted (int position, int count) "," Called by the SortedList when an item is inserted at the given position. <br /><br />"
"android.support.v7.widget.util.SortedListAdapterCallback<T2>.onChanged (int position, int count) "," Called by the SortedList when the item at the given position is updated. <br /><br />"
"android.support.v7.widget.util.SortedListAdapterCallback<T2>.onRemoved (int position, int count) "," Called by the SortedList when an item is removed from the given position. <br /><br />"
"android.support.v7.widget.util.SortedListAdapterCallback<T2>.onMoved (int fromPosition, int toPosition) "," Called by the SortedList when an item changes its position in the list. <br /><br />"
"android.support.v8.renderscript.Allocation.copyFrom (Allocation a) "," Copy an Allocation from an Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.copyFromUnchecked (byte[] d) "," Copy into this Allocation from an array. <br /><br />"
"android.support.v8.renderscript.Allocation.createSized (RenderScript rs, Element e, int count) "," Creates an Allocation with a specified number of given elements <br /><br />"
"android.support.v8.renderscript.Allocation.getType () "," Get the Type of the Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.copyFromUnchecked (int[] d) "," Copy into this Allocation from an array. <br /><br />"
"android.support.v8.renderscript.Allocation.copy1DRangeFrom (int off, int count, int[] d) "," Copy an array into part of this Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.copyFrom (short[] d) "," Copy into this Allocation from an array. <br /><br />"
"android.support.v8.renderscript.Allocation.getElement () "," Get the Element of the Type of the Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.createFromBitmap (RenderScript rs, Bitmap b, Allocation.MipmapControl mips, int usage) "," Creates an Allocation from a Bitmap. <br /><br />"
"android.support.v8.renderscript.Allocation.createTyped (RenderScript rs, Type type, int usage) "," Creates an Allocation with the size specified by the type and no mipmaps generated by default <br /><br />"
"android.support.v8.renderscript.Allocation.copy2DRangeFrom (int xoff, int yoff, Bitmap data) "," Copy a Bitmap into an Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.createCubemapFromCubeFaces (RenderScript rs, Bitmap xpos, Bitmap xneg, Bitmap ypos, Bitmap yneg, Bitmap zpos, Bitmap zneg, Allocation.MipmapControl mips, int usage) "," Creates a cubemap Allocation from 6 Bitmap objects containing the cube faces. <br /><br />"
"android.support.v8.renderscript.Allocation.copy1DRangeFrom (int off, int count, Allocation data, int dataOff) "," Copy part of an Allocation into this Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.copyTo (short[] d) "," Copy from the Allocation into a short array. <br /><br />"
"android.support.v8.renderscript.Allocation.copyFrom (byte[] d) "," Copy into this Allocation from an array. <br /><br />"
"android.support.v8.renderscript.Allocation.copy1DRangeFromUnchecked (int off, int count, float[] d) "," Copy an array into part of this Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.getBytesSize () "," Get the size of the Allocation in bytes. <br /><br />"
"android.support.v8.renderscript.Allocation.copyFrom (BaseObj[] d) "," Copy an array of RS objects to the Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.createSized (RenderScript rs, Element e, int count, int usage) "," Creates an Allocation with a specified number of given elements <br /><br />"
"android.support.v8.renderscript.Allocation.createTyped (RenderScript rs, Type type) "," Creates an Allocation for use by scripts with a given Type and no mipmaps <br /><br />"
"android.support.v8.renderscript.Allocation.generateMipmaps () "," Generate a mipmap chain. <br /><br />"
"android.support.v8.renderscript.Allocation.copy1DRangeFrom (int off, int count, byte[] d) "," Copy an array into part of this Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.syncAll (int srcLocation) "," Propagate changes from one usage of the Allocation to the other usages of the Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.copyFrom (Bitmap b) "," Copy into an Allocation from a Bitmap. <br /><br />"
"android.support.v8.renderscript.Allocation.createFromBitmap (RenderScript rs, Bitmap b) "," Creates an Allocation from a Bitmap. <br /><br />"
"android.support.v8.renderscript.Allocation.createCubemapFromBitmap (RenderScript rs, Bitmap b) "," Creates a non-mipmapped cubemap Allocation for use as a graphics texture from a Bitmap containing the horizontal list of cube faces. <br /><br />"
"android.support.v8.renderscript.Allocation.getUsage () "," Get the usage flags of the Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.copy2DRangeFrom (int xoff, int yoff, int w, int h, Allocation data, int dataXoff, int dataYoff) "," Copy a rectangular region from an Allocation into a rectangular region in this Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.copy2DRangeFrom (int xoff, int yoff, int w, int h, short[] data) "," Copy from an array into a rectangular region in this Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.copy1DRangeFrom (int off, int count, float[] d) "," Copy an array into part of this Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.copy1DRangeFromUnchecked (int off, int count, int[] d) "," Copy an array into part of this Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.copy2DRangeFrom (int xoff, int yoff, int w, int h, float[] data) "," Copy from an array into a rectangular region in this Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.copyFromUnchecked (float[] d) "," Copy into this Allocation from an array. <br /><br />"
"android.support.v8.renderscript.Allocation.createCubemapFromCubeFaces (RenderScript rs, Bitmap xpos, Bitmap xneg, Bitmap ypos, Bitmap yneg, Bitmap zpos, Bitmap zneg) "," Creates a non-mipmapped cubemap Allocation for use as a sampler input from 6 Bitmap objects containing the cube faces. <br /><br />"
"android.support.v8.renderscript.Allocation.createFromBitmapResource (RenderScript rs, Resources res, int id) "," Creates a non-mipmapped Allocation to use as a graphics texture from the Bitmap referenced by resource ID. <br /><br />"
"android.support.v8.renderscript.Allocation.copy1DRangeFrom (int off, int count, short[] d) "," Copy an array into part of this Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.copyTo (int[] d) "," Copy from the Allocation into a int array. <br /><br />"
"android.support.v8.renderscript.Allocation.copyTo (Bitmap b) "," Copy from the Allocation into a Bitmap. <br /><br />"
"android.support.v8.renderscript.Allocation.copyTo (float[] d) "," Copy from the Allocation into a float array. <br /><br />"
"android.support.v8.renderscript.Allocation.createFromBitmapResource (RenderScript rs, Resources res, int id, Allocation.MipmapControl mips, int usage) "," Creates an Allocation from the Bitmap referenced by resource ID. <br /><br />"
"android.support.v8.renderscript.Allocation.copyTo (byte[] d) "," Copy from the Allocation into a byte array. <br /><br />"
"android.support.v8.renderscript.Allocation.copyFromUnchecked (short[] d) "," Copy into this Allocation from an array. <br /><br />"
"android.support.v8.renderscript.Allocation.ioSend () "," Send a buffer to the output stream. <br /><br />"
"android.support.v8.renderscript.Allocation.copyFrom (int[] d) "," Copy into this Allocation from an array. <br /><br />"
"android.support.v8.renderscript.Allocation.setFromFieldPacker (int xoff, FieldPacker fp) "," This is only intended to be used by auto-generated code reflected from the RenderScript script files and should not be used by developers. <br /><br />"
"android.support.v8.renderscript.Allocation.copyFrom (float[] d) "," Copy into this Allocation from an array. <br /><br />"
"android.support.v8.renderscript.Allocation.setFromFieldPacker (int xoff, int component_number, FieldPacker fp) "," This is only intended to be used by auto-generated code reflected from the RenderScript script files. <br /><br />"
"android.support.v8.renderscript.Allocation.createTyped (RenderScript rs, Type type, Allocation.MipmapControl mips, int usage) "," Creates a new Allocation with the given Type, mipmap flag, and usage flags. <br /><br />"
"android.support.v8.renderscript.Allocation.copy1DRangeFromUnchecked (int off, int count, byte[] d) "," Copy an array into part of this Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.copy2DRangeFrom (int xoff, int yoff, int w, int h, byte[] data) "," Copy from an array into a rectangular region in this Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.copy2DRangeFrom (int xoff, int yoff, int w, int h, int[] data) "," Copy from an array into a rectangular region in this Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.copy1DRangeFromUnchecked (int off, int count, short[] d) "," Copy an array into part of this Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.ioReceive () "," Receive the latest input into the Allocation. <br /><br />"
"android.support.v8.renderscript.Allocation.createFromString (RenderScript rs, String str, int usage) "," Creates an Allocation containing string data encoded in UTF-8 format. <br /><br />"
"android.support.v8.renderscript.Allocation.createCubemapFromBitmap (RenderScript rs, Bitmap b, Allocation.MipmapControl mips, int usage) "," Creates a cubemap Allocation from a Bitmap containing the horizontal list of cube faces. <br /><br />"
"android.support.v8.renderscript.BaseObj.destroy () "," Frees any native resources associated with this object. <br /><br />"
"android.support.v8.renderscript.BaseObj.equals (Object obj) "," Compare the current BaseObj with another BaseObj for equality. <br /><br />"
"android.support.v8.renderscript.BaseObj.hashCode () "," Calculates the hash code value for a BaseObj. <br /><br />"
"android.support.v8.renderscript.Element.Builder.add (Element element, String name) "," Add a single element to this Element. <br /><br />"
"android.support.v8.renderscript.Element.Builder.create () "," Create the element from this builder. <br /><br />"
"android.support.v8.renderscript.Element.Builder.add (Element element, String name, int arraySize) "," Add an array of elements to this element. <br /><br />"
"android.support.v8.renderscript.FieldPacker.addU64 (long v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addI16 (Short4 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addI16 (Short2 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addF64 (double v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addF64 (Double3 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addU64 (Long4 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addI64 (Long3 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addI8 (Byte2 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addI64 (Long4 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addF32 (Float4 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addMatrix (Matrix3f v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addU16 (Int2 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addU8 (short v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addI8 (Byte3 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addI8 (Byte4 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.align (int v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addI32 (int v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.getPos () "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addI8 (byte v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addObj (BaseObj obj) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addU32 (Long2 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addU16 (Int4 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addU32 (Long3 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addU32 (Long4 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addU16 (Int3 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addBoolean (boolean v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addI32 (Int4 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addF32 (Float2 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.skip (int i) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addI16 (Short3 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addU32 (long v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addU8 (Short3 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addMatrix (Matrix2f v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.reset (int i) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addU16 (int v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addU8 (Short2 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addU64 (Long2 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addF32 (Float3 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addI64 (Long2 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addF64 (Double4 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addF64 (Double2 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addU64 (Long3 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addI64 (long v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.getData () "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addF32 (float v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addMatrix (Matrix4f v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addI32 (Int3 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.reset () "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addI16 (short v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addU8 (Short4 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPacker.addI32 (Int2 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addF32 (Float2 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addI32 (Int4 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.skip (int i) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addU64 (long v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addU8 (Short3 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addU32 (long v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addI16 (Short3 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addMatrix (Matrix2f v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addI16 (Short2 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addI16 (Short4 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addF64 (double v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addF64 (Double3 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addU8 (Short2 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addU64 (Long4 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addU16 (int v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addU64 (Long2 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addF32 (Float3 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addI64 (Long3 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addI64 (Long2 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addI8 (Byte2 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addI64 (Long4 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addF64 (Double4 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addF64 (Double2 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addU64 (Long3 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addMatrix (Matrix3f v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addF32 (Float4 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addU16 (Int2 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addU8 (short v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addI64 (long v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addI8 (Byte3 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addI8 (Byte4 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.getPos () "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addI32 (int v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addI8 (byte v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addU32 (Long2 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addObj (BaseObj obj) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.getData () "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addU32 (Long3 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addU16 (Int4 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addF32 (float v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addMatrix (Matrix4f v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addI32 (Int3 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addU32 (Long4 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addI16 (short v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addU8 (Short4 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addU16 (Int3 v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addBoolean (boolean v) "," no description <br /><br />"
"android.support.v8.renderscript.FieldPackerThunker.addI32 (Int2 v) "," no description <br /><br />"
"android.support.v8.renderscript.Matrix2f.set (int x, int y, float v) "," Sets the value for a given row and column <br /><br />"
"android.support.v8.renderscript.Matrix2f.loadRotate (float rot) "," Sets current values to be a rotation matrix of given angle <br /><br />"
"android.support.v8.renderscript.Matrix2f.load (Matrix2f src) "," Sets the values of the matrix to those of the parameter <br /><br />"
"android.support.v8.renderscript.Matrix2f.getArray () "," Return a reference to the internal array representing matrix values. <br /><br />"
"android.support.v8.renderscript.Matrix2f.loadScale (float x, float y) "," Sets current values to be a scale matrix of given dimensions <br /><br />"
"android.support.v8.renderscript.Matrix2f.multiply (Matrix2f rhs) "," Post-multiplies the current matrix by a given parameter <br /><br />"
"android.support.v8.renderscript.Matrix2f.loadIdentity () "," Sets the matrix values to identity <br /><br />"
"android.support.v8.renderscript.Matrix2f.loadMultiply (Matrix2f lhs, Matrix2f rhs) "," Sets current values to be the result of multiplying two given matrices <br /><br />"
"android.support.v8.renderscript.Matrix2f.transpose () "," Sets the current matrix to its transpose <br /><br />"
"android.support.v8.renderscript.Matrix2f.scale (float x, float y) "," Modifies the current matrix by post-multiplying it with a scale matrix of given dimensions <br /><br />"
"android.support.v8.renderscript.Matrix2f.rotate (float rot) "," Modifies the current matrix by post-multiplying it with a rotation matrix of given angle <br /><br />"
"android.support.v8.renderscript.Matrix2f.get (int x, int y) "," Returns the value for a given row and column <br /><br />"
"android.support.v8.renderscript.Matrix3f.loadMultiply (Matrix3f lhs, Matrix3f rhs) "," Sets current values to be the result of multiplying two given matrices <br /><br />"
"android.support.v8.renderscript.Matrix3f.scale (float x, float y, float z) "," Modifies the current matrix by post-multiplying it with a scale matrix of given dimensions <br /><br />"
"android.support.v8.renderscript.Matrix3f.loadScale (float x, float y) "," Makes the upper 2x2 a scale matrix of given dimensions <br /><br />"
"android.support.v8.renderscript.Matrix3f.loadIdentity () "," Sets the matrix values to identity <br /><br />"
"android.support.v8.renderscript.Matrix3f.loadRotate (float rot, float x, float y, float z) "," Sets current values to be a rotation matrix of certain angle about a given axis <br /><br />"
"android.support.v8.renderscript.Matrix3f.loadScale (float x, float y, float z) "," Sets current values to be a scale matrix of given dimensions <br /><br />"
"android.support.v8.renderscript.Matrix3f.loadTranslate (float x, float y) "," Sets current values to be a translation matrix of given dimensions <br /><br />"
"android.support.v8.renderscript.Matrix3f.transpose () "," Sets the current matrix to its transpose <br /><br />"
"android.support.v8.renderscript.Matrix3f.translate (float x, float y) "," Modifies the current matrix by post-multiplying it with a translation matrix of given dimensions <br /><br />"
"android.support.v8.renderscript.Matrix3f.multiply (Matrix3f rhs) "," Post-multiplies the current matrix by a given parameter <br /><br />"
"android.support.v8.renderscript.Matrix3f.get (int x, int y) "," Returns the value for a given row and column <br /><br />"
"android.support.v8.renderscript.Matrix3f.set (int x, int y, float v) "," Sets the value for a given row and column <br /><br />"
"android.support.v8.renderscript.Matrix3f.loadRotate (float rot) "," Makes the upper 2x2 a rotation matrix of the given angle <br /><br />"
"android.support.v8.renderscript.Matrix3f.load (Matrix3f src) "," Sets the values of the matrix to those of the parameter <br /><br />"
"android.support.v8.renderscript.Matrix3f.getArray () "," Return a reference to the internal array representing matrix values. <br /><br />"
"android.support.v8.renderscript.Matrix3f.scale (float x, float y) "," Modifies the upper 2x2 of the current matrix by post-multiplying it with a scale matrix of given dimensions <br /><br />"
"android.support.v8.renderscript.Matrix3f.rotate (float rot) "," Modifies the upper 2x2 of the current matrix by post-multiplying it with a rotation matrix of given angle <br /><br />"
"android.support.v8.renderscript.Matrix3f.rotate (float rot, float x, float y, float z) "," Modifies the current matrix by post-multiplying it with a rotation matrix of certain angle about a given axis <br /><br />"
"android.support.v8.renderscript.Matrix4f.multiply (Matrix4f rhs) "," Post-multiplies the current matrix by a given parameter <br /><br />"
"android.support.v8.renderscript.Matrix4f.translate (float x, float y, float z) "," Modifies the current matrix by post-multiplying it with a translation matrix of given dimensions <br /><br />"
"android.support.v8.renderscript.Matrix4f.scale (float x, float y, float z) "," Modifies the current matrix by post-multiplying it with a scale matrix of given dimensions <br /><br />"
"android.support.v8.renderscript.Matrix4f.loadIdentity () "," Sets the matrix values to identity <br /><br />"
"android.support.v8.renderscript.Matrix4f.loadProjectionNormalized (int w, int h)   Helper function to set the current values to a perspective projection matrix with aspect ratio defined by the parameters and  (near, far),  (bottom, top) mapping to  (-1, 1) "," Helper function to set the current values to a perspective projection matrix with aspect ratio defined by the parameters and (near, far), (bottom, top) mapping to (-1, 1) at z = 0 <br /><br />"
"android.support.v8.renderscript.Matrix4f.loadScale (float x, float y, float z) "," Sets current values to be a scale matrix of given dimensions <br /><br />"
"android.support.v8.renderscript.Matrix4f.loadRotate (float rot, float x, float y, float z) "," Sets current values to be a rotation matrix of certain angle about a given axis <br /><br />"
"android.support.v8.renderscript.Matrix4f.transpose () "," Sets the current matrix to its transpose <br /><br />"
"android.support.v8.renderscript.Matrix4f.loadTranslate (float x, float y, float z) "," Sets current values to be a translation matrix of given dimensions <br /><br />"
"android.support.v8.renderscript.Matrix4f.get (int x, int y) "," Returns the value for a given row and column <br /><br />"
"android.support.v8.renderscript.Matrix4f.loadOrtho (float l, float r, float b, float t, float n, float f) "," Set current values to be an orthographic projection matrix <br /><br />"
"android.support.v8.renderscript.Matrix4f.loadMultiply (Matrix4f lhs, Matrix4f rhs) "," Sets current values to be the result of multiplying two given matrices <br /><br />"
"android.support.v8.renderscript.Matrix4f.set (int x, int y, float v) "," Sets the value for a given row and column <br /><br />"
"android.support.v8.renderscript.Matrix4f.load (Matrix4f src) "," Sets the values of the matrix to those of the parameter <br /><br />"
"android.support.v8.renderscript.Matrix4f.inverse () "," Sets the current matrix to its inverse <br /><br />"
"android.support.v8.renderscript.Matrix4f.getArray () "," Return a reference to the internal array representing matrix values. <br /><br />"
"android.support.v8.renderscript.Matrix4f.inverseTranspose () "," Sets the current matrix to its inverse transpose <br /><br />"
"android.support.v8.renderscript.Matrix4f.loadPerspective (float fovy, float aspect, float near, float far) "," Sets current values to be a perspective projection matrix <br /><br />"
"android.support.v8.renderscript.Matrix4f.loadFrustum (float l, float r, float b, float t, float n, float f) "," Sets current values to be a perspective projection matrix <br /><br />"
"android.support.v8.renderscript.Matrix4f.loadOrthoWindow (int w, int h) "," Set current values to be an orthographic projection matrix with the right and bottom clipping planes set to the given values. <br /><br />"
"android.support.v8.renderscript.Matrix4f.rotate (float rot, float x, float y, float z) "," Modifies the current matrix by post-multiplying it with a rotation matrix of certain angle about a given axis <br /><br />"
"android.support.v8.renderscript.RenderScript.RSErrorHandler.run () "," Starts executing the active part of the class' code. <br /><br />"
"android.support.v8.renderscript.RenderScript.RSMessageHandler.run () "," Starts executing the active part of the class' code. <br /><br />"
"android.support.v8.renderscript.Sampler.Builder.create () "," no description <br /><br />"
"android.support.v8.renderscript.Sampler.Builder.setWrapT (Sampler.Value v) "," no description <br /><br />"
"android.support.v8.renderscript.Sampler.Builder.setMagnification (Sampler.Value v) "," no description <br /><br />"
"android.support.v8.renderscript.Sampler.Builder.setWrapS (Sampler.Value v) "," no description <br /><br />"
"android.support.v8.renderscript.Sampler.Builder.setAnisotropy (float v) "," no description <br /><br />"
"android.support.v8.renderscript.Sampler.Builder.setMinification (Sampler.Value v) "," no description <br /><br />"
"android.support.v8.renderscript.Script.FieldBase.getAllocation () "," no description <br /><br />"
"android.support.v8.renderscript.Script.FieldBase.getType () "," no description <br /><br />"
"android.support.v8.renderscript.Script.FieldBase.getElement () "," no description <br /><br />"
"android.support.v8.renderscript.Script.FieldBase.updateAllocation () "," no description <br /><br />"
"android.support.v8.renderscript.Script.LaunchOptions.setZ (int zstartArg, int zendArg) "," Set the Z range. <br /><br />"
"android.support.v8.renderscript.Script.LaunchOptions.getYEnd () "," Returns the current Y end <br /><br />"
"android.support.v8.renderscript.Script.LaunchOptions.setX (int xstartArg, int xendArg) "," Set the X range. <br /><br />"
"android.support.v8.renderscript.Script.LaunchOptions.getZEnd () "," Returns the current Z end <br /><br />"
"android.support.v8.renderscript.Script.LaunchOptions.setY (int ystartArg, int yendArg) "," Set the Y range. <br /><br />"
"android.support.v8.renderscript.Script.LaunchOptions.getYStart () "," Returns the current Y start <br /><br />"
"android.support.v8.renderscript.Script.LaunchOptions.getXEnd () "," Returns the current X end <br /><br />"
"android.support.v8.renderscript.Script.LaunchOptions.getZStart () "," Returns the current Z start <br /><br />"
"android.support.v8.renderscript.Script.LaunchOptions.getXStart () "," Returns the current X start <br /><br />"
"android.support.v8.renderscript.ScriptGroup.Builder.addKernel (Script.KernelID k) "," Adds a Kernel to the group. <br /><br />"
"android.support.v8.renderscript.ScriptGroup.Builder.addConnection (Type t, Script.KernelID from, Script.FieldID to) "," Adds a connection to the group. <br /><br />"
"android.support.v8.renderscript.ScriptGroup.Builder.create () "," Creates the Script group. <br /><br />"
"android.support.v8.renderscript.ScriptGroup.Builder.addConnection (Type t, Script.KernelID from, Script.KernelID to) "," Adds a connection to the group. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.forEachAdd (Allocation ain, Allocation aout)   Sets dst = min (src + dst, 1.0) "," Sets dst = min(src + dst, 1.0) <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.forEachSrcAtop (Allocation ain, Allocation aout)   dst.rgb = src.rgb * dst.a +  (1.0 - src.a) "," dst.rgb = src.rgb * dst.a + (1.0 - src.a) * dst.rgb dst.a = dst.a <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.getKernelIDSrcAtop () "," Get a KernelID for the SrcAtop kernel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.create (RenderScript rs, Element e)   Supported elements types are U8_4 (RenderScript) "," Supported elements types are U8_4(RenderScript) <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.forEachSrcOut (Allocation ain, Allocation aout)   Sets dst = src *  (1.0 - dst.a) "," Sets dst = src * (1.0 - dst.a) <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.forEachSubtract (Allocation ain, Allocation aout)   Sets dst = max (dst - src, 0.0) "," Sets dst = max(dst - src, 0.0) <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.forEachMultiply (Allocation ain, Allocation aout) "," Sets dst = src * dst <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.getKernelIDSrcOver () "," Get a KernelID for the SrcOver kernel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.getKernelIDDst () "," Get a KernelID for the Dst kernel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.getKernelIDSrc () "," Get a KernelID for the Src kernel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.forEachSrcOver (Allocation ain, Allocation aout)   Sets dst = src + dst *  (1.0 - src.a) "," Sets dst = src + dst * (1.0 - src.a) <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.getKernelIDXor () "," Get a KernelID for the Xor kernel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.forEachDstOut (Allocation ain, Allocation aout)   Sets dst = dst *  (1.0 - src.a) "," Sets dst = dst * (1.0 - src.a) <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.getKernelIDDstAtop () "," Get a KernelID for the DstAtop kernel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.forEachDst (Allocation ain, Allocation aout) "," Sets dst = dst This is a NOP. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.forEachSrc (Allocation ain, Allocation aout) "," Sets dst = src <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.forEachDstOver (Allocation ain, Allocation aout)   Sets dst = dst + src *  (1.0 - dst.a) "," Sets dst = dst + src * (1.0 - dst.a) <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.forEachClear (Allocation ain, Allocation aout) "," Sets dst = {0, 0, 0, 0} <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.forEachDstAtop (Allocation ain, Allocation aout)   dst = dst.rgb * src.a +  (1.0 - dst.a) "," dst = dst.rgb * src.a + (1.0 - dst.a) * src.rgb dst.a = src.a <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.getKernelIDAdd () "," Get a KernelID for the Add kernel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.getKernelIDClear () "," Get a KernelID for the Clear kernel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.getKernelIDMultiply () "," Get a KernelID for the Multiply kernel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.getKernelIDDstOut () "," Get a KernelID for the DstOut kernel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.forEachSrcIn (Allocation ain, Allocation aout) "," Sets dst = src * dst.a <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.getKernelIDSrcOut () "," Get a KernelID for the SrcOut kernel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.getKernelIDSubtract () "," Get a KernelID for the Subtract kernel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.getKernelIDDstOver () "," Get a KernelID for the DstOver kernel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.forEachXor (Allocation ain, Allocation aout) "," Sets dst = {src.r ^ dst.r, src.g ^ dst.g, src.b ^ dst.b, src.a ^ dst.a} <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.forEachDstIn (Allocation ain, Allocation aout) "," Sets dst = dst * src.a <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.getKernelIDSrcIn () "," Get a KernelID for the SrcIn kernel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlend.getKernelIDDstIn () "," Get a KernelID for the DstIn kernel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlur.create (RenderScript rs, Element e) "," Create an intrinsic for applying a blur to an allocation. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlur.setRadius (float radius) "," Set the radius of the Blur. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlur.forEach (Allocation aout) "," Apply the filter to the input and save to the specified allocation. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlur.getFieldID_Input () "," Get a FieldID for the input field of this intrinsic. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlur.setInput (Allocation ain) "," Set the input of the blur. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicBlur.getKernelID () "," Get a KernelID for this intrinsic kernel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicColorMatrix.create (RenderScript rs, Element e) "," Create an intrinsic for applying a color matrix to an allocation. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicColorMatrix.setGreyscale () "," Set a color matrix to convert from RGB to luminance. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicColorMatrix.setColorMatrix (Matrix4f m) "," Set the color matrix which will be applied to each cell of the image. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicColorMatrix.getKernelID () "," Get a KernelID for this intrinsic kernel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicColorMatrix.setYUVtoRGB () "," Set the matrix to convert from YUV to RGB with a direct copy of the 4th channel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicColorMatrix.setRGBtoYUV () "," Set the matrix to convert from RGB to YUV with a direct copy of the 4th channel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicColorMatrix.forEach (Allocation ain, Allocation aout) "," Invoke the kernel and apply the matrix to each cell of ain and copy to aout. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicColorMatrix.setColorMatrix (Matrix3f m) "," Set the color matrix which will be applied to each cell of the image. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicConvolve3x3.setCoefficients (float[] v) "," Set the coefficients for the convolve. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicConvolve3x3.forEach (Allocation aout) "," Apply the filter to the input and save to the specified allocation. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicConvolve3x3.getFieldID_Input () "," Get a FieldID for the input field of this intrinsic. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicConvolve3x3.setInput (Allocation ain) "," Set the input of the blur. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicConvolve3x3.getKernelID () "," Get a KernelID for this intrinsic kernel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicConvolve3x3.create (RenderScript rs, Element e)   Supported elements types are U8_4 (RenderScript) "," Supported elements types are U8_4(RenderScript) The default coefficients are. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicConvolve5x5.setCoefficients (float[] v) "," Set the coefficients for the convolve. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicConvolve5x5.forEach (Allocation aout) "," Apply the filter to the input and save to the specified allocation. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicConvolve5x5.getFieldID_Input () "," Get a FieldID for the input field of this intrinsic. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicConvolve5x5.setInput (Allocation ain) "," Set the input of the blur. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicConvolve5x5.getKernelID () "," Get a KernelID for this intrinsic kernel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicConvolve5x5.create (RenderScript rs, Element e)   Supported elements types are U8_4 (RenderScript) "," Supported elements types are U8_4(RenderScript) The default coefficients are. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicLUT.setAlpha (int index, int value) "," Set an entry in the alpha channel lookup table <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicLUT.setBlue (int index, int value) "," Set an entry in the blue channel lookup table <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicLUT.setGreen (int index, int value) "," Set an entry in the green channel lookup table <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicLUT.setRed (int index, int value) "," Set an entry in the red channel lookup table <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicLUT.getKernelID () "," Get a KernelID for this intrinsic kernel. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicLUT.create (RenderScript rs, Element e)   Supported elements types are U8_4 (RenderScript) "," Supported elements types are U8_4(RenderScript) The defaults tables are identity. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicLUT.forEach (Allocation ain, Allocation aout) "," Invoke the kernel and apply the lookup to each cell of ain and copy to aout. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicYuvToRGB.create (RenderScript rs, Element e) "," Create an intrinsic for converting YUV to RGB. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicYuvToRGB.forEach (Allocation aout) "," Convert the image to RGB. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicYuvToRGB.getFieldID_Input () "," Get a FieldID for the input field of this intrinsic. <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicYuvToRGB.setInput (Allocation ain)   Set the input yuv allocation, must be U8 (RenderScript) "," Set the input yuv allocation, must be U8(RenderScript). <br /><br />"
"android.support.v8.renderscript.ScriptIntrinsicYuvToRGB.getKernelID () "," Get a KernelID for this intrinsic kernel. <br /><br />"
"android.support.v8.renderscript.Type.Builder.setFaces (boolean value) "," no description <br /><br />"
"android.support.v8.renderscript.Type.Builder.create () "," Validate structure and create a new Type. <br /><br />"
"android.support.v8.renderscript.Type.Builder.setZ (int value) "," no description <br /><br />"
"android.support.v8.renderscript.Type.Builder.setMipmaps (boolean value) "," no description <br /><br />"
"android.support.v8.renderscript.Type.Builder.setY (int value) "," no description <br /><br />"
"android.support.v8.renderscript.Type.Builder.setX (int value) "," Add a dimension to the Type. <br /><br />"
"android.support.wearable.activity.ConfirmationActivity.onCreate (Bundle savedInstanceState) "," no description <br /><br />"
"android.support.wearable.view.BoxInsetLayout.onApplyWindowInsets (WindowInsets insets) "," no description <br /><br />"
"android.support.wearable.view.BoxInsetLayout.getInsets () "," no description <br /><br />"
"android.support.wearable.view.BoxInsetLayout.setForeground (Drawable drawable) "," no description <br /><br />"
"android.support.wearable.view.BoxInsetLayout.generateLayoutParams (AttributeSet attrs) "," no description <br /><br />"
"android.support.wearable.view.BoxInsetLayout.isRound () "," determine screen shape <br /><br />"
"android.support.wearable.view.CardFragment.setCardMarginBottom (int bottom) "," Sets the additional margin between the bottom edge of the card shadow, and the parent view. <br /><br />"
"android.support.wearable.view.CardFragment.onActivityCreated (Bundle savedInstanceState) "," no description <br /><br />"
"android.support.wearable.view.CardFragment.create (CharSequence title, CharSequence description) "," Construct a new CardFragment using the default content layout. <br /><br />"
"android.support.wearable.view.CardFragment.setExpansionFactor (float factor) "," Sets the allowed maximum height of the card as a multiple of the parent height. <br /><br />"
"android.support.wearable.view.CardFragment.scrollToBottom () "," Sets the card scroll position as far down as possible so the bottom edge is visible. <br /><br />"
"android.support.wearable.view.CardFragment.setCardGravity (int gravity) "," Assigns vertical gravity to the card, which determines where it should float when the card and it's content are shorter than the page. <br /><br />"
"android.support.wearable.view.CardFragment.setExpansionDirection (int direction) "," Adjusts which direction the card height will expand. <br /><br />"
"android.support.wearable.view.CardFragment.setCardMargins (int left, int top, int right, int bottom) "," Sets the additional margin between the card shadow edge and the parent view. <br /><br />"
"android.support.wearable.view.CardFragment.setCardMarginTop (int top) "," Sets the additional margin between the top edge of the card shadow, and the parent view. <br /><br />"
"android.support.wearable.view.CardFragment.setContentPadding (int left, int top, int right, int bottom) "," Sets padding between the inside card edge and the card content. <br /><br />"
"android.support.wearable.view.CardFragment.create (CharSequence title, CharSequence text, int iconRes) "," Construct a new CardFragment using the default content layout, including and icon. <br /><br />"
"android.support.wearable.view.CardFragment.setExpansionEnabled (boolean enabled) "," Enables support contents which maybe be larger than the card's container. <br /><br />"
"android.support.wearable.view.CardFragment.onDestroy () "," no description <br /><br />"
"android.support.wearable.view.CardFragment.scrollToTop () "," Sets the card scroll position as far up as possible so the top edge is visible. <br /><br />"
"android.support.wearable.view.CardFragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," no description <br /><br />"
"android.support.wearable.view.CardFragment.setCardMarginLeft (int left) "," Sets the additional margin between the left edge of the card shadow, and the parent view. <br /><br />"
"android.support.wearable.view.CardFragment.setCardMarginRight (int right) "," Sets the additional margin between the right edge of the card shadow, and the parent view. <br /><br />"
"android.support.wearable.view.CardFrame.isExpansionEnabled () "," Indicates whether expansion is on. <br /><br />"
"android.support.wearable.view.CardFrame.addView (View child, int index, ViewGroup.LayoutParams params) "," no description <br /><br />"
"android.support.wearable.view.CardFrame.shouldDelayChildPressedState () "," no description <br /><br />"
"android.support.wearable.view.CardFrame.addView (View child, ViewGroup.LayoutParams params) "," no description <br /><br />"
"android.support.wearable.view.CardFrame.getContentPaddingTop () "," Returns the inner padding after the Card's top edge <br /><br />"
"android.support.wearable.view.CardFrame.getContentPaddingRight () "," Returns the inner padding before the Card's right edge <br /><br />"
"android.support.wearable.view.CardFrame.getContentPaddingBottom () "," Returns the inner padding before the Card's bottom edge <br /><br />"
"android.support.wearable.view.CardFrame.getExpansionFactor () "," Returns the current expansionFactor which is the maximum height of this view as a multiple of the parent view's height. <br /><br />"
"android.support.wearable.view.CardFrame.setExpansionFactor (float expansionFactor) "," Sets the allowed expansion amount as a multiple of the parent height. <br /><br />"
"android.support.wearable.view.CardFrame.addView (View child, int index) "," no description <br /><br />"
"android.support.wearable.view.CardFrame.setExpansionDirection (int direction) "," Sets the direction in which content expands. <br /><br />"
"android.support.wearable.view.CardFrame.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," no description <br /><br />"
"android.support.wearable.view.CardFrame.addView (View child) "," no description <br /><br />"
"android.support.wearable.view.CardFrame.onApplyWindowInsets (WindowInsets insets) "," no description <br /><br />"
"android.support.wearable.view.CardFrame.getContentPaddingLeft () "," Returns the inner padding after the Card's left edge <br /><br />"
"android.support.wearable.view.CardFrame.setExpansionEnabled (boolean enabled) "," Enables support contents which maybe be larger than the card's container. <br /><br />"
"android.support.wearable.view.CardFrame.getExpansionDirection () "," Returns the current expansion direction, either EXPAND_UP or EXPAND_DOWN. <br /><br />"
"android.support.wearable.view.CardFrame.onInitializeAccessibilityEvent (AccessibilityEvent event) "," no description <br /><br />"
"android.support.wearable.view.CardScrollView.isExpansionEnabled () "," Indicates if expansion is enabled. <br /><br />"
"android.support.wearable.view.CardScrollView.getCardGravity () "," Returns the current layout gravity for contained card frame. <br /><br />"
"android.support.wearable.view.CardScrollView.canScrollHorizontally (int direction) "," no description <br /><br />"
"android.support.wearable.view.CardScrollView.addView (View child, int index, ViewGroup.LayoutParams params) "," no description <br /><br />"
"android.support.wearable.view.CardScrollView.onApplyWindowInsets (WindowInsets insets) "," no description <br /><br />"
"android.support.wearable.view.CardScrollView.getExpansionDirection () "," Returns the current expansion direction for the contained CardFrame. <br /><br />"
"android.support.wearable.view.CardScrollView.setExpansionEnabled (boolean enableExpansion) "," Whether the height of the card is permitted to increase beyond the card layout bounds. <br /><br />"
"android.support.wearable.view.CardScrollView.getExpansionFactor () "," Returns the current expansion factor for the contained CardFrame. <br /><br />"
"android.support.wearable.view.CardScrollView.setExpansionFactor (float expansionFactor) "," Changes the expansion factor for the contained CardFrame. <br /><br />"
"android.support.wearable.view.CardScrollView.setCardGravity (int gravity) "," Applies gravity to adjust the vertical alignment of the contained card frame when it's shorter than the containing view. <br /><br />"
"android.support.wearable.view.CardScrollView.setExpansionDirection (int direction) "," Control which direction expansion occurs. <br /><br />"
"android.support.wearable.view.CardScrollView.getAvailableScrollDelta (int direction) "," Indicates how far the container may be vertically scrolled in the given direction. <br /><br />"
"android.support.wearable.view.CircledImageView.setPressed (boolean pressed) "," no description <br /><br />"
"android.support.wearable.view.CircledImageView.setCircleRadiusPressed (float circleRadiusPressed) "," no description <br /><br />"
"android.support.wearable.view.CircledImageView.showIndeterminateProgress (boolean show) "," Show the circle border as an indeterminate progress spinner. <br /><br />"
"android.support.wearable.view.CircledImageView.setCircleColor (int circleColor) "," no description <br /><br />"
"android.support.wearable.view.CircledImageView.setCircleBorderColor (int circleBorderColor) "," no description <br /><br />"
"android.support.wearable.view.CircledImageView.setCircleHidden (boolean circleHidden) "," no description <br /><br />"
"android.support.wearable.view.CircledImageView.setImageResource (int resId) "," no description <br /><br />"
"android.support.wearable.view.CircledImageView.setShadowVisibility (float shadowVisibility) "," Set how much of the shadow should be shown. <br /><br />"
"android.support.wearable.view.CircledImageView.setImageDrawable (Drawable drawable) "," no description <br /><br />"
"android.support.wearable.view.CircledImageView.setProgress (float progress) "," no description <br /><br />"
"android.support.wearable.view.CircledImageView.setCircleBorderWidth (float circleBorderWidth) "," Set the border around the circle. <br /><br />"
"android.support.wearable.view.CircledImageView.getCircleRadius () "," no description <br /><br />"
"android.support.wearable.view.CircledImageView.setCircleColorStateList (ColorStateList circleColor) "," no description <br /><br />"
"android.support.wearable.view.CircledImageView.getDefaultCircleColor () "," no description <br /><br />"
"android.support.wearable.view.CircledImageView.getCircleColorStateList () "," no description <br /><br />"
"android.support.wearable.view.CircledImageView.getInitialCircleRadius () "," no description <br /><br />"
"android.support.wearable.view.CircledImageView.setCircleRadius (float circleRadius) "," no description <br /><br />"
"android.support.wearable.view.CrossfadeDrawable.setColorFilter (ColorFilter cf) "," no description <br /><br />"
"android.support.wearable.view.CrossfadeDrawable.getChangingConfigurations () "," no description <br /><br />"
"android.support.wearable.view.CrossfadeDrawable.getOpacity () "," no description <br /><br />"
"android.support.wearable.view.CrossfadeDrawable.getIntrinsicWidth () "," no description <br /><br />"
"android.support.wearable.view.CrossfadeDrawable.setAlpha (int alpha) "," no description <br /><br />"
"android.support.wearable.view.CrossfadeDrawable.setColorFilter (int color, PorterDuff.Mode mode) "," no description <br /><br />"
"android.support.wearable.view.CrossfadeDrawable.isStateful () "," no description <br /><br />"
"android.support.wearable.view.CrossfadeDrawable.setFading (Drawable d) "," Sets the image for the fading layer. <br /><br />"
"android.support.wearable.view.CrossfadeDrawable.getIntrinsicHeight () "," no description <br /><br />"
"android.support.wearable.view.CrossfadeDrawable.invalidateDrawable (Drawable who) "," no description <br /><br />"
"android.support.wearable.view.CrossfadeDrawable.jumpToCurrentState () "," no description <br /><br />"
"android.support.wearable.view.CrossfadeDrawable.scheduleDrawable (Drawable who, Runnable what, long when) "," no description <br /><br />"
"android.support.wearable.view.CrossfadeDrawable.unscheduleDrawable (Drawable who, Runnable what) "," no description <br /><br />"
"android.support.wearable.view.CrossfadeDrawable.setDither (boolean dither) "," no description <br /><br />"
"android.support.wearable.view.CrossfadeDrawable.clearColorFilter () "," no description <br /><br />"
"android.support.wearable.view.CrossfadeDrawable.setFilterBitmap (boolean filter) "," no description <br /><br />"
"android.support.wearable.view.CrossfadeDrawable.setChangingConfigurations (int configs) "," no description <br /><br />"
"android.support.wearable.view.CrossfadeDrawable.setProgress (float progress) "," no description <br /><br />"
"android.support.wearable.view.CrossfadeDrawable.draw (Canvas canvas) "," no description <br /><br />"
"android.support.wearable.view.CrossfadeDrawable.setBase (Drawable d) "," Sets the image for the base layer. <br /><br />"
"android.support.wearable.view.CrossfadeDrawable.getAlpha () "," no description <br /><br />"
"android.support.wearable.view.DelayedConfirmationView.DelayedConfirmationListener.onTimerSelected (View v) "," Called when the user selects the timer. <br /><br />"
"android.support.wearable.view.DelayedConfirmationView.DelayedConfirmationListener.onTimerFinished (View v) "," Called when the timer is finished. <br /><br />"
"android.support.wearable.view.DelayedConfirmationView.setListener (DelayedConfirmationView.DelayedConfirmationListener listener) "," Sets a listener to get callbacks for when the timer finishes or cancelled. <br /><br />"
"android.support.wearable.view.DelayedConfirmationView.start () "," Starts the timer countdown. <br /><br />"
"android.support.wearable.view.DelayedConfirmationView.setTotalTimeMs (long time) "," Sets the total time in milliseconds for the Timer to countdown to. <br /><br />"
"android.support.wearable.view.DelayedConfirmationView.onTouchEvent (MotionEvent event) "," no description <br /><br />"
"android.support.wearable.view.DelayedConfirmationView.reset () "," Resets the timer. <br /><br />"
"android.support.wearable.view.DelayedConfirmationView.setStartTimeMs (long time) "," Artificially sets the start time in milliseconds for the Timer to countdown from. <br /><br />"
"android.support.wearable.view.DismissOverlayView.setIntroText (CharSequence str) "," Set the intro text. <br /><br />"
"android.support.wearable.view.DismissOverlayView.show () "," Show the exit button. <br /><br />"
"android.support.wearable.view.DismissOverlayView.showIntroIfNecessary () "," Displays the intro overlay over your app if necessary. <br /><br />"
"android.support.wearable.view.DismissOverlayView.performClick () "," no description <br /><br />"
"android.support.wearable.view.DismissOverlayView.setIntroText (int textResId) "," Set the intro text. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.setDotRadiusSelected (int radius) "," Sets the radius of the page dot for the selected page. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.setDotFadeWhenIdle (boolean fade) "," Sets whether the dots fade out when the pager is idle. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.getDotFadeInDuration () "," Returns the duration of the fade in duration, in milliseconds. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.setDotRadius (int radius) "," Sets the radius of the page dots. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.setPager (GridViewPager pager) "," Supplies the GridViewPager instance, and attaches this views GridViewPager.OnPageChangeListener and GridViewPager.OnAdapterChangeListener listeners to the pager. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.setDotFadeInDuration (int duration, TimeUnit unit) "," Sets the duration of the fade in animation. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.getDotColorSelected () "," Returns the color of the dot for the selected page. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.onPageScrolled (int row, int column, float rowOffset, float columnOffset, int rowOffsetPixels, int columnOffsetPixels) "," This method will be invoked when the current page is scrolled, either as part of a programmatically initiated smooth scroll or a user initiated touch scroll. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.setDotShadowDx (float dx) "," Sets the horizontal offset of shadows drawn beneath the dots. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.setDotFadeOutDelay (int delay) "," Sets the delay between the pager arriving at an idle state, and the fade out animation beginning, in milliseconds. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.setDotShadowColor (int color) "," Sets the color of the shadows drawn beneath the dots. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.getDotShadowDy () "," Returns the vertical offset of shadows drawn beneath the dots. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.onPageSelected (int row, int column) "," This method is called when a new page becomes selected. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.onAdapterChanged (GridPagerAdapter oldAdapter, GridPagerAdapter newAdapter)   Called when the adapter is changed with setAdapter (GridPagerAdapter) "," Called when the adapter is changed with setAdapter(GridPagerAdapter). <br /><br />"
"android.support.wearable.view.DotsPageIndicator.getDotShadowDx () "," Returns the horizontal offset of shadows drawn beneath the dots. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.onDataSetChanged () "," Called when a change is made to the content of the current adapter. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.getDotRadius () "," Gets the radius of the page dots. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.setDotShadowRadius (float radius) "," Sets the pixel radius of shadows drawn beneath the dots. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.getDotFadeOutDuration () "," Returns the duration of fade out animation, in milliseconds. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.getDotColor () "," Returns the color used for dots other than the selected page. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.setDotSpacing (int spacing) "," Sets the center-to-center distance between page dots. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.getDotShadowRadius () "," Sets the pixel radius of shadows drawn beneath the dots. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.setDotColorSelected (int color) "," Sets the color of the dot for the selected page. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.onPageScrollStateChanged (int state) "," Called when the scroll state changes. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.setDotFadeOutDuration (int duration, TimeUnit unit) "," Sets the duration of the fade out animation. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.getDotShadowColor () "," Returns the color of the shadows drawn beneath the dots. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.setDotColor (int color) "," Sets the color used for dots other than the selected page. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.setOnPageChangeListener (GridViewPager.OnPageChangeListener listener) "," Sets a listener to receive the page change events that are provided to the page indicator. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.getDotRadiusSelected () "," Gets the radius of the page dot for the selected page. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.getDotSpacing () "," Gets the center-to-center distance between page dots. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.getDotFadeWhenIdle () "," Indicates if the dots fade out when the pager is idle. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.getDotFadeOutDelay () "," Sets the delay between the pager arriving at an idle state, and the fade out animation beginning, in milliseconds. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.setDotShadowDy (float dy) "," Sets the vertical offset of shadows drawn beneath the dots. <br /><br />"
"android.support.wearable.view.DotsPageIndicator.setOnAdapterChangeListener (GridViewPager.OnAdapterChangeListener listener) "," Sets a listener to receive the adapter change events that are provided to the page indicator. <br /><br />"
"android.support.wearable.view.FragmentGridPagerAdapter.getFragment (int row, int column) "," Returns the Fragment at the specified row number and column number. <br /><br />"
"android.support.wearable.view.FragmentGridPagerAdapter.isViewFromObject (View view, Object object)   Determines whether a page View is associated with a specific key object as returned by instantiateItem (ViewGroup, int, int) "," Determines whether a page View is associated with a specific key object as returned by instantiateItem(ViewGroup, int, int). <br /><br />"
"android.support.wearable.view.FragmentGridPagerAdapter.getBackgroundForPage (int row, int column) "," Provides content to be displayed as the background for a specific page. <br /><br />"
"android.support.wearable.view.GridPageOptions.BackgroundListener.notifyBackgroundChanged () "," Notifies the container about a change to the background. <br /><br />"
"android.support.wearable.view.GridPagerAdapter.unregisterDataSetObserver (DataSetObserver observer) "," Unregister an observer from callbacks related to the adapter's data changing. <br /><br />"
"android.support.wearable.view.GridPagerAdapter.restoreState (Parcelable savedState, ClassLoader classLoader) "," Restores the previously saved state of this adapter. <br /><br />"
"android.support.wearable.view.GridPagerAdapter.saveState () "," Saves the current state of this adapter. <br /><br />"
"android.support.wearable.view.GridPagerAdapter.registerDataSetObserver (DataSetObserver observer) "," Register an observer to receive callbacks related to the adapter's data changing. <br /><br />"
"android.support.wearable.view.GridPagerAdapter.getColumnCount (int row) "," Returns the maximum number of columns for each row. <br /><br />"
"android.support.wearable.view.GridPagerAdapter.isViewFromObject (View view, Object object)   Determines whether a page View is associated with a specific key object as returned by instantiateItem (ViewGroup, int, int) "," Determines whether a page View is associated with a specific key object as returned by instantiateItem(ViewGroup, int, int). <br /><br />"
"android.support.wearable.view.GridPagerAdapter.notifyRowBackgroundChanged (int row)   This method should be called if the value returned by getBackgroundForRow (int) "," This method should be called if the value returned by getBackgroundForRow(int) changes. <br /><br />"
"android.support.wearable.view.GridPagerAdapter.getBackgroundForPage (int row, int column) "," Provides content to be displayed as background for a specific page. <br /><br />"
"android.support.wearable.view.GridPagerAdapter.getCurrentColumnForRow (int row, int currentColumn) "," Returns the column to arrive at when navigating vertically to the specified row. <br /><br />"
"android.support.wearable.view.GridPagerAdapter.getBackgroundForRow (int row) "," Provides content to be displayed as the default background for all pages on the given row. <br /><br />"
"android.support.wearable.view.GridPagerAdapter.getOptionsForPage (int row, int column) "," Provides a set of features to apply to a page background. <br /><br />"
"android.support.wearable.view.GridPagerAdapter.notifyPageBackgroundChanged (int row, int column)   This method should be called if the value returned by getBackgroundForPage (int, int) or options returned by getOptionsForPage (int, int) "," This method should be called if the value returned by getBackgroundForPage(int, int) or options returned by getOptionsForPage(int, int) change. <br /><br />"
"android.support.wearable.view.GridPagerAdapter.getItemPosition (Object object) "," Called when the host view is attempting to determine if an item's position has changed. <br /><br />"
"android.support.wearable.view.GridPagerAdapter.getRowCount () "," Returns the number of rows available. <br /><br />"
"android.support.wearable.view.GridPagerAdapter.notifyDataSetChanged () "," This method should be called by the application if the data backing this adapter has changed and associated views should update. <br /><br />"
"android.support.wearable.view.GridViewPager.addView (View child, int index, ViewGroup.LayoutParams params) "," no description <br /><br />"
"android.support.wearable.view.GridViewPager.getOffscreenPageCount () "," Returns the number of pages that will be retained on the sides of the current page in the view hierarchy in an idle state. <br /><br />"
"android.support.wearable.view.GridViewPager.dispatchApplyWindowInsets (WindowInsets insets) "," no description <br /><br />"
"android.support.wearable.view.GridViewPager.canScrollVertically (int direction) "," no description <br /><br />"
"android.support.wearable.view.GridViewPager.setOnApplyWindowInsetsListener (View.OnApplyWindowInsetsListener listener) "," no description <br /><br />"
"android.support.wearable.view.GridViewPager.onSaveInstanceState () "," no description <br /><br />"
"android.support.wearable.view.GridViewPager.canScrollHorizontally (int direction) "," no description <br /><br />"
"android.support.wearable.view.GridViewPager.onRestoreInstanceState (Parcelable state) "," no description <br /><br />"
"android.support.wearable.view.GridViewPager.removeView (View view) "," no description <br /><br />"
"android.support.wearable.view.GridViewPager.onAttachedToWindow () "," no description <br /><br />"
"android.support.wearable.view.GridViewPager.setPageMargins (int rowMarginPx, int columnMarginPx) "," Sets the margin between pages. <br /><br />"
"android.support.wearable.view.GridViewPager.setAdapter (GridPagerAdapter adapter) "," Assigns an adapter to provide the content for this pager. <br /><br />"
"android.support.wearable.view.GridViewPager.getCurrentItem () "," no description <br /><br />"
"android.support.wearable.view.GridViewPager.setOffscreenPageCount (int limit) "," Set the number of pages that should be retained to either side of the current page in the view hierarchy in an idle state. <br /><br />"
"android.support.wearable.view.GridViewPager.dispatchKeyEvent (KeyEvent event) "," no description <br /><br />"
"android.support.wearable.view.GridViewPager.requestFitSystemWindows () "," no description <br /><br />"
"android.support.wearable.view.GridViewPager.getPageColumnMargin () "," Return the margin between columns of pages. <br /><br />"
"android.support.wearable.view.GridViewPager.scrollTo (int x, int y) "," no description <br /><br />"
"android.support.wearable.view.GridViewPager.setOnPageChangeListener (GridViewPager.OnPageChangeListener listener) "," Set a listener that will be invoked whenever the page changes or is incrementally scrolled. <br /><br />"
"android.support.wearable.view.GridViewPager.computeScroll () "," no description <br /><br />"
"android.support.wearable.view.GridViewPager.onApplyWindowInsets (WindowInsets insets) "," no description <br /><br />"
"android.support.wearable.view.GridViewPager.generateLayoutParams (AttributeSet attrs) "," no description <br /><br />"
"android.support.wearable.view.GridViewPager.getAdapter () "," no description <br /><br />"
"android.support.wearable.view.GridViewPager.getPageRowMargin () "," Returns the margin between rows of pages. <br /><br />"
"android.support.wearable.view.GridViewPager.onInterceptTouchEvent (MotionEvent ev) "," no description <br /><br />"
"android.support.wearable.view.GridViewPager.onTouchEvent (MotionEvent ev) "," no description <br /><br />"
"android.support.wearable.view.GridViewPager.setOnAdapterChangeListener (GridViewPager.OnAdapterChangeListener listener) "," Set a listener that will be invoked whenever the adapter is changed. <br /><br />"
"android.support.wearable.view.GridViewPager.OnAdapterChangeListener.onAdapterChanged (GridPagerAdapter oldAdapter, GridPagerAdapter newAdapter)   Called when the adapter is changed with setAdapter (GridPagerAdapter) "," Called when the adapter is changed with setAdapter(GridPagerAdapter). <br /><br />"
"android.support.wearable.view.GridViewPager.OnAdapterChangeListener.onDataSetChanged () "," Called when a change is made to the content of the current adapter. <br /><br />"
"android.support.wearable.view.GridViewPager.OnPageChangeListener.onPageSelected (int row, int column) "," This method is called when a new page becomes selected. <br /><br />"
"android.support.wearable.view.GridViewPager.OnPageChangeListener.onPageScrollStateChanged (int state) "," Called when the scroll state changes. <br /><br />"
"android.support.wearable.view.GridViewPager.OnPageChangeListener.onPageScrolled (int row, int column, float rowOffset, float columnOffset, int rowOffsetPixels, int columnOffsetPixels) "," This method will be invoked when the current page is scrolled, either as part of a programmatically initiated smooth scroll or a user initiated touch scroll. <br /><br />"
"android.support.wearable.view.SimpleAnimatorListener.onAnimationEnd (Animator animator) "," no description <br /><br />"
"android.support.wearable.view.SimpleAnimatorListener.onAnimationComplete (Animator animator) "," Called when the animation finishes. <br /><br />"
"android.support.wearable.view.SimpleAnimatorListener.wasCanceled () "," Provides information if the animation was cancelled. <br /><br />"
"android.support.wearable.view.SimpleAnimatorListener.onAnimationStart (Animator animator) "," no description <br /><br />"
"android.support.wearable.view.SimpleAnimatorListener.onAnimationCancel (Animator animator) "," no description <br /><br />"
"android.support.wearable.view.SimpleAnimatorListener.onAnimationRepeat (Animator animator) "," no description <br /><br />"
"android.support.wearable.view.WatchViewStub.setOnLayoutInflatedListener (WatchViewStub.OnLayoutInflatedListener listener) "," Set a listener to be notified when one of the specified sub-layouts is inflated into this stub container. <br /><br />"
"android.support.wearable.view.WatchViewStub.inflate () "," Inflate the appropriate child layout for the last known container. <br /><br />"
"android.support.wearable.view.WatchViewStub.onApplyWindowInsets (WindowInsets insets) "," no description <br /><br />"
"android.support.wearable.view.WatchViewStub.setRoundLayout (int resId) "," Set a layout resource to be inflated when this stub is within a round container. <br /><br />"
"android.support.wearable.view.WatchViewStub.onMeasure (int widthMeasureSpec, int heightMeasureSpec) "," no description <br /><br />"
"android.support.wearable.view.WatchViewStub.setRectLayout (int resId) "," Set a layout resource to be inflated when this stub is within a rectangular container. <br /><br />"
"android.support.wearable.view.WatchViewStub.OnLayoutInflatedListener.onLayoutInflated (WatchViewStub stub) "," no description <br /><br />"
"android.support.wearable.view.WearableListView.ClickListener.onClick (WearableListView.ViewHolder view) "," Called when the central child of the WearableListView is tapped. <br /><br />"
"android.support.wearable.view.WearableListView.ClickListener.onTopEmptyRegionClick () "," Called when the user taps the top third of the WearableListView and no item is present there. <br /><br />"
"android.support.wearable.view.WearableListView.resetLayoutManager () "," Clears the state of the layout manager that positions list items. <br /><br />"
"android.support.wearable.view.WearableListView.addOnScrollListener (WearableListView.OnScrollListener listener) "," Adds a listener that will be called when the content of the list view is scrolled. <br /><br />"
"android.support.wearable.view.WearableListView.setAdapter (Adapter adapter) "," no description <br /><br />"
"android.support.wearable.view.WearableListView.onInterceptTouchEvent (MotionEvent event) "," no description <br /><br />"
"android.support.wearable.view.WearableListView.getChildViewHolder (View child) "," no description <br /><br />"
"android.support.wearable.view.WearableListView.setClickListener (WearableListView.ClickListener clickListener) "," Adds a listener that will be called when the user taps on the WearableListView or its items. <br /><br />"
"android.support.wearable.view.WearableListView.fling (int velocityX, int velocityY) "," no description <br /><br />"
"android.support.wearable.view.WearableListView.removeOnScrollListener (WearableListView.OnScrollListener listener) "," Removes listener for scroll events. <br /><br />"
"android.support.wearable.view.WearableListView.onTouchEvent (MotionEvent event) "," no description <br /><br />"
"android.support.wearable.view.WearableListView.animateToCenter () "," Automatically starts an animation that snaps the list to center on the element closest to the middle. <br /><br />"
"android.support.wearable.view.WearableListView.setInitialOffset (int top) "," By default the first element of the list is initially positioned in the center of the screen. <br /><br />"
"android.support.wearable.view.WearableListView.setGreedyTouchMode (boolean greedy) "," Controls whether WearableListView should intercept all touch events and also prevent the parent from receiving them. <br /><br />"
"android.support.wearable.view.WearableListView.OnCenterProximityListener.onCenterPosition (boolean animate) "," Called when this view becomes central item of the WearableListView. <br /><br />"
"android.support.wearable.view.WearableListView.OnCenterProximityListener.onNonCenterPosition (boolean animate) "," Called when this view stops being the central item of the WearableListView. <br /><br />"
"android.support.wearable.view.WearableListView.OnScrollListener.onCentralPositionChanged (int centralPosition) "," Called when the central item of the WearableListView changes. <br /><br />"
"android.support.wearable.view.WearableListView.OnScrollListener.onAbsoluteScrollChange (int scroll) "," Called when the content is scrolled, reporting the absolute scroll value. <br /><br />"
"android.support.wearable.view.WearableListView.OnScrollListener.onScrollStateChanged (int scrollState) "," Called when WearableListView's scroll state changes. <br /><br />"
"android.support.wearable.view.WearableListView.OnScrollListener.onScroll (int scroll) "," Called when the content is scrolled, reporting the relative scroll value. <br /><br />"
"android.support.wearable.watchface.CanvasWatchFaceService.Engine.invalidate ()   Schedules a call to onDraw (Canvas, Rect) "," Schedules a call to onDraw(Canvas, Rect) to draw the next frame. <br /><br />"
"android.support.wearable.watchface.CanvasWatchFaceService.Engine.onSurfaceChanged (SurfaceHolder holder, int format, int width, int height) "," no description <br /><br />"
"android.support.wearable.watchface.CanvasWatchFaceService.Engine.onDraw (Canvas canvas, Rect bounds) "," Draws the watch face. <br /><br />"
"android.support.wearable.watchface.CanvasWatchFaceService.Engine.postInvalidate ()   Posts a message to schedule a call to onDraw (Canvas, Rect) "," Posts a message to schedule a call to onDraw(Canvas, Rect) to draw the next frame. <br /><br />"
"android.support.wearable.watchface.CanvasWatchFaceService.Engine.onSurfaceCreated (SurfaceHolder holder) "," no description <br /><br />"
"android.support.wearable.watchface.CanvasWatchFaceService.Engine.onDestroy () "," no description <br /><br />"
"android.support.wearable.watchface.CanvasWatchFaceService.Engine.onSurfaceRedrawNeeded (SurfaceHolder holder) "," no description <br /><br />"
"android.support.wearable.watchface.CanvasWatchFaceService.onCreateEngine () "," no description <br /><br />"
"android.support.wearable.watchface.Gles2WatchFaceService.Engine.onSurfaceChanged (SurfaceHolder holder, int format, int width, int height) "," no description <br /><br />"
"android.support.wearable.watchface.Gles2WatchFaceService.Engine.onApplyWindowInsets (WindowInsets insets) "," no description <br /><br />"
"android.support.wearable.watchface.Gles2WatchFaceService.Engine.postInvalidate ()   Posts a message to schedule a call to onDraw () "," Posts a message to schedule a call to onDraw() to draw the next frame. <br /><br />"
"android.support.wearable.watchface.Gles2WatchFaceService.Engine.onGlSurfaceCreated (int width, int height) "," Called when a new GL surface is created. <br /><br />"
"android.support.wearable.watchface.Gles2WatchFaceService.Engine.onGlContextCreated () "," Called when a new GL context is created. <br /><br />"
"android.support.wearable.watchface.Gles2WatchFaceService.Engine.onCreate (SurfaceHolder surfaceHolder) "," no description <br /><br />"
"android.support.wearable.watchface.Gles2WatchFaceService.Engine.onDestroy () "," no description <br /><br />"
"android.support.wearable.watchface.Gles2WatchFaceService.Engine.invalidate ()   Schedules a call to onDraw () "," Schedules a call to onDraw() to draw the next frame. <br /><br />"
"android.support.wearable.watchface.Gles2WatchFaceService.Engine.onDraw () "," Draws the watch face. <br /><br />"
"android.support.wearable.watchface.Gles2WatchFaceService.Engine.onSurfaceDestroyed (SurfaceHolder holder) "," no description <br /><br />"
"android.support.wearable.watchface.Gles2WatchFaceService.Engine.onSurfaceRedrawNeeded (SurfaceHolder holder) "," no description <br /><br />"
"android.support.wearable.watchface.Gles2WatchFaceService.onCreateEngine () "," no description <br /><br />"
"android.support.wearable.watchface.WatchFaceService.Engine.onInterruptionFilterChanged (int interruptionFilter) "," Called when the user changes interruption filter. <br /><br />"
"android.support.wearable.watchface.WatchFaceService.Engine.onCommand (String action, int x, int y, int z, Bundle extras, boolean resultRequested) "," no description <br /><br />"
"android.support.wearable.watchface.WatchFaceService.Engine.onCreate (SurfaceHolder holder) "," no description <br /><br />"
"android.support.wearable.watchface.WatchFaceService.Engine.getInterruptionFilter () "," Returns interruption filter selected by the user. <br /><br />"
"android.support.wearable.watchface.WatchFaceService.Engine.getPeekCardPosition () "," Returns the location of the first peeking card. <br /><br />"
"android.support.wearable.watchface.WatchFaceService.Engine.onPropertiesChanged (Bundle properties) "," Called when the properties of the device are determined. <br /><br />"
"android.support.wearable.watchface.WatchFaceService.Engine.getUnreadCount () "," Returns the number of unread notification cards in the stream. <br /><br />"
"android.support.wearable.watchface.WatchFaceService.Engine.setWatchFaceStyle (WatchFaceStyle watchFaceStyle) "," Sets the watch face style. <br /><br />"
"android.support.wearable.watchface.WatchFaceService.Engine.onTimeTick () "," Called periodically in ambient mode to update the time shown by the watch face. <br /><br />"
"android.support.wearable.watchface.WatchFaceService.Engine.onVisibilityChanged (boolean visible) "," Called to inform you of the watch face becoming visible or hidden. <br /><br />"
"android.support.wearable.watchface.WatchFaceService.Engine.isInAmbientMode () "," Returns whether the watch face is in ambient mode. <br /><br />"
"android.support.wearable.watchface.WatchFaceService.Engine.onAmbientModeChanged (boolean inAmbientMode) "," Called when the device enters or exits ambient mode. <br /><br />"
"android.support.wearable.watchface.WatchFaceService.Engine.onPeekCardPositionUpdate (Rect rect) "," Called when the first, peeking card positions itself on the screen. <br /><br />"
"android.support.wearable.watchface.WatchFaceService.Engine.onUnreadCountChanged (int count) "," Called when the number of unread notification cards in the stream has changed. <br /><br />"
"android.support.wearable.watchface.WatchFaceService.onCreateEngine () "," no description <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.Builder.setShowUnreadCountIndicator (boolean show) "," Sets whether to add an indicator of how many unread cards there are in the stream. <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.Builder.setViewProtection (int viewProtection) "," Adds background color to UI elements of the home screen, so they are readable on the watch face. <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.Builder.setStatusBarGravity (int statusBarGravity)   Sets position of status icons  (battery state, lack of connection) "," Sets position of status icons (battery state, lack of connection) on the screen. <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.Builder.setPeekOpacityMode (int peekOpacityMode) "," Sets whether the first, peeking card should be opaque when the watch face is displayed. <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.Builder.setAmbientPeekMode (int ambientPeekMode) "," Sets how the first, peeking card will be displayed while the watch is in ambient, black & white mode. <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.Builder.setShowSystemUiTime (boolean showSystemUiTime) "," Sets if the system will draw the system-style time over the watch face. <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.Builder.setCardPeekMode (int peekMode) "," Sets how far into the screen the first card will peek while the watch face is displayed. <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.Builder.build () "," Constructs read only WatchFaceStyle object. <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.Builder.setHotwordIndicatorGravity (int hotwordIndicatorGravity)   Sets position of hotword  (OK Google) "," Sets position of hotword (OK Google) on the screen. <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.Builder.setBackgroundVisibility (int backgroundVisibility) "," Set how to display background of the first, peeking card. <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.getHotwordIndicatorGravity ()   Controls position of hotword  (OK Google) "," Controls position of hotword (OK Google) on the screen. <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.writeToParcel (Parcel parcel, int flags) "," no description <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.getShowUnreadCountIndicator () "," Whether to add an indicator of how many unread cards there are in the stream. <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.getAmbientPeekMode () "," Controls how the first, peeking card will be displayed while the watch is in ambient, black & white mode. <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.getComponent () "," The component of the watch face activity whose style is being specified. <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.getShowSystemUiTime () "," If true, the system will draw the system-style time over the watch face. <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.describeContents () "," no description <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.getStatusBarGravity ()   Controls position of status icons  (battery state, lack of connection) "," Controls position of status icons (battery state, lack of connection) on the screen. <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.toString () "," no description <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.getBackgroundVisibility () "," Controls displaying background of the first, peeking card. <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.hashCode () "," no description <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.getCardPeekMode () "," Controls how far into the screen the first card will peek while the watch face is displayed. <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.getViewProtectionMode () "," Allows adding background color to UI elements of the home screen, so they are readable on the watch face. <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.getPeekOpacityMode () "," Controls whether the first, peeking card should be opaque when the watch face is displayed. <br /><br />"
"android.support.wearable.watchface.WatchFaceStyle.equals (Object otherObj) "," no description <br /><br />"
"android.system.ErrnoException.getMessage () "," Converts the stashed function name and errno value to a human-readable string. <br /><br />"
"android.system.Os.pread (FileDescriptor fd, byte[] bytes, int byteOffset, int byteCount, long offset)   See pread (2) "," See pread(2). <br /><br />"
"android.system.Os.dup2 (FileDescriptor oldFd, int newFd)   See dup2 (2) "," See dup2(2). <br /><br />"
"android.system.Os.isatty (FileDescriptor fd)   See isatty (3) "," See isatty(3). <br /><br />"
"android.system.Os.mkdir (String path, int mode)   See mkdir (2) "," See mkdir(2). <br /><br />"
"android.system.Os.setsid ()   See setsid (2) "," See setsid(2). <br /><br />"
"android.system.Os.ftruncate (FileDescriptor fd, long length)   See ftruncate (2) "," See ftruncate(2). <br /><br />"
"android.system.Os.close (FileDescriptor fd)   See close (2) "," See close(2). <br /><br />"
"android.system.Os.lstat (String path)   See lstat (2) "," See lstat(2). <br /><br />"
"android.system.Os.lchown (String path, int uid, int gid)   See lchown (2) "," See lchown(2). <br /><br />"
"android.system.Os.socket (int domain, int type, int protocol)   See socket (2) "," See socket(2). <br /><br />"
"android.system.Os.rename (String oldPath, String newPath)   See rename (2) "," See rename(2). <br /><br />"
"android.system.Os.fsync (FileDescriptor fd)   See fsync (2) "," See fsync(2). <br /><br />"
"android.system.Os.lseek (FileDescriptor fd, long offset, int whence)   See lseek (2) "," See lseek(2). <br /><br />"
"android.system.Os.readv (FileDescriptor fd, Object[] buffers, int[] offsets, int[] byteCounts)   See readv (2) "," See readv(2). <br /><br />"
"android.system.Os.poll (StructPollfd[] fds, int timeoutMs)   See poll (2) "," See poll(2). <br /><br />"
"android.system.Os.connect (FileDescriptor fd, InetAddress address, int port)   See connect (2) "," See connect(2). <br /><br />"
"android.system.Os.open (String path, int flags, int mode)   See open (2) "," See open(2). <br /><br />"
"android.system.Os.getsockname (FileDescriptor fd)   See getsockname (2) "," See getsockname(2). <br /><br />"
"android.system.Os.getpid ()   See getpid (2) "," See getpid(2). <br /><br />"
"android.system.Os.getppid ()   See getppid (2) "," See getppid(2). <br /><br />"
"android.system.Os.environ ()   See environ (3) "," See environ(3). <br /><br />"
"android.system.Os.mincore (long address, long byteCount, byte[] vector)   See mincore (2) "," See mincore(2). <br /><br />"
"android.system.Os.getgid ()   See getgid (2) "," See getgid(2). <br /><br />"
"android.system.Os.recvfrom (FileDescriptor fd, byte[] bytes, int byteOffset, int byteCount, int flags, InetSocketAddress srcAddress)   See recvfrom (2) "," See recvfrom(2). <br /><br />"
"android.system.Os.fstat (FileDescriptor fd)   See fstat (2) "," See fstat(2). <br /><br />"
"android.system.Os.sendto (FileDescriptor fd, byte[] bytes, int byteOffset, int byteCount, int flags, InetAddress inetAddress, int port)   See sendto (2) "," See sendto(2). <br /><br />"
"android.system.Os.gai_strerror (int error)   See gai_strerror (3) "," See gai_strerror(3). <br /><br />"
"android.system.Os.sendto (FileDescriptor fd, ByteBuffer buffer, int flags, InetAddress inetAddress, int port)   See sendto (2) "," See sendto(2). <br /><br />"
"android.system.Os.uname ()   See uname (2) "," See uname(2). <br /><br />"
"android.system.Os.socketpair (int domain, int type, int protocol, FileDescriptor fd1, FileDescriptor fd2)   See socketpair (2) "," See socketpair(2). <br /><br />"
"android.system.Os.fstatvfs (FileDescriptor fd)   See fstatvfs (2) "," See fstatvfs(2). <br /><br />"
"android.system.Os.execv (String filename, String[] argv)   See execv (2) "," See execv(2). <br /><br />"
"android.system.Os.setegid (int egid)   See setegid (2) "," See setegid(2). <br /><br />"
"android.system.Os.symlink (String oldPath, String newPath)   See symlink (2) "," See symlink(2). <br /><br />"
"android.system.Os.chown (String path, int uid, int gid)   See chown (2) "," See chown(2). <br /><br />"
"android.system.Os.tcdrain (FileDescriptor fd)   See tcdrain (3) "," See tcdrain(3). <br /><br />"
"android.system.Os.mkfifo (String path, int mode)   See mkfifo (3) "," See mkfifo(3). <br /><br />"
"android.system.Os.write (FileDescriptor fd, ByteBuffer buffer)   See write (2) "," See write(2). <br /><br />"
"android.system.Os.write (FileDescriptor fd, byte[] bytes, int byteOffset, int byteCount)   See write (2) "," See write(2). <br /><br />"
"android.system.Os.strsignal (int signal)   See strsignal (3) "," See strsignal(3). <br /><br />"
"android.system.Os.pipe ()   See pipe (2) "," See pipe(2). <br /><br />"
"android.system.Os.setgid (int gid)   See setgid (2) "," See setgid(2). <br /><br />"
"android.system.Os.inet_pton (int family, String address)   See inet_pton (3) "," See inet_pton(3). <br /><br />"
"android.system.Os.umask (int mask)   See umask (2) "," See umask(2). <br /><br />"
"android.system.Os.chmod (String path, int mode)   See chmod (2) "," See chmod(2). <br /><br />"
"android.system.Os.msync (long address, long byteCount, int flags)   See msync (2) "," See msync(2). <br /><br />"
"android.system.Os.accept (FileDescriptor fd, InetSocketAddress peerAddress)   See accept (2) "," See accept(2). <br /><br />"
"android.system.Os.pread (FileDescriptor fd, ByteBuffer buffer, long offset)   See pread (2) "," See pread(2). <br /><br />"
"android.system.Os.fchmod (FileDescriptor fd, int mode)   See fchmod (2) "," See fchmod(2). <br /><br />"
"android.system.Os.statvfs (String path)   See statvfs (2) "," See statvfs(2). <br /><br />"
"android.system.Os.pwrite (FileDescriptor fd, ByteBuffer buffer, long offset)   See pwrite (2) "," See pwrite(2). <br /><br />"
"android.system.Os.access (String path, int mode)   See access (2) "," See access(2). <br /><br />"
"android.system.Os.shutdown (FileDescriptor fd, int how)   See shutdown (2) "," See shutdown(2). <br /><br />"
"android.system.Os.dup (FileDescriptor oldFd)   See dup (2) "," See dup(2). <br /><br />"
"android.system.Os.gettid ()   See gettid (2) "," See gettid(2). <br /><br />"
"android.system.Os.setenv (String name, String value, boolean overwrite)   See setenv (3) "," See setenv(3). <br /><br />"
"android.system.Os.unsetenv (String name)   See unsetenv (3) "," See unsetenv(3). <br /><br />"
"android.system.Os.stat (String path)   See stat (2) "," See stat(2). <br /><br />"
"android.system.Os.geteuid ()   See geteuid (2) "," See geteuid(2). <br /><br />"
"android.system.Os.fdatasync (FileDescriptor fd)   See fdatasync (2) "," See fdatasync(2). <br /><br />"
"android.system.Os.read (FileDescriptor fd, byte[] bytes, int byteOffset, int byteCount)   See read (2) "," See read(2). <br /><br />"
"android.system.Os.link (String oldPath, String newPath)   See link (2) "," See link(2). <br /><br />"
"android.system.Os.pwrite (FileDescriptor fd, byte[] bytes, int byteOffset, int byteCount, long offset)   See pwrite (2) "," See pwrite(2). <br /><br />"
"android.system.Os.mmap (long address, long byteCount, int prot, int flags, FileDescriptor fd, long offset)   See mmap (2) "," See mmap(2). <br /><br />"
"android.system.Os.kill (int pid, int signal)   See kill (2) "," See kill(2). <br /><br />"
"android.system.Os.munmap (long address, long byteCount)   See munmap (2) "," See munmap(2). <br /><br />"
"android.system.Os.getegid ()   See getegid (2) "," See getegid(2). <br /><br />"
"android.system.Os.listen (FileDescriptor fd, int backlog)   See listen (2) "," See listen(2). <br /><br />"
"android.system.Os.readlink (String path)   See readlink (2) "," See readlink(2). <br /><br />"
"android.system.Os.getpeername (FileDescriptor fd)   See getpeername (2) "," See getpeername(2). <br /><br />"
"android.system.Os.fchown (FileDescriptor fd, int uid, int gid)   See fchown (2) "," See fchown(2). <br /><br />"
"android.system.Os.bind (FileDescriptor fd, InetAddress address, int port)   See bind (2) "," See bind(2). <br /><br />"
"android.system.Os.strerror (int errno)   See strerror (2) "," See strerror(2). <br /><br />"
"android.system.Os.writev (FileDescriptor fd, Object[] buffers, int[] offsets, int[] byteCounts)   See writev (2) "," See writev(2). <br /><br />"
"android.system.Os.sendfile (FileDescriptor outFd, FileDescriptor inFd, MutableLong inOffset, long byteCount)   See sendfile (2) "," See sendfile(2). <br /><br />"
"android.system.Os.tcsendbreak (FileDescriptor fd, int duration)   See tcsendbreak (3) "," See tcsendbreak(3). <br /><br />"
"android.system.Os.setuid (int uid)   See setuid (2) "," See setuid(2). <br /><br />"
"android.system.Os.sysconf (int name)   See sysconf (3) "," See sysconf(3). <br /><br />"
"android.system.Os.recvfrom (FileDescriptor fd, ByteBuffer buffer, int flags, InetSocketAddress srcAddress)   See recvfrom (2) "," See recvfrom(2). <br /><br />"
"android.system.Os.execve (String filename, String[] argv, String[] envp)   See execve (2) "," See execve(2). <br /><br />"
"android.system.Os.if_indextoname (int index)   See if_indextoname (3) "," See if_indextoname(3). <br /><br />"
"android.system.Os.seteuid (int euid)   See seteuid (2) "," See seteuid(2). <br /><br />"
"android.system.Os.mlock (long address, long byteCount)   See mlock (2) "," See mlock(2). <br /><br />"
"android.system.Os.read (FileDescriptor fd, ByteBuffer buffer)   See read (2) "," See read(2). <br /><br />"
"android.system.Os.posix_fallocate (FileDescriptor fd, long offset, long length)   See posix_fallocate (2) "," See posix_fallocate(2). <br /><br />"
"android.system.Os.prctl (int option, long arg2, long arg3, long arg4, long arg5)   See prctl (2) "," See prctl(2). <br /><br />"
"android.system.Os.munlock (long address, long byteCount)   See munlock (2) "," See munlock(2). <br /><br />"
"android.system.Os.waitpid (int pid, MutableInt status, int options)   See waitpid (2) "," See waitpid(2). <br /><br />"
"android.system.Os.remove (String path)   See remove (3) "," See remove(3). <br /><br />"
"android.system.Os.getenv (String name)   See getenv (3) "," See getenv(3). <br /><br />"
"android.system.Os.getuid ()   See getuid (2) "," See getuid(2). <br /><br />"
"android.system.OsConstants.errnoName (int errno) "," Returns the string name of an errno value. <br /><br />"
"android.system.OsConstants.gaiName (int error)   Returns the string name of a getaddrinfo (3) "," Returns the string name of a getaddrinfo(3) error value. <br /><br />"
"android.system.OsConstants.S_ISCHR (int mode) "," Tests whether the given mode is a character device. <br /><br />"
"android.system.OsConstants.S_ISLNK (int mode) "," Tests whether the given mode is a symbolic link. <br /><br />"
"android.system.OsConstants.WSTOPSIG (int status) "," Returns the signal that cause the child to stop. <br /><br />"
"android.system.OsConstants.S_ISREG (int mode) "," Tests whether the given mode is a regular file. <br /><br />"
"android.system.OsConstants.WIFSIGNALED (int status) "," Tests whether the child was terminated by a signal. <br /><br />"
"android.system.OsConstants.S_ISDIR (int mode) "," Tests whether the given mode is a directory. <br /><br />"
"android.system.OsConstants.S_ISBLK (int mode) "," Tests whether the given mode is a block device. <br /><br />"
"android.system.OsConstants.S_ISFIFO (int mode) "," Tests whether the given mode is a FIFO. <br /><br />"
"android.system.OsConstants.WCOREDUMP (int status) "," Tests whether the child dumped core. <br /><br />"
"android.system.OsConstants.WTERMSIG (int status) "," Returns the signal that caused the child to exit. <br /><br />"
"android.system.OsConstants.WIFEXITED (int status) "," Tests whether the child exited normally. <br /><br />"
"android.system.OsConstants.WEXITSTATUS (int status) "," Extracts the exit status of a child. <br /><br />"
"android.system.OsConstants.S_ISSOCK (int mode) "," Tests whether the given mode is a socket. <br /><br />"
"android.system.OsConstants.WIFSTOPPED (int status)   Tests whether the child was stopped  (not terminated) "," Tests whether the child was stopped (not terminated) by a signal. <br /><br />"
"android.system.StructPollfd.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.system.StructStat.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.system.StructStatVfs.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.system.StructUtsname.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telecom.TelecomManager.isInCall ()   Returns whether there is an ongoing phone call  (can be in dialing, ringing, active or holding states) "," Returns whether there is an ongoing phone call (can be in dialing, ringing, active or holding states). <br /><br />"
"android.telecom.TelecomManager.cancelMissedCallsNotification () "," Removes the missed-call notification if one is present. <br /><br />"
"android.telecom.TelecomManager.showInCallScreen (boolean showDialpad) "," Brings the in-call screen to the foreground if there is an ongoing call. <br /><br />"
"android.telecom.TelecomManager.handleMmi (String dialString) "," Processes the specified dial string as an MMI code. <br /><br />"
"android.telephony.cdma.CdmaCellLocation.getBaseStationLatitude () "," Latitude is a decimal number as specified in 3GPP2 C.S0005-A v6.0. <br /><br />"
"android.telephony.cdma.CdmaCellLocation.setCellLocationData (int baseStationId, int baseStationLatitude, int baseStationLongitude) "," Set the cell location data. <br /><br />"
"android.telephony.cdma.CdmaCellLocation.setCellLocationData (int baseStationId, int baseStationLatitude, int baseStationLongitude, int systemId, int networkId) "," Set the cell location data. <br /><br />"
"android.telephony.cdma.CdmaCellLocation.getBaseStationId () "," no description <br /><br />"
"android.telephony.cdma.CdmaCellLocation.getBaseStationLongitude () "," Longitude is a decimal number as specified in 3GPP2 C.S0005-A v6.0. <br /><br />"
"android.telephony.cdma.CdmaCellLocation.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telephony.cdma.CdmaCellLocation.convertQuartSecToDecDegrees (int quartSec)   Converts latitude or longitude from 0.25 seconds  (as defined in the 3GPP2 C.S0005-A v6.0 standard) "," Converts latitude or longitude from 0.25 seconds (as defined in the 3GPP2 C.S0005-A v6.0 standard) to decimal degrees <br /><br />"
"android.telephony.cdma.CdmaCellLocation.fillInNotifierBundle (Bundle bundleToFill) "," Fill the cell location data into the intent notifier Bundle based on service state <br /><br />"
"android.telephony.cdma.CdmaCellLocation.getNetworkId () "," no description <br /><br />"
"android.telephony.cdma.CdmaCellLocation.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.telephony.cdma.CdmaCellLocation.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.telephony.cdma.CdmaCellLocation.getSystemId () "," no description <br /><br />"
"android.telephony.cdma.CdmaCellLocation.setStateInvalid () "," Invalidate this object. <br /><br />"
"android.telephony.CellIdentityCdma.equals (Object other) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.telephony.CellIdentityCdma.getBasestationId () "," no description <br /><br />"
"android.telephony.CellIdentityCdma.getNetworkId () "," no description <br /><br />"
"android.telephony.CellIdentityCdma.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.telephony.CellIdentityCdma.getLongitude () "," no description <br /><br />"
"android.telephony.CellIdentityCdma.getLatitude () "," no description <br /><br />"
"android.telephony.CellIdentityCdma.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellIdentityCdma.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellIdentityCdma.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telephony.CellIdentityCdma.getSystemId () "," no description <br /><br />"
"android.telephony.CellIdentityGsm.getCid () "," no description <br /><br />"
"android.telephony.CellIdentityGsm.equals (Object other) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.telephony.CellIdentityGsm.getMcc () "," no description <br /><br />"
"android.telephony.CellIdentityGsm.getLac () "," no description <br /><br />"
"android.telephony.CellIdentityGsm.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.telephony.CellIdentityGsm.getPsc () "," no description <br /><br />"
"android.telephony.CellIdentityGsm.getMnc () "," no description <br /><br />"
"android.telephony.CellIdentityGsm.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellIdentityGsm.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellIdentityGsm.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telephony.CellIdentityLte.getTac () "," no description <br /><br />"
"android.telephony.CellIdentityLte.equals (Object other) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.telephony.CellIdentityLte.getMcc () "," no description <br /><br />"
"android.telephony.CellIdentityLte.getCi () "," no description <br /><br />"
"android.telephony.CellIdentityLte.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.telephony.CellIdentityLte.getMnc () "," no description <br /><br />"
"android.telephony.CellIdentityLte.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellIdentityLte.getPci () "," no description <br /><br />"
"android.telephony.CellIdentityLte.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellIdentityLte.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telephony.CellIdentityWcdma.getCid () "," no description <br /><br />"
"android.telephony.CellIdentityWcdma.equals (Object other) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.telephony.CellIdentityWcdma.getMcc () "," no description <br /><br />"
"android.telephony.CellIdentityWcdma.getLac () "," no description <br /><br />"
"android.telephony.CellIdentityWcdma.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.telephony.CellIdentityWcdma.getPsc () "," no description <br /><br />"
"android.telephony.CellIdentityWcdma.getMnc () "," no description <br /><br />"
"android.telephony.CellIdentityWcdma.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellIdentityWcdma.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellIdentityWcdma.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telephony.CellInfo.equals (Object other) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.telephony.CellInfo.getTimeStamp () "," Approximate time of this cell information in nanos since boot <br /><br />"
"android.telephony.CellInfo.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.telephony.CellInfo.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellInfo.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telephony.CellInfo.isRegistered () "," True if this cell is registered to the mobile network <br /><br />"
"android.telephony.CellInfoCdma.equals (Object other) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.telephony.CellInfoCdma.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.telephony.CellInfoCdma.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellInfoCdma.getCellSignalStrength () "," no description <br /><br />"
"android.telephony.CellInfoCdma.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellInfoCdma.getCellIdentity () "," no description <br /><br />"
"android.telephony.CellInfoCdma.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telephony.CellInfoGsm.equals (Object other) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.telephony.CellInfoGsm.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.telephony.CellInfoGsm.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellInfoGsm.getCellSignalStrength () "," no description <br /><br />"
"android.telephony.CellInfoGsm.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellInfoGsm.getCellIdentity () "," no description <br /><br />"
"android.telephony.CellInfoGsm.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telephony.CellInfoLte.equals (Object other) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.telephony.CellInfoLte.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.telephony.CellInfoLte.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellInfoLte.getCellSignalStrength () "," no description <br /><br />"
"android.telephony.CellInfoLte.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellInfoLte.getCellIdentity () "," no description <br /><br />"
"android.telephony.CellInfoLte.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telephony.CellInfoWcdma.equals (Object other) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.telephony.CellInfoWcdma.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.telephony.CellInfoWcdma.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellInfoWcdma.getCellSignalStrength () "," no description <br /><br />"
"android.telephony.CellInfoWcdma.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellInfoWcdma.getCellIdentity () "," no description <br /><br />"
"android.telephony.CellInfoWcdma.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telephony.CellLocation.getEmpty () "," Return a new CellLocation object representing an unknown location, or null for unknown/none phone radio types. <br /><br />"
"android.telephony.CellLocation.requestLocationUpdate () "," Request an update of the current location. <br /><br />"
"android.telephony.CellSignalStrength.getLevel () "," Get signal level as an int from 0..4 <br /><br />"
"android.telephony.CellSignalStrength.getDbm () "," Get the signal strength as dBm <br /><br />"
"android.telephony.CellSignalStrength.getAsuLevel () "," Get the signal level as an asu value between 0..31, 99 is unknown <br /><br />"
"android.telephony.CellSignalStrength.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.telephony.CellSignalStrength.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.telephony.CellSignalStrengthCdma.getDbm () "," Get the signal strength as dBm <br /><br />"
"android.telephony.CellSignalStrengthCdma.getEvdoEcio () "," Get the EVDO Ec/Io value in dB*10 <br /><br />"
"android.telephony.CellSignalStrengthCdma.getCdmaDbm () "," Get the CDMA RSSI value in dBm <br /><br />"
"android.telephony.CellSignalStrengthCdma.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellSignalStrengthCdma.getCdmaEcio () "," Get the CDMA Ec/Io value in dB*10 <br /><br />"
"android.telephony.CellSignalStrengthCdma.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telephony.CellSignalStrengthCdma.getEvdoLevel () "," Get Evdo as level 0..4 <br /><br />"
"android.telephony.CellSignalStrengthCdma.getLevel () "," Get signal level as an int from 0..4 <br /><br />"
"android.telephony.CellSignalStrengthCdma.getEvdoSnr () "," Get the signal to noise ratio. <br /><br />"
"android.telephony.CellSignalStrengthCdma.getCdmaLevel () "," Get cdma as level 0..4 <br /><br />"
"android.telephony.CellSignalStrengthCdma.getAsuLevel () "," Get the signal level as an asu value between 0..97, 99 is unknown <br /><br />"
"android.telephony.CellSignalStrengthCdma.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.telephony.CellSignalStrengthCdma.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellSignalStrengthCdma.getEvdoDbm () "," Get the EVDO RSSI value in dBm <br /><br />"
"android.telephony.CellSignalStrengthCdma.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.telephony.CellSignalStrengthGsm.getLevel () "," Get signal level as an int from 0..4 <br /><br />"
"android.telephony.CellSignalStrengthGsm.getDbm () "," Get the signal strength as dBm <br /><br />"
"android.telephony.CellSignalStrengthGsm.getAsuLevel () "," Get the signal level as an asu value between 0..31, 99 is unknown Asu is calculated based on 3GPP RSRP. <br /><br />"
"android.telephony.CellSignalStrengthGsm.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.telephony.CellSignalStrengthGsm.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellSignalStrengthGsm.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellSignalStrengthGsm.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telephony.CellSignalStrengthGsm.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.telephony.CellSignalStrengthLte.getTimingAdvance () "," Get the timing advance value for LTE. <br /><br />"
"android.telephony.CellSignalStrengthLte.getLevel () "," Get signal level as an int from 0..4 <br /><br />"
"android.telephony.CellSignalStrengthLte.getDbm () "," Get signal strength as dBm <br /><br />"
"android.telephony.CellSignalStrengthLte.getAsuLevel () "," Get the LTE signal level as an asu value between 0..97, 99 is unknown Asu is calculated based on 3GPP RSRP. <br /><br />"
"android.telephony.CellSignalStrengthLte.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.telephony.CellSignalStrengthLte.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellSignalStrengthLte.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellSignalStrengthLte.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telephony.CellSignalStrengthLte.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.telephony.CellSignalStrengthWcdma.getLevel () "," Get signal level as an int from 0..4 <br /><br />"
"android.telephony.CellSignalStrengthWcdma.getDbm () "," Get the signal strength as dBm <br /><br />"
"android.telephony.CellSignalStrengthWcdma.getAsuLevel () "," Get the signal level as an asu value between 0..31, 99 is unknown Asu is calculated based on 3GPP RSRP. <br /><br />"
"android.telephony.CellSignalStrengthWcdma.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.telephony.CellSignalStrengthWcdma.writeToParcel (Parcel dest, int flags) "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellSignalStrengthWcdma.describeContents () "," Implement the Parcelable interface <br /><br />"
"android.telephony.CellSignalStrengthWcdma.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telephony.CellSignalStrengthWcdma.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.telephony.gsm.GsmCellLocation.getCid () "," no description <br /><br />"
"android.telephony.gsm.GsmCellLocation.getLac () "," no description <br /><br />"
"android.telephony.gsm.GsmCellLocation.fillInNotifierBundle (Bundle m) "," Set intent notifier Bundle based on service state <br /><br />"
"android.telephony.gsm.GsmCellLocation.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.telephony.gsm.GsmCellLocation.getPsc () "," On a UMTS network, returns the primary scrambling code of the serving cell. <br /><br />"
"android.telephony.gsm.GsmCellLocation.setLacAndCid (int lac, int cid) "," Set the location area code and the cell id. <br /><br />"
"android.telephony.gsm.GsmCellLocation.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telephony.gsm.GsmCellLocation.setStateInvalid () "," Invalidate this object. <br /><br />"
"android.telephony.gsm.GsmCellLocation.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.telephony.gsm.SmsManager.getDefault () "," This method was deprecated in API level 4. Use android.telephony.SmsManager. <br /><br />"
"android.telephony.gsm.SmsManager.sendMultipartTextMessage (String destinationAddress, String scAddress, ArrayList< String> parts, ArrayList< PendingIntent> sentIntents, ArrayList< PendingIntent> deliveryIntents) "," This method was deprecated in API level 4. Use android.telephony.SmsManager. <br /><br />"
"android.telephony.gsm.SmsManager.sendTextMessage (String destinationAddress, String scAddress, String text, PendingIntent sentIntent, PendingIntent deliveryIntent) "," This method was deprecated in API level 4. Use android.telephony.SmsManager. <br /><br />"
"android.telephony.gsm.SmsManager.divideMessage (String text) "," This method was deprecated in API level 4. Use android.telephony.SmsManager. <br /><br />"
"android.telephony.gsm.SmsManager.sendDataMessage (String destinationAddress, String scAddress, short destinationPort, byte[] data, PendingIntent sentIntent, PendingIntent deliveryIntent) "," This method was deprecated in API level 4. Use android.telephony.SmsManager. <br /><br />"
"android.telephony.gsm.SmsMessage.isMwiDontStore () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.isCphsMwiMessage () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.isStatusReportMessage () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.getMessageBody () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.getPseudoSubject () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.getTPLayerLengthForPDU (String pdu) "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.getUserData () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.isEmail () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.calculateLength (String messageBody, boolean use7bitOnly) "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.getSubmitPdu (String scAddress, String destinationAddress, String message, boolean statusReportRequested) "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.getEmailFrom () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.getEmailBody () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.getTimestampMillis () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.isReplyPathPresent () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.getPdu () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.getMessageClass () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.createFromPdu (byte[] pdu) "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.getOriginatingAddress () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.isMWIClearMessage () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.getDisplayMessageBody () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.calculateLength (CharSequence messageBody, boolean use7bitOnly) "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.getSubmitPdu (String scAddress, String destinationAddress, short destinationPort, byte[] data, boolean statusReportRequested) "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.getServiceCenterAddress () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.getIndexOnSim () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage and getIndexOnIcc instead. <br /><br />"
"android.telephony.gsm.SmsMessage.getStatusOnSim () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage and getStatusOnIcc instead. <br /><br />"
"android.telephony.gsm.SmsMessage.getDisplayOriginatingAddress () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.getProtocolIdentifier () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.getStatus () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.isMWISetMessage () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.isReplace () "," This method was deprecated in API level 4. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.gsm.SmsMessage.SubmitPdu.toString () "," This method is deprecated. Use android.telephony.SmsMessage. <br /><br />"
"android.telephony.IccOpenLogicalChannelResponse.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.telephony.IccOpenLogicalChannelResponse.getStatus () "," no description <br /><br />"
"android.telephony.IccOpenLogicalChannelResponse.getChannel () "," no description <br /><br />"
"android.telephony.IccOpenLogicalChannelResponse.getSelectResponse () "," no description <br /><br />"
"android.telephony.IccOpenLogicalChannelResponse.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.telephony.IccOpenLogicalChannelResponse.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telephony.NeighboringCellInfo.getCid () "," no description <br /><br />"
"android.telephony.NeighboringCellInfo.setRssi (int rssi)    This method was deprecated in API level 5. initial rssi value passed as parameter to constructor NeighboringCellInfo (int, String, int) "," This method was deprecated in API level 5. initial rssi value passed as parameter to constructor NeighboringCellInfo(int, String, int) <br /><br />"
"android.telephony.NeighboringCellInfo.getRssi () "," no description <br /><br />"
"android.telephony.NeighboringCellInfo.getNetworkType () "," no description <br /><br />"
"android.telephony.NeighboringCellInfo.getLac () "," no description <br /><br />"
"android.telephony.NeighboringCellInfo.getPsc () "," no description <br /><br />"
"android.telephony.NeighboringCellInfo.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.telephony.NeighboringCellInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.telephony.NeighboringCellInfo.setCid (int cid)    This method was deprecated in API level 5. cid value passed as in location parameter passed to constructor NeighboringCellInfo (int, String, int) "," This method was deprecated in API level 5. cid value passed as in location parameter passed to constructor NeighboringCellInfo(int, String, int) <br /><br />"
"android.telephony.NeighboringCellInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telephony.PhoneNumberFormattingTextWatcher.onTextChanged (CharSequence s, int start, int before, int count) "," This method is called to notify you that, within s, the count characters beginning at start have just replaced old text that had length before. <br /><br />"
"android.telephony.PhoneNumberFormattingTextWatcher.afterTextChanged (Editable s) "," This method is called to notify you that, somewhere within s, the text has been changed. <br /><br />"
"android.telephony.PhoneNumberFormattingTextWatcher.beforeTextChanged (CharSequence s, int start, int count, int after) "," This method is called to notify you that, within s, the count characters beginning at start are about to be replaced by new text with length after. <br /><br />"
"android.telephony.PhoneNumberUtils.networkPortionToCalledPartyBCD (String s)   Note: calls extractNetworkPortion () "," Note: calls extractNetworkPortion(), so do not use for SIM EF[ADN] style records Returns null if network portion is empty. <br /><br />"
"android.telephony.PhoneNumberUtils.getStrippedReversed (String phoneNumber) "," Returns the network portion reversed. <br /><br />"
"android.telephony.PhoneNumberUtils.extractNetworkPortion (String phoneNumber)   Extracts the network address portion and canonicalizes  (filters out separators.) Network address portion is everything up to DTMF control digit separators  (pause or wait) "," Extracts the network address portion and canonicalizes (filters out separators.) Network address portion is everything up to DTMF control digit separators (pause or wait), but without non-dialable characters. <br /><br />"
"android.telephony.PhoneNumberUtils.formatNumberToE164 (String phoneNumber, String defaultCountryIso) "," Format the given phoneNumber to the E.164 representation. <br /><br />"
"android.telephony.PhoneNumberUtils.isWellFormedSmsAddress (String address) "," Return true iff the network portion of address is, as far as we can tell on the device, suitable for use as an SMS destination address. <br /><br />"
"android.telephony.PhoneNumberUtils.getNumberFromIntent (Intent intent, Context context) "," Extracts the phone number from an Intent. <br /><br />"
"android.telephony.PhoneNumberUtils.normalizeNumber (String phoneNumber) "," Normalize a phone number by removing the characters other than digits. <br /><br />"
"android.telephony.PhoneNumberUtils.formatNanpNumber (Editable text)    This method was deprecated in API level 21. Use link #formatNumber (String phoneNumber, String defaultCountryIso) "," This method was deprecated in API level 21. Use link #formatNumber(String phoneNumber, String defaultCountryIso) instead <br /><br />"
"android.telephony.PhoneNumberUtils.isISODigit (char c) "," True if c is ISO-LATIN characters 0-9 <br /><br />"
"android.telephony.PhoneNumberUtils.convertKeypadLettersToDigits (String input) "," Translates any alphabetic letters (i.e. <br /><br />"
"android.telephony.PhoneNumberUtils.networkPortionToCalledPartyBCDWithLength (String s)   Same as networkPortionToCalledPartyBCD (String) "," Same as networkPortionToCalledPartyBCD(String), but includes a one-byte length prefix. <br /><br />"
"android.telephony.PhoneNumberUtils.stripSeparators (String phoneNumber) "," Strips separators from a phone number string. <br /><br />"
"android.telephony.PhoneNumberUtils.formatNumber (String phoneNumber, String defaultCountryIso) "," Format a phone number. <br /><br />"
"android.telephony.PhoneNumberUtils.extractPostDialPortion (String phoneNumber) "," Extracts the post-dial sequence of DTMF control digits, pauses, and waits. <br /><br />"
"android.telephony.PhoneNumberUtils.isDialable (char c) "," True if c is ISO-LATIN characters 0-9, *, # , +, WILD <br /><br />"
"android.telephony.PhoneNumberUtils.replaceUnicodeDigits (String number) "," Replaces all unicode(e.g. <br /><br />"
"android.telephony.PhoneNumberUtils.isVoiceMailNumber (String number) "," isVoiceMailNumber: checks a given number against the voicemail number provided by the RIL and SIM card. <br /><br />"
"android.telephony.PhoneNumberUtils.isStartsPostDial (char c)   This any anything to the right of this char is part of the post-dial string  (eg this is PAUSE or WAIT) "," This any anything to the right of this char is part of the post-dial string (eg this is PAUSE or WAIT) <br /><br />"
"android.telephony.PhoneNumberUtils.formatNumber (String phoneNumber, String phoneNumberE164, String defaultCountryIso) "," Format the phone number only if the given number hasn't been formatted. <br /><br />"
"android.telephony.PhoneNumberUtils.formatNumber (Editable text, int defaultFormattingType)    This method was deprecated in API level 21. Use link #formatNumber (String phoneNumber, String defaultCountryIso) "," This method was deprecated in API level 21. Use link #formatNumber(String phoneNumber, String defaultCountryIso) instead <br /><br />"
"android.telephony.PhoneNumberUtils.numberToCalledPartyBCD (String number) "," Convert a dialing number to BCD byte array <br /><br />"
"android.telephony.PhoneNumberUtils.toaFromString (String s) "," Returns the TOA for the given dial string Basically, returns TOA_International if there's a + prefix <br /><br />"
"android.telephony.PhoneNumberUtils.isNonSeparator (char c) "," True if c is ISO-LATIN characters 0-9, *, # , +, WILD, WAIT, PAUSE <br /><br />"
"android.telephony.PhoneNumberUtils.formatNumber (String source)    This method was deprecated in API level 21. Use link #formatNumber (String phoneNumber, String defaultCountryIso) "," This method was deprecated in API level 21. Use link #formatNumber(String phoneNumber, String defaultCountryIso) instead <br /><br />"
"android.telephony.PhoneNumberUtils.is12Key (char c) "," True if c is ISO-LATIN characters 0-9, *, # <br /><br />"
"android.telephony.PhoneNumberUtils.calledPartyBCDToString (byte[] bytes, int offset, int length)   3GPP TS 24.008 10.5.4.7 Called Party BCD Number See Also TS 51.011 10.5.1 'dialing number/ssc string' and TS 11.11 '10.3.1 EF adn  (Abbreviated dialing numbers) "," 3GPP TS 24.008 10.5.4.7 Called Party BCD Number See Also TS 51.011 10.5.1 'dialing number/ssc string' and TS 11.11 '10.3.1 EF adn (Abbreviated dialing numbers)' <br /><br />"
"android.telephony.PhoneNumberUtils.isEmergencyNumber (String number) "," Checks a given number against the list of emergency numbers provided by the RIL and SIM card. <br /><br />"
"android.telephony.PhoneNumberUtils.compare (String a, String b) "," Compare phone numbers a and b, return true if they're identical enough for caller ID purposes. <br /><br />"
"android.telephony.PhoneNumberUtils.toCallerIDMinMatch (String phoneNumber)   Returns the rightmost MIN_MATCH  (5) characters in the network portion in *reversed* order This can be used to do a database lookup against the column that stores getStrippedReversed () "," Returns the rightmost MIN_MATCH (5) characters in the network portion in *reversed* order This can be used to do a database lookup against the column that stores getStrippedReversed() Returns null if phoneNumber == null <br /><br />"
"android.telephony.PhoneNumberUtils.getFormatTypeForLocale (Locale locale)    This method was deprecated in API level 21. Use link #formatNumber (String phoneNumber, String defaultCountryIso) "," This method was deprecated in API level 21. Use link #formatNumber(String phoneNumber, String defaultCountryIso) instead <br /><br />"
"android.telephony.PhoneNumberUtils.isReallyDialable (char c)   True if c is ISO-LATIN characters 0-9, *, # , +  (no WILD) "," True if c is ISO-LATIN characters 0-9, *, # , + (no WILD) <br /><br />"
"android.telephony.PhoneNumberUtils.isLocalEmergencyNumber (Context context, String number) "," Checks if a given number is an emergency number for the country that the user is in. <br /><br />"
"android.telephony.PhoneNumberUtils.isGlobalPhoneNumber (String phoneNumber) "," no description <br /><br />"
"android.telephony.PhoneNumberUtils.compare (Context context, String a, String b) "," Compare phone numbers a and b, and return true if they're identical enough for caller ID purposes. <br /><br />"
"android.telephony.PhoneNumberUtils.stringFromStringAndTOA (String s, int TOA) "," Basically: makes sure there's a + in front of a TOA_International number Returns null if s == null <br /><br />"
"android.telephony.PhoneNumberUtils.calledPartyBCDFragmentToString (byte[] bytes, int offset, int length) "," Like calledPartyBCDToString, but field does not start with a TOA byte. <br /><br />"
"android.telephony.PhoneNumberUtils.formatJapaneseNumber (Editable text)    This method was deprecated in API level 21. Use link #formatNumber (String phoneNumber, String defaultCountryIso) "," This method was deprecated in API level 21. Use link #formatNumber(String phoneNumber, String defaultCountryIso) instead <br /><br />"
"android.telephony.PhoneStateListener.onSignalStrengthsChanged (SignalStrength signalStrength) "," Callback invoked when network signal strengths changes. <br /><br />"
"android.telephony.PhoneStateListener.onSignalStrengthChanged (int asu)    This method was deprecated in API level 5. Use onSignalStrengthsChanged (SignalStrength) "," This method was deprecated in API level 5. Use onSignalStrengthsChanged(SignalStrength) <br /><br />"
"android.telephony.PhoneStateListener.onDataActivity (int direction) "," Callback invoked when data activity state changes. <br /><br />"
"android.telephony.PhoneStateListener.onDataConnectionStateChanged (int state) "," Callback invoked when connection state changes. <br /><br />"
"android.telephony.PhoneStateListener.onServiceStateChanged (ServiceState serviceState) "," Callback invoked when device service state changes. <br /><br />"
"android.telephony.PhoneStateListener.onCallForwardingIndicatorChanged (boolean cfi) "," Callback invoked when the call-forwarding indicator changes. <br /><br />"
"android.telephony.PhoneStateListener.onCellLocationChanged (CellLocation location) "," Callback invoked when device cell location changes. <br /><br />"
"android.telephony.PhoneStateListener.onMessageWaitingIndicatorChanged (boolean mwi) "," Callback invoked when the message-waiting indicator changes. <br /><br />"
"android.telephony.PhoneStateListener.onDataConnectionStateChanged (int state, int networkType) "," same as above, but with the network type. <br /><br />"
"android.telephony.PhoneStateListener.onCellInfoChanged (List< CellInfo> cellInfo) "," Callback invoked when a observed cell info has changed, or new cells have been added or removed. <br /><br />"
"android.telephony.PhoneStateListener.onCallStateChanged (int state, String incomingNumber) "," Callback invoked when device call state changes. <br /><br />"
"android.telephony.ServiceState.getOperatorNumeric () "," Get current registered operator numeric id. <br /><br />"
"android.telephony.ServiceState.getOperatorAlphaShort () "," Get current registered operator name in short alphanumeric format. <br /><br />"
"android.telephony.ServiceState.getRoaming ()   Get current roaming indicator of phone  (note: not just decoding from TS 27.007 7.2) "," Get current roaming indicator of phone (note: not just decoding from TS 27.007 7.2) <br /><br />"
"android.telephony.ServiceState.getState () "," Get current voice service state <br /><br />"
"android.telephony.ServiceState.getOperatorAlphaLong () "," Get current registered operator name in long alphanumeric format. <br /><br />"
"android.telephony.ServiceState.setIsManualSelection (boolean isManual) "," no description <br /><br />"
"android.telephony.ServiceState.setStateOff () "," no description <br /><br />"
"android.telephony.ServiceState.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.telephony.ServiceState.setOperatorName (String longName, String shortName, String numeric) "," no description <br /><br />"
"android.telephony.ServiceState.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telephony.ServiceState.setRoaming (boolean roaming) "," no description <br /><br />"
"android.telephony.ServiceState.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.telephony.ServiceState.setStateOutOfService () "," no description <br /><br />"
"android.telephony.ServiceState.setState (int state) "," no description <br /><br />"
"android.telephony.ServiceState.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.telephony.ServiceState.getIsManualSelection () "," Get current network selection mode. <br /><br />"
"android.telephony.ServiceState.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.telephony.SignalStrength.getGsmBitErrorRate ()   Get the GSM bit error rate  (0-7, 99) "," Get the GSM bit error rate (0-7, 99) as defined in TS 27.007 8.5 <br /><br />"
"android.telephony.SignalStrength.writeToParcel (Parcel out, int flags)   writeToParcel (Parcel, int) "," writeToParcel(Parcel, int) <br /><br />"
"android.telephony.SignalStrength.getEvdoEcio () "," Get the EVDO Ec/Io value in dB*10 <br /><br />"
"android.telephony.SignalStrength.getCdmaDbm () "," Get the CDMA RSSI value in dBm <br /><br />"
"android.telephony.SignalStrength.getCdmaEcio () "," Get the CDMA Ec/Io value in dB*10 <br /><br />"
"android.telephony.SignalStrength.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telephony.SignalStrength.getGsmSignalStrength ()   Get the GSM Signal Strength, valid values are  (0-31, 99) "," Get the GSM Signal Strength, valid values are (0-31, 99) as defined in TS 27.007 8.5 <br /><br />"
"android.telephony.SignalStrength.getEvdoSnr () "," Get the signal to noise ratio. <br /><br />"
"android.telephony.SignalStrength.isGsm () "," no description <br /><br />"
"android.telephony.SignalStrength.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.telephony.SignalStrength.getEvdoDbm () "," Get the EVDO RSSI value in dBm <br /><br />"
"android.telephony.SignalStrength.describeContents ()   describeContents () "," describeContents() <br /><br />"
"android.telephony.SignalStrength.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.telephony.SmsManager.injectSmsPdu (byte[] pdu, String format, PendingIntent receivedIntent) "," Inject an SMS PDU into the android application framework. <br /><br />"
"android.telephony.SmsManager.downloadMultimediaMessage (Context context, String locationUrl, Uri contentUri, Bundle configOverrides, PendingIntent downloadedIntent) "," Download an MMS message from carrier by a given location URL <br /><br />"
"android.telephony.SmsManager.getDefaultSmsSubscriptionId () "," Get default sms subscription id <br /><br />"
"android.telephony.SmsManager.getDefault () "," Get the SmsManager associated with the default subscription id. <br /><br />"
"android.telephony.SmsManager.getSmsManagerForSubscriptionId (int subId) "," Get the the instance of the SmsManager associated with a particular subscription id <br /><br />"
"android.telephony.SmsManager.sendMultimediaMessage (Context context, Uri contentUri, String locationUrl, Bundle configOverrides, PendingIntent sentIntent) "," Send an MMS message <br /><br />"
"android.telephony.SmsManager.getCarrierConfigValues () "," Get carrier-dependent configuration values. <br /><br />"
"android.telephony.SmsManager.getSubscriptionId () "," Get the associated subscription id. <br /><br />"
"android.telephony.SmsManager.sendMultipartTextMessage (String destinationAddress, String scAddress, ArrayList< String> parts, ArrayList< PendingIntent> sentIntents, ArrayList< PendingIntent> deliveryIntents) "," Send a multi-part text based SMS. <br /><br />"
"android.telephony.SmsManager.sendTextMessage (String destinationAddress, String scAddress, String text, PendingIntent sentIntent, PendingIntent deliveryIntent) "," Send a text based SMS. <br /><br />"
"android.telephony.SmsManager.divideMessage (String text) "," Divide a message text into several fragments, none bigger than the maximum SMS message size. <br /><br />"
"android.telephony.SmsManager.sendDataMessage (String destinationAddress, String scAddress, short destinationPort, byte[] data, PendingIntent sentIntent, PendingIntent deliveryIntent) "," Send a data based SMS to a specific application port. <br /><br />"
"android.telephony.SmsMessage.isMWIClearMessage ()   returns true if this message is a CPHS voicemail / message waiting indicator  (MWI) "," returns true if this message is a CPHS voicemail / message waiting indicator (MWI) clear message <br /><br />"
"android.telephony.SmsMessage.isMwiDontStore () "," returns true if this message is a 'Message Waiting Indication Group: Discard Message' notification and should not be stored. <br /><br />"
"android.telephony.SmsMessage.isCphsMwiMessage () "," Returns true for CPHS MWI toggle message. <br /><br />"
"android.telephony.SmsMessage.isStatusReportMessage () "," Return true iff the message is a SMS-STATUS-REPORT message. <br /><br />"
"android.telephony.SmsMessage.getMessageBody () "," Returns the message body as a String, if it exists and is text based. <br /><br />"
"android.telephony.SmsMessage.getPseudoSubject () "," Unofficial convention of a subject line enclosed in parens empty string if not present <br /><br />"
"android.telephony.SmsMessage.getUserData () "," returns the user data section minus the user data header if one was present. <br /><br />"
"android.telephony.SmsMessage.isEmail () "," Returns true if message is an email. <br /><br />"
"android.telephony.SmsMessage.getTimestampMillis ()   Returns the service centre timestamp in currentTimeMillis () "," Returns the service centre timestamp in currentTimeMillis() format <br /><br />"
"android.telephony.SmsMessage.getOriginatingAddress ()   Returns the originating address  (sender) "," Returns the originating address (sender) of this SMS message in String form or null if unavailable <br /><br />"
"android.telephony.SmsMessage.calculateLength (String messageBody, boolean use7bitOnly) "," Calculates the number of SMS's required to encode the message body and the number of characters remaining until the next message, given the current encoding. <br /><br />"
"android.telephony.SmsMessage.getIndexOnIcc ()   Returns the record index of the message on the ICC  (1-based index) "," Returns the record index of the message on the ICC (1-based index). <br /><br />"
"android.telephony.SmsMessage.getSubmitPdu (String scAddress, String destinationAddress, String message, boolean statusReportRequested) "," Get an SMS-SUBMIT PDU for a destination address and a message. <br /><br />"
"android.telephony.SmsMessage.getTPLayerLengthForPDU (String pdu)   Get the TP-Layer-Length for the given SMS-SUBMIT PDU Basically, the length in bytes  (not hex chars) "," Get the TP-Layer-Length for the given SMS-SUBMIT PDU Basically, the length in bytes (not hex chars) less the SMSC header FIXME: This method is only used by a CTS test case that isn't run on CDMA devices. <br /><br />"
"android.telephony.SmsMessage.getEmailFrom () "," no description <br /><br />"
"android.telephony.SmsMessage.getEmailBody () "," no description <br /><br />"
"android.telephony.SmsMessage.calculateLength (CharSequence msgBody, boolean use7bitOnly) "," Calculates the number of SMS's required to encode the message body and the number of characters remaining until the next message. <br /><br />"
"android.telephony.SmsMessage.isReplyPathPresent () "," Returns true iff the TP-Reply-Path bit is set in this message. <br /><br />"
"android.telephony.SmsMessage.getPdu () "," Returns the raw PDU for the message. <br /><br />"
"android.telephony.SmsMessage.getMessageClass () "," Returns the class of this message. <br /><br />"
"android.telephony.SmsMessage.createFromPdu (byte[] pdu) "," Create an SmsMessage from a raw PDU. <br /><br />"
"android.telephony.SmsMessage.getStatusOnIcc ()   Returns the status of the message on the ICC  (read, unread, sent, unsent) "," Returns the status of the message on the ICC (read, unread, sent, unsent). <br /><br />"
"android.telephony.SmsMessage.isMWISetMessage ()   returns true if this message is a CPHS voicemail / message waiting indicator  (MWI) "," returns true if this message is a CPHS voicemail / message waiting indicator (MWI) set message <br /><br />"
"android.telephony.SmsMessage.getDisplayMessageBody () "," Returns the message body, or email message body if this message was from an email gateway. <br /><br />"
"android.telephony.SmsMessage.getSubmitPdu (String scAddress, String destinationAddress, short destinationPort, byte[] data, boolean statusReportRequested) "," Get an SMS-SUBMIT PDU for a data message to a destination address & port. <br /><br />"
"android.telephony.SmsMessage.getServiceCenterAddress () "," Returns the address of the SMS service center that relayed this message or null if there is none. <br /><br />"
"android.telephony.SmsMessage.getIndexOnSim () "," This method was deprecated in API level 4. Use getIndexOnIcc instead. <br /><br />"
"android.telephony.SmsMessage.getStatusOnSim () "," This method was deprecated in API level 4. Use getStatusOnIcc instead. <br /><br />"
"android.telephony.SmsMessage.getDisplayOriginatingAddress () "," Returns the originating address, or email from address if this message was from an email gateway. <br /><br />"
"android.telephony.SmsMessage.getProtocolIdentifier () "," Get protocol identifier. <br /><br />"
"android.telephony.SmsMessage.getStatus () "," GSM: For an SMS-STATUS-REPORT message, this returns the status field from the status report. <br /><br />"
"android.telephony.SmsMessage.isReplace () "," See TS 23.040 9.2.3.9 returns true if this is a 'replace short message' SMS <br /><br />"
"android.telephony.SmsMessage.SubmitPdu.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telephony.SubscriptionInfo.getMcc () "," no description <br /><br />"
"android.telephony.SubscriptionInfo.getDisplayName () "," no description <br /><br />"
"android.telephony.SubscriptionInfo.createIconBitmap (Context context) "," Creates and returns an icon Bitmap to represent this SubscriptionInfo in a user interface. <br /><br />"
"android.telephony.SubscriptionInfo.getNumber () "," no description <br /><br />"
"android.telephony.SubscriptionInfo.getCarrierName () "," no description <br /><br />"
"android.telephony.SubscriptionInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.telephony.SubscriptionInfo.getCountryIso () "," no description <br /><br />"
"android.telephony.SubscriptionInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.telephony.SubscriptionInfo.getIccId () "," no description <br /><br />"
"android.telephony.SubscriptionInfo.getSimSlotIndex () "," no description <br /><br />"
"android.telephony.SubscriptionInfo.getMnc () "," no description <br /><br />"
"android.telephony.SubscriptionInfo.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.telephony.SubscriptionInfo.getSubscriptionId () "," no description <br /><br />"
"android.telephony.SubscriptionInfo.getDataRoaming () "," no description <br /><br />"
"android.telephony.SubscriptionInfo.getIconTint () "," A highlight color to use in displaying information about this PhoneAccount. <br /><br />"
"android.telephony.SubscriptionManager.removeOnSubscriptionsChangedListener (SubscriptionManager.OnSubscriptionsChangedListener listener) "," Unregister the SubscriptionManager.OnSubscriptionsChangedListener. <br /><br />"
"android.telephony.SubscriptionManager.isNetworkRoaming (int subId) "," Returns true if the device is considered roaming on the current network for a subscription. <br /><br />"
"android.telephony.SubscriptionManager.getActiveSubscriptionInfoCountMax () "," no description <br /><br />"
"android.telephony.SubscriptionManager.getActiveSubscriptionInfoCount () "," no description <br /><br />"
"android.telephony.SubscriptionManager.getActiveSubscriptionInfoList ()   Get the SubscriptionInfo (s) of the currently inserted SIM (s) "," Get the SubscriptionInfo(s) of the currently inserted SIM(s). <br /><br />"
"android.telephony.SubscriptionManager.getActiveSubscriptionInfoForSimSlotIndex (int slotIdx) "," Get the active SubscriptionInfo associated with the slotIdx <br /><br />"
"android.telephony.SubscriptionManager.addOnSubscriptionsChangedListener (SubscriptionManager.OnSubscriptionsChangedListener listener) "," Register for changes to the list of active SubscriptionInfo records or to the individual records themselves. <br /><br />"
"android.telephony.SubscriptionManager.getActiveSubscriptionInfo (int subId) "," Get the active SubscriptionInfo with the subId key <br /><br />"
"android.telephony.SubscriptionManager.from (Context context) "," Get an instance of the SubscriptionManager from the Context. <br /><br />"
"android.telephony.SubscriptionManager.OnSubscriptionsChangedListener.onSubscriptionsChanged () "," Callback invoked when there is any change to any SubscriptionInfo. <br /><br />"
"android.telephony.TelephonyManager.getSimState () "," Returns a constant indicating the state of the default SIM card. <br /><br />"
"android.telephony.TelephonyManager.getSubscriberId () "," Returns the unique subscriber ID, for example, the IMSI for a GSM phone. <br /><br />"
"android.telephony.TelephonyManager.isVoiceCapable () "," no description <br /><br />"
"android.telephony.TelephonyManager.setVoiceMailNumber (String alphaTag, String number) "," Sets the voice mail number. <br /><br />"
"android.telephony.TelephonyManager.isSmsCapable () "," no description <br /><br />"
"android.telephony.TelephonyManager.iccTransmitApduBasicChannel (int cla, int instruction, int p1, int p2, int p3, String data) "," Transmit an APDU to the ICC card over the basic channel. <br /><br />"
"android.telephony.TelephonyManager.iccExchangeSimIO (int fileID, int command, int p1, int p2, int p3, String filePath) "," Returns the response APDU for a command APDU sent through SIM_IO. <br /><br />"
"android.telephony.TelephonyManager.setOperatorBrandOverride (String brand) "," Override the branding for the current ICCID. <br /><br />"
"android.telephony.TelephonyManager.getMmsUserAgent () "," Returns the MMS user agent. <br /><br />"
"android.telephony.TelephonyManager.getDataActivity ()   Returns a constant indicating the type of activity on a data connection  (cellular) "," Returns a constant indicating the type of activity on a data connection (cellular). <br /><br />"
"android.telephony.TelephonyManager.getVoiceMailAlphaTag () "," Retrieves the alphabetic identifier associated with the voice mail number. <br /><br />"
"android.telephony.TelephonyManager.getLine1Number () "," Returns the phone number string for line 1, for example, the MSISDN for a GSM phone. <br /><br />"
"android.telephony.TelephonyManager.getNetworkCountryIso ()   Returns the ISO country code equivalent of the current registered operator's MCC  (Mobile Country Code) "," Returns the ISO country code equivalent of the current registered operator's MCC (Mobile Country Code). <br /><br />"
"android.telephony.TelephonyManager.isNetworkRoaming () "," Returns true if the device is considered roaming on the current network, for GSM purposes. <br /><br />"
"android.telephony.TelephonyManager.iccOpenLogicalChannel (String AID) "," Opens a logical channel to the ICC card. <br /><br />"
"android.telephony.TelephonyManager.getSimCountryIso () "," Returns the ISO country code equivalent for the SIM provider's country code. <br /><br />"
"android.telephony.TelephonyManager.getPhoneType () "," Returns a constant indicating the device phone type. <br /><br />"
"android.telephony.TelephonyManager.getCellLocation () "," Returns the current location of the device. <br /><br />"
"android.telephony.TelephonyManager.hasCarrierPrivileges () "," Has the calling application been granted carrier privileges by the carrier. <br /><br />"
"android.telephony.TelephonyManager.getDeviceId () "," Returns the unique device ID, for example, the IMEI for GSM and the MEID or ESN for CDMA phones. <br /><br />"
"android.telephony.TelephonyManager.listen (PhoneStateListener listener, int events) "," Registers a listener object to receive notification of changes in specified telephony states. <br /><br />"
"android.telephony.TelephonyManager.iccTransmitApduLogicalChannel (int channel, int cla, int instruction, int p1, int p2, int p3, String data) "," Transmit an APDU to the ICC card over a logical channel. <br /><br />"
"android.telephony.TelephonyManager.getDeviceSoftwareVersion () "," Returns the software version number for the device, for example, the IMEI/SV for GSM phones. <br /><br />"
"android.telephony.TelephonyManager.getNetworkType () "," no description <br /><br />"
"android.telephony.TelephonyManager.getSimSerialNumber () "," Returns the serial number of the SIM, if applicable. <br /><br />"
"android.telephony.TelephonyManager.getSimOperatorName ()   Returns the Service Provider Name  (SPN) "," Returns the Service Provider Name (SPN). <br /><br />"
"android.telephony.TelephonyManager.getSimOperator ()   Returns the MCC+MNC  (mobile country code + mobile network code) "," Returns the MCC+MNC (mobile country code + mobile network code) of the provider of the SIM. <br /><br />"
"android.telephony.TelephonyManager.setLine1NumberForDisplay (String alphaTag, String number) "," Set the line 1 phone number string and its alphatag for the current ICCID for display purpose only, for example, displayed in Phone Status. <br /><br />"
"android.telephony.TelephonyManager.sendEnvelopeWithStatus (String content) "," Send ENVELOPE to the SIM and return the response. <br /><br />"
"android.telephony.TelephonyManager.getGroupIdLevel1 () "," Returns the Group Identifier Level1 for a GSM phone. <br /><br />"
"android.telephony.TelephonyManager.getAllCellInfo () "," Returns all observed cell information from all radios on the device including the primary and neighboring cells. <br /><br />"
"android.telephony.TelephonyManager.getNetworkOperator ()   Returns the numeric name  (MCC+MNC) "," Returns the numeric name (MCC+MNC) of current registered operator. <br /><br />"
"android.telephony.TelephonyManager.getVoiceMailNumber () "," Returns the voice mail number. <br /><br />"
"android.telephony.TelephonyManager.iccCloseLogicalChannel (int channel) "," Closes a previously opened logical channel to the ICC card. <br /><br />"
"android.telephony.TelephonyManager.getNetworkOperatorName () "," Returns the alphabetic name of current registered operator. <br /><br />"
"android.telephony.TelephonyManager.getMmsUAProfUrl () "," Returns the MMS user agent profile URL. <br /><br />"
"android.telephony.TelephonyManager.getDataState ()   Returns a constant indicating the current data connection state  (cellular) "," Returns a constant indicating the current data connection state (cellular). <br /><br />"
"android.telephony.TelephonyManager.setPreferredNetworkTypeToGlobal () "," Set the preferred network type to global mode which includes LTE, CDMA, EvDo and GSM/WCDMA. <br /><br />"
"android.telephony.TelephonyManager.hasIccCard () "," no description <br /><br />"
"android.telephony.TelephonyManager.getNeighboringCellInfo () "," Returns the neighboring cell information of the device. <br /><br />"
"android.telephony.TelephonyManager.getCallState ()   Returns a constant indicating the call state  (cellular) "," Returns a constant indicating the call state (cellular) on the device. <br /><br />"
"android.test.ActivityInstrumentationTestCase<T extends android.app.Activity>.getActivity () "," no description <br /><br />"
"android.test.ActivityInstrumentationTestCase<T extends android.app.Activity>.testActivityTestCaseSetUpProperly () "," no description <br /><br />"
"android.test.ActivityInstrumentationTestCase2<T extends android.app.Activity>.setActivityInitialTouchMode (boolean initialTouchMode)   Call this method before the first call to getActivity () "," Call this method before the first call to getActivity() to set the initial touch mode for the Activity under test. <br /><br />"
"android.test.ActivityInstrumentationTestCase2<T extends android.app.Activity>.getActivity () "," Get the Activity under test, starting it if necessary. <br /><br />"
"android.test.ActivityInstrumentationTestCase2<T extends android.app.Activity>.setActivityIntent (Intent i)   Call this method before the first call to getActivity () "," Call this method before the first call to getActivity() to inject a customized Intent into the Activity under test. <br /><br />"
"android.test.ActivityUnitTestCase<T extends android.app.Activity>.getStartedActivityRequest ()   This method will return the launch request code if your Activity under test calls startActivityForResult (Intent, int) "," This method will return the launch request code if your Activity under test calls startActivityForResult(Intent, int). <br /><br />"
"android.test.ActivityUnitTestCase<T extends android.app.Activity>.setActivityContext (Context activityContext) "," If you wish to inject a Mock, Isolated, or otherwise altered context, you can do so here. <br /><br />"
"android.test.ActivityUnitTestCase<T extends android.app.Activity>.getActivity () "," no description <br /><br />"
"android.test.ActivityUnitTestCase<T extends android.app.Activity>.isFinishCalled ()   This method will notify you if the Activity under test called finish (), finishFromChild (Activity), or finishActivity (int) "," This method will notify you if the Activity under test called finish(), finishFromChild(Activity), or finishActivity(int). <br /><br />"
"android.test.ActivityUnitTestCase<T extends android.app.Activity>.getStartedActivityIntent ()   This method will return the launch intent if your Activity under test calls startActivity (Intent) or startActivityForResult (Intent, int) "," This method will return the launch intent if your Activity under test calls startActivity(Intent) or startActivityForResult(Intent, int). <br /><br />"
"android.test.ActivityUnitTestCase<T extends android.app.Activity>.getFinishedActivityRequest ()   This method will return the request code if the Activity under test called finishActivity (int) "," This method will return the request code if the Activity under test called finishActivity(int). <br /><br />"
"android.test.ActivityUnitTestCase<T extends android.app.Activity>.getRequestedOrientation ()   This method will return the value if your Activity under test calls setRequestedOrientation (int) "," This method will return the value if your Activity under test calls setRequestedOrientation(int). <br /><br />"
"android.test.ActivityUnitTestCase<T extends android.app.Activity>.setApplication (Application application) "," Set the application for use during the test. <br /><br />"
"android.test.AndroidTestCase.assertActivityRequiresPermission (String packageName, String className, String permission) "," Asserts that launching a given activity is protected by a particular permission by attempting to start the activity and validating that a SecurityException is thrown that mentions the permission in its error message. <br /><br />"
"android.test.AndroidTestCase.assertWritingContentUriRequiresPermission (Uri uri, String permission) "," Asserts that writing to the content uri requires a particular permission by inserting into the uri and ensuring a SecurityException is thrown mentioning the particular permission. <br /><br />"
"android.test.AndroidTestCase.assertReadingContentUriRequiresPermission (Uri uri, String permission) "," Asserts that reading from the content uri requires a particular permission by querying the uri and ensuring a SecurityException is thrown mentioning the particular permission. <br /><br />"
"android.test.AndroidTestCase.testAndroidTestCaseSetupProperly () "," no description <br /><br />"
"android.test.AndroidTestCase.setContext (Context context) "," no description <br /><br />"
"android.test.AndroidTestCase.getContext () "," no description <br /><br />"
"android.test.AndroidTestRunner.setTest (Test test) "," no description <br /><br />"
"android.test.AndroidTestRunner.runTest (TestResult testResult) "," no description <br /><br />"
"android.test.AndroidTestRunner.setInstrumentaiton (Instrumentation instrumentation)    This method was deprecated in API level 5. Incorrect spelling, use setInstrumentation (android.app.Instrumentation) "," This method was deprecated in API level 5. Incorrect spelling, use setInstrumentation(android.app.Instrumentation) instead. <br /><br />"
"android.test.AndroidTestRunner.testFailed (int status, Test test, Throwable t) "," no description <br /><br />"
"android.test.AndroidTestRunner.testEnded (String testName) "," no description <br /><br />"
"android.test.AndroidTestRunner.getTestCases () "," no description <br /><br />"
"android.test.AndroidTestRunner.getTestResult () "," no description <br /><br />"
"android.test.AndroidTestRunner.addTestListener (TestListener testListener) "," no description <br /><br />"
"android.test.AndroidTestRunner.runTest () "," no description <br /><br />"
"android.test.AndroidTestRunner.setTestClassName (String testClassName, String testMethodName) "," no description <br /><br />"
"android.test.AndroidTestRunner.testStarted (String testName) "," no description <br /><br />"
"android.test.AndroidTestRunner.clearTestListeners () "," no description <br /><br />"
"android.test.AndroidTestRunner.getTestClassName () "," no description <br /><br />"
"android.test.AndroidTestRunner.setInstrumentation (Instrumentation instrumentation) "," no description <br /><br />"
"android.test.AndroidTestRunner.setContext (Context context) "," no description <br /><br />"
"android.test.ApplicationTestCase<T extends android.app.Application>.getSystemContext ()   Return a real  (not mocked or instrumented) "," Return a real (not mocked or instrumented) system Context that can be used when generating Mock or other Context objects for your Application under test. <br /><br />"
"android.test.ApplicationTestCase<T extends android.app.Application>.testApplicationTestCaseSetUpProperly () "," This test simply confirms that the Application class can be instantiated properly. <br /><br />"
"android.test.ApplicationTestCase<T extends android.app.Application>.getApplication () "," no description <br /><br />"
"android.test.ComparisonFailure.getMessage () "," Returns the detail message which was provided when this Throwable was created. <br /><br />"
"android.test.InstrumentationTestCase.injectInsrumentation (Instrumentation instrumentation)    This method was deprecated in API level 5. Incorrect spelling, use injectInstrumentation (android.app.Instrumentation) "," This method was deprecated in API level 5. Incorrect spelling, use injectInstrumentation(android.app.Instrumentation) instead. <br /><br />"
"android.test.InstrumentationTestCase.sendKeys (int... keys) "," Sends a series of key events through instrumentation and waits for idle. <br /><br />"
"android.test.InstrumentationTestCase.sendKeys (String keysSequence) "," Sends a series of key events through instrumentation and waits for idle. <br /><br />"
"android.test.InstrumentationTestCase.getInstrumentation () "," Inheritors can access the instrumentation using this. <br /><br />"
"android.test.InstrumentationTestCase.launchActivityWithIntent (String pkg, Class<T> activityCls, Intent intent) "," Utility method for launching an activity with a specific Intent. <br /><br />"
"android.test.InstrumentationTestCase.sendRepeatedKeys (int... keys) "," Sends a series of key events through instrumentation and waits for idle. <br /><br />"
"android.test.InstrumentationTestCase.injectInstrumentation (Instrumentation instrumentation) "," Injects instrumentation into this test case. <br /><br />"
"android.test.InstrumentationTestCase.launchActivity (String pkg, Class<T> activityCls, Bundle extras) "," Utility method for launching an activity. <br /><br />"
"android.test.InstrumentationTestCase.runTestOnUiThread (Runnable r) "," Helper for running portions of a test on the UI thread. <br /><br />"
"android.test.InstrumentationTestRunner.getTestSuite () "," no description <br /><br />"
"android.test.InstrumentationTestRunner.onCreate (Bundle arguments) "," Called when the instrumentation is starting, before any application code has been loaded. <br /><br />"
"android.test.InstrumentationTestRunner.getArguments () "," Get the arguments passed to this instrumentation. <br /><br />"
"android.test.InstrumentationTestRunner.getAllTests () "," Override this to define all of the tests to run in your package. <br /><br />"
"android.test.InstrumentationTestRunner.getLoader () "," Override this to provide access to the class loader of your package. <br /><br />"
"android.test.InstrumentationTestRunner.onStart () "," Method where the instrumentation thread enters execution. <br /><br />"
"android.test.InstrumentationTestSuite.addTestSuite (Class testClass) "," Adds the tests from the given class to the suite <br /><br />"
"android.test.InstrumentationTestSuite.runTest (Test test, TestResult result) "," no description <br /><br />"
"android.test.IsolatedContext.getFilesDir ()   Returns the absolute path to the directory on the filesystem where files created with openFileOutput (String, int) "," Returns the absolute path to the directory on the filesystem where files created with openFileOutput(String, int) are stored. <br /><br />"
"android.test.IsolatedContext.checkUriPermission (Uri uri, int pid, int uid, int modeFlags) "," Determine whether a particular process and user ID has been granted permission to access a specific URI. <br /><br />"
"android.test.IsolatedContext.checkUriPermission (Uri uri, String readPermission, String writePermission, int pid, int uid, int modeFlags) "," Check both a Uri and normal permission. <br /><br />"
"android.test.IsolatedContext.getSystemService (String name) "," Return the handle to a system-level service by name. <br /><br />"
"android.test.IsolatedContext.bindService (Intent service, ServiceConnection conn, int flags) "," Connect to an application service, creating it if needed. <br /><br />"
"android.test.IsolatedContext.unregisterReceiver (BroadcastReceiver receiver) "," Unregister a previously registered BroadcastReceiver. <br /><br />"
"android.test.IsolatedContext.registerReceiver (BroadcastReceiver receiver, IntentFilter filter) "," Register a BroadcastReceiver to be run in the main activity thread. <br /><br />"
"android.test.IsolatedContext.getContentResolver () "," Return a ContentResolver instance for your application's package. <br /><br />"
"android.test.IsolatedContext.sendBroadcast (Intent intent) "," Broadcast the given intent to all interested BroadcastReceivers. <br /><br />"
"android.test.IsolatedContext.sendOrderedBroadcast (Intent intent, String receiverPermission) "," Broadcast the given intent to all interested BroadcastReceivers, delivering them one at a time to allow more preferred receivers to consume the broadcast before it is delivered to less preferred receivers. <br /><br />"
"android.test.IsolatedContext.getAndClearBroadcastIntents () "," Returns the list of intents that were broadcast since the last call to this method. <br /><br />"
"android.test.LoaderTestCase.getLoaderResultSynchronously (Loader<T> loader) "," Runs a Loader synchronously and returns the result of the load. <br /><br />"
"android.test.mock.MockApplication.onConfigurationChanged (Configuration newConfig) "," Called by the system when the device configuration changes while your component is running. <br /><br />"
"android.test.mock.MockApplication.onTerminate () "," This method is for use in emulated process environments. <br /><br />"
"android.test.mock.MockApplication.onCreate ()   Called when the application is starting, before any activity, service, or receiver objects  (excluding content providers) "," Called when the application is starting, before any activity, service, or receiver objects (excluding content providers) have been created. <br /><br />"
"android.test.mock.MockContentProvider.getType (Uri uri) "," Implement this to handle requests for the MIME type of the data at the given URI. <br /><br />"
"android.test.mock.MockContentProvider.delete (Uri uri, String selection, String[] selectionArgs) "," Implement this to handle requests to delete one or more rows. <br /><br />"
"android.test.mock.MockContentProvider.onCreate () "," Implement this to initialize your content provider on startup. <br /><br />"
"android.test.mock.MockContentProvider.bulkInsert (Uri uri, ContentValues[] values)   If you're reluctant to implement this manually, please just call super.bulkInsert () "," If you're reluctant to implement this manually, please just call super.bulkInsert(). <br /><br />"
"android.test.mock.MockContentProvider.attachInfo (Context context, ProviderInfo info) "," After being instantiated, this is called to tell the content provider about itself. <br /><br />"
"android.test.mock.MockContentProvider.openTypedAssetFile (Uri url, String mimeType, Bundle opts) "," Called by a client to open a read-only stream containing data of a particular MIME type. <br /><br />"
"android.test.mock.MockContentProvider.update (Uri uri, ContentValues values, String selection, String[] selectionArgs) "," Implement this to handle requests to update one or more rows. <br /><br />"
"android.test.mock.MockContentProvider.insert (Uri uri, ContentValues values) "," Implement this to handle requests to insert a new row. <br /><br />"
"android.test.mock.MockContentProvider.query (Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) "," Implement this to handle query requests from clients. <br /><br />"
"android.test.mock.MockContentProvider.getStreamTypes (Uri url, String mimeTypeFilter) "," Called by a client to determine the types of data streams that this content provider supports for the given URI. <br /><br />"
"android.test.mock.MockContentProvider.applyBatch (ArrayList< ContentProviderOperation> operations)   Override this to handle requests to perform a batch of operations, or the default implementation will iterate over the operations and call apply (ContentProvider, ContentProviderResult[], int) "," Override this to handle requests to perform a batch of operations, or the default implementation will iterate over the operations and call apply(ContentProvider, ContentProviderResult[], int) on each of them. <br /><br />"
"android.test.mock.MockContentResolver.addProvider (String name, ContentProvider provider) "," Adds access to a provider based on its authority <br /><br />"
"android.test.mock.MockContentResolver.notifyChange (Uri uri, ContentObserver observer, boolean syncToNetwork)   Overrides ContentResolver.notifChange (Uri, ContentObserver, boolean) "," Overrides ContentResolver.notifChange(Uri, ContentObserver, boolean). <br /><br />"
"android.test.mock.MockContext.getPackageManager () "," Return PackageManager instance to find global package information. <br /><br />"
"android.test.mock.MockContext.startActivities (Intent[] intents)   Same as startActivities (Intent[], Bundle) "," Same as startActivities(Intent[], Bundle) with no options specified. <br /><br />"
"android.test.mock.MockContext.getResources () "," Return a Resources instance for your application's package. <br /><br />"
"android.test.mock.MockContext.enforceUriPermission (Uri uri, String readPermission, String writePermission, int pid, int uid, int modeFlags, String message) "," Enforce both a Uri and normal permission. <br /><br />"
"android.test.mock.MockContext.enforceCallingOrSelfUriPermission (Uri uri, int modeFlags, String message) "," If the calling process of an IPC or you has not been granted permission to access a specific URI, throw SecurityException. <br /><br />"
"android.test.mock.MockContext.checkUriPermission (Uri uri, String readPermission, String writePermission, int pid, int uid, int modeFlags) "," Check both a Uri and normal permission. <br /><br />"
"android.test.mock.MockContext.getSystemService (String name) "," Return the handle to a system-level service by name. <br /><br />"
"android.test.mock.MockContext.registerReceiver (BroadcastReceiver receiver, IntentFilter filter) "," Register a BroadcastReceiver to be run in the main activity thread. <br /><br />"
"android.test.mock.MockContext.openOrCreateDatabase (String file, int mode, SQLiteDatabase.CursorFactory factory, DatabaseErrorHandler errorHandler) "," Open a new private SQLiteDatabase associated with this Context's application package. <br /><br />"
"android.test.mock.MockContext.sendStickyBroadcastAsUser (Intent intent, UserHandle user)    This method is deprecated. Sticky broadcasts should not be used. They provide no security  (anyone can access them), no protection  (anyone can modify them) "," This method is deprecated. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired. <br /><br />"
"android.test.mock.MockContext.enforceCallingPermission (String permission, String message) "," If the calling process of an IPC you are handling has not been granted a particular permission, throw a SecurityException. <br /><br />"
"android.test.mock.MockContext.checkCallingOrSelfPermission (String permission) "," Determine whether the calling process of an IPC or you have been granted a particular permission. <br /><br />"
"android.test.mock.MockContext.enforceUriPermission (Uri uri, int pid, int uid, int modeFlags, String message) "," If a particular process and user ID has not been granted permission to access a specific URI, throw SecurityException. <br /><br />"
"android.test.mock.MockContext.enforcePermission (String permission, int pid, int uid, String message) "," If the given permission is not allowed for a particular process and user ID running in the system, throw a SecurityException. <br /><br />"
"android.test.mock.MockContext.setTheme (int resid) "," Set the base theme for this context. <br /><br />"
"android.test.mock.MockContext.unbindService (ServiceConnection conn) "," Disconnect from an application service. <br /><br />"
"android.test.mock.MockContext.sendStickyOrderedBroadcast (Intent intent, BroadcastReceiver resultReceiver, Handler scheduler, int initialCode, String initialData, Bundle initialExtras)    This method is deprecated. Sticky broadcasts should not be used. They provide no security  (anyone can access them), no protection  (anyone can modify them) "," This method is deprecated. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired. <br /><br />"
"android.test.mock.MockContext.enforceCallingUriPermission (Uri uri, int modeFlags, String message) "," If the calling process and user ID has not been granted permission to access a specific URI, throw SecurityException. <br /><br />"
"android.test.mock.MockContext.sendStickyOrderedBroadcastAsUser (Intent intent, UserHandle user, BroadcastReceiver resultReceiver, Handler scheduler, int initialCode, String initialData, Bundle initialExtras)    This method is deprecated. Sticky broadcasts should not be used. They provide no security  (anyone can access them), no protection  (anyone can modify them) "," This method is deprecated. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired. <br /><br />"
"android.test.mock.MockContext.checkPermission (String permission, int pid, int uid) "," Determine whether the given permission is allowed for a particular process and user ID running in the system. <br /><br />"
"android.test.mock.MockContext.sendBroadcastAsUser (Intent intent, UserHandle user, String receiverPermission)   Version of sendBroadcast (Intent, String) "," Version of sendBroadcast(Intent, String) that allows you to specify the user the broadcast will be sent to. <br /><br />"
"android.test.mock.MockContext.getObbDirs ()   Returns absolute paths to application-specific directories on all external storage devices where the application's OBB files  (if there are any) "," Returns absolute paths to application-specific directories on all external storage devices where the application's OBB files (if there are any) can be found. <br /><br />"
"android.test.mock.MockContext.sendBroadcast (Intent intent, String receiverPermission) "," Broadcast the given intent to all interested BroadcastReceivers, allowing an optional required permission to be enforced. <br /><br />"
"android.test.mock.MockContext.removeStickyBroadcast (Intent intent)    This method is deprecated. Sticky broadcasts should not be used. They provide no security  (anyone can access them), no protection  (anyone can modify them) "," This method is deprecated. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired. <br /><br />"
"android.test.mock.MockContext.isRestricted () "," Indicates whether this Context is restricted. <br /><br />"
"android.test.mock.MockContext.enforceCallingOrSelfPermission (String permission, String message) "," If neither you nor the calling process of an IPC you are handling has been granted a particular permission, throw a SecurityException. <br /><br />"
"android.test.mock.MockContext.sendBroadcast (Intent intent) "," Broadcast the given intent to all interested BroadcastReceivers. <br /><br />"
"android.test.mock.MockContext.openFileOutput (String name, int mode) "," Open a private file associated with this Context's application package for writing. <br /><br />"
"android.test.mock.MockContext.getExternalCacheDirs () "," Returns absolute paths to application-specific directories on all external storage devices where the application can place cache files it owns. <br /><br />"
"android.test.mock.MockContext.removeStickyBroadcastAsUser (Intent intent, UserHandle user)    This method is deprecated. Sticky broadcasts should not be used. They provide no security  (anyone can access them), no protection  (anyone can modify them) "," This method is deprecated. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired. <br /><br />"
"android.test.mock.MockContext.openFileInput (String name) "," Open a private file associated with this Context's application package for reading. <br /><br />"
"android.test.mock.MockContext.peekWallpaper ()    This method is deprecated. Use WallpaperManager.peek () "," This method is deprecated. Use WallpaperManager.peek() instead. <br /><br />"
"android.test.mock.MockContext.checkUriPermission (Uri uri, int pid, int uid, int modeFlags) "," Determine whether a particular process and user ID has been granted permission to access a specific URI. <br /><br />"
"android.test.mock.MockContext.getExternalMediaDirs () "," Returns absolute paths to application-specific directories on all external storage devices where the application can place media files. <br /><br />"
"android.test.mock.MockContext.getPackageCodePath () "," Return the full path to this context's primary Android package. <br /><br />"
"android.test.mock.MockContext.startIntentSender (IntentSender intent, Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags)   Same as startIntentSender (IntentSender, Intent, int, int, int, Bundle) "," Same as startIntentSender(IntentSender, Intent, int, int, int, Bundle) with no options specified. <br /><br />"
"android.test.mock.MockContext.checkCallingOrSelfUriPermission (Uri uri, int modeFlags) "," Determine whether the calling process of an IPC or you has been granted permission to access a specific URI. <br /><br />"
"android.test.mock.MockContext.unregisterReceiver (BroadcastReceiver receiver) "," Unregister a previously registered BroadcastReceiver. <br /><br />"
"android.test.mock.MockContext.getApplicationContext () "," Return the context of the single, global Application object of the current process. <br /><br />"
"android.test.mock.MockContext.startIntentSender (IntentSender intent, Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags, Bundle options)   Like startActivity (Intent, Bundle) "," Like startActivity(Intent, Bundle), but taking a IntentSender to start. <br /><br />"
"android.test.mock.MockContext.getWallpaperDesiredMinimumHeight ()    This method is deprecated. Use WallpaperManager.getDesiredMinimumHeight () "," This method is deprecated. Use WallpaperManager.getDesiredMinimumHeight() instead. <br /><br />"
"android.test.mock.MockContext.getMainLooper () "," Return the Looper for the main thread of the current process. <br /><br />"
"android.test.mock.MockContext.sendBroadcastAsUser (Intent intent, UserHandle user)   Version of sendBroadcast (Intent) "," Version of sendBroadcast(Intent) that allows you to specify the user the broadcast will be sent to. <br /><br />"
"android.test.mock.MockContext.getPackageResourcePath () "," Return the full path to this context's primary Android package. <br /><br />"
"android.test.mock.MockContext.revokeUriPermission (Uri uri, int modeFlags)   Remove all permissions to access a particular content provider Uri that were previously added with grantUriPermission (String, Uri, int) "," Remove all permissions to access a particular content provider Uri that were previously added with grantUriPermission(String, Uri, int). <br /><br />"
"android.test.mock.MockContext.getPackageName () "," Return the name of this application's package. <br /><br />"
"android.test.mock.MockContext.createConfigurationContext (Configuration overrideConfiguration) "," Return a new Context object for the current Context but whose resources are adjusted to match the given Configuration. <br /><br />"
"android.test.mock.MockContext.getNoBackupFilesDir ()   Returns the absolute path to the directory on the filesystem similar to getFilesDir () "," Returns the absolute path to the directory on the filesystem similar to getFilesDir(). <br /><br />"
"android.test.mock.MockContext.sendStickyBroadcast (Intent intent)    This method is deprecated. Sticky broadcasts should not be used. They provide no security  (anyone can access them), no protection  (anyone can modify them) "," This method is deprecated. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired. <br /><br />"
"android.test.mock.MockContext.grantUriPermission (String toPackage, Uri uri, int modeFlags) "," Grant permission to access a specific Uri to another package, regardless of whether that package has general permission to access the Uri's content provider. <br /><br />"
"android.test.mock.MockContext.getWallpaper ()    This method is deprecated. Use WallpaperManager.get () "," This method is deprecated. Use WallpaperManager.get() instead. <br /><br />"
"android.test.mock.MockContext.clearWallpaper ()    This method is deprecated. Use WallpaperManager.clear () "," This method is deprecated. Use WallpaperManager.clear() instead.  This method requires the caller to hold the permission SET_WALLPAPER. <br /><br />"
"android.test.mock.MockContext.getContentResolver () "," Return a ContentResolver instance for your application's package. <br /><br />"
"android.test.mock.MockContext.createDisplayContext (Display display) "," Return a new Context object for the current Context but whose resources are adjusted to match the metrics of the given Display. <br /><br />"
"android.test.mock.MockContext.deleteFile (String name) "," Delete the given private file associated with this Context's application package. <br /><br />"
"android.test.mock.MockContext.getApplicationInfo () "," Return the full application info for this context's package. <br /><br />"
"android.test.mock.MockContext.getAssets () "," Return an AssetManager instance for your application's package. <br /><br />"
"android.test.mock.MockContext.getDatabasePath (String name)   Returns the absolute path on the filesystem where a database created with openOrCreateDatabase (String, int, SQLiteDatabase.CursorFactory) "," Returns the absolute path on the filesystem where a database created with openOrCreateDatabase(String, int, SQLiteDatabase.CursorFactory) is stored. <br /><br />"
"android.test.mock.MockContext.getCodeCacheDir () "," Returns the absolute path to the application specific cache directory on the filesystem designed for storing cached code. <br /><br />"
"android.test.mock.MockContext.stopService (Intent service) "," Request that a given application service be stopped. <br /><br />"
"android.test.mock.MockContext.checkCallingPermission (String permission) "," Determine whether the calling process of an IPC you are handling has been granted a particular permission. <br /><br />"
"android.test.mock.MockContext.registerReceiver (BroadcastReceiver receiver, IntentFilter filter, String broadcastPermission, Handler scheduler) "," Register to receive intent broadcasts, to run in the context of scheduler. <br /><br />"
"android.test.mock.MockContext.getClassLoader () "," Return a class loader you can use to retrieve classes in this package. <br /><br />"
"android.test.mock.MockContext.getSharedPreferences (String name, int mode) "," Retrieve and hold the contents of the preferences file 'name', returning a SharedPreferences through which you can retrieve and modify its values. <br /><br />"
"android.test.mock.MockContext.getFileStreamPath (String name)   Returns the absolute path on the filesystem where a file created with openFileOutput (String, int) "," Returns the absolute path on the filesystem where a file created with openFileOutput(String, int) is stored. <br /><br />"
"android.test.mock.MockContext.bindService (Intent service, ServiceConnection conn, int flags) "," Connect to an application service, creating it if needed. <br /><br />"
"android.test.mock.MockContext.getObbDir ()   Return the primary external storage directory where this application's OBB files  (if there are any) "," Return the primary external storage directory where this application's OBB files (if there are any) can be found. <br /><br />"
"android.test.mock.MockContext.startInstrumentation (ComponentName className, String profileFile, Bundle arguments) "," Start executing an Instrumentation class. <br /><br />"
"android.test.mock.MockContext.setWallpaper (InputStream data)    This method is deprecated. Use WallpaperManager.set () "," This method is deprecated. Use WallpaperManager.set() instead.  This method requires the caller to hold the permission SET_WALLPAPER. <br /><br />"
"android.test.mock.MockContext.databaseList () "," Returns an array of strings naming the private databases associated with this Context's application package. <br /><br />"
"android.test.mock.MockContext.getExternalFilesDirs (String type) "," Returns absolute paths to application-specific directories on all external storage devices where the application can place persistent files it owns. <br /><br />"
"android.test.mock.MockContext.getExternalCacheDir ()   Returns the absolute path to the directory on the primary external filesystem  (that is somewhere on Environment.getExternalStorageDirectory () "," Returns the absolute path to the directory on the primary external filesystem (that is somewhere on Environment.getExternalStorageDirectory() where the application can place cache files it owns. <br /><br />"
"android.test.mock.MockContext.getFilesDir ()   Returns the absolute path to the directory on the filesystem where files created with openFileOutput (String, int) "," Returns the absolute path to the directory on the filesystem where files created with openFileOutput(String, int) are stored. <br /><br />"
"android.test.mock.MockContext.openOrCreateDatabase (String file, int mode, SQLiteDatabase.CursorFactory factory) "," Open a new private SQLiteDatabase associated with this Context's application package. <br /><br />"
"android.test.mock.MockContext.sendOrderedBroadcastAsUser (Intent intent, UserHandle user, String receiverPermission, BroadcastReceiver resultReceiver, Handler scheduler, int initialCode, String initialData, Bundle initialExtras)   Version of sendOrderedBroadcast (Intent, String, BroadcastReceiver, Handler, int, String, Bundle) "," Version of sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String, Bundle) that allows you to specify the user the broadcast will be sent to. <br /><br />"
"android.test.mock.MockContext.startActivity (Intent intent, Bundle options) "," Launch a new activity. <br /><br />"
"android.test.mock.MockContext.getCacheDir () "," Returns the absolute path to the application specific cache directory on the filesystem. <br /><br />"
"android.test.mock.MockContext.getExternalFilesDir (String type)   Returns the absolute path to the directory on the primary external filesystem  (that is somewhere on Environment.getExternalStorageDirectory ()) "," Returns the absolute path to the directory on the primary external filesystem (that is somewhere on Environment.getExternalStorageDirectory()) where the application can place persistent files it owns. <br /><br />"
"android.test.mock.MockContext.sendOrderedBroadcast (Intent intent, String receiverPermission, BroadcastReceiver resultReceiver, Handler scheduler, int initialCode, String initialData, Bundle initialExtras)   Version of sendBroadcast (Intent) "," Version of sendBroadcast(Intent) that allows you to receive data back from the broadcast. <br /><br />"
"android.test.mock.MockContext.checkCallingUriPermission (Uri uri, int modeFlags) "," Determine whether the calling process and user ID has been granted permission to access a specific URI. <br /><br />"
"android.test.mock.MockContext.getDir (String name, int mode) "," Retrieve, creating if needed, a new directory in which the application can place its own custom data files. <br /><br />"
"android.test.mock.MockContext.setWallpaper (Bitmap bitmap)    This method is deprecated. Use WallpaperManager.set () "," This method is deprecated. Use WallpaperManager.set() instead.  This method requires the caller to hold the permission SET_WALLPAPER. <br /><br />"
"android.test.mock.MockContext.startActivity (Intent intent)   Same as startActivity (Intent, Bundle) "," Same as startActivity(Intent, Bundle) with no options specified. <br /><br />"
"android.test.mock.MockContext.getWallpaperDesiredMinimumWidth ()    This method is deprecated. Use WallpaperManager.getDesiredMinimumWidth () "," This method is deprecated. Use WallpaperManager.getDesiredMinimumWidth() instead. <br /><br />"
"android.test.mock.MockContext.startService (Intent service) "," Request that a given application service be started. <br /><br />"
"android.test.mock.MockContext.getTheme () "," Return the Theme object associated with this Context. <br /><br />"
"android.test.mock.MockContext.createPackageContext (String packageName, int flags) "," Return a new Context object for the given application name. <br /><br />"
"android.test.mock.MockContext.sendOrderedBroadcast (Intent intent, String receiverPermission) "," Broadcast the given intent to all interested BroadcastReceivers, delivering them one at a time to allow more preferred receivers to consume the broadcast before it is delivered to less preferred receivers. <br /><br />"
"android.test.mock.MockContext.fileList () "," Returns an array of strings naming the private files associated with this Context's application package. <br /><br />"
"android.test.mock.MockContext.deleteDatabase (String name) "," Delete an existing private SQLiteDatabase associated with this Context's application package. <br /><br />"
"android.test.mock.MockContext.startActivities (Intent[] intents, Bundle options) "," Launch multiple new activities. <br /><br />"
"android.test.mock.MockCursor.getDouble (int columnIndex) "," Returns the value of the requested column as a double. <br /><br />"
"android.test.mock.MockCursor.getColumnName (int columnIndex) "," Returns the column name at the given zero-based column index. <br /><br />"
"android.test.mock.MockCursor.getInt (int columnIndex) "," Returns the value of the requested column as an int. <br /><br />"
"android.test.mock.MockCursor.requery () "," Performs the query that created the cursor again, refreshing its contents. <br /><br />"
"android.test.mock.MockCursor.getWantsAllOnMoveCalls ()   onMove () "," onMove() will only be called across processes if this method returns true. <br /><br />"
"android.test.mock.MockCursor.close () "," Closes the Cursor, releasing all of its resources and making it completely invalid. <br /><br />"
"android.test.mock.MockCursor.getCount () "," Returns the numbers of rows in the cursor. <br /><br />"
"android.test.mock.MockCursor.registerContentObserver (ContentObserver observer) "," Register an observer that is called when changes happen to the content backing this cursor. <br /><br />"
"android.test.mock.MockCursor.isFirst () "," Returns whether the cursor is pointing to the first row. <br /><br />"
"android.test.mock.MockCursor.isNull (int columnIndex) "," Returns true if the value in the indicated column is null. <br /><br />"
"android.test.mock.MockCursor.isBeforeFirst () "," Returns whether the cursor is pointing to the position before the first row. <br /><br />"
"android.test.mock.MockCursor.registerDataSetObserver (DataSetObserver observer)   Register an observer that is called when changes happen to the contents of the this cursors data set, for example, when the data set is changed via requery (), deactivate (), or close () "," Register an observer that is called when changes happen to the contents of the this cursors data set, for example, when the data set is changed via requery(), deactivate(), or close(). <br /><br />"
"android.test.mock.MockCursor.moveToPosition (int position) "," Move the cursor to an absolute position. <br /><br />"
"android.test.mock.MockCursor.isClosed () "," return true if the cursor is closed <br /><br />"
"android.test.mock.MockCursor.getPosition () "," Returns the current position of the cursor in the row set. <br /><br />"
"android.test.mock.MockCursor.setNotificationUri (ContentResolver cr, Uri uri) "," Register to watch a content URI for changes. <br /><br />"
"android.test.mock.MockCursor.getShort (int columnIndex) "," Returns the value of the requested column as a short. <br /><br />"
"android.test.mock.MockCursor.moveToNext () "," Move the cursor to the next row. <br /><br />"
"android.test.mock.MockCursor.getColumnIndex (String columnName) "," Returns the zero-based index for the given column name, or -1 if the column doesn't exist. <br /><br />"
"android.test.mock.MockCursor.moveToLast () "," Move the cursor to the last row. <br /><br />"
"android.test.mock.MockCursor.getColumnNames () "," Returns a string array holding the names of all of the columns in the result set in the order in which they were listed in the result. <br /><br />"
"android.test.mock.MockCursor.deactivate ()   Deactivates the Cursor, making all calls on it fail until requery () "," Deactivates the Cursor, making all calls on it fail until requery() is called. <br /><br />"
"android.test.mock.MockCursor.getNotificationUri ()   Return the URI at which notifications of changes in this Cursor's data will be delivered, as previously set by setNotificationUri (ContentResolver, Uri) "," Return the URI at which notifications of changes in this Cursor's data will be delivered, as previously set by setNotificationUri(ContentResolver, Uri). <br /><br />"
"android.test.mock.MockCursor.isLast () "," Returns whether the cursor is pointing to the last row. <br /><br />"
"android.test.mock.MockCursor.moveToFirst () "," Move the cursor to the first row. <br /><br />"
"android.test.mock.MockCursor.moveToPrevious () "," Move the cursor to the previous row. <br /><br />"
"android.test.mock.MockCursor.getLong (int columnIndex) "," Returns the value of the requested column as a long. <br /><br />"
"android.test.mock.MockCursor.getType (int columnIndex) "," Returns data type of the given column's value. <br /><br />"
"android.test.mock.MockCursor.unregisterContentObserver (ContentObserver observer)   Unregister an observer that has previously been registered with this cursor via registerContentObserver (ContentObserver) "," Unregister an observer that has previously been registered with this cursor via registerContentObserver(ContentObserver). <br /><br />"
"android.test.mock.MockCursor.getBlob (int columnIndex) "," Returns the value of the requested column as a byte array. <br /><br />"
"android.test.mock.MockCursor.getExtras () "," Returns a bundle of extra values. <br /><br />"
"android.test.mock.MockCursor.unregisterDataSetObserver (DataSetObserver observer)   Unregister an observer that has previously been registered with this cursor via registerContentObserver (ContentObserver) "," Unregister an observer that has previously been registered with this cursor via registerContentObserver(ContentObserver). <br /><br />"
"android.test.mock.MockCursor.move (int offset) "," Move the cursor by a relative amount, forward or backward, from the current position. <br /><br />"
"android.test.mock.MockCursor.getColumnCount () "," Return total number of columns <br /><br />"
"android.test.mock.MockCursor.copyStringToBuffer (int columnIndex, CharArrayBuffer buffer) "," Retrieves the requested column text and stores it in the buffer provided. <br /><br />"
"android.test.mock.MockCursor.respond (Bundle extras) "," This is an out-of-band way for the the user of a cursor to communicate with the cursor. <br /><br />"
"android.test.mock.MockCursor.getFloat (int columnIndex) "," Returns the value of the requested column as a float. <br /><br />"
"android.test.mock.MockCursor.getString (int columnIndex) "," Returns the value of the requested column as a String. <br /><br />"
"android.test.mock.MockCursor.isAfterLast () "," Returns whether the cursor is pointing to the position after the last row. <br /><br />"
"android.test.mock.MockCursor.getColumnIndexOrThrow (String columnName) "," Returns the zero-based index for the given column name, or throws IllegalArgumentException if the column doesn't exist. <br /><br />"
"android.test.mock.MockDialogInterface.dismiss () "," no description <br /><br />"
"android.test.mock.MockDialogInterface.cancel () "," no description <br /><br />"
"android.test.mock.MockPackageManager.getInstrumentationInfo (ComponentName className, int flags) "," Retrieve all of the information we know about a particular instrumentation class. <br /><br />"
"android.test.mock.MockPackageManager.getPermissionInfo (String name, int flags) "," Retrieve all of the information we know about a particular permission. <br /><br />"
"android.test.mock.MockPackageManager.getText (String packageName, int resid, ApplicationInfo appInfo) "," Retrieve text from a package. <br /><br />"
"android.test.mock.MockPackageManager.getPackagesHoldingPermissions (String[] permissions, int flags) "," Return a List of all installed packages that are currently holding any of the given permissions. <br /><br />"
"android.test.mock.MockPackageManager.resolveActivity (Intent intent, int flags) "," Determine the best action to perform for a given Intent. <br /><br />"
"android.test.mock.MockPackageManager.getPackageInfo (String packageName, int flags) "," Retrieve overall information about an application package that is installed on the system. <br /><br />"
"android.test.mock.MockPackageManager.getServiceInfo (ComponentName className, int flags) "," Retrieve all of the information we know about a particular service class. <br /><br />"
"android.test.mock.MockPackageManager.getActivityBanner (ComponentName activityName) "," Retrieve the banner associated with an activity. <br /><br />"
"android.test.mock.MockPackageManager.checkSignatures (int uid1, int uid2)   Like checkSignatures (String, String) "," Like checkSignatures(String, String), but takes UIDs of the two packages to be checked. <br /><br />"
"android.test.mock.MockPackageManager.extendVerificationTimeout (int id, int verificationCodeAtTimeout, long millisecondsToDelay) "," Allows a package listening to the package verification broadcast to extend the default timeout for a response and declare what action to perform after the timeout occurs. <br /><br />"
"android.test.mock.MockPackageManager.getReceiverInfo (ComponentName className, int flags) "," Retrieve all of the information we know about a particular receiver class. <br /><br />"
"android.test.mock.MockPackageManager.getApplicationIcon (ApplicationInfo info) "," Retrieve the icon associated with an application. <br /><br />"
"android.test.mock.MockPackageManager.removePermission (String name)   Removes a permission that was previously added with addPermission (PermissionInfo) "," Removes a permission that was previously added with addPermission(PermissionInfo). <br /><br />"
"android.test.mock.MockPackageManager.getActivityIcon (Intent intent) "," Retrieve the icon associated with an Intent. <br /><br />"
"android.test.mock.MockPackageManager.resolveContentProvider (String name, int flags) "," Find a single content provider by its base path name. <br /><br />"
"android.test.mock.MockPackageManager.getSystemAvailableFeatures () "," Get a list of features that are available on the system. <br /><br />"
"android.test.mock.MockPackageManager.queryBroadcastReceivers (Intent intent, int flags) "," Retrieve all receivers that can handle a broadcast of the given intent. <br /><br />"
"android.test.mock.MockPackageManager.getLeanbackLaunchIntentForPackage (String packageName) "," Return a 'good' intent to launch a front-door Leanback activity in a package, for use for example to implement an 'open' button when browsing through packages. <br /><br />"
"android.test.mock.MockPackageManager.getApplicationIcon (String packageName) "," Retrieve the icon associated with an application. <br /><br />"
"android.test.mock.MockPackageManager.getApplicationInfo (String packageName, int flags) "," Retrieve all of the information we know about a particular package/application. <br /><br />"
"android.test.mock.MockPackageManager.queryIntentServices (Intent intent, int flags) "," Retrieve all services that can match the given intent. <br /><br />"
"android.test.mock.MockPackageManager.setApplicationEnabledSetting (String packageName, int newState, int flags) "," Set the enabled setting for an application This setting will override any enabled state which may have been set by the application in its manifest. <br /><br />"
"android.test.mock.MockPackageManager.queryPermissionsByGroup (String group, int flags) "," Query for all of the permissions associated with a particular group. <br /><br />"
"android.test.mock.MockPackageManager.addPermission (PermissionInfo info) "," Add a new dynamic permission to the system. <br /><br />"
"android.test.mock.MockPackageManager.getInstalledApplications (int flags) "," Return a List of all application packages that are installed on the device. <br /><br />"
"android.test.mock.MockPackageManager.getActivityLogo (ComponentName activityName) "," Retrieve the logo associated with an activity. <br /><br />"
"android.test.mock.MockPackageManager.addPermissionAsync (PermissionInfo info)   Like addPermission (PermissionInfo) "," Like addPermission(PermissionInfo) but asynchronously persists the package manager state after returning from the call, allowing it to return quicker and batch a series of adds at the expense of no guarantee the added permission will be retained if the device is rebooted before it is written. <br /><br />"
"android.test.mock.MockPackageManager.getActivityInfo (ComponentName className, int flags) "," Retrieve all of the information we know about a particular activity class. <br /><br />"
"android.test.mock.MockPackageManager.getApplicationEnabledSetting (String packageName) "," Return the enabled setting for an application. <br /><br />"
"android.test.mock.MockPackageManager.resolveService (Intent intent, int flags) "," Determine the best service to handle for a given Intent. <br /><br />"
"android.test.mock.MockPackageManager.queryInstrumentation (String targetPackage, int flags) "," Retrieve information about available instrumentation code. <br /><br />"
"android.test.mock.MockPackageManager.getProviderInfo (ComponentName className, int flags) "," Retrieve all of the information we know about a particular content provider class. <br /><br />"
"android.test.mock.MockPackageManager.getPreferredPackages (int flags) "," Retrieve the list of all currently configured preferred packages. <br /><br />"
"android.test.mock.MockPackageManager.getPackageGids (String packageName) "," Return an array of all of the secondary group-ids that have been assigned to a package. <br /><br />"
"android.test.mock.MockPackageManager.getPreferredActivities (List< IntentFilter> outFilters, List< ComponentName> outActivities, String packageName)   Retrieve all preferred activities, previously added with addPreferredActivity (IntentFilter, int, ComponentName[], ComponentName) "," Retrieve all preferred activities, previously added with addPreferredActivity(IntentFilter, int, ComponentName[], ComponentName), that are currently registered with the system. <br /><br />"
"android.test.mock.MockPackageManager.setInstallerPackageName (String targetPackage, String installerPackageName) "," Change the installer associated with a given package. <br /><br />"
"android.test.mock.MockPackageManager.getXml (String packageName, int resid, ApplicationInfo appInfo) "," Retrieve an XML file from a package. <br /><br />"
"android.test.mock.MockPackageManager.getInstalledPackages (int flags) "," Return a List of all packages that are installed on the device. <br /><br />"
"android.test.mock.MockPackageManager.getActivityBanner (Intent intent) "," Retrieve the banner associated with an Intent. <br /><br />"
"android.test.mock.MockPackageManager.queryIntentActivityOptions (ComponentName caller, Intent[] specifics, Intent intent, int flags) "," Retrieve a set of activities that should be presented to the user as similar options. <br /><br />"
"android.test.mock.MockPackageManager.getInstallerPackageName (String packageName) "," Retrieve the package name of the application that installed a package. <br /><br />"
"android.test.mock.MockPackageManager.setComponentEnabledSetting (ComponentName componentName, int newState, int flags)   Set the enabled setting for a package component  (activity, receiver, service, provider) "," Set the enabled setting for a package component (activity, receiver, service, provider). <br /><br />"
"android.test.mock.MockPackageManager.getActivityLogo (Intent intent) "," Retrieve the logo associated with an Intent. <br /><br />"
"android.test.mock.MockPackageManager.queryContentProviders (String processName, int uid, int flags) "," Retrieve content provider information. <br /><br />"
"android.test.mock.MockPackageManager.checkSignatures (String pkg1, String pkg2) "," Compare the signatures of two packages to determine if the same signature appears in both of them. <br /><br />"
"android.test.mock.MockPackageManager.getDefaultActivityIcon () "," Return the generic icon for an activity that is used when no specific icon is defined. <br /><br />"
"android.test.mock.MockPackageManager.getPackageArchiveInfo (String archiveFilePath, int flags) "," Retrieve overall information about an application package defined in a package archive file <br /><br />"
"android.test.mock.MockPackageManager.addPreferredActivity (IntentFilter filter, int match, ComponentName[] set, ComponentName activity)    This method is deprecated. This is a protected API that should not have been available to third party applications. It is the platform's responsibility for assigning preferred activities and this cannot be directly modified. Add a new preferred activity mapping to the system. This will be used to automatically select the given activity component when Context.startActivity () "," This method is deprecated. This is a protected API that should not have been available to third party applications. It is the platform's responsibility for assigning preferred activities and this cannot be directly modified. Add a new preferred activity mapping to the system. This will be used to automatically select the given activity component when Context.startActivity() finds multiple matching activities and also matches the given filter. <br /><br />"
"android.test.mock.MockPackageManager.getAllPermissionGroups (int flags) "," Retrieve all of the known permission groups in the system. <br /><br />"
"android.test.mock.MockPackageManager.removePackageFromPreferred (String packageName)    This method is deprecated. This function no longer does anything; it was an old approach to managing preferred activities, which has been superseded by  (and conflicts with) "," This method is deprecated. This function no longer does anything; it was an old approach to managing preferred activities, which has been superseded by (and conflicts with) the modern activity-based preferences. <br /><br />"
"android.test.mock.MockPackageManager.getPermissionGroupInfo (String name, int flags) "," Retrieve all of the information we know about a particular group of permissions. <br /><br />"
"android.test.mock.MockPackageManager.getActivityIcon (ComponentName activityName) "," Retrieve the icon associated with an activity. <br /><br />"
"android.test.mock.MockPackageManager.clearPackagePreferredActivities (String packageName)   Remove all preferred activity mappings, previously added with addPreferredActivity (IntentFilter, int, ComponentName[], ComponentName) "," Remove all preferred activity mappings, previously added with addPreferredActivity(IntentFilter, int, ComponentName[], ComponentName), from the system whose activities are implemented in the given package name. <br /><br />"
"android.test.mock.MockPackageManager.getApplicationLogo (ApplicationInfo info) "," Retrieve the logo associated with an application. <br /><br />"
"android.test.mock.MockPackageManager.getLaunchIntentForPackage (String packageName) "," Returns a 'good' intent to launch a front-door activity in a package. <br /><br />"
"android.test.mock.MockPackageManager.queryIntentContentProviders (Intent intent, int flags) "," Retrieve all providers that can match the given intent. <br /><br />"
"android.test.mock.MockPackageManager.verifyPendingInstall (int id, int verificationCode) "," Allows a package listening to the package verification broadcast to respond to the package manager. <br /><br />"
"android.test.mock.MockPackageManager.getApplicationLabel (ApplicationInfo info) "," Return the label to use for this application. <br /><br />"
"android.test.mock.MockPackageManager.getNameForUid (int uid) "," Retrieve the official name associated with a user id. <br /><br />"
"android.test.mock.MockPackageManager.hasSystemFeature (String name)   Check whether the given feature name is one of the available features as returned by getSystemAvailableFeatures () "," Check whether the given feature name is one of the available features as returned by getSystemAvailableFeatures(). <br /><br />"
"android.test.mock.MockPackageManager.getApplicationBanner (ApplicationInfo info) "," Retrieve the banner associated with an application. <br /><br />"
"android.test.mock.MockPackageManager.getPackagesForUid (int uid) "," Retrieve the names of all packages that are associated with a particular user id. <br /><br />"
"android.test.mock.MockPackageManager.getUserBadgedDrawableForDensity (Drawable drawable, UserHandle user, Rect badgeLocation, int badgeDensity) "," If the target user is a managed profile of the calling user or the caller is itself a managed profile, then this returns a badged copy of the given drawable allowing the user to distinguish it from the original drawable. <br /><br />"
"android.test.mock.MockPackageManager.checkPermission (String permName, String pkgName) "," Check whether a particular package has been granted a particular permission. <br /><br />"
"android.test.mock.MockPackageManager.getResourcesForApplication (ApplicationInfo app) "," Retrieve the resources for an application. <br /><br />"
"android.test.mock.MockPackageManager.getApplicationBanner (String packageName) "," Retrieve the banner associated with an application. <br /><br />"
"android.test.mock.MockPackageManager.getComponentEnabledSetting (ComponentName componentName)   Return the enabled setting for a package component  (activity, receiver, service, provider) "," Return the enabled setting for a package component (activity, receiver, service, provider). <br /><br />"
"android.test.mock.MockPackageManager.getUserBadgedIcon (Drawable icon, UserHandle user) "," If the target user is a managed profile of the calling user or the caller is itself a managed profile, then this returns a badged copy of the given icon to be able to distinguish it from the original icon. <br /><br />"
"android.test.mock.MockPackageManager.getSystemSharedLibraryNames () "," Get a list of shared libraries that are available on the system. <br /><br />"
"android.test.mock.MockPackageManager.currentToCanonicalPackageNames (String[] names) "," Map from the current package names in use on the device to whatever the current canonical name of that package is. <br /><br />"
"android.test.mock.MockPackageManager.getDrawable (String packageName, int resid, ApplicationInfo appInfo) "," Retrieve an image from a package. <br /><br />"
"android.test.mock.MockPackageManager.getResourcesForApplication (String appPackageName) "," Retrieve the resources associated with an application. <br /><br />"
"android.test.mock.MockPackageManager.canonicalToCurrentPackageNames (String[] names) "," Map from a packages canonical name to the current name in use on the device. <br /><br />"
"android.test.mock.MockPackageManager.queryIntentActivities (Intent intent, int flags) "," Retrieve all activities that can be performed for the given intent. <br /><br />"
"android.test.mock.MockPackageManager.addPackageToPreferred (String packageName)    This method is deprecated. This function no longer does anything; it was an old approach to managing preferred activities, which has been superseded by  (and conflicts with) "," This method is deprecated. This function no longer does anything; it was an old approach to managing preferred activities, which has been superseded by (and conflicts with) the modern activity-based preferences. <br /><br />"
"android.test.mock.MockPackageManager.getApplicationLogo (String packageName) "," Retrieve the logo associated with an application. <br /><br />"
"android.test.mock.MockPackageManager.getResourcesForActivity (ComponentName activityName) "," Retrieve the resources associated with an activity. <br /><br />"
"android.test.mock.MockPackageManager.isSafeMode () "," Return whether the device has been booted into safe mode. <br /><br />"
"android.test.mock.MockPackageManager.getUserBadgedLabel (CharSequence label, UserHandle user) "," If the target user is a managed profile of the calling user or the caller is itself a managed profile, then this returns a copy of the label with badging for accessibility services like talkback. <br /><br />"
"android.test.mock.MockResources.getValue (String name, TypedValue outValue, boolean resolveRefs) "," Return the raw data associated with a particular resource ID. <br /><br />"
"android.test.mock.MockResources.getDimensionPixelSize (int id) "," Retrieve a dimensional for a particular resource ID for use as a size in raw pixels. <br /><br />"
"android.test.mock.MockResources.getResourceEntryName (int resid) "," Return the entry name for a given resource identifier. <br /><br />"
"android.test.mock.MockResources.getQuantityText (int id, int quantity) "," Returns the character sequence necessary for grammatically correct pluralization of the given resource ID for the given quantity. <br /><br />"
"android.test.mock.MockResources.getStringArray (int id) "," Return the string array associated with a particular resource ID. <br /><br />"
"android.test.mock.MockResources.getLayout (int id) "," Return an XmlResourceParser through which you can read a view layout description for the given resource ID. <br /><br />"
"android.test.mock.MockResources.getIntArray (int id) "," Return the int array associated with a particular resource ID. <br /><br />"
"android.test.mock.MockResources.getTextArray (int id) "," Return the styled text array associated with a particular resource ID. <br /><br />"
"android.test.mock.MockResources.getString (int id) "," Return the string value associated with a particular resource ID. It will be stripped of any styled text information. <br /><br />"
"android.test.mock.MockResources.getMovie (int id) "," Return a movie object associated with the particular resource ID. <br /><br />"
"android.test.mock.MockResources.openRawResource (int id) "," Open a data stream for reading a raw resource. <br /><br />"
"android.test.mock.MockResources.getConfiguration () "," Return the current configuration that is in effect for this resource object. <br /><br />"
"android.test.mock.MockResources.getResourceTypeName (int resid) "," Return the type name for a given resource identifier. <br /><br />"
"android.test.mock.MockResources.openRawResourceFd (int id) "," Open a file descriptor for reading a raw resource. <br /><br />"
"android.test.mock.MockResources.getAnimation (int id) "," Return an XmlResourceParser through which you can read an animation description for the given resource ID. <br /><br />"
"android.test.mock.MockResources.getQuantityString (int id, int quantity, Object... formatArgs) "," Formats the string necessary for grammatically correct pluralization of the given resource ID for the given quantity, using the given arguments. <br /><br />"
"android.test.mock.MockResources.getIdentifier (String name, String defType, String defPackage) "," Return a resource identifier for the given resource name. <br /><br />"
"android.test.mock.MockResources.obtainTypedArray (int id) "," Return an array of heterogeneous values. <br /><br />"
"android.test.mock.MockResources.getText (int id, CharSequence def) "," Return the string value associated with a particular resource ID. <br /><br />"
"android.test.mock.MockResources.getColor (int id) "," Return a color integer associated with a particular resource ID. <br /><br />"
"android.test.mock.MockResources.getResourcePackageName (int resid) "," Return the package name for a given resource identifier. <br /><br />"
"android.test.mock.MockResources.getXml (int id) "," Return an XmlResourceParser through which you can read a generic XML resource for the given resource ID. <br /><br />"
"android.test.mock.MockResources.getText (int id) "," Return the string value associated with a particular resource ID. The returned object will be a String if this is a plain string; it will be some other type of CharSequence if it is styled. <br /><br />"
"android.test.mock.MockResources.getInteger (int id) "," Return an integer associated with a particular resource ID. <br /><br />"
"android.test.mock.MockResources.getDrawable (int id)    This method is deprecated. Use getDrawable (int, Theme) "," This method is deprecated. Use getDrawable(int, Theme) instead. <br /><br />"
"android.test.mock.MockResources.getValue (int id, TypedValue outValue, boolean resolveRefs) "," Return the raw data associated with a particular resource ID. <br /><br />"
"android.test.mock.MockResources.getColorStateList (int id) "," Return a color state list associated with a particular resource ID. <br /><br />"
"android.test.mock.MockResources.getResourceName (int resid) "," Return the full name for a given resource identifier. <br /><br />"
"android.test.mock.MockResources.getDimensionPixelOffset (int id) "," Retrieve a dimensional for a particular resource ID for use as an offset in raw pixels. <br /><br />"
"android.test.mock.MockResources.getDimension (int id) "," Retrieve a dimensional for a particular resource ID. <br /><br />"
"android.test.mock.MockResources.getString (int id, Object... formatArgs)   Return the string value associated with a particular resource ID, substituting the format arguments as defined in Formatter and format (String, Object...) "," Return the string value associated with a particular resource ID, substituting the format arguments as defined in Formatter and format(String, Object...). It will be stripped of any styled text information. <br /><br />"
"android.test.mock.MockResources.obtainAttributes (AttributeSet set, int[] attrs) "," Retrieve a set of basic attribute values from an AttributeSet, not performing styling of them using a theme and/or style resources. <br /><br />"
"android.test.mock.MockResources.getQuantityString (int id, int quantity) "," Returns the string necessary for grammatically correct pluralization of the given resource ID for the given quantity. <br /><br />"
"android.test.mock.MockResources.updateConfiguration (Configuration config, DisplayMetrics metrics) "," Store the newly updated configuration. <br /><br />"
"android.test.mock.MockResources.getDisplayMetrics () "," Return the current display metrics that are in effect for this resource object. <br /><br />"
"android.test.MoreAsserts.assertEmpty (Iterable<?> iterable)   Variant of assertEmpty (String, Iterable) "," Variant of assertEmpty(String, Iterable) using a generic message. <br /><br />"
"android.test.MoreAsserts.assertEquals (String message, double[] expected, double[] actual) "," Asserts that array actual is the same size and every element equals those in array expected. <br /><br />"
"android.test.MoreAsserts.assertEmpty (String message, Iterable<?> iterable) "," Asserts that iterable is empty. <br /><br />"
"android.test.MoreAsserts.assertContentsInOrder (String message, Iterable<?> actual, Object... expected) "," Asserts that actual contains precisely the elements expected, and in the same order. <br /><br />"
"android.test.MoreAsserts.assertNotContainsRegex (String expectedRegex, String actual)   Variant of assertNotContainsRegex (String, String, String) "," Variant of assertNotContainsRegex(String, String, String) using a generic message. <br /><br />"
"android.test.MoreAsserts.assertNotEqual (String message, Object unexpected, Object actual)   Asserts that actual is not equal unexpected, according to both == and equals (Object) "," Asserts that actual is not equal unexpected, according to both == and equals(Object). <br /><br />"
"android.test.MoreAsserts.assertContainsRegex (String expectedRegex, String actual)   Variant of assertContainsRegex (String, String, String) "," Variant of assertContainsRegex(String, String, String) using a generic message. <br /><br />"
"android.test.MoreAsserts.assertAssignableFrom (Class<?> expected, Class<?> actual) "," Asserts that class expected is assignable from the class actual. <br /><br />"
"android.test.MoreAsserts.assertEquals (double[] expected, double[] actual) "," Asserts that array actual is the same size and every element equals those in array expected. <br /><br />"
"android.test.MoreAsserts.assertContentsInOrder (Iterable<?> actual, Object... expected)   Variant of assertContentsInOrder (String, Iterable , Object...) "," Variant of assertContentsInOrder(String, Iterable , Object...) using a generic message. <br /><br />"
"android.test.MoreAsserts.assertEquals (Set<? extends  Object> expected, Set<? extends  Object> actual) "," Asserts that two sets contain the same elements. <br /><br />"
"android.test.MoreAsserts.assertEquals (String message, Set<? extends  Object> expected, Set<? extends  Object> actual) "," Asserts that two sets contain the same elements. <br /><br />"
"android.test.MoreAsserts.assertMatchesRegex (String message, String expectedRegex, String actual) "," Asserts that expectedRegex exactly matches actual and fails with message if it does not. <br /><br />"
"android.test.MoreAsserts.assertContentsInAnyOrder (String message, Iterable<?> actual, Object... expected) "," Asserts that actual contains precisely the elements expected, but in any order. <br /><br />"
"android.test.MoreAsserts.assertContentsInAnyOrder (Iterable<?> actual, Object... expected)   Variant of assertContentsInAnyOrder (String, Iterable , Object...) "," Variant of assertContentsInAnyOrder(String, Iterable , Object...) using a generic message. <br /><br />"
"android.test.MoreAsserts.assertMatchesRegex (String expectedRegex, String actual)   Variant of assertMatchesRegex (String, String, String) "," Variant of assertMatchesRegex(String, String, String) using a generic message. <br /><br />"
"android.test.MoreAsserts.assertNotMatchesRegex (String message, String expectedRegex, String actual) "," Asserts that expectedRegex does not exactly match actual, and fails with message if it does. <br /><br />"
"android.test.MoreAsserts.checkEqualsAndHashCodeMethods (String message, Object lhs, Object rhs, boolean expectedResult)   Utility for testing equals () and hashCode () "," Utility for testing equals() and hashCode() results at once. <br /><br />"
"android.test.MoreAsserts.assertEmpty (Map<?, ?> map)   Variant of assertEmpty (String, Map) "," Variant of assertEmpty(String, Map) using a generic message. <br /><br />"
"android.test.MoreAsserts.assertNotEmpty (Iterable<?> iterable)   Variant of assertNotEmpty (String, Iterable ) "," Variant of assertNotEmpty(String, Iterable ) using a generic message. <br /><br />"
"android.test.MoreAsserts.assertEquals (int[] expected, int[] actual) "," Asserts that array actual is the same size and every element equals those in array expected. <br /><br />"
"android.test.MoreAsserts.assertNotEmpty (String message, Iterable<?> iterable) "," Asserts that iterable is not empty. <br /><br />"
"android.test.MoreAsserts.assertNotEmpty (Map<?, ?> map)   Variant of assertNotEmpty (String, Map) "," Variant of assertNotEmpty(String, Map) using a generic message. <br /><br />"
"android.test.MoreAsserts.assertEquals (Object[] expected, Object[] actual) "," Asserts that array actual is the same size and every element is the same as those in array expected. <br /><br />"
"android.test.MoreAsserts.assertNotContainsRegex (String message, String expectedRegex, String actual) "," Asserts that expectedRegex does not match any substring of actual, and fails with message if it does. <br /><br />"
"android.test.MoreAsserts.assertNotEmpty (String message, Map<?, ?> map) "," Asserts that map is not empty. <br /><br />"
"android.test.MoreAsserts.assertContainsRegex (String message, String expectedRegex, String actual) "," Asserts that expectedRegex matches any substring of actual and fails with message if it does not. <br /><br />"
"android.test.MoreAsserts.assertNotEqual (Object unexpected, Object actual)   Variant of assertNotEqual (String, Object, Object) "," Variant of assertNotEqual(String, Object, Object) using a generic message. <br /><br />"
"android.test.MoreAsserts.assertAssignableFrom (Class<?> expected, Object actual) "," Asserts that the class expected is assignable from the object actual. <br /><br />"
"android.test.MoreAsserts.checkEqualsAndHashCodeMethods (Object lhs, Object rhs, boolean expectedResult)   Variant of checkEqualsAndHashCodeMethods (String,Object,Object,boolean...) "," Variant of checkEqualsAndHashCodeMethods(String,Object,Object,boolean...)} using a generic message. <br /><br />"
"android.test.MoreAsserts.assertEmpty (String message, Map<?, ?> map) "," Asserts that map is empty. <br /><br />"
"android.test.MoreAsserts.assertEquals (String message, int[] expected, int[] actual) "," Asserts that array actual is the same size and every element equals those in array expected. <br /><br />"
"android.test.MoreAsserts.assertEquals (String message, byte[] expected, byte[] actual) "," Asserts that array actual is the same size and every element equals those in array expected. <br /><br />"
"android.test.MoreAsserts.assertEquals (String message, Object[] expected, Object[] actual) "," Asserts that array actual is the same size and every element is the same as those in array expected. <br /><br />"
"android.test.MoreAsserts.assertEquals (byte[] expected, byte[] actual) "," Asserts that array actual is the same size and every element equals those in array expected. <br /><br />"
"android.test.MoreAsserts.assertNotMatchesRegex (String expectedRegex, String actual)   Variant of assertNotMatchesRegex (String, String, String) "," Variant of assertNotMatchesRegex(String, String, String) using a generic message. <br /><br />"
"android.test.PerformanceTestCase.Intermediates.addIntermediate (String name, long timeInNS) "," no description <br /><br />"
"android.test.PerformanceTestCase.Intermediates.addIntermediate (String name) "," no description <br /><br />"
"android.test.PerformanceTestCase.Intermediates.startTiming (boolean realTime) "," no description <br /><br />"
"android.test.PerformanceTestCase.Intermediates.setInternalIterations (int count) "," no description <br /><br />"
"android.test.PerformanceTestCase.Intermediates.finishTiming (boolean realTime) "," no description <br /><br />"
"android.test.ProviderTestCase<T extends android.content.ContentProvider>.getProvider () "," no description <br /><br />"
"android.test.ProviderTestCase<T extends android.content.ContentProvider>.newResolverWithContentProviderFromSql (Context targetContext, Class<T> providerClass, String authority, String databaseName, int databaseVersion, String sql) "," no description <br /><br />"
"android.test.ProviderTestCase<T extends android.content.ContentProvider>.getMockContentResolver () "," no description <br /><br />"
"android.test.ProviderTestCase<T extends android.content.ContentProvider>.getMockContext () "," no description <br /><br />"
"android.test.ProviderTestCase2<T extends android.content.ContentProvider>.newResolverWithContentProviderFromSql (Context targetContext, String filenamePrefix, Class<T> providerClass, String authority, String databaseName, int databaseVersion, String sql) "," Creates a new content provider of the same type as that passed to the test case class, with an authority name set to the authority parameter, and using an SQLite database as the underlying data source. <br /><br />"
"android.test.ProviderTestCase2<T extends android.content.ContentProvider>.getMockContentResolver () "," Gets the MockContentResolver created by this class during initialization. <br /><br />"
"android.test.ProviderTestCase2<T extends android.content.ContentProvider>.getProvider ()   Returns the content provider created by this class in the setUp () "," Returns the content provider created by this class in the setUp() method. <br /><br />"
"android.test.ProviderTestCase2<T extends android.content.ContentProvider>.getMockContext () "," Gets the IsolatedContext created by this class during initialization. <br /><br />"
"android.test.RenamingDelegatingContext.openOrCreateDatabase (String name, int mode, SQLiteDatabase.CursorFactory factory, DatabaseErrorHandler errorHandler) "," Open a new private SQLiteDatabase associated with this Context's application package. <br /><br />"
"android.test.RenamingDelegatingContext.providerWithRenamedContext (Class<T> contentProvider, Context c, String filePrefix) "," no description <br /><br />"
"android.test.RenamingDelegatingContext.openOrCreateDatabase (String name, int mode, SQLiteDatabase.CursorFactory factory) "," Open a new private SQLiteDatabase associated with this Context's application package. <br /><br />"
"android.test.RenamingDelegatingContext.providerWithRenamedContext (Class<T> contentProvider, Context c, String filePrefix, boolean allowAccessToExistingFilesAndDbs) "," no description <br /><br />"
"android.test.RenamingDelegatingContext.getCacheDir ()   In order to support calls to getCacheDir (), we create a temp cache dir  (inside the real one) "," In order to support calls to getCacheDir(), we create a temp cache dir (inside the real one) and return it instead. <br /><br />"
"android.test.RenamingDelegatingContext.deleteFile (String name) "," Delete the given private file associated with this Context's application package. <br /><br />"
"android.test.RenamingDelegatingContext.openFileOutput (String name, int mode) "," Open a private file associated with this Context's application package for writing. <br /><br />"
"android.test.RenamingDelegatingContext.getDatabasePath (String name)   Returns the absolute path on the filesystem where a database created with openOrCreateDatabase (String, int, SQLiteDatabase.CursorFactory) "," Returns the absolute path on the filesystem where a database created with openOrCreateDatabase(String, int, SQLiteDatabase.CursorFactory) is stored. <br /><br />"
"android.test.RenamingDelegatingContext.openFileInput (String name) "," Open a private file associated with this Context's application package for reading. <br /><br />"
"android.test.RenamingDelegatingContext.getFileStreamPath (String name)   Returns the absolute path on the filesystem where a file created with openFileOutput (String, int) "," Returns the absolute path on the filesystem where a file created with openFileOutput(String, int) is stored. <br /><br />"
"android.test.RenamingDelegatingContext.deleteDatabase (String name) "," Delete an existing private SQLiteDatabase associated with this Context's application package. <br /><br />"
"android.test.RenamingDelegatingContext.fileList () "," Returns an array of strings naming the private files associated with this Context's application package. <br /><br />"
"android.test.RenamingDelegatingContext.getDatabasePrefix () "," no description <br /><br />"
"android.test.RenamingDelegatingContext.makeExistingFilesAndDbsAccessible () "," Makes accessible all files and databases whose names match the filePrefix that was passed to the constructor. <br /><br />"
"android.test.RenamingDelegatingContext.databaseList () "," Returns an array of strings naming the private databases associated with this Context's application package. <br /><br />"
"android.test.ServiceTestCase<T extends android.app.Service>.getSystemContext ()   Returns the real system context that is saved by setUp () "," Returns the real system context that is saved by setUp(). <br /><br />"
"android.test.ServiceTestCase<T extends android.app.Service>.testServiceTestCaseSetUpProperly ()   Tests that setupService () runs correctly and issues an assertNotNull (String, Object) "," Tests that setupService() runs correctly and issues an assertNotNull(String, Object) if it does. <br /><br />"
"android.test.ServiceTestCase<T extends android.app.Service>.getApplication () "," Returns the Application object in use by the service under test. <br /><br />"
"android.test.ServiceTestCase<T extends android.app.Service>.getService () "," no description <br /><br />"
"android.test.ServiceTestCase<T extends android.app.Service>.setApplication (Application application) "," Sets the application that is used during the test. <br /><br />"
"android.test.SingleLaunchActivityTestCase<T extends android.app.Activity>.getActivity () "," no description <br /><br />"
"android.test.SingleLaunchActivityTestCase<T extends android.app.Activity>.testActivityTestCaseSetUpProperly () "," no description <br /><br />"
"android.test.suitebuilder.TestMethod.getName () "," no description <br /><br />"
"android.test.suitebuilder.TestMethod.getAnnotation (Class<T> annotationClass) "," no description <br /><br />"
"android.test.suitebuilder.TestMethod.createTest () "," no description <br /><br />"
"android.test.suitebuilder.TestMethod.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.test.suitebuilder.TestMethod.getEnclosingClassname () "," no description <br /><br />"
"android.test.suitebuilder.TestMethod.getEnclosingClass () "," no description <br /><br />"
"android.test.suitebuilder.TestMethod.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.test.suitebuilder.TestMethod.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.test.suitebuilder.TestSuiteBuilder.FailedToCreateTests.testSuiteConstructionFailed () "," no description <br /><br />"
"android.test.suitebuilder.TestSuiteBuilder.excludePackages (String... packageNames) "," Exclude all tests in the given packages and all sub-packages, unless otherwise specified. <br /><br />"
"android.test.suitebuilder.TestSuiteBuilder.includeAllPackagesUnderHere () "," Include all junit tests that satisfy the requirements in the calling class' package and all sub-packages. <br /><br />"
"android.test.suitebuilder.TestSuiteBuilder.addRequirements (Predicate...< TestMethod> predicates) "," Exclude tests that fail to satisfy all of the given predicates. <br /><br />"
"android.test.suitebuilder.TestSuiteBuilder.addRequirements (List<Predicate< TestMethod>> predicates) "," Exclude tests that fail to satisfy all of the given predicates. <br /><br />"
"android.test.suitebuilder.TestSuiteBuilder.build () "," Call this method once you've configured your builder as desired. <br /><br />"
"android.test.suitebuilder.TestSuiteBuilder.named (String newSuiteName) "," Override the default name for the suite being built. <br /><br />"
"android.test.suitebuilder.TestSuiteBuilder.includePackages (String... packageNames) "," Include all tests that satisfy the requirements in the given packages and all sub-packages, unless otherwise specified. <br /><br />"
"android.test.TestSuiteProvider.getTestSuite () "," no description <br /><br />"
"android.test.TouchUtils.touchAndCancelView (InstrumentationTestCase test, View v)   Simulate touching the center of a view and cancelling  (so no onClick should fire, etc) "," Simulate touching the center of a view and cancelling (so no onClick should fire, etc). <br /><br />"
"android.test.TouchUtils.dragViewBy (ActivityInstrumentationTestCase test, View v, int gravity, int deltaX, int deltaY) "," This method was deprecated in API level 3. ActivityInstrumentationTestCase is deprecated in favor of ActivityInstrumentationTestCase2, which provides more options for configuring the Activity under test <br /><br />"
"android.test.TouchUtils.tapView (InstrumentationTestCase test, View v)   Simulate touching the center of a view and releasing quickly  (before the tap timeout) "," Simulate touching the center of a view and releasing quickly (before the tap timeout). <br /><br />"
"android.test.TouchUtils.dragViewToBottom (ActivityInstrumentationTestCase test, View v) "," This method was deprecated in API level 3. ActivityInstrumentationTestCase is deprecated in favor of ActivityInstrumentationTestCase2, which provides more options for configuring the Activity under test <br /><br />"
"android.test.TouchUtils.dragViewToTop (InstrumentationTestCase test, View v, int stepCount) "," Simulate touching the center of a view and dragging to the top of the screen. <br /><br />"
"android.test.TouchUtils.clickView (InstrumentationTestCase test, View v) "," Simulate touching the center of a view and releasing. <br /><br />"
"android.test.TouchUtils.dragViewToTop (InstrumentationTestCase test, View v) "," Simulate touching the center of a view and dragging to the top of the screen. <br /><br />"
"android.test.TouchUtils.dragViewToBottom (InstrumentationTestCase test, Activity activity, View v) "," Simulate touching the center of a view and dragging to the bottom of the screen. <br /><br />"
"android.test.TouchUtils.dragViewToBottom (InstrumentationTestCase test, Activity activity, View v, int stepCount) "," Simulate touching the center of a view and dragging to the bottom of the screen. <br /><br />"
"android.test.TouchUtils.drag (ActivityInstrumentationTestCase test, float fromX, float toX, float fromY, float toY, int stepCount) "," This method was deprecated in API level 3. ActivityInstrumentationTestCase is deprecated in favor of ActivityInstrumentationTestCase2, which provides more options for configuring the Activity under test <br /><br />"
"android.test.TouchUtils.dragViewToX (ActivityInstrumentationTestCase test, View v, int gravity, int toX) "," This method was deprecated in API level 3. ActivityInstrumentationTestCase is deprecated in favor of ActivityInstrumentationTestCase2, which provides more options for configuring the Activity under test <br /><br />"
"android.test.TouchUtils.dragQuarterScreenDown (ActivityInstrumentationTestCase test) "," This method was deprecated in API level 3. ActivityInstrumentationTestCase is deprecated in favor of ActivityInstrumentationTestCase2, which provides more options for configuring the Activity under test <br /><br />"
"android.test.TouchUtils.dragQuarterScreenDown (InstrumentationTestCase test, Activity activity) "," Simulate touching in the center of the screen and dragging one quarter of the way down <br /><br />"
"android.test.TouchUtils.scrollToBottom (ActivityInstrumentationTestCase test, ViewGroup v) "," This method was deprecated in API level 3. ActivityInstrumentationTestCase is deprecated in favor of ActivityInstrumentationTestCase2, which provides more options for configuring the Activity under test <br /><br />"
"android.test.TouchUtils.longClickView (ActivityInstrumentationTestCase test, View v) "," This method was deprecated in API level 3. ActivityInstrumentationTestCase is deprecated in favor of ActivityInstrumentationTestCase2, which provides more options for configuring the Activity under test <br /><br />"
"android.test.TouchUtils.dragViewToY (InstrumentationTestCase test, View v, int gravity, int toY) "," Simulate touching a view and dragging it to a specified location. <br /><br />"
"android.test.TouchUtils.dragQuarterScreenUp (ActivityInstrumentationTestCase test) "," This method was deprecated in API level 3. ActivityInstrumentationTestCase is deprecated in favor of ActivityInstrumentationTestCase2, which provides more options for configuring the Activity under test <br /><br />"
"android.test.TouchUtils.scrollToTop (ActivityInstrumentationTestCase test, ViewGroup v) "," This method was deprecated in API level 3. ActivityInstrumentationTestCase is deprecated in favor of ActivityInstrumentationTestCase2, which provides more options for configuring the Activity under test <br /><br />"
"android.test.TouchUtils.dragViewToBottom (ActivityInstrumentationTestCase test, View v, int stepCount) "," This method was deprecated in API level 3. ActivityInstrumentationTestCase is deprecated in favor of ActivityInstrumentationTestCase2, which provides more options for configuring the Activity under test <br /><br />"
"android.test.TouchUtils.scrollToBottom (InstrumentationTestCase test, Activity activity, ViewGroup v)   Scroll a ViewGroup to the bottom by repeatedly calling dragQuarterScreenUp (InstrumentationTestCase, Activity) "," Scroll a ViewGroup to the bottom by repeatedly calling dragQuarterScreenUp(InstrumentationTestCase, Activity) <br /><br />"
"android.test.TouchUtils.dragViewToX (InstrumentationTestCase test, View v, int gravity, int toX) "," Simulate touching a view and dragging it to a specified location. <br /><br />"
"android.test.TouchUtils.dragViewToY (ActivityInstrumentationTestCase test, View v, int gravity, int toY) "," This method was deprecated in API level 3. ActivityInstrumentationTestCase is deprecated in favor of ActivityInstrumentationTestCase2, which provides more options for configuring the Activity under test <br /><br />"
"android.test.TouchUtils.dragQuarterScreenUp (InstrumentationTestCase test, Activity activity) "," Simulate touching in the center of the screen and dragging one quarter of the way up <br /><br />"
"android.test.TouchUtils.longClickView (InstrumentationTestCase test, View v) "," Simulate touching the center of a view, holding until it is a long press, and then releasing. <br /><br />"
"android.test.TouchUtils.dragViewBy (InstrumentationTestCase test, View v, int gravity, int deltaX, int deltaY) "," This method was deprecated in API level 3. ActivityInstrumentationTestCase is deprecated in favor of ActivityInstrumentationTestCase2, which provides more options for configuring the Activity under test <br /><br />"
"android.test.TouchUtils.drag (InstrumentationTestCase test, float fromX, float toX, float fromY, float toY, int stepCount) "," Simulate touching a specific location and dragging to a new location. <br /><br />"
"android.test.TouchUtils.dragViewTo (InstrumentationTestCase test, View v, int gravity, int toX, int toY) "," Simulate touching a view and dragging it to a specified location. <br /><br />"
"android.test.TouchUtils.dragViewToTop (ActivityInstrumentationTestCase test, View v, int stepCount) "," This method was deprecated in API level 3. ActivityInstrumentationTestCase is deprecated in favor of ActivityInstrumentationTestCase2, which provides more options for configuring the Activity under test <br /><br />"
"android.test.TouchUtils.scrollToTop (InstrumentationTestCase test, Activity activity, ViewGroup v)   Scroll a ViewGroup to the top by repeatedly calling dragQuarterScreenDown (InstrumentationTestCase, Activity) "," Scroll a ViewGroup to the top by repeatedly calling dragQuarterScreenDown(InstrumentationTestCase, Activity) <br /><br />"
"android.test.TouchUtils.dragViewToTop (ActivityInstrumentationTestCase test, View v) "," This method was deprecated in API level 3. ActivityInstrumentationTestCase is deprecated in favor of ActivityInstrumentationTestCase2, which provides more options for configuring the Activity under test <br /><br />"
"android.test.TouchUtils.dragViewTo (ActivityInstrumentationTestCase test, View v, int gravity, int toX, int toY) "," This method was deprecated in API level 3. ActivityInstrumentationTestCase is deprecated in favor of ActivityInstrumentationTestCase2, which provides more options for configuring the Activity under test <br /><br />"
"android.test.ViewAsserts.assertBottomAligned (View first, View second) "," Assert that two views are bottom aligned, that is that their bottom edges are on the same y location. <br /><br />"
"android.test.ViewAsserts.assertHasScreenCoordinates (View origin, View view, int x, int y) "," Assert that a view has a particular x and y position on the visible screen. <br /><br />"
"android.test.ViewAsserts.assertBottomAligned (View first, View second, int margin) "," Assert that two views are bottom aligned, that is that their bottom edges are on the same y location, with respect to the specified margin. <br /><br />"
"android.test.ViewAsserts.assertVerticalCenterAligned (View reference, View test) "," Assert that the test view is vertically center aligned with respect to the reference view. <br /><br />"
"android.test.ViewAsserts.assertTopAligned (View first, View second) "," Assert that two views are top aligned, that is that their top edges are on the same y location. <br /><br />"
"android.test.ViewAsserts.assertGroupContains (ViewGroup parent, View child) "," Assert that the specified group contains a specific child once and only once. <br /><br />"
"android.test.ViewAsserts.assertBaselineAligned (View first, View second) "," Assert that two views are aligned on their baseline, that is that their baselines are on the same y location. <br /><br />"
"android.test.ViewAsserts.assertGroupNotContains (ViewGroup parent, View child) "," Assert that the specified group does not contain a specific child. <br /><br />"
"android.test.ViewAsserts.assertTopAligned (View first, View second, int margin) "," Assert that two views are top aligned, that is that their top edges are on the same y location, with respect to the specified margin. <br /><br />"
"android.test.ViewAsserts.assertOffScreenBelow (View origin, View view) "," Assert that view is below the visible screen. <br /><br />"
"android.test.ViewAsserts.assertLeftAligned (View first, View second) "," Assert that two views are left aligned, that is that their left edges are on the same x location. <br /><br />"
"android.test.ViewAsserts.assertGroupIntegrity (ViewGroup parent) "," Assert the specified group's integrity. <br /><br />"
"android.test.ViewAsserts.assertRightAligned (View first, View second) "," Assert that two views are right aligned, that is that their right edges are on the same x location. <br /><br />"
"android.test.ViewAsserts.assertRightAligned (View first, View second, int margin) "," Assert that two views are right aligned, that is that their right edges are on the same x location, with respect to the specified margin. <br /><br />"
"android.test.ViewAsserts.assertOnScreen (View origin, View view) "," Assert that view is on the screen. <br /><br />"
"android.test.ViewAsserts.assertHorizontalCenterAligned (View reference, View test) "," Assert that the test view is horizontally center aligned with respect to the reference view. <br /><br />"
"android.test.ViewAsserts.assertLeftAligned (View first, View second, int margin) "," Assert that two views are left aligned, that is that their left edges are on the same x location, with respect to the specified margin. <br /><br />"
"android.test.ViewAsserts.assertOffScreenAbove (View origin, View view) "," Assert that view is above the visible screen. <br /><br />"
"android.text.AlteredCharSequence.length () "," Returns the number of characters in this sequence. <br /><br />"
"android.text.AlteredCharSequence.charAt (int off) "," Returns the character at index. <br /><br />"
"android.text.AlteredCharSequence.subSequence (int start, int end)   Returns a CharSequence from the start index  (inclusive) to the end index  (exclusive) "," Returns a CharSequence from the start index (inclusive) to the end index (exclusive) of this sequence. <br /><br />"
"android.text.AlteredCharSequence.make (CharSequence source, char[] sub, int substart, int subend)   Create an AlteredCharSequence whose text  (and possibly spans) "," Create an AlteredCharSequence whose text (and possibly spans) are mirrored from source, except that the range of offsets substart inclusive to subend exclusive are mirrored instead from sub, beginning at offset 0. <br /><br />"
"android.text.AlteredCharSequence.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.text.AlteredCharSequence.getChars (int start, int end, char[] dest, int off)   Exactly like String.getChars () "," Exactly like String.getChars(): copy chars start through end - 1 from this CharSequence into dest beginning at offset destoff. <br /><br />"
"android.text.AndroidCharacter.getEastAsianWidths (char[] src, int start, int count, byte[] dest) "," Fill the first count bytes of dest with the East Asian Width from count chars of src starting at start. <br /><br />"
"android.text.AndroidCharacter.getDirectionalities (char[] src, byte[] dest, int count) "," Fill in the first count bytes of dest with the directionalities from the first count chars of src. <br /><br />"
"android.text.AndroidCharacter.mirror (char[] text, int start, int count)   Replace the specified slice of text with the chars' right-to-left mirrors  (if any) "," Replace the specified slice of text with the chars' right-to-left mirrors (if any), returning true if any replacements were made. <br /><br />"
"android.text.AndroidCharacter.getEastAsianWidth (char input) "," Calculate the East Asian Width of a character according to Unicode TR#11. <br /><br />"
"android.text.AndroidCharacter.getMirror (char ch)   Return the right-to-left mirror  (or the original char if none) "," Return the right-to-left mirror (or the original char if none) of the specified char. <br /><br />"
"android.text.Annotation.getValue () "," no description <br /><br />"
"android.text.Annotation.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.Annotation.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.Annotation.getKey () "," no description <br /><br />"
"android.text.Annotation.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.AutoText.getSize (View view) "," Returns the size of the auto text dictionary. <br /><br />"
"android.text.AutoText.get (CharSequence src, int start, int end, View view) "," Retrieves a possible spelling correction for the specified range of text. <br /><br />"
"android.text.BidiFormatter.Builder.setTextDirectionHeuristic (TextDirectionHeuristic heuristic) "," Specifies the default directionality estimation algorithm to be used by the BidiFormatter. <br /><br />"
"android.text.BidiFormatter.Builder.build () "," no description <br /><br />"
"android.text.BidiFormatter.Builder.stereoReset (boolean stereoReset) "," Specifies whether the BidiFormatter to be built should also 'reset' directionality before a string being bidi-wrapped, not just after it. <br /><br />"
"android.text.BoringLayout.getLineMax (int line) "," Gets the unsigned horizontal extent of the specified line, including leading margin indent, but excluding trailing whitespace. <br /><br />"
"android.text.BoringLayout.getEllipsizedWidth ()   Return the width to which this Layout is ellipsizing, or getWidth () "," Return the width to which this Layout is ellipsizing, or getWidth() if it is not doing anything special. <br /><br />"
"android.text.BoringLayout.getLineDescent (int line)   Return the descent of the specified line (0 getLineCount () - 1) "," Return the descent of the specified line(0 getLineCount() - 1). <br /><br />"
"android.text.BoringLayout.replaceOrMake (CharSequence source, TextPaint paint, int outerwidth, Layout.Alignment align, float spacingmult, float spacingadd, BoringLayout.Metrics metrics, boolean includepad) "," Returns a BoringLayout for the specified text, potentially reusing this one if it is already suitable. <br /><br />"
"android.text.BoringLayout.getParagraphDirection (int line)   Returns the primary directionality of the paragraph containing the specified line, either 1 for left-to-right lines, or -1 for right-to-left lines  (see DIR_LEFT_TO_RIGHT, DIR_RIGHT_TO_LEFT) "," Returns the primary directionality of the paragraph containing the specified line, either 1 for left-to-right lines, or -1 for right-to-left lines (see DIR_LEFT_TO_RIGHT, DIR_RIGHT_TO_LEFT). <br /><br />"
"android.text.BoringLayout.getEllipsisCount (int line) "," Returns the number of characters to be ellipsized away, or 0 if no ellipsis is to take place. <br /><br />"
"android.text.BoringLayout.make (CharSequence source, TextPaint paint, int outerwidth, Layout.Alignment align, float spacingmult, float spacingadd, BoringLayout.Metrics metrics, boolean includepad) "," no description <br /><br />"
"android.text.BoringLayout.getBottomPadding () "," Returns the number of extra pixels of descent padding in the bottom line of the Layout. <br /><br />"
"android.text.BoringLayout.getEllipsisStart (int line) "," Return the offset of the first character to be ellipsized away, relative to the start of the line. <br /><br />"
"android.text.BoringLayout.replaceOrMake (CharSequence source, TextPaint paint, int outerwidth, Layout.Alignment align, float spacingmult, float spacingadd, BoringLayout.Metrics metrics, boolean includepad, TextUtils.TruncateAt ellipsize, int ellipsizedWidth) "," Returns a BoringLayout for the specified text, potentially reusing this one if it is already suitable. <br /><br />"
"android.text.BoringLayout.getLineCount () "," Return the number of lines of text in this layout. <br /><br />"
"android.text.BoringLayout.getTopPadding ()   Returns the  (negative) "," Returns the (negative) number of extra pixels of ascent padding in the top line of the Layout. <br /><br />"
"android.text.BoringLayout.getLineDirections (int line) "," Returns the directional run information for the specified line. <br /><br />"
"android.text.BoringLayout.isBoring (CharSequence text, TextPaint paint, BoringLayout.Metrics metrics)   Returns null if not boring; the width, ascent, and descent in the provided Metrics object  (or a new one if the provided one was null) "," Returns null if not boring; the width, ascent, and descent in the provided Metrics object (or a new one if the provided one was null) if boring. <br /><br />"
"android.text.BoringLayout.getLineStart (int line)   Return the text offset of the beginning of the specified line  (0 getLineCount ()) "," Return the text offset of the beginning of the specified line ( 0 getLineCount()). <br /><br />"
"android.text.BoringLayout.make (CharSequence source, TextPaint paint, int outerwidth, Layout.Alignment align, float spacingmult, float spacingadd, BoringLayout.Metrics metrics, boolean includepad, TextUtils.TruncateAt ellipsize, int ellipsizedWidth) "," no description <br /><br />"
"android.text.BoringLayout.getHeight () "," Return the total height of this layout. <br /><br />"
"android.text.BoringLayout.draw (Canvas c, Path highlight, Paint highlightpaint, int cursorOffset) "," Draw this Layout on the specified canvas, with the highlight path drawn between the background and the text. <br /><br />"
"android.text.BoringLayout.getLineTop (int line)   Return the vertical position of the top of the specified line  (0 getLineCount ()) "," Return the vertical position of the top of the specified line (0 getLineCount()). <br /><br />"
"android.text.BoringLayout.ellipsized (int start, int end) "," Callback for the ellipsizer to report what region it ellipsized. <br /><br />"
"android.text.BoringLayout.isBoring (CharSequence text, TextPaint paint) "," Returns null if not boring; the width, ascent, and descent if boring. <br /><br />"
"android.text.BoringLayout.getLineContainsTab (int line) "," Returns whether the specified line contains one or more characters that need to be handled specially, like tabs or emoji. <br /><br />"
"android.text.BoringLayout.Metrics.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.text.ClipboardManager.setText (CharSequence text) "," Sets the contents of the clipboard to the specified text. <br /><br />"
"android.text.ClipboardManager.hasText () "," Returns true if the clipboard contains text; false otherwise. <br /><br />"
"android.text.ClipboardManager.getText () "," Returns the text on the clipboard. <br /><br />"
"android.text.DynamicLayout.getLineDirections (int line) "," Returns the directional run information for the specified line. <br /><br />"
"android.text.DynamicLayout.getLineStart (int line)   Return the text offset of the beginning of the specified line  (0 getLineCount ()) "," Return the text offset of the beginning of the specified line ( 0 getLineCount()). <br /><br />"
"android.text.DynamicLayout.getLineDescent (int line)   Return the descent of the specified line (0 getLineCount () - 1) "," Return the descent of the specified line(0 getLineCount() - 1). <br /><br />"
"android.text.DynamicLayout.getEllipsizedWidth ()   Return the width to which this Layout is ellipsizing, or getWidth () "," Return the width to which this Layout is ellipsizing, or getWidth() if it is not doing anything special. <br /><br />"
"android.text.DynamicLayout.getParagraphDirection (int line)   Returns the primary directionality of the paragraph containing the specified line, either 1 for left-to-right lines, or -1 for right-to-left lines  (see DIR_LEFT_TO_RIGHT, DIR_RIGHT_TO_LEFT) "," Returns the primary directionality of the paragraph containing the specified line, either 1 for left-to-right lines, or -1 for right-to-left lines (see DIR_LEFT_TO_RIGHT, DIR_RIGHT_TO_LEFT). <br /><br />"
"android.text.DynamicLayout.getEllipsisCount (int line) "," Returns the number of characters to be ellipsized away, or 0 if no ellipsis is to take place. <br /><br />"
"android.text.DynamicLayout.getBottomPadding () "," Returns the number of extra pixels of descent padding in the bottom line of the Layout. <br /><br />"
"android.text.DynamicLayout.getLineTop (int line)   Return the vertical position of the top of the specified line  (0 getLineCount ()) "," Return the vertical position of the top of the specified line (0 getLineCount()). <br /><br />"
"android.text.DynamicLayout.getEllipsisStart (int line) "," Return the offset of the first character to be ellipsized away, relative to the start of the line. <br /><br />"
"android.text.DynamicLayout.getLineCount () "," Return the number of lines of text in this layout. <br /><br />"
"android.text.DynamicLayout.getLineContainsTab (int line) "," Returns whether the specified line contains one or more characters that need to be handled specially, like tabs or emoji. <br /><br />"
"android.text.DynamicLayout.getTopPadding ()   Returns the  (negative) "," Returns the (negative) number of extra pixels of ascent padding in the top line of the Layout. <br /><br />"
"android.text.Editable.Factory.newEditable (CharSequence source) "," Returns a new SpannedStringBuilder from the specified CharSequence. <br /><br />"
"android.text.Editable.Factory.getInstance () "," Returns the standard Editable Factory. <br /><br />"
"android.text.Editable.clearSpans ()   Removes all spans from the Editable, as if by calling removeSpan (Object) "," Removes all spans from the Editable, as if by calling removeSpan(Object) on each of them. <br /><br />"
"android.text.Editable.append (CharSequence text)   Convenience for replace (length (), length (), text, 0, text.length ()) "," Convenience for replace(length(), length(), text, 0, text.length()) <br /><br />"
"android.text.Editable.insert (int where, CharSequence text)   Convenience for replace (where, where, text, 0, text.length ()) "," Convenience for replace(where, where, text, 0, text.length()); <br /><br />"
"android.text.Editable.append (char text)   Convenience for append (String.valueOf (text)) "," Convenience for append(String.valueOf(text)). <br /><br />"
"android.text.Editable.getFilters () "," Returns the array of input filters that are currently applied to changes to this Editable. <br /><br />"
"android.text.Editable.insert (int where, CharSequence text, int start, int end)   Convenience for replace (where, where, text, start, end) "," Convenience for replace(where, where, text, start, end) <br /><br />"
"android.text.Editable.clear ()   Convenience for replace (0, length (), '', 0, 0) "," Convenience for replace(0, length(), '', 0, 0) <br /><br />"
"android.text.Editable.delete (int st, int en)   Convenience for replace (st, en, '', 0, 0) "," Convenience for replace(st, en, '', 0, 0) <br /><br />"
"android.text.Editable.replace (int st, int en, CharSequence source, int start, int end)   Replaces the specified range  (st en) "," Replaces the specified range ( st en) of text in this Editable with a copy of the slice start end from source. <br /><br />"
"android.text.Editable.replace (int st, int en, CharSequence text)   Convenience for replace (st, en, text, 0, text.length ()) "," Convenience for replace(st, en, text, 0, text.length()) <br /><br />"
"android.text.Editable.setFilters (InputFilter[] filters) "," Sets the series of filters that will be called in succession whenever the text of this Editable is changed, each of which has the opportunity to limit or transform the text that is being inserted. <br /><br />"
"android.text.Editable.append (CharSequence text, int start, int end)   Convenience for replace (length (), length (), text, start, end) "," Convenience for replace(length(), length(), text, start, end) <br /><br />"
"android.text.format.DateFormat.getBestDateTimePattern (Locale locale, String skeleton) "," Returns the best possible localized form of the given skeleton for the given locale. <br /><br />"
"android.text.format.DateFormat.format (CharSequence inFormat, long inTimeInMillis) "," Given a format string and a time in milliseconds since Jan 1, 1970 GMT, returns a CharSequence containing the requested date. <br /><br />"
"android.text.format.DateFormat.is24HourFormat (Context context) "," Returns true if user preference is set to 24-hour format. <br /><br />"
"android.text.format.DateFormat.format (CharSequence inFormat, Calendar inDate) "," Given a format string and a Calendar object, returns a CharSequence containing the requested date. <br /><br />"
"android.text.format.DateFormat.getLongDateFormat (Context context)   Returns a DateFormat object that can format the date in long form  (such as Monday, January 3, 2000) "," Returns a DateFormat object that can format the date in long form (such as Monday, January 3, 2000) for the current locale. <br /><br />"
"android.text.format.DateFormat.getMediumDateFormat (Context context)   Returns a DateFormat object that can format the date in medium form  (such as Jan 3, 2000) "," Returns a DateFormat object that can format the date in medium form (such as Jan 3, 2000) for the current locale. <br /><br />"
"android.text.format.DateFormat.getDateFormatOrder (Context context) "," Gets the current date format stored as a char array. <br /><br />"
"android.text.format.DateFormat.getTimeFormat (Context context) "," Returns a DateFormat object that can format the time according to the current locale and the user's 12-/24-hour clock preference. <br /><br />"
"android.text.format.DateFormat.format (CharSequence inFormat, Date inDate) "," Given a format string and a Date object, returns a CharSequence containing the requested date. <br /><br />"
"android.text.format.DateFormat.getDateFormat (Context context)   Returns a DateFormat object that can format the date in short form  (such as 12/31/1999) "," Returns a DateFormat object that can format the date in short form (such as 12/31/1999) according to the current locale and the user's date-order preference. <br /><br />"
"android.text.format.DateUtils.getAMPMString (int ampm) "," This method was deprecated in API level 17. Use SimpleDateFormat instead. <br /><br />"
"android.text.format.DateUtils.isToday (long when) "," no description <br /><br />"
"android.text.format.DateUtils.getRelativeTimeSpanString (Context c, long millis, boolean withPreposition) "," no description <br /><br />"
"android.text.format.DateUtils.getRelativeTimeSpanString (long time, long now, long minResolution) "," Returns a string describing 'time' as a time relative to 'now'. <br /><br />"
"android.text.format.DateUtils.getRelativeTimeSpanString (long time, long now, long minResolution, int flags) "," Returns a string describing 'time' as a time relative to 'now'. <br /><br />"
"android.text.format.DateUtils.getRelativeTimeSpanString (Context c, long millis) "," Convenience function to return relative time string without preposition. <br /><br />"
"android.text.format.DateUtils.getDayOfWeekString (int dayOfWeek, int abbrev) "," This method was deprecated in API level 17. Use SimpleDateFormat instead. <br /><br />"
"android.text.format.DateUtils.formatDateRange (Context context, long startMillis, long endMillis, int flags) "," Formats a date or a time range according to the local conventions. <br /><br />"
"android.text.format.DateUtils.formatSameDayTime (long then, long now, int dateStyle, int timeStyle) "," Format a date / time such that if the then is on the same day as now, it shows just the time and if it's a different day, it shows just the date. <br /><br />"
"android.text.format.DateUtils.getRelativeDateTimeString (Context c, long time, long minResolution, long transitionResolution, int flags) "," Return string describing the elapsed time since startTime formatted like '[relative time/date], [time]'. <br /><br />"
"android.text.format.DateUtils.formatElapsedTime (StringBuilder recycle, long elapsedSeconds)   Formats an elapsed time in a format like 'MM:SS' or 'H:MM:SS'  (using a form suited to the current locale) "," Formats an elapsed time in a format like 'MM:SS' or 'H:MM:SS' (using a form suited to the current locale), similar to that used on the call-in-progress screen. <br /><br />"
"android.text.format.DateUtils.formatDateRange (Context context, Formatter formatter, long startMillis, long endMillis, int flags, String timeZone) "," Formats a date or a time range according to the local conventions. <br /><br />"
"android.text.format.DateUtils.formatDateTime (Context context, long millis, int flags) "," Formats a date or a time according to the local conventions. <br /><br />"
"android.text.format.DateUtils.getMonthString (int month, int abbrev) "," This method was deprecated in API level 17. Use SimpleDateFormat instead. <br /><br />"
"android.text.format.DateUtils.getRelativeTimeSpanString (long startTime) "," Returns a string describing the elapsed time since startTime. <br /><br />"
"android.text.format.DateUtils.formatDateRange (Context context, Formatter formatter, long startMillis, long endMillis, int flags) "," Formats a date or a time range according to the local conventions. <br /><br />"
"android.text.format.DateUtils.formatElapsedTime (long elapsedSeconds) "," Formats an elapsed time in the form 'MM:SS' or 'H:MM:SS' for display on the call-in-progress screen. <br /><br />"
"android.text.format.Formatter.formatIpAddress (int ipv4Address)    This method was deprecated in API level 12. Use getHostAddress () "," This method was deprecated in API level 12. Use getHostAddress(), which supports both IPv4 and IPv6 addresses. This method does not support IPv6 addresses. <br /><br />"
"android.text.format.Formatter.formatFileSize (Context context, long number) "," Formats a content size to be in the form of bytes, kilobytes, megabytes, etc <br /><br />"
"android.text.format.Formatter.formatShortFileSize (Context context, long number)   Like formatFileSize (Context, long), but trying to generate shorter numbers  (showing fewer digits of precision) "," Like formatFileSize(Context, long), but trying to generate shorter numbers (showing fewer digits of precision). <br /><br />"
"android.text.format.Time.getWeeksSinceEpochFromJulianDay (int julianDay, int firstDayOfWeek)   Returns the week since EPOCH_JULIAN_DAY  (Jan 1, 1970) "," Returns the week since EPOCH_JULIAN_DAY (Jan 1, 1970) adjusted for first day of week. <br /><br />"
"android.text.format.Time.toMillis (boolean ignoreDst) "," Converts this time to milliseconds. <br /><br />"
"android.text.format.Time.set (int monthDay, int month, int year) "," Sets the date from the given fields. <br /><br />"
"android.text.format.Time.set (int second, int minute, int hour, int monthDay, int month, int year) "," Sets the fields. <br /><br />"
"android.text.format.Time.setToNow () "," Sets the time of the given Time object to the current time. <br /><br />"
"android.text.format.Time.toString () "," Return the current time in YYYYMMDDTHHMMSS  format <br /><br />"
"android.text.format.Time.getActualMaximum (int field) "," Return the maximum possible value for the given field given the value of the other fields. <br /><br />"
"android.text.format.Time.set (Time that) "," Copy the value of that to this Time object. <br /><br />"
"android.text.format.Time.format3339 (boolean allDay) "," Return a string in the RFC 3339 format. <br /><br />"
"android.text.format.Time.getCurrentTimezone () "," Returns the timezone string that is currently set for the device. <br /><br />"
"android.text.format.Time.before (Time that) "," Returns true if the time represented by this Time object occurs before the given time. <br /><br />"
"android.text.format.Time.normalize (boolean ignoreDst) "," Ensures the values in each field are in range. <br /><br />"
"android.text.format.Time.parse (String s) "," Parses a date-time string in either the RFC 2445 format or an abbreviated format that does not include the 'time' field. <br /><br />"
"android.text.format.Time.getWeekNumber () "," Computes the week number according to ISO 8601. <br /><br />"
"android.text.format.Time.getJulianDay (long millis, long gmtoff) "," Computes the Julian day number for a point in time in a particular timezone. <br /><br />"
"android.text.format.Time.getJulianMondayFromWeeksSinceEpoch (int week) "," Takes a number of weeks since the epoch and calculates the Julian day of the Monday for that week. <br /><br />"
"android.text.format.Time.format2445 () "," Format according to RFC 2445 DATE-TIME type. <br /><br />"
"android.text.format.Time.compare (Time a, Time b) "," Compare two Time objects and return a negative number if a is less than b, a positive number if a is greater than b, or 0 if they are equal. <br /><br />"
"android.text.format.Time.after (Time that) "," Returns true if the time represented by this Time object occurs after the given time. <br /><br />"
"android.text.format.Time.setJulianDay (int julianDay) "," Sets the time from the given Julian day number, which must be based on the same timezone that is set in this Time object. <br /><br />"
"android.text.format.Time.switchTimezone (String timezone) "," Convert this time object so the time represented remains the same, but is instead located in a different timezone. <br /><br />"
"android.text.format.Time.clear (String timezoneId) "," Clears all values, setting the timezone to the given timezone. <br /><br />"
"android.text.format.Time.format (String format) "," Print the current value given the format string provided. <br /><br />"
"android.text.format.Time.set (long millis) "," Sets the fields in this Time object given the UTC milliseconds. <br /><br />"
"android.text.format.Time.isEpoch (Time time)   Returns true if the day of the given time is the epoch on the Julian Calendar  (January 1, 1970 on the Gregorian calendar) "," Returns true if the day of the given time is the epoch on the Julian Calendar (January 1, 1970 on the Gregorian calendar). <br /><br />"
"android.text.format.Time.parse3339 (String s) "," Parse a time in RFC 3339 format. <br /><br />"
"android.text.GetChars.getChars (int start, int end, char[] dest, int destoff)   Exactly like String.getChars () "," Exactly like String.getChars(): copy chars start through end - 1 from this CharSequence into dest beginning at offset destoff. <br /><br />"
"android.text.Html.ImageGetter.getDrawable (String source) "," This methos is called when the HTML parser encounters an <img> tag. <br /><br />"
"android.text.Html.TagHandler.handleTag (boolean opening, String tag, Editable output, XMLReader xmlReader) "," This method will be called whenn the HTML parser encounters a tag that it does not know how to interpret. <br /><br />"
"android.text.InputFilter.AllCaps.filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) "," This method is called when the buffer is going to replace the range dstart   dend of dest with the new text from the range start   end of source. <br /><br />"
"android.text.InputFilter.LengthFilter.filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) "," This method is called when the buffer is going to replace the range dstart   dend of dest with the new text from the range start   end of source. <br /><br />"
"android.text.InputFilter.LengthFilter.getMax () "," no description <br /><br />"
"android.text.Layout.getLineMax (int line) "," Gets the unsigned horizontal extent of the specified line, including leading margin indent, but excluding trailing whitespace. <br /><br />"
"android.text.Layout.getDesiredWidth (CharSequence source, int start, int end, TextPaint paint) "," Return how wide a layout must be in order to display the specified text slice with one line per paragraph. <br /><br />"
"android.text.Layout.getOffsetToRightOf (int offset) "," no description <br /><br />"
"android.text.Layout.draw (Canvas c) "," Draw this Layout on the specified Canvas. <br /><br />"
"android.text.Layout.getBottomPadding () "," Returns the number of extra pixels of descent padding in the bottom line of the Layout. <br /><br />"
"android.text.Layout.getParagraphAlignment (int line) "," Get the alignment of the specified paragraph, taking into account markup attached to it. <br /><br />"
"android.text.Layout.draw (Canvas canvas, Path highlight, Paint highlightPaint, int cursorOffsetVertical) "," Draw this Layout on the specified canvas, with the highlight path drawn between the background and the text. <br /><br />"
"android.text.Layout.getDesiredWidth (CharSequence source, TextPaint paint) "," Return how wide a layout must be in order to display the specified text with one line per paragraph. <br /><br />"
"android.text.Layout.increaseWidthTo (int wid) "," Increase the width of this layout to the specified width. <br /><br />"
"android.text.Layout.getSelectionPath (int start, int end, Path dest) "," Fills in the specified Path with a representation of a highlight between the specified offsets. <br /><br />"
"android.text.Layout.getLineBounds (int line, Rect bounds)   Return the baseline for the specified line  (0 getLineCount () - 1) "," Return the baseline for the specified line (0 getLineCount() - 1) If bounds is not null, return the top, left, right, bottom extents of the specified line in it. <br /><br />"
"android.text.Layout.getEllipsisStart (int line) "," Return the offset of the first character to be ellipsized away, relative to the start of the line. <br /><br />"
"android.text.Layout.getTopPadding ()   Returns the  (negative) "," Returns the (negative) number of extra pixels of ascent padding in the top line of the Layout. <br /><br />"
"android.text.Layout.getOffsetForHorizontal (int line, float horiz) "," Get the character offset on the specified line whose position is closest to the specified horizontal position. <br /><br />"
"android.text.Layout.getCursorPath (int point, Path dest, CharSequence editingBuffer) "," Fills in the specified Path with a representation of a cursor at the specified offset. <br /><br />"
"android.text.Layout.getLineDirections (int line) "," Returns the directional run information for the specified line. <br /><br />"
"android.text.Layout.getParagraphRight (int line) "," Get the right edge of the specified paragraph, inset by right margins. <br /><br />"
"android.text.Layout.getHeight () "," Return the total height of this layout. <br /><br />"
"android.text.Layout.isRtlCharAt (int offset)   Returns true if the character at offset is right to left  (RTL) "," Returns true if the character at offset is right to left (RTL). <br /><br />"
"android.text.Layout.getLineTop (int line)   Return the vertical position of the top of the specified line  (0 getLineCount ()) "," Return the vertical position of the top of the specified line (0 getLineCount()). <br /><br />"
"android.text.Layout.getLineRight (int line) "," Get the rightmost position that should be exposed for horizontal scrolling on the specified line. <br /><br />"
"android.text.Layout.getLineAscent (int line) "," Get the ascent of the text on the specified line. <br /><br />"
"android.text.Layout.getWidth () "," Return the width of this layout. <br /><br />"
"android.text.Layout.getOffsetToLeftOf (int offset) "," no description <br /><br />"
"android.text.Layout.getLineContainsTab (int line) "," Returns whether the specified line contains one or more characters that need to be handled specially, like tabs or emoji. <br /><br />"
"android.text.Layout.getSpacingAdd () "," Return the number of units of leading that are added to each line. <br /><br />"
"android.text.Layout.getLineForVertical (int vertical) "," Get the line number corresponding to the specified vertical position. <br /><br />"
"android.text.Layout.getParagraphLeft (int line) "," Get the left edge of the specified paragraph, inset by left margins. <br /><br />"
"android.text.Layout.getEllipsizedWidth ()   Return the width to which this Layout is ellipsizing, or getWidth () "," Return the width to which this Layout is ellipsizing, or getWidth() if it is not doing anything special. <br /><br />"
"android.text.Layout.getLineDescent (int line)   Return the descent of the specified line (0 getLineCount () - 1) "," Return the descent of the specified line(0 getLineCount() - 1). <br /><br />"
"android.text.Layout.getParagraphDirection (int line)   Returns the primary directionality of the paragraph containing the specified line, either 1 for left-to-right lines, or -1 for right-to-left lines  (see DIR_LEFT_TO_RIGHT, DIR_RIGHT_TO_LEFT) "," Returns the primary directionality of the paragraph containing the specified line, either 1 for left-to-right lines, or -1 for right-to-left lines (see DIR_LEFT_TO_RIGHT, DIR_RIGHT_TO_LEFT). <br /><br />"
"android.text.Layout.getEllipsisCount (int line) "," Returns the number of characters to be ellipsized away, or 0 if no ellipsis is to take place. <br /><br />"
"android.text.Layout.getLineBaseline (int line) "," Return the vertical position of the baseline of the specified line. <br /><br />"
"android.text.Layout.getSecondaryHorizontal (int offset) "," Get the secondary horizontal position for the specified text offset. <br /><br />"
"android.text.Layout.getAlignment () "," Return the base alignment of this layout. <br /><br />"
"android.text.Layout.getLineEnd (int line) "," Return the text offset after the last character on the specified line. <br /><br />"
"android.text.Layout.getLineWidth (int line) "," Gets the unsigned horizontal extent of the specified line, including leading margin indent and trailing whitespace. <br /><br />"
"android.text.Layout.getLineVisibleEnd (int line)   Return the text offset after the last visible character  (so whitespace is not counted) "," Return the text offset after the last visible character (so whitespace is not counted) on the specified line. <br /><br />"
"android.text.Layout.getText () "," Return the text that is displayed by this Layout. <br /><br />"
"android.text.Layout.getLineCount () "," Return the number of lines of text in this layout. <br /><br />"
"android.text.Layout.getPaint () "," Return the base Paint properties for this layout. <br /><br />"
"android.text.Layout.getLineBottom (int line) "," Return the vertical position of the bottom of the specified line. <br /><br />"
"android.text.Layout.getPrimaryHorizontal (int offset) "," Get the primary horizontal position for the specified text offset. <br /><br />"
"android.text.Layout.getLineStart (int line)   Return the text offset of the beginning of the specified line  (0 getLineCount ()) "," Return the text offset of the beginning of the specified line ( 0 getLineCount()). <br /><br />"
"android.text.Layout.getLineLeft (int line) "," Get the leftmost position that should be exposed for horizontal scrolling on the specified line. <br /><br />"
"android.text.Layout.getLineForOffset (int offset) "," Get the line number on which the specified text offset appears. <br /><br />"
"android.text.Layout.getSpacingMultiplier () "," Return what the text height is multiplied by to get the line height. <br /><br />"
"android.text.LoginFilter.PasswordFilterGMail.isAllowed (char c) "," Returns whether or not we allow character c. <br /><br />"
"android.text.LoginFilter.UsernameFilterGeneric.isAllowed (char c) "," Returns whether or not we allow character c. <br /><br />"
"android.text.LoginFilter.UsernameFilterGMail.isAllowed (char c) "," Returns whether or not we allow character c. <br /><br />"
"android.text.method.ArrowKeyMovementMethod.canSelectArbitrarily ()   Returns true if this movement method allows arbitrary selection of any text; false if it has no selection  (like a movement method that only scrolls) "," Returns true if this movement method allows arbitrary selection of any text; false if it has no selection (like a movement method that only scrolls) or a constrained selection (for example limited to links. <br /><br />"
"android.text.method.ArrowKeyMovementMethod.getInstance () "," no description <br /><br />"
"android.text.method.ArrowKeyMovementMethod.initialize (TextView widget, Spannable text) "," no description <br /><br />"
"android.text.method.ArrowKeyMovementMethod.onTakeFocus (TextView view, Spannable text, int dir) "," no description <br /><br />"
"android.text.method.ArrowKeyMovementMethod.onTouchEvent (TextView widget, Spannable buffer, MotionEvent event) "," no description <br /><br />"
"android.text.method.BaseKeyListener.forwardDelete (View view, Editable content, int keyCode, KeyEvent event) "," Performs the action that happens when you press the KEYCODE_FORWARD_DEL key in a TextView. <br /><br />"
"android.text.method.BaseKeyListener.onKeyOther (View view, Editable content, KeyEvent event) "," Base implementation handles ACTION_MULTIPLE KEYCODE_UNKNOWN by inserting the event's text into the content. <br /><br />"
"android.text.method.BaseKeyListener.backspace (View view, Editable content, int keyCode, KeyEvent event) "," Performs the action that happens when you press the KEYCODE_DEL key in a TextView. <br /><br />"
"android.text.method.BaseKeyListener.onKeyDown (View view, Editable content, int keyCode, KeyEvent event) "," Handles presses of the meta keys. <br /><br />"
"android.text.method.BaseMovementMethod.onKeyDown (TextView widget, Spannable text, int keyCode, KeyEvent event) "," no description <br /><br />"
"android.text.method.BaseMovementMethod.onTrackballEvent (TextView widget, Spannable text, MotionEvent event) "," no description <br /><br />"
"android.text.method.BaseMovementMethod.onKeyOther (TextView widget, Spannable text, KeyEvent event) "," If the key listener wants to other kinds of key events, return true, otherwise return false and the caller (i.e. <br /><br />"
"android.text.method.BaseMovementMethod.canSelectArbitrarily ()   Returns true if this movement method allows arbitrary selection of any text; false if it has no selection  (like a movement method that only scrolls) "," Returns true if this movement method allows arbitrary selection of any text; false if it has no selection (like a movement method that only scrolls) or a constrained selection (for example limited to links. <br /><br />"
"android.text.method.BaseMovementMethod.onGenericMotionEvent (TextView widget, Spannable text, MotionEvent event) "," no description <br /><br />"
"android.text.method.BaseMovementMethod.onKeyUp (TextView widget, Spannable text, int keyCode, KeyEvent event) "," no description <br /><br />"
"android.text.method.BaseMovementMethod.onTouchEvent (TextView widget, Spannable text, MotionEvent event) "," no description <br /><br />"
"android.text.method.BaseMovementMethod.onTakeFocus (TextView widget, Spannable text, int direction) "," no description <br /><br />"
"android.text.method.BaseMovementMethod.initialize (TextView widget, Spannable text) "," no description <br /><br />"
"android.text.method.CharacterPickerDialog.onClick (View v) "," Handles clicks on the Cancel button. <br /><br />"
"android.text.method.CharacterPickerDialog.onItemClick (AdapterView parent, View view, int position, long id) "," Handles clicks on the character buttons. <br /><br />"
"android.text.method.DateKeyListener.getInputType () "," no description <br /><br />"
"android.text.method.DateKeyListener.getInstance () "," no description <br /><br />"
"android.text.method.DateTimeKeyListener.getInputType () "," no description <br /><br />"
"android.text.method.DateTimeKeyListener.getInstance () "," no description <br /><br />"
"android.text.method.DialerKeyListener.getInputType () "," no description <br /><br />"
"android.text.method.DialerKeyListener.getInstance () "," no description <br /><br />"
"android.text.method.DigitsKeyListener.getInputType () "," no description <br /><br />"
"android.text.method.DigitsKeyListener.getInstance () "," Returns a DigitsKeyListener that accepts the digits 0 through 9. <br /><br />"
"android.text.method.DigitsKeyListener.filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) "," This method is called when the buffer is going to replace the range dstart   dend of dest with the new text from the range start   end of source. <br /><br />"
"android.text.method.DigitsKeyListener.getInstance (String accepted) "," Returns a DigitsKeyListener that accepts only the characters that appear in the specified String. <br /><br />"
"android.text.method.DigitsKeyListener.getInstance (boolean sign, boolean decimal)   Returns a DigitsKeyListener that accepts the digits 0 through 9, plus the minus sign  (only at the beginning) and/or decimal point  (only one per field) "," Returns a DigitsKeyListener that accepts the digits 0 through 9, plus the minus sign (only at the beginning) and/or decimal point (only one per field) if specified. <br /><br />"
"android.text.method.HideReturnsTransformationMethod.getInstance () "," no description <br /><br />"
"android.text.method.KeyListener.onKeyOther (View view, Editable text, KeyEvent event)   If the key listener wants to other kinds of key events, return true, otherwise return false and the caller  (i.e. the widget host) "," If the key listener wants to other kinds of key events, return true, otherwise return false and the caller (i.e. the widget host) will handle the key. <br /><br />"
"android.text.method.KeyListener.onKeyDown (View view, Editable text, int keyCode, KeyEvent event)   If the key listener wants to handle this key, return true, otherwise return false and the caller  (i.e. the widget host) "," If the key listener wants to handle this key, return true, otherwise return false and the caller (i.e. the widget host) will handle the key. <br /><br />"
"android.text.method.KeyListener.getInputType () "," Return the type of text that this key listener is manipulating, as per InputType. <br /><br />"
"android.text.method.KeyListener.onKeyUp (View view, Editable text, int keyCode, KeyEvent event)   If the key listener wants to handle this key release, return true, otherwise return false and the caller  (i.e. the widget host) "," If the key listener wants to handle this key release, return true, otherwise return false and the caller (i.e. the widget host) will handle the key. <br /><br />"
"android.text.method.KeyListener.clearMetaKeyState (View view, Editable content, int states) "," Remove the given shift states from the edited text. <br /><br />"
"android.text.method.LinkMovementMethod.canSelectArbitrarily ()   Returns true if this movement method allows arbitrary selection of any text; false if it has no selection  (like a movement method that only scrolls) "," Returns true if this movement method allows arbitrary selection of any text; false if it has no selection (like a movement method that only scrolls) or a constrained selection (for example limited to links. <br /><br />"
"android.text.method.LinkMovementMethod.getInstance () "," no description <br /><br />"
"android.text.method.LinkMovementMethod.initialize (TextView widget, Spannable text) "," no description <br /><br />"
"android.text.method.LinkMovementMethod.onTakeFocus (TextView view, Spannable text, int dir) "," no description <br /><br />"
"android.text.method.LinkMovementMethod.onTouchEvent (TextView widget, Spannable buffer, MotionEvent event) "," no description <br /><br />"
"android.text.method.MetaKeyKeyListener.handleKeyUp (long state, int keyCode, KeyEvent event) "," Handles release of the meta keys. <br /><br />"
"android.text.method.MetaKeyKeyListener.getMetaState (CharSequence text) "," Gets the state of the meta keys. <br /><br />"
"android.text.method.MetaKeyKeyListener.getMetaState (CharSequence text, int meta, KeyEvent event) "," Gets the state of a particular meta key to use with a particular key event. <br /><br />"
"android.text.method.MetaKeyKeyListener.getMetaState (long state) "," Gets the state of the meta keys. <br /><br />"
"android.text.method.MetaKeyKeyListener.adjustMetaAfterKeypress (Spannable content)   Call this method after you handle a keypress so that the meta state will be reset to unshifted  (if it is not still down) or primed to be reset to unshifted  (once it is released) "," Call this method after you handle a keypress so that the meta state will be reset to unshifted (if it is not still down) or primed to be reset to unshifted (once it is released). <br /><br />"
"android.text.method.MetaKeyKeyListener.resetLockedMeta (long state)   Call this if you are a method that ignores the locked meta state  (arrow keys, for example) "," Call this if you are a method that ignores the locked meta state (arrow keys, for example) and you handle a key. <br /><br />"
"android.text.method.MetaKeyKeyListener.clearMetaKeyState (Editable content, int states) "," no description <br /><br />"
"android.text.method.MetaKeyKeyListener.clearMetaKeyState (View view, Editable content, int states) "," no description <br /><br />"
"android.text.method.MetaKeyKeyListener.clearMetaKeyState (long state, int which) "," Clears the state of the specified meta key if it is locked. <br /><br />"
"android.text.method.MetaKeyKeyListener.resetMetaState (Spannable text) "," Resets all meta state to inactive. <br /><br />"
"android.text.method.MetaKeyKeyListener.getMetaState (CharSequence text, int meta) "," Gets the state of a particular meta key. <br /><br />"
"android.text.method.MetaKeyKeyListener.isSelectingMetaTracker (CharSequence text, Object what) "," Returns true if this object is one that this class would use to keep track of the selecting meta state in the specified text. <br /><br />"
"android.text.method.MetaKeyKeyListener.getMetaState (CharSequence text, KeyEvent event) "," Gets the state of the meta keys for a specific key event. <br /><br />"
"android.text.method.MetaKeyKeyListener.getMetaState (long state, int meta) "," Gets the state of a particular meta key. <br /><br />"
"android.text.method.MetaKeyKeyListener.isMetaTracker (CharSequence text, Object what) "," Returns true if this object is one that this class would use to keep track of any meta state in the specified text. <br /><br />"
"android.text.method.MetaKeyKeyListener.handleKeyDown (long state, int keyCode, KeyEvent event) "," Handles presses of the meta keys. <br /><br />"
"android.text.method.MetaKeyKeyListener.adjustMetaAfterKeypress (long state)   Call this method after you handle a keypress so that the meta state will be reset to unshifted  (if it is not still down) or primed to be reset to unshifted  (once it is released) "," Call this method after you handle a keypress so that the meta state will be reset to unshifted (if it is not still down) or primed to be reset to unshifted (once it is released). <br /><br />"
"android.text.method.MetaKeyKeyListener.onKeyUp (View view, Editable content, int keyCode, KeyEvent event) "," Handles release of the meta keys. <br /><br />"
"android.text.method.MetaKeyKeyListener.onKeyDown (View view, Editable content, int keyCode, KeyEvent event) "," Handles presses of the meta keys. <br /><br />"
"android.text.method.MovementMethod.onKeyOther (TextView view, Spannable text, KeyEvent event) "," If the key listener wants to other kinds of key events, return true, otherwise return false and the caller (i.e. <br /><br />"
"android.text.method.MovementMethod.onKeyDown (TextView widget, Spannable text, int keyCode, KeyEvent event) "," no description <br /><br />"
"android.text.method.MovementMethod.onTrackballEvent (TextView widget, Spannable text, MotionEvent event) "," no description <br /><br />"
"android.text.method.MovementMethod.canSelectArbitrarily ()   Returns true if this movement method allows arbitrary selection of any text; false if it has no selection  (like a movement method that only scrolls) "," Returns true if this movement method allows arbitrary selection of any text; false if it has no selection (like a movement method that only scrolls) or a constrained selection (for example limited to links. <br /><br />"
"android.text.method.MovementMethod.onGenericMotionEvent (TextView widget, Spannable text, MotionEvent event) "," no description <br /><br />"
"android.text.method.MovementMethod.onKeyUp (TextView widget, Spannable text, int keyCode, KeyEvent event) "," no description <br /><br />"
"android.text.method.MovementMethod.onTouchEvent (TextView widget, Spannable text, MotionEvent event) "," no description <br /><br />"
"android.text.method.MovementMethod.onTakeFocus (TextView widget, Spannable text, int direction) "," no description <br /><br />"
"android.text.method.MovementMethod.initialize (TextView widget, Spannable text) "," no description <br /><br />"
"android.text.method.MultiTapKeyListener.onSpanChanged (Spannable buf, Object what, int s, int e, int start, int stop) "," This method is called to notify you that the specified object has been relocated from the range ostart oend to the new range nstart nend of the text. <br /><br />"
"android.text.method.MultiTapKeyListener.getInputType () "," no description <br /><br />"
"android.text.method.MultiTapKeyListener.onSpanAdded (Spannable s, Object what, int start, int end) "," This method is called to notify you that the specified object has been attached to the specified range of the text. <br /><br />"
"android.text.method.MultiTapKeyListener.getInstance (boolean autotext, TextKeyListener.Capitalize cap) "," Returns a new or existing instance with the specified capitalization and correction properties. <br /><br />"
"android.text.method.MultiTapKeyListener.onKeyDown (View view, Editable content, int keyCode, KeyEvent event) "," Handles presses of the meta keys. <br /><br />"
"android.text.method.MultiTapKeyListener.onSpanRemoved (Spannable s, Object what, int start, int end) "," This method is called to notify you that the specified object has been detached from the specified range of the text. <br /><br />"
"android.text.method.NumberKeyListener.filter (CharSequence source, int start, int end, Spanned dest, int dstart, int dend) "," This method is called when the buffer is going to replace the range dstart   dend of dest with the new text from the range start   end of source. <br /><br />"
"android.text.method.NumberKeyListener.onKeyDown (View view, Editable content, int keyCode, KeyEvent event) "," Handles presses of the meta keys. <br /><br />"
"android.text.method.PasswordTransformationMethod.onTextChanged (CharSequence s, int start, int before, int count) "," This method is called to notify you that, within s, the count characters beginning at start have just replaced old text that had length before. <br /><br />"
"android.text.method.PasswordTransformationMethod.afterTextChanged (Editable s) "," This method is called to notify you that, somewhere within s, the text has been changed. <br /><br />"
"android.text.method.PasswordTransformationMethod.onFocusChanged (View view, CharSequence sourceText, boolean focused, int direction, Rect previouslyFocusedRect) "," This method is called when the TextView that uses this TransformationMethod gains or loses focus. <br /><br />"
"android.text.method.PasswordTransformationMethod.getInstance () "," no description <br /><br />"
"android.text.method.PasswordTransformationMethod.getTransformation (CharSequence source, View view) "," Returns a CharSequence that is a transformation of the source text -- for example, replacing each character with a dot in a password field. <br /><br />"
"android.text.method.PasswordTransformationMethod.beforeTextChanged (CharSequence s, int start, int count, int after) "," This method is called to notify you that, within s, the count characters beginning at start are about to be replaced by new text with length after. <br /><br />"
"android.text.method.QwertyKeyListener.markAsReplaced (Spannable content, int start, int end, String original) "," Marks the specified region of content as having contained original prior to AutoText replacement. <br /><br />"
"android.text.method.QwertyKeyListener.getInstanceForFullKeyboard () "," Gets an instance of the listener suitable for use with full keyboards. <br /><br />"
"android.text.method.QwertyKeyListener.getInputType () "," no description <br /><br />"
"android.text.method.QwertyKeyListener.getInstance (boolean autoText, TextKeyListener.Capitalize cap) "," Returns a new or existing instance with the specified capitalization and correction properties. <br /><br />"
"android.text.method.QwertyKeyListener.onKeyDown (View view, Editable content, int keyCode, KeyEvent event) "," Handles presses of the meta keys. <br /><br />"
"android.text.method.ReplacementTransformationMethod.onFocusChanged (View view, CharSequence sourceText, boolean focused, int direction, Rect previouslyFocusedRect) "," This method is called when the TextView that uses this TransformationMethod gains or loses focus. <br /><br />"
"android.text.method.ReplacementTransformationMethod.getTransformation (CharSequence source, View v)   Returns a CharSequence that will mirror the contents of the source CharSequence but with the characters in getOriginal () replaced by ones from getReplacement () "," Returns a CharSequence that will mirror the contents of the source CharSequence but with the characters in getOriginal() replaced by ones from getReplacement(). <br /><br />"
"android.text.method.ScrollingMovementMethod.getInstance () "," no description <br /><br />"
"android.text.method.ScrollingMovementMethod.onTouchEvent (TextView widget, Spannable buffer, MotionEvent event) "," no description <br /><br />"
"android.text.method.ScrollingMovementMethod.onTakeFocus (TextView widget, Spannable text, int dir) "," no description <br /><br />"
"android.text.method.SingleLineTransformationMethod.getInstance () "," no description <br /><br />"
"android.text.method.TextKeyListener.onSpanChanged (Spannable s, Object what, int start, int end, int st, int en) "," This method is called to notify you that the specified object has been relocated from the range ostart oend to the new range nstart nend of the text. <br /><br />"
"android.text.method.TextKeyListener.getInputType () "," no description <br /><br />"
"android.text.method.TextKeyListener.shouldCap (TextKeyListener.Capitalize cap, CharSequence cs, int off) "," Returns whether it makes sense to automatically capitalize at the specified position in the specified text, with the specified rules. <br /><br />"
"android.text.method.TextKeyListener.getInstance () "," Returns a new or existing instance with no automatic capitalization or correction. <br /><br />"
"android.text.method.TextKeyListener.clear (Editable e)   Clear all the input state  (autotext, autocap, multitap, undo) from the specified Editable, going beyond Editable.clear () "," Clear all the input state (autotext, autocap, multitap, undo) from the specified Editable, going beyond Editable.clear(), which just clears the text but not the input state. <br /><br />"
"android.text.method.TextKeyListener.release () "," no description <br /><br />"
"android.text.method.TextKeyListener.onSpanAdded (Spannable s, Object what, int start, int end) "," This method is called to notify you that the specified object has been attached to the specified range of the text. <br /><br />"
"android.text.method.TextKeyListener.onKeyOther (View view, Editable content, KeyEvent event) "," Base implementation handles ACTION_MULTIPLE KEYCODE_UNKNOWN by inserting the event's text into the content. <br /><br />"
"android.text.method.TextKeyListener.getInstance (boolean autotext, TextKeyListener.Capitalize cap) "," Returns a new or existing instance with the specified capitalization and correction properties. <br /><br />"
"android.text.method.TextKeyListener.onKeyUp (View view, Editable content, int keyCode, KeyEvent event) "," Handles release of the meta keys. <br /><br />"
"android.text.method.TextKeyListener.onKeyDown (View view, Editable content, int keyCode, KeyEvent event) "," Handles presses of the meta keys. <br /><br />"
"android.text.method.TextKeyListener.onSpanRemoved (Spannable s, Object what, int start, int end) "," This method is called to notify you that the specified object has been detached from the specified range of the text. <br /><br />"
"android.text.method.TimeKeyListener.getInputType () "," no description <br /><br />"
"android.text.method.TimeKeyListener.getInstance () "," no description <br /><br />"
"android.text.method.Touch.getInitialScrollY (TextView widget, Spannable buffer) "," no description <br /><br />"
"android.text.method.Touch.scrollTo (TextView widget, Layout layout, int x, int y) "," Scrolls the specified widget to the specified coordinates, except constrains the X scrolling position to the horizontal regions of the text that will be visible after scrolling to the specified Y position. <br /><br />"
"android.text.method.Touch.onTouchEvent (TextView widget, Spannable buffer, MotionEvent event) "," Handles touch events for dragging. <br /><br />"
"android.text.method.Touch.getInitialScrollX (TextView widget, Spannable buffer) "," no description <br /><br />"
"android.text.method.TransformationMethod.onFocusChanged (View view, CharSequence sourceText, boolean focused, int direction, Rect previouslyFocusedRect) "," This method is called when the TextView that uses this TransformationMethod gains or loses focus. <br /><br />"
"android.text.method.TransformationMethod.getTransformation (CharSequence source, View view) "," Returns a CharSequence that is a transformation of the source text -- for example, replacing each character with a dot in a password field. <br /><br />"
"android.text.ParcelableSpan.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.Selection.moveRight (Spannable text, Layout layout) "," Move the cursor to the buffer offset physically to the right of the current offset, or return false if the cursor is already at at the right edge of the line and there is not another line to move it to. <br /><br />"
"android.text.Selection.extendLeft (Spannable text, Layout layout) "," Move the selection end to the buffer offset physically to the left of the current selection end. <br /><br />"
"android.text.Selection.setSelection (Spannable text, int start, int stop) "," Set the selection anchor to start and the selection edge to stop. <br /><br />"
"android.text.Selection.selectAll (Spannable text) "," Select the entire text. <br /><br />"
"android.text.Selection.moveToLeftEdge (Spannable text, Layout layout) "," no description <br /><br />"
"android.text.Selection.extendSelection (Spannable text, int index) "," Move the selection edge to offset index. <br /><br />"
"android.text.Selection.extendToRightEdge (Spannable text, Layout layout) "," no description <br /><br />"
"android.text.Selection.extendToLeftEdge (Spannable text, Layout layout) "," no description <br /><br />"
"android.text.Selection.setSelection (Spannable text, int index) "," Move the cursor to offset index. <br /><br />"
"android.text.Selection.moveToRightEdge (Spannable text, Layout layout) "," no description <br /><br />"
"android.text.Selection.getSelectionStart (CharSequence text) "," Return the offset of the selection anchor or cursor, or -1 if there is no selection or cursor. <br /><br />"
"android.text.Selection.extendDown (Spannable text, Layout layout) "," Move the selection end to the buffer offset physically below the current selection end. <br /><br />"
"android.text.Selection.moveLeft (Spannable text, Layout layout) "," Move the cursor to the buffer offset physically to the left of the current offset, or return false if the cursor is already at the left edge of the line and there is not another line to move it to. <br /><br />"
"android.text.Selection.extendRight (Spannable text, Layout layout) "," Move the selection end to the buffer offset physically to the right of the current selection end. <br /><br />"
"android.text.Selection.removeSelection (Spannable text) "," Remove the selection or cursor, if any, from the text. <br /><br />"
"android.text.Selection.moveUp (Spannable text, Layout layout) "," Move the cursor to the buffer offset physically above the current offset, to the beginning if it is on the top line but not at the start, or return false if the cursor is already on the top line. <br /><br />"
"android.text.Selection.extendUp (Spannable text, Layout layout) "," Move the selection end to the buffer offset physically above the current selection end. <br /><br />"
"android.text.Selection.getSelectionEnd (CharSequence text) "," Return the offset of the selection edge or cursor, or -1 if there is no selection or cursor. <br /><br />"
"android.text.Selection.moveDown (Spannable text, Layout layout) "," Move the cursor to the buffer offset physically below the current offset, to the end of the buffer if it is on the bottom line but not at the end, or return false if the cursor is already at the end of the buffer. <br /><br />"
"android.text.Spannable.Factory.getInstance () "," Returns the standard Spannable Factory. <br /><br />"
"android.text.Spannable.Factory.newSpannable (CharSequence source) "," Returns a new SpannableString from the specified CharSequence. <br /><br />"
"android.text.Spannable.removeSpan (Object what) "," Remove the specified object from the range of text to which it was attached, if any. <br /><br />"
"android.text.Spannable.setSpan (Object what, int start, int end, int flags) "," Attach the specified markup object to the range start end of the text, or move the object to that range if it was already attached elsewhere. <br /><br />"
"android.text.SpannableString.getSpanEnd (Object what) "," Return the end of the range of text to which the specified markup object is attached, or -1 if the object is not attached. <br /><br />"
"android.text.SpannableString.charAt (int i) "," Returns the character at index. <br /><br />"
"android.text.SpannableString.length () "," Returns the number of characters in this sequence. <br /><br />"
"android.text.SpannableString.nextSpanTransition (int start, int limit, Class kind) "," Return the first offset greater than or equal to start where a markup object of class type begins or ends, or limit if there are no starts or ends greater than or equal to start but less than limit. <br /><br />"
"android.text.SpannableString.getSpans (int queryStart, int queryEnd, Class<T> kind) "," Return an array of the markup objects attached to the specified slice of this CharSequence and whose type is the specified type or a subclass of it. <br /><br />"
"android.text.SpannableString.getSpanFlags (Object what)   Return the flags that were specified when setSpan (Object, int, int, int) "," Return the flags that were specified when setSpan(Object, int, int, int) was used to attach the specified markup object, or 0 if the specified object has not been attached. <br /><br />"
"android.text.SpannableString.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.text.SpannableString.getChars (int start, int end, char[] dest, int off)   Exactly like String.getChars () "," Exactly like String.getChars(): copy chars start through end - 1 from this CharSequence into dest beginning at offset destoff. <br /><br />"
"android.text.SpannableString.removeSpan (Object what) "," no description <br /><br />"
"android.text.SpannableString.valueOf (CharSequence source) "," no description <br /><br />"
"android.text.SpannableString.getSpanStart (Object what) "," Return the beginning of the range of text to which the specified markup object is attached, or -1 if the object is not attached. <br /><br />"
"android.text.SpannableString.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.text.SpannableString.subSequence (int start, int end)   Returns a CharSequence from the start index  (inclusive) to the end index  (exclusive) "," Returns a CharSequence from the start index (inclusive) to the end index (exclusive) of this sequence. <br /><br />"
"android.text.SpannableString.setSpan (Object what, int start, int end, int flags) "," no description <br /><br />"
"android.text.SpannableString.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.text.SpannableStringBuilder.getSpanEnd (Object what) "," Return the buffer offset of the end of the specified markup object, or -1 if it is not attached to this buffer. <br /><br />"
"android.text.SpannableStringBuilder.replace (int start, int end, CharSequence tb)   Convenience for replace (st, en, text, 0, text.length ()) "," Convenience for replace(st, en, text, 0, text.length()) <br /><br />"
"android.text.SpannableStringBuilder.length () "," Return the number of chars in the buffer. <br /><br />"
"android.text.SpannableStringBuilder.nextSpanTransition (int start, int limit, Class kind) "," Return the next offset after start but less than or equal to limit where a span of the specified type begins or ends. <br /><br />"
"android.text.SpannableStringBuilder.getSpans (int queryStart, int queryEnd, Class<T> kind) "," Return an array of the spans of the specified type that overlap the specified range of the buffer. <br /><br />"
"android.text.SpannableStringBuilder.insert (int where, CharSequence tb, int start, int end)   Convenience for replace (where, where, text, start, end) "," Convenience for replace(where, where, text, start, end) <br /><br />"
"android.text.SpannableStringBuilder.insert (int where, CharSequence tb)   Convenience for replace (where, where, text, 0, text.length ()) "," Convenience for replace(where, where, text, 0, text.length()); <br /><br />"
"android.text.SpannableStringBuilder.getChars (int start, int end, char[] dest, int destoff) "," Copy the specified range of chars from this buffer into the specified array, beginning at the specified offset. <br /><br />"
"android.text.SpannableStringBuilder.toString () "," Return a String containing a copy of the chars in this buffer. <br /><br />"
"android.text.SpannableStringBuilder.clearSpans ()   Removes all spans from the Editable, as if by calling removeSpan (Object) "," Removes all spans from the Editable, as if by calling removeSpan(Object) on each of them. <br /><br />"
"android.text.SpannableStringBuilder.append (CharSequence text, Object what, int flags) "," Appends the character sequence text and spans what over the appended part. <br /><br />"
"android.text.SpannableStringBuilder.removeSpan (Object what) "," Remove the specified markup object from the buffer. <br /><br />"
"android.text.SpannableStringBuilder.getSpanStart (Object what) "," Return the buffer offset of the beginning of the specified markup object, or -1 if it is not attached to this buffer. <br /><br />"
"android.text.SpannableStringBuilder.delete (int start, int end)   Convenience for replace (st, en, '', 0, 0) "," Convenience for replace(st, en, '', 0, 0) <br /><br />"
"android.text.SpannableStringBuilder.setSpan (Object what, int start, int end, int flags) "," Mark the specified range of text with the specified object. <br /><br />"
"android.text.SpannableStringBuilder.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.text.SpannableStringBuilder.append (CharSequence text, int start, int end)   Convenience for replace (length (), length (), text, start, end) "," Convenience for replace(length(), length(), text, start, end) <br /><br />"
"android.text.SpannableStringBuilder.append (char text)   Convenience for append (String.valueOf (text)) "," Convenience for append(String.valueOf(text)). <br /><br />"
"android.text.SpannableStringBuilder.getFilters () "," Returns the array of input filters that are currently applied to changes to this Editable. <br /><br />"
"android.text.SpannableStringBuilder.getSpanFlags (Object what) "," Return the flags of the end of the specified markup object, or 0 if it is not attached to this buffer. <br /><br />"
"android.text.SpannableStringBuilder.clear ()   Convenience for replace (0, length (), '', 0, 0) "," Convenience for replace(0, length(), '', 0, 0) <br /><br />"
"android.text.SpannableStringBuilder.getTextRunCursor (int contextStart, int contextEnd, int dir, int offset, int cursorOpt, Paint p) "," This method was deprecated in API level 12. This is an internal method, refrain from using it in your code <br /><br />"
"android.text.SpannableStringBuilder.append (CharSequence text)   Convenience for replace (length (), length (), text, 0, text.length ()) "," Convenience for replace(length(), length(), text, 0, text.length()) <br /><br />"
"android.text.SpannableStringBuilder.valueOf (CharSequence source) "," no description <br /><br />"
"android.text.SpannableStringBuilder.subSequence (int start, int end) "," Return a new CharSequence containing a copy of the specified range of this buffer, including the overlapping spans. <br /><br />"
"android.text.SpannableStringBuilder.charAt (int where) "," Return the char at the specified offset within the buffer. <br /><br />"
"android.text.SpannableStringBuilder.replace (int start, int end, CharSequence tb, int tbstart, int tbend)   Replaces the specified range  (st en) "," Replaces the specified range ( st en) of text in this Editable with a copy of the slice start end from source. <br /><br />"
"android.text.SpannableStringBuilder.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.text.SpannableStringBuilder.setFilters (InputFilter[] filters) "," Sets the series of filters that will be called in succession whenever the text of this Editable is changed, each of which has the opportunity to limit or transform the text that is being inserted. <br /><br />"
"android.text.Spanned.nextSpanTransition (int start, int limit, Class type) "," Return the first offset greater than or equal to start where a markup object of class type begins or ends, or limit if there are no starts or ends greater than or equal to start but less than limit. <br /><br />"
"android.text.Spanned.getSpanStart (Object tag) "," Return the beginning of the range of text to which the specified markup object is attached, or -1 if the object is not attached. <br /><br />"
"android.text.Spanned.getSpans (int start, int end, Class<T> type) "," Return an array of the markup objects attached to the specified slice of this CharSequence and whose type is the specified type or a subclass of it. <br /><br />"
"android.text.Spanned.getSpanEnd (Object tag) "," Return the end of the range of text to which the specified markup object is attached, or -1 if the object is not attached. <br /><br />"
"android.text.Spanned.getSpanFlags (Object tag)   Return the flags that were specified when setSpan (Object, int, int, int) "," Return the flags that were specified when setSpan(Object, int, int, int) was used to attach the specified markup object, or 0 if the specified object has not been attached. <br /><br />"
"android.text.SpannedString.getSpanEnd (Object what) "," Return the end of the range of text to which the specified markup object is attached, or -1 if the object is not attached. <br /><br />"
"android.text.SpannedString.charAt (int i) "," Returns the character at index. <br /><br />"
"android.text.SpannedString.length () "," Returns the number of characters in this sequence. <br /><br />"
"android.text.SpannedString.nextSpanTransition (int start, int limit, Class kind) "," Return the first offset greater than or equal to start where a markup object of class type begins or ends, or limit if there are no starts or ends greater than or equal to start but less than limit. <br /><br />"
"android.text.SpannedString.getSpans (int queryStart, int queryEnd, Class<T> kind) "," Return an array of the markup objects attached to the specified slice of this CharSequence and whose type is the specified type or a subclass of it. <br /><br />"
"android.text.SpannedString.getSpanFlags (Object what)   Return the flags that were specified when setSpan (Object, int, int, int) "," Return the flags that were specified when setSpan(Object, int, int, int) was used to attach the specified markup object, or 0 if the specified object has not been attached. <br /><br />"
"android.text.SpannedString.getChars (int start, int end, char[] dest, int off)   Exactly like String.getChars () "," Exactly like String.getChars(): copy chars start through end - 1 from this CharSequence into dest beginning at offset destoff. <br /><br />"
"android.text.SpannedString.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.text.SpannedString.valueOf (CharSequence source) "," no description <br /><br />"
"android.text.SpannedString.getSpanStart (Object what) "," Return the beginning of the range of text to which the specified markup object is attached, or -1 if the object is not attached. <br /><br />"
"android.text.SpannedString.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.text.SpannedString.subSequence (int start, int end)   Returns a CharSequence from the start index  (inclusive) to the end index  (exclusive) "," Returns a CharSequence from the start index (inclusive) to the end index (exclusive) of this sequence. <br /><br />"
"android.text.SpannedString.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.text.SpanWatcher.onSpanAdded (Spannable text, Object what, int start, int end) "," This method is called to notify you that the specified object has been attached to the specified range of the text. <br /><br />"
"android.text.SpanWatcher.onSpanRemoved (Spannable text, Object what, int start, int end) "," This method is called to notify you that the specified object has been detached from the specified range of the text. <br /><br />"
"android.text.SpanWatcher.onSpanChanged (Spannable text, Object what, int ostart, int oend, int nstart, int nend) "," This method is called to notify you that the specified object has been relocated from the range ostart oend to the new range nstart nend of the text. <br /><br />"
"android.text.StaticLayout.getLineForVertical (int vertical) "," Get the line number corresponding to the specified vertical position. <br /><br />"
"android.text.StaticLayout.getLineDirections (int line) "," Returns the directional run information for the specified line. <br /><br />"
"android.text.StaticLayout.getLineStart (int line)   Return the text offset of the beginning of the specified line  (0 getLineCount ()) "," Return the text offset of the beginning of the specified line ( 0 getLineCount()). <br /><br />"
"android.text.StaticLayout.getLineDescent (int line)   Return the descent of the specified line (0 getLineCount () - 1) "," Return the descent of the specified line(0 getLineCount() - 1). <br /><br />"
"android.text.StaticLayout.getEllipsizedWidth ()   Return the width to which this Layout is ellipsizing, or getWidth () "," Return the width to which this Layout is ellipsizing, or getWidth() if it is not doing anything special. <br /><br />"
"android.text.StaticLayout.getParagraphDirection (int line)   Returns the primary directionality of the paragraph containing the specified line, either 1 for left-to-right lines, or -1 for right-to-left lines  (see DIR_LEFT_TO_RIGHT, DIR_RIGHT_TO_LEFT) "," Returns the primary directionality of the paragraph containing the specified line, either 1 for left-to-right lines, or -1 for right-to-left lines (see DIR_LEFT_TO_RIGHT, DIR_RIGHT_TO_LEFT). <br /><br />"
"android.text.StaticLayout.getEllipsisCount (int line) "," Returns the number of characters to be ellipsized away, or 0 if no ellipsis is to take place. <br /><br />"
"android.text.StaticLayout.getBottomPadding () "," Returns the number of extra pixels of descent padding in the bottom line of the Layout. <br /><br />"
"android.text.StaticLayout.getLineTop (int line)   Return the vertical position of the top of the specified line  (0 getLineCount ()) "," Return the vertical position of the top of the specified line (0 getLineCount()). <br /><br />"
"android.text.StaticLayout.getEllipsisStart (int line) "," Return the offset of the first character to be ellipsized away, relative to the start of the line. <br /><br />"
"android.text.StaticLayout.getLineCount () "," Return the number of lines of text in this layout. <br /><br />"
"android.text.StaticLayout.getLineContainsTab (int line) "," Returns whether the specified line contains one or more characters that need to be handled specially, like tabs or emoji. <br /><br />"
"android.text.StaticLayout.getTopPadding ()   Returns the  (negative) "," Returns the (negative) number of extra pixels of ascent padding in the top line of the Layout. <br /><br />"
"android.text.style.AbsoluteSizeSpan.updateDrawState (TextPaint ds) "," no description <br /><br />"
"android.text.style.AbsoluteSizeSpan.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.style.AbsoluteSizeSpan.getDip () "," no description <br /><br />"
"android.text.style.AbsoluteSizeSpan.updateMeasureState (TextPaint ds) "," no description <br /><br />"
"android.text.style.AbsoluteSizeSpan.getSize () "," no description <br /><br />"
"android.text.style.AbsoluteSizeSpan.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.style.AbsoluteSizeSpan.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.style.AlignmentSpan.Standard.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.style.AlignmentSpan.Standard.getAlignment () "," no description <br /><br />"
"android.text.style.AlignmentSpan.Standard.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.style.AlignmentSpan.Standard.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.style.BackgroundColorSpan.updateDrawState (TextPaint ds) "," no description <br /><br />"
"android.text.style.BackgroundColorSpan.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.style.BackgroundColorSpan.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.style.BackgroundColorSpan.getBackgroundColor () "," no description <br /><br />"
"android.text.style.BackgroundColorSpan.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.style.BulletSpan.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.style.BulletSpan.getLeadingMargin (boolean first) "," Returns the amount by which to adjust the leading margin. <br /><br />"
"android.text.style.BulletSpan.drawLeadingMargin (Canvas c, Paint p, int x, int dir, int top, int baseline, int bottom, CharSequence text, int start, int end, boolean first, Layout l) "," Renders the leading margin. <br /><br />"
"android.text.style.BulletSpan.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.style.BulletSpan.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.style.CharacterStyle.getUnderlying ()   Returns 'this' for most CharacterStyles, but for CharacterStyles that were generated by wrap (CharacterStyle) "," Returns 'this' for most CharacterStyles, but for CharacterStyles that were generated by wrap(CharacterStyle), returns the underlying CharacterStyle. <br /><br />"
"android.text.style.CharacterStyle.updateDrawState (TextPaint tp) "," no description <br /><br />"
"android.text.style.CharacterStyle.wrap (CharacterStyle cs) "," A given CharacterStyle can only applied to a single region of a given Spanned. <br /><br />"
"android.text.style.ClickableSpan.updateDrawState (TextPaint ds) "," Makes the text underlined and in the link color. <br /><br />"
"android.text.style.ClickableSpan.onClick (View widget) "," Performs the click action associated with this span. <br /><br />"
"android.text.style.DrawableMarginSpan.drawLeadingMargin (Canvas c, Paint p, int x, int dir, int top, int baseline, int bottom, CharSequence text, int start, int end, boolean first, Layout layout) "," Renders the leading margin. <br /><br />"
"android.text.style.DrawableMarginSpan.chooseHeight (CharSequence text, int start, int end, int istartv, int v, Paint.FontMetricsInt fm) "," no description <br /><br />"
"android.text.style.DrawableMarginSpan.getLeadingMargin (boolean first) "," Returns the amount by which to adjust the leading margin. <br /><br />"
"android.text.style.DynamicDrawableSpan.getVerticalAlignment () "," Returns the vertical alignment of this span, one of ALIGN_BOTTOM or ALIGN_BASELINE. <br /><br />"
"android.text.style.DynamicDrawableSpan.draw (Canvas canvas, CharSequence text, int start, int end, float x, int top, int y, int bottom, Paint paint) "," no description <br /><br />"
"android.text.style.DynamicDrawableSpan.getSize (Paint paint, CharSequence text, int start, int end, Paint.FontMetricsInt fm) "," no description <br /><br />"
"android.text.style.DynamicDrawableSpan.getDrawable () "," Your subclass must implement this method to provide the bitmap to be drawn. <br /><br />"
"android.text.style.EasyEditSpan.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.style.EasyEditSpan.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.style.EasyEditSpan.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.style.ForegroundColorSpan.updateDrawState (TextPaint ds) "," no description <br /><br />"
"android.text.style.ForegroundColorSpan.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.style.ForegroundColorSpan.getForegroundColor () "," no description <br /><br />"
"android.text.style.ForegroundColorSpan.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.style.ForegroundColorSpan.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.style.IconMarginSpan.drawLeadingMargin (Canvas c, Paint p, int x, int dir, int top, int baseline, int bottom, CharSequence text, int start, int end, boolean first, Layout layout) "," Renders the leading margin. <br /><br />"
"android.text.style.IconMarginSpan.chooseHeight (CharSequence text, int start, int end, int istartv, int v, Paint.FontMetricsInt fm) "," no description <br /><br />"
"android.text.style.IconMarginSpan.getLeadingMargin (boolean first) "," Returns the amount by which to adjust the leading margin. <br /><br />"
"android.text.style.ImageSpan.getDrawable () "," Your subclass must implement this method to provide the bitmap to be drawn. <br /><br />"
"android.text.style.ImageSpan.getSource () "," Returns the source string that was saved during construction. <br /><br />"
"android.text.style.LeadingMarginSpan.LeadingMarginSpan2.getLeadingMarginLineCount () "," Returns the number of lines of the paragraph to which this object is attached that the 'first line' margin will apply to. <br /><br />"
"android.text.style.LeadingMarginSpan.Standard.drawLeadingMargin (Canvas c, Paint p, int x, int dir, int top, int baseline, int bottom, CharSequence text, int start, int end, boolean first, Layout layout) "," Renders the leading margin. <br /><br />"
"android.text.style.LeadingMarginSpan.Standard.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.style.LeadingMarginSpan.Standard.getLeadingMargin (boolean first) "," Returns the amount by which to adjust the leading margin. <br /><br />"
"android.text.style.LeadingMarginSpan.Standard.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.style.LeadingMarginSpan.Standard.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.style.LineBackgroundSpan.drawBackground (Canvas c, Paint p, int left, int right, int top, int baseline, int bottom, CharSequence text, int start, int end, int lnum) "," no description <br /><br />"
"android.text.style.LineHeightSpan.WithDensity.chooseHeight (CharSequence text, int start, int end, int spanstartv, int v, Paint.FontMetricsInt fm, TextPaint paint) "," no description <br /><br />"
"android.text.style.LocaleSpan.updateDrawState (TextPaint ds) "," no description <br /><br />"
"android.text.style.LocaleSpan.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.style.LocaleSpan.getLocale () "," Returns the Locale. <br /><br />"
"android.text.style.LocaleSpan.updateMeasureState (TextPaint paint) "," no description <br /><br />"
"android.text.style.LocaleSpan.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.style.LocaleSpan.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.style.MaskFilterSpan.updateDrawState (TextPaint ds) "," no description <br /><br />"
"android.text.style.MaskFilterSpan.getMaskFilter () "," no description <br /><br />"
"android.text.style.MetricAffectingSpan.getUnderlying ()   Returns 'this' for most MetricAffectingSpans, but for MetricAffectingSpans that were generated by wrap (CharacterStyle) "," Returns 'this' for most MetricAffectingSpans, but for MetricAffectingSpans that were generated by wrap(CharacterStyle), returns the underlying MetricAffectingSpan. <br /><br />"
"android.text.style.MetricAffectingSpan.updateMeasureState (TextPaint p) "," no description <br /><br />"
"android.text.style.QuoteSpan.drawLeadingMargin (Canvas c, Paint p, int x, int dir, int top, int baseline, int bottom, CharSequence text, int start, int end, boolean first, Layout layout) "," Renders the leading margin. <br /><br />"
"android.text.style.QuoteSpan.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.style.QuoteSpan.getLeadingMargin (boolean first) "," Returns the amount by which to adjust the leading margin. <br /><br />"
"android.text.style.QuoteSpan.getColor () "," no description <br /><br />"
"android.text.style.QuoteSpan.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.style.QuoteSpan.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.style.RasterizerSpan.updateDrawState (TextPaint ds) "," no description <br /><br />"
"android.text.style.RasterizerSpan.getRasterizer () "," no description <br /><br />"
"android.text.style.RelativeSizeSpan.updateDrawState (TextPaint ds) "," no description <br /><br />"
"android.text.style.RelativeSizeSpan.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.style.RelativeSizeSpan.updateMeasureState (TextPaint ds) "," no description <br /><br />"
"android.text.style.RelativeSizeSpan.getSizeChange () "," no description <br /><br />"
"android.text.style.RelativeSizeSpan.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.style.RelativeSizeSpan.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.style.ReplacementSpan.updateDrawState (TextPaint ds) "," This method does nothing, since ReplacementSpans are drawn explicitly instead of affecting Paint properties. <br /><br />"
"android.text.style.ReplacementSpan.draw (Canvas canvas, CharSequence text, int start, int end, float x, int top, int y, int bottom, Paint paint) "," no description <br /><br />"
"android.text.style.ReplacementSpan.getSize (Paint paint, CharSequence text, int start, int end, Paint.FontMetricsInt fm) "," no description <br /><br />"
"android.text.style.ReplacementSpan.updateMeasureState (TextPaint p) "," This method does nothing, since ReplacementSpans are measured explicitly instead of affecting Paint properties. <br /><br />"
"android.text.style.ScaleXSpan.updateDrawState (TextPaint ds) "," no description <br /><br />"
"android.text.style.ScaleXSpan.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.style.ScaleXSpan.updateMeasureState (TextPaint ds) "," no description <br /><br />"
"android.text.style.ScaleXSpan.getScaleX () "," no description <br /><br />"
"android.text.style.ScaleXSpan.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.style.ScaleXSpan.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.style.StrikethroughSpan.updateDrawState (TextPaint ds) "," no description <br /><br />"
"android.text.style.StrikethroughSpan.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.style.StrikethroughSpan.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.style.StrikethroughSpan.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.style.StyleSpan.updateDrawState (TextPaint ds) "," no description <br /><br />"
"android.text.style.StyleSpan.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.style.StyleSpan.updateMeasureState (TextPaint paint) "," no description <br /><br />"
"android.text.style.StyleSpan.getStyle () "," Returns the style constant defined in Typeface. <br /><br />"
"android.text.style.StyleSpan.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.style.StyleSpan.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.style.SubscriptSpan.updateDrawState (TextPaint tp) "," no description <br /><br />"
"android.text.style.SubscriptSpan.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.style.SubscriptSpan.updateMeasureState (TextPaint tp) "," no description <br /><br />"
"android.text.style.SubscriptSpan.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.style.SubscriptSpan.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.style.SuggestionSpan.getSuggestions () "," no description <br /><br />"
"android.text.style.SuggestionSpan.updateDrawState (TextPaint tp) "," no description <br /><br />"
"android.text.style.SuggestionSpan.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.style.SuggestionSpan.getLocale () "," no description <br /><br />"
"android.text.style.SuggestionSpan.setFlags (int flags) "," no description <br /><br />"
"android.text.style.SuggestionSpan.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.text.style.SuggestionSpan.getFlags () "," no description <br /><br />"
"android.text.style.SuggestionSpan.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.style.SuggestionSpan.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.style.SuggestionSpan.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.text.style.SuperscriptSpan.updateDrawState (TextPaint tp) "," no description <br /><br />"
"android.text.style.SuperscriptSpan.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.style.SuperscriptSpan.updateMeasureState (TextPaint tp) "," no description <br /><br />"
"android.text.style.SuperscriptSpan.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.style.SuperscriptSpan.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.style.TabStopSpan.Standard.getTabStop () "," Returns the offset of the tab stop from the leading margin of the line. <br /><br />"
"android.text.style.TextAppearanceSpan.getTextColor () "," Returns the text color specified by this span, or null if it does not specify one. <br /><br />"
"android.text.style.TextAppearanceSpan.getLinkTextColor () "," Returns the link color specified by this span, or null if it does not specify one. <br /><br />"
"android.text.style.TextAppearanceSpan.updateDrawState (TextPaint ds) "," no description <br /><br />"
"android.text.style.TextAppearanceSpan.getTextSize () "," Returns the text size specified by this span, or -1 if it does not specify one. <br /><br />"
"android.text.style.TextAppearanceSpan.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.style.TextAppearanceSpan.updateMeasureState (TextPaint ds) "," no description <br /><br />"
"android.text.style.TextAppearanceSpan.getFamily () "," Returns the typeface family specified by this span, or null if it does not specify one. <br /><br />"
"android.text.style.TextAppearanceSpan.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.style.TextAppearanceSpan.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.style.TextAppearanceSpan.getTextStyle () "," Returns the text style specified by this span, or 0 if it does not specify one. <br /><br />"
"android.text.style.TtsSpan.Builder<C extends android.text.style.TtsSpan.Builder<?>>.setStringArgument (String arg, String value) "," Sets an argument to a string value. <br /><br />"
"android.text.style.TtsSpan.Builder<C extends android.text.style.TtsSpan.Builder<?>>.setIntArgument (String arg, int value) "," Sets an argument to an int value. <br /><br />"
"android.text.style.TtsSpan.Builder<C extends android.text.style.TtsSpan.Builder<?>>.build () "," Returns a TtsSpan built from the parameters set by the setter methods. <br /><br />"
"android.text.style.TtsSpan.Builder<C extends android.text.style.TtsSpan.Builder<?>>.setLongArgument (String arg, long value) "," Sets an argument to a long value. <br /><br />"
"android.text.style.TtsSpan.CardinalBuilder.setNumber (long number) "," Convenience method that converts the number to a String and set it to the value for ARG_NUMBER. <br /><br />"
"android.text.style.TtsSpan.CardinalBuilder.setNumber (String number) "," Sets the ARG_NUMBER argument. <br /><br />"
"android.text.style.TtsSpan.DateBuilder.setDay (int day) "," Sets the ARG_DAY argument. <br /><br />"
"android.text.style.TtsSpan.DateBuilder.setYear (int year) "," Sets the ARG_YEAR argument. <br /><br />"
"android.text.style.TtsSpan.DateBuilder.setWeekday (int weekday) "," Sets the ARG_WEEKDAY argument. <br /><br />"
"android.text.style.TtsSpan.DateBuilder.setMonth (int month) "," Sets the ARG_MONTH argument. <br /><br />"
"android.text.style.TtsSpan.DecimalBuilder.setArgumentsFromDouble (double number, int minimumFractionDigits, int maximumFractionDigits) "," Convenience method takes a double and a maximum number of fractional digits, it sets the ARG_INTEGER_PART and ARG_FRACTIONAL_PART arguments. <br /><br />"
"android.text.style.TtsSpan.DecimalBuilder.setIntegerPart (String integerPart) "," Sets the ARG_INTEGER_PART argument. <br /><br />"
"android.text.style.TtsSpan.DecimalBuilder.setIntegerPart (long integerPart) "," Convenience method that converts the number to a String and sets it to the value for ARG_INTEGER_PART. <br /><br />"
"android.text.style.TtsSpan.DecimalBuilder.setFractionalPart (String fractionalPart) "," Sets the ARG_FRACTIONAL_PART argument. <br /><br />"
"android.text.style.TtsSpan.DigitsBuilder.setDigits (String digits) "," Sets the ARG_DIGITS argument. <br /><br />"
"android.text.style.TtsSpan.ElectronicBuilder.setDomain (String domain) "," Sets the ARG_DOMAIN argument. <br /><br />"
"android.text.style.TtsSpan.ElectronicBuilder.setPort (int port) "," Sets the ARG_PORT argument. <br /><br />"
"android.text.style.TtsSpan.ElectronicBuilder.setFragmentId (String fragmentId) "," Sets the ARG_FRAGMENT_ID argument. <br /><br />"
"android.text.style.TtsSpan.ElectronicBuilder.setProtocol (String protocol) "," Sets the ARG_PROTOCOL argument. <br /><br />"
"android.text.style.TtsSpan.ElectronicBuilder.setQueryString (String queryString) "," Sets the ARG_QUERY_STRING argument. <br /><br />"
"android.text.style.TtsSpan.ElectronicBuilder.setUsername (String username) "," Sets the ARG_USERNAME argument. <br /><br />"
"android.text.style.TtsSpan.ElectronicBuilder.setPath (String path) "," Sets the ARG_PATH argument. <br /><br />"
"android.text.style.TtsSpan.ElectronicBuilder.setPassword (String password) "," Sets the ARG_PASSWORD argument. <br /><br />"
"android.text.style.TtsSpan.ElectronicBuilder.setEmailArguments (String username, String domain) "," Sets the ARG_USERNAME and ARG_DOMAIN arguments, representing an email address. <br /><br />"
"android.text.style.TtsSpan.FractionBuilder.setNumerator (long numerator) "," Convenience method that converts the numerator to a String and sets the argument ARG_NUMERATOR. <br /><br />"
"android.text.style.TtsSpan.FractionBuilder.setDenominator (String denominator) "," Sets the ARG_DENOMINATOR argument. <br /><br />"
"android.text.style.TtsSpan.FractionBuilder.setIntegerPart (String integerPart) "," Sets the ARG_INTEGER_PART argument. <br /><br />"
"android.text.style.TtsSpan.FractionBuilder.setNumerator (String numerator) "," Sets the ARG_NUMERATOR argument. <br /><br />"
"android.text.style.TtsSpan.FractionBuilder.setIntegerPart (long integerPart) "," Convenience method that converts the integer to a String and sets the argument ARG_NUMBER. <br /><br />"
"android.text.style.TtsSpan.FractionBuilder.setDenominator (long denominator) "," Convenience method that converts the denominator to a String and sets the argument ARG_DENOMINATOR. <br /><br />"
"android.text.style.TtsSpan.getArgs () "," Returns a bundle of the arguments set. <br /><br />"
"android.text.style.TtsSpan.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.style.TtsSpan.getType () "," Returns the type. <br /><br />"
"android.text.style.TtsSpan.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.style.TtsSpan.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.style.TtsSpan.MeasureBuilder.setNumerator (long numerator) "," Convenience method that converts the numerator to a String and set it to the value for ARG_NUMERATOR. <br /><br />"
"android.text.style.TtsSpan.MeasureBuilder.setNumber (long number) "," Convenience method that converts the number to a String and set it to the value for ARG_NUMBER. <br /><br />"
"android.text.style.TtsSpan.MeasureBuilder.setDenominator (String denominator) "," Sets the ARG_DENOMINATOR argument. <br /><br />"
"android.text.style.TtsSpan.MeasureBuilder.setIntegerPart (String integerPart) "," Sets the ARG_INTEGER_PART argument. <br /><br />"
"android.text.style.TtsSpan.MeasureBuilder.setNumber (String number) "," Sets the ARG_NUMBER argument. <br /><br />"
"android.text.style.TtsSpan.MeasureBuilder.setNumerator (String numerator) "," Sets the ARG_NUMERATOR argument. <br /><br />"
"android.text.style.TtsSpan.MeasureBuilder.setIntegerPart (long integerPart) "," Convenience method that converts the integer part to a String and set it to the value for ARG_INTEGER_PART. <br /><br />"
"android.text.style.TtsSpan.MeasureBuilder.setDenominator (long denominator) "," Convenience method that converts the denominator to a String and set it to the value for ARG_DENOMINATOR. <br /><br />"
"android.text.style.TtsSpan.MeasureBuilder.setUnit (String unit) "," Sets the ARG_UNIT argument. <br /><br />"
"android.text.style.TtsSpan.MeasureBuilder.setFractionalPart (String fractionalPart) "," Sets the ARG_FRACTIONAL_PART argument. <br /><br />"
"android.text.style.TtsSpan.MoneyBuilder.setQuantity (String quantity) "," Sets the ARG_QUANTITY argument. <br /><br />"
"android.text.style.TtsSpan.MoneyBuilder.setCurrency (String currency) "," Sets the ARG_CURRENCY argument. <br /><br />"
"android.text.style.TtsSpan.MoneyBuilder.setIntegerPart (String integerPart) "," Sets the ARG_INTEGER_PART argument. <br /><br />"
"android.text.style.TtsSpan.MoneyBuilder.setIntegerPart (long integerPart) "," Convenience method that converts the number to a String and set it to the value for ARG_INTEGER_PART. <br /><br />"
"android.text.style.TtsSpan.MoneyBuilder.setFractionalPart (String fractionalPart) "," Sets the ARG_FRACTIONAL_PART argument. <br /><br />"
"android.text.style.TtsSpan.OrdinalBuilder.setNumber (long number) "," Convenience method that converts the number to a String and sets it to the value for ARG_NUMBER. <br /><br />"
"android.text.style.TtsSpan.OrdinalBuilder.setNumber (String number) "," Sets the ARG_NUMBER argument. <br /><br />"
"android.text.style.TtsSpan.SemioticClassBuilder<C extends android.text.style.TtsSpan.SemioticClassBuilder<?>>.setGender (String gender) "," Sets the gender information for this instance. <br /><br />"
"android.text.style.TtsSpan.SemioticClassBuilder<C extends android.text.style.TtsSpan.SemioticClassBuilder<?>>.setCase (String grammaticalCase) "," Sets the grammatical case information for this instance. <br /><br />"
"android.text.style.TtsSpan.SemioticClassBuilder<C extends android.text.style.TtsSpan.SemioticClassBuilder<?>>.setAnimacy (String animacy) "," Sets the animacy information for this instance. <br /><br />"
"android.text.style.TtsSpan.SemioticClassBuilder<C extends android.text.style.TtsSpan.SemioticClassBuilder<?>>.setMultiplicity (String multiplicity) "," Sets the multiplicity information for this instance. <br /><br />"
"android.text.style.TtsSpan.TelephoneBuilder.setExtension (String extension) "," Sets the ARG_EXTENSION argument. <br /><br />"
"android.text.style.TtsSpan.TelephoneBuilder.setCountryCode (String countryCode) "," Sets the ARG_COUNTRY_CODE argument. <br /><br />"
"android.text.style.TtsSpan.TelephoneBuilder.setNumberParts (String numberParts) "," Sets the ARG_NUMBER_PARTS argument. <br /><br />"
"android.text.style.TtsSpan.TextBuilder.setText (String text) "," Sets the ARG_TEXT argument, the text to be synthesized. <br /><br />"
"android.text.style.TtsSpan.TimeBuilder.setMinutes (int minutes) "," Sets the ARG_MINUTES argument. <br /><br />"
"android.text.style.TtsSpan.TimeBuilder.setHours (int hours) "," Sets the ARG_HOURS argument. <br /><br />"
"android.text.style.TtsSpan.VerbatimBuilder.setVerbatim (String verbatim) "," Sets the ARG_VERBATIM argument. <br /><br />"
"android.text.style.TypefaceSpan.updateDrawState (TextPaint ds) "," no description <br /><br />"
"android.text.style.TypefaceSpan.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.style.TypefaceSpan.updateMeasureState (TextPaint paint) "," no description <br /><br />"
"android.text.style.TypefaceSpan.getFamily () "," Returns the font family name. <br /><br />"
"android.text.style.TypefaceSpan.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.style.TypefaceSpan.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.style.UnderlineSpan.updateDrawState (TextPaint ds) "," no description <br /><br />"
"android.text.style.UnderlineSpan.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.style.UnderlineSpan.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.style.UnderlineSpan.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.style.URLSpan.getSpanTypeId () "," Return a special type identifier for this span class. <br /><br />"
"android.text.style.URLSpan.onClick (View widget) "," Performs the click action associated with this span. <br /><br />"
"android.text.style.URLSpan.getURL () "," no description <br /><br />"
"android.text.style.URLSpan.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.text.style.URLSpan.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.text.TextDirectionHeuristic.isRtl (CharSequence cs, int start, int count) "," Guess if a CharSequence is in the RTL direction or not. <br /><br />"
"android.text.TextDirectionHeuristic.isRtl (char[] array, int start, int count) "," Guess if a chars array is in the RTL direction or not. <br /><br />"
"android.text.TextPaint.set (TextPaint tp) "," Copy the fields from tp into this TextPaint, including the fields inherited from Paint. <br /><br />"
"android.text.TextUtils.EllipsizeCallback.ellipsized (int start, int end)   This method is called to report that the specified region of text was ellipsized away by a call to ellipsize (CharSequence, TextPaint, float, TextUtils.TruncateAt) "," This method is called to report that the specified region of text was ellipsized away by a call to ellipsize(CharSequence, TextPaint, float, TextUtils.TruncateAt). <br /><br />"
"android.text.TextUtils.lastIndexOf (CharSequence s, char ch, int start, int last) "," no description <br /><br />"
"android.text.TextUtils.join (CharSequence delimiter, Object[] tokens) "," Returns a string containing the tokens joined by delimiters. <br /><br />"
"android.text.TextUtils.lastIndexOf (CharSequence s, char ch, int last) "," no description <br /><br />"
"android.text.TextUtils.lastIndexOf (CharSequence s, char ch) "," no description <br /><br />"
"android.text.TextUtils.isDigitsOnly (CharSequence str) "," Returns whether the given CharSequence contains only digits. <br /><br />"
"android.text.TextUtils.ellipsize (CharSequence text, TextPaint paint, float avail, TextUtils.TruncateAt where, boolean preserveLength, TextUtils.EllipsizeCallback callback) "," Returns the original text if it fits in the specified width given the properties of the specified Paint, or, if it does not fit, a copy with ellipsis character added at the specified edge or center. <br /><br />"
"android.text.TextUtils.commaEllipsize (CharSequence text, TextPaint p, float avail, String oneMore, String more) "," Converts a CharSequence of the comma-separated form 'Andy, Bob, Charles, David' that is too wide to fit into the specified width into one like 'Andy, Bob, 2 more'. <br /><br />"
"android.text.TextUtils.indexOf (CharSequence s, char ch, int start) "," no description <br /><br />"
"android.text.TextUtils.getCapsMode (CharSequence cs, int off, int reqModes) "," Determine what caps mode should be in effect at the current offset in the text. <br /><br />"
"android.text.TextUtils.equals (CharSequence a, CharSequence b) "," Returns true if a and b are equal, including if they are both null. <br /><br />"
"android.text.TextUtils.getOffsetAfter (CharSequence text, int offset) "," no description <br /><br />"
"android.text.TextUtils.join (CharSequence delimiter, Iterable tokens) "," Returns a string containing the tokens joined by delimiters. <br /><br />"
"android.text.TextUtils.indexOf (CharSequence s, char ch, int start, int end) "," no description <br /><br />"
"android.text.TextUtils.isGraphic (char c) "," Returns whether this character is a printable character. <br /><br />"
"android.text.TextUtils.indexOf (CharSequence s, CharSequence needle, int start, int end) "," no description <br /><br />"
"android.text.TextUtils.writeToParcel (CharSequence cs, Parcel p, int parcelableFlags) "," Flatten a CharSequence and whatever styles can be copied across processes into the parcel. <br /><br />"
"android.text.TextUtils.getLayoutDirectionFromLocale (Locale locale) "," Return the layout direction for a given Locale <br /><br />"
"android.text.TextUtils.htmlEncode (String s) "," Html-encode the string. <br /><br />"
"android.text.TextUtils.isGraphic (CharSequence str) "," Returns whether the given CharSequence contains any printable characters. <br /><br />"
"android.text.TextUtils.indexOf (CharSequence s, CharSequence needle) "," no description <br /><br />"
"android.text.TextUtils.expandTemplate (CharSequence template, CharSequence... values) "," Replace instances of '^1', '^2', etc. <br /><br />"
"android.text.TextUtils.copySpansFrom (Spanned source, int start, int end, Class kind, Spannable dest, int destoff) "," Copies the spans from the region start...end in source to the region destoff...destoff+end-start in dest. <br /><br />"
"android.text.TextUtils.split (String text, Pattern pattern) "," Splits a string on a pattern. <br /><br />"
"android.text.TextUtils.stringOrSpannedString (CharSequence source) "," no description <br /><br />"
"android.text.TextUtils.indexOf (CharSequence s, CharSequence needle, int start) "," no description <br /><br />"
"android.text.TextUtils.replace (CharSequence template, String[] sources, CharSequence[] destinations) "," Return a new CharSequence in which each of the source strings is replaced by the corresponding element of the destinations. <br /><br />"
"android.text.TextUtils.isEmpty (CharSequence str) "," Returns true if the string is null or 0-length. <br /><br />"
"android.text.TextUtils.concat (CharSequence... text) "," Returns a CharSequence concatenating the specified CharSequences, retaining their spans if any. <br /><br />"
"android.text.TextUtils.getTrimmedLength (CharSequence s)   Returns the length that the specified CharSequence would have if spaces and control characters were trimmed from the start and end, as by trim () "," Returns the length that the specified CharSequence would have if spaces and control characters were trimmed from the start and end, as by trim(). <br /><br />"
"android.text.TextUtils.split (String text, String expression)   String.split () "," String.split() returns [''] when the string to be split is empty. <br /><br />"
"android.text.TextUtils.ellipsize (CharSequence text, TextPaint p, float avail, TextUtils.TruncateAt where) "," Returns the original text if it fits in the specified width given the properties of the specified Paint, or, if it does not fit, a truncated copy with ellipsis character added at the specified edge or center. <br /><br />"
"android.text.TextUtils.dumpSpans (CharSequence cs, Printer printer, String prefix) "," Debugging tool to print the spans in a CharSequence. <br /><br />"
"android.text.TextUtils.getOffsetBefore (CharSequence text, int offset) "," no description <br /><br />"
"android.text.TextUtils.getChars (CharSequence s, int start, int end, char[] dest, int destoff) "," no description <br /><br />"
"android.text.TextUtils.regionMatches (CharSequence one, int toffset, CharSequence two, int ooffset, int len) "," no description <br /><br />"
"android.text.TextUtils.getReverse (CharSequence source, int start, int end) "," no description <br /><br />"
"android.text.TextUtils.substring (CharSequence source, int start, int end) "," Create a new String object containing the given range of characters from the source string. <br /><br />"
"android.text.TextUtils.indexOf (CharSequence s, char ch) "," no description <br /><br />"
"android.text.TextUtils.SimpleStringSplitter.remove () "," Removes the last object returned by next from the collection. <br /><br />"
"android.text.TextUtils.SimpleStringSplitter.hasNext () "," Returns true if there is at least one more element, false otherwise. <br /><br />"
"android.text.TextUtils.SimpleStringSplitter.setString (String string) "," Sets the string to split <br /><br />"
"android.text.TextUtils.SimpleStringSplitter.iterator () "," Returns an Iterator for the elements in this object. <br /><br />"
"android.text.TextUtils.SimpleStringSplitter.next () "," Returns the next object and advances the iterator. <br /><br />"
"android.text.TextUtils.StringSplitter.setString (String string) "," no description <br /><br />"
"android.text.TextWatcher.onTextChanged (CharSequence s, int start, int before, int count) "," This method is called to notify you that, within s, the count characters beginning at start have just replaced old text that had length before. <br /><br />"
"android.text.TextWatcher.afterTextChanged (Editable s) "," This method is called to notify you that, somewhere within s, the text has been changed. <br /><br />"
"android.text.TextWatcher.beforeTextChanged (CharSequence s, int start, int count, int after) "," This method is called to notify you that, within s, the count characters beginning at start are about to be replaced by new text with length after. <br /><br />"
"android.text.util.Linkify.addLinks (Spannable text, int mask) "," Scans the text of the provided Spannable and turns all occurrences of the link types indicated in the mask into clickable links. <br /><br />"
"android.text.util.Linkify.addLinks (TextView text, Pattern p, String scheme, Linkify.MatchFilter matchFilter, Linkify.TransformFilter transformFilter) "," Applies a regex to the text of a TextView turning the matches into links. <br /><br />"
"android.text.util.Linkify.addLinks (TextView text, int mask) "," Scans the text of the provided TextView and turns all occurrences of the link types indicated in the mask into clickable links. <br /><br />"
"android.text.util.Linkify.addLinks (Spannable s, Pattern p, String scheme, Linkify.MatchFilter matchFilter, Linkify.TransformFilter transformFilter) "," Applies a regex to a Spannable turning the matches into links. <br /><br />"
"android.text.util.Linkify.addLinks (TextView text, Pattern pattern, String scheme) "," Applies a regex to the text of a TextView turning the matches into links. <br /><br />"
"android.text.util.Linkify.addLinks (Spannable text, Pattern pattern, String scheme) "," Applies a regex to a Spannable turning the matches into links. <br /><br />"
"android.text.util.Linkify.MatchFilter.acceptMatch (CharSequence s, int start, int end) "," Examines the character span matched by the pattern and determines if the match should be turned into an actionable link. <br /><br />"
"android.text.util.Linkify.TransformFilter.transformUrl (Matcher match, String url) "," Examines the matched text and either passes it through or uses the data in the Matcher state to produce a replacement. <br /><br />"
"android.text.util.Rfc822Token.getName () "," Returns the name part. <br /><br />"
"android.text.util.Rfc822Token.quoteName (String name) "," Returns the name, with internal backslashes and quotation marks preceded by backslashes. <br /><br />"
"android.text.util.Rfc822Token.setName (String name) "," Changes the name to the specified name. <br /><br />"
"android.text.util.Rfc822Token.setAddress (String address) "," Changes the address to the specified address. <br /><br />"
"android.text.util.Rfc822Token.setComment (String comment) "," Changes the comment to the specified comment. <br /><br />"
"android.text.util.Rfc822Token.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.text.util.Rfc822Token.getAddress () "," Returns the address part. <br /><br />"
"android.text.util.Rfc822Token.quoteNameIfNecessary (String name) "," Returns the name, conservatively quoting it if there are any characters that are likely to cause trouble outside of a quoted string, or returning it literally if it seems safe. <br /><br />"
"android.text.util.Rfc822Token.toString ()   Returns the name  (with quoting added if necessary), the comment  (in parentheses), and the address  (in angle brackets) "," Returns the name (with quoting added if necessary), the comment (in parentheses), and the address (in angle brackets). <br /><br />"
"android.text.util.Rfc822Token.quoteComment (String comment) "," Returns the comment, with internal backslashes and parentheses preceded by backslashes. <br /><br />"
"android.text.util.Rfc822Token.getComment () "," Returns the comment part. <br /><br />"
"android.text.util.Rfc822Token.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.text.util.Rfc822Tokenizer.tokenize (CharSequence text, Collection< Rfc822Token> out)   This constructor will try to take a string like 'Foo Bar  (something) <foo\@google.com>, blah\@google.com  (something) "," This constructor will try to take a string like 'Foo Bar (something) <foo\@google.com>, blah\@google.com (something)' and convert it into one or more Rfc822Tokens, output into the supplied collection. <br /><br />"
"android.text.util.Rfc822Tokenizer.findTokenStart (CharSequence text, int cursor) "," Returns the start of the token that ends at offset cursor within text. <br /><br />"
"android.text.util.Rfc822Tokenizer.findTokenEnd (CharSequence text, int cursor)   Returns the end of the token  (minus trailing punctuation) "," Returns the end of the token (minus trailing punctuation) that begins at offset cursor within text. <br /><br />"
"android.text.util.Rfc822Tokenizer.tokenize (CharSequence text)   This method will try to take a string like 'Foo Bar  (something) <foo\@google.com>, blah\@google.com  (something) "," This method will try to take a string like 'Foo Bar (something) <foo\@google.com>, blah\@google.com (something)' and convert it into one or more Rfc822Tokens. <br /><br />"
"android.text.util.Rfc822Tokenizer.terminateToken (CharSequence text) "," Terminates the specified address with a comma and space. <br /><br />"
"android.transition.ArcMotion.setMinimumHorizontalAngle (float angleInDegrees) "," Sets the minimum arc along the circle between two points aligned near horizontally. <br /><br />"
"android.transition.ArcMotion.getMinimumHorizontalAngle () "," Returns the minimum arc along the circle between two points aligned near horizontally. <br /><br />"
"android.transition.ArcMotion.setMaximumAngle (float angleInDegrees) "," Sets the maximum arc along the circle between two points. <br /><br />"
"android.transition.ArcMotion.getPath (float startX, float startY, float endX, float endY)   Provide a Path to interpolate between two points  (startX, startY) and  (endX, endY) "," Provide a Path to interpolate between two points (startX, startY) and (endX, endY). <br /><br />"
"android.transition.ArcMotion.getMaximumAngle () "," Returns the maximum arc along the circle between two points. <br /><br />"
"android.transition.ArcMotion.getMinimumVerticalAngle () "," Returns the minimum arc along the circle between two points aligned near vertically. <br /><br />"
"android.transition.ArcMotion.setMinimumVerticalAngle (float angleInDegrees) "," Sets the minimum arc along the circle between two points aligned near vertically. <br /><br />"
"android.transition.ChangeBounds.setReparent (boolean reparent) "," This method was deprecated in API level 21. Use ChangeTransform to handle transitions between different parents. <br /><br />"
"android.transition.ChangeBounds.getResizeClip () "," Returns true when the ChangeBounds will resize by changing the clip bounds during the view animation or false when bounds are changed. <br /><br />"
"android.transition.ChangeBounds.createAnimator (ViewGroup sceneRoot, TransitionValues startValues, TransitionValues endValues) "," This method creates an animation that will be run for this transition given the information in the startValues and endValues structures captured earlier for the start and end scenes. <br /><br />"
"android.transition.ChangeBounds.getTransitionProperties ()   Returns the set of property names used stored in the TransitionValues object passed into captureStartValues (TransitionValues) "," Returns the set of property names used stored in the TransitionValues object passed into captureStartValues(TransitionValues) that this transition cares about for the purposes of canceling overlapping animations. <br /><br />"
"android.transition.ChangeBounds.captureEndValues (TransitionValues transitionValues) "," Captures the values in the end scene for the properties that this transition monitors. <br /><br />"
"android.transition.ChangeBounds.captureStartValues (TransitionValues transitionValues) "," Captures the values in the start scene for the properties that this transition monitors. <br /><br />"
"android.transition.ChangeBounds.setResizeClip (boolean resizeClip) "," When resizeClip is true, ChangeBounds resizes the view using the clipBounds instead of changing the dimensions of the view during the animation. <br /><br />"
"android.transition.ChangeClipBounds.createAnimator (ViewGroup sceneRoot, TransitionValues startValues, TransitionValues endValues) "," This method creates an animation that will be run for this transition given the information in the startValues and endValues structures captured earlier for the start and end scenes. <br /><br />"
"android.transition.ChangeClipBounds.getTransitionProperties ()   Returns the set of property names used stored in the TransitionValues object passed into captureStartValues (TransitionValues) "," Returns the set of property names used stored in the TransitionValues object passed into captureStartValues(TransitionValues) that this transition cares about for the purposes of canceling overlapping animations. <br /><br />"
"android.transition.ChangeClipBounds.captureEndValues (TransitionValues transitionValues) "," Captures the values in the end scene for the properties that this transition monitors. <br /><br />"
"android.transition.ChangeClipBounds.captureStartValues (TransitionValues transitionValues) "," Captures the values in the start scene for the properties that this transition monitors. <br /><br />"
"android.transition.ChangeImageTransform.createAnimator (ViewGroup sceneRoot, TransitionValues startValues, TransitionValues endValues) "," Creates an Animator for ImageViews moving, changing dimensions, and/or changing ImageView.ScaleType. <br /><br />"
"android.transition.ChangeImageTransform.getTransitionProperties ()   Returns the set of property names used stored in the TransitionValues object passed into captureStartValues (TransitionValues) "," Returns the set of property names used stored in the TransitionValues object passed into captureStartValues(TransitionValues) that this transition cares about for the purposes of canceling overlapping animations. <br /><br />"
"android.transition.ChangeImageTransform.captureEndValues (TransitionValues transitionValues) "," Captures the values in the end scene for the properties that this transition monitors. <br /><br />"
"android.transition.ChangeImageTransform.captureStartValues (TransitionValues transitionValues) "," Captures the values in the start scene for the properties that this transition monitors. <br /><br />"
"android.transition.ChangeTransform.setReparentWithOverlay (boolean reparentWithOverlay) "," Sets whether changes to parent should use an overlay or not. <br /><br />"
"android.transition.ChangeTransform.setReparent (boolean reparent) "," Sets whether parent changes will be tracked by the ChangeTransform. <br /><br />"
"android.transition.ChangeTransform.createAnimator (ViewGroup sceneRoot, TransitionValues startValues, TransitionValues endValues) "," This method creates an animation that will be run for this transition given the information in the startValues and endValues structures captured earlier for the start and end scenes. <br /><br />"
"android.transition.ChangeTransform.getTransitionProperties ()   Returns the set of property names used stored in the TransitionValues object passed into captureStartValues (TransitionValues) "," Returns the set of property names used stored in the TransitionValues object passed into captureStartValues(TransitionValues) that this transition cares about for the purposes of canceling overlapping animations. <br /><br />"
"android.transition.ChangeTransform.getReparent () "," Returns whether parent changes will be tracked by the ChangeTransform. <br /><br />"
"android.transition.ChangeTransform.captureEndValues (TransitionValues transitionValues) "," Captures the values in the end scene for the properties that this transition monitors. <br /><br />"
"android.transition.ChangeTransform.captureStartValues (TransitionValues transitionValues) "," Captures the values in the start scene for the properties that this transition monitors. <br /><br />"
"android.transition.ChangeTransform.getReparentWithOverlay () "," Returns whether changes to parent should use an overlay or not. <br /><br />"
"android.transition.CircularPropagation.setPropagationSpeed (float propagationSpeed) "," Sets the speed at which transition propagation happens, relative to the duration of the Transition. <br /><br />"
"android.transition.CircularPropagation.getStartDelay (ViewGroup sceneRoot, Transition transition, TransitionValues startValues, TransitionValues endValues) "," Called by Transition to alter the Animator start delay. <br /><br />"
"android.transition.Explode.onDisappear (ViewGroup sceneRoot, View view, TransitionValues startValues, TransitionValues endValues) "," The default implementation of this method returns a null Animator. <br /><br />"
"android.transition.Explode.captureEndValues (TransitionValues transitionValues) "," Captures the values in the end scene for the properties that this transition monitors. <br /><br />"
"android.transition.Explode.captureStartValues (TransitionValues transitionValues) "," Captures the values in the start scene for the properties that this transition monitors. <br /><br />"
"android.transition.Explode.onAppear (ViewGroup sceneRoot, View view, TransitionValues startValues, TransitionValues endValues) "," The default implementation of this method returns a null Animator. <br /><br />"
"android.transition.Fade.onDisappear (ViewGroup sceneRoot, View view, TransitionValues startValues, TransitionValues endValues) "," The default implementation of this method returns a null Animator. <br /><br />"
"android.transition.Fade.onAppear (ViewGroup sceneRoot, View view, TransitionValues startValues, TransitionValues endValues) "," The default implementation of this method returns a null Animator. <br /><br />"
"android.transition.PathMotion.getPath (float startX, float startY, float endX, float endY)   Provide a Path to interpolate between two points  (startX, startY) and  (endX, endY) "," Provide a Path to interpolate between two points (startX, startY) and (endX, endY). <br /><br />"
"android.transition.PatternPathMotion.setPatternPath (Path patternPath) "," Sets the Path defining a pattern of motion between two coordinates. <br /><br />"
"android.transition.PatternPathMotion.getPatternPath () "," Returns the Path defining a pattern of motion between two coordinates. <br /><br />"
"android.transition.PatternPathMotion.getPath (float startX, float startY, float endX, float endY)   Provide a Path to interpolate between two points  (startX, startY) and  (endX, endY) "," Provide a Path to interpolate between two points (startX, startY) and (endX, endY). <br /><br />"
"android.transition.Scene.setExitAction (Runnable action) "," Scenes that are not defined with layout resources or hierarchies, or which need to perform additional steps after those hierarchies are changed to, should set an enter action, and possibly an exit action as well. <br /><br />"
"android.transition.Scene.getSceneRoot () "," Gets the root of the scene, which is the root of the view hierarchy affected by changes due to this scene, and which will be animated when this scene is entered. <br /><br />"
"android.transition.Scene.getSceneForLayout (ViewGroup sceneRoot, int layoutId, Context context) "," Returns a Scene described by the resource file associated with the given layoutId parameter. <br /><br />"
"android.transition.Scene.exit ()   Exits this scene, if it is the current scene on the scene's "," Exits this scene, if it is the current scene on the scene's scene root. <br /><br />"
"android.transition.Scene.setEnterAction (Runnable action) "," Scenes that are not defined with layout resources or hierarchies, or which need to perform additional steps after those hierarchies are changed to, should set an enter action, and possibly an exit action as well. <br /><br />"
"android.transition.Scene.enter () "," Enters this scene, which entails changing all values that are specified by this scene. <br /><br />"
"android.transition.SidePropagation.setPropagationSpeed (float propagationSpeed) "," Sets the speed at which transition propagation happens, relative to the duration of the Transition. <br /><br />"
"android.transition.SidePropagation.setSide (int side) "," Sets the side that is used to calculate the transition propagation. <br /><br />"
"android.transition.SidePropagation.getStartDelay (ViewGroup sceneRoot, Transition transition, TransitionValues startValues, TransitionValues endValues) "," Called by Transition to alter the Animator start delay. <br /><br />"
"android.transition.Slide.onDisappear (ViewGroup sceneRoot, View view, TransitionValues startValues, TransitionValues endValues) "," The default implementation of this method returns a null Animator. <br /><br />"
"android.transition.Slide.captureEndValues (TransitionValues transitionValues) "," Captures the values in the end scene for the properties that this transition monitors. <br /><br />"
"android.transition.Slide.captureStartValues (TransitionValues transitionValues) "," Captures the values in the start scene for the properties that this transition monitors. <br /><br />"
"android.transition.Slide.setSlideEdge (int slideEdge) "," Change the edge that Views appear and disappear from. <br /><br />"
"android.transition.Slide.onAppear (ViewGroup sceneRoot, View view, TransitionValues startValues, TransitionValues endValues) "," The default implementation of this method returns a null Animator. <br /><br />"
"android.transition.Slide.getSlideEdge () "," Returns the edge that Views appear and disappear from. <br /><br />"
"android.transition.Transition.EpicenterCallback.onGetEpicenter (Transition transition) "," Implementers must override to return the epicenter of the Transition in screen coordinates. <br /><br />"
"android.transition.Transition.setDuration (long duration) "," Sets the duration of this transition. <br /><br />"
"android.transition.Transition.getPathMotion () "," Returns the algorithm object used to interpolate along two dimensions. <br /><br />"
"android.transition.Transition.captureStartValues (TransitionValues transitionValues) "," Captures the values in the start scene for the properties that this transition monitors. <br /><br />"
"android.transition.Transition.excludeTarget (View target, boolean exclude) "," Whether to add the given target to the list of targets to exclude from this transition. <br /><br />"
"android.transition.Transition.setStartDelay (long startDelay) "," Sets the startDelay of this transition. <br /><br />"
"android.transition.Transition.removeListener (Transition.TransitionListener listener) "," Removes a listener from the set listening to this animation. <br /><br />"
"android.transition.Transition.excludeChildren (int targetId, boolean exclude) "," Whether to add the children of the given id to the list of targets to exclude from this transition. <br /><br />"
"android.transition.Transition.removeTarget (View target) "," Removes the given target from the list of targets that this Transition is interested in animating. <br /><br />"
"android.transition.Transition.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.transition.Transition.setPropagation (TransitionPropagation transitionPropagation) "," Sets the method for determining Animator start delays. <br /><br />"
"android.transition.Transition.getName () "," Returns the name of this Transition. <br /><br />"
"android.transition.Transition.setInterpolator (TimeInterpolator interpolator) "," Sets the interpolator of this transition. <br /><br />"
"android.transition.Transition.addTarget (Class targetType) "," Adds the Class of a target view that this Transition is interested in animating. <br /><br />"
"android.transition.Transition.getTransitionProperties ()   Returns the set of property names used stored in the TransitionValues object passed into captureStartValues (TransitionValues) "," Returns the set of property names used stored in the TransitionValues object passed into captureStartValues(TransitionValues) that this transition cares about for the purposes of canceling overlapping animations. <br /><br />"
"android.transition.Transition.captureEndValues (TransitionValues transitionValues) "," Captures the values in the end scene for the properties that this transition monitors. <br /><br />"
"android.transition.Transition.removeTarget (String targetName) "," Removes the given targetName from the list of transitionNames that this Transition is interested in animating. <br /><br />"
"android.transition.Transition.canRemoveViews () "," no description <br /><br />"
"android.transition.Transition.getTransitionValues (View view, boolean start) "," This method can be called by transitions to get the TransitionValues for any particular view during the transition-playing process. <br /><br />"
"android.transition.Transition.addListener (Transition.TransitionListener listener) "," Adds a listener to the set of listeners that are sent events through the life of an animation, such as start, repeat, and end. <br /><br />"
"android.transition.Transition.excludeTarget (String targetName, boolean exclude) "," Whether to add the given transitionName to the list of target transitionNames to exclude from this transition. <br /><br />"
"android.transition.Transition.excludeTarget (Class type, boolean exclude) "," Whether to add the given type to the list of types to exclude from this transition. <br /><br />"
"android.transition.Transition.getEpicenterCallback () "," Returns the callback used to find the epicenter of the Transition. <br /><br />"
"android.transition.Transition.addTarget (View target) "," Sets the target view instances that this Transition is interested in animating. <br /><br />"
"android.transition.Transition.getDuration () "," Returns the duration set on this transition. <br /><br />"
"android.transition.Transition.removeTarget (int targetId) "," Removes the given targetId from the list of ids that this Transition is interested in animating. <br /><br />"
"android.transition.Transition.getTargets () "," Returns the list of target views that this transition limits itself to tracking and animating. <br /><br />"
"android.transition.Transition.removeTarget (Class target) "," Removes the given target from the list of targets that this Transition is interested in animating. <br /><br />"
"android.transition.Transition.setEpicenterCallback (Transition.EpicenterCallback epicenterCallback) "," Sets the callback to use to find the epicenter of a Transition. <br /><br />"
"android.transition.Transition.getTargetNames () "," Returns the list of target transitionNames that this transition limits itself to tracking and animating. <br /><br />"
"android.transition.Transition.getStartDelay () "," Returns the startDelay set on this transition. <br /><br />"
"android.transition.Transition.excludeChildren (Class type, boolean exclude) "," Whether to add the given type to the list of types whose children should be excluded from this transition. <br /><br />"
"android.transition.Transition.addTarget (int targetId) "," Adds the id of a target view that this Transition is interested in animating. <br /><br />"
"android.transition.Transition.addTarget (String targetName) "," Adds the transitionName of a target view that this Transition is interested in animating. <br /><br />"
"android.transition.Transition.getPropagation () "," Returns the TransitionPropagation used to calculate Animator start delays. <br /><br />"
"android.transition.Transition.getTargetTypes () "," Returns the list of target transitionNames that this transition limits itself to tracking and animating. <br /><br />"
"android.transition.Transition.createAnimator (ViewGroup sceneRoot, TransitionValues startValues, TransitionValues endValues) "," This method creates an animation that will be run for this transition given the information in the startValues and endValues structures captured earlier for the start and end scenes. <br /><br />"
"android.transition.Transition.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.transition.Transition.excludeTarget (int targetId, boolean exclude) "," Whether to add the given id to the list of target ids to exclude from this transition. <br /><br />"
"android.transition.Transition.getEpicenter () "," Returns the epicenter as specified by the Transition.EpicenterCallback or null if no callback exists. <br /><br />"
"android.transition.Transition.getInterpolator () "," Returns the interpolator set on this transition. <br /><br />"
"android.transition.Transition.setMatchOrder (int... matches) "," Sets the order in which Transition matches View start and end values. <br /><br />"
"android.transition.Transition.setPathMotion (PathMotion pathMotion) "," Sets the algorithm used to calculate two-dimensional interpolation. <br /><br />"
"android.transition.Transition.getTargetIds () "," Returns the list of target IDs that this transition limits itself to tracking and animating. <br /><br />"
"android.transition.Transition.excludeChildren (View target, boolean exclude) "," Whether to add the children of given target to the list of target children to exclude from this transition. <br /><br />"
"android.transition.Transition.TransitionListener.onTransitionCancel (Transition transition) "," Notification about the cancellation of the transition. <br /><br />"
"android.transition.Transition.TransitionListener.onTransitionStart (Transition transition) "," Notification about the start of the transition. <br /><br />"
"android.transition.Transition.TransitionListener.onTransitionPause (Transition transition) "," Notification when a transition is paused. <br /><br />"
"android.transition.Transition.TransitionListener.onTransitionResume (Transition transition) "," Notification when a transition is resumed. <br /><br />"
"android.transition.Transition.TransitionListener.onTransitionEnd (Transition transition) "," Notification about the end of the transition. <br /><br />"
"android.transition.TransitionInflater.inflateTransitionManager (int resource, ViewGroup sceneRoot) "," Loads a TransitionManager object from a resource <br /><br />"
"android.transition.TransitionInflater.inflateTransition (int resource) "," Loads a Transition object from a resource <br /><br />"
"android.transition.TransitionInflater.from (Context context) "," Obtains the TransitionInflater from the given context. <br /><br />"
"android.transition.TransitionManager.go (Scene scene, Transition transition) "," Convenience method to simply change to the given scene using the given transition. <br /><br />"
"android.transition.TransitionManager.setTransition (Scene scene, Transition transition) "," Sets a specific transition to occur when the given scene is entered. <br /><br />"
"android.transition.TransitionManager.setTransition (Scene fromScene, Scene toScene, Transition transition) "," Sets a specific transition to occur when the given pair of scenes is exited/entered. <br /><br />"
"android.transition.TransitionManager.beginDelayedTransition (ViewGroup sceneRoot) "," Convenience method to animate, using the default transition, to a new scene defined by all changes within the given scene root between calling this method and the next rendering frame. <br /><br />"
"android.transition.TransitionManager.go (Scene scene) "," Convenience method to simply change to the given scene using the default transition for TransitionManager. <br /><br />"
"android.transition.TransitionManager.transitionTo (Scene scene)   Change to the given scene, using the appropriate transition for this particular scene change  (as specified to the TransitionManager, or the default if no such transition exists) "," Change to the given scene, using the appropriate transition for this particular scene change (as specified to the TransitionManager, or the default if no such transition exists). <br /><br />"
"android.transition.TransitionManager.beginDelayedTransition (ViewGroup sceneRoot, Transition transition) "," Convenience method to animate to a new scene defined by all changes within the given scene root between calling this method and the next rendering frame. <br /><br />"
"android.transition.TransitionPropagation.captureValues (TransitionValues transitionValues) "," Captures the values in the start or end scene for the properties that this transition propagation monitors. <br /><br />"
"android.transition.TransitionPropagation.getPropagationProperties ()   Returns the set of property names stored in the TransitionValues object passed into captureValues (TransitionValues) "," Returns the set of property names stored in the TransitionValues object passed into captureValues(TransitionValues) that this transition propagation cares about for the purposes of preventing duplicate capturing of property values. <br /><br />"
"android.transition.TransitionPropagation.getStartDelay (ViewGroup sceneRoot, Transition transition, TransitionValues startValues, TransitionValues endValues) "," Called by Transition to alter the Animator start delay. <br /><br />"
"android.transition.TransitionSet.addTransition (Transition transition) "," Adds child transition to this set. <br /><br />"
"android.transition.TransitionSet.captureStartValues (TransitionValues transitionValues) "," Captures the values in the start scene for the properties that this transition monitors. <br /><br />"
"android.transition.TransitionSet.excludeTarget (View target, boolean exclude) "," Whether to add the given target to the list of targets to exclude from this transition. <br /><br />"
"android.transition.TransitionSet.setStartDelay (long startDelay) "," Sets the startDelay of this transition. <br /><br />"
"android.transition.TransitionSet.removeListener (Transition.TransitionListener listener) "," Removes a listener from the set listening to this animation. <br /><br />"
"android.transition.TransitionSet.removeTransition (Transition transition) "," Removes the specified child transition from this set. <br /><br />"
"android.transition.TransitionSet.removeTarget (View target) "," Removes the given target from the list of targets that this Transition is interested in animating. <br /><br />"
"android.transition.TransitionSet.setDuration (long duration)   Setting a non-negative duration on a TransitionSet causes all of the child transitions  (current and future) "," Setting a non-negative duration on a TransitionSet causes all of the child transitions (current and future) to inherit this duration. <br /><br />"
"android.transition.TransitionSet.setPropagation (TransitionPropagation propagation) "," Sets the method for determining Animator start delays. <br /><br />"
"android.transition.TransitionSet.setInterpolator (TimeInterpolator interpolator) "," Sets the interpolator of this transition. <br /><br />"
"android.transition.TransitionSet.addTarget (Class targetType) "," Adds the Class of a target view that this Transition is interested in animating. <br /><br />"
"android.transition.TransitionSet.removeTarget (String target) "," Removes the given targetName from the list of transitionNames that this Transition is interested in animating. <br /><br />"
"android.transition.TransitionSet.captureEndValues (TransitionValues transitionValues) "," Captures the values in the end scene for the properties that this transition monitors. <br /><br />"
"android.transition.TransitionSet.excludeTarget (Class type, boolean exclude) "," Whether to add the given type to the list of types to exclude from this transition. <br /><br />"
"android.transition.TransitionSet.excludeTarget (String targetName, boolean exclude) "," Whether to add the given transitionName to the list of target transitionNames to exclude from this transition. <br /><br />"
"android.transition.TransitionSet.addListener (Transition.TransitionListener listener) "," Adds a listener to the set of listeners that are sent events through the life of an animation, such as start, repeat, and end. <br /><br />"
"android.transition.TransitionSet.addTarget (View target) "," Sets the target view instances that this Transition is interested in animating. <br /><br />"
"android.transition.TransitionSet.getOrdering () "," Returns the ordering of this TransitionSet. <br /><br />"
"android.transition.TransitionSet.getTransitionCount () "," Returns the number of child transitions in the TransitionSet. <br /><br />"
"android.transition.TransitionSet.removeTarget (int targetId) "," Removes the given targetId from the list of ids that this Transition is interested in animating. <br /><br />"
"android.transition.TransitionSet.removeTarget (Class target) "," Removes the given target from the list of targets that this Transition is interested in animating. <br /><br />"
"android.transition.TransitionSet.setEpicenterCallback (Transition.EpicenterCallback epicenterCallback) "," Sets the callback to use to find the epicenter of a Transition. <br /><br />"
"android.transition.TransitionSet.getTransitionAt (int index) "," Returns the child Transition at the specified position in the TransitionSet. <br /><br />"
"android.transition.TransitionSet.setOrdering (int ordering) "," Sets the play order of this set's child transitions. <br /><br />"
"android.transition.TransitionSet.addTarget (int targetId) "," Adds the id of a target view that this Transition is interested in animating. <br /><br />"
"android.transition.TransitionSet.addTarget (String targetName) "," Adds the transitionName of a target view that this Transition is interested in animating. <br /><br />"
"android.transition.TransitionSet.excludeTarget (int targetId, boolean exclude) "," Whether to add the given id to the list of target ids to exclude from this transition. <br /><br />"
"android.transition.TransitionSet.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.transition.TransitionSet.setPathMotion (PathMotion pathMotion) "," Sets the algorithm used to calculate two-dimensional interpolation. <br /><br />"
"android.transition.TransitionValues.equals (Object other) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.transition.TransitionValues.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.transition.TransitionValues.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.transition.Visibility.onDisappear (ViewGroup sceneRoot, View view, TransitionValues startValues, TransitionValues endValues) "," The default implementation of this method returns a null Animator. <br /><br />"
"android.transition.Visibility.onDisappear (ViewGroup sceneRoot, TransitionValues startValues, int startVisibility, TransitionValues endValues, int endVisibility)   Subclasses should override this method or onDisappear (ViewGroup, View, TransitionValues, TransitionValues) "," Subclasses should override this method or onDisappear(ViewGroup, View, TransitionValues, TransitionValues) if they need to create an Animator when targets disappear. <br /><br />"
"android.transition.Visibility.createAnimator (ViewGroup sceneRoot, TransitionValues startValues, TransitionValues endValues) "," This method creates an animation that will be run for this transition given the information in the startValues and endValues structures captured earlier for the start and end scenes. <br /><br />"
"android.transition.Visibility.getTransitionProperties ()   Returns the set of property names used stored in the TransitionValues object passed into captureStartValues (TransitionValues) "," Returns the set of property names used stored in the TransitionValues object passed into captureStartValues(TransitionValues) that this transition cares about for the purposes of canceling overlapping animations. <br /><br />"
"android.transition.Visibility.captureEndValues (TransitionValues transitionValues) "," Captures the values in the end scene for the properties that this transition monitors. <br /><br />"
"android.transition.Visibility.setMode (int mode) "," Changes the transition to support appearing and/or disappearing Views, depending on mode. <br /><br />"
"android.transition.Visibility.captureStartValues (TransitionValues transitionValues) "," Captures the values in the start scene for the properties that this transition monitors. <br /><br />"
"android.transition.Visibility.onAppear (ViewGroup sceneRoot, TransitionValues startValues, int startVisibility, TransitionValues endValues, int endVisibility)   The default implementation of this method calls onAppear (ViewGroup, View, TransitionValues, TransitionValues) "," The default implementation of this method calls onAppear(ViewGroup, View, TransitionValues, TransitionValues). <br /><br />"
"android.transition.Visibility.isVisible (TransitionValues values) "," Returns whether the view is 'visible' according to the given values object. <br /><br />"
"android.transition.Visibility.onAppear (ViewGroup sceneRoot, View view, TransitionValues startValues, TransitionValues endValues) "," The default implementation of this method returns a null Animator. <br /><br />"
"android.transition.Visibility.getMode () "," Returns whether appearing and/or disappearing Views are supported. <br /><br />"
"android.transition.VisibilityPropagation.getPropagationProperties ()   Returns the set of property names stored in the TransitionValues object passed into captureValues (TransitionValues) "," Returns the set of property names stored in the TransitionValues object passed into captureValues(TransitionValues) that this transition propagation cares about for the purposes of preventing duplicate capturing of property values. <br /><br />"
"android.transition.VisibilityPropagation.captureValues (TransitionValues values) "," Captures the values in the start or end scene for the properties that this transition propagation monitors. <br /><br />"
"android.transition.VisibilityPropagation.getViewVisibility (TransitionValues values)   Returns getVisibility () "," Returns getVisibility() for the View at the time the values were captured. <br /><br />"
"android.transition.VisibilityPropagation.getViewX (TransitionValues values) "," Returns the View's center x coordinate, relative to the screen, at the time the values were captured. <br /><br />"
"android.transition.VisibilityPropagation.getViewY (TransitionValues values) "," Returns the View's center y coordinate, relative to the screen, at the time the values were captured. <br /><br />"
"android.util.ArrayMap<K, V>.equals (Object object) "," Compares this instance with the specified object and indicates if they are equal. This implementation returns false if the object is not a map, or if the maps have different sizes. <br /><br />"
"android.util.ArrayMap<K, V>.keyAt (int index) "," Return the key at the given index in the array. <br /><br />"
"android.util.ArrayMap<K, V>.containsAll (Collection<?> collection) "," Determine if the array map contains all of the keys in the given collection. <br /><br />"
"android.util.ArrayMap<K, V>.removeAt (int index) "," Remove the key/value mapping at the given index. <br /><br />"
"android.util.ArrayMap<K, V>.ensureCapacity (int minimumCapacity) "," Ensure the array map can hold at least minimumCapacity items. <br /><br />"
"android.util.ArrayMap<K, V>.size () "," Return the number of items in this array map. <br /><br />"
"android.util.ArrayMap<K, V>.setValueAt (int index, V value) "," Set the value at a given index in the array. <br /><br />"
"android.util.ArrayMap<K, V>.toString () "," Returns a string containing a concise, human-readable description of this object. This implementation composes a string by iterating over its mappings. <br /><br />"
"android.util.ArrayMap<K, V>.clear () "," Make the array map empty. <br /><br />"
"android.util.ArrayMap<K, V>.valueAt (int index) "," Return the value at the given index in the array. <br /><br />"
"android.util.ArrayMap<K, V>.put (K key, V value) "," Add a new value to the array map. <br /><br />"
"android.util.ArrayMap<K, V>.values () "," Return a Collection for iterating over and interacting with all values in the array map. <br /><br />"
"android.util.ArrayMap<K, V>.indexOfKey (Object key) "," Returns the index of a key in the set. <br /><br />"
"android.util.ArrayMap<K, V>.entrySet () "," Return a Set for iterating over and interacting with all mappings in the array map. <br /><br />"
"android.util.ArrayMap<K, V>.putAll (ArrayMap<? extends K, ? extends V> array)   Perform a put (Object, Object) "," Perform a put(Object, Object) of all key/value pairs in array <br /><br />"
"android.util.ArrayMap<K, V>.containsKey (Object key) "," Check whether a key exists in the array. <br /><br />"
"android.util.ArrayMap<K, V>.containsValue (Object value) "," Check whether a value exists in the array. <br /><br />"
"android.util.ArrayMap<K, V>.removeAll (Collection<?> collection) "," Remove all keys in the array map that exist in the given collection. <br /><br />"
"android.util.ArrayMap<K, V>.retainAll (Collection<?> collection) "," Remove all keys in the array map that do not exist in the given collection. <br /><br />"
"android.util.ArrayMap<K, V>.isEmpty () "," Return true if the array map contains no items. <br /><br />"
"android.util.ArrayMap<K, V>.keySet () "," Return a Set for iterating over and interacting with all keys in the array map. <br /><br />"
"android.util.ArrayMap<K, V>.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.util.ArrayMap<K, V>.get (Object key) "," Retrieve a value from the array. <br /><br />"
"android.util.ArrayMap<K, V>.putAll (Map<? extends K, ? extends V> map)   Perform a put (Object, Object) "," Perform a put(Object, Object) of all key/value pairs in map <br /><br />"
"android.util.ArrayMap<K, V>.remove (Object key) "," Remove an existing key from the array map. <br /><br />"
"android.util.AtomicFile.failWrite (FileOutputStream str)   Call when you have failed for some reason at writing to the stream returned by startWrite () "," Call when you have failed for some reason at writing to the stream returned by startWrite(). <br /><br />"
"android.util.AtomicFile.delete () "," Delete the atomic file. <br /><br />"
"android.util.AtomicFile.finishWrite (FileOutputStream str)   Call when you have successfully finished writing to the stream returned by startWrite () "," Call when you have successfully finished writing to the stream returned by startWrite(). <br /><br />"
"android.util.AtomicFile.startWrite () "," Start a new write operation on the file. <br /><br />"
"android.util.AtomicFile.openRead () "," Open the atomic file for reading. <br /><br />"
"android.util.AtomicFile.getBaseFile () "," Return the path to the base file. <br /><br />"
"android.util.AtomicFile.readFully ()   A convenience for openRead () "," A convenience for openRead() that also reads all of the file contents into a byte array which is returned. <br /><br />"
"android.util.AttributeSet.getAttributeIntValue (String namespace, String attribute, int defaultValue) "," Return the integer value of 'attribute'. <br /><br />"
"android.util.AttributeSet.getAttributeUnsignedIntValue (String namespace, String attribute, int defaultValue) "," Return the boolean value of 'attribute' that is formatted as an unsigned value. <br /><br />"
"android.util.AttributeSet.getAttributeIntValue (int index, int defaultValue) "," Return the integer value of attribute at 'index'. <br /><br />"
"android.util.AttributeSet.getAttributeValue (int index) "," Returns the value of the specified attribute as a string representation. <br /><br />"
"android.util.AttributeSet.getAttributeListValue (int index, String[] options, int defaultValue) "," Return the index of the value of attribute at 'index' in the list 'options'. <br /><br />"
"android.util.AttributeSet.getIdAttribute () "," Return the value of the 'id' attribute or null if there is not one. <br /><br />"
"android.util.AttributeSet.getAttributeName (int index) "," Returns the name of the specified attribute. <br /><br />"
"android.util.AttributeSet.getAttributeFloatValue (String namespace, String attribute, float defaultValue) "," Return the float value of 'attribute'. <br /><br />"
"android.util.AttributeSet.getAttributeBooleanValue (String namespace, String attribute, boolean defaultValue) "," Return the boolean value of 'attribute'. <br /><br />"
"android.util.AttributeSet.getAttributeValue (String namespace, String name) "," Returns the value of the specified attribute as a string representation. <br /><br />"
"android.util.AttributeSet.getAttributeUnsignedIntValue (int index, int defaultValue) "," Return the integer value of attribute at 'index' that is formatted as an unsigned value. <br /><br />"
"android.util.AttributeSet.getAttributeBooleanValue (int index, boolean defaultValue) "," Return the boolean value of attribute at 'index'. <br /><br />"
"android.util.AttributeSet.getIdAttributeResourceValue (int defaultValue) "," Return the integer value of the 'id' attribute or defaultValue if there is none. <br /><br />"
"android.util.AttributeSet.getAttributeFloatValue (int index, float defaultValue) "," Return the float value of attribute at 'index'. <br /><br />"
"android.util.AttributeSet.getAttributeCount () "," Returns the number of attributes available in the set. <br /><br />"
"android.util.AttributeSet.getClassAttribute () "," Return the value of the 'class' attribute or null if there is not one. <br /><br />"
"android.util.AttributeSet.getAttributeNameResource (int index) "," Return the resource ID associated with the given attribute name. <br /><br />"
"android.util.AttributeSet.getAttributeListValue (String namespace, String attribute, String[] options, int defaultValue) "," Return the index of the value of 'attribute' in the list 'options'. <br /><br />"
"android.util.AttributeSet.getAttributeResourceValue (String namespace, String attribute, int defaultValue) "," Return the value of 'attribute' as a resource identifier. <br /><br />"
"android.util.AttributeSet.getPositionDescription () "," Returns a description of the current position of the attribute set. <br /><br />"
"android.util.AttributeSet.getStyleAttribute () "," Return the value of the 'style' attribute or 0 if there is not one. <br /><br />"
"android.util.AttributeSet.getAttributeResourceValue (int index, int defaultValue) "," Return the value of attribute at 'index' as a resource identifier. <br /><br />"
"android.util.Base64.encodeToString (byte[] input, int flags) "," Base64-encode the given data and return a newly allocated String with the result. <br /><br />"
"android.util.Base64.decode (byte[] input, int offset, int len, int flags) "," Decode the Base64-encoded data in input and return the data in a new byte array. <br /><br />"
"android.util.Base64.encode (byte[] input, int flags) "," Base64-encode the given data and return a newly allocated byte[] with the result. <br /><br />"
"android.util.Base64.encodeToString (byte[] input, int offset, int len, int flags) "," Base64-encode the given data and return a newly allocated String with the result. <br /><br />"
"android.util.Base64.decode (String str, int flags) "," Decode the Base64-encoded data in input and return the data in a new byte array. <br /><br />"
"android.util.Base64.encode (byte[] input, int offset, int len, int flags) "," Base64-encode the given data and return a newly allocated byte[] with the result. <br /><br />"
"android.util.Base64.decode (byte[] input, int flags) "," Decode the Base64-encoded data in input and return the data in a new byte array. <br /><br />"
"android.util.Base64InputStream.read (byte[] b, int off, int len) "," Reads up to byteCount bytes from this stream and stores them in the byte array buffer starting at byteOffset. <br /><br />"
"android.util.Base64InputStream.markSupported ()   Indicates whether this stream supports mark () and reset () "," Indicates whether this stream supports mark() and reset(). <br /><br />"
"android.util.Base64InputStream.skip (long n) "," Skips byteCount bytes in this stream. <br /><br />"
"android.util.Base64InputStream.close () "," Closes this stream. <br /><br />"
"android.util.Base64InputStream.read () "," Reads a single byte from the filtered stream and returns it as an integer in the range from 0 to 255. <br /><br />"
"android.util.Base64InputStream.available () "," Returns an estimated number of bytes that can be read or skipped without blocking for more input. <br /><br />"
"android.util.Base64InputStream.mark (int readlimit) "," Sets a mark position in this stream. <br /><br />"
"android.util.Base64InputStream.reset () "," Resets this stream to the last marked location. <br /><br />"
"android.util.Base64OutputStream.write (byte[] b, int off, int len) "," Writes count bytes from the byte array buffer starting at offset to the target stream. <br /><br />"
"android.util.Base64OutputStream.write (int b) "," Writes one byte to the target stream. <br /><br />"
"android.util.Base64OutputStream.close () "," Closes this stream. <br /><br />"
"android.util.DebugUtils.isObjectSelected (Object object) "," Filters objects against the ANDROID_OBJECT_FILTER environment variable. <br /><br />"
"android.util.DisplayMetrics.equals (DisplayMetrics other) "," Returns true if these display metrics equal the other display metrics. <br /><br />"
"android.util.DisplayMetrics.setTo (DisplayMetrics o) "," no description <br /><br />"
"android.util.DisplayMetrics.setToDefaults () "," no description <br /><br />"
"android.util.DisplayMetrics.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.util.DisplayMetrics.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.util.DisplayMetrics.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.util.EventLog.Event.getTag () "," no description <br /><br />"
"android.util.EventLog.Event.getThreadId () "," no description <br /><br />"
"android.util.EventLog.Event.getData () "," no description <br /><br />"
"android.util.EventLog.Event.getTimeNanos () "," no description <br /><br />"
"android.util.EventLog.Event.getProcessId () "," no description <br /><br />"
"android.util.EventLogTags.get (String name) "," no description <br /><br />"
"android.util.EventLogTags.get (int tag) "," no description <br /><br />"
"android.util.FloatMath.pow (float x, float y) "," Returns the closest float approximation of the result of raising x to the power of y. <br /><br />"
"android.util.FloatMath.floor (float value) "," Returns the float conversion of the most positive (i.e. <br /><br />"
"android.util.FloatMath.exp (float value) "," Returns the closest float approximation of the raising 'e' to the power of the argument. <br /><br />"
"android.util.FloatMath.sqrt (float value) "," Returns the closest float approximation of the square root of the argument. <br /><br />"
"android.util.FloatMath.hypot (float x, float y)   Returns sqrt (x 2 +  y 2 ) "," Returns sqrt( x 2 +  y 2 ). <br /><br />"
"android.util.FloatMath.cos (float angle) "," Returns the closest float approximation of the cosine of the argument. <br /><br />"
"android.util.FloatMath.ceil (float value) "," Returns the float conversion of the most negative (i.e. <br /><br />"
"android.util.FloatMath.sin (float angle) "," Returns the closest float approximation of the sine of the argument. <br /><br />"
"android.util.JsonReader.nextName () "," Returns the next token, a property name, and consumes it. <br /><br />"
"android.util.JsonReader.nextBoolean () "," Returns the boolean value of the next token, consuming it. <br /><br />"
"android.util.JsonReader.hasNext () "," Returns true if the current array or object has another element. <br /><br />"
"android.util.JsonReader.nextDouble () "," Returns the double value of the next token, consuming it. <br /><br />"
"android.util.JsonReader.close () "," Closes this JSON reader and the underlying Reader. <br /><br />"
"android.util.JsonReader.setLenient (boolean lenient) "," Configure this parser to be be liberal in what it accepts. <br /><br />"
"android.util.JsonReader.nextInt () "," Returns the int value of the next token, consuming it. <br /><br />"
"android.util.JsonReader.nextString () "," Returns the string value of the next token, consuming it. <br /><br />"
"android.util.JsonReader.beginObject () "," Consumes the next token from the JSON stream and asserts that it is the beginning of a new object. <br /><br />"
"android.util.JsonReader.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.util.JsonReader.endArray () "," Consumes the next token from the JSON stream and asserts that it is the end of the current array. <br /><br />"
"android.util.JsonReader.endObject () "," Consumes the next token from the JSON stream and asserts that it is the end of the current array. <br /><br />"
"android.util.JsonReader.skipValue () "," Skips the next value recursively. <br /><br />"
"android.util.JsonReader.beginArray () "," Consumes the next token from the JSON stream and asserts that it is the beginning of a new array. <br /><br />"
"android.util.JsonReader.isLenient () "," Returns true if this parser is liberal in what it accepts. <br /><br />"
"android.util.JsonReader.nextLong () "," Returns the long value of the next token, consuming it. <br /><br />"
"android.util.JsonReader.peek () "," Returns the type of the next token without consuming it. <br /><br />"
"android.util.JsonReader.nextNull () "," Consumes the next token from the JSON stream and asserts that it is a literal null. <br /><br />"
"android.util.JsonWriter.close () "," Flushes and closes this writer and the underlying Writer. <br /><br />"
"android.util.JsonWriter.value (long value) "," Encodes value. <br /><br />"
"android.util.JsonWriter.setLenient (boolean lenient) "," Configure this writer to relax its syntax rules. <br /><br />"
"android.util.JsonWriter.flush () "," Ensures all buffered data is written to the underlying Writer and flushes that writer. <br /><br />"
"android.util.JsonWriter.value (boolean value) "," Encodes value. <br /><br />"
"android.util.JsonWriter.beginObject () "," Begins encoding a new object. <br /><br />"
"android.util.JsonWriter.endArray () "," Ends encoding the current array. <br /><br />"
"android.util.JsonWriter.endObject () "," Ends encoding the current object. <br /><br />"
"android.util.JsonWriter.setIndent (String indent) "," Sets the indentation string to be repeated for each level of indentation in the encoded document. <br /><br />"
"android.util.JsonWriter.nullValue () "," Encodes null. <br /><br />"
"android.util.JsonWriter.value (double value) "," Encodes value. <br /><br />"
"android.util.JsonWriter.value (String value) "," Encodes value. <br /><br />"
"android.util.JsonWriter.beginArray () "," Begins encoding a new array. <br /><br />"
"android.util.JsonWriter.isLenient () "," Returns true if this writer has relaxed syntax rules. <br /><br />"
"android.util.JsonWriter.name (String name) "," Encodes the property name. <br /><br />"
"android.util.JsonWriter.value (Number value) "," Encodes value. <br /><br />"
"android.util.Log.wtf (String tag, String msg, Throwable tr) "," What a Terrible Failure: Report an exception that should never happen. <br /><br />"
"android.util.Log.isLoggable (String tag, int level) "," Checks to see whether or not a log for the specified tag is loggable at the specified level. <br /><br />"
"android.util.Log.e (String tag, String msg) "," Send an ERROR log message. <br /><br />"
"android.util.Log.wtf (String tag, String msg) "," What a Terrible Failure: Report a condition that should never happen. <br /><br />"
"android.util.Log.getStackTraceString (Throwable tr) "," Handy function to get a loggable stack trace from a Throwable <br /><br />"
"android.util.Log.w (String tag, String msg) "," Send a WARN log message. <br /><br />"
"android.util.Log.e (String tag, String msg, Throwable tr) "," Send a ERROR log message and log the exception. <br /><br />"
"android.util.Log.d (String tag, String msg, Throwable tr) "," Send a DEBUG log message and log the exception. <br /><br />"
"android.util.Log.v (String tag, String msg, Throwable tr) "," Send a VERBOSE log message and log the exception. <br /><br />"
"android.util.Log.w (String tag, Throwable tr) "," no description <br /><br />"
"android.util.Log.println (int priority, String tag, String msg) "," Low-level logging call. <br /><br />"
"android.util.Log.d (String tag, String msg) "," Send a DEBUG log message. <br /><br />"
"android.util.Log.i (String tag, String msg, Throwable tr) "," Send a INFO log message and log the exception. <br /><br />"
"android.util.Log.wtf (String tag, Throwable tr) "," What a Terrible Failure: Report an exception that should never happen. <br /><br />"
"android.util.Log.w (String tag, String msg, Throwable tr) "," Send a WARN log message and log the exception. <br /><br />"
"android.util.Log.v (String tag, String msg) "," Send a VERBOSE log message. <br /><br />"
"android.util.Log.i (String tag, String msg) "," Send an INFO log message. <br /><br />"
"android.util.LogPrinter.println (String x) "," Write a line of text to the output. <br /><br />"
"android.util.LongSparseArray<E>.keyAt (int index)   Given an index in the range 0...size () "," Given an index in the range 0...size()-1, returns the key from the indexth key-value mapping that this LongSparseArray stores. <br /><br />"
"android.util.LongSparseArray<E>.get (long key) "," Gets the Object mapped from the specified key, or null if no such mapping has been made. <br /><br />"
"android.util.LongSparseArray<E>.indexOfValue (E value)   Returns an index for which valueAt (int) "," Returns an index for which valueAt(int) would return the specified key, or a negative number if no keys map to the specified value. <br /><br />"
"android.util.LongSparseArray<E>.removeAt (int index) "," Removes the mapping at the specified index. <br /><br />"
"android.util.LongSparseArray<E>.size () "," Returns the number of key-value mappings that this LongSparseArray currently stores. <br /><br />"
"android.util.LongSparseArray<E>.delete (long key) "," Removes the mapping from the specified key, if there was any. <br /><br />"
"android.util.LongSparseArray<E>.get (long key, E valueIfKeyNotFound) "," Gets the Object mapped from the specified key, or the specified Object if no such mapping has been made. <br /><br />"
"android.util.LongSparseArray<E>.toString () "," Returns a string containing a concise, human-readable description of this object. This implementation composes a string by iterating over its mappings. <br /><br />"
"android.util.LongSparseArray<E>.setValueAt (int index, E value)   Given an index in the range 0...size () "," Given an index in the range 0...size()-1, sets a new value for the indexth key-value mapping that this LongSparseArray stores. <br /><br />"
"android.util.LongSparseArray<E>.clear () "," Removes all key-value mappings from this LongSparseArray. <br /><br />"
"android.util.LongSparseArray<E>.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.util.LongSparseArray<E>.valueAt (int index)   Given an index in the range 0...size () "," Given an index in the range 0...size()-1, returns the value from the indexth key-value mapping that this LongSparseArray stores. <br /><br />"
"android.util.LongSparseArray<E>.append (long key, E value) "," Puts a key/value pair into the array, optimizing for the case where the key is greater than all existing keys in the array. <br /><br />"
"android.util.LongSparseArray<E>.remove (long key)   Alias for delete (long) "," Alias for delete(long). <br /><br />"
"android.util.LongSparseArray<E>.indexOfKey (long key)   Returns the index for which keyAt (int) "," Returns the index for which keyAt(int) would return the specified key, or a negative number if the specified key is not mapped. <br /><br />"
"android.util.LongSparseArray<E>.put (long key, E value) "," Adds a mapping from the specified key to the specified value, replacing the previous mapping from the specified key if there was one. <br /><br />"
"android.util.LruCache<K, V>.evictAll ()   Clear the cache, calling entryRemoved (boolean, K, V, V) "," Clear the cache, calling entryRemoved(boolean, K, V, V) on each removed entry. <br /><br />"
"android.util.LruCache<K, V>.hitCount ()   Returns the number of times get (K) "," Returns the number of times get(K) returned a value that was already present in the cache. <br /><br />"
"android.util.LruCache<K, V>.evictionCount () "," Returns the number of values that have been evicted. <br /><br />"
"android.util.LruCache<K, V>.remove (K key) "," Removes the entry for key if it exists. <br /><br />"
"android.util.LruCache<K, V>.get (K key) "," Returns the value for key if it exists in the cache or can be created by #create. <br /><br />"
"android.util.LruCache<K, V>.maxSize ()   For caches that do not override sizeOf (K, V) "," For caches that do not override sizeOf(K, V), this returns the maximum number of entries in the cache. <br /><br />"
"android.util.LruCache<K, V>.trimToSize (int maxSize) "," Remove the eldest entries until the total of remaining entries is at or below the requested size. <br /><br />"
"android.util.LruCache<K, V>.createCount ()   Returns the number of times create (Object) "," Returns the number of times create(Object) returned a value. <br /><br />"
"android.util.LruCache<K, V>.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.util.LruCache<K, V>.snapshot () "," Returns a copy of the current contents of the cache, ordered from least recently accessed to most recently accessed. <br /><br />"
"android.util.LruCache<K, V>.resize (int maxSize) "," Sets the size of the cache. <br /><br />"
"android.util.LruCache<K, V>.put (K key, V value) "," Caches value for key. <br /><br />"
"android.util.LruCache<K, V>.putCount ()   Returns the number of times put (K, V) "," Returns the number of times put(K, V) was called. <br /><br />"
"android.util.LruCache<K, V>.missCount ()   Returns the number of times get (K) "," Returns the number of times get(K) returned null or required a new value to be created. <br /><br />"
"android.util.LruCache<K, V>.size ()   For caches that do not override sizeOf (K, V) "," For caches that do not override sizeOf(K, V), this returns the number of entries in the cache. <br /><br />"
"android.util.MonthDisplayHelper.getRowOf (int day) "," no description <br /><br />"
"android.util.MonthDisplayHelper.getDigitsForRow (int row) "," no description <br /><br />"
"android.util.MonthDisplayHelper.nextMonth () "," Increment the month. <br /><br />"
"android.util.MonthDisplayHelper.getYear () "," no description <br /><br />"
"android.util.MonthDisplayHelper.getOffset () "," no description <br /><br />"
"android.util.MonthDisplayHelper.getMonth () "," no description <br /><br />"
"android.util.MonthDisplayHelper.getFirstDayOfMonth () "," no description <br /><br />"
"android.util.MonthDisplayHelper.getDayAt (int row, int column) "," no description <br /><br />"
"android.util.MonthDisplayHelper.previousMonth () "," Decrement the month. <br /><br />"
"android.util.MonthDisplayHelper.isWithinCurrentMonth (int row, int column) "," no description <br /><br />"
"android.util.MonthDisplayHelper.getWeekStartDay () "," no description <br /><br />"
"android.util.MonthDisplayHelper.getNumberOfDaysInMonth () "," no description <br /><br />"
"android.util.MonthDisplayHelper.getColumnOf (int day) "," no description <br /><br />"
"android.util.Pair<F, S>.equals (Object o)   Checks the two objects for equality by delegating to their respective equals (Object) "," Checks the two objects for equality by delegating to their respective equals(Object) methods. <br /><br />"
"android.util.Pair<F, S>.create (A a, B b) "," Convenience method for creating an appropriately typed pair. <br /><br />"
"android.util.Pair<F, S>.hashCode () "," Compute a hash code using the hash codes of the underlying objects <br /><br />"
"android.util.Patterns.digitsAndPlusOnly (Matcher matcher) "," Convenience method to return only the digits and plus signs in the matching string. <br /><br />"
"android.util.Patterns.concatGroups (Matcher matcher) "," Convenience method to take all of the non-null matching groups in a regex Matcher and return them as a concatenated string. <br /><br />"
"android.util.Printer.println (String x) "," Write a line of text to the output. <br /><br />"
"android.util.PrintStreamPrinter.println (String x) "," Write a line of text to the output. <br /><br />"
"android.util.PrintWriterPrinter.println (String x) "," Write a line of text to the output. <br /><br />"
"android.util.Property<T, V>.getName () "," Returns the name for this property. <br /><br />"
"android.util.Property<T, V>.isReadOnly ()   Returns true if the set (Object, Object) method does not set the value on the target object  (in which case the set () method should throw a NoSuchPropertyException exception) "," Returns true if the set(Object, Object) method does not set the value on the target object (in which case the set() method should throw a NoSuchPropertyException exception). <br /><br />"
"android.util.Property<T, V>.getType () "," Returns the type for this property. <br /><br />"
"android.util.Property<T, V>.of (Class<T> hostType, Class<V> valueType, String name)   This factory method creates and returns a Property given the class and name parameters, where the 'name' parameter represents either:  a public getName () method on the class which takes no arguments, plus an optional public setName () method which takes a value of the same type returned by getName ()  a public isName () method on the class which takes no arguments, plus an optional public setName () method which takes a value of the same type returned by isName ()  a public name field on the class   If either of the get/is method alternatives is found on the class, but an appropriate setName () method is not found, the Property will be "," This factory method creates and returns a Property given the class and name parameters, where the 'name' parameter represents either:  a public getName() method on the class which takes no arguments, plus an optional public setName() method which takes a value of the same type returned by getName()  a public isName() method on the class which takes no arguments, plus an optional public setName() method which takes a value of the same type returned by isName()  a public name field on the class   If either of the get/is method alternatives is found on the class, but an appropriate setName() method is not found, the Property will be readOnly. <br /><br />"
"android.util.Property<T, V>.get (T object) "," Returns the current value that this property represents on the given object. <br /><br />"
"android.util.Property<T, V>.set (T object, V value) "," Sets the value on object which this property represents. <br /><br />"
"android.util.Range<T extends java.lang.Comparable<? super T>>.extend (T value) "," Returns the smallest range that includes this range and the value. <br /><br />"
"android.util.Range<T extends java.lang.Comparable<? super T>>.clamp (T value) "," Clamps value to this range. <br /><br />"
"android.util.Range<T extends java.lang.Comparable<? super T>>.intersect (Range<T> range) "," Returns the intersection of this range and another range. <br /><br />"
"android.util.Range<T extends java.lang.Comparable<? super T>>.toString () "," Return the range as a string representation '[lower, upper]'. <br /><br />"
"android.util.Range<T extends java.lang.Comparable<? super T>>.extend (Range<T> range) "," Returns the smallest range that includes this range and another range. <br /><br />"
"android.util.Range<T extends java.lang.Comparable<? super T>>.intersect (T lower, T upper) "," Returns the intersection of this range and the inclusive range specified by [lower, upper]. <br /><br />"
"android.util.Range<T extends java.lang.Comparable<? super T>>.equals (Object obj) "," Compare two ranges for equality. <br /><br />"
"android.util.Range<T extends java.lang.Comparable<? super T>>.extend (T lower, T upper) "," Returns the smallest range that includes this range and the inclusive range specified by [lower, upper]. <br /><br />"
"android.util.Range<T extends java.lang.Comparable<? super T>>.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.util.Range<T extends java.lang.Comparable<? super T>>.contains (Range<T> range) "," Checks if another range is within the bounds of this range. <br /><br />"
"android.util.Range<T extends java.lang.Comparable<? super T>>.create (T lower, T upper) "," Create a new immutable range, with the argument types inferred. <br /><br />"
"android.util.Range<T extends java.lang.Comparable<? super T>>.getUpper () "," Get the upper endpoint. <br /><br />"
"android.util.Range<T extends java.lang.Comparable<? super T>>.contains (T value) "," Checks if the value is within the bounds of this range. <br /><br />"
"android.util.Range<T extends java.lang.Comparable<? super T>>.getLower () "," Get the lower endpoint. <br /><br />"
"android.util.Rational.compareTo (Rational another) "," Compare this rational to the specified rational to determine their natural order. <br /><br />"
"android.util.Rational.shortValue () "," Returns the value of the specified number as a short. <br /><br />"
"android.util.Rational.isFinite () "," Indicates whether this rational represents a finite value. <br /><br />"
"android.util.Rational.parseRational (String string) "," Parses the specified string as a rational value. <br /><br />"
"android.util.Rational.longValue () "," Returns the value of the specified number as a long. <br /><br />"
"android.util.Rational.toString () "," Return a string representation of this rational, e.g. <br /><br />"
"android.util.Rational.isNaN ()   Indicates whether this rational is a Not-a-Number  (NaN) "," Indicates whether this rational is a Not-a-Number (NaN) value. <br /><br />"
"android.util.Rational.getNumerator () "," Gets the numerator of the rational. <br /><br />"
"android.util.Rational.floatValue () "," Returns the value of the specified number as a float. <br /><br />"
"android.util.Rational.equals (Object obj) "," Compare this Rational to another object and see if they are equal. <br /><br />"
"android.util.Rational.doubleValue () "," Returns the value of the specified number as a double. <br /><br />"
"android.util.Rational.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.util.Rational.isInfinite () "," Indicates whether this rational represents an infinite value. <br /><br />"
"android.util.Rational.intValue () "," Returns the value of the specified number as a int. <br /><br />"
"android.util.Rational.isZero () "," Indicates whether this rational represents a zero value. <br /><br />"
"android.util.Rational.getDenominator ()   Gets the denominator of the rational The denominator may return 0, in which case the rational may represent positive infinity  (if the numerator was positive), negative infinity  (if the numerator was negative), or NaN  (if the numerator was 0) "," Gets the denominator of the rational The denominator may return 0, in which case the rational may represent positive infinity (if the numerator was positive), negative infinity (if the numerator was negative), or NaN (if the numerator was 0). <br /><br />"
"android.util.Size.parseSize (String string) "," Parses the specified string as a size value. <br /><br />"
"android.util.Size.equals (Object obj) "," Check if this size is equal to another size. <br /><br />"
"android.util.Size.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.util.Size.getWidth ()   Get the width of the size  (in pixels) "," Get the width of the size (in pixels). <br /><br />"
"android.util.Size.toString () "," Return the size represented as a string with the format 'WxH' <br /><br />"
"android.util.Size.getHeight ()   Get the height of the size  (in pixels) "," Get the height of the size (in pixels). <br /><br />"
"android.util.SizeF.parseSizeF (String string) "," Parses the specified string as a size value. <br /><br />"
"android.util.SizeF.equals (Object obj) "," Check if this size is equal to another size. <br /><br />"
"android.util.SizeF.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.util.SizeF.getHeight ()   Get the height of the size  (as an arbitrary unit) "," Get the height of the size (as an arbitrary unit). <br /><br />"
"android.util.SizeF.getWidth ()   Get the width of the size  (as an arbitrary unit) "," Get the width of the size (as an arbitrary unit). <br /><br />"
"android.util.SizeF.toString () "," Return the size represented as a string with the format 'WxH' <br /><br />"
"android.util.SparseArray<E>.indexOfKey (int key)   Returns the index for which keyAt (int) "," Returns the index for which keyAt(int) would return the specified key, or a negative number if the specified key is not mapped. <br /><br />"
"android.util.SparseArray<E>.keyAt (int index)   Given an index in the range 0...size () "," Given an index in the range 0...size()-1, returns the key from the indexth key-value mapping that this SparseArray stores. <br /><br />"
"android.util.SparseArray<E>.indexOfValue (E value)   Returns an index for which valueAt (int) "," Returns an index for which valueAt(int) would return the specified key, or a negative number if no keys map to the specified value. <br /><br />"
"android.util.SparseArray<E>.delete (int key) "," Removes the mapping from the specified key, if there was any. <br /><br />"
"android.util.SparseArray<E>.removeAt (int index) "," Removes the mapping at the specified index. <br /><br />"
"android.util.SparseArray<E>.size () "," Returns the number of key-value mappings that this SparseArray currently stores. <br /><br />"
"android.util.SparseArray<E>.remove (int key)   Alias for delete (int) "," Alias for delete(int). <br /><br />"
"android.util.SparseArray<E>.append (int key, E value) "," Puts a key/value pair into the array, optimizing for the case where the key is greater than all existing keys in the array. <br /><br />"
"android.util.SparseArray<E>.toString () "," Returns a string containing a concise, human-readable description of this object. This implementation composes a string by iterating over its mappings. <br /><br />"
"android.util.SparseArray<E>.get (int key, E valueIfKeyNotFound) "," Gets the Object mapped from the specified key, or the specified Object if no such mapping has been made. <br /><br />"
"android.util.SparseArray<E>.setValueAt (int index, E value)   Given an index in the range 0...size () "," Given an index in the range 0...size()-1, sets a new value for the indexth key-value mapping that this SparseArray stores. <br /><br />"
"android.util.SparseArray<E>.clear () "," Removes all key-value mappings from this SparseArray. <br /><br />"
"android.util.SparseArray<E>.get (int key) "," Gets the Object mapped from the specified key, or null if no such mapping has been made. <br /><br />"
"android.util.SparseArray<E>.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.util.SparseArray<E>.valueAt (int index)   Given an index in the range 0...size () "," Given an index in the range 0...size()-1, returns the value from the indexth key-value mapping that this SparseArray stores. <br /><br />"
"android.util.SparseArray<E>.removeAtRange (int index, int size) "," Remove a range of mappings as a batch. <br /><br />"
"android.util.SparseArray<E>.put (int key, E value) "," Adds a mapping from the specified key to the specified value, replacing the previous mapping from the specified key if there was one. <br /><br />"
"android.util.SparseBooleanArray.indexOfKey (int key)   Returns the index for which keyAt (int) "," Returns the index for which keyAt(int) would return the specified key, or a negative number if the specified key is not mapped. <br /><br />"
"android.util.SparseBooleanArray.keyAt (int index)   Given an index in the range 0...size () "," Given an index in the range 0...size()-1, returns the key from the indexth key-value mapping that this SparseBooleanArray stores. <br /><br />"
"android.util.SparseBooleanArray.get (int key) "," Gets the boolean mapped from the specified key, or false if no such mapping has been made. <br /><br />"
"android.util.SparseBooleanArray.clear () "," Removes all key-value mappings from this SparseBooleanArray. <br /><br />"
"android.util.SparseBooleanArray.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.util.SparseBooleanArray.append (int key, boolean value) "," Puts a key/value pair into the array, optimizing for the case where the key is greater than all existing keys in the array. <br /><br />"
"android.util.SparseBooleanArray.valueAt (int index)   Given an index in the range 0...size () "," Given an index in the range 0...size()-1, returns the value from the indexth key-value mapping that this SparseBooleanArray stores. <br /><br />"
"android.util.SparseBooleanArray.delete (int key) "," Removes the mapping from the specified key, if there was any. <br /><br />"
"android.util.SparseBooleanArray.size () "," Returns the number of key-value mappings that this SparseBooleanArray currently stores. <br /><br />"
"android.util.SparseBooleanArray.put (int key, boolean value) "," Adds a mapping from the specified key to the specified value, replacing the previous mapping from the specified key if there was one. <br /><br />"
"android.util.SparseBooleanArray.get (int key, boolean valueIfKeyNotFound) "," Gets the boolean mapped from the specified key, or the specified value if no such mapping has been made. <br /><br />"
"android.util.SparseBooleanArray.toString () "," Returns a string containing a concise, human-readable description of this object. This implementation composes a string by iterating over its mappings. <br /><br />"
"android.util.SparseBooleanArray.indexOfValue (boolean value)   Returns an index for which valueAt (int) "," Returns an index for which valueAt(int) would return the specified key, or a negative number if no keys map to the specified value. <br /><br />"
"android.util.SparseIntArray.put (int key, int value) "," Adds a mapping from the specified key to the specified value, replacing the previous mapping from the specified key if there was one. <br /><br />"
"android.util.SparseIntArray.indexOfKey (int key)   Returns the index for which keyAt (int) "," Returns the index for which keyAt(int) would return the specified key, or a negative number if the specified key is not mapped. <br /><br />"
"android.util.SparseIntArray.keyAt (int index)   Given an index in the range 0...size () "," Given an index in the range 0...size()-1, returns the key from the indexth key-value mapping that this SparseIntArray stores. <br /><br />"
"android.util.SparseIntArray.delete (int key) "," Removes the mapping from the specified key, if there was any. <br /><br />"
"android.util.SparseIntArray.removeAt (int index) "," Removes the mapping at the given index. <br /><br />"
"android.util.SparseIntArray.size () "," Returns the number of key-value mappings that this SparseIntArray currently stores. <br /><br />"
"android.util.SparseIntArray.append (int key, int value) "," Puts a key/value pair into the array, optimizing for the case where the key is greater than all existing keys in the array. <br /><br />"
"android.util.SparseIntArray.toString () "," Returns a string containing a concise, human-readable description of this object. This implementation composes a string by iterating over its mappings. <br /><br />"
"android.util.SparseIntArray.clear () "," Removes all key-value mappings from this SparseIntArray. <br /><br />"
"android.util.SparseIntArray.get (int key) "," Gets the int mapped from the specified key, or 0 if no such mapping has been made. <br /><br />"
"android.util.SparseIntArray.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.util.SparseIntArray.indexOfValue (int value)   Returns an index for which valueAt (int) "," Returns an index for which valueAt(int) would return the specified key, or a negative number if no keys map to the specified value. <br /><br />"
"android.util.SparseIntArray.valueAt (int index)   Given an index in the range 0...size () "," Given an index in the range 0...size()-1, returns the value from the indexth key-value mapping that this SparseIntArray stores. <br /><br />"
"android.util.SparseIntArray.get (int key, int valueIfKeyNotFound) "," Gets the int mapped from the specified key, or the specified value if no such mapping has been made. <br /><br />"
"android.util.SparseLongArray.indexOfValue (long value)   Returns an index for which valueAt (int) "," Returns an index for which valueAt(int) would return the specified key, or a negative number if no keys map to the specified value. <br /><br />"
"android.util.SparseLongArray.indexOfKey (int key)   Returns the index for which keyAt (int) "," Returns the index for which keyAt(int) would return the specified key, or a negative number if the specified key is not mapped. <br /><br />"
"android.util.SparseLongArray.keyAt (int index)   Given an index in the range 0...size () "," Given an index in the range 0...size()-1, returns the key from the indexth key-value mapping that this SparseLongArray stores. <br /><br />"
"android.util.SparseLongArray.get (int key) "," Gets the long mapped from the specified key, or 0 if no such mapping has been made. <br /><br />"
"android.util.SparseLongArray.clear () "," Removes all key-value mappings from this SparseIntArray. <br /><br />"
"android.util.SparseLongArray.append (int key, long value) "," Puts a key/value pair into the array, optimizing for the case where the key is greater than all existing keys in the array. <br /><br />"
"android.util.SparseLongArray.get (int key, long valueIfKeyNotFound) "," Gets the long mapped from the specified key, or the specified value if no such mapping has been made. <br /><br />"
"android.util.SparseLongArray.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.util.SparseLongArray.valueAt (int index)   Given an index in the range 0...size () "," Given an index in the range 0...size()-1, returns the value from the indexth key-value mapping that this SparseLongArray stores. <br /><br />"
"android.util.SparseLongArray.removeAt (int index) "," Removes the mapping at the given index. <br /><br />"
"android.util.SparseLongArray.delete (int key) "," Removes the mapping from the specified key, if there was any. <br /><br />"
"android.util.SparseLongArray.size () "," Returns the number of key-value mappings that this SparseIntArray currently stores. <br /><br />"
"android.util.SparseLongArray.put (int key, long value) "," Adds a mapping from the specified key to the specified value, replacing the previous mapping from the specified key if there was one. <br /><br />"
"android.util.SparseLongArray.toString () "," Returns a string containing a concise, human-readable description of this object. This implementation composes a string by iterating over its mappings. <br /><br />"
"android.util.StateSet.stateSetMatches (int[] stateSpec, int[] stateSet) "," Return whether the stateSet matches the desired stateSpec. <br /><br />"
"android.util.StateSet.dump (int[] states) "," no description <br /><br />"
"android.util.StateSet.trimStateSet (int[] states, int newSize) "," no description <br /><br />"
"android.util.StateSet.stateSetMatches (int[] stateSpec, int state) "," Return whether the state matches the desired stateSpec. <br /><br />"
"android.util.StateSet.isWildCard (int[] stateSetOrSpec) "," Return whether the stateSetOrSpec is matched by all StateSets. <br /><br />"
"android.util.StringBuilderPrinter.println (String x) "," Write a line of text to the output. <br /><br />"
"android.util.TimeUtils.getTimeZoneDatabaseVersion () "," Returns a String indicating the version of the time zone database currently in use. <br /><br />"
"android.util.TimeUtils.getTimeZone (int offset, boolean dst, long when, String country) "," Tries to return a time zone that would have had the specified offset and DST value at the specified moment in the specified country. <br /><br />"
"android.util.TimingLogger.dumpToLog ()   Dumps the timings to the log using Log.d () "," Dumps the timings to the log using Log.d(). <br /><br />"
"android.util.TimingLogger.reset (String tag, String label) "," Clear and initialize a TimingLogger object that will log using the specific tag. <br /><br />"
"android.util.TimingLogger.addSplit (String splitLabel) "," Add a split for the current time, labeled with splitLabel. <br /><br />"
"android.util.TimingLogger.reset ()   Clear and initialize a TimingLogger object that will log using the tag and label that was specified previously, either via the constructor or a call to reset (tag, label) "," Clear and initialize a TimingLogger object that will log using the tag and label that was specified previously, either via the constructor or a call to reset(tag, label). <br /><br />"
"android.util.TypedValue.complexToDimensionPixelOffset (int data, DisplayMetrics metrics) "," Converts a complex data value holding a dimension to its final value as an integer pixel offset. <br /><br />"
"android.util.TypedValue.complexToDimensionPixelSize (int data, DisplayMetrics metrics) "," Converts a complex data value holding a dimension to its final value as an integer pixel size. <br /><br />"
"android.util.TypedValue.coerceToString () "," Regardless of the actual type of the value, try to convert it to a string value. <br /><br />"
"android.util.TypedValue.complexToDimension (int data, DisplayMetrics metrics) "," Converts a complex data value holding a dimension to its final floating point value. <br /><br />"
"android.util.TypedValue.complexToFraction (int data, float base, float pbase) "," Converts a complex data value holding a fraction to its final floating point value. <br /><br />"
"android.util.TypedValue.getDimension (DisplayMetrics metrics) "," Return the data for this value as a dimension. <br /><br />"
"android.util.TypedValue.getComplexUnit () "," Return the complex unit type for this value. <br /><br />"
"android.util.TypedValue.applyDimension (int unit, float value, DisplayMetrics metrics) "," Converts an unpacked complex data value holding a dimension to its final floating point value. <br /><br />"
"android.util.TypedValue.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.util.TypedValue.setTo (TypedValue other) "," no description <br /><br />"
"android.util.TypedValue.getFloat () "," Return the data for this value as a float. <br /><br />"
"android.util.TypedValue.complexToFloat (int complex) "," Retrieve the base value from a complex data integer. <br /><br />"
"android.util.TypedValue.coerceToString (int type, int data)   Perform type conversion as per coerceToString () "," Perform type conversion as per coerceToString() on an explicitly supplied type and data. <br /><br />"
"android.util.TypedValue.getFraction (float base, float pbase) "," Return the data for this value as a fraction. <br /><br />"
"android.util.Xml.findEncodingByName (String encodingName) "," Finds an encoding by name. <br /><br />"
"android.util.Xml.newSerializer () "," Creates a new xml serializer. <br /><br />"
"android.util.Xml.parse (Reader in, ContentHandler contentHandler) "," Parses xml from the given reader and fires events on the given SAX handler. <br /><br />"
"android.util.Xml.parse (InputStream in, Xml.Encoding encoding, ContentHandler contentHandler) "," Parses xml from the given input stream and fires events on the given SAX handler. <br /><br />"
"android.util.Xml.parse (String xml, ContentHandler contentHandler) "," Parses the given xml string and fires events on the given SAX handler. <br /><br />"
"android.util.Xml.newPullParser () "," Returns a new pull parser with namespace support. <br /><br />"
"android.util.Xml.asAttributeSet (XmlPullParser parser) "," Return an AttributeSet interface for use with the given XmlPullParser. <br /><br />"
"android.view.AbsSavedState.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.view.AbsSavedState.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.AbsSavedState.getSuperState () "," no description <br /><br />"
"android.view.accessibility.AccessibilityEvent.appendRecord (AccessibilityRecord record) "," Appends an AccessibilityRecord to the end of event records. <br /><br />"
"android.view.accessibility.AccessibilityEvent.getPackageName () "," Gets the package name of the source. <br /><br />"
"android.view.accessibility.AccessibilityEvent.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.view.accessibility.AccessibilityEvent.getEventTime () "," Gets the time in which this event was sent. <br /><br />"
"android.view.accessibility.AccessibilityEvent.setEventType (int eventType) "," Sets the event type. <br /><br />"
"android.view.accessibility.AccessibilityEvent.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.accessibility.AccessibilityEvent.getMovementGranularity () "," Gets the movement granularity that was traversed. <br /><br />"
"android.view.accessibility.AccessibilityEvent.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.view.accessibility.AccessibilityEvent.setContentChangeTypes (int changeTypes) "," Sets the bit mask of node tree changes signaled by an TYPE_WINDOW_CONTENT_CHANGED event. <br /><br />"
"android.view.accessibility.AccessibilityEvent.setPackageName (CharSequence packageName) "," Sets the package name of the source. <br /><br />"
"android.view.accessibility.AccessibilityEvent.obtain (AccessibilityEvent event) "," Returns a cached instance if such is available or a new one is created. <br /><br />"
"android.view.accessibility.AccessibilityEvent.getRecordCount () "," Gets the number of records contained in the event. <br /><br />"
"android.view.accessibility.AccessibilityEvent.setEventTime (long eventTime) "," Sets the time in which this event was sent. <br /><br />"
"android.view.accessibility.AccessibilityEvent.setAction (int action) "," Sets the performed action that triggered this event. <br /><br />"
"android.view.accessibility.AccessibilityEvent.getEventType () "," Gets the event type. <br /><br />"
"android.view.accessibility.AccessibilityEvent.initFromParcel (Parcel parcel) "," Creates a new instance from a Parcel. <br /><br />"
"android.view.accessibility.AccessibilityEvent.recycle () "," Recycles an instance back to be reused. <br /><br />"
"android.view.accessibility.AccessibilityEvent.obtain () "," Returns a cached instance if such is available or a new one is instantiated. <br /><br />"
"android.view.accessibility.AccessibilityEvent.getAction () "," Gets the performed action that triggered this event. <br /><br />"
"android.view.accessibility.AccessibilityEvent.getRecord (int index) "," Gets the record at a given index. <br /><br />"
"android.view.accessibility.AccessibilityEvent.obtain (int eventType) "," Returns a cached instance if such is available or a new one is instantiated with its type property set. <br /><br />"
"android.view.accessibility.AccessibilityEvent.eventTypeToString (int eventType) "," Returns the string representation of an event type. <br /><br />"
"android.view.accessibility.AccessibilityEvent.setMovementGranularity (int granularity) "," Sets the movement granularity that was traversed. <br /><br />"
"android.view.accessibility.AccessibilityEvent.getContentChangeTypes () "," Gets the bit mask of change types signaled by an TYPE_WINDOW_CONTENT_CHANGED event. <br /><br />"
"android.view.accessibility.AccessibilityEventSource.sendAccessibilityEvent (int eventType) "," Handles the request for sending an AccessibilityEvent given the event type. <br /><br />"
"android.view.accessibility.AccessibilityEventSource.sendAccessibilityEventUnchecked (AccessibilityEvent event) "," Handles the request for sending an AccessibilityEvent. <br /><br />"
"android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener.onAccessibilityStateChanged (boolean enabled) "," Called when the accessibility enabled state changes. <br /><br />"
"android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener.onTouchExplorationStateChanged (boolean enabled) "," Called when the touch exploration enabled state changes. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction.equals (Object other) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction.getId () "," Gets the id for this action. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction.getLabel () "," Gets the label for this action. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.CollectionInfo.obtain (int rowCount, int columnCount, boolean hierarchical, int selectionMode) "," Obtains a pooled instance. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.CollectionInfo.getColumnCount () "," Gets the number of columns. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.CollectionInfo.getSelectionMode () "," Gets the collection's selection mode. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.CollectionInfo.obtain (int rowCount, int columnCount, boolean hierarchical) "," Obtains a pooled instance. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.CollectionInfo.getRowCount () "," Gets the number of rows. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.CollectionInfo.isHierarchical () "," Gets if the collection is a hierarchically ordered. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo.obtain (int rowIndex, int rowSpan, int columnIndex, int columnSpan, boolean heading) "," Obtains a pooled instance. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo.getRowSpan () "," Gets the number of rows the item spans. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo.obtain (int rowIndex, int rowSpan, int columnIndex, int columnSpan, boolean heading, boolean selected) "," Obtains a pooled instance. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo.getColumnSpan () "," Gets the number of columns the item spans. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo.isSelected () "," Gets if the collection item is selected. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo.isHeading () "," Gets if the collection item is a heading. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo.getRowIndex () "," Gets the row index at which the item is located. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo.getColumnIndex () "," Gets the column index at which the item is located. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.equals (Object object) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setClickable (boolean clickable) "," Sets whether this node is clickable. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.isFocused () "," Gets whether this node is focused. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setChecked (boolean checked) "," Sets whether this node is checked. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setText (CharSequence text) "," Sets the text of this node. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setMaxTextLength (int max) "," Sets the maximum text length, or -1 for no limit. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getTextSelectionEnd () "," Gets the text selection end. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setCollectionItemInfo (AccessibilityNodeInfo.CollectionItemInfo collectionItemInfo) "," Sets the collection item info if the node is a collection item. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setLabelFor (View root, int virtualDescendantId) "," Sets the view for which the view represented by this info serves as a label for accessibility purposes. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getTextSelectionStart () "," Gets the text selection start. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setTraversalAfter (View view) "," Sets the view whose node is visited after this one in accessibility traversal. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setContentInvalid (boolean contentInvalid) "," Sets if the content of this node is invalid. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setTraversalAfter (View root, int virtualDescendantId) "," Sets the node after which this one is visited in accessibility traversal. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.isEditable () "," Gets if the node is editable. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setMovementGranularities (int granularities) "," Sets the movement granularities for traversing the text of this node. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.addChild (View root, int virtualDescendantId) "," Adds a virtual child which is a descendant of the given root. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setLongClickable (boolean longClickable) "," Sets whether this node is long clickable. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.focusSearch (int direction) "," Searches for the nearest view in the specified direction that can take the input focus. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.canOpenPopup () "," Gets if this node opens a popup or a dialog. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.removeAction (AccessibilityNodeInfo.AccessibilityAction action) "," Removes an action that can be performed on the node. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.removeChild (View child) "," Removes a child. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setVisibleToUser (boolean visibleToUser) "," Sets whether this node is visible to the user. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.isLongClickable () "," Gets whether this node is long clickable. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setRangeInfo (AccessibilityNodeInfo.RangeInfo rangeInfo) "," Sets the range info if this node is a range. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setLiveRegion (int mode) "," Sets the node's live region mode. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.addChild (View child) "," Adds a child. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getRangeInfo () "," Gets the range info if this node is a range. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.addAction (int action)    This method was deprecated in API level 21. This has been deprecated for addAction (AccessibilityAction) "," This method was deprecated in API level 21. This has been deprecated for addAction(AccessibilityAction) <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getExtras () "," Gets an optional bundle with extra data. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getActionList () "," Gets the actions that can be performed on the node. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.obtain () "," Returns a cached instance if such is available otherwise a new one. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.addAction (AccessibilityNodeInfo.AccessibilityAction action) "," Adds an action that can be performed on the node. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setTraversalBefore (View root, int virtualDescendantId) "," Sets the node before which this one is visited during traversal. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.isPassword () "," Gets whether this node is a password. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.isSelected () "," Gets whether this node is selected. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getClassName () "," Gets the class this node comes from. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getPackageName () "," Gets the package this node comes from. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel.  Note: After the instance is written to a parcel it is recycled. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getCollectionInfo () "," Gets the collection info if the node is a collection. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setParent (View parent) "," Sets the parent. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setInputType (int inputType) "," Sets the input type of the source as defined by InputType. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.findAccessibilityNodeInfosByText (String text) "," Finds AccessibilityNodeInfos by text. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setPackageName (CharSequence packageName) "," Sets the package this node comes from. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getViewIdResourceName () "," Gets the fully qualified resource name of the source view's id. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setAccessibilityFocused (boolean focused) "," Sets whether this node is accessibility focused. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getError () "," Gets the error text of this node. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setCollectionInfo (AccessibilityNodeInfo.CollectionInfo collectionInfo) "," Sets the collection info if the node is a collection. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getTraversalAfter () "," Gets the node after which this one is visited in accessibility traversal. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.obtain (AccessibilityNodeInfo info) "," Returns a cached instance if such is available or a new one is create. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.removeAction (int action)    This method was deprecated in API level 21. Use removeAction (AccessibilityAction) "," This method was deprecated in API level 21. Use removeAction(AccessibilityAction) <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setBoundsInParent (Rect bounds) "," Sets the node bounds in parent coordinates. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.isClickable () "," Gets whether this node is clickable. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.obtain (View root, int virtualDescendantId) "," Returns a cached instance if such is available otherwise a new one and sets the source. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.refresh () "," Refreshes this info with the latest state of the view it represents. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.isEnabled () "," Gets whether this node is enabled. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.obtain (View source) "," Returns a cached instance if such is available otherwise a new one and sets the source. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.recycle () "," Return an instance back to be reused. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getWindowId () "," Gets the id of the window from which the info comes from. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.performAction (int action) "," Performs an action on the node. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setPassword (boolean password) "," Sets whether this node is a password. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getMovementGranularities () "," Gets the movement granularities for traversing the text of this node. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.findFocus (int focus) "," Find the view that has the specified focus type. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.isCheckable () "," Gets whether this node is checkable. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setSource (View root, int virtualDescendantId) "," Sets the source to be a virtual descendant of the given root. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.isVisibleToUser () "," Sets whether this node is visible to the user. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setTraversalBefore (View view) "," Sets the view before whose node this one should be visited during traversal. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setTextSelection (int start, int end) "," Sets the text selection start and end. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setBoundsInScreen (Rect bounds) "," Sets the node bounds in screen coordinates. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setScrollable (boolean scrollable) "," Sets if the node is scrollable. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setViewIdResourceName (String viewIdResName) "," Sets the fully qualified resource name of the source view's id. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.isAccessibilityFocused () "," Gets whether this node is accessibility focused. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getLabelFor () "," Gets the node info for which the view represented by this info serves as a label for accessibility purposes. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setEditable (boolean editable) "," Sets whether this node is editable. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setEnabled (boolean enabled) "," Sets whether this node is enabled. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.isFocusable () "," Gets whether this node is focusable. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.isContentInvalid () "," Gets if the content of this node is invalid. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getTraversalBefore () "," Gets the node before which this one is visited during traversal. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.performAction (int action, Bundle arguments) "," Performs an action on the node. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getChild (int index) "," Get the child at given index. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getLiveRegion () "," Gets the node's live region mode. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setLabelFor (View labeled) "," Sets the view for which the view represented by this info serves as a label for accessibility purposes. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.findAccessibilityNodeInfosByViewId (String viewId) "," Finds AccessibilityNodeInfos by the fully qualified view id's resource name where a fully qualified id is of the from 'package:id/id_resource_name'. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.isScrollable () "," Gets if the node is scrollable. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getWindow () "," Gets the window to which this node belongs. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getContentDescription () "," Gets the content description of this node. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getMaxTextLength () "," Returns the maximum text length for this node. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setCheckable (boolean checkable) "," Sets whether this node is checkable. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getActions ()    This method was deprecated in API level 21. Use getActionList () "," This method was deprecated in API level 21. Use getActionList(). <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getInputType () "," Gets the input type of the source as defined by InputType. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setLabeledBy (View label) "," Sets the view which serves as the label of the view represented by this info for accessibility purposes. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.isMultiLine () "," Gets if the node is a multi line editable text. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setFocused (boolean focused) "," Sets whether this node is focused. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setSelected (boolean selected) "," Sets whether this node is selected. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setDismissable (boolean dismissable) "," Sets if the node can be dismissed. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.isDismissable () "," Gets if the node can be dismissed. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setError (CharSequence error) "," Sets the error text of this node. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setParent (View root, int virtualDescendantId) "," Sets the parent to be a virtual descendant of the given root. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.isChecked () "," Gets whether this node is checked. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setClassName (CharSequence className) "," Sets the class this node comes from. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getLabeledBy () "," Gets the node info which serves as the label of the view represented by this info for accessibility purposes. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getText () "," Gets the text of this node. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setCanOpenPopup (boolean opensPopup) "," Sets if this node opens a popup or a dialog. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setContentDescription (CharSequence contentDescription) "," Sets the content description of this node. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getBoundsInScreen (Rect outBounds) "," Gets the node bounds in screen coordinates. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getChildCount () "," Gets the number of children. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.removeChild (View root, int virtualDescendantId) "," Removes a virtual child which is a descendant of the given root. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setMultiLine (boolean multiLine) "," Sets if the node is a multi line editable text. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setFocusable (boolean focusable) "," Sets whether this node is focusable. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getParent () "," Gets the parent. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getCollectionItemInfo () "," Gets the collection item info if the node is a collection item. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setSource (View source) "," Sets the source. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.setLabeledBy (View root, int virtualDescendantId) "," Sets the view which serves as the label of the view represented by this info for accessibility purposes. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.getBoundsInParent (Rect outBounds) "," Gets the node bounds in parent coordinates. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.RangeInfo.getCurrent () "," Gets the current value. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.RangeInfo.getType () "," Gets the range type. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.RangeInfo.getMin () "," Gets the min value. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.RangeInfo.getMax () "," Gets the max value. <br /><br />"
"android.view.accessibility.AccessibilityNodeInfo.RangeInfo.obtain (int type, float min, float max, float current) "," Obtains a pooled instance. <br /><br />"
"android.view.accessibility.AccessibilityNodeProvider.performAction (int virtualViewId, int action, Bundle arguments) "," Performs an accessibility action on a virtual view, i.e. <br /><br />"
"android.view.accessibility.AccessibilityNodeProvider.createAccessibilityNodeInfo (int virtualViewId) "," Returns an AccessibilityNodeInfo representing a virtual view, i.e. <br /><br />"
"android.view.accessibility.AccessibilityNodeProvider.findAccessibilityNodeInfosByText (String text, int virtualViewId) "," Finds AccessibilityNodeInfos by text. <br /><br />"
"android.view.accessibility.AccessibilityNodeProvider.findFocus (int focus) "," Find the virtual view, i.e. <br /><br />"
"android.view.accessibility.AccessibilityRecord.setToIndex (int toIndex) "," Sets the index of text selection end or the index of the last visible item when scrolling. <br /><br />"
"android.view.accessibility.AccessibilityRecord.setSource (View root, int virtualDescendantId) "," Sets the source to be a virtual descendant of the given root. <br /><br />"
"android.view.accessibility.AccessibilityRecord.getClassName () "," Gets the class name of the source. <br /><br />"
"android.view.accessibility.AccessibilityRecord.setItemCount (int itemCount) "," Sets the number of items that can be visited. <br /><br />"
"android.view.accessibility.AccessibilityRecord.setScrollY (int scrollY) "," Sets the scroll offset of the source top edge in pixels. <br /><br />"
"android.view.accessibility.AccessibilityRecord.setAddedCount (int addedCount) "," Sets the number of added characters. <br /><br />"
"android.view.accessibility.AccessibilityRecord.getScrollY () "," Gets the scroll offset of the source top edge in pixels. <br /><br />"
"android.view.accessibility.AccessibilityRecord.setScrollable (boolean scrollable) "," Sets if the source is scrollable. <br /><br />"
"android.view.accessibility.AccessibilityRecord.getScrollX () "," Gets the scroll offset of the source left edge in pixels. <br /><br />"
"android.view.accessibility.AccessibilityRecord.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.view.accessibility.AccessibilityRecord.setCurrentItemIndex (int currentItemIndex) "," Sets the index of the source in the list of items that can be visited. <br /><br />"
"android.view.accessibility.AccessibilityRecord.setBeforeText (CharSequence beforeText) "," Sets the text before a change. <br /><br />"
"android.view.accessibility.AccessibilityRecord.setRemovedCount (int removedCount) "," Sets the number of removed characters. <br /><br />"
"android.view.accessibility.AccessibilityRecord.setMaxScrollY (int maxScrollY) "," Sets the max scroll offset of the source top edge in pixels. <br /><br />"
"android.view.accessibility.AccessibilityRecord.getParcelableData () "," Gets the Parcelable data. <br /><br />"
"android.view.accessibility.AccessibilityRecord.isChecked () "," Gets if the source is checked. <br /><br />"
"android.view.accessibility.AccessibilityRecord.setClassName (CharSequence className) "," Sets the class name of the source. <br /><br />"
"android.view.accessibility.AccessibilityRecord.getBeforeText () "," Sets the text before a change. <br /><br />"
"android.view.accessibility.AccessibilityRecord.setPassword (boolean isPassword) "," Sets if the source is a password field. <br /><br />"
"android.view.accessibility.AccessibilityRecord.getFromIndex () "," Gets the index of the first character of the changed sequence, or the beginning of a text selection or the index of the first visible item when scrolling. <br /><br />"
"android.view.accessibility.AccessibilityRecord.setParcelableData (Parcelable parcelableData) "," Sets the Parcelable data of the event. <br /><br />"
"android.view.accessibility.AccessibilityRecord.setChecked (boolean isChecked) "," Sets if the source is checked. <br /><br />"
"android.view.accessibility.AccessibilityRecord.setScrollX (int scrollX) "," Sets the scroll offset of the source left edge in pixels. <br /><br />"
"android.view.accessibility.AccessibilityRecord.setMaxScrollX (int maxScrollX) "," Sets the max scroll offset of the source left edge in pixels. <br /><br />"
"android.view.accessibility.AccessibilityRecord.getMaxScrollY () "," Gets the max scroll offset of the source top edge in pixels. <br /><br />"
"android.view.accessibility.AccessibilityRecord.setFromIndex (int fromIndex) "," Sets the index of the first character of the changed sequence or the beginning of a text selection or the index of the first visible item when scrolling. <br /><br />"
"android.view.accessibility.AccessibilityRecord.getItemCount () "," Gets the number of items that can be visited. <br /><br />"
"android.view.accessibility.AccessibilityRecord.getText () "," Gets the text of the event. <br /><br />"
"android.view.accessibility.AccessibilityRecord.getSource () "," Gets the AccessibilityNodeInfo of the event source. <br /><br />"
"android.view.accessibility.AccessibilityRecord.getToIndex () "," Gets the index of text selection end or the index of the last visible item when scrolling. <br /><br />"
"android.view.accessibility.AccessibilityRecord.setContentDescription (CharSequence contentDescription) "," Sets the description of the source. <br /><br />"
"android.view.accessibility.AccessibilityRecord.isScrollable () "," Gets if the source is scrollable. <br /><br />"
"android.view.accessibility.AccessibilityRecord.getCurrentItemIndex () "," Gets the index of the source in the list of items the can be visited. <br /><br />"
"android.view.accessibility.AccessibilityRecord.getAddedCount () "," Gets the number of added characters. <br /><br />"
"android.view.accessibility.AccessibilityRecord.obtain (AccessibilityRecord record) "," Returns a cached instance if such is available or a new one is instantiated. <br /><br />"
"android.view.accessibility.AccessibilityRecord.setEnabled (boolean isEnabled) "," Sets if the source is enabled. <br /><br />"
"android.view.accessibility.AccessibilityRecord.getRemovedCount () "," Gets the number of removed characters. <br /><br />"
"android.view.accessibility.AccessibilityRecord.isEnabled () "," Gets if the source is enabled. <br /><br />"
"android.view.accessibility.AccessibilityRecord.recycle () "," Return an instance back to be reused. <br /><br />"
"android.view.accessibility.AccessibilityRecord.isFullScreen () "," Gets if the source is taking the entire screen. <br /><br />"
"android.view.accessibility.AccessibilityRecord.obtain () "," Returns a cached instance if such is available or a new one is instantiated. <br /><br />"
"android.view.accessibility.AccessibilityRecord.getMaxScrollX () "," Gets the max scroll offset of the source left edge in pixels. <br /><br />"
"android.view.accessibility.AccessibilityRecord.isPassword () "," Gets if the source is a password field. <br /><br />"
"android.view.accessibility.AccessibilityRecord.getContentDescription () "," Gets the description of the source. <br /><br />"
"android.view.accessibility.AccessibilityRecord.setSource (View source) "," Sets the event source. <br /><br />"
"android.view.accessibility.AccessibilityRecord.getWindowId () "," Gets the id of the window from which the event comes from. <br /><br />"
"android.view.accessibility.AccessibilityRecord.setFullScreen (boolean isFullScreen) "," Sets if the source is taking the entire screen. <br /><br />"
"android.view.accessibility.AccessibilityWindowInfo.obtain (AccessibilityWindowInfo info) "," Returns a cached instance if such is available or a new one is created. <br /><br />"
"android.view.accessibility.AccessibilityWindowInfo.isFocused () "," Gets if this window has input focus. <br /><br />"
"android.view.accessibility.AccessibilityWindowInfo.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.view.accessibility.AccessibilityWindowInfo.getType () "," Gets the type of the window. <br /><br />"
"android.view.accessibility.AccessibilityWindowInfo.getChild (int index) "," Gets the child window at a given index. <br /><br />"
"android.view.accessibility.AccessibilityWindowInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.accessibility.AccessibilityWindowInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.view.accessibility.AccessibilityWindowInfo.getBoundsInScreen (Rect outBounds) "," Gets the bounds of this window in the screen. <br /><br />"
"android.view.accessibility.AccessibilityWindowInfo.isAccessibilityFocused () "," Gets if this window has accessibility focus. <br /><br />"
"android.view.accessibility.AccessibilityWindowInfo.getId () "," Gets the unique window id. <br /><br />"
"android.view.accessibility.AccessibilityWindowInfo.recycle () "," Return an instance back to be reused. <br /><br />"
"android.view.accessibility.AccessibilityWindowInfo.obtain () "," Returns a cached instance if such is available or a new one is created. <br /><br />"
"android.view.accessibility.AccessibilityWindowInfo.getChildCount () "," Gets the number of child windows. <br /><br />"
"android.view.accessibility.AccessibilityWindowInfo.getLayer () "," Gets the layer which determines the Z-order of the window. <br /><br />"
"android.view.accessibility.AccessibilityWindowInfo.isActive () "," Gets if this window is active. <br /><br />"
"android.view.accessibility.AccessibilityWindowInfo.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.view.accessibility.AccessibilityWindowInfo.getRoot () "," Gets the root node in the window's hierarchy. <br /><br />"
"android.view.accessibility.AccessibilityWindowInfo.getParent () "," Gets the parent window if such. <br /><br />"
"android.view.accessibility.AccessibilityWindowInfo.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.view.accessibility.CaptioningManager.CaptioningChangeListener.onUserStyleChanged (CaptioningManager.CaptionStyle userStyle) "," Called when the captioning user style changes. <br /><br />"
"android.view.accessibility.CaptioningManager.CaptioningChangeListener.onEnabledChanged (boolean enabled) "," Called when the captioning enabled state changes. <br /><br />"
"android.view.accessibility.CaptioningManager.CaptioningChangeListener.onFontScaleChanged (float fontScale) "," Called when the captioning font scaling factor changes. <br /><br />"
"android.view.accessibility.CaptioningManager.CaptioningChangeListener.onLocaleChanged (Locale locale) "," Called when the captioning locale changes. <br /><br />"
"android.view.accessibility.CaptioningManager.CaptionStyle.getTypeface () "," no description <br /><br />"
"android.view.accessibility.CaptioningManager.CaptionStyle.hasEdgeColor () "," no description <br /><br />"
"android.view.accessibility.CaptioningManager.CaptionStyle.hasEdgeType () "," no description <br /><br />"
"android.view.accessibility.CaptioningManager.CaptionStyle.hasBackgroundColor () "," no description <br /><br />"
"android.view.accessibility.CaptioningManager.CaptionStyle.hasWindowColor () "," no description <br /><br />"
"android.view.accessibility.CaptioningManager.CaptionStyle.hasForegroundColor () "," no description <br /><br />"
"android.view.ActionMode.Callback.onActionItemClicked (ActionMode mode, MenuItem item) "," Called to report a user click on an action button. <br /><br />"
"android.view.ActionMode.Callback.onCreateActionMode (ActionMode mode, Menu menu) "," Called when action mode is first created. <br /><br />"
"android.view.ActionMode.Callback.onPrepareActionMode (ActionMode mode, Menu menu) "," Called to refresh an action mode's action menu whenever it is invalidated. <br /><br />"
"android.view.ActionMode.Callback.onDestroyActionMode (ActionMode mode) "," Called when an action mode is about to be exited and destroyed. <br /><br />"
"android.view.ActionMode.getTag () "," Retrieve the tag object associated with this ActionMode. <br /><br />"
"android.view.ActionMode.getMenu () "," Returns the menu of actions that this action mode presents. <br /><br />"
"android.view.ActionMode.setTag (Object tag) "," Set a tag object associated with this ActionMode. <br /><br />"
"android.view.ActionMode.setTitleOptionalHint (boolean titleOptional) "," Set whether or not the title/subtitle display for this action mode is optional. <br /><br />"
"android.view.ActionMode.setSubtitle (int resId) "," Set the subtitle of the action mode. <br /><br />"
"android.view.ActionMode.setSubtitle (CharSequence subtitle) "," Set the subtitle of the action mode. <br /><br />"
"android.view.ActionMode.setCustomView (View view) "," Set a custom view for this action mode. <br /><br />"
"android.view.ActionMode.setTitle (int resId) "," Set the title of the action mode. <br /><br />"
"android.view.ActionMode.getSubtitle () "," Returns the current subtitle of this action mode. <br /><br />"
"android.view.ActionMode.finish () "," Finish and close this action mode. <br /><br />"
"android.view.ActionMode.isTitleOptional () "," no description <br /><br />"
"android.view.ActionMode.getCustomView () "," Returns the current custom view for this action mode. <br /><br />"
"android.view.ActionMode.getMenuInflater () "," Returns a MenuInflater with the ActionMode's context. <br /><br />"
"android.view.ActionMode.getTitle () "," Returns the current title of this action mode. <br /><br />"
"android.view.ActionMode.getTitleOptionalHint () "," no description <br /><br />"
"android.view.ActionMode.setTitle (CharSequence title) "," Set the title of the action mode. <br /><br />"
"android.view.ActionMode.invalidate () "," Invalidate the action mode and refresh menu content. <br /><br />"
"android.view.ActionProvider.onPerformDefaultAction () "," Performs an optional default action. <br /><br />"
"android.view.ActionProvider.refreshVisibility ()   If this ActionProvider is associated with an item in a menu, refresh the visibility of the item based on overridesItemVisibility () and isVisible () "," If this ActionProvider is associated with an item in a menu, refresh the visibility of the item based on overridesItemVisibility() and isVisible(). <br /><br />"
"android.view.ActionProvider.onPrepareSubMenu (SubMenu subMenu) "," Called to prepare an associated submenu for the menu item backed by this ActionProvider. <br /><br />"
"android.view.ActionProvider.hasSubMenu () "," Determines if this ActionProvider has a submenu associated with it. <br /><br />"
"android.view.ActionProvider.overridesItemVisibility ()   The result of this method determines whether or not isVisible () "," The result of this method determines whether or not isVisible() will be used by the MenuItem this ActionProvider is bound to help determine its visibility. <br /><br />"
"android.view.ActionProvider.onCreateActionView (MenuItem forItem) "," Factory method called by the Android framework to create new action views. <br /><br />"
"android.view.ActionProvider.isVisible ()   If overridesItemVisibility () "," If overridesItemVisibility() returns true, the return value of this method will help determine the visibility of the MenuItem this ActionProvider is bound to. <br /><br />"
"android.view.ActionProvider.onCreateActionView ()    This method was deprecated in API level 16. use onCreateActionView (MenuItem) "," This method was deprecated in API level 16. use onCreateActionView(MenuItem) <br /><br />"
"android.view.ActionProvider.setVisibilityListener (ActionProvider.VisibilityListener listener) "," Set a listener to be notified when this ActionProvider's overridden visibility changes. <br /><br />"
"android.view.ActionProvider.VisibilityListener.onActionProviderVisibilityChanged (boolean isVisible) "," no description <br /><br />"
"android.view.animation.AccelerateDecelerateInterpolator.getInterpolation (float input) "," no description <br /><br />"
"android.view.animation.AccelerateInterpolator.getInterpolation (float input) "," no description <br /><br />"
"android.view.animation.AlphaAnimation.willChangeTransformationMatrix () "," Indicates whether or not this animation will affect the transformation matrix. <br /><br />"
"android.view.animation.AlphaAnimation.willChangeBounds () "," Indicates whether or not this animation will affect the bounds of the animated view. <br /><br />"
"android.view.animation.Animation.AnimationListener.onAnimationRepeat (Animation animation) "," Notifies the repetition of the animation. <br /><br />"
"android.view.animation.Animation.AnimationListener.onAnimationEnd (Animation animation) "," Notifies the end of the animation. <br /><br />"
"android.view.animation.Animation.AnimationListener.onAnimationStart (Animation animation) "," Notifies the start of the animation. <br /><br />"
"android.view.animation.Animation.setStartOffset (long startOffset) "," When this animation should start relative to the start time. <br /><br />"
"android.view.animation.Animation.setBackgroundColor (int bg) "," Set background behind animation. <br /><br />"
"android.view.animation.Animation.getRepeatCount () "," Defines how many times the animation should repeat. <br /><br />"
"android.view.animation.Animation.getDetachWallpaper ()   Return value of setDetachWallpaper (boolean) "," Return value of setDetachWallpaper(boolean). <br /><br />"
"android.view.animation.Animation.isFillEnabled () "," If fillEnabled is true, this animation will apply the value of fillBefore. <br /><br />"
"android.view.animation.Animation.willChangeBounds () "," Indicates whether or not this animation will affect the bounds of the animated view. <br /><br />"
"android.view.animation.Animation.getFillBefore () "," If fillBefore is true, this animation will apply its transformation before the start time of the animation. <br /><br />"
"android.view.animation.Animation.setDuration (long durationMillis) "," How long this animation should last. <br /><br />"
"android.view.animation.Animation.getFillAfter () "," If fillAfter is true, this animation will apply its transformation after the end time of the animation. <br /><br />"
"android.view.animation.Animation.setFillBefore (boolean fillBefore) "," If fillBefore is true, this animation will apply its transformation before the start time of the animation. <br /><br />"
"android.view.animation.Animation.setRepeatCount (int repeatCount) "," Sets how many times the animation should be repeated. <br /><br />"
"android.view.animation.Animation.startNow () "," Convenience method to start the animation at the current time in milliseconds. <br /><br />"
"android.view.animation.Animation.start ()   Convenience method to start the animation the first time getTransformation (long, Transformation) "," Convenience method to start the animation the first time getTransformation(long, Transformation) is invoked. <br /><br />"
"android.view.animation.Animation.hasStarted () "," Indicates whether this animation has started or not. <br /><br />"
"android.view.animation.Animation.setZAdjustment (int zAdjustment) "," Set the Z ordering mode to use while running the animation. <br /><br />"
"android.view.animation.Animation.getTransformation (long currentTime, Transformation outTransformation) "," Gets the transformation to apply at a specified point in time. <br /><br />"
"android.view.animation.Animation.isInitialized () "," Whether or not the animation has been initialized. <br /><br />"
"android.view.animation.Animation.initialize (int width, int height, int parentWidth, int parentHeight) "," Initialize this animation with the dimensions of the object being animated as well as the objects parents. <br /><br />"
"android.view.animation.Animation.computeDurationHint () "," Compute a hint at how long the entire animation may last, in milliseconds. <br /><br />"
"android.view.animation.Animation.setRepeatMode (int repeatMode) "," Defines what this animation should do when it reaches the end. <br /><br />"
"android.view.animation.Animation.hasEnded () "," Indicates whether this animation has ended or not. <br /><br />"
"android.view.animation.Animation.cancel () "," Cancel the animation. <br /><br />"
"android.view.animation.Animation.setDetachWallpaper (boolean detachWallpaper) "," If detachWallpaper is true, and this is a window animation of a window that has a wallpaper background, then the window will be detached from the wallpaper while it runs. <br /><br />"
"android.view.animation.Animation.getDuration () "," How long this animation should last <br /><br />"
"android.view.animation.Animation.getRepeatMode () "," Defines what this animation should do when it reaches the end. <br /><br />"
"android.view.animation.Animation.willChangeTransformationMatrix () "," Indicates whether or not this animation will affect the transformation matrix. <br /><br />"
"android.view.animation.Animation.setInterpolator (Context context, int resID) "," Sets the acceleration curve for this animation. <br /><br />"
"android.view.animation.Animation.getZAdjustment ()   Returns the Z ordering mode to use while running the animation as previously set by setZAdjustment (int) "," Returns the Z ordering mode to use while running the animation as previously set by setZAdjustment(int). <br /><br />"
"android.view.animation.Animation.getStartOffset () "," When this animation should start, relative to StartTime <br /><br />"
"android.view.animation.Animation.restrictDuration (long durationMillis) "," Ensure that the duration that this animation will run is not longer than durationMillis. <br /><br />"
"android.view.animation.Animation.getBackgroundColor () "," Returns the background color behind the animation. <br /><br />"
"android.view.animation.Animation.setStartTime (long startTimeMillis) "," When this animation should start. <br /><br />"
"android.view.animation.Animation.scaleCurrentDuration (float scale) "," How much to scale the duration by. <br /><br />"
"android.view.animation.Animation.setInterpolator (Interpolator i) "," Sets the acceleration curve for this animation. <br /><br />"
"android.view.animation.Animation.setAnimationListener (Animation.AnimationListener listener) "," Binds an animation listener to this animation. <br /><br />"
"android.view.animation.Animation.getInterpolator () "," Gets the acceleration curve type for this animation. <br /><br />"
"android.view.animation.Animation.setFillEnabled (boolean fillEnabled) "," If fillEnabled is true, the animation will apply the value of fillBefore. <br /><br />"
"android.view.animation.Animation.setFillAfter (boolean fillAfter) "," If fillAfter is true, the transformation that this animation performed will persist when it is finished. <br /><br />"
"android.view.animation.Animation.reset () "," Reset the initialization state of this animation. <br /><br />"
"android.view.animation.Animation.getStartTime () "," When this animation should start. <br /><br />"
"android.view.animation.Animation.getTransformation (long currentTime, Transformation outTransformation, float scale) "," Gets the transformation to apply at a specified point in time. <br /><br />"
"android.view.animation.AnimationSet.setStartOffset (long startOffset) "," When this animation should start relative to the start time. <br /><br />"
"android.view.animation.AnimationSet.getTransformation (long currentTime, Transformation t) "," The transformation of an animation set is the concatenation of all of its component animations. <br /><br />"
"android.view.animation.AnimationSet.willChangeTransformationMatrix () "," Indicates whether or not this animation will affect the transformation matrix. <br /><br />"
"android.view.animation.AnimationSet.willChangeBounds () "," Indicates whether or not this animation will affect the bounds of the animated view. <br /><br />"
"android.view.animation.AnimationSet.addAnimation (Animation a) "," Add a child animation to this animation set. <br /><br />"
"android.view.animation.AnimationSet.restrictDuration (long durationMillis) "," Ensure that the duration that this animation will run is not longer than durationMillis. <br /><br />"
"android.view.animation.AnimationSet.setDuration (long durationMillis) "," Sets the duration of every child animation. <br /><br />"
"android.view.animation.AnimationSet.setFillBefore (boolean fillBefore) "," If fillBefore is true, this animation will apply its transformation before the start time of the animation. <br /><br />"
"android.view.animation.AnimationSet.setStartTime (long startTimeMillis) "," Sets the start time of this animation and all child animations <br /><br />"
"android.view.animation.AnimationSet.scaleCurrentDuration (float scale) "," How much to scale the duration by. <br /><br />"
"android.view.animation.AnimationSet.getAnimations () "," no description <br /><br />"
"android.view.animation.AnimationSet.initialize (int width, int height, int parentWidth, int parentHeight) "," Initialize this animation with the dimensions of the object being animated as well as the objects parents. <br /><br />"
"android.view.animation.AnimationSet.computeDurationHint () "," The duration hint of an animation set is the maximum of the duration hints of all of its component animations. <br /><br />"
"android.view.animation.AnimationSet.setFillAfter (boolean fillAfter) "," If fillAfter is true, the transformation that this animation performed will persist when it is finished. <br /><br />"
"android.view.animation.AnimationSet.setRepeatMode (int repeatMode) "," Defines what this animation should do when it reaches the end. <br /><br />"
"android.view.animation.AnimationSet.reset () "," Reset the initialization state of this animation. <br /><br />"
"android.view.animation.AnimationSet.getStartTime () "," When this animation should start. <br /><br />"
"android.view.animation.AnimationSet.getDuration () "," The duration of an AnimationSet is defined to be the duration of the longest child animation. <br /><br />"
"android.view.animation.AnimationUtils.loadAnimation (Context context, int id) "," Loads an Animation object from a resource <br /><br />"
"android.view.animation.AnimationUtils.makeInChildBottomAnimation (Context c) "," Make an animation for objects becoming visible. <br /><br />"
"android.view.animation.AnimationUtils.loadLayoutAnimation (Context context, int id) "," Loads a LayoutAnimationController object from a resource <br /><br />"
"android.view.animation.AnimationUtils.currentAnimationTimeMillis () "," Returns the current animation time in milliseconds. <br /><br />"
"android.view.animation.AnimationUtils.makeOutAnimation (Context c, boolean toRight) "," Make an animation for objects becoming invisible. <br /><br />"
"android.view.animation.AnimationUtils.makeInAnimation (Context c, boolean fromLeft) "," Make an animation for objects becoming visible. <br /><br />"
"android.view.animation.AnimationUtils.loadInterpolator (Context context, int id) "," Loads an Interpolator object from a resource <br /><br />"
"android.view.animation.AnticipateInterpolator.getInterpolation (float t) "," no description <br /><br />"
"android.view.animation.AnticipateOvershootInterpolator.getInterpolation (float t) "," no description <br /><br />"
"android.view.animation.BounceInterpolator.getInterpolation (float t) "," no description <br /><br />"
"android.view.animation.CycleInterpolator.getInterpolation (float input) "," no description <br /><br />"
"android.view.animation.DecelerateInterpolator.getInterpolation (float input) "," no description <br /><br />"
"android.view.animation.GridLayoutAnimationController.setDirection (int direction) "," Sets the direction of the animation. <br /><br />"
"android.view.animation.GridLayoutAnimationController.getRowDelay () "," Returns the delay by which the children's animation are offset from one row to the other. <br /><br />"
"android.view.animation.GridLayoutAnimationController.setDirectionPriority (int directionPriority) "," Specifies the direction priority of the animation. <br /><br />"
"android.view.animation.GridLayoutAnimationController.getDirection () "," Returns the direction of the animation. <br /><br />"
"android.view.animation.GridLayoutAnimationController.willOverlap () "," Indicates whether two children's animations will overlap. <br /><br />"
"android.view.animation.GridLayoutAnimationController.setRowDelay (float rowDelay) "," Sets the delay, as a fraction of the animation duration, by which the children's animations are offset from one row to the other. <br /><br />"
"android.view.animation.GridLayoutAnimationController.setColumnDelay (float columnDelay) "," Sets the delay, as a fraction of the animation duration, by which the children's animations are offset from one column to the other. <br /><br />"
"android.view.animation.GridLayoutAnimationController.getColumnDelay () "," Returns the delay by which the children's animation are offset from one column to the other. <br /><br />"
"android.view.animation.GridLayoutAnimationController.getDirectionPriority () "," Returns the direction priority for the animation. <br /><br />"
"android.view.animation.LayoutAnimationController.setInterpolator (Context context, int resourceID) "," Sets the interpolator used to interpolate the delays between the children. <br /><br />"
"android.view.animation.LayoutAnimationController.start () "," Starts the animation. <br /><br />"
"android.view.animation.LayoutAnimationController.setOrder (int order) "," Sets the order used to compute the delay of each child's animation. <br /><br />"
"android.view.animation.LayoutAnimationController.setAnimation (Animation animation) "," Sets the animation to be run on each child of the view group on which this layout animation controller is . <br /><br />"
"android.view.animation.LayoutAnimationController.setAnimation (Context context, int resourceID) "," Sets the animation to be run on each child of the view group on which this layout animation controller is . <br /><br />"
"android.view.animation.LayoutAnimationController.isDone () "," Indicates whether the layout animation is over or not. <br /><br />"
"android.view.animation.LayoutAnimationController.setDelay (float delay) "," Sets the delay, as a fraction of the animation duration, by which the children's animations are offset. <br /><br />"
"android.view.animation.LayoutAnimationController.getInterpolator () "," Returns the interpolator used to interpolate the delays between the children. <br /><br />"
"android.view.animation.LayoutAnimationController.willOverlap () "," Indicates whether two children's animations will overlap. <br /><br />"
"android.view.animation.LayoutAnimationController.setInterpolator (Interpolator interpolator) "," Sets the interpolator used to interpolate the delays between the children. <br /><br />"
"android.view.animation.LayoutAnimationController.getAnimationForView (View view) "," Returns the animation to be applied to the specified view. <br /><br />"
"android.view.animation.LayoutAnimationController.getAnimation () "," Returns the animation applied to each child of the view group on which this controller is set. <br /><br />"
"android.view.animation.LayoutAnimationController.getOrder () "," Returns the order used to compute the delay of each child's animation. <br /><br />"
"android.view.animation.LayoutAnimationController.getDelay () "," Returns the delay by which the children's animation are offset. <br /><br />"
"android.view.animation.LinearInterpolator.getInterpolation (float input) "," no description <br /><br />"
"android.view.animation.OvershootInterpolator.getInterpolation (float t) "," no description <br /><br />"
"android.view.animation.PathInterpolator.getInterpolation (float t)   Using the line in the Path in this interpolator that can be described as y = f (x) "," Using the line in the Path in this interpolator that can be described as y = f(x), finds the y coordinate of the line given t as the x coordinate. <br /><br />"
"android.view.animation.RotateAnimation.initialize (int width, int height, int parentWidth, int parentHeight) "," Initialize this animation with the dimensions of the object being animated as well as the objects parents. <br /><br />"
"android.view.animation.ScaleAnimation.initialize (int width, int height, int parentWidth, int parentHeight) "," Initialize this animation with the dimensions of the object being animated as well as the objects parents. <br /><br />"
"android.view.animation.Transformation.compose (Transformation t) "," Apply this Transformation to an existing Transformation, e.g. <br /><br />"
"android.view.animation.Transformation.clear () "," Reset the transformation to a state that leaves the object being animated in an unmodified state. <br /><br />"
"android.view.animation.Transformation.setAlpha (float alpha) "," Sets the degree of transparency <br /><br />"
"android.view.animation.Transformation.set (Transformation t) "," Clones the specified transformation. <br /><br />"
"android.view.animation.Transformation.getMatrix () "," no description <br /><br />"
"android.view.animation.Transformation.toShortString () "," Return a string representation of the transformation in a compact form. <br /><br />"
"android.view.animation.Transformation.setTransformationType (int transformationType) "," Sets the transformation type. <br /><br />"
"android.view.animation.Transformation.getTransformationType () "," Indicates the nature of this transformation. <br /><br />"
"android.view.animation.Transformation.getAlpha () "," no description <br /><br />"
"android.view.animation.Transformation.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.view.animation.TranslateAnimation.initialize (int width, int height, int parentWidth, int parentHeight) "," Initialize this animation with the dimensions of the object being animated as well as the objects parents. <br /><br />"
"android.view.Choreographer.FrameCallback.doFrame (long frameTimeNanos) "," Called when a new display frame is being rendered. <br /><br />"
"android.view.CollapsibleActionView.onActionViewCollapsed () "," Called when this view is collapsed as an action view. <br /><br />"
"android.view.CollapsibleActionView.onActionViewExpanded () "," Called when this view is expanded as an action view. <br /><br />"
"android.view.ContextMenu.setHeaderIcon (Drawable icon) "," Sets the context menu header's icon to the icon given in icon Drawable. <br /><br />"
"android.view.ContextMenu.setHeaderTitle (CharSequence title) "," Sets the context menu header's title to the title given in title. <br /><br />"
"android.view.ContextMenu.setHeaderTitle (int titleRes) "," Sets the context menu header's title to the title given in titleRes resource identifier. <br /><br />"
"android.view.ContextMenu.clearHeader () "," Clears the header of the context menu. <br /><br />"
"android.view.ContextMenu.setHeaderView (View view) "," Sets the header of the context menu to the View given in view. <br /><br />"
"android.view.ContextMenu.setHeaderIcon (int iconRes) "," Sets the context menu header's icon to the icon given in iconRes resource id. <br /><br />"
"android.view.ContextThemeWrapper.setTheme (int resid) "," Set the base theme for this context. <br /><br />"
"android.view.ContextThemeWrapper.getTheme () "," Return the Theme object associated with this Context. <br /><br />"
"android.view.ContextThemeWrapper.getResources () "," Return a Resources instance for your application's package. <br /><br />"
"android.view.ContextThemeWrapper.applyOverrideConfiguration (Configuration overrideConfiguration) "," Call to set an 'override configuration' on this context -- this is a configuration that replies one or more values of the standard configuration that is applied to the context. <br /><br />"
"android.view.ContextThemeWrapper.getSystemService (String name) "," Return the handle to a system-level service by name. <br /><br />"
"android.view.Display.getSupportedRefreshRates () "," Get the supported refresh rates of this display in frames per second. <br /><br />"
"android.view.Display.getRefreshRate () "," Gets the refresh rate of this display in frames per second. <br /><br />"
"android.view.Display.getCurrentSizeRange (Point outSmallestSize, Point outLargestSize) "," Return the range of display sizes an application can expect to encounter under normal operation, as long as there is no physical change in screen size. <br /><br />"
"android.view.Display.getState () "," Gets the state of the display, such as whether it is on or off. <br /><br />"
"android.view.Display.getRealMetrics (DisplayMetrics outMetrics) "," Gets display metrics based on the real size of this display. <br /><br />"
"android.view.Display.getDisplayId () "," Gets the display id. <br /><br />"
"android.view.Display.getFlags () "," Returns a combination of flags that describe the capabilities of the display. <br /><br />"
"android.view.Display.getMetrics (DisplayMetrics outMetrics) "," Gets display metrics that describe the size and density of this display. <br /><br />"
"android.view.Display.getPixelFormat () "," This method was deprecated in API level 17. This method is no longer supported. The result is always RGBA_8888. <br /><br />"
"android.view.Display.getRotation () "," Returns the rotation of the screen from its 'natural' orientation. <br /><br />"
"android.view.Display.getRealSize (Point outSize) "," Gets the real size of the display without subtracting any window decor or applying any compatibility scale factors. <br /><br />"
"android.view.Display.getOrientation ()    This method was deprecated in API level 8. use getRotation () "," This method was deprecated in API level 8. use getRotation() <br /><br />"
"android.view.Display.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.view.Display.getWidth ()    This method was deprecated in API level 13. Use getSize (Point) "," This method was deprecated in API level 13. Use getSize(Point) instead. <br /><br />"
"android.view.Display.getName () "," Gets the name of the display. <br /><br />"
"android.view.Display.getSize (Point outSize) "," Gets the size of the display, in pixels. <br /><br />"
"android.view.Display.getRectSize (Rect outSize) "," Gets the size of the display as a rectangle, in pixels. <br /><br />"
"android.view.Display.getPresentationDeadlineNanos () "," This is how far in advance a buffer must be queued for presentation at a given time. <br /><br />"
"android.view.Display.getAppVsyncOffsetNanos () "," Gets the app VSYNC offset, in nanoseconds. <br /><br />"
"android.view.Display.isValid () "," Returns true if this display is still valid, false if the display has been removed. <br /><br />"
"android.view.Display.getHeight ()    This method was deprecated in API level 13. Use getSize (Point) "," This method was deprecated in API level 13. Use getSize(Point) instead. <br /><br />"
"android.view.DragEvent.getX () "," Gets the X coordinate of the drag point. <br /><br />"
"android.view.DragEvent.getResult () "," Returns an indication of the result of the drag and drop operation. <br /><br />"
"android.view.DragEvent.getClipData ()   Returns the ClipData object sent to the system as part of the call to startDrag () "," Returns the ClipData object sent to the system as part of the call to startDrag(). <br /><br />"
"android.view.DragEvent.getAction () "," Inspect the action value of this event. <br /><br />"
"android.view.DragEvent.getClipDescription ()   Returns the ClipDescription object contained in the ClipData object sent to the system as part of the call to startDrag () "," Returns the ClipDescription object contained in the ClipData object sent to the system as part of the call to startDrag(). <br /><br />"
"android.view.DragEvent.getY () "," Gets the Y coordinate of the drag point. <br /><br />"
"android.view.DragEvent.writeToParcel (Parcel dest, int flags) "," Creates a Parcel object from this DragEvent object. <br /><br />"
"android.view.DragEvent.describeContents () "," Returns information about the Parcel representation of this DragEvent object. <br /><br />"
"android.view.DragEvent.getLocalState ()   Returns the local state object sent to the system as part of the call to startDrag () "," Returns the local state object sent to the system as part of the call to startDrag(). <br /><br />"
"android.view.DragEvent.toString () "," Returns a string containing a concise, human-readable representation of this DragEvent object. <br /><br />"
"android.view.FocusFinder.findNearestTouchable (ViewGroup root, int x, int y, int direction, int[] deltas) "," Find the nearest touchable view to the specified view. <br /><br />"
"android.view.FocusFinder.findNextFocus (ViewGroup root, View focused, int direction) "," Find the next view to take focus in root's descendants, starting from the view that currently is focused. <br /><br />"
"android.view.FocusFinder.getInstance () "," Get the focus finder for this thread. <br /><br />"
"android.view.FocusFinder.findNextFocusFromRect (ViewGroup root, Rect focusedRect, int direction) "," Find the next view to take focus in root's descendants, searching from a particular rectangle in root's coordinates. <br /><br />"
"android.view.FrameStats.getRefreshPeriodNano ()   Gets the refresh period of the display hosting the window (s) "," Gets the refresh period of the display hosting the window(s) for which these statistics apply. <br /><br />"
"android.view.FrameStats.getFrameCount () "," Gets the number of frames for which there is data. <br /><br />"
"android.view.FrameStats.getFramePresentedTimeNano (int index) "," Get the time a frame at a given index was presented. <br /><br />"
"android.view.FrameStats.getEndTimeNano () "," Gets the end time of the interval for which these statistics apply. <br /><br />"
"android.view.FrameStats.getStartTimeNano () "," Gets the start time of the interval for which these statistics apply. <br /><br />"
"android.view.GestureDetector.setOnDoubleTapListener (GestureDetector.OnDoubleTapListener onDoubleTapListener) "," Sets the listener which will be called for double-tap and related gestures. <br /><br />"
"android.view.GestureDetector.setIsLongpressEnabled (boolean isLongpressEnabled) "," Set whether longpress is enabled, if this is enabled when a user presses and holds down you get a longpress event and nothing further. <br /><br />"
"android.view.GestureDetector.onTouchEvent (MotionEvent ev) "," Analyzes the given motion event and if applicable triggers the appropriate callbacks on the GestureDetector.OnGestureListener supplied. <br /><br />"
"android.view.GestureDetector.isLongpressEnabled () "," no description <br /><br />"
"android.view.GestureDetector.OnDoubleTapListener.onDoubleTap (MotionEvent e) "," Notified when a double-tap occurs. <br /><br />"
"android.view.GestureDetector.OnDoubleTapListener.onDoubleTapEvent (MotionEvent e) "," Notified when an event within a double-tap gesture occurs, including the down, move, and up events. <br /><br />"
"android.view.GestureDetector.OnDoubleTapListener.onSingleTapConfirmed (MotionEvent e) "," Notified when a single-tap occurs. <br /><br />"
"android.view.GestureDetector.OnGestureListener.onDown (MotionEvent e) "," Notified when a tap occurs with the down MotionEvent that triggered it. <br /><br />"
"android.view.GestureDetector.OnGestureListener.onSingleTapUp (MotionEvent e) "," Notified when a tap occurs with the up MotionEvent that triggered it. <br /><br />"
"android.view.GestureDetector.OnGestureListener.onScroll (MotionEvent e1, MotionEvent e2, float distanceX, float distanceY) "," Notified when a scroll occurs with the initial on down MotionEvent and the current move MotionEvent. <br /><br />"
"android.view.GestureDetector.OnGestureListener.onShowPress (MotionEvent e) "," The user has performed a down MotionEvent and not performed a move or up yet. <br /><br />"
"android.view.GestureDetector.OnGestureListener.onFling (MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) "," Notified of a fling event when it occurs with the initial on down MotionEvent and the matching up MotionEvent. <br /><br />"
"android.view.GestureDetector.OnGestureListener.onLongPress (MotionEvent e) "," Notified when a long press occurs with the initial on down MotionEvent that trigged it. <br /><br />"
"android.view.GestureDetector.SimpleOnGestureListener.onDown (MotionEvent e) "," Notified when a tap occurs with the down MotionEvent that triggered it. <br /><br />"
"android.view.GestureDetector.SimpleOnGestureListener.onDoubleTap (MotionEvent e) "," Notified when a double-tap occurs. <br /><br />"
"android.view.GestureDetector.SimpleOnGestureListener.onSingleTapUp (MotionEvent e) "," Notified when a tap occurs with the up MotionEvent that triggered it. <br /><br />"
"android.view.GestureDetector.SimpleOnGestureListener.onDoubleTapEvent (MotionEvent e) "," Notified when an event within a double-tap gesture occurs, including the down, move, and up events. <br /><br />"
"android.view.GestureDetector.SimpleOnGestureListener.onScroll (MotionEvent e1, MotionEvent e2, float distanceX, float distanceY) "," Notified when a scroll occurs with the initial on down MotionEvent and the current move MotionEvent. <br /><br />"
"android.view.GestureDetector.SimpleOnGestureListener.onSingleTapConfirmed (MotionEvent e) "," Notified when a single-tap occurs. <br /><br />"
"android.view.GestureDetector.SimpleOnGestureListener.onShowPress (MotionEvent e) "," The user has performed a down MotionEvent and not performed a move or up yet. <br /><br />"
"android.view.GestureDetector.SimpleOnGestureListener.onFling (MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) "," Notified of a fling event when it occurs with the initial on down MotionEvent and the matching up MotionEvent. <br /><br />"
"android.view.GestureDetector.SimpleOnGestureListener.onLongPress (MotionEvent e) "," Notified when a long press occurs with the initial on down MotionEvent that trigged it. <br /><br />"
"android.view.Gravity.apply (int gravity, int w, int h, Rect container, Rect outRect) "," Apply a gravity constant to an object. <br /><br />"
"android.view.Gravity.getAbsoluteGravity (int gravity, int layoutDirection) "," Convert script specific gravity to absolute horizontal value. <br /><br />"
"android.view.Gravity.apply (int gravity, int w, int h, Rect container, int xAdj, int yAdj, Rect outRect) "," Apply a gravity constant to an object. <br /><br />"
"android.view.Gravity.applyDisplay (int gravity, Rect display, Rect inoutObj) "," Apply additional gravity behavior based on the overall 'display' that an object exists in. <br /><br />"
"android.view.Gravity.apply (int gravity, int w, int h, Rect container, Rect outRect, int layoutDirection) "," Apply a gravity constant to an object and take care if layout direction is RTL or not. <br /><br />"
"android.view.Gravity.apply (int gravity, int w, int h, Rect container, int xAdj, int yAdj, Rect outRect, int layoutDirection) "," Apply a gravity constant to an object. <br /><br />"
"android.view.Gravity.applyDisplay (int gravity, Rect display, Rect inoutObj, int layoutDirection) "," Apply additional gravity behavior based on the overall 'display' that an object exists in. <br /><br />"
"android.view.Gravity.isHorizontal (int gravity) "," Indicate whether the supplied gravity has an horizontal pull. <br /><br />"
"android.view.Gravity.isVertical (int gravity) "," Indicate whether the supplied gravity has a vertical pull. <br /><br />"
"android.view.InputDevice.getControllerNumber () "," The controller number for a given input device. <br /><br />"
"android.view.InputDevice.getDeviceIds () "," Gets the ids of all input devices in the system. <br /><br />"
"android.view.InputDevice.supportsSource (int source) "," Determines whether the input device supports the given source or sources. <br /><br />"
"android.view.InputDevice.isVirtual ()   Returns true if the device is a virtual input device rather than a real one, such as the virtual keyboard  (see VIRTUAL_KEYBOARD) "," Returns true if the device is a virtual input device rather than a real one, such as the virtual keyboard (see VIRTUAL_KEYBOARD). <br /><br />"
"android.view.InputDevice.getDevice (int id) "," Gets information about the input device with the specified id. <br /><br />"
"android.view.InputDevice.getKeyCharacterMap () "," Gets the key character map associated with this input device. <br /><br />"
"android.view.InputDevice.getMotionRanges () "," Gets the ranges for all axes supported by the device. <br /><br />"
"android.view.InputDevice.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.InputDevice.getDescriptor () "," Gets the input device descriptor, which is a stable identifier for an input device. <br /><br />"
"android.view.InputDevice.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.view.InputDevice.getProductId () "," Gets the product id for the given device, if available. <br /><br />"
"android.view.InputDevice.getMotionRange (int axis) "," Gets information about the range of values for a particular MotionEvent axis. <br /><br />"
"android.view.InputDevice.getName () "," Gets the name of this input device. <br /><br />"
"android.view.InputDevice.hasKeys (int... keys) "," Gets whether the device is capable of producing the list of keycodes. <br /><br />"
"android.view.InputDevice.getSources () "," Gets the input sources supported by this input device as a combined bitfield. <br /><br />"
"android.view.InputDevice.getId () "," Gets the input device id. <br /><br />"
"android.view.InputDevice.getVibrator () "," Gets the vibrator service associated with the device, if there is one. <br /><br />"
"android.view.InputDevice.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.view.InputDevice.getKeyboardType () "," Gets the keyboard type. <br /><br />"
"android.view.InputDevice.getMotionRange (int axis, int source) "," Gets information about the range of values for a particular MotionEvent axis used by a particular source on the device. <br /><br />"
"android.view.InputDevice.getVendorId () "," Gets the vendor id for the given device, if available. <br /><br />"
"android.view.InputDevice.MotionRange.getFuzz () "," Gets the error tolerance for input device measurements with respect to this axis. <br /><br />"
"android.view.InputDevice.MotionRange.getAxis () "," Gets the axis id. <br /><br />"
"android.view.InputDevice.MotionRange.getRange ()   Gets the range of the axis  (difference between maximum and minimum) "," Gets the range of the axis (difference between maximum and minimum). <br /><br />"
"android.view.InputDevice.MotionRange.isFromSource (int source) "," Determines whether the event is from the given source. <br /><br />"
"android.view.InputDevice.MotionRange.getMin () "," Gets the inclusive minimum value for the axis. <br /><br />"
"android.view.InputDevice.MotionRange.getMax () "," Gets the inclusive maximum value for the axis. <br /><br />"
"android.view.InputDevice.MotionRange.getFlat () "," Gets the extent of the center flat position with respect to this axis. <br /><br />"
"android.view.InputDevice.MotionRange.getResolution () "," Gets the resolution for input device measurements with respect to this axis. <br /><br />"
"android.view.InputDevice.MotionRange.getSource () "," Gets the source for which the axis is defined. <br /><br />"
"android.view.InputEvent.getDevice () "," Gets the device that this event came from. <br /><br />"
"android.view.InputEvent.getEventTime ()   Retrieve the time this event occurred, in the uptimeMillis () "," Retrieve the time this event occurred, in the uptimeMillis() time base. <br /><br />"
"android.view.InputEvent.isFromSource (int source) "," Determines whether the event is from the given source. <br /><br />"
"android.view.InputEvent.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.InputEvent.getDeviceId () "," Gets the id for the device that this event came from. <br /><br />"
"android.view.InputEvent.getSource () "," Gets the source of the event. <br /><br />"
"android.view.inputmethod.BaseInputConnection.performEditorAction (int actionCode) "," The default implementation turns this into the enter key. <br /><br />"
"android.view.inputmethod.BaseInputConnection.getEditable () "," Return the target of edit operations. <br /><br />"
"android.view.inputmethod.BaseInputConnection.finishComposingText () "," The default implementation removes the composing state from the current editable text. <br /><br />"
"android.view.inputmethod.BaseInputConnection.performContextMenuAction (int id) "," The default implementation does nothing. <br /><br />"
"android.view.inputmethod.BaseInputConnection.removeComposingSpans (Spannable text) "," no description <br /><br />"
"android.view.inputmethod.BaseInputConnection.setComposingSpans (Spannable text) "," no description <br /><br />"
"android.view.inputmethod.BaseInputConnection.getTextBeforeCursor (int length, int flags) "," The default implementation returns the given amount of text from the current cursor position in the buffer. <br /><br />"
"android.view.inputmethod.BaseInputConnection.clearMetaKeyStates (int states)   Default implementation uses MetaKeyKeyListener.clearMetaKeyState (long, int) "," Default implementation uses MetaKeyKeyListener.clearMetaKeyState(long, int) to clear the state. <br /><br />"
"android.view.inputmethod.BaseInputConnection.reportFullscreenMode (boolean enabled) "," Updates InputMethodManager with the current fullscreen mode. <br /><br />"
"android.view.inputmethod.BaseInputConnection.commitText (CharSequence text, int newCursorPosition) "," Default implementation replaces any existing composing text with the given text. <br /><br />"
"android.view.inputmethod.BaseInputConnection.getComposingSpanEnd (Spannable text) "," no description <br /><br />"
"android.view.inputmethod.BaseInputConnection.sendKeyEvent (KeyEvent event) "," Provides standard implementation for sending a key event to the window attached to the input connection's view. <br /><br />"
"android.view.inputmethod.BaseInputConnection.getExtractedText (ExtractedTextRequest request, int flags) "," The default implementation always returns null. <br /><br />"
"android.view.inputmethod.BaseInputConnection.setComposingRegion (int start, int end) "," Mark a certain region of text as composing text. <br /><br />"
"android.view.inputmethod.BaseInputConnection.setComposingText (CharSequence text, int newCursorPosition) "," The default implementation places the given text into the editable, replacing any existing composing text. <br /><br />"
"android.view.inputmethod.BaseInputConnection.requestCursorUpdates (int cursorUpdateMode) "," The default implementation does nothing. <br /><br />"
"android.view.inputmethod.BaseInputConnection.getSelectedText (int flags) "," The default implementation returns the text currently selected, or null if none is selected. <br /><br />"
"android.view.inputmethod.BaseInputConnection.commitCorrection (CorrectionInfo correctionInfo) "," Default implementation does nothing and returns false. <br /><br />"
"android.view.inputmethod.BaseInputConnection.deleteSurroundingText (int beforeLength, int afterLength) "," The default implementation performs the deletion around the current selection position of the editable text. <br /><br />"
"android.view.inputmethod.BaseInputConnection.getCursorCapsMode (int reqModes) "," The default implementation uses TextUtils.getCapsMode to get the cursor caps mode for the current selection position in the editable text, unless in dummy mode in which case 0 is always returned. <br /><br />"
"android.view.inputmethod.BaseInputConnection.setSelection (int start, int end) "," The default implementation changes the selection position in the current editable text. <br /><br />"
"android.view.inputmethod.BaseInputConnection.performPrivateCommand (String action, Bundle data) "," The default implementation does nothing. <br /><br />"
"android.view.inputmethod.BaseInputConnection.commitCompletion (CompletionInfo text) "," Default implementation does nothing and returns false. <br /><br />"
"android.view.inputmethod.BaseInputConnection.getTextAfterCursor (int length, int flags) "," The default implementation returns the given amount of text from the current cursor position in the buffer. <br /><br />"
"android.view.inputmethod.BaseInputConnection.getComposingSpanStart (Spannable text) "," no description <br /><br />"
"android.view.inputmethod.BaseInputConnection.beginBatchEdit () "," Default implementation does nothing. <br /><br />"
"android.view.inputmethod.BaseInputConnection.endBatchEdit () "," Default implementation does nothing. <br /><br />"
"android.view.inputmethod.CompletionInfo.getId () "," Return the abstract identifier for this completion, typically corresponding to the id associated with it in the original adapter. <br /><br />"
"android.view.inputmethod.CompletionInfo.getLabel () "," Return the user-visible label for the completion, or null if the plain text should be shown. <br /><br />"
"android.view.inputmethod.CompletionInfo.getPosition () "," Return the original position of this completion, typically corresponding to its position in the original adapter. <br /><br />"
"android.view.inputmethod.CompletionInfo.writeToParcel (Parcel dest, int flags) "," Used to package this object into a Parcel. <br /><br />"
"android.view.inputmethod.CompletionInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.inputmethod.CompletionInfo.getText () "," Return the actual text associated with this completion. <br /><br />"
"android.view.inputmethod.CompletionInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.view.inputmethod.CorrectionInfo.getOldText () "," Return the text that has actually been typed by the user, and which has been corrected. <br /><br />"
"android.view.inputmethod.CorrectionInfo.getNewText () "," Return the new text that corrects what was typed by the user. <br /><br />"
"android.view.inputmethod.CorrectionInfo.getOffset () "," Return the offset position of this correction in the text. <br /><br />"
"android.view.inputmethod.CorrectionInfo.writeToParcel (Parcel dest, int flags) "," Used to package this object into a Parcel. <br /><br />"
"android.view.inputmethod.CorrectionInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.inputmethod.CorrectionInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.Builder.setInsertionMarkerLocation (float horizontalPosition, float lineTop, float lineBaseline, float lineBottom, int flags)   Sets the location of the text insertion point  (zero width cursor) "," Sets the location of the text insertion point (zero width cursor) as a rectangle in local coordinates. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.Builder.setMatrix (Matrix matrix) "," Sets the matrix that transforms local coordinates into screen coordinates. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.Builder.setSelectionRange (int newStart, int newEnd) "," Sets the text range of the selection. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.Builder.reset () "," Resets the internal state so that this instance can be reused to build another instance of CursorAnchorInfo. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.Builder.build () "," no description <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.Builder.addCharacterBounds (int index, float left, float top, float right, float bottom, int flags) "," Adds the bounding box of the character specified with the index. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.Builder.setComposingText (int composingTextStart, CharSequence composingText) "," Sets the text range of the composing text. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.getComposingText () "," Returns the entire composing text. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.getInsertionMarkerFlags () "," Returns the flag of the insertion marker. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.getMatrix () "," Returns a new instance of Matrix that indicates the transformation matrix that is to be applied other positional data in this class. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.getInsertionMarkerBaseline ()   Returns the vertical baseline position of the insertion marker, in the local coordinates that will be transformed with getMatrix () "," Returns the vertical baseline position of the insertion marker, in the local coordinates that will be transformed with getMatrix() when rendered on the screen. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.getInsertionMarkerTop ()   Returns the vertical top position of the insertion marker, in the local coordinates that will be transformed with getMatrix () "," Returns the vertical top position of the insertion marker, in the local coordinates that will be transformed with getMatrix() when rendered on the screen. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.getInsertionMarkerHorizontal ()   Returns the horizontal start of the insertion marker, in the local coordinates that will be transformed with getMatrix () "," Returns the horizontal start of the insertion marker, in the local coordinates that will be transformed with getMatrix() when rendered on the screen. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.getComposingTextStart () "," Returns the index where the composing text starts. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.getSelectionStart () "," Returns the index where the selection starts. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.getInsertionMarkerBottom ()   Returns the vertical bottom position of the insertion marker, in the local coordinates that will be transformed with getMatrix () "," Returns the vertical bottom position of the insertion marker, in the local coordinates that will be transformed with getMatrix() when rendered on the screen. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.getCharacterBoundsFlags (int index) "," Returns the flags associated with the character bounds specified with the index. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.equals (Object obj) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.getSelectionEnd () "," Returns the index where the selection ends. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.getCharacterBounds (int index) "," Returns a new instance of RectF that indicates the location of the character specified with the index. <br /><br />"
"android.view.inputmethod.CursorAnchorInfo.writeToParcel (Parcel dest, int flags) "," Used to package this object into a Parcel. <br /><br />"
"android.view.inputmethod.EditorInfo.dump (Printer pw, String prefix) "," Write debug output of this object. <br /><br />"
"android.view.inputmethod.EditorInfo.makeCompatible (int targetSdkVersion) "," Ensure that the data in this EditorInfo is compatible with an application that was developed against the given target API version. <br /><br />"
"android.view.inputmethod.EditorInfo.writeToParcel (Parcel dest, int flags) "," Used to package this object into a Parcel. <br /><br />"
"android.view.inputmethod.EditorInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.inputmethod.ExtractedText.writeToParcel (Parcel dest, int flags) "," Used to package this object into a Parcel. <br /><br />"
"android.view.inputmethod.ExtractedText.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.inputmethod.ExtractedTextRequest.writeToParcel (Parcel dest, int flags) "," Used to package this object into a Parcel. <br /><br />"
"android.view.inputmethod.ExtractedTextRequest.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.inputmethod.InputBinding.getConnectionToken () "," Return the token for the connection back to the application. <br /><br />"
"android.view.inputmethod.InputBinding.getConnection () "," Return the connection for interacting back with the application. <br /><br />"
"android.view.inputmethod.InputBinding.getPid () "," Return the process id where this binding came from. <br /><br />"
"android.view.inputmethod.InputBinding.writeToParcel (Parcel dest, int flags) "," Used to package this object into a Parcel. <br /><br />"
"android.view.inputmethod.InputBinding.getUid () "," Return the user id of the client associated with this binding. <br /><br />"
"android.view.inputmethod.InputBinding.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.inputmethod.InputBinding.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.view.inputmethod.InputConnection.sendKeyEvent (KeyEvent event) "," Send a key event to the process that is currently attached through this input connection. <br /><br />"
"android.view.inputmethod.InputConnection.endBatchEdit ()   Tell the editor that you are done with a batch edit previously initiated with beginBatchEdit () "," Tell the editor that you are done with a batch edit previously initiated with beginBatchEdit(). <br /><br />"
"android.view.inputmethod.InputConnection.getExtractedText (ExtractedTextRequest request, int flags) "," Retrieve the current text in the input connection's editor, and monitor for any changes to it. <br /><br />"
"android.view.inputmethod.InputConnection.setComposingRegion (int start, int end) "," Mark a certain region of text as composing text. <br /><br />"
"android.view.inputmethod.InputConnection.requestCursorUpdates (int cursorUpdateMode)   Called by the input method to ask the editor for calling back updateCursorAnchorInfo (android.view.View, CursorAnchorInfo) "," Called by the input method to ask the editor for calling back updateCursorAnchorInfo(android.view.View, CursorAnchorInfo) to notify cursor/anchor locations. <br /><br />"
"android.view.inputmethod.InputConnection.commitCompletion (CompletionInfo text)   Commit a completion the user has selected from the possible ones previously reported to InputMethodSession#displayCompletions (CompletionInfo[]) or InputMethodManager#displayCompletions (View, CompletionInfo[]) "," Commit a completion the user has selected from the possible ones previously reported to InputMethodSession#displayCompletions(CompletionInfo[]) or InputMethodManager#displayCompletions(View, CompletionInfo[]). <br /><br />"
"android.view.inputmethod.InputConnection.getTextAfterCursor (int n, int flags) "," Get n characters of text after the current cursor position. <br /><br />"
"android.view.inputmethod.InputConnection.finishComposingText () "," Have the text editor finish whatever composing text is currently active. <br /><br />"
"android.view.inputmethod.InputConnection.setComposingText (CharSequence text, int newCursorPosition) "," Replace the currently composing text with the given text, and set the new cursor position. <br /><br />"
"android.view.inputmethod.InputConnection.getTextBeforeCursor (int n, int flags) "," Get n characters of text before the current cursor position. <br /><br />"
"android.view.inputmethod.InputConnection.getSelectedText (int flags) "," Gets the selected text, if any. <br /><br />"
"android.view.inputmethod.InputConnection.performContextMenuAction (int id) "," Perform a context menu action on the field. <br /><br />"
"android.view.inputmethod.InputConnection.commitCorrection (CorrectionInfo correctionInfo) "," Commit a correction automatically performed on the raw user's input. <br /><br />"
"android.view.inputmethod.InputConnection.deleteSurroundingText (int beforeLength, int afterLength) "," Delete beforeLength characters of text before the current cursor position, and delete afterLength characters of text after the current cursor position, excluding the selection. <br /><br />"
"android.view.inputmethod.InputConnection.performEditorAction (int editorAction) "," Have the editor perform an action it has said it can do. <br /><br />"
"android.view.inputmethod.InputConnection.getCursorCapsMode (int reqModes) "," Retrieve the current capitalization mode in effect at the current cursor position in the text. <br /><br />"
"android.view.inputmethod.InputConnection.setSelection (int start, int end) "," Set the selection of the text editor. <br /><br />"
"android.view.inputmethod.InputConnection.performPrivateCommand (String action, Bundle data) "," API to send private commands from an input method to its connected editor. <br /><br />"
"android.view.inputmethod.InputConnection.reportFullscreenMode (boolean enabled) "," Called by the IME to tell the client when it switches between fullscreen and normal modes. <br /><br />"
"android.view.inputmethod.InputConnection.clearMetaKeyStates (int states) "," Clear the given meta key pressed states in the given input connection. <br /><br />"
"android.view.inputmethod.InputConnection.commitText (CharSequence text, int newCursorPosition) "," Commit text to the text box and set the new cursor position. <br /><br />"
"android.view.inputmethod.InputConnection.beginBatchEdit () "," Tell the editor that you are starting a batch of editor operations. <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.sendKeyEvent (KeyEvent event) "," Send a key event to the process that is currently attached through this input connection. <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.endBatchEdit ()   Tell the editor that you are done with a batch edit previously initiated with beginBatchEdit () "," Tell the editor that you are done with a batch edit previously initiated with beginBatchEdit(). <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.getExtractedText (ExtractedTextRequest request, int flags) "," Retrieve the current text in the input connection's editor, and monitor for any changes to it. <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.setComposingRegion (int start, int end) "," Mark a certain region of text as composing text. <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.requestCursorUpdates (int cursorUpdateMode)   Called by the input method to ask the editor for calling back updateCursorAnchorInfo (android.view.View, CursorAnchorInfo) "," Called by the input method to ask the editor for calling back updateCursorAnchorInfo(android.view.View, CursorAnchorInfo) to notify cursor/anchor locations. <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.commitCompletion (CompletionInfo text)   Commit a completion the user has selected from the possible ones previously reported to InputMethodSession#displayCompletions (CompletionInfo[]) or InputMethodManager#displayCompletions (View, CompletionInfo[]) "," Commit a completion the user has selected from the possible ones previously reported to InputMethodSession#displayCompletions(CompletionInfo[]) or InputMethodManager#displayCompletions(View, CompletionInfo[]). <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.getTextAfterCursor (int n, int flags) "," Get n characters of text after the current cursor position. <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.finishComposingText () "," Have the text editor finish whatever composing text is currently active. <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.setComposingText (CharSequence text, int newCursorPosition) "," Replace the currently composing text with the given text, and set the new cursor position. <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.getTextBeforeCursor (int n, int flags) "," Get n characters of text before the current cursor position. <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.getSelectedText (int flags) "," Gets the selected text, if any. <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.performContextMenuAction (int id) "," Perform a context menu action on the field. <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.commitCorrection (CorrectionInfo correctionInfo) "," Commit a correction automatically performed on the raw user's input. <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.deleteSurroundingText (int beforeLength, int afterLength) "," Delete beforeLength characters of text before the current cursor position, and delete afterLength characters of text after the current cursor position, excluding the selection. <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.performEditorAction (int editorAction) "," Have the editor perform an action it has said it can do. <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.getCursorCapsMode (int reqModes) "," Retrieve the current capitalization mode in effect at the current cursor position in the text. <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.setSelection (int start, int end) "," Set the selection of the text editor. <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.performPrivateCommand (String action, Bundle data) "," API to send private commands from an input method to its connected editor. <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.reportFullscreenMode (boolean enabled) "," Called by the IME to tell the client when it switches between fullscreen and normal modes. <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.clearMetaKeyStates (int states) "," Clear the given meta key pressed states in the given input connection. <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.setTarget (InputConnection target) "," Change the target of the input connection. <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.commitText (CharSequence text, int newCursorPosition) "," Commit text to the text box and set the new cursor position. <br /><br />"
"android.view.inputmethod.InputConnectionWrapper.beginBatchEdit () "," Tell the editor that you are starting a batch of editor operations. <br /><br />"
"android.view.inputmethod.InputMethod.changeInputMethodSubtype (InputMethodSubtype subtype) "," Notify that the input method subtype is being changed in the same input method. <br /><br />"
"android.view.inputmethod.InputMethod.unbindInput ()   Unbind an application environment, called when the information previously set by bindInput (InputBinding) "," Unbind an application environment, called when the information previously set by bindInput(InputBinding) is no longer valid for this input method. <br /><br />"
"android.view.inputmethod.InputMethod.setSessionEnabled (InputMethodSession session, boolean enabled) "," Control whether a particular input method session is active. <br /><br />"
"android.view.inputmethod.InputMethod.startInput (InputConnection inputConnection, EditorInfo info) "," This method is called when the application starts to receive text and it is ready for this input method to process received events and send result text back to the application. <br /><br />"
"android.view.inputmethod.InputMethod.showSoftInput (int flags, ResultReceiver resultReceiver) "," Request that any soft input part of the input method be shown to the user. <br /><br />"
"android.view.inputmethod.InputMethod.revokeSession (InputMethodSession session)   Disable and destroy a session that was previously created with createSession (android.view.inputmethod.InputMethod.SessionCallback) "," Disable and destroy a session that was previously created with createSession(android.view.inputmethod.InputMethod.SessionCallback). <br /><br />"
"android.view.inputmethod.InputMethod.createSession (InputMethod.SessionCallback callback) "," Create a new InputMethodSession that can be handed to client applications for interacting with the input method. <br /><br />"
"android.view.inputmethod.InputMethod.bindInput (InputBinding binding) "," Bind a new application environment in to the input method, so that it can later start and stop input processing. <br /><br />"
"android.view.inputmethod.InputMethod.attachToken (IBinder token) "," Called first thing after an input method is created, this supplies a unique token for the session it has with the system service. <br /><br />"
"android.view.inputmethod.InputMethod.restartInput (InputConnection inputConnection, EditorInfo attribute) "," This method is called when the state of this input method needs to be reset. <br /><br />"
"android.view.inputmethod.InputMethod.hideSoftInput (int flags, ResultReceiver resultReceiver) "," Request that any soft input part of the input method be hidden from the user. <br /><br />"
"android.view.inputmethod.InputMethod.SessionCallback.sessionCreated (InputMethodSession session) "," no description <br /><br />"
"android.view.inputmethod.InputMethodInfo.loadLabel (PackageManager pm) "," Load the user-displayed label for this input method. <br /><br />"
"android.view.inputmethod.InputMethodInfo.getPackageName () "," Return the .apk package that implements this input method. <br /><br />"
"android.view.inputmethod.InputMethodInfo.dump (Printer pw, String prefix) "," no description <br /><br />"
"android.view.inputmethod.InputMethodInfo.getServiceInfo () "," Return the raw information about the Service implementing this input method. <br /><br />"
"android.view.inputmethod.InputMethodInfo.getSubtypeCount () "," Return the count of the subtypes of Input Method. <br /><br />"
"android.view.inputmethod.InputMethodInfo.getComponent () "," Return the component of the service that implements this input method. <br /><br />"
"android.view.inputmethod.InputMethodInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.inputmethod.InputMethodInfo.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.view.inputmethod.InputMethodInfo.getId () "," Return a unique ID for this input method. <br /><br />"
"android.view.inputmethod.InputMethodInfo.getSettingsActivity () "," Return the class name of an activity that provides a settings UI for the input method. <br /><br />"
"android.view.inputmethod.InputMethodInfo.getIsDefaultResourceId () "," Return the resource identifier of a resource inside of this input method's .apk that determines whether it should be considered a default input method for the system. <br /><br />"
"android.view.inputmethod.InputMethodInfo.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.view.inputmethod.InputMethodInfo.writeToParcel (Parcel dest, int flags) "," Used to package this object into a Parcel. <br /><br />"
"android.view.inputmethod.InputMethodInfo.getSubtypeAt (int index) "," Return the Input Method's subtype at the specified index. <br /><br />"
"android.view.inputmethod.InputMethodInfo.loadIcon (PackageManager pm) "," Load the user-displayed icon for this input method. <br /><br />"
"android.view.inputmethod.InputMethodInfo.equals (Object o) "," Used to test whether the given parameter object is an InputMethodInfo and its Id is the same to this one. <br /><br />"
"android.view.inputmethod.InputMethodInfo.getServiceName () "," Return the class name of the service component that implements this input method. <br /><br />"
"android.view.inputmethod.InputMethodManager.isAcceptingText () "," Return true if the currently served view is accepting full text edits. <br /><br />"
"android.view.inputmethod.InputMethodManager.getShortcutInputMethodsAndSubtypes () "," Returns a map of all shortcut input method info and their subtypes. <br /><br />"
"android.view.inputmethod.InputMethodManager.getInputMethodList () "," no description <br /><br />"
"android.view.inputmethod.InputMethodManager.getEnabledInputMethodSubtypeList (InputMethodInfo imi, boolean allowsImplicitlySelectedSubtypes) "," Returns a list of enabled input method subtypes for the specified input method info. <br /><br />"
"android.view.inputmethod.InputMethodManager.sendAppPrivateCommand (View view, String action, Bundle data)   Call InputMethodSession.appPrivateCommand () "," Call InputMethodSession.appPrivateCommand() on the current Input Method. <br /><br />"
"android.view.inputmethod.InputMethodManager.isActive (View view) "," Return true if the given view is the currently active view for the input method. <br /><br />"
"android.view.inputmethod.InputMethodManager.updateCursor (View view, int left, int top, int right, int bottom)    This method was deprecated in API level 21. Use updateCursorAnchorInfo (View, CursorAnchorInfo) "," This method was deprecated in API level 21. Use updateCursorAnchorInfo(View, CursorAnchorInfo) instead. <br /><br />"
"android.view.inputmethod.InputMethodManager.switchToNextInputMethod (IBinder imeToken, boolean onlyCurrentIme) "," Force switch to the next input method and subtype. <br /><br />"
"android.view.inputmethod.InputMethodManager.restartInput (View view) "," If the input method is currently connected to the given view, restart it with its new contents. <br /><br />"
"android.view.inputmethod.InputMethodManager.showSoftInput (View view, int flags)   Synonym for showSoftInput (View, int, ResultReceiver) "," Synonym for showSoftInput(View, int, ResultReceiver) without a result receiver: explicitly request that the current input method's soft input area be shown to the user, if needed. <br /><br />"
"android.view.inputmethod.InputMethodManager.updateCursorAnchorInfo (View view, CursorAnchorInfo cursorAnchorInfo) "," Report positional change of the text insertion point and/or characters in the composition string. <br /><br />"
"android.view.inputmethod.InputMethodManager.hideStatusIcon (IBinder imeToken) "," no description <br /><br />"
"android.view.inputmethod.InputMethodManager.isFullscreenMode () "," Allows you to discover whether the attached input method is running in fullscreen mode. <br /><br />"
"android.view.inputmethod.InputMethodManager.hideSoftInputFromInputMethod (IBinder token, int flags) "," Close/hide the input method's soft input area, so the user no longer sees it or can interact with it. <br /><br />"
"android.view.inputmethod.InputMethodManager.switchToLastInputMethod (IBinder imeToken) "," Force switch to the last used input method and subtype. <br /><br />"
"android.view.inputmethod.InputMethodManager.isWatchingCursor (View view)    This method was deprecated in API level 21. Use requestCursorUpdates (int) "," This method was deprecated in API level 21. Use requestCursorUpdates(int) instead. <br /><br />"
"android.view.inputmethod.InputMethodManager.getLastInputMethodSubtype () "," no description <br /><br />"
"android.view.inputmethod.InputMethodManager.showInputMethodAndSubtypeEnabler (String imiId) "," Show the settings for enabling subtypes of the specified input method. <br /><br />"
"android.view.inputmethod.InputMethodManager.viewClicked (View view) "," Notify the event when the user tapped or clicked the text view. <br /><br />"
"android.view.inputmethod.InputMethodManager.displayCompletions (View view, CompletionInfo[] completions) "," no description <br /><br />"
"android.view.inputmethod.InputMethodManager.setCurrentInputMethodSubtype (InputMethodSubtype subtype) "," Switch to a new input method subtype of the current input method. <br /><br />"
"android.view.inputmethod.InputMethodManager.setInputMethodAndSubtype (IBinder token, String id, InputMethodSubtype subtype) "," Force switch to a new input method and subtype. <br /><br />"
"android.view.inputmethod.InputMethodManager.showStatusIcon (IBinder imeToken, String packageName, int iconId) "," no description <br /><br />"
"android.view.inputmethod.InputMethodManager.getEnabledInputMethodList () "," no description <br /><br />"
"android.view.inputmethod.InputMethodManager.toggleSoftInput (int showFlags, int hideFlags) "," no description <br /><br />"
"android.view.inputmethod.InputMethodManager.updateSelection (View view, int selStart, int selEnd, int candidatesStart, int candidatesEnd) "," Report the current selection range. <br /><br />"
"android.view.inputmethod.InputMethodManager.toggleSoftInputFromWindow (IBinder windowToken, int showFlags, int hideFlags) "," This method toggles the input method window display. <br /><br />"
"android.view.inputmethod.InputMethodManager.showSoftInputFromInputMethod (IBinder token, int flags) "," Show the input method's soft input area, so the user sees the input method window and can interact with it. <br /><br />"
"android.view.inputmethod.InputMethodManager.updateExtractedText (View view, int token, ExtractedText text) "," no description <br /><br />"
"android.view.inputmethod.InputMethodManager.setAdditionalInputMethodSubtypes (String imiId, InputMethodSubtype[] subtypes) "," Set additional input method subtypes. <br /><br />"
"android.view.inputmethod.InputMethodManager.setInputMethod (IBinder token, String id) "," Force switch to a new input method component. <br /><br />"
"android.view.inputmethod.InputMethodManager.getCurrentInputMethodSubtype () "," Returns the current input method subtype. <br /><br />"
"android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow (IBinder windowToken, int flags)   Synonym for hideSoftInputFromWindow (IBinder, int, ResultReceiver) "," Synonym for hideSoftInputFromWindow(IBinder, int, ResultReceiver) without a result: request to hide the soft input window from the context of the window that is currently accepting input. <br /><br />"
"android.view.inputmethod.InputMethodManager.showSoftInput (View view, int flags, ResultReceiver resultReceiver) "," Explicitly request that the current input method's soft input area be shown to the user, if needed. <br /><br />"
"android.view.inputmethod.InputMethodManager.shouldOfferSwitchingToNextInputMethod (IBinder imeToken) "," Returns true if the current IME needs to offer the users ways to switch to a next input method (e.g. <br /><br />"
"android.view.inputmethod.InputMethodManager.isActive () "," Return true if any view is currently active in the input method. <br /><br />"
"android.view.inputmethod.InputMethodManager.showInputMethodPicker () "," no description <br /><br />"
"android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow (IBinder windowToken, int flags, ResultReceiver resultReceiver) "," Request to hide the soft input window from the context of the window that is currently accepting input. <br /><br />"
"android.view.inputmethod.InputMethodSession.EventCallback.finishedEvent (int seq, boolean handled) "," no description <br /><br />"
"android.view.inputmethod.InputMethodSubtype.getNameResId () "," no description <br /><br />"
"android.view.inputmethod.InputMethodSubtype.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.inputmethod.InputMethodSubtype.getMode () "," no description <br /><br />"
"android.view.inputmethod.InputMethodSubtype.overridesImplicitlyEnabledSubtype () "," no description <br /><br />"
"android.view.inputmethod.InputMethodSubtype.getExtraValue () "," no description <br /><br />"
"android.view.inputmethod.InputMethodSubtype.getLocale () "," no description <br /><br />"
"android.view.inputmethod.InputMethodSubtype.writeToParcel (Parcel dest, int parcelableFlags) "," Flatten this object in to a Parcel. <br /><br />"
"android.view.inputmethod.InputMethodSubtype.containsExtraValueKey (String key) "," The string of ExtraValue in subtype should be defined as follows: example: key0,key1=value1,key2,key3,key4=value4 <br /><br />"
"android.view.inputmethod.InputMethodSubtype.getDisplayName (Context context, String packageName, ApplicationInfo appInfo) "," no description <br /><br />"
"android.view.inputmethod.InputMethodSubtype.isAuxiliary () "," no description <br /><br />"
"android.view.inputmethod.InputMethodSubtype.getExtraValueOf (String key) "," The string of ExtraValue in subtype should be defined as follows: example: key0,key1=value1,key2,key3,key4=value4 <br /><br />"
"android.view.inputmethod.InputMethodSubtype.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.view.inputmethod.InputMethodSubtype.isAsciiCapable () "," no description <br /><br />"
"android.view.inputmethod.InputMethodSubtype.getIconResId () "," no description <br /><br />"
"android.view.inputmethod.InputMethodSubtype.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder.setSubtypeLocale (String subtypeLocale) "," no description <br /><br />"
"android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder.setSubtypeIconResId (int subtypeIconResId) "," no description <br /><br />"
"android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder.setSubtypeExtraValue (String subtypeExtraValue) "," no description <br /><br />"
"android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder.setIsAuxiliary (boolean isAuxiliary) "," no description <br /><br />"
"android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder.setSubtypeMode (String subtypeMode) "," no description <br /><br />"
"android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder.setSubtypeNameResId (int subtypeNameResId) "," no description <br /><br />"
"android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder.build () "," no description <br /><br />"
"android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder.setSubtypeId (int subtypeId) "," no description <br /><br />"
"android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder.setOverridesImplicitlyEnabledSubtype (boolean overridesImplicitlyEnabledSubtype) "," no description <br /><br />"
"android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder.setIsAsciiCapable (boolean isAsciiCapable) "," no description <br /><br />"
"android.view.InputQueue.Callback.onInputQueueDestroyed (InputQueue queue) "," Called when the given InputQueue is no longer associated with the thread and thus not dispatching events. <br /><br />"
"android.view.InputQueue.Callback.onInputQueueCreated (InputQueue queue) "," Called when the given InputQueue is now associated with the thread making this call, so it can start receiving events from it. <br /><br />"
"android.view.KeyCharacterMap.load (int deviceId) "," Loads the key character maps for the keyboard with the specified device id. <br /><br />"
"android.view.KeyCharacterMap.deviceHasKeys (int[] keyCodes) "," Queries the framework about whether any physical keys exist on the any keyboard attached to the device that are capable of producing the given array of key codes. <br /><br />"
"android.view.KeyCharacterMap.getMatch (int keyCode, char[] chars, int metaState) "," Gets the first character in the character array that can be generated by the specified key code. <br /><br />"
"android.view.KeyCharacterMap.getKeyData (int keyCode, KeyCharacterMap.KeyData results)    This method was deprecated in API level 11. instead use getDisplayLabel (int), getNumber (int) or get (int, int) "," This method was deprecated in API level 11. instead use getDisplayLabel(int), getNumber(int) or get(int, int). <br /><br />"
"android.view.KeyCharacterMap.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.KeyCharacterMap.deviceHasKey (int keyCode) "," Queries the framework about whether any physical keys exist on the any keyboard attached to the device that are capable of producing the given key code. <br /><br />"
"android.view.KeyCharacterMap.getNumber (int keyCode) "," Gets the number or symbol associated with the key. <br /><br />"
"android.view.KeyCharacterMap.getEvents (char[] chars) "," Get an array of KeyEvent objects that if put into the input stream could plausibly generate the provided sequence of characters. <br /><br />"
"android.view.KeyCharacterMap.getModifierBehavior () "," Gets a constant that describes the behavior of this keyboard's modifier keys such as KEYCODE_SHIFT_LEFT. <br /><br />"
"android.view.KeyCharacterMap.get (int keyCode, int metaState) "," Gets the Unicode character generated by the specified key and meta key state combination. <br /><br />"
"android.view.KeyCharacterMap.isPrintingKey (int keyCode) "," Returns true if the specified key produces a glyph. <br /><br />"
"android.view.KeyCharacterMap.getDisplayLabel (int keyCode) "," Gets the primary character for this key. <br /><br />"
"android.view.KeyCharacterMap.getDeadChar (int accent, int c) "," Get the character that is produced by combining the dead key producing accent with the key producing character c. <br /><br />"
"android.view.KeyCharacterMap.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.view.KeyCharacterMap.getMatch (int keyCode, char[] chars) "," Gets the first character in the character array that can be generated by the specified key code. <br /><br />"
"android.view.KeyCharacterMap.getKeyboardType () "," Gets the keyboard type. <br /><br />"
"android.view.KeyEvent.Callback.onKeyLongPress (int keyCode, KeyEvent event) "," Called when a long press has occurred. <br /><br />"
"android.view.KeyEvent.Callback.onKeyDown (int keyCode, KeyEvent event) "," Called when a key down event has occurred. <br /><br />"
"android.view.KeyEvent.Callback.onKeyMultiple (int keyCode, int count, KeyEvent event) "," Called when multiple down/up pairs of the same key have occurred in a row. <br /><br />"
"android.view.KeyEvent.Callback.onKeyUp (int keyCode, KeyEvent event) "," Called when a key up event has occurred. <br /><br />"
"android.view.KeyEvent.DispatcherState.startTracking (KeyEvent event, Object target) "," Start tracking the key code associated with the given event. <br /><br />"
"android.view.KeyEvent.DispatcherState.reset (Object target) "," Stop any tracking associated with this target. <br /><br />"
"android.view.KeyEvent.DispatcherState.performedLongPress (KeyEvent event) "," Keep track of the given event's key code as having performed an action with a long press, so no action should occur on the up. <br /><br />"
"android.view.KeyEvent.DispatcherState.handleUpEvent (KeyEvent event) "," Handle key up event to stop tracking. <br /><br />"
"android.view.KeyEvent.DispatcherState.reset () "," Reset back to initial state. <br /><br />"
"android.view.KeyEvent.DispatcherState.isTracking (KeyEvent event) "," Return true if the key event is for a key code that is currently being tracked by the dispatcher. <br /><br />"
"android.view.KeyEvent.getMetaState () "," Returns the state of the meta keys. <br /><br />"
"android.view.KeyEvent.isShiftPressed () "," Returns the pressed state of the SHIFT meta key. <br /><br />"
"android.view.KeyEvent.getNumber () "," Gets the number or symbol associated with the key. <br /><br />"
"android.view.KeyEvent.changeTimeRepeat (KeyEvent event, long eventTime, int newRepeat) "," Create a new key event that is the same as the given one, but whose event time and repeat count are replaced with the given value. <br /><br />"
"android.view.KeyEvent.isCtrlPressed () "," Returns the pressed state of the CTRL meta key. <br /><br />"
"android.view.KeyEvent.getUnicodeChar (int metaState) "," Gets the Unicode character generated by the specified key and meta key state combination. <br /><br />"
"android.view.KeyEvent.isSymPressed () "," Returns the pressed state of the SYM meta key. <br /><br />"
"android.view.KeyEvent.isAltPressed () "," Returns the pressed state of the ALT meta key. <br /><br />"
"android.view.KeyEvent.getModifiers () "," Returns the state of the modifier keys. <br /><br />"
"android.view.KeyEvent.changeTimeRepeat (KeyEvent event, long eventTime, int newRepeat, int newFlags) "," Create a new key event that is the same as the given one, but whose event time and repeat count are replaced with the given value. <br /><br />"
"android.view.KeyEvent.isLongPress () "," For ACTION_DOWN events, indicates that the event has been canceled as per FLAG_LONG_PRESS. <br /><br />"
"android.view.KeyEvent.dispatch (KeyEvent.Callback receiver)    This method was deprecated in API level 5. Use dispatch (Callback, DispatcherState, Object) "," This method was deprecated in API level 5. Use dispatch(Callback, DispatcherState, Object) instead. <br /><br />"
"android.view.KeyEvent.getDisplayLabel () "," Gets the primary character for this key. <br /><br />"
"android.view.KeyEvent.getFlags () "," Returns the flags for this key event. <br /><br />"
"android.view.KeyEvent.isCanceled () "," For ACTION_UP events, indicates that the event has been canceled as per FLAG_CANCELED. <br /><br />"
"android.view.KeyEvent.isNumLockOn () "," Returns the locked state of the NUM LOCK meta key. <br /><br />"
"android.view.KeyEvent.changeFlags (KeyEvent event, int flags) "," Create a new key event that is the same as the given one, but whose flags are replaced with the given value. <br /><br />"
"android.view.KeyEvent.getMaxKeyCode () "," Returns the maximum keycode. <br /><br />"
"android.view.KeyEvent.getScanCode () "," Retrieve the hardware key id of this key event. These values are not reliable and vary from device to device. <br /><br />"
"android.view.KeyEvent.getEventTime ()   Retrieve the time this event occurred, in the uptimeMillis () "," Retrieve the time this event occurred, in the uptimeMillis() time base. <br /><br />"
"android.view.KeyEvent.keyCodeToString (int keyCode) "," Returns a string that represents the symbolic name of the specified keycode such as 'KEYCODE_A', 'KEYCODE_DPAD_UP', or an equivalent numeric constant such as '1001' if unknown. <br /><br />"
"android.view.KeyEvent.setSource (int source) "," Modifies the source of the event. <br /><br />"
"android.view.KeyEvent.getAction () "," Retrieve the action of this key event. <br /><br />"
"android.view.KeyEvent.getDeadChar (int accent, int c) "," Get the character that is produced by putting accent on the character c. <br /><br />"
"android.view.KeyEvent.hasNoModifiers () "," Returns true if no modifier keys are pressed. <br /><br />"
"android.view.KeyEvent.isSystem () "," Is this a system key? System keys can not be used for menu shortcuts. <br /><br />"
"android.view.KeyEvent.hasModifiers (int modifiers) "," Returns true if only the specified modifiers keys are pressed. <br /><br />"
"android.view.KeyEvent.getMatch (char[] chars, int metaState) "," Gets the first character in the character array that can be generated by the specified key code. <br /><br />"
"android.view.KeyEvent.changeAction (KeyEvent event, int action) "," Create a new key event that is the same as the given one, but whose action is replaced with the given value. <br /><br />"
"android.view.KeyEvent.dispatch (KeyEvent.Callback receiver, KeyEvent.DispatcherState state, Object target) "," Deliver this key event to a KeyEvent.Callback interface. <br /><br />"
"android.view.KeyEvent.getRepeatCount () "," Retrieve the repeat count of the event. <br /><br />"
"android.view.KeyEvent.normalizeMetaState (int metaState) "," Normalizes the specified meta state. <br /><br />"
"android.view.KeyEvent.metaStateHasModifiers (int metaState, int modifiers) "," Returns true if only the specified modifier keys are pressed according to the specified meta state. <br /><br />"
"android.view.KeyEvent.getCharacters () "," For the special case of a ACTION_MULTIPLE event with key code of KEYCODE_UNKNOWN, this is a raw string of characters associated with the event. <br /><br />"
"android.view.KeyEvent.getKeyCharacterMap () "," Gets the KeyCharacterMap associated with the keyboard device. <br /><br />"
"android.view.KeyEvent.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.view.KeyEvent.isModifierKey (int keyCode) "," Returns true if this key code is a modifier key. <br /><br />"
"android.view.KeyEvent.metaStateHasNoModifiers (int metaState) "," Returns true if no modifiers keys are pressed according to the specified meta state. <br /><br />"
"android.view.KeyEvent.keyCodeFromString (String symbolicName) "," Gets a keycode by its symbolic name such as 'KEYCODE_A' or an equivalent numeric constant such as '1001'. <br /><br />"
"android.view.KeyEvent.isPrintingKey () "," Returns true if this key produces a glyph. <br /><br />"
"android.view.KeyEvent.getDeviceId () "," Gets the id for the device that this event came from. <br /><br />"
"android.view.KeyEvent.startTracking ()   Call this during onKeyDown (int, KeyEvent) to have the system track the key through its final up  (possibly including a long press) "," Call this during onKeyDown(int, KeyEvent) to have the system track the key through its final up (possibly including a long press). <br /><br />"
"android.view.KeyEvent.isTracking () "," For ACTION_UP events, indicates that the event is still being tracked from its initial down event as per FLAG_TRACKING. <br /><br />"
"android.view.KeyEvent.getKeyData (KeyCharacterMap.KeyData results)    This method was deprecated in API level 11. instead use getDisplayLabel (), getNumber () or getUnicodeChar (int) "," This method was deprecated in API level 11. instead use getDisplayLabel(), getNumber() or getUnicodeChar(int). <br /><br />"
"android.view.KeyEvent.isScrollLockOn () "," Returns the locked state of the SCROLL LOCK meta key. <br /><br />"
"android.view.KeyEvent.isGamepadButton (int keyCode) "," Returns true if the specified keycode is a gamepad button. <br /><br />"
"android.view.KeyEvent.getDownTime ()   Retrieve the time of the most recent key down event, in the uptimeMillis () "," Retrieve the time of the most recent key down event, in the uptimeMillis() time base. <br /><br />"
"android.view.KeyEvent.getUnicodeChar () "," Gets the Unicode character generated by the specified key and meta key state combination. <br /><br />"
"android.view.KeyEvent.getSource () "," Gets the source of the event. <br /><br />"
"android.view.KeyEvent.getKeyCode () "," Retrieve the key code of the key event. <br /><br />"
"android.view.KeyEvent.isCapsLockOn () "," Returns the locked state of the CAPS LOCK meta key. <br /><br />"
"android.view.KeyEvent.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.view.KeyEvent.isFunctionPressed () "," Returns the pressed state of the FUNCTION meta key. <br /><br />"
"android.view.KeyEvent.isMetaPressed () "," Returns the pressed state of the META meta key. <br /><br />"
"android.view.KeyEvent.getModifierMetaStateMask () "," Gets a mask that includes all valid modifier key meta state bits. <br /><br />"
"android.view.KeyEvent.getMatch (char[] chars) "," Gets the first character in the character array that can be generated by the specified key code. <br /><br />"
"android.view.LayoutInflater.Factory.onCreateView (String name, Context context, AttributeSet attrs) "," Hook you can supply that is called when inflating from a LayoutInflater. <br /><br />"
"android.view.LayoutInflater.Factory2.onCreateView (View parent, String name, Context context, AttributeSet attrs)   Version of onCreateView (String, Context, AttributeSet) "," Version of onCreateView(String, Context, AttributeSet) that also supplies the parent that the view created view will be placed in. <br /><br />"
"android.view.LayoutInflater.Filter.onLoadClass (Class clazz) "," Hook to allow clients of the LayoutInflater to restrict the set of Views that are allowed to be inflated. <br /><br />"
"android.view.LayoutInflater.setFilter (LayoutInflater.Filter filter) "," Sets the LayoutInflater.Filter to by this LayoutInflater. <br /><br />"
"android.view.LayoutInflater.inflate (int resource, ViewGroup root, boolean attachToRoot) "," Inflate a new view hierarchy from the specified xml resource. <br /><br />"
"android.view.LayoutInflater.cloneInContext (Context newContext) "," Create a copy of the existing LayoutInflater object, with the copy pointing to a different Context than the original. <br /><br />"
"android.view.LayoutInflater.inflate (XmlPullParser parser, ViewGroup root, boolean attachToRoot) "," Inflate a new view hierarchy from the specified XML node. <br /><br />"
"android.view.LayoutInflater.getFactory2 () "," Return the current LayoutInflater.Factory2. <br /><br />"
"android.view.LayoutInflater.inflate (int resource, ViewGroup root) "," Inflate a new view hierarchy from the specified xml resource. <br /><br />"
"android.view.LayoutInflater.getFactory ()   Return the current LayoutInflater.Factory  (or null) "," Return the current LayoutInflater.Factory (or null). <br /><br />"
"android.view.LayoutInflater.setFactory (LayoutInflater.Factory factory) "," Attach a custom Factory interface for creating views while using this LayoutInflater. <br /><br />"
"android.view.LayoutInflater.setFactory2 (LayoutInflater.Factory2 factory)   Like setFactory (LayoutInflater.Factory) "," Like setFactory(LayoutInflater.Factory), but allows you to set a LayoutInflater.Factory2 interface. <br /><br />"
"android.view.LayoutInflater.createView (String name, String prefix, AttributeSet attrs) "," Low-level function for instantiating a view by name. <br /><br />"
"android.view.LayoutInflater.getFilter () "," no description <br /><br />"
"android.view.LayoutInflater.from (Context context) "," Obtains the LayoutInflater from the given context. <br /><br />"
"android.view.LayoutInflater.inflate (XmlPullParser parser, ViewGroup root) "," Inflate a new view hierarchy from the specified xml node. <br /><br />"
"android.view.LayoutInflater.getContext () "," Return the context we are running in, for access to resources, class loader, etc. <br /><br />"
"android.view.Menu.addSubMenu (int titleRes) "," Add a new sub-menu to the menu. <br /><br />"
"android.view.Menu.add (int titleRes) "," Add a new item to the menu. <br /><br />"
"android.view.Menu.removeGroup (int groupId) "," Remove all items in the given group. <br /><br />"
"android.view.Menu.isShortcutKey (int keyCode, KeyEvent event) "," Is a keypress one of the defined shortcut keys for this window. <br /><br />"
"android.view.Menu.addSubMenu (CharSequence title) "," Add a new sub-menu to the menu. <br /><br />"
"android.view.Menu.close () "," Closes the menu, if open. <br /><br />"
"android.view.Menu.addIntentOptions (int groupId, int itemId, int order, ComponentName caller, Intent[] specifics, Intent intent, int flags, MenuItem[] outSpecificItems) "," Add a group of menu items corresponding to actions that can be performed for a particular Intent. <br /><br />"
"android.view.Menu.setGroupVisible (int group, boolean visible) "," Show or hide all menu items that are in the given group. <br /><br />"
"android.view.Menu.size () "," Get the number of items in the menu. <br /><br />"
"android.view.Menu.add (int groupId, int itemId, int order, int titleRes)   Variation on add (int, int, int, CharSequence) "," Variation on add(int, int, int, CharSequence) that takes a string resource identifier instead of the string itself. <br /><br />"
"android.view.Menu.addSubMenu (int groupId, int itemId, int order, CharSequence title) "," Add a new sub-menu to the menu. <br /><br />"
"android.view.Menu.findItem (int id) "," Return the menu item with a particular identifier. <br /><br />"
"android.view.Menu.clear () "," Remove all existing items from the menu, leaving it empty as if it had just been created. <br /><br />"
"android.view.Menu.removeItem (int id) "," Remove the item with the given identifier. <br /><br />"
"android.view.Menu.hasVisibleItems () "," Return whether the menu currently has item items that are visible. <br /><br />"
"android.view.Menu.add (CharSequence title) "," Add a new item to the menu. <br /><br />"
"android.view.Menu.setGroupCheckable (int group, boolean checkable, boolean exclusive) "," Control whether a particular group of items can show a check mark. <br /><br />"
"android.view.Menu.performShortcut (int keyCode, KeyEvent event, int flags) "," Execute the menu item action associated with the given shortcut character. <br /><br />"
"android.view.Menu.setGroupEnabled (int group, boolean enabled) "," Enable or disable all menu items that are in the given group. <br /><br />"
"android.view.Menu.getItem (int index) "," Gets the menu item at the given index. <br /><br />"
"android.view.Menu.addSubMenu (int groupId, int itemId, int order, int titleRes)   Variation on addSubMenu (int, int, int, CharSequence) "," Variation on addSubMenu(int, int, int, CharSequence) that takes a string resource identifier for the title instead of the string itself. <br /><br />"
"android.view.Menu.performIdentifierAction (int id, int flags) "," Execute the menu item action associated with the given menu identifier. <br /><br />"
"android.view.Menu.add (int groupId, int itemId, int order, CharSequence title) "," Add a new item to the menu. <br /><br />"
"android.view.Menu.setQwertyMode (boolean isQwerty)   Control whether the menu should be running in qwerty mode  (alphabetic shortcuts) or 12-key mode  (numeric shortcuts) "," Control whether the menu should be running in qwerty mode (alphabetic shortcuts) or 12-key mode (numeric shortcuts). <br /><br />"
"android.view.MenuInflater.inflate (int menuRes, Menu menu) "," Inflate a menu hierarchy from the specified XML resource. <br /><br />"
"android.view.MenuItem.getIntent () "," Return the Intent associated with this item. <br /><br />"
"android.view.MenuItem.getIcon ()   Returns the icon for this item as a Drawable  (getting it from resources if it hasn't been loaded before) "," Returns the icon for this item as a Drawable (getting it from resources if it hasn't been loaded before). <br /><br />"
"android.view.MenuItem.setChecked (boolean checked) "," Control whether this item is shown with a check mark. <br /><br />"
"android.view.MenuItem.isVisible () "," Return the visibility of the menu item. <br /><br />"
"android.view.MenuItem.setTitle (int title) "," Change the title associated with this item. <br /><br />"
"android.view.MenuItem.setAlphabeticShortcut (char alphaChar) "," Change the alphabetic shortcut associated with this item. <br /><br />"
"android.view.MenuItem.setTitleCondensed (CharSequence title) "," Change the condensed title associated with this item. <br /><br />"
"android.view.MenuItem.hasSubMenu () "," Check whether this item has an associated sub-menu. <br /><br />"
"android.view.MenuItem.setIcon (Drawable icon) "," Change the icon associated with this item. <br /><br />"
"android.view.MenuItem.getMenuInfo () "," Gets the extra information linked to this menu item. <br /><br />"
"android.view.MenuItem.setIntent (Intent intent) "," Change the Intent associated with this item. <br /><br />"
"android.view.MenuItem.isActionViewExpanded () "," Returns true if this menu item's action view has been expanded. <br /><br />"
"android.view.MenuItem.getNumericShortcut ()   Return the char for this menu item's numeric  (12-key) "," Return the char for this menu item's numeric (12-key) shortcut. <br /><br />"
"android.view.MenuItem.getGroupId () "," Return the group identifier that this menu item is part of. <br /><br />"
"android.view.MenuItem.setActionProvider (ActionProvider actionProvider) "," Sets the ActionProvider responsible for creating an action view if the item is placed on the action bar. <br /><br />"
"android.view.MenuItem.setOnActionExpandListener (MenuItem.OnActionExpandListener listener) "," Set an MenuItem.OnActionExpandListener on this menu item to be notified when the associated action view is expanded or collapsed. <br /><br />"
"android.view.MenuItem.setShortcut (char numericChar, char alphaChar) "," Change both the numeric and alphabetic shortcut associated with this item. <br /><br />"
"android.view.MenuItem.setNumericShortcut (char numericChar) "," Change the numeric shortcut associated with this item. <br /><br />"
"android.view.MenuItem.setEnabled (boolean enabled) "," Sets whether the menu item is enabled. <br /><br />"
"android.view.MenuItem.setActionView (int resId) "," Set an action view for this menu item. <br /><br />"
"android.view.MenuItem.setVisible (boolean visible) "," Sets the visibility of the menu item. <br /><br />"
"android.view.MenuItem.setOnMenuItemClickListener (MenuItem.OnMenuItemClickListener menuItemClickListener) "," Set a custom listener for invocation of this menu item. <br /><br />"
"android.view.MenuItem.getTitle () "," Retrieve the current title of the item. <br /><br />"
"android.view.MenuItem.getItemId () "," Return the identifier for this menu item. <br /><br />"
"android.view.MenuItem.isChecked () "," Return whether the item is currently displaying a check mark. <br /><br />"
"android.view.MenuItem.setShowAsAction (int actionEnum) "," Sets how this item should display in the presence of an Action Bar. <br /><br />"
"android.view.MenuItem.setShowAsActionFlags (int actionEnum) "," Sets how this item should display in the presence of an Action Bar. <br /><br />"
"android.view.MenuItem.getActionProvider () "," Gets the ActionProvider. <br /><br />"
"android.view.MenuItem.getSubMenu () "," Get the sub-menu to be invoked when this item is selected, if it has one. <br /><br />"
"android.view.MenuItem.setIcon (int iconRes) "," Change the icon associated with this item. <br /><br />"
"android.view.MenuItem.collapseActionView () "," Collapse the action view associated with this menu item. <br /><br />"
"android.view.MenuItem.isEnabled () "," Return the enabled state of the menu item. <br /><br />"
"android.view.MenuItem.getActionView () "," Returns the currently set action view for this menu item. <br /><br />"
"android.view.MenuItem.getTitleCondensed () "," Retrieve the current condensed title of the item. <br /><br />"
"android.view.MenuItem.getOrder () "," Return the category and order within the category of this item. <br /><br />"
"android.view.MenuItem.setTitle (CharSequence title) "," Change the title associated with this item. <br /><br />"
"android.view.MenuItem.expandActionView () "," Expand the action view associated with this menu item. <br /><br />"
"android.view.MenuItem.setCheckable (boolean checkable) "," Control whether this item can display a check mark. <br /><br />"
"android.view.MenuItem.getAlphabeticShortcut () "," Return the char for this menu item's alphabetic shortcut. <br /><br />"
"android.view.MenuItem.setActionView (View view) "," Set an action view for this menu item. <br /><br />"
"android.view.MenuItem.isCheckable () "," Return whether the item can currently display a check mark. <br /><br />"
"android.view.MenuItem.OnActionExpandListener.onMenuItemActionCollapse (MenuItem item) "," Called when a menu item with SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW is collapsed. <br /><br />"
"android.view.MenuItem.OnActionExpandListener.onMenuItemActionExpand (MenuItem item) "," Called when a menu item with SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW is expanded. <br /><br />"
"android.view.MenuItem.OnMenuItemClickListener.onMenuItemClick (MenuItem item) "," Called when a menu item has been invoked. <br /><br />"
"android.view.MotionEvent.getHistoricalToolMajor (int pos)   getHistoricalToolMajor (int, int) for the first pointer index  (may be an arbitrary pointer identifier) "," getHistoricalToolMajor(int, int) for the first pointer index (may be an arbitrary pointer identifier). <br /><br />"
"android.view.MotionEvent.getHistoricalY (int pointerIndex, int pos)   Returns a historical Y coordinate, as per getY (int) "," Returns a historical Y coordinate, as per getY(int), that occurred between this event and the previous event for the given pointer. <br /><br />"
"android.view.MotionEvent.getMetaState () "," Returns the state of any meta / modifier keys that were in effect when the event was generated. <br /><br />"
"android.view.MotionEvent.obtain (long downTime, long eventTime, int action, int pointerCount, int[] pointerIds, PointerCoords[] pointerCoords, int metaState, float xPrecision, float yPrecision, int deviceId, int edgeFlags, int source, int flags)    This method was deprecated in API level 14. Use obtain (long, long, int, int, PointerProperties[], PointerCoords[], int, int, float, float, int, int, int, int) "," This method was deprecated in API level 14. Use obtain(long, long, int, int, PointerProperties[], PointerCoords[], int, int, float, float, int, int, int, int) instead. <br /><br />"
"android.view.MotionEvent.getPointerCoords (int pointerIndex, MotionEvent.PointerCoords outPointerCoords) "," Populates a MotionEvent.PointerCoords object with pointer coordinate data for the specified pointer index. <br /><br />"
"android.view.MotionEvent.getToolMinor (int pointerIndex)   Returns the length of the minor axis of an ellipse that describes the size of the approaching tool for the given pointer index  (use getPointerId (int) to find the pointer identifier for this index) "," Returns the length of the minor axis of an ellipse that describes the size of the approaching tool for the given pointer index (use getPointerId(int) to find the pointer identifier for this index). <br /><br />"
"android.view.MotionEvent.getToolMajor ()   getToolMajor (int) for the first pointer index  (may be an arbitrary pointer identifier) "," getToolMajor(int) for the first pointer index (may be an arbitrary pointer identifier). <br /><br />"
"android.view.MotionEvent.isButtonPressed (int button)   Checks if a mouse or stylus button  (or combination of buttons) "," Checks if a mouse or stylus button (or combination of buttons) is pressed. <br /><br />"
"android.view.MotionEvent.getHistoricalToolMajor (int pointerIndex, int pos)   Returns a historical tool major axis coordinate, as per getToolMajor (int) "," Returns a historical tool major axis coordinate, as per getToolMajor(int), that occurred between this event and the previous event for the given pointer. <br /><br />"
"android.view.MotionEvent.getHistoricalPressure (int pointerIndex, int pos)   Returns a historical pressure coordinate, as per getPressure (int) "," Returns a historical pressure coordinate, as per getPressure(int), that occurred between this event and the previous event for the given pointer. <br /><br />"
"android.view.MotionEvent.getHistoricalY (int pos)   getHistoricalY (int, int) for the first pointer index  (may be an arbitrary pointer identifier) "," getHistoricalY(int, int) for the first pointer index (may be an arbitrary pointer identifier). <br /><br />"
"android.view.MotionEvent.obtain (MotionEvent other) "," Create a new MotionEvent, copying from an existing one. <br /><br />"
"android.view.MotionEvent.getOrientation (int pointerIndex)   Returns the orientation of the touch area and tool area in radians clockwise from vertical for the given pointer index  (use getPointerId (int) to find the pointer identifier for this index) "," Returns the orientation of the touch area and tool area in radians clockwise from vertical for the given pointer index (use getPointerId(int) to find the pointer identifier for this index). <br /><br />"
"android.view.MotionEvent.addBatch (long eventTime, PointerCoords[] pointerCoords, int metaState) "," Add a new movement to the batch of movements in this event. <br /><br />"
"android.view.MotionEvent.getAxisValue (int axis, int pointerIndex)   Returns the value of the requested axis for the given pointer index  (use getPointerId (int) to find the pointer identifier for this index) "," Returns the value of the requested axis for the given pointer index (use getPointerId(int) to find the pointer identifier for this index). <br /><br />"
"android.view.MotionEvent.getHistoricalPointerCoords (int pointerIndex, int pos, MotionEvent.PointerCoords outPointerCoords)   Populates a MotionEvent.PointerCoords object with historical pointer coordinate data, as per getPointerCoords (int, MotionEvent.PointerCoords) "," Populates a MotionEvent.PointerCoords object with historical pointer coordinate data, as per getPointerCoords(int, MotionEvent.PointerCoords), that occurred between this event and the previous event for the given pointer. <br /><br />"
"android.view.MotionEvent.getActionIndex ()   For ACTION_POINTER_DOWN or ACTION_POINTER_UP as returned by getActionMasked () "," For ACTION_POINTER_DOWN or ACTION_POINTER_UP as returned by getActionMasked(), this returns the associated pointer index. <br /><br />"
"android.view.MotionEvent.getActionMasked () "," Return the masked action being performed, without pointer index information. <br /><br />"
"android.view.MotionEvent.getToolType (int pointerIndex) "," Gets the tool type of a pointer for the given pointer index. <br /><br />"
"android.view.MotionEvent.getHistoricalSize (int pointerIndex, int pos)   Returns a historical size coordinate, as per getSize (int) "," Returns a historical size coordinate, as per getSize(int), that occurred between this event and the previous event for the given pointer. <br /><br />"
"android.view.MotionEvent.getHistoricalX (int pointerIndex, int pos)   Returns a historical X coordinate, as per getX (int) "," Returns a historical X coordinate, as per getX(int), that occurred between this event and the previous event for the given pointer. <br /><br />"
"android.view.MotionEvent.getSize ()   getSize (int) for the first pointer index  (may be an arbitrary pointer identifier) "," getSize(int) for the first pointer index (may be an arbitrary pointer identifier). <br /><br />"
"android.view.MotionEvent.axisFromString (String symbolicName) "," Gets an axis by its symbolic name such as 'AXIS_X' or an equivalent numeric constant such as '42'. <br /><br />"
"android.view.MotionEvent.getHistoricalTouchMajor (int pos)   getHistoricalTouchMajor (int, int) for the first pointer index  (may be an arbitrary pointer identifier) "," getHistoricalTouchMajor(int, int) for the first pointer index (may be an arbitrary pointer identifier). <br /><br />"
"android.view.MotionEvent.getPressure ()   getPressure (int) for the first pointer index  (may be an arbitrary pointer identifier) "," getPressure(int) for the first pointer index (may be an arbitrary pointer identifier). <br /><br />"
"android.view.MotionEvent.getTouchMajor (int pointerIndex)   Returns the length of the major axis of an ellipse that describes the touch area at the point of contact for the given pointer index  (use getPointerId (int) to find the pointer identifier for this index) "," Returns the length of the major axis of an ellipse that describes the touch area at the point of contact for the given pointer index (use getPointerId(int) to find the pointer identifier for this index). <br /><br />"
"android.view.MotionEvent.getFlags () "," Gets the motion event flags. <br /><br />"
"android.view.MotionEvent.getXPrecision () "," Return the precision of the X coordinates being reported. <br /><br />"
"android.view.MotionEvent.getHistoricalTouchMinor (int pointerIndex, int pos)   Returns a historical touch minor axis coordinate, as per getTouchMinor (int) "," Returns a historical touch minor axis coordinate, as per getTouchMinor(int), that occurred between this event and the previous event for the given pointer. <br /><br />"
"android.view.MotionEvent.transform (Matrix matrix) "," Applies a transformation matrix to all of the points in the event. <br /><br />"
"android.view.MotionEvent.getTouchMajor ()   getTouchMajor (int) for the first pointer index  (may be an arbitrary pointer identifier) "," getTouchMajor(int) for the first pointer index (may be an arbitrary pointer identifier). <br /><br />"
"android.view.MotionEvent.getHistoricalTouchMajor (int pointerIndex, int pos)   Returns a historical touch major axis coordinate, as per getTouchMajor (int) "," Returns a historical touch major axis coordinate, as per getTouchMajor(int), that occurred between this event and the previous event for the given pointer. <br /><br />"
"android.view.MotionEvent.getHistoricalX (int pos)   getHistoricalX (int, int) for the first pointer index  (may be an arbitrary pointer identifier) "," getHistoricalX(int, int) for the first pointer index (may be an arbitrary pointer identifier). <br /><br />"
"android.view.MotionEvent.getPointerProperties (int pointerIndex, MotionEvent.PointerProperties outPointerProperties) "," Populates a MotionEvent.PointerProperties object with pointer properties for the specified pointer index. <br /><br />"
"android.view.MotionEvent.getX ()   getX (int) for the first pointer index  (may be an arbitrary pointer identifier) "," getX(int) for the first pointer index (may be an arbitrary pointer identifier). <br /><br />"
"android.view.MotionEvent.getEventTime ()   Retrieve the time this event occurred, in the uptimeMillis () "," Retrieve the time this event occurred, in the uptimeMillis() time base. <br /><br />"
"android.view.MotionEvent.getToolMajor (int pointerIndex)   Returns the length of the major axis of an ellipse that describes the size of the approaching tool for the given pointer index  (use getPointerId (int) to find the pointer identifier for this index) "," Returns the length of the major axis of an ellipse that describes the size of the approaching tool for the given pointer index (use getPointerId(int) to find the pointer identifier for this index). <br /><br />"
"android.view.MotionEvent.setSource (int source) "," Modifies the source of the event. <br /><br />"
"android.view.MotionEvent.getTouchMinor (int pointerIndex)   Returns the length of the minor axis of an ellipse that describes the touch area at the point of contact for the given pointer index  (use getPointerId (int) to find the pointer identifier for this index) "," Returns the length of the minor axis of an ellipse that describes the touch area at the point of contact for the given pointer index (use getPointerId(int) to find the pointer identifier for this index). <br /><br />"
"android.view.MotionEvent.getAction () "," Return the kind of action being performed. <br /><br />"
"android.view.MotionEvent.getHistoricalTouchMinor (int pos)   getHistoricalTouchMinor (int, int) for the first pointer index  (may be an arbitrary pointer identifier) "," getHistoricalTouchMinor(int, int) for the first pointer index (may be an arbitrary pointer identifier). <br /><br />"
"android.view.MotionEvent.getY (int pointerIndex)   Returns the Y coordinate of this event for the given pointer index  (use getPointerId (int) to find the pointer identifier for this index) "," Returns the Y coordinate of this event for the given pointer index (use getPointerId(int) to find the pointer identifier for this index). <br /><br />"
"android.view.MotionEvent.getHistoricalSize (int pos)   getHistoricalSize (int, int) for the first pointer index  (may be an arbitrary pointer identifier) "," getHistoricalSize(int, int) for the first pointer index (may be an arbitrary pointer identifier). <br /><br />"
"android.view.MotionEvent.setLocation (float x, float y) "," Set this event's location. <br /><br />"
"android.view.MotionEvent.getHistoricalPressure (int pos)   getHistoricalPressure (int, int) for the first pointer index  (may be an arbitrary pointer identifier) "," getHistoricalPressure(int, int) for the first pointer index (may be an arbitrary pointer identifier). <br /><br />"
"android.view.MotionEvent.getSize (int pointerIndex)   Returns a scaled value of the approximate size for the given pointer index  (use getPointerId (int) to find the pointer identifier for this index) "," Returns a scaled value of the approximate size for the given pointer index (use getPointerId(int) to find the pointer identifier for this index). <br /><br />"
"android.view.MotionEvent.getDownTime ()   Returns the time  (in ms) "," Returns the time (in ms) when the user originally pressed down to start a stream of position events. <br /><br />"
"android.view.MotionEvent.addBatch (long eventTime, float x, float y, float pressure, float size, int metaState) "," Add a new movement to the batch of movements in this event. <br /><br />"
"android.view.MotionEvent.getHistoricalAxisValue (int axis, int pos)   getHistoricalAxisValue (int, int, int) for the first pointer index  (may be an arbitrary pointer identifier) "," getHistoricalAxisValue(int, int, int) for the first pointer index (may be an arbitrary pointer identifier). <br /><br />"
"android.view.MotionEvent.obtainNoHistory (MotionEvent other) "," Create a new MotionEvent, copying from an existing one, but not including any historical point information. <br /><br />"
"android.view.MotionEvent.getYPrecision () "," Return the precision of the Y coordinates being reported. <br /><br />"
"android.view.MotionEvent.getY ()   getY (int) for the first pointer index  (may be an arbitrary pointer identifier) "," getY(int) for the first pointer index (may be an arbitrary pointer identifier). <br /><br />"
"android.view.MotionEvent.findPointerIndex (int pointerId) "," Given a pointer identifier, find the index of its data in the event. <br /><br />"
"android.view.MotionEvent.getRawX () "," Returns the original raw X coordinate of this event. <br /><br />"
"android.view.MotionEvent.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.view.MotionEvent.getX (int pointerIndex)   Returns the X coordinate of this event for the given pointer index  (use getPointerId (int) to find the pointer identifier for this index) "," Returns the X coordinate of this event for the given pointer index (use getPointerId(int) to find the pointer identifier for this index). <br /><br />"
"android.view.MotionEvent.getOrientation ()   getOrientation (int) for the first pointer index  (may be an arbitrary pointer identifier) "," getOrientation(int) for the first pointer index (may be an arbitrary pointer identifier). <br /><br />"
"android.view.MotionEvent.getTouchMinor ()   getTouchMinor (int) for the first pointer index  (may be an arbitrary pointer identifier) "," getTouchMinor(int) for the first pointer index (may be an arbitrary pointer identifier). <br /><br />"
"android.view.MotionEvent.getEdgeFlags () "," Returns a bitfield indicating which edges, if any, were touched by this MotionEvent. <br /><br />"
"android.view.MotionEvent.obtain (long downTime, long eventTime, int action, float x, float y, int metaState) "," Create a new MotionEvent, filling in a subset of the basic motion values. <br /><br />"
"android.view.MotionEvent.getRawY () "," Returns the original raw Y coordinate of this event. <br /><br />"
"android.view.MotionEvent.getButtonState () "," Gets the state of all buttons that are pressed such as a mouse or stylus button. <br /><br />"
"android.view.MotionEvent.getHistoricalEventTime (int pos)   Returns the time that a historical movement occurred between this event and the previous event, in the uptimeMillis () "," Returns the time that a historical movement occurred between this event and the previous event, in the uptimeMillis() time base. <br /><br />"
"android.view.MotionEvent.offsetLocation (float deltaX, float deltaY) "," Adjust this event's location. <br /><br />"
"android.view.MotionEvent.obtain (long downTime, long eventTime, int action, int pointerCount, PointerProperties[] pointerProperties, PointerCoords[] pointerCoords, int metaState, int buttonState, float xPrecision, float yPrecision, int deviceId, int edgeFlags, int source, int flags) "," Create a new MotionEvent, filling in all of the basic values that define the motion. <br /><br />"
"android.view.MotionEvent.getPressure (int pointerIndex)   Returns the current pressure of this event for the given pointer index  (use getPointerId (int) to find the pointer identifier for this index) "," Returns the current pressure of this event for the given pointer index (use getPointerId(int) to find the pointer identifier for this index). <br /><br />"
"android.view.MotionEvent.getDeviceId () "," Gets the id for the device that this event came from. <br /><br />"
"android.view.MotionEvent.getHistoricalOrientation (int pos)   getHistoricalOrientation (int, int) for the first pointer index  (may be an arbitrary pointer identifier) "," getHistoricalOrientation(int, int) for the first pointer index (may be an arbitrary pointer identifier). <br /><br />"
"android.view.MotionEvent.getHistoricalToolMinor (int pos)   getHistoricalToolMinor (int, int) for the first pointer index  (may be an arbitrary pointer identifier) "," getHistoricalToolMinor(int, int) for the first pointer index (may be an arbitrary pointer identifier). <br /><br />"
"android.view.MotionEvent.obtain (long downTime, long eventTime, int action, int pointerCount, float x, float y, float pressure, float size, int metaState, float xPrecision, float yPrecision, int deviceId, int edgeFlags)    This method was deprecated in API level 9. Use obtain (long, long, int, float, float, float, float, int, float, float, int, int) "," This method was deprecated in API level 9. Use obtain(long, long, int, float, float, float, float, int, float, float, int, int) instead. <br /><br />"
"android.view.MotionEvent.getHistoricalOrientation (int pointerIndex, int pos)   Returns a historical orientation coordinate, as per getOrientation (int) "," Returns a historical orientation coordinate, as per getOrientation(int), that occurred between this event and the previous event for the given pointer. <br /><br />"
"android.view.MotionEvent.getPointerCount () "," The number of pointers of data contained in this event. <br /><br />"
"android.view.MotionEvent.actionToString (int action)   Returns a string that represents the symbolic name of the specified unmasked action such as 'ACTION_DOWN', 'ACTION_POINTER_DOWN (3) "," Returns a string that represents the symbolic name of the specified unmasked action such as 'ACTION_DOWN', 'ACTION_POINTER_DOWN(3)' or an equivalent numeric constant such as '35' if unknown. <br /><br />"
"android.view.MotionEvent.getHistoricalToolMinor (int pointerIndex, int pos)   Returns a historical tool minor axis coordinate, as per getToolMinor (int) "," Returns a historical tool minor axis coordinate, as per getToolMinor(int), that occurred between this event and the previous event for the given pointer. <br /><br />"
"android.view.MotionEvent.getToolMinor ()   getToolMinor (int) for the first pointer index  (may be an arbitrary pointer identifier) "," getToolMinor(int) for the first pointer index (may be an arbitrary pointer identifier). <br /><br />"
"android.view.MotionEvent.axisToString (int axis) "," Returns a string that represents the symbolic name of the specified axis such as 'AXIS_X' or an equivalent numeric constant such as '42' if unknown. <br /><br />"
"android.view.MotionEvent.obtain (long downTime, long eventTime, int action, float x, float y, float pressure, float size, int metaState, float xPrecision, float yPrecision, int deviceId, int edgeFlags) "," Create a new MotionEvent, filling in all of the basic values that define the motion. <br /><br />"
"android.view.MotionEvent.getSource () "," Gets the source of the event. <br /><br />"
"android.view.MotionEvent.setAction (int action) "," Sets this event's action. <br /><br />"
"android.view.MotionEvent.getAxisValue (int axis)   getAxisValue (int) for the first pointer index  (may be an arbitrary pointer identifier) "," getAxisValue(int) for the first pointer index (may be an arbitrary pointer identifier). <br /><br />"
"android.view.MotionEvent.setEdgeFlags (int flags) "," Sets the bitfield indicating which edges, if any, were touched by this MotionEvent. <br /><br />"
"android.view.MotionEvent.recycle () "," Recycle the MotionEvent, to be re-used by a later caller. <br /><br />"
"android.view.MotionEvent.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.view.MotionEvent.getHistorySize () "," Returns the number of historical points in this event. <br /><br />"
"android.view.MotionEvent.getPointerId (int pointerIndex) "," Return the pointer identifier associated with a particular pointer data index is this event. <br /><br />"
"android.view.MotionEvent.getHistoricalAxisValue (int axis, int pointerIndex, int pos)   Returns the historical value of the requested axis, as per getAxisValue (int, int) "," Returns the historical value of the requested axis, as per getAxisValue(int, int), occurred between this event and the previous event for the given pointer. <br /><br />"
"android.view.MotionEvent.PointerCoords.getAxisValue (int axis) "," Gets the value associated with the specified axis. <br /><br />"
"android.view.MotionEvent.PointerCoords.setAxisValue (int axis, float value) "," Sets the value associated with the specified axis. <br /><br />"
"android.view.MotionEvent.PointerCoords.clear () "," Clears the contents of this object. <br /><br />"
"android.view.MotionEvent.PointerCoords.copyFrom (MotionEvent.PointerCoords other) "," Copies the contents of another pointer coords object. <br /><br />"
"android.view.MotionEvent.PointerProperties.copyFrom (MotionEvent.PointerProperties other) "," Copies the contents of another pointer properties object. <br /><br />"
"android.view.MotionEvent.PointerProperties.equals (Object other) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.view.MotionEvent.PointerProperties.clear () "," Resets the pointer properties to their initial values. <br /><br />"
"android.view.MotionEvent.PointerProperties.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.view.OrientationEventListener.onOrientationChanged (int orientation) "," Called when the orientation of the device has changed. <br /><br />"
"android.view.OrientationEventListener.canDetectOrientation () "," no description <br /><br />"
"android.view.OrientationEventListener.disable () "," Disables the OrientationEventListener. <br /><br />"
"android.view.OrientationEventListener.enable ()   Enables the OrientationEventListener so it will monitor the sensor and call onOrientationChanged (int) "," Enables the OrientationEventListener so it will monitor the sensor and call onOrientationChanged(int) when the device orientation changes. <br /><br />"
"android.view.OrientationListener.onSensorChanged (int sensor, float[] values) "," Called when sensor values have changed. <br /><br />"
"android.view.OrientationListener.onOrientationChanged (int orientation)   Look at onOrientationChanged (int) "," Look at onOrientationChanged(int) for method description and usage <br /><br />"
"android.view.OrientationListener.disable () "," Disables the OrientationListener. <br /><br />"
"android.view.OrientationListener.onAccuracyChanged (int sensor, int accuracy) "," Called when the accuracy of a sensor has changed. <br /><br />"
"android.view.OrientationListener.enable ()   Enables the OrientationListener so it will monitor the sensor and call onOrientationChanged (int) "," Enables the OrientationListener so it will monitor the sensor and call onOrientationChanged(int) when the device orientation changes. <br /><br />"
"android.view.ScaleGestureDetector.getScaleFactor () "," Return the scaling factor from the previous scale event to the current event. <br /><br />"
"android.view.ScaleGestureDetector.getCurrentSpan () "," Return the average distance between each of the pointers forming the gesture in progress through the focal point. <br /><br />"
"android.view.ScaleGestureDetector.getEventTime () "," Return the event time of the current event being processed. <br /><br />"
"android.view.ScaleGestureDetector.getPreviousSpanX () "," Return the previous average X distance between each of the pointers forming the gesture in progress through the focal point. <br /><br />"
"android.view.ScaleGestureDetector.getPreviousSpan () "," Return the previous average distance between each of the pointers forming the gesture in progress through the focal point. <br /><br />"
"android.view.ScaleGestureDetector.isInProgress () "," Returns true if a scale gesture is in progress. <br /><br />"
"android.view.ScaleGestureDetector.getCurrentSpanX () "," Return the average X distance between each of the pointers forming the gesture in progress through the focal point. <br /><br />"
"android.view.ScaleGestureDetector.setQuickScaleEnabled (boolean scales) "," Set whether the associated ScaleGestureDetector.OnScaleGestureListener should receive onScale callbacks when the user performs a doubleTap followed by a swipe. <br /><br />"
"android.view.ScaleGestureDetector.getFocusX () "," Get the X coordinate of the current gesture's focal point. <br /><br />"
"android.view.ScaleGestureDetector.getFocusY () "," Get the Y coordinate of the current gesture's focal point. <br /><br />"
"android.view.ScaleGestureDetector.getPreviousSpanY () "," Return the previous average Y distance between each of the pointers forming the gesture in progress through the focal point. <br /><br />"
"android.view.ScaleGestureDetector.onTouchEvent (MotionEvent event) "," Accepts MotionEvents and dispatches events to a ScaleGestureDetector.OnScaleGestureListener when appropriate. <br /><br />"
"android.view.ScaleGestureDetector.isQuickScaleEnabled () "," Return whether the quick scale gesture, in which the user performs a double tap followed by a swipe, should perform scaling. <br /><br />"
"android.view.ScaleGestureDetector.getCurrentSpanY () "," Return the average Y distance between each of the pointers forming the gesture in progress through the focal point. <br /><br />"
"android.view.ScaleGestureDetector.getTimeDelta () "," Return the time difference in milliseconds between the previous accepted scaling event and the current scaling event. <br /><br />"
"android.view.ScaleGestureDetector.OnScaleGestureListener.onScale (ScaleGestureDetector detector) "," Responds to scaling events for a gesture in progress. <br /><br />"
"android.view.ScaleGestureDetector.OnScaleGestureListener.onScaleEnd (ScaleGestureDetector detector) "," Responds to the end of a scale gesture. <br /><br />"
"android.view.ScaleGestureDetector.OnScaleGestureListener.onScaleBegin (ScaleGestureDetector detector) "," Responds to the beginning of a scaling gesture. <br /><br />"
"android.view.ScaleGestureDetector.SimpleOnScaleGestureListener.onScale (ScaleGestureDetector detector) "," Responds to scaling events for a gesture in progress. <br /><br />"
"android.view.ScaleGestureDetector.SimpleOnScaleGestureListener.onScaleEnd (ScaleGestureDetector detector) "," Responds to the end of a scale gesture. <br /><br />"
"android.view.ScaleGestureDetector.SimpleOnScaleGestureListener.onScaleBegin (ScaleGestureDetector detector) "," Responds to the beginning of a scaling gesture. <br /><br />"
"android.view.SoundEffectConstants.getContantForFocusDirection (int direction) "," Get the sonification constant for the focus directions. <br /><br />"
"android.view.SubMenu.setHeaderIcon (Drawable icon) "," Sets the submenu header's icon to the icon given in icon Drawable. <br /><br />"
"android.view.SubMenu.setHeaderTitle (CharSequence title) "," Sets the submenu header's title to the title given in title. <br /><br />"
"android.view.SubMenu.getItem () "," Gets the MenuItem that represents this submenu in the parent menu. <br /><br />"
"android.view.SubMenu.setHeaderTitle (int titleRes) "," Sets the submenu header's title to the title given in titleRes resource identifier. <br /><br />"
"android.view.SubMenu.clearHeader () "," Clears the header of the submenu. <br /><br />"
"android.view.SubMenu.setIcon (int iconRes) "," Change the icon associated with this submenu's item in its parent menu. <br /><br />"
"android.view.SubMenu.setIcon (Drawable icon) "," Change the icon associated with this submenu's item in its parent menu. <br /><br />"
"android.view.SubMenu.setHeaderView (View view) "," Sets the header of the submenu to the View given in view. <br /><br />"
"android.view.SubMenu.setHeaderIcon (int iconRes) "," Sets the submenu header's icon to the icon given in iconRes resource id. <br /><br />"
"android.view.Surface.unlockCanvas (Canvas canvas) "," This method was deprecated in API level 17. This API has been removed and is not supported. Do not use. <br /><br />"
"android.view.Surface.lockCanvas (Rect inOutDirty) "," Gets a Canvas for drawing into this surface. <br /><br />"
"android.view.Surface.unlockCanvasAndPost (Canvas canvas) "," Posts the new contents of the Canvas to the surface and releases the Canvas. <br /><br />"
"android.view.Surface.readFromParcel (Parcel source) "," no description <br /><br />"
"android.view.Surface.isValid () "," Returns true if this object holds a valid surface. <br /><br />"
"android.view.Surface.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.view.Surface.release () "," Release the local reference to the server-side surface. <br /><br />"
"android.view.Surface.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.Surface.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.view.SurfaceHolder.Callback.surfaceChanged (SurfaceHolder holder, int format, int width, int height)   This is called immediately after any structural changes  (format or size) "," This is called immediately after any structural changes (format or size) have been made to the surface. <br /><br />"
"android.view.SurfaceHolder.Callback.surfaceDestroyed (SurfaceHolder holder) "," This is called immediately before a surface is being destroyed. <br /><br />"
"android.view.SurfaceHolder.Callback.surfaceCreated (SurfaceHolder holder) "," This is called immediately after the surface is first created. <br /><br />"
"android.view.SurfaceHolder.Callback2.surfaceRedrawNeeded (SurfaceHolder holder) "," Called when the application needs to redraw the content of its surface, after it is resized or for some other reason. <br /><br />"
"android.view.SurfaceHolder.setFormat (int format) "," Set the desired PixelFormat of the surface. <br /><br />"
"android.view.SurfaceHolder.unlockCanvasAndPost (Canvas canvas) "," Finish editing pixels in the surface. <br /><br />"
"android.view.SurfaceHolder.lockCanvas (Rect dirty)   Just like lockCanvas () "," Just like lockCanvas() but allows specification of a dirty rectangle. <br /><br />"
"android.view.SurfaceHolder.addCallback (SurfaceHolder.Callback callback) "," Add a Callback interface for this holder. <br /><br />"
"android.view.SurfaceHolder.lockCanvas () "," Start editing the pixels in the surface. <br /><br />"
"android.view.SurfaceHolder.setType (int type) "," This method was deprecated in API level 11. this is ignored, this value is set automatically when needed. <br /><br />"
"android.view.SurfaceHolder.setFixedSize (int width, int height) "," Make the surface a fixed size. <br /><br />"
"android.view.SurfaceHolder.isCreating () "," Use this method to find out if the surface is in the process of being created from Callback methods. <br /><br />"
"android.view.SurfaceHolder.getSurfaceFrame () "," Retrieve the current size of the surface. <br /><br />"
"android.view.SurfaceHolder.setKeepScreenOn (boolean screenOn) "," Enable or disable option to keep the screen turned on while this surface is displayed. <br /><br />"
"android.view.SurfaceHolder.setSizeFromLayout ()   Allow the surface to resized based on layout of its container  (this is the default) "," Allow the surface to resized based on layout of its container (this is the default). <br /><br />"
"android.view.SurfaceHolder.removeCallback (SurfaceHolder.Callback callback) "," Removes a previously added Callback interface from this holder. <br /><br />"
"android.view.SurfaceHolder.getSurface () "," Direct access to the surface object. <br /><br />"
"android.view.SurfaceView.setZOrderOnTop (boolean onTop) "," Control whether the surface view's surface is placed on top of its window. <br /><br />"
"android.view.SurfaceView.setVisibility (int visibility) "," Set the enabled state of this view. <br /><br />"
"android.view.SurfaceView.setSecure (boolean isSecure) "," Control whether the surface view's content should be treated as secure, preventing it from appearing in screenshots or from being viewed on non-secure displays. <br /><br />"
"android.view.SurfaceView.getHolder () "," Return the SurfaceHolder providing access and control over this SurfaceView's underlying surface. <br /><br />"
"android.view.SurfaceView.gatherTransparentRegion (Region region) "," This is used by the RootView to perform an optimization when the view hierarchy contains one or several SurfaceView. <br /><br />"
"android.view.SurfaceView.setZOrderMediaOverlay (boolean isMediaOverlay)   Control whether the surface view's surface is placed on top of another regular surface view in the window  (but still behind the window itself) "," Control whether the surface view's surface is placed on top of another regular surface view in the window (but still behind the window itself). <br /><br />"
"android.view.SurfaceView.draw (Canvas canvas)   Manually render this view  (and all of its children) "," Manually render this view (and all of its children) to the given Canvas. <br /><br />"
"android.view.textservice.SentenceSuggestionsInfo.getSuggestionsInfoAt (int i) "," no description <br /><br />"
"android.view.textservice.SentenceSuggestionsInfo.getOffsetAt (int i) "," no description <br /><br />"
"android.view.textservice.SentenceSuggestionsInfo.writeToParcel (Parcel dest, int flags) "," Used to package this object into a Parcel. <br /><br />"
"android.view.textservice.SentenceSuggestionsInfo.getLengthAt (int i) "," no description <br /><br />"
"android.view.textservice.SentenceSuggestionsInfo.getSuggestionsCount () "," no description <br /><br />"
"android.view.textservice.SentenceSuggestionsInfo.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.textservice.SpellCheckerInfo.loadLabel (PackageManager pm) "," Load the user-displayed label for this spell checker. <br /><br />"
"android.view.textservice.SpellCheckerInfo.getPackageName () "," Return the .apk package that implements this. <br /><br />"
"android.view.textservice.SpellCheckerInfo.getServiceInfo () "," Return the raw information about the Service implementing this spell checker. <br /><br />"
"android.view.textservice.SpellCheckerInfo.getId () "," Return a unique ID for this spell checker. <br /><br />"
"android.view.textservice.SpellCheckerInfo.getSubtypeCount () "," Return the count of the subtypes. <br /><br />"
"android.view.textservice.SpellCheckerInfo.getSettingsActivity () "," Return the class name of an activity that provides a settings UI. <br /><br />"
"android.view.textservice.SpellCheckerInfo.getComponent () "," Return the component of the service that implements. <br /><br />"
"android.view.textservice.SpellCheckerInfo.writeToParcel (Parcel dest, int flags) "," Used to package this object into a Parcel. <br /><br />"
"android.view.textservice.SpellCheckerInfo.describeContents () "," Used to make this class parcelable. <br /><br />"
"android.view.textservice.SpellCheckerInfo.getSubtypeAt (int index) "," Return the subtype at the specified index. <br /><br />"
"android.view.textservice.SpellCheckerInfo.loadIcon (PackageManager pm) "," Load the user-displayed icon for this spell checker. <br /><br />"
"android.view.textservice.SpellCheckerSession.isSessionDisconnected () "," no description <br /><br />"
"android.view.textservice.SpellCheckerSession.getSuggestions (TextInfo textInfo, int suggestionsLimit)    This method was deprecated in API level 16. use getSentenceSuggestions (TextInfo[], int) "," This method was deprecated in API level 16. use getSentenceSuggestions(TextInfo[], int) instead <br /><br />"
"android.view.textservice.SpellCheckerSession.getSpellChecker () "," Get the spell checker service info this spell checker session has. <br /><br />"
"android.view.textservice.SpellCheckerSession.getSentenceSuggestions (TextInfo[] textInfos, int suggestionsLimit) "," Get suggestions from the specified sentences <br /><br />"
"android.view.textservice.SpellCheckerSession.close () "," Finish this session and allow TextServicesManagerService to disconnect the bound spell checker. <br /><br />"
"android.view.textservice.SpellCheckerSession.cancel () "," Cancel pending and running spell check tasks <br /><br />"
"android.view.textservice.SpellCheckerSession.getSuggestions (TextInfo[] textInfos, int suggestionsLimit, boolean sequentialWords)    This method was deprecated in API level 16. use getSentenceSuggestions (TextInfo[], int) "," This method was deprecated in API level 16. use getSentenceSuggestions(TextInfo[], int) instead <br /><br />"
"android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener.onGetSuggestions (SuggestionsInfo[] results)   Callback for getSuggestions (TextInfo, int) and getSuggestions (TextInfo[], int, boolean) "," Callback for getSuggestions(TextInfo, int) and getSuggestions(TextInfo[], int, boolean) <br /><br />"
"android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener.onGetSentenceSuggestions (SentenceSuggestionsInfo[] results)   Callback for getSentenceSuggestions (TextInfo[], int) "," Callback for getSentenceSuggestions(TextInfo[], int) <br /><br />"
"android.view.textservice.SpellCheckerSubtype.getLocale () "," no description <br /><br />"
"android.view.textservice.SpellCheckerSubtype.getExtraValue () "," no description <br /><br />"
"android.view.textservice.SpellCheckerSubtype.writeToParcel (Parcel dest, int parcelableFlags) "," Flatten this object in to a Parcel. <br /><br />"
"android.view.textservice.SpellCheckerSubtype.containsExtraValueKey (String key) "," The string of ExtraValue in subtype should be defined as follows: example: key0,key1=value1,key2,key3,key4=value4 <br /><br />"
"android.view.textservice.SpellCheckerSubtype.getNameResId () "," no description <br /><br />"
"android.view.textservice.SpellCheckerSubtype.getDisplayName (Context context, String packageName, ApplicationInfo appInfo) "," no description <br /><br />"
"android.view.textservice.SpellCheckerSubtype.getExtraValueOf (String key) "," The string of ExtraValue in subtype should be defined as follows: example: key0,key1=value1,key2,key3,key4=value4 <br /><br />"
"android.view.textservice.SpellCheckerSubtype.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.view.textservice.SpellCheckerSubtype.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.textservice.SpellCheckerSubtype.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.view.textservice.SuggestionsInfo.setCookieAndSequence (int cookie, int sequence) "," Set the cookie and the sequence of SuggestionsInfo which are set to TextInfo from a client application <br /><br />"
"android.view.textservice.SuggestionsInfo.getSequence () "," no description <br /><br />"
"android.view.textservice.SuggestionsInfo.getCookie () "," no description <br /><br />"
"android.view.textservice.SuggestionsInfo.getSuggestionAt (int i) "," no description <br /><br />"
"android.view.textservice.SuggestionsInfo.writeToParcel (Parcel dest, int flags) "," Used to package this object into a Parcel. <br /><br />"
"android.view.textservice.SuggestionsInfo.getSuggestionsCount () "," no description <br /><br />"
"android.view.textservice.SuggestionsInfo.describeContents () "," Used to make this class parcelable. <br /><br />"
"android.view.textservice.SuggestionsInfo.getSuggestionsAttributes () "," no description <br /><br />"
"android.view.textservice.TextInfo.getCharSequence () "," no description <br /><br />"
"android.view.textservice.TextInfo.getSequence () "," no description <br /><br />"
"android.view.textservice.TextInfo.getCookie () "," no description <br /><br />"
"android.view.textservice.TextInfo.writeToParcel (Parcel dest, int flags) "," Used to package this object into a Parcel. <br /><br />"
"android.view.textservice.TextInfo.describeContents () "," Used to make this class parcelable. <br /><br />"
"android.view.textservice.TextInfo.getText () "," no description <br /><br />"
"android.view.textservice.TextServicesManager.newSpellCheckerSession (Bundle bundle, Locale locale, SpellCheckerSession.SpellCheckerSessionListener listener, boolean referToSpellCheckerLanguageSettings) "," Get a spell checker session for the specified spell checker <br /><br />"
"android.view.TextureView.setSurfaceTexture (SurfaceTexture surfaceTexture) "," Set the SurfaceTexture for this view to use. <br /><br />"
"android.view.TextureView.lockCanvas (Rect dirty)   Just like lockCanvas () "," Just like lockCanvas() but allows specification of a dirty rectangle. <br /><br />"
"android.view.TextureView.setOpaque (boolean opaque) "," Indicates whether the content of this TextureView is opaque. <br /><br />"
"android.view.TextureView.getBitmap (Bitmap bitmap) "," Copies the content of this view's surface texture into the specified bitmap. <br /><br />"
"android.view.TextureView.setLayerType (int layerType, Paint paint) "," The layer type of a TextureView is ignored since a TextureView is always considered to act as a hardware layer. <br /><br />"
"android.view.TextureView.getLayerType () "," Always returns LAYER_TYPE_HARDWARE. <br /><br />"
"android.view.TextureView.getTransform (Matrix transform) "," Returns the transform associated with this texture view. <br /><br />"
"android.view.TextureView.getBitmap () "," Returns a Bitmap representation of the content of the associated surface texture. <br /><br />"
"android.view.TextureView.isAvailable () "," Returns true if the SurfaceTexture associated with this TextureView is available for rendering. <br /><br />"
"android.view.TextureView.unlockCanvasAndPost (Canvas canvas) "," Finish editing pixels in the surface. <br /><br />"
"android.view.TextureView.setLayerPaint (Paint paint)   Updates the Paint object used with the current layer  (used only if the current layer type is not set to LAYER_TYPE_NONE) "," Updates the Paint object used with the current layer (used only if the current layer type is not set to LAYER_TYPE_NONE). <br /><br />"
"android.view.TextureView.lockCanvas () "," Start editing the pixels in the surface. <br /><br />"
"android.view.TextureView.setTransform (Matrix transform) "," Sets the transform to associate with this texture view. <br /><br />"
"android.view.TextureView.isOpaque () "," Indicates whether this View is opaque. <br /><br />"
"android.view.TextureView.getBitmap (int width, int height) "," Returns a Bitmap representation of the content of the associated surface texture. <br /><br />"
"android.view.TextureView.draw (Canvas canvas) "," Subclasses of TextureView cannot do their own rendering with the Canvas object. <br /><br />"
"android.view.TextureView.getSurfaceTextureListener () "," Returns the TextureView.SurfaceTextureListener currently associated with this texture view. <br /><br />"
"android.view.TextureView.setSurfaceTextureListener (TextureView.SurfaceTextureListener listener) "," Sets the TextureView.SurfaceTextureListener used to listen to surface texture events. <br /><br />"
"android.view.TextureView.getSurfaceTexture () "," Returns the SurfaceTexture used by this view. <br /><br />"
"android.view.TextureView.buildLayer () "," Calling this method has no effect. <br /><br />"
"android.view.TextureView.SurfaceTextureListener.onSurfaceTextureAvailable (SurfaceTexture surface, int width, int height) "," Invoked when a TextureView's SurfaceTexture is ready for use. <br /><br />"
"android.view.TextureView.SurfaceTextureListener.onSurfaceTextureDestroyed (SurfaceTexture surface) "," Invoked when the specified SurfaceTexture is about to be destroyed. <br /><br />"
"android.view.TextureView.SurfaceTextureListener.onSurfaceTextureSizeChanged (SurfaceTexture surface, int width, int height) "," Invoked when the SurfaceTexture's buffers size changed. <br /><br />"
"android.view.TextureView.SurfaceTextureListener.onSurfaceTextureUpdated (SurfaceTexture surface)   Invoked when the specified SurfaceTexture is updated through updateTexImage () "," Invoked when the specified SurfaceTexture is updated through updateTexImage(). <br /><br />"
"android.view.TouchDelegate.onTouchEvent (MotionEvent event) "," Will forward touch events to the delegate view if the event is within the bounds specified in the constructor. <br /><br />"
"android.view.VelocityTracker.computeCurrentVelocity (int units, float maxVelocity) "," Compute the current velocity based on the points that have been collected. <br /><br />"
"android.view.VelocityTracker.getXVelocity (int id) "," Retrieve the last computed X velocity. <br /><br />"
"android.view.VelocityTracker.getXVelocity () "," Retrieve the last computed X velocity. <br /><br />"
"android.view.VelocityTracker.getYVelocity (int id) "," Retrieve the last computed Y velocity. <br /><br />"
"android.view.VelocityTracker.clear () "," Reset the velocity tracker back to its initial state. <br /><br />"
"android.view.VelocityTracker.recycle () "," Return a VelocityTracker object back to be re-used by others. <br /><br />"
"android.view.VelocityTracker.obtain () "," Retrieve a new VelocityTracker object to watch the velocity of a motion. <br /><br />"
"android.view.VelocityTracker.addMovement (MotionEvent event) "," Add a user's movement to the tracker. <br /><br />"
"android.view.VelocityTracker.getYVelocity () "," Retrieve the last computed Y velocity. <br /><br />"
"android.view.VelocityTracker.computeCurrentVelocity (int units)   Equivalent to invoking computeCurrentVelocity (int, float) "," Equivalent to invoking computeCurrentVelocity(int, float) with a maximum velocity of Float.MAX_VALUE. <br /><br />"
"android.view.View.AccessibilityDelegate.sendAccessibilityEventUnchecked (View host, AccessibilityEvent event) "," Sends an accessibility event. <br /><br />"
"android.view.View.AccessibilityDelegate.onPopulateAccessibilityEvent (View host, AccessibilityEvent event) "," Gives a chance to the host View to populate the accessibility event with its text content. <br /><br />"
"android.view.View.AccessibilityDelegate.onInitializeAccessibilityEvent (View host, AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about the the host View which is the event source. <br /><br />"
"android.view.View.AccessibilityDelegate.performAccessibilityAction (View host, int action, Bundle args) "," Performs the specified accessibility action on the view. <br /><br />"
"android.view.View.AccessibilityDelegate.sendAccessibilityEvent (View host, int eventType) "," Sends an accessibility event of the given type. <br /><br />"
"android.view.View.AccessibilityDelegate.onInitializeAccessibilityNodeInfo (View host, AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about the host view. <br /><br />"
"android.view.View.AccessibilityDelegate.dispatchPopulateAccessibilityEvent (View host, AccessibilityEvent event) "," Dispatches an AccessibilityEvent to the host View first and then to its children for adding their text content to the event. <br /><br />"
"android.view.View.AccessibilityDelegate.onRequestSendAccessibilityEvent (ViewGroup host, View child, AccessibilityEvent event)   Called when a child of the host View has requested sending an AccessibilityEvent and gives an opportunity to the parent  (the host) "," Called when a child of the host View has requested sending an AccessibilityEvent and gives an opportunity to the parent (the host) to augment the event. <br /><br />"
"android.view.View.AccessibilityDelegate.getAccessibilityNodeProvider (View host) "," Gets the provider for managing a virtual view hierarchy rooted at this View and reported to AccessibilityServices that explore the window content. <br /><br />"
"android.view.View.DragShadowBuilder.onDrawShadow (Canvas canvas) "," Draws the shadow image. <br /><br />"
"android.view.View.DragShadowBuilder.onProvideShadowMetrics (Point shadowSize, Point shadowTouchPoint) "," Provides the metrics for the shadow image. <br /><br />"
"android.view.View.DragShadowBuilder.getView ()   Returns the View object that had been passed to the View.DragShadowBuilder (View) "," Returns the View object that had been passed to the View.DragShadowBuilder(View) constructor. <br /><br />"
"android.view.View.setOnClickListener (View.OnClickListener l) "," Register a callback to be invoked when this view is clicked. <br /><br />"
"android.view.View.setScrollBarDefaultDelayBeforeFade (int scrollBarDefaultDelayBeforeFade) "," Define the delay before scrollbars fade. <br /><br />"
"android.view.View.isLaidOut () "," Returns true if this view has been through at least one layout since it was last attached to or detached from a window. <br /><br />"
"android.view.View.isPaddingRelative ()   Return if the padding as been set thru relative values setPaddingRelative (int, int, int, int) "," Return if the padding as been set thru relative values setPaddingRelative(int, int, int, int) or thru <br /><br />"
"android.view.View.setFadingEdgeLength (int length) "," Set the size of the faded edge used to indicate that more content in this view is available. <br /><br />"
"android.view.View.onRtlPropertiesChanged (int layoutDirection)   Called when any RTL property  (layout direction or text direction or text alignment) "," Called when any RTL property (layout direction or text direction or text alignment) has been changed. <br /><br />"
"android.view.View.setRotationX (float rotationX) "," Sets the degrees that the view is rotated around the horizontal axis through the pivot point. <br /><br />"
"android.view.View.isInEditMode () "," Indicates whether this View is currently in edit mode. <br /><br />"
"android.view.View.setSaveEnabled (boolean enabled)   Controls whether the saving of this view's state is enabled  (that is, whether its onSaveInstanceState () method will be called) "," Controls whether the saving of this view's state is enabled (that is, whether its onSaveInstanceState() method will be called). <br /><br />"
"android.view.View.getMeasuredWidthAndState ()   Return the full width measurement information for this view as computed by the most recent call to measure (int, int) "," Return the full width measurement information for this view as computed by the most recent call to measure(int, int). <br /><br />"
"android.view.View.dispatchNestedPreScroll (int dx, int dy, int[] consumed, int[] offsetInWindow) "," Dispatch one step of a nested scroll in progress before this view consumes any portion of it. <br /><br />"
"android.view.View.performHapticFeedback (int feedbackConstant) "," BZZZTT!!1! Provide haptic feedback to the user for this view. <br /><br />"
"android.view.View.setNextFocusForwardId (int nextFocusForwardId) "," Sets the id of the view to use when the next focus is FOCUS_FORWARD. <br /><br />"
"android.view.View.getNextFocusForwardId () "," Gets the id of the view to use when the next focus is FOCUS_FORWARD. <br /><br />"
"android.view.View.setAccessibilityTraversalBefore (int beforeId) "," Sets the id of a view before which this one is visited in accessibility traversal. <br /><br />"
"android.view.View.isLongClickable () "," Indicates whether this view reacts to long click events or not. <br /><br />"
"android.view.View.addOnLayoutChangeListener (View.OnLayoutChangeListener listener) "," Add a listener that will be called when the bounds of the view change due to layout processing. <br /><br />"
"android.view.View.checkInputConnectionProxy (View view) "," Called by the InputMethodManager when a view who is not the current input connection target is trying to make a call on the manager. <br /><br />"
"android.view.View.setLayerType (int layerType, Paint paint) "," Specifies the type of layer backing this view. <br /><br />"
"android.view.View.getParentForAccessibility () "," Gets the parent for accessibility purposes. <br /><br />"
"android.view.View.dispatchDrawableHotspotChanged (float x, float y) "," Dispatches drawableHotspotChanged to all of this View's children. <br /><br />"
"android.view.View.onWindowSystemUiVisibilityChanged (int visible)   Override to find out when the window's requested system UI visibility has changed, that is the value returned by getWindowSystemUiVisibility () "," Override to find out when the window's requested system UI visibility has changed, that is the value returned by getWindowSystemUiVisibility(). <br /><br />"
"android.view.View.unscheduleDrawable (Drawable who, Runnable what) "," Cancels a scheduled action on a drawable. <br /><br />"
"android.view.View.getMeasuredHeightAndState ()   Return the full height measurement information for this view as computed by the most recent call to measure (int, int) "," Return the full height measurement information for this view as computed by the most recent call to measure(int, int). <br /><br />"
"android.view.View.jumpDrawablesToCurrentState ()   Call Drawable.jumpToCurrentState () "," Call Drawable.jumpToCurrentState() on all Drawable objects associated with this view. <br /><br />"
"android.view.View.findFocus () "," Find the view in the hierarchy rooted at this view that currently has focus. <br /><br />"
"android.view.View.onApplyWindowInsets (WindowInsets insets) "," Called when the view should apply WindowInsets according to its internal policy. <br /><br />"
"android.view.View.isActivated () "," Indicates the activation state of this view. <br /><br />"
"android.view.View.sendAccessibilityEventUnchecked (AccessibilityEvent event)   This method behaves exactly as sendAccessibilityEvent (int) "," This method behaves exactly as sendAccessibilityEvent(int) but takes as an argument an empty AccessibilityEvent and does not perform a check whether accessibility is enabled. <br /><br />"
"android.view.View.dispatchNestedScroll (int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int[] offsetInWindow) "," Dispatch one step of a nested scroll in progress. <br /><br />"
"android.view.View.getFocusedRect (Rect r) "," When a view has focus and the user navigates away from it, the next view is searched for starting from the rectangle filled in by this method. <br /><br />"
"android.view.View.findViewsWithText (ArrayList< View> outViews, CharSequence searched, int flags) "," Finds the Views that contain given text. <br /><br />"
"android.view.View.createAccessibilityNodeInfo () "," Returns an AccessibilityNodeInfo representing this view from the point of view of an AccessibilityService. <br /><br />"
"android.view.View.isSelected () "," Indicates the selection state of this view. <br /><br />"
"android.view.View.isTextAlignmentResolved () "," no description <br /><br />"
"android.view.View.getAccessibilityTraversalBefore () "," Gets the id of a view before which this one is visited in accessibility traversal. <br /><br />"
"android.view.View.startActionMode (ActionMode.Callback callback) "," Start an action mode. <br /><br />"
"android.view.View.onHoverChanged (boolean hovered) "," Implement this method to handle hover state changes. <br /><br />"
"android.view.View.playSoundEffect (int soundConstant) "," Play a sound effect for this view. <br /><br />"
"android.view.View.getKeyDispatcherState () "," Return the global KeyEvent.DispatcherState for this view's window. <br /><br />"
"android.view.View.setNestedScrollingEnabled (boolean enabled) "," Enable or disable nested scrolling for this view. <br /><br />"
"android.view.View.getNextFocusUpId () "," Gets the id of the view to use when the next focus is FOCUS_UP. <br /><br />"
"android.view.View.onKeyMultiple (int keyCode, int repeatCount, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyMultiple (): always returns false  (doesn't handle the event) "," Default implementation of KeyEvent.Callback.onKeyMultiple(): always returns false (doesn't handle the event). <br /><br />"
"android.view.View.requestUnbufferedDispatch (MotionEvent event) "," Request unbuffered dispatch of the given stream of MotionEvents to this View. <br /><br />"
"android.view.View.showContextMenu () "," Bring up the context menu for this view. <br /><br />"
"android.view.View.performHapticFeedback (int feedbackConstant, int flags)   BZZZTT!!1! Like performHapticFeedback (int) "," BZZZTT!!1! Like performHapticFeedback(int), with additional options. <br /><br />"
"android.view.View.setOutlineProvider (ViewOutlineProvider provider) "," Sets the ViewOutlineProvider of the view, which generates the Outline that defines the shape of the shadow it casts, and enables outline clipping. <br /><br />"
"android.view.View.layout (int l, int t, int r, int b) "," Assign a size and position to a view and all of its descendants This is the second phase of the layout mechanism. <br /><br />"
"android.view.View.isClickable () "," Indicates whether this view reacts to click events or not. <br /><br />"
"android.view.View.getScrollBarDefaultDelayBeforeFade () "," Returns the delay before scrollbars fade. <br /><br />"
"android.view.View.computeScroll () "," Called by a parent to request that a child update its values for mScrollX and mScrollY if necessary. <br /><br />"
"android.view.View.isEnabled () "," Returns the enabled status for this view. <br /><br />"
"android.view.View.getNextFocusRightId () "," Gets the id of the view to use when the next focus is FOCUS_RIGHT. <br /><br />"
"android.view.View.isHovered () "," Returns true if the view is currently hovered. <br /><br />"
"android.view.View.isVerticalScrollBarEnabled () "," Indicate whether the vertical scrollbar should be drawn or not. <br /><br />"
"android.view.View.getRight () "," Right position of this view relative to its parent. <br /><br />"
"android.view.View.getWindowId () "," Retrieve the WindowId for the window this view is currently attached to. <br /><br />"
"android.view.View.addTouchables (ArrayList< View> views)   Add any touchable views that are descendants of this view  (possibly including this view if it is touchable itself) "," Add any touchable views that are descendants of this view (possibly including this view if it is touchable itself) to views. <br /><br />"
"android.view.View.getAccessibilityTraversalAfter () "," Gets the id of a view after which this one is visited in accessibility traversal. <br /><br />"
"android.view.View.setAccessibilityTraversalAfter (int afterId) "," Sets the id of a view after which this one is visited in accessibility traversal. <br /><br />"
"android.view.View.setClipBounds (Rect clipBounds) "," Sets a rectangular area on this view to which the view will be clipped when it is drawn. <br /><br />"
"android.view.View.getZ () "," The visual z position of this view, in pixels. <br /><br />"
"android.view.View.findViewWithTag (Object tag) "," Look for a child view with the given tag. <br /><br />"
"android.view.View.setOnCreateContextMenuListener (View.OnCreateContextMenuListener l) "," Register a callback to be invoked when the context menu for this view is being built. <br /><br />"
"android.view.View.getVisibility () "," Returns the visibility status for this view. <br /><br />"
"android.view.View.hasOnClickListeners () "," Return whether this view has an attached OnClickListener. <br /><br />"
"android.view.View.setOnApplyWindowInsetsListener (View.OnApplyWindowInsetsListener listener) "," Set an View.OnApplyWindowInsetsListener to take over the policy for applying window insets to this view. <br /><br />"
"android.view.View.getBackgroundTintList () "," Return the tint applied to the background drawable, if specified. <br /><br />"
"android.view.View.requestRectangleOnScreen (Rect rectangle, boolean immediate) "," Request that a rectangle of this view be visible on the screen, scrolling if necessary just enough. <br /><br />"
"android.view.View.getLeft () "," Left position of this view relative to its parent. <br /><br />"
"android.view.View.setEnabled (boolean enabled) "," Set the enabled state of this view. <br /><br />"
"android.view.View.getMeasuredState ()   Return only the state bits of getMeasuredWidthAndState () and getMeasuredHeightAndState () "," Return only the state bits of getMeasuredWidthAndState() and getMeasuredHeightAndState(), combined into one integer. <br /><br />"
"android.view.View.getDefaultSize (int size, int measureSpec) "," Utility to return a default size. <br /><br />"
"android.view.View.getGlobalVisibleRect (Rect r, Point globalOffset)   If some part of this view is not clipped by any of its parents, then return that area in r in global  (root) "," If some part of this view is not clipped by any of its parents, then return that area in r in global (root) coordinates. <br /><br />"
"android.view.View.isFocusable () "," Returns whether this View is able to take focus. <br /><br />"
"android.view.View.stopNestedScroll () "," Stop a nested scroll in progress. <br /><br />"
"android.view.View.getRotationX () "," The degrees that the view is rotated around the horizontal axis through the pivot point. <br /><br />"
"android.view.View.getHorizontalFadingEdgeLength () "," Returns the size of the horizontal faded edges used to indicate that more content in this view is visible. <br /><br />"
"android.view.View.getAnimation () "," Get the animation currently associated with this view. <br /><br />"
"android.view.View.isHorizontalFadingEdgeEnabled () "," Indicate whether the horizontal edges are faded when the view is scrolled horizontally. <br /><br />"
"android.view.View.getDrawableState () "," Return an array of resource IDs of the drawable states representing the current state of the view. <br /><br />"
"android.view.View.onTrackballEvent (MotionEvent event) "," Implement this method to handle trackball motion events. <br /><br />"
"android.view.View.hasFocus () "," Returns true if this view has focus iteself, or is the ancestor of the view that has focus. <br /><br />"
"android.view.View.isHorizontalScrollBarEnabled () "," Indicate whether the horizontal scrollbar should be drawn or not. <br /><br />"
"android.view.View.getTranslationX ()   The horizontal location of this view relative to its "," The horizontal location of this view relative to its left position. <br /><br />"
"android.view.View.performAccessibilityAction (int action, Bundle arguments) "," Performs the specified accessibility action on the view. <br /><br />"
"android.view.View.getId () "," Returns this view's identifier. <br /><br />"
"android.view.View.setHapticFeedbackEnabled (boolean hapticFeedbackEnabled) "," Set whether this view should have haptic feedback for events such as long presses. <br /><br />"
"android.view.View.getSolidColor () "," Override this if your view is known to always be drawn on top of a solid color background, and needs to draw fading edges. <br /><br />"
"android.view.View.saveHierarchyState (SparseArray< Parcelable> container) "," Store this view hierarchy's frozen state into the given container. <br /><br />"
"android.view.View.dispatchNestedPrePerformAccessibilityAction (int action, Bundle arguments) "," Report an accessibility action to this view's parents for delegated processing. <br /><br />"
"android.view.View.setLeft (int left) "," Sets the left position of this view relative to its parent. <br /><br />"
"android.view.View.unscheduleDrawable (Drawable who) "," Unschedule any events associated with the given Drawable. <br /><br />"
"android.view.View.getDrawingCache ()   Calling this method is equivalent to calling getDrawingCache (false) "," Calling this method is equivalent to calling getDrawingCache(false). <br /><br />"
"android.view.View.scrollBy (int x, int y) "," Move the scrolled position of your view. <br /><br />"
"android.view.View.setSelected (boolean selected) "," Changes the selection state of this view. <br /><br />"
"android.view.View.setOnLongClickListener (View.OnLongClickListener l) "," Register a callback to be invoked when this view is clicked and held. <br /><br />"
"android.view.View.isImportantForAccessibility () "," Computes whether this view should be exposed for accessibility. <br /><br />"
"android.view.View.onCheckIsTextEditor () "," Check whether the called view is a text editor, in which case it would make sense to automatically display a soft input window for it. <br /><br />"
"android.view.View.requestFocus (int direction) "," Call this to try to give focus to a specific view or to one of its descendants and give it a hint about what direction focus is heading. <br /><br />"
"android.view.View.setScrollX (int value) "," Set the horizontal scrolled position of your view. <br /><br />"
"android.view.View.getNextFocusDownId () "," Gets the id of the view to use when the next focus is FOCUS_DOWN. <br /><br />"
"android.view.View.createContextMenu (ContextMenu menu) "," Show the context menu for this view. <br /><br />"
"android.view.View.isLayoutRequested () "," Indicates whether or not this view's layout will be requested during the next hierarchy layout pass. <br /><br />"
"android.view.View.getDrawingCacheQuality () "," Returns the quality of the drawing cache. <br /><br />"
"android.view.View.setScaleY (float scaleY) "," Sets the amount that the view is scaled in Y around the pivot point, as a proportion of the view's unscaled width. <br /><br />"
"android.view.View.getTouchables () "," Find and return all touchable views that are descendants of this view, possibly including this view if it is touchable itself. <br /><br />"
"android.view.View.getOverlay () "," Returns the overlay for this view, creating it if it does not yet exist. <br /><br />"
"android.view.View.getBaseline () "," Return the offset of the widget's text baseline from the widget's top boundary. <br /><br />"
"android.view.View.getClipToOutline () "," Returns whether the Outline should be used to clip the contents of the View. <br /><br />"
"android.view.View.dispatchWindowFocusChanged (boolean hasFocus) "," Called when the window containing this view gains or loses window focus. <br /><br />"
"android.view.View.getElevation () "," The base elevation of this view relative to its parent, in pixels. <br /><br />"
"android.view.View.dispatchDragEvent (DragEvent event) "," Detects if this View is enabled and has a drag event listener. <br /><br />"
"android.view.View.getWindowVisibility ()   Returns the current visibility of the window this view is attached to  (either GONE, INVISIBLE, or VISIBLE) "," Returns the current visibility of the window this view is attached to (either GONE, INVISIBLE, or VISIBLE). <br /><br />"
"android.view.View.getKeepScreenOn () "," Returns whether the screen should remain on, corresponding to the current value of KEEP_SCREEN_ON. <br /><br />"
"android.view.View.getClipBounds ()   Returns a copy of the current "," Returns a copy of the current clipBounds. <br /><br />"
"android.view.View.getViewTreeObserver () "," Returns the ViewTreeObserver for this view's hierarchy. <br /><br />"
"android.view.View.getParent () "," Gets the parent of this view. <br /><br />"
"android.view.View.onKeyShortcut (int keyCode, KeyEvent event) "," Called on the focused view when a key shortcut event is not handled. <br /><br />"
"android.view.View.setBackgroundTintList (ColorStateList tint) "," Applies a tint to the background drawable. <br /><br />"
"android.view.View.setClickable (boolean clickable) "," Enables or disables click events for this view. <br /><br />"
"android.view.View.setRight (int right) "," Sets the right position of this view relative to its parent. <br /><br />"
"android.view.View.getPaddingRight () "," Returns the right padding of this view. <br /><br />"
"android.view.View.setAccessibilityDelegate (View.AccessibilityDelegate delegate) "," Sets a delegate for implementing accessibility support via composition as opposed to inheritance. <br /><br />"
"android.view.View.isAttachedToWindow () "," Returns true if this view is currently attached to a window. <br /><br />"
"android.view.View.setOnGenericMotionListener (View.OnGenericMotionListener l) "," Register a callback to be invoked when a generic motion event is sent to this view. <br /><br />"
"android.view.View.getScrollX () "," Return the scrolled left position of this view. <br /><br />"
"android.view.View.setId (int id) "," Sets the identifier for this view. <br /><br />"
"android.view.View.postInvalidateOnAnimation (int left, int top, int right, int bottom) "," Cause an invalidate of the specified area to happen on the next animation time step, typically the next display frame. <br /><br />"
"android.view.View.setRotationY (float rotationY) "," Sets the degrees that the view is rotated around the vertical axis through the pivot point. <br /><br />"
"android.view.View.setOnFocusChangeListener (View.OnFocusChangeListener l) "," Register a callback to be invoked when focus of this view changed. <br /><br />"
"android.view.View.getVerticalScrollbarWidth () "," Returns the width of the vertical scrollbar. <br /><br />"
"android.view.View.dispatchKeyEventPreIme (KeyEvent event) "," Dispatch a key event before it is processed by any input method associated with the view hierarchy. <br /><br />"
"android.view.View.getHeight () "," Return the height of your view. <br /><br />"
"android.view.View.setLongClickable (boolean longClickable) "," Enables or disables long click events for this view. <br /><br />"
"android.view.View.setOnTouchListener (View.OnTouchListener l) "," Register a callback to be invoked when a touch event is sent to this view. <br /><br />"
"android.view.View.requestFocus () "," Call this to try to give focus to a specific view or to one of its descendants. <br /><br />"
"android.view.View.getRotationY () "," The degrees that the view is rotated around the vertical axis through the pivot point. <br /><br />"
"android.view.View.setDrawingCacheEnabled (boolean enabled) "," Enables or disables the drawing cache. <br /><br />"
"android.view.View.hasOverlappingRendering () "," Returns whether this View has content which overlaps. <br /><br />"
"android.view.View.getAccessibilityNodeProvider () "," Gets the provider for managing a virtual view hierarchy rooted at this View and reported to AccessibilityServices that explore the window content. <br /><br />"
"android.view.View.isDrawingCacheEnabled () "," Indicates whether the drawing cache is enabled for this view. <br /><br />"
"android.view.View.setWillNotDraw (boolean willNotDraw) "," If this view doesn't do any drawing on its own, set this flag to allow further optimizations. <br /><br />"
"android.view.View.dispatchUnhandledMove (View focused, int direction) "," This method is the last chance for the focused view and its ancestors to respond to an arrow key. <br /><br />"
"android.view.View.dispatchTouchEvent (MotionEvent event) "," Pass the touch screen motion event down to the target view, or this view if it is the target. <br /><br />"
"android.view.View.cancelPendingInputEvents () "," Cancel any deferred high-level input events that were previously posted to the event queue. <br /><br />"
"android.view.View.setNextFocusUpId (int nextFocusUpId) "," Sets the id of the view to use when the next focus is FOCUS_UP. <br /><br />"
"android.view.View.refreshDrawableState () "," Call this to force a view to update its drawable state. <br /><br />"
"android.view.View.getTransitionName () "," Returns the name of the View to be used to identify Views in Transitions. <br /><br />"
"android.view.View.generateViewId ()   Generate a value suitable for use in setId (int) "," Generate a value suitable for use in setId(int). <br /><br />"
"android.view.View.getScrollBarSize () "," Returns the scrollbar size. <br /><br />"
"android.view.View.inflate (Context context, int resource, ViewGroup root) "," Inflate a view from an XML resource. <br /><br />"
"android.view.View.getWidth () "," Return the width of the your view. <br /><br />"
"android.view.View.setMinimumWidth (int minWidth) "," Sets the minimum width of the view. <br /><br />"
"android.view.View.isNestedScrollingEnabled () "," Returns true if nested scrolling is enabled for this view. <br /><br />"
"android.view.View.dispatchKeyEvent (KeyEvent event) "," Dispatch a key event to the next view on the focus path. <br /><br />"
"android.view.View.getDrawingCache (boolean autoScale) "," Returns the bitmap in which this view drawing is cached. <br /><br />"
"android.view.View.getScaleX () "," The amount that the view is scaled in x around the pivot point, as a proportion of the view's unscaled width. <br /><br />"
"android.view.View.setSoundEffectsEnabled (boolean soundEffectsEnabled) "," Set whether this view should have sound effects enabled for events such as clicking and touching. <br /><br />"
"android.view.View.removeCallbacks (Runnable action) "," Removes the specified Runnable from the message queue. <br /><br />"
"android.view.View.setActivated (boolean activated) "," Changes the activated state of this view. <br /><br />"
"android.view.View.getStateListAnimator () "," Returns the current StateListAnimator if exists. <br /><br />"
"android.view.View.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.view.View.getBackground () "," Gets the background drawable <br /><br />"
"android.view.View.bringToFront () "," Change the view's z order in the tree, so it's on top of other sibling views. <br /><br />"
"android.view.View.setCameraDistance (float distance)   Sets the distance along the Z axis  (orthogonal to the X/Y plane on which views are drawn) "," Sets the distance along the Z axis (orthogonal to the X/Y plane on which views are drawn) from the camera to this view. <br /><br />"
"android.view.View.getMeasuredHeight ()   Like getMeasuredHeightAndState (), but only returns the raw width component  (that is the result is masked by MEASURED_SIZE_MASK) "," Like getMeasuredHeightAndState(), but only returns the raw width component (that is the result is masked by MEASURED_SIZE_MASK). <br /><br />"
"android.view.View.requestFocusFromTouch () "," Call this to try to give focus to a specific view or to one of its descendants. <br /><br />"
"android.view.View.isVerticalFadingEdgeEnabled () "," Indicate whether the vertical edges are faded when the view is scrolled horizontally. <br /><br />"
"android.view.View.getScrollY () "," Return the scrolled top position of this view. <br /><br />"
"android.view.View.getLayerType () "," Indicates what type of layer is currently associated with this view. <br /><br />"
"android.view.View.requestRectangleOnScreen (Rect rectangle) "," Request that a rectangle of this view be visible on the screen, scrolling if necessary just enough. <br /><br />"
"android.view.View.onHoverEvent (MotionEvent event) "," Implement this method to handle hover events. <br /><br />"
"android.view.View.getApplicationWindowToken () "," Retrieve a unique token identifying the top-level 'real' window of the window that this view is attached to. <br /><br />"
"android.view.View.getLabelFor () "," Gets the id of a view for which this view serves as a label for accessibility purposes. <br /><br />"
"android.view.View.setTranslationZ (float translationZ)   Sets the depth location of this view relative to its "," Sets the depth location of this view relative to its elevation. <br /><br />"
"android.view.View.offsetTopAndBottom (int offset) "," Offset this view's vertical location by the specified number of pixels. <br /><br />"
"android.view.View.isLayoutDirectionResolved () "," no description <br /><br />"
"android.view.View.onWindowFocusChanged (boolean hasWindowFocus) "," Called when the window containing this view gains or loses focus. <br /><br />"
"android.view.View.clearAnimation () "," Cancels any animations for this view. <br /><br />"
"android.view.View.resolveSizeAndState (int size, int measureSpec, int childMeasuredState) "," Utility to reconcile a desired size and state, with constraints imposed by a MeasureSpec. <br /><br />"
"android.view.View.getMeasuredWidth ()   Like getMeasuredWidthAndState (), but only returns the raw width component  (that is the result is masked by MEASURED_SIZE_MASK) "," Like getMeasuredWidthAndState(), but only returns the raw width component (that is the result is masked by MEASURED_SIZE_MASK). <br /><br />"
"android.view.View.performClick () "," Call this view's OnClickListener, if it is defined. <br /><br />"
"android.view.View.isScrollbarFadingEnabled () "," Returns true if scrollbars will fade when this view is not scrolling <br /><br />"
"android.view.View.drawableHotspotChanged (float x, float y) "," This function is called whenever the view hotspot changes and needs to be propagated to drawables or child views managed by the view. <br /><br />"
"android.view.View.buildDrawingCache ()   Calling this method is equivalent to calling buildDrawingCache (false) "," Calling this method is equivalent to calling buildDrawingCache(false). <br /><br />"
"android.view.View.getDrawingTime () "," Return the time at which the drawing of the view hierarchy started. <br /><br />"
"android.view.View.setBottom (int bottom) "," Sets the bottom position of this view relative to its parent. <br /><br />"
"android.view.View.setSystemUiVisibility (int visibility) "," Request that the visibility of the status bar or other screen/window decorations be changed. <br /><br />"
"android.view.View.getLayoutParams () "," Get the LayoutParams associated with this view. <br /><br />"
"android.view.View.animate () "," This method returns a ViewPropertyAnimator object, which can be used to animate specific properties on this View. <br /><br />"
"android.view.View.onGenericMotionEvent (MotionEvent event) "," Implement this method to handle generic motion events. <br /><br />"
"android.view.View.isSaveFromParentEnabled () "," Indicates whether the entire hierarchy under this view will save its state when a state saving traversal occurs from its parent. <br /><br />"
"android.view.View.canResolveTextDirection () "," Check if text direction resolution can be done. <br /><br />"
"android.view.View.setImportantForAccessibility (int mode) "," Sets how to determine whether this view is important for accessibility which is if it fires accessibility events and if it is reported to accessibility services that query the screen. <br /><br />"
"android.view.View.getScrollBarStyle () "," Returns the current scrollbar style. <br /><br />"
"android.view.View.isDuplicateParentStateEnabled () "," Indicates whether this duplicates its drawable state from its parent. <br /><br />"
"android.view.View.setFitsSystemWindows (boolean fitSystemWindows)   Sets whether or not this view should account for system screen decorations such as the status bar and inset its content; that is, controlling whether the default implementation of fitSystemWindows (Rect) "," Sets whether or not this view should account for system screen decorations such as the status bar and inset its content; that is, controlling whether the default implementation of fitSystemWindows(Rect) will be executed. <br /><br />"
"android.view.View.setBackground (Drawable background) "," Set the background to a given Drawable, or remove the background. <br /><br />"
"android.view.View.setFilterTouchesWhenObscured (boolean enabled) "," Sets whether the framework should discard touches when the view's window is obscured by another visible window. <br /><br />"
"android.view.View.setElevation (float elevation) "," Sets the base elevation of this view, in pixels. <br /><br />"
"android.view.View.setTextDirection (int textDirection) "," Set the text direction. <br /><br />"
"android.view.View.setTransitionName (String transitionName) "," Sets the name of the View to be used to identify Views in Transitions. <br /><br />"
"android.view.View.dispatchDisplayHint (int hint) "," Dispatch a hint about whether this view is displayed. <br /><br />"
"android.view.View.setBackgroundDrawable (Drawable background)    This method was deprecated in API level 16. use setBackground (Drawable) "," This method was deprecated in API level 16. use setBackground(Drawable) instead <br /><br />"
"android.view.View.invalidateOutline () "," Called to rebuild this View's Outline from its outline provider <br /><br />"
"android.view.View.onTouchEvent (MotionEvent event) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.view.View.postDelayed (Runnable action, long delayMillis) "," Causes the Runnable to be added to the message queue, to be run after the specified amount of time elapses. <br /><br />"
"android.view.View.setDuplicateParentStateEnabled (boolean enabled) "," Enables or disables the duplication of the parent's state into this view. <br /><br />"
"android.view.View.onStartTemporaryDetach ()   This is called when a container is going to temporarily detach a child, with "," This is called when a container is going to temporarily detach a child, with ViewGroup.detachViewFromParent. <br /><br />"
"android.view.View.setBackgroundColor (int color) "," Sets the background color for this view. <br /><br />"
"android.view.View.getTextAlignment () "," Return the resolved text alignment. <br /><br />"
"android.view.View.requestFocus (int direction, Rect previouslyFocusedRect) "," Call this to try to give focus to a specific view or to one of its descendants and give it hints about the direction and a specific rectangle that the focus is coming from. <br /><br />"
"android.view.View.isInLayout () "," Returns whether the view hierarchy is currently undergoing a layout pass. <br /><br />"
"android.view.View.setPaddingRelative (int start, int top, int end, int bottom) "," Sets the relative padding. <br /><br />"
"android.view.View.resolveSize (int size, int measureSpec)   Version of resolveSizeAndState (int, int, int) "," Version of resolveSizeAndState(int, int, int) returning only the MEASURED_SIZE_MASK bits of the result. <br /><br />"
"android.view.View.getWindowVisibleDisplayFrame (Rect outRect) "," Retrieve the overall visible display size in which the window this view is attached to has been positioned in. <br /><br />"
"android.view.View.draw (Canvas canvas)   Manually render this view  (and all of its children) "," Manually render this view (and all of its children) to the given Canvas. <br /><br />"
"android.view.View.getScrollBarFadeDuration () "," Returns the scrollbar fade duration. <br /><br />"
"android.view.View.setLayoutDirection (int layoutDirection) "," Set the layout direction for this view. <br /><br />"
"android.view.View.getScaleY () "," The amount that the view is scaled in y around the pivot point, as a proportion of the view's unscaled height. <br /><br />"
"android.view.View.findViewById (int id) "," Look for a child view with the given id. <br /><br />"
"android.view.View.onKeyPreIme (int keyCode, KeyEvent event) "," Handle a key event before it is processed by any input method associated with the view hierarchy. <br /><br />"
"android.view.View.isHardwareAccelerated () "," Indicates whether this view is attached to a hardware accelerated window or not. <br /><br />"
"android.view.View.getTextDirection () "," Return the resolved text direction. <br /><br />"
"android.view.View.getSystemUiVisibility ()   Returns the last setSystemUiVisibility (int) "," Returns the last setSystemUiVisibility(int) that this view has requested. <br /><br />"
"android.view.View.getResources () "," Returns the resources associated with this view. <br /><br />"
"android.view.View.isFocused () "," Returns true if this view has focus <br /><br />"
"android.view.View.dispatchApplyWindowInsets (WindowInsets insets) "," Request to apply the given window insets to this view or another view in its subtree. <br /><br />"
"android.view.View.setHasTransientState (boolean hasTransientState) "," Set whether this view is currently tracking transient state that the framework should attempt to preserve when possible. <br /><br />"
"android.view.View.getHitRect (Rect outRect) "," Hit rectangle in parent's coordinates <br /><br />"
"android.view.View.getPivotY ()   The y location of the point around which the view is rotated and "," The y location of the point around which the view is rotated and scaled. <br /><br />"
"android.view.View.dispatchTrackballEvent (MotionEvent event) "," Pass a trackball motion event down to the focused view. <br /><br />"
"android.view.View.removeOnLayoutChangeListener (View.OnLayoutChangeListener listener) "," Remove a listener for layout changes. <br /><br />"
"android.view.View.getPaddingTop () "," Returns the top padding of this view. <br /><br />"
"android.view.View.postInvalidateDelayed (long delayMilliseconds) "," Cause an invalidate to happen on a subsequent cycle through the event loop. <br /><br />"
"android.view.View.dispatchKeyShortcutEvent (KeyEvent event) "," Dispatches a key shortcut event. <br /><br />"
"android.view.View.post (Runnable action) "," Causes the Runnable to be added to the message queue. <br /><br />"
"android.view.View.getVerticalScrollbarPosition () "," no description <br /><br />"
"android.view.View.onPopulateAccessibilityEvent (AccessibilityEvent event)   Called from dispatchPopulateAccessibilityEvent (AccessibilityEvent) "," Called from dispatchPopulateAccessibilityEvent(AccessibilityEvent) giving a chance to this View to populate the accessibility event with its text content. <br /><br />"
"android.view.View.getImportantForAccessibility () "," Gets the mode for determining whether this View is important for accessibility which is if it fires accessibility events and if it is reported to accessibility services that query the screen. <br /><br />"
"android.view.View.setTextAlignment (int textAlignment) "," Set the text alignment. <br /><br />"
"android.view.View.setVerticalScrollbarPosition (int position) "," Set the position of the vertical scroll bar. <br /><br />"
"android.view.View.getPivotX ()   The x location of the point around which the view is rotated and "," The x location of the point around which the view is rotated and scaled. <br /><br />"
"android.view.View.invalidate (int l, int t, int r, int b)   Mark the area defined by the rect  (l,t,r,b) "," Mark the area defined by the rect (l,t,r,b) as needing to be drawn. <br /><br />"
"android.view.View.setHovered (boolean hovered) "," Sets whether the view is currently hovered. <br /><br />"
"android.view.View.cancelLongPress () "," Cancels a pending long press. <br /><br />"
"android.view.View.isSoundEffectsEnabled () "," no description <br /><br />"
"android.view.View.setRotation (float rotation) "," Sets the degrees that the view is rotated around the pivot point. <br /><br />"
"android.view.View.getDrawingCacheBackgroundColor () "," no description <br /><br />"
"android.view.View.setTag (int key, Object tag) "," Sets a tag associated with this view and a key. <br /><br />"
"android.view.View.invalidate (Rect dirty) "," Mark the area defined by dirty as needing to be drawn. <br /><br />"
"android.view.View.setY (float y) "," Sets the visual y position of this view, in pixels. <br /><br />"
"android.view.View.getPaddingLeft () "," Returns the left padding of this view. <br /><br />"
"android.view.View.getLocationOnScreen (int[] location) "," Computes the coordinates of this view on the screen. <br /><br />"
"android.view.View.setTouchDelegate (TouchDelegate delegate) "," Sets the TouchDelegate for this View. <br /><br />"
"android.view.View.getFocusables (int direction) "," Find and return all focusable views that are descendants of this view, possibly including this view if it is focusable itself. <br /><br />"
"android.view.View.isFocusableInTouchMode () "," When a view is focusable, it may not want to take focus when in touch mode. <br /><br />"
"android.view.View.getPaddingStart () "," Returns the start padding of this view depending on its resolved layout direction. <br /><br />"
"android.view.View.removeOnAttachStateChangeListener (View.OnAttachStateChangeListener listener) "," Remove a listener for attach state changes. <br /><br />"
"android.view.View.getTag (int key) "," Returns the tag associated with this view and the specified key. <br /><br />"
"android.view.View.getLocalVisibleRect (Rect r) "," no description <br /><br />"
"android.view.View.startDrag (ClipData data, View.DragShadowBuilder shadowBuilder, Object myLocalState, int flags) "," Starts a drag and drop operation. <br /><br />"
"android.view.View.getTranslationZ ()   The depth location of this view relative to its "," The depth location of this view relative to its elevation. <br /><br />"
"android.view.View.getFilterTouchesWhenObscured () "," Gets whether the framework should discard touches when the view's window is obscured by another visible window. <br /><br />"
"android.view.View.getOnFocusChangeListener () "," Returns the focus-change callback registered for this view. <br /><br />"
"android.view.View.getHandler () "," no description <br /><br />"
"android.view.View.setPressed (boolean pressed) "," Sets the pressed state for this view. <br /><br />"
"android.view.View.setKeepScreenOn (boolean keepScreenOn) "," Controls whether the screen should remain on, modifying the value of KEEP_SCREEN_ON. <br /><br />"
"android.view.View.setLayoutParams (ViewGroup.LayoutParams params) "," Set the layout parameters associated with this view. <br /><br />"
"android.view.View.setNextFocusLeftId (int nextFocusLeftId) "," Sets the id of the view to use when the next focus is FOCUS_LEFT. <br /><br />"
"android.view.View.setAlpha (float alpha) "," Sets the opacity of the view. <br /><br />"
"android.view.View.setDrawingCacheQuality (int quality) "," Set the drawing cache quality of this view. <br /><br />"
"android.view.View.setAnimation (Animation animation) "," Sets the next animation to play for this view. <br /><br />"
"android.view.View.hasTransientState () "," Indicates whether the view is currently tracking transient state that the app should not need to concern itself with saving and restoring, but that the framework should take special note to preserve when possible. <br /><br />"
"android.view.View.requestFitSystemWindows ()    This method was deprecated in API level 20. Use requestApplyInsets () "," This method was deprecated in API level 20. Use requestApplyInsets() for newer platform versions. <br /><br />"
"android.view.View.setOverScrollMode (int overScrollMode) "," Set the over-scroll mode for this view. <br /><br />"
"android.view.View.setTranslationY (float translationY)   Sets the vertical location of this view relative to its "," Sets the vertical location of this view relative to its top position. <br /><br />"
"android.view.View.setScrollbarFadingEnabled (boolean fadeScrollbars) "," Define whether scrollbars will fade when the view is not scrolling. <br /><br />"
"android.view.View.dispatchSystemUiVisibilityChanged (int visibility)   Dispatch callbacks to setOnSystemUiVisibilityChangeListener (View.OnSystemUiVisibilityChangeListener) "," Dispatch callbacks to setOnSystemUiVisibilityChangeListener(View.OnSystemUiVisibilityChangeListener) down the view hierarchy. <br /><br />"
"android.view.View.getTranslationY ()   The vertical location of this view relative to its "," The vertical location of this view relative to its top position. <br /><br />"
"android.view.View.setOnSystemUiVisibilityChangeListener (View.OnSystemUiVisibilityChangeListener l) "," Set a listener to receive callbacks when the visibility of the system bar changes. <br /><br />"
"android.view.View.setVerticalFadingEdgeEnabled (boolean verticalFadingEdgeEnabled) "," Define whether the vertical edges should be faded when this view is scrolled vertically. <br /><br />"
"android.view.View.setAccessibilityLiveRegion (int mode) "," Sets the live region mode for this view. <br /><br />"
"android.view.View.setSaveFromParentEnabled (boolean enabled) "," Controls whether the entire hierarchy under this view will save its state when a state saving traversal occurs from its parent. <br /><br />"
"android.view.View.isDirty () "," True if this view has changed since the last time being drawn. <br /><br />"
"android.view.View.setX (float x) "," Sets the visual x position of this view, in pixels. <br /><br />"
"android.view.View.willNotCacheDrawing () "," Returns whether or not this View can cache its drawing or not. <br /><br />"
"android.view.View.addFocusables (ArrayList< View> views, int direction, int focusableMode)   Adds any focusable views that are descendants of this view  (possibly including this view if it is focusable itself) "," Adds any focusable views that are descendants of this view (possibly including this view if it is focusable itself) to views. <br /><br />"
"android.view.View.setBackgroundTintMode (PorterDuff.Mode tintMode)   Specifies the blending mode used to apply the tint specified by setBackgroundTintList (ColorStateList) "," Specifies the blending mode used to apply the tint specified by setBackgroundTintList(ColorStateList)} to the background drawable. <br /><br />"
"android.view.View.onFinishTemporaryDetach ()   Called after onStartTemporaryDetach () "," Called after onStartTemporaryDetach() when the container is done changing the view. <br /><br />"
"android.view.View.setPivotY (float pivotY)   Sets the y location of the point around which the view is rotated and "," Sets the y location of the point around which the view is rotated and scaled. <br /><br />"
"android.view.View.onDragEvent (DragEvent event)   Handles drag events sent by the system following a call to startDrag () "," Handles drag events sent by the system following a call to startDrag(). <br /><br />"
"android.view.View.getRotation () "," The degrees that the view is rotated around the pivot point. <br /><br />"
"android.view.View.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.view.View.isScrollContainer () "," Indicates whether this view is one of the set of scrollable containers in its window. <br /><br />"
"android.view.View.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.view.View.sendAccessibilityEvent (int eventType) "," Sends an accessibility event of the given type. <br /><br />"
"android.view.View.clearFocus () "," Called when this view wants to give up focus. <br /><br />"
"android.view.View.setClipToOutline (boolean clipToOutline) "," Sets whether the View's Outline should be used to clip the contents of the View. <br /><br />"
"android.view.View.setPivotX (float pivotX)   Sets the x location of the point around which the view is rotated and "," Sets the x location of the point around which the view is rotated and scaled. <br /><br />"
"android.view.View.getWindowToken () "," Retrieve a unique token identifying the window this view is attached to. <br /><br />"
"android.view.View.forceLayout () "," Forces this view to be laid out during the next layout pass. <br /><br />"
"android.view.View.dispatchConfigurationChanged (Configuration newConfig) "," Dispatch a notification about a resource configuration change down the view hierarchy. <br /><br />"
"android.view.View.restoreHierarchyState (SparseArray< Parcelable> container) "," Restore this view hierarchy's frozen state from the given container. <br /><br />"
"android.view.View.hasNestedScrollingParent () "," Returns true if this view has a nested scrolling parent. <br /><br />"
"android.view.View.isPressed () "," Indicates whether the view is currently in pressed state. <br /><br />"
"android.view.View.dispatchWindowVisibilityChanged (int visibility) "," Dispatch a window visibility change down the view hierarchy. <br /><br />"
"android.view.View.setFocusable (boolean focusable) "," Set whether this view can receive the focus. <br /><br />"
"android.view.View.getTop () "," Top position of this view relative to its parent. <br /><br />"
"android.view.View.invalidate () "," Invalidate the whole view. <br /><br />"
"android.view.View.hasFocusable ()   Returns true if this view is focusable or if it contains a reachable View for which hasFocusable () "," Returns true if this view is focusable or if it contains a reachable View for which hasFocusable() returns true. <br /><br />"
"android.view.View.postInvalidateOnAnimation () "," Cause an invalidate to happen on the next animation time step, typically the next display frame. <br /><br />"
"android.view.View.getTag () "," Returns this view's tag. <br /><br />"
"android.view.View.isShown () "," Returns the visibility of this view and all of its ancestors <br /><br />"
"android.view.View.postOnAnimation (Runnable action) "," Causes the Runnable to execute on the next animation time step. <br /><br />"
"android.view.View.onCancelPendingInputEvents ()   Called as the result of a call to cancelPendingInputEvents () "," Called as the result of a call to cancelPendingInputEvents() on this view or a parent view. <br /><br />"
"android.view.View.startNestedScroll (int axes) "," Begin a nestable scroll operation along the given axes. <br /><br />"
"android.view.View.setMinimumHeight (int minHeight) "," Sets the minimum height of the view. <br /><br />"
"android.view.View.getOutlineProvider () "," Returns the current ViewOutlineProvider of the view, which generates the Outline that defines the shape of the shadow it casts, and enables outline clipping. <br /><br />"
"android.view.View.focusSearch (int direction) "," Find the nearest view in the specified direction that can take focus. <br /><br />"
"android.view.View.onCreateInputConnection (EditorInfo outAttrs) "," Create a new InputConnection for an InputMethod to interact with the view. <br /><br />"
"android.view.View.onKeyLongPress (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyLongPress (): always returns false  (doesn't handle the event) "," Default implementation of KeyEvent.Callback.onKeyLongPress(): always returns false (doesn't handle the event). <br /><br />"
"android.view.View.callOnClick () "," Directly call any attached OnClickListener. <br /><br />"
"android.view.View.getLayoutDirection () "," Returns the resolved layout direction for this view. <br /><br />"
"android.view.View.isHapticFeedbackEnabled () "," no description <br /><br />"
"android.view.View.getMatrix () "," The transform matrix of this view, which is calculated based on the current rotation, scale, and pivot properties. <br /><br />"
"android.view.View.setTag (Object tag) "," Sets the tag associated with this view. <br /><br />"
"android.view.View.setScrollBarFadeDuration (int scrollBarFadeDuration) "," Define the scrollbar fade duration. <br /><br />"
"android.view.View.dispatchWindowSystemUiVisiblityChanged (int visible)   Dispatch callbacks to onWindowSystemUiVisibilityChanged (int) "," Dispatch callbacks to onWindowSystemUiVisibilityChanged(int) down the view hierarchy. <br /><br />"
"android.view.View.performLongClick () "," Call this view's OnLongClickListener, if it is defined. <br /><br />"
"android.view.View.announceForAccessibility (CharSequence text) "," Convenience method for sending a TYPE_ANNOUNCEMENT AccessibilityEvent to make an announcement which is related to some sort of a context change for which none of the events representing UI transitions is a good fit. <br /><br />"
"android.view.View.setTranslationX (float translationX)   Sets the horizontal location of this view relative to its "," Sets the horizontal location of this view relative to its left position. <br /><br />"
"android.view.View.getMinimumHeight () "," Returns the minimum height of the view. <br /><br />"
"android.view.View.measure (int widthMeasureSpec, int heightMeasureSpec) "," This is called to find out how big a view should be. <br /><br />"
"android.view.View.setStateListAnimator (StateListAnimator stateListAnimator) "," Attaches the provided StateListAnimator to this View. <br /><br />"
"android.view.View.invalidateDrawable (Drawable drawable) "," Invalidates the specified Drawable. <br /><br />"
"android.view.View.getGlobalVisibleRect (Rect r) "," no description <br /><br />"
"android.view.View.setOnDragListener (View.OnDragListener l) "," Register a drag event listener callback object for this View. <br /><br />"
"android.view.View.getPaddingBottom () "," Returns the bottom padding of this view. <br /><br />"
"android.view.View.getOverScrollMode () "," Returns the over-scroll mode for this view. <br /><br />"
"android.view.View.getFitsSystemWindows ()   Check for state of setFitsSystemWindows (boolean) "," Check for state of setFitsSystemWindows(boolean). <br /><br />"
"android.view.View.getRootView () "," Finds the topmost view in the current view hierarchy. <br /><br />"
"android.view.View.setScrollBarStyle (int style) "," Specify the style of the scrollbars. <br /><br />"
"android.view.View.setPadding (int left, int top, int right, int bottom) "," Sets the padding. <br /><br />"
"android.view.View.getMinimumWidth () "," Returns the minimum width of the view. <br /><br />"
"android.view.View.addOnAttachStateChangeListener (View.OnAttachStateChangeListener listener) "," Add a listener for attach state changes. <br /><br />"
"android.view.View.setVisibility (int visibility) "," Set the enabled state of this view. <br /><br />"
"android.view.View.setOnKeyListener (View.OnKeyListener l) "," Register a callback to be invoked when a hardware key is pressed in this view. <br /><br />"
"android.view.View.dispatchGenericMotionEvent (MotionEvent event) "," Dispatch a generic motion event. <br /><br />"
"android.view.View.getAccessibilityLiveRegion () "," Gets the live region mode for this View. <br /><br />"
"android.view.View.getX () "," The visual x position of this view, in pixels. <br /><br />"
"android.view.View.startAnimation (Animation animation) "," Start the specified animation now. <br /><br />"
"android.view.View.setNextFocusDownId (int nextFocusDownId) "," Sets the id of the view to use when the next focus is FOCUS_DOWN. <br /><br />"
"android.view.View.addChildrenForAccessibility (ArrayList< View> children) "," Adds the children of a given View for accessibility. <br /><br />"
"android.view.View.setOnHoverListener (View.OnHoverListener l) "," Register a callback to be invoked when a hover event is sent to this view. <br /><br />"
"android.view.View.postInvalidateDelayed (long delayMilliseconds, int left, int top, int right, int bottom) "," Cause an invalidate of the specified area to happen on a subsequent cycle through the event loop. <br /><br />"
"android.view.View.setWillNotCacheDrawing (boolean willNotCacheDrawing) "," When a View's drawing cache is enabled, drawing is redirected to an offscreen bitmap. <br /><br />"
"android.view.View.isSaveEnabled ()   Indicates whether this view will save its state  (that is, whether its onSaveInstanceState () method will be called) "," Indicates whether this view will save its state (that is, whether its onSaveInstanceState() method will be called). <br /><br />"
"android.view.View.getY () "," The visual y position of this view, in pixels. <br /><br />"
"android.view.View.isInTouchMode () "," Returns whether the device is currently in touch mode. <br /><br />"
"android.view.View.dispatchNestedFling (float velocityX, float velocityY, boolean consumed) "," Dispatch a fling to a nested scrolling parent. <br /><br />"
"android.view.View.buildLayer () "," Forces this view's layer to be created and this view to be rendered into its layer. <br /><br />"
"android.view.View.canScrollVertically (int direction) "," Check if this view can be scrolled vertically in a certain direction. <br /><br />"
"android.view.View.setZ (float z) "," Sets the visual z position of this view, in pixels. <br /><br />"
"android.view.View.willNotDraw () "," Returns whether or not this View draws on its own. <br /><br />"
"android.view.View.getVerticalFadingEdgeLength () "," Returns the size of the vertical faded edges used to indicate that more content in this view is visible. <br /><br />"
"android.view.View.canResolveTextAlignment () "," Check if text alignment resolution can be done. <br /><br />"
"android.view.View.isAccessibilityFocused () "," Returns whether this View is accessibility focused. <br /><br />"
"android.view.View.getTouchDelegate () "," Gets the TouchDelegate for this View. <br /><br />"
"android.view.View.getBottom () "," Bottom position of this view relative to its parent. <br /><br />"
"android.view.View.getAlpha () "," The opacity of the view. <br /><br />"
"android.view.View.getContext () "," Returns the context the view is running in, through which it can access the current theme, resources, etc. <br /><br />"
"android.view.View.canResolveLayoutDirection () "," Check if layout direction resolution can be done. <br /><br />"
"android.view.View.requestLayout () "," Call this when something has changed which has invalidated the layout of this view. <br /><br />"
"android.view.View.onKeyDown (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyDown () "," Default implementation of KeyEvent.Callback.onKeyDown(): perform press of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released, if the view is enabled and clickable. <br /><br />"
"android.view.View.setFocusableInTouchMode (boolean focusableInTouchMode) "," Set whether this view can receive focus while in touch mode. <br /><br />"
"android.view.View.postInvalidate (int left, int top, int right, int bottom) "," Cause an invalidate of the specified area to happen on a subsequent cycle through the event loop. <br /><br />"
"android.view.View.postInvalidate () "," Cause an invalidate to happen on a subsequent cycle through the event loop. <br /><br />"
"android.view.View.buildDrawingCache (boolean autoScale) "," Forces the drawing cache to be built if the drawing cache is invalid. <br /><br />"
"android.view.View.combineMeasuredStates (int curState, int newState)   Merge two states as returned by getMeasuredState () "," Merge two states as returned by getMeasuredState(). <br /><br />"
"android.view.View.getContentDescription () "," Gets the View description. <br /><br />"
"android.view.View.hasWindowFocus () "," Returns true if this view is in a window that currently has window focus. <br /><br />"
"android.view.View.setHorizontalScrollBarEnabled (boolean horizontalScrollBarEnabled) "," Define whether the horizontal scrollbar should be drawn or not. <br /><br />"
"android.view.View.postOnAnimationDelayed (Runnable action, long delayMillis) "," Causes the Runnable to execute on the next animation time step, after the specified amount of time elapses. <br /><br />"
"android.view.View.destroyDrawingCache () "," Frees the resources used by the drawing cache. <br /><br />"
"android.view.View.dispatchPopulateAccessibilityEvent (AccessibilityEvent event) "," Dispatches an AccessibilityEvent to the View first and then to its children for adding their text content to the event. <br /><br />"
"android.view.View.getCameraDistance () "," Gets the distance along the Z axis from the camera to this view. <br /><br />"
"android.view.View.requestApplyInsets ()   Ask that a new dispatch of onApplyWindowInsets (WindowInsets) "," Ask that a new dispatch of onApplyWindowInsets(WindowInsets) be performed. <br /><br />"
"android.view.View.dispatchNestedPreFling (float velocityX, float velocityY) "," Dispatch a fling to a nested scrolling parent before it is processed by this view. <br /><br />"
"android.view.View.isTextDirectionResolved () "," no description <br /><br />"
"android.view.View.scheduleDrawable (Drawable who, Runnable what, long when) "," Schedules an action on a drawable to occur at a specified time. <br /><br />"
"android.view.View.canScrollHorizontally (int direction) "," Check if this view can be scrolled horizontally in a certain direction. <br /><br />"
"android.view.View.isOpaque () "," Indicates whether this View is opaque. <br /><br />"
"android.view.View.setScrollBarSize (int scrollBarSize) "," Define the scrollbar size. <br /><br />"
"android.view.View.setScaleX (float scaleX) "," Sets the amount that the view is scaled in x around the pivot point, as a proportion of the view's unscaled width. <br /><br />"
"android.view.View.getDisplay () "," Gets the logical display to which the view's window has been attached. <br /><br />"
"android.view.View.getLocationInWindow (int[] location) "," Computes the coordinates of this view in its window. <br /><br />"
"android.view.View.setNextFocusRightId (int nextFocusRightId) "," Sets the id of the view to use when the next focus is FOCUS_RIGHT. <br /><br />"
"android.view.View.getPaddingEnd () "," Returns the end padding of this view depending on its resolved layout direction. <br /><br />"
"android.view.View.setScrollY (int value) "," Set the vertical scrolled position of your view. <br /><br />"
"android.view.View.setLabelFor (int id) "," Sets the id of a view for which this view serves as a label for accessibility purposes. <br /><br />"
"android.view.View.offsetLeftAndRight (int offset) "," Offset this view's horizontal location by the specified amount of pixels. <br /><br />"
"android.view.View.setScrollContainer (boolean isScrollContainer) "," Change whether this view is one of the set of scrollable containers in its window. <br /><br />"
"android.view.View.setHorizontalFadingEdgeEnabled (boolean horizontalFadingEdgeEnabled) "," Define whether the horizontal edges should be faded when this view is scrolled horizontally. <br /><br />"
"android.view.View.scrollTo (int x, int y) "," Set the scrolled position of your view. <br /><br />"
"android.view.View.onKeyUp (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyUp () "," Default implementation of KeyEvent.Callback.onKeyUp(): perform clicking of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released. <br /><br />"
"android.view.View.getBackgroundTintMode () "," Return the blending mode used to apply the tint to the background drawable, if specified. <br /><br />"
"android.view.View.getNextFocusLeftId () "," Gets the id of the view to use when the next focus is FOCUS_LEFT. <br /><br />"
"android.view.View.setContentDescription (CharSequence contentDescription) "," Sets the View description. <br /><br />"
"android.view.View.getWindowSystemUiVisibility () "," Returns the current system UI visibility that is currently set for the entire window. <br /><br />"
"android.view.View.setLayerPaint (Paint paint)   Updates the Paint object used with the current layer  (used only if the current layer type is not set to LAYER_TYPE_NONE) "," Updates the Paint object used with the current layer (used only if the current layer type is not set to LAYER_TYPE_NONE). <br /><br />"
"android.view.View.setVerticalScrollBarEnabled (boolean verticalScrollBarEnabled) "," Define whether the vertical scrollbar should be drawn or not. <br /><br />"
"android.view.View.onScreenStateChanged (int screenState) "," This method is called whenever the state of the screen this view is attached to changes. <br /><br />"
"android.view.View.addFocusables (ArrayList< View> views, int direction)   Add any focusable views that are descendants of this view  (possibly including this view if it is focusable itself) "," Add any focusable views that are descendants of this view (possibly including this view if it is focusable itself) to views. <br /><br />"
"android.view.View.computeSystemWindowInsets (WindowInsets in, Rect outLocalInsets) "," Compute insets that should be consumed by this view and the ones that should propagate to those under it. <br /><br />"
"android.view.View.setDrawingCacheBackgroundColor (int color) "," Setting a solid background color for the drawing cache's bitmaps will improve performance and memory usage. <br /><br />"
"android.view.View.setBackgroundResource (int resid) "," Set the background to a given resource. <br /><br />"
"android.view.View.setTop (int top) "," Sets the top position of this view relative to its parent. <br /><br />"
"android.view.View.getDrawingRect (Rect outRect) "," Return the visible drawing bounds of your view. <br /><br />"
"android.view.View.onFilterTouchEventForSecurity (MotionEvent event) "," Filter the touch event to apply security policies. <br /><br />"
"android.view.View.MeasureSpec.getSize (int measureSpec) "," Extracts the size from the supplied measure specification. <br /><br />"
"android.view.View.MeasureSpec.toString (int measureSpec) "," Returns a String representation of the specified measure specification. <br /><br />"
"android.view.View.MeasureSpec.getMode (int measureSpec) "," Extracts the mode from the supplied measure specification. <br /><br />"
"android.view.View.MeasureSpec.makeMeasureSpec (int size, int mode) "," Creates a measure specification based on the supplied size and mode. <br /><br />"
"android.view.View.OnApplyWindowInsetsListener.onApplyWindowInsets (View v, WindowInsets insets)   When set on a View, this listener method will be called instead of the view's own "," When set on a View, this listener method will be called instead of the view's own onApplyWindowInsets method. <br /><br />"
"android.view.View.OnAttachStateChangeListener.onViewAttachedToWindow (View v) "," Called when the view is attached to a window. <br /><br />"
"android.view.View.OnAttachStateChangeListener.onViewDetachedFromWindow (View v) "," Called when the view is detached from a window. <br /><br />"
"android.view.View.OnClickListener.onClick (View v) "," Called when a view has been clicked. <br /><br />"
"android.view.View.OnCreateContextMenuListener.onCreateContextMenu (ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) "," Called when the context menu for this view is being built. <br /><br />"
"android.view.View.OnDragListener.onDrag (View v, DragEvent event) "," Called when a drag event is dispatched to a view. <br /><br />"
"android.view.View.OnFocusChangeListener.onFocusChange (View v, boolean hasFocus) "," Called when the focus state of a view has changed. <br /><br />"
"android.view.View.OnGenericMotionListener.onGenericMotion (View v, MotionEvent event) "," Called when a generic motion event is dispatched to a view. <br /><br />"
"android.view.View.OnHoverListener.onHover (View v, MotionEvent event) "," Called when a hover event is dispatched to a view. <br /><br />"
"android.view.View.OnKeyListener.onKey (View v, int keyCode, KeyEvent event) "," Called when a hardware key is dispatched to a view. <br /><br />"
"android.view.View.OnLayoutChangeListener.onLayoutChange (View v, int left, int top, int right, int bottom, int oldLeft, int oldTop, int oldRight, int oldBottom) "," Called when the layout bounds of a view changes due to layout processing. <br /><br />"
"android.view.View.OnLongClickListener.onLongClick (View v) "," Called when a view has been clicked and held. <br /><br />"
"android.view.View.OnSystemUiVisibilityChangeListener.onSystemUiVisibilityChange (int visibility)   Called when the status bar changes visibility because of a call to setSystemUiVisibility (int) "," Called when the status bar changes visibility because of a call to setSystemUiVisibility(int). <br /><br />"
"android.view.View.OnTouchListener.onTouch (View v, MotionEvent event) "," Called when a touch event is dispatched to a view. <br /><br />"
"android.view.ViewAnimationUtils.createCircularReveal (View view, int centerX, int centerY, float startRadius, float endRadius) "," Returns an Animator which can animate a clipping circle. <br /><br />"
"android.view.ViewConfiguration.getScaledMaximumDrawingCacheSize () "," The maximum drawing cache size expressed in bytes. <br /><br />"
"android.view.ViewConfiguration.getScrollFriction () "," The amount of friction applied to scrolls and flings. <br /><br />"
"android.view.ViewConfiguration.getScaledPagingTouchSlop () "," no description <br /><br />"
"android.view.ViewConfiguration.getJumpTapTimeout () "," no description <br /><br />"
"android.view.ViewConfiguration.getMaximumDrawingCacheSize ()    This method was deprecated in API level 3. Use getScaledMaximumDrawingCacheSize () "," This method was deprecated in API level 3. Use getScaledMaximumDrawingCacheSize() instead. <br /><br />"
"android.view.ViewConfiguration.getKeyRepeatTimeout () "," no description <br /><br />"
"android.view.ViewConfiguration.getPressedStateDuration () "," no description <br /><br />"
"android.view.ViewConfiguration.getWindowTouchSlop ()    This method was deprecated in API level 3. Use getScaledWindowTouchSlop () "," This method was deprecated in API level 3. Use getScaledWindowTouchSlop() instead. <br /><br />"
"android.view.ViewConfiguration.getEdgeSlop ()    This method was deprecated in API level 3. Use getScaledEdgeSlop () "," This method was deprecated in API level 3. Use getScaledEdgeSlop() instead. <br /><br />"
"android.view.ViewConfiguration.getTouchSlop ()    This method was deprecated in API level 3. Use getScaledTouchSlop () "," This method was deprecated in API level 3. Use getScaledTouchSlop() instead. <br /><br />"
"android.view.ViewConfiguration.getMaximumFlingVelocity ()    This method was deprecated in API level 4. Use getScaledMaximumFlingVelocity () "," This method was deprecated in API level 4. Use getScaledMaximumFlingVelocity() instead. <br /><br />"
"android.view.ViewConfiguration.getMinimumFlingVelocity ()    This method was deprecated in API level 3. Use getScaledMinimumFlingVelocity () "," This method was deprecated in API level 3. Use getScaledMinimumFlingVelocity() instead. <br /><br />"
"android.view.ViewConfiguration.getFadingEdgeLength ()    This method was deprecated in API level 3. Use getScaledFadingEdgeLength () "," This method was deprecated in API level 3. Use getScaledFadingEdgeLength() instead. <br /><br />"
"android.view.ViewConfiguration.getScaledFadingEdgeLength () "," no description <br /><br />"
"android.view.ViewConfiguration.getZoomControlsTimeout () "," The amount of time that the zoom controls should be displayed on the screen expressed in milliseconds. <br /><br />"
"android.view.ViewConfiguration.getTapTimeout () "," no description <br /><br />"
"android.view.ViewConfiguration.getScaledDoubleTapSlop () "," no description <br /><br />"
"android.view.ViewConfiguration.getScrollDefaultDelay () "," no description <br /><br />"
"android.view.ViewConfiguration.getScaledOverscrollDistance () "," no description <br /><br />"
"android.view.ViewConfiguration.getDoubleTapTimeout () "," no description <br /><br />"
"android.view.ViewConfiguration.get (Context context) "," Returns a configuration for the specified context. <br /><br />"
"android.view.ViewConfiguration.getScaledTouchSlop () "," no description <br /><br />"
"android.view.ViewConfiguration.getKeyRepeatDelay () "," no description <br /><br />"
"android.view.ViewConfiguration.getScaledEdgeSlop () "," no description <br /><br />"
"android.view.ViewConfiguration.getScaledOverflingDistance () "," no description <br /><br />"
"android.view.ViewConfiguration.getScrollBarSize ()    This method was deprecated in API level 3. Use getScaledScrollBarSize () "," This method was deprecated in API level 3. Use getScaledScrollBarSize() instead. <br /><br />"
"android.view.ViewConfiguration.getScaledMinimumFlingVelocity () "," no description <br /><br />"
"android.view.ViewConfiguration.getScaledScrollBarSize () "," no description <br /><br />"
"android.view.ViewConfiguration.getScaledWindowTouchSlop () "," no description <br /><br />"
"android.view.ViewConfiguration.getLongPressTimeout () "," no description <br /><br />"
"android.view.ViewConfiguration.getScrollBarFadeDuration () "," no description <br /><br />"
"android.view.ViewConfiguration.getGlobalActionKeyTimeout () "," This method was deprecated in API level 20. This timeout should not be used by applications <br /><br />"
"android.view.ViewConfiguration.hasPermanentMenuKey () "," Report if the device has a permanent menu key available to the user. <br /><br />"
"android.view.ViewConfiguration.getScaledMaximumFlingVelocity () "," no description <br /><br />"
"android.view.ViewDebug.trace (View view, ViewDebug.HierarchyTraceType type) "," This method was deprecated in API level 16. This method is now unused and invoking it is a no-op <br /><br />"
"android.view.ViewDebug.stopRecyclerTracing () "," This method was deprecated in API level 16. This method is now unused and invoking it is a no-op <br /><br />"
"android.view.ViewDebug.stopHierarchyTracing () "," This method was deprecated in API level 16. This method is now unused and invoking it is a no-op <br /><br />"
"android.view.ViewDebug.dumpCapturedView (String tag, Object view)   Dump view info for id based instrument test generation  (and possibly further data analysis) "," Dump view info for id based instrument test generation (and possibly further data analysis). <br /><br />"
"android.view.ViewDebug.trace (View view, ViewDebug.RecyclerTraceType type, int... parameters) "," This method was deprecated in API level 16. This method is now unused and invoking it is a no-op <br /><br />"
"android.view.ViewDebug.startRecyclerTracing (String prefix, View view) "," This method was deprecated in API level 16. This method is now unused and invoking it is a no-op <br /><br />"
"android.view.ViewDebug.startHierarchyTracing (String prefix, View view) "," This method was deprecated in API level 16. This method is now unused and invoking it is a no-op <br /><br />"
"android.view.ViewGroup.onNestedPreScroll (View target, int dx, int dy, int[] consumed) "," React to a nested scroll in progress before the target view consumes a portion of the scroll. <br /><br />"
"android.view.ViewGroup.dispatchApplyWindowInsets (WindowInsets insets) "," Request to apply the given window insets to this view or another view in its subtree. <br /><br />"
"android.view.ViewGroup.endViewTransition (View view)   This method should always be called following an earlier call to startViewTransition (View) "," This method should always be called following an earlier call to startViewTransition(View). <br /><br />"
"android.view.ViewGroup.removeViewInLayout (View view) "," Removes a view during layout. <br /><br />"
"android.view.ViewGroup.updateViewLayout (View view, ViewGroup.LayoutParams params) ","  <br /><br />"
"android.view.ViewGroup.removeViewAt (int index) "," Removes the view at the specified position in the group. <br /><br />"
"android.view.ViewGroup.startActionModeForChild (View originalView, ActionMode.Callback callback) "," Start an action mode for the specified view. <br /><br />"
"android.view.ViewGroup.dispatchTrackballEvent (MotionEvent event) "," Pass a trackball motion event down to the focused view. <br /><br />"
"android.view.ViewGroup.addView (View child, int width, int height) "," Adds a child view with this ViewGroup's default layout parameters and the specified width and height. <br /><br />"
"android.view.ViewGroup.onNestedScroll (View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed) "," React to a nested scroll in progress. <br /><br />"
"android.view.ViewGroup.dispatchKeyEventPreIme (KeyEvent event) "," Dispatch a key event before it is processed by any input method associated with the view hierarchy. <br /><br />"
"android.view.ViewGroup.getNestedScrollAxes () "," Return the current axes of nested scrolling for this ViewGroup. <br /><br />"
"android.view.ViewGroup.setDescendantFocusability (int focusability) "," Set the descendant focusability of this view group. <br /><br />"
"android.view.ViewGroup.requestTransparentRegion (View child) "," Called when a child wants the view hierarchy to gather and report transparent regions to the window compositor. <br /><br />"
"android.view.ViewGroup.setMotionEventSplittingEnabled (boolean split) "," Enable or disable the splitting of MotionEvents to multiple children during touch event dispatch. <br /><br />"
"android.view.ViewGroup.addChildrenForAccessibility (ArrayList< View> childrenForAccessibility) "," Adds the children of a given View for accessibility. <br /><br />"
"android.view.ViewGroup.dispatchKeyShortcutEvent (KeyEvent event) "," Dispatches a key shortcut event. <br /><br />"
"android.view.ViewGroup.isMotionEventSplittingEnabled () "," Returns true if MotionEvents dispatched to this ViewGroup can be split to multiple children. <br /><br />"
"android.view.ViewGroup.getClipToPadding () "," Returns whether this ViewGroup will clip its children to its padding, if padding is present. <br /><br />"
"android.view.ViewGroup.startLayoutAnimation () "," Runs the layout animation. <br /><br />"
"android.view.ViewGroup.getLayoutAnimation () "," Returns the layout animation controller used to animate the group's children. <br /><br />"
"android.view.ViewGroup.offsetDescendantRectToMyCoords (View descendant, Rect rect) "," Offset a rectangle that is in a descendant's coordinate space into our coordinate space. <br /><br />"
"android.view.ViewGroup.dispatchWindowSystemUiVisiblityChanged (int visible)   Dispatch callbacks to onWindowSystemUiVisibilityChanged (int) "," Dispatch callbacks to onWindowSystemUiVisibilityChanged(int) down the view hierarchy. <br /><br />"
"android.view.ViewGroup.jumpDrawablesToCurrentState ()   Call Drawable.jumpToCurrentState () "," Call Drawable.jumpToCurrentState() on all Drawable objects associated with this view. <br /><br />"
"android.view.ViewGroup.findFocus () "," Find the view in the hierarchy rooted at this view that currently has focus. <br /><br />"
"android.view.ViewGroup.setAnimationCacheEnabled (boolean enabled) "," Enables or disables the children's drawing cache during a layout animation. <br /><br />"
"android.view.ViewGroup.findViewsWithText (ArrayList< View> outViews, CharSequence text, int flags) "," Finds the Views that contain given text. <br /><br />"
"android.view.ViewGroup.dispatchUnhandledMove (View focused, int direction) "," This method is the last chance for the focused view and its ancestors to respond to an arrow key. <br /><br />"
"android.view.ViewGroup.addView (View child, int index, ViewGroup.LayoutParams params) "," Adds a child view with the specified layout parameters. <br /><br />"
"android.view.ViewGroup.onInterceptHoverEvent (MotionEvent event) "," Implement this method to intercept hover events before they are handled by child views. <br /><br />"
"android.view.ViewGroup.onStartNestedScroll (View child, View target, int nestedScrollAxes) "," React to a descendant view initiating a nestable scroll operation, claiming the nested scroll operation if appropriate. <br /><br />"
"android.view.ViewGroup.clearDisappearingChildren () "," Removes any pending animations for views that have been removed. <br /><br />"
"android.view.ViewGroup.setTransitionGroup (boolean isTransitionGroup) "," Changes whether or not this ViewGroup should be treated as a single entity during Activity Transitions. <br /><br />"
"android.view.ViewGroup.dispatchDrawableHotspotChanged (float x, float y)   Dispatches drawable hotspot changes to child views that meet at least one of the following criteria:  Returns false from both isClickable () and isLongClickable () Requests duplication of parent state via setDuplicateParentStateEnabled (boolean) "," Dispatches drawable hotspot changes to child views that meet at least one of the following criteria:  Returns false from both isClickable() and isLongClickable() Requests duplication of parent state via setDuplicateParentStateEnabled(boolean) <br /><br />"
"android.view.ViewGroup.setAddStatesFromChildren (boolean addsStates) "," Sets whether this ViewGroup's drawable states also include its children's drawable states. <br /><br />"
"android.view.ViewGroup.requestSendAccessibilityEvent (View child, AccessibilityEvent event) "," Called by a child to request from its parent to send an AccessibilityEvent. <br /><br />"
"android.view.ViewGroup.getChildAt (int index) "," Returns the view at the specified position in the group. <br /><br />"
"android.view.ViewGroup.setLayoutMode (int layoutMode) "," Sets the basis of alignment during the layout of this ViewGroup. <br /><br />"
"android.view.ViewGroup.focusableViewAvailable (View v) "," Tells the parent that a new focusable view has become available. <br /><br />"
"android.view.ViewGroup.showContextMenuForChild (View originalView) "," Bring up a context menu for the specified view or its ancestors. <br /><br />"
"android.view.ViewGroup.dispatchSetActivated (boolean activated) "," Dispatch setActivated to all of this View's children. <br /><br />"
"android.view.ViewGroup.dispatchKeyEvent (KeyEvent event) "," Dispatch a key event to the next view on the focus path. <br /><br />"
"android.view.ViewGroup.indexOfChild (View child) "," Returns the position in the group of the specified child view. <br /><br />"
"android.view.ViewGroup.bringChildToFront (View child) "," Change the z order of the child so it's on top of all other children. <br /><br />"
"android.view.ViewGroup.scheduleLayoutAnimation () "," Schedules the layout animation to be played after the next layout pass of this view group. <br /><br />"
"android.view.ViewGroup.layout (int l, int t, int r, int b) "," Assign a size and position to a view and all of its descendants This is the second phase of the layout mechanism. <br /><br />"
"android.view.ViewGroup.setPersistentDrawingCache (int drawingCacheToKeep) "," Indicates what types of drawing caches should be kept in memory after they have been created. <br /><br />"
"android.view.ViewGroup.setLayoutAnimationListener (Animation.AnimationListener animationListener) "," Specifies the animation listener to which layout animation events must be sent. <br /><br />"
"android.view.ViewGroup.setTouchscreenBlocksFocus (boolean touchscreenBlocksFocus) "," Set whether this ViewGroup should ignore focus requests for itself and its children. <br /><br />"
"android.view.ViewGroup.setAlwaysDrawnWithCacheEnabled (boolean always) "," Indicates whether this ViewGroup will always try to draw its children using their drawing cache. <br /><br />"
"android.view.ViewGroup.requestChildRectangleOnScreen (View child, Rect rectangle, boolean immediate) "," Called when a child of this group wants a particular rectangle to be positioned onto the screen. <br /><br />"
"android.view.ViewGroup.addTouchables (ArrayList< View> views)   Add any touchable views that are descendants of this view  (possibly including this view if it is touchable itself) "," Add any touchable views that are descendants of this view (possibly including this view if it is touchable itself) to views. <br /><br />"
"android.view.ViewGroup.onNestedPreFling (View target, float velocityX, float velocityY) "," React to a nested fling before the target view consumes it. <br /><br />"
"android.view.ViewGroup.dispatchSystemUiVisibilityChanged (int visible)   Dispatch callbacks to setOnSystemUiVisibilityChangeListener (View.OnSystemUiVisibilityChangeListener) "," Dispatch callbacks to setOnSystemUiVisibilityChangeListener(View.OnSystemUiVisibilityChangeListener) down the view hierarchy. <br /><br />"
"android.view.ViewGroup.addView (View child, ViewGroup.LayoutParams params) "," Adds a child view with the specified layout parameters. <br /><br />"
"android.view.ViewGroup.removeAllViewsInLayout () "," Called by a ViewGroup subclass to remove child views from itself, when it must first know its size on screen before it can calculate how many child views it will render. <br /><br />"
"android.view.ViewGroup.recomputeViewAttributes (View child) "," Tell view hierarchy that the global view attributes need to be re-evaluated. <br /><br />"
"android.view.ViewGroup.addView (View child, int index) "," Adds a child view. <br /><br />"
"android.view.ViewGroup.hasTransientState () "," Indicates whether the view is currently tracking transient state that the app should not need to concern itself with saving and restoring, but that the framework should take special note to preserve when possible. <br /><br />"
"android.view.ViewGroup.getPersistentDrawingCache () "," Returns an integer indicating what types of drawing caches are kept in memory. <br /><br />"
"android.view.ViewGroup.getTouchscreenBlocksFocus () "," Check whether this ViewGroup should ignore focus requests for itself and its children. <br /><br />"
"android.view.ViewGroup.onRequestSendAccessibilityEvent (View child, AccessibilityEvent event) "," Called when a child has requested sending an AccessibilityEvent and gives an opportunity to its parent to augment the event. <br /><br />"
"android.view.ViewGroup.onNestedScrollAccepted (View child, View target, int axes) "," React to the successful claiming of a nested scroll operation. <br /><br />"
"android.view.ViewGroup.notifySubtreeAccessibilityStateChanged (View child, View source, int changeType) "," Notifies a view parent that the accessibility state of one of its descendants has changed and that the structure of the subtree is different. <br /><br />"
"android.view.ViewGroup.focusSearch (View focused, int direction) "," Find the nearest view in the specified direction that wants to take focus. <br /><br />"
"android.view.ViewGroup.addStatesFromChildren () "," Returns whether this ViewGroup's drawable states also include its children's drawable states. <br /><br />"
"android.view.ViewGroup.gatherTransparentRegion (Region region) "," This is used by the RootView to perform an optimization when the view hierarchy contains one or several SurfaceView. <br /><br />"
"android.view.ViewGroup.requestChildFocus (View child, View focused) "," Called when a child of this parent wants focus <br /><br />"
"android.view.ViewGroup.startViewTransition (View view)   This method tells the ViewGroup that the given View object, which should have this ViewGroup as its parent, should be kept around  (re-displayed when the ViewGroup draws its children) "," This method tells the ViewGroup that the given View object, which should have this ViewGroup as its parent, should be kept around (re-displayed when the ViewGroup draws its children) even if it is removed from its parent. <br /><br />"
"android.view.ViewGroup.hasFocus () "," Returns true if this view has or contains focus <br /><br />"
"android.view.ViewGroup.removeViewsInLayout (int start, int count) "," Removes a range of views during layout. <br /><br />"
"android.view.ViewGroup.addView (View child) "," Adds a child view. <br /><br />"
"android.view.ViewGroup.childDrawableStateChanged (View child)   If addStatesFromChildren () is true, refreshes this group's drawable state  (to include the states from its children) "," If addStatesFromChildren() is true, refreshes this group's drawable state (to include the states from its children). <br /><br />"
"android.view.ViewGroup.requestFocus (int direction, Rect previouslyFocusedRect)   Call this to try to give focus to a specific view or to one of its descendants and give it hints about the direction and a specific rectangle that the focus is coming from. Looks for a view to give focus to respecting the setting specified by getDescendantFocusability () "," Call this to try to give focus to a specific view or to one of its descendants and give it hints about the direction and a specific rectangle that the focus is coming from. Looks for a view to give focus to respecting the setting specified by getDescendantFocusability(). <br /><br />"
"android.view.ViewGroup.addFocusables (ArrayList< View> views, int direction, int focusableMode)   Adds any focusable views that are descendants of this view  (possibly including this view if it is focusable itself) "," Adds any focusable views that are descendants of this view (possibly including this view if it is focusable itself) to views. <br /><br />"
"android.view.ViewGroup.clearChildFocus (View child) "," Called when a child of this parent is giving up focus <br /><br />"
"android.view.ViewGroup.removeAllViews () "," Call this method to remove all child views from the ViewGroup. <br /><br />"
"android.view.ViewGroup.onInterceptTouchEvent (MotionEvent ev) "," Implement this method to intercept all touch screen motion events. <br /><br />"
"android.view.ViewGroup.dispatchSetSelected (boolean selected) "," Dispatch setSelected to all of this View's children. <br /><br />"
"android.view.ViewGroup.getLayoutAnimationListener () "," Returns the animation listener to which layout animation events are sent. <br /><br />"
"android.view.ViewGroup.getChildMeasureSpec (int spec, int padding, int childDimension) "," Does the hard part of measureChildren: figuring out the MeasureSpec to pass to a particular child. <br /><br />"
"android.view.ViewGroup.getChildVisibleRect (View child, Rect r, Point offset) "," Compute the visible part of a rectangular region defined in terms of a child view's coordinates. <br /><br />"
"android.view.ViewGroup.offsetRectIntoDescendantCoords (View descendant, Rect rect) "," Offset a rectangle that is in our coordinate space into an ancestor's coordinate space. <br /><br />"
"android.view.ViewGroup.getLayoutMode () "," Returns the basis of alignment during layout operations on this ViewGroup: either LAYOUT_MODE_CLIP_BOUNDS or LAYOUT_MODE_OPTICAL_BOUNDS. <br /><br />"
"android.view.ViewGroup.getDescendantFocusability () "," Gets the descendant focusability of this view group. <br /><br />"
"android.view.ViewGroup.onStopNestedScroll (View child) "," React to a nested scroll operation ending. <br /><br />"
"android.view.ViewGroup.removeViews (int start, int count) "," Removes the specified range of views from the group. <br /><br />"
"android.view.ViewGroup.setClipChildren (boolean clipChildren) "," By default, children are clipped to their bounds before drawing. <br /><br />"
"android.view.ViewGroup.removeView (View view)   Note: do not invoke this method from draw (android.graphics.Canvas), onDraw (android.graphics.Canvas), dispatchDraw (android.graphics.Canvas) "," Note: do not invoke this method from draw(android.graphics.Canvas), onDraw(android.graphics.Canvas), dispatchDraw(android.graphics.Canvas) or any related method. <br /><br />"
"android.view.ViewGroup.invalidateChild (View child, Rect dirty) "," Don't call or override this method. <br /><br />"
"android.view.ViewGroup.childHasTransientStateChanged (View child, boolean childHasTransientState) "," Called when a child view has changed whether or not it is tracking transient state. <br /><br />"
"android.view.ViewGroup.getFocusedChild () "," Returns the focused child of this view, if any. <br /><br />"
"android.view.ViewGroup.dispatchDisplayHint (int hint) "," Dispatch a hint about whether this view is displayed. <br /><br />"
"android.view.ViewGroup.onNestedFling (View target, float velocityX, float velocityY, boolean consumed) "," Request a fling from a nested scroll. <br /><br />"
"android.view.ViewGroup.setLayoutTransition (LayoutTransition transition) "," Sets the LayoutTransition object for this ViewGroup. <br /><br />"
"android.view.ViewGroup.onNestedPrePerformAccessibilityAction (View target, int action, Bundle args) "," React to an accessibility action delegated by a target descendant view before the target processes it. Subclasses should always call super.onNestedPrePerformAccessibilityAction <br /><br />"
"android.view.ViewGroup.dispatchTouchEvent (MotionEvent ev) "," Pass the touch screen motion event down to the target view, or this view if it is the target. <br /><br />"
"android.view.ViewGroup.clearFocus () "," Called when this view wants to give up focus. <br /><br />"
"android.view.ViewGroup.invalidateChildInParent (int[] location, Rect dirty) "," Don't call or override this method. <br /><br />"
"android.view.ViewGroup.getOverlay () "," Returns the ViewGroupOverlay for this view group, creating it if it does not yet exist. <br /><br />"
"android.view.ViewGroup.isTransitionGroup () "," Returns true if this ViewGroup should be considered as a single entity for removal when executing an Activity transition. <br /><br />"
"android.view.ViewGroup.shouldDelayChildPressedState () "," Return true if the pressed state should be delayed for children or descendants of this ViewGroup. <br /><br />"
"android.view.ViewGroup.dispatchConfigurationChanged (Configuration newConfig) "," Dispatch a notification about a resource configuration change down the view hierarchy. <br /><br />"
"android.view.ViewGroup.dispatchWindowFocusChanged (boolean hasFocus) "," Called when the window containing this view gains or loses window focus. <br /><br />"
"android.view.ViewGroup.getLayoutTransition () "," Gets the LayoutTransition object for this ViewGroup. <br /><br />"
"android.view.ViewGroup.dispatchDragEvent (DragEvent event) "," Detects if this View is enabled and has a drag event listener. <br /><br />"
"android.view.ViewGroup.setClipToPadding (boolean clipToPadding) "," Sets whether this ViewGroup will clip its children to its padding, if padding is present. <br /><br />"
"android.view.ViewGroup.isAnimationCacheEnabled () "," Indicates whether the children's drawing cache is used during a layout animation. <br /><br />"
"android.view.ViewGroup.requestDisallowInterceptTouchEvent (boolean disallowIntercept)   Called when a child does not want this parent and its ancestors to intercept touch events with onInterceptTouchEvent (MotionEvent) "," Called when a child does not want this parent and its ancestors to intercept touch events with onInterceptTouchEvent(MotionEvent). <br /><br />"
"android.view.ViewGroup.setOnHierarchyChangeListener (ViewGroup.OnHierarchyChangeListener listener) "," Register a callback to be invoked when a child is added to or removed from this view. <br /><br />"
"android.view.ViewGroup.setLayoutAnimation (LayoutAnimationController controller) "," Sets the layout animation controller used to animate the group's children after the first layout. <br /><br />"
"android.view.ViewGroup.isAlwaysDrawnWithCacheEnabled () "," Indicates whether this ViewGroup will always try to draw its children using their drawing cache. <br /><br />"
"android.view.ViewGroup.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.view.ViewGroup.getChildCount () "," Returns the number of children in the group. <br /><br />"
"android.view.ViewGroup.dispatchWindowVisibilityChanged (int visibility) "," Dispatch a window visibility change down the view hierarchy. <br /><br />"
"android.view.ViewGroup.hasFocusable ()   Returns true if this view is focusable or if it contains a reachable View for which hasFocusable () "," Returns true if this view is focusable or if it contains a reachable View for which hasFocusable() returns true. <br /><br />"
"android.view.ViewGroup.getClipChildren () "," Returns whether this group's children are clipped to their bounds before drawing. <br /><br />"
"android.view.ViewGroup.LayoutParams.resolveLayoutDirection (int layoutDirection) "," Resolve layout parameters depending on the layout direction. <br /><br />"
"android.view.ViewGroup.MarginLayoutParams.getLayoutDirection () "," Retuns the layout direction. <br /><br />"
"android.view.ViewGroup.MarginLayoutParams.resolveLayoutDirection (int layoutDirection)   This will be called by requestLayout () "," This will be called by requestLayout(). <br /><br />"
"android.view.ViewGroup.MarginLayoutParams.getMarginEnd () "," Returns the end margin in pixels. <br /><br />"
"android.view.ViewGroup.MarginLayoutParams.setMarginStart (int start) "," Sets the relative start margin. <br /><br />"
"android.view.ViewGroup.MarginLayoutParams.getMarginStart () "," Returns the start margin in pixels. <br /><br />"
"android.view.ViewGroup.MarginLayoutParams.isMarginRelative () "," Check if margins are relative. <br /><br />"
"android.view.ViewGroup.MarginLayoutParams.setLayoutDirection (int layoutDirection) "," Set the layout direction <br /><br />"
"android.view.ViewGroup.MarginLayoutParams.setMargins (int left, int top, int right, int bottom) "," Sets the margins, in pixels. <br /><br />"
"android.view.ViewGroup.MarginLayoutParams.setMarginEnd (int end) "," Sets the relative end margin. <br /><br />"
"android.view.ViewGroup.OnHierarchyChangeListener.onChildViewAdded (View parent, View child) "," Called when a new child is added to a parent view. <br /><br />"
"android.view.ViewGroup.OnHierarchyChangeListener.onChildViewRemoved (View parent, View child) "," Called when a child is removed from a parent view. <br /><br />"
"android.view.ViewGroupOverlay.remove (View view) "," Removes the specified View from the overlay. <br /><br />"
"android.view.ViewGroupOverlay.add (View view) "," Adds a View to the overlay. <br /><br />"
"android.view.ViewManager.removeView (View view) "," no description <br /><br />"
"android.view.ViewManager.updateViewLayout (View view, ViewGroup.LayoutParams params) "," no description <br /><br />"
"android.view.ViewManager.addView (View view, ViewGroup.LayoutParams params) "," Assign the passed LayoutParams to the passed View and add the view to the window. <br /><br />"
"android.view.ViewOutlineProvider.getOutline (View view, Outline outline) "," Called to get the provider to populate the Outline. <br /><br />"
"android.view.ViewOverlay.clear () "," Removes all content from the overlay. <br /><br />"
"android.view.ViewOverlay.remove (Drawable drawable) "," Removes the specified Drawable from the overlay. <br /><br />"
"android.view.ViewOverlay.add (Drawable drawable) "," Adds a Drawable to the overlay. <br /><br />"
"android.view.ViewParent.onNestedPreScroll (View target, int dx, int dy, int[] consumed) "," React to a nested scroll in progress before the target view consumes a portion of the scroll. <br /><br />"
"android.view.ViewParent.getChildVisibleRect (View child, Rect r, Point offset) "," Compute the visible part of a rectangular region defined in terms of a child view's coordinates. <br /><br />"
"android.view.ViewParent.onStartNestedScroll (View child, View target, int nestedScrollAxes) "," React to a descendant view initiating a nestable scroll operation, claiming the nested scroll operation if appropriate. <br /><br />"
"android.view.ViewParent.onNestedScrollAccepted (View child, View target, int nestedScrollAxes) "," React to the successful claiming of a nested scroll operation. <br /><br />"
"android.view.ViewParent.getTextDirection () "," Return this view parent text direction. <br /><br />"
"android.view.ViewParent.focusSearch (View v, int direction) "," Find the nearest view in the specified direction that wants to take focus <br /><br />"
"android.view.ViewParent.recomputeViewAttributes (View child) "," Tell view hierarchy that the global view attributes need to be re-evaluated. <br /><br />"
"android.view.ViewParent.startActionModeForChild (View originalView, ActionMode.Callback callback) "," Start an action mode for the specified view. <br /><br />"
"android.view.ViewParent.requestSendAccessibilityEvent (View child, AccessibilityEvent event) "," Called by a child to request from its parent to send an AccessibilityEvent. <br /><br />"
"android.view.ViewParent.onStopNestedScroll (View target) "," React to a nested scroll operation ending. <br /><br />"
"android.view.ViewParent.isTextDirectionResolved () "," Tells if this view parent text direction is resolved. <br /><br />"
"android.view.ViewParent.onNestedScroll (View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed) "," React to a nested scroll in progress. <br /><br />"
"android.view.ViewParent.canResolveTextAlignment () "," Tells if this view parent can resolve the text alignment. <br /><br />"
"android.view.ViewParent.onNestedFling (View target, float velocityX, float velocityY, boolean consumed) "," Request a fling from a nested scroll. <br /><br />"
"android.view.ViewParent.requestTransparentRegion (View child) "," Called when a child wants the view hierarchy to gather and report transparent regions to the window compositor. <br /><br />"
"android.view.ViewParent.focusableViewAvailable (View v) "," Tells the parent that a new focusable view has become available. <br /><br />"
"android.view.ViewParent.showContextMenuForChild (View originalView) "," Bring up a context menu for the specified view or its ancestors. <br /><br />"
"android.view.ViewParent.notifySubtreeAccessibilityStateChanged (View child, View source, int changeType) "," Notifies a view parent that the accessibility state of one of its descendants has changed and that the structure of the subtree is different. <br /><br />"
"android.view.ViewParent.isLayoutRequested () "," Indicates whether layout was requested on this view parent. <br /><br />"
"android.view.ViewParent.isLayoutDirectionResolved () "," Tells if this view parent layout direction is resolved. <br /><br />"
"android.view.ViewParent.childHasTransientStateChanged (View child, boolean hasTransientState) "," Called when a child view now has or no longer is tracking transient state. <br /><br />"
"android.view.ViewParent.getLayoutDirection () "," Return this view parent layout direction. <br /><br />"
"android.view.ViewParent.canResolveLayoutDirection () "," Tells if this view parent can resolve the layout direction. <br /><br />"
"android.view.ViewParent.invalidateChild (View child, Rect r) "," All or part of a child is dirty and needs to be redrawn. <br /><br />"
"android.view.ViewParent.getTextAlignment () "," Return this view parent text alignment. <br /><br />"
"android.view.ViewParent.requestLayout () "," Called when something has changed which has invalidated the layout of a child of this view parent. <br /><br />"
"android.view.ViewParent.onNestedPrePerformAccessibilityAction (View target, int action, Bundle arguments) "," React to an accessibility action delegated by a target descendant view before the target processes it. <br /><br />"
"android.view.ViewParent.bringChildToFront (View child) "," Change the z order of the child so it's on top of all other children. <br /><br />"
"android.view.ViewParent.getParentForAccessibility () "," Gets the parent of a given View for accessibility. <br /><br />"
"android.view.ViewParent.requestChildFocus (View child, View focused) "," Called when a child of this parent wants focus <br /><br />"
"android.view.ViewParent.requestDisallowInterceptTouchEvent (boolean disallowIntercept)   Called when a child does not want this parent and its ancestors to intercept touch events with onInterceptTouchEvent (MotionEvent) "," Called when a child does not want this parent and its ancestors to intercept touch events with onInterceptTouchEvent(MotionEvent). <br /><br />"
"android.view.ViewParent.invalidateChildInParent (int[] location, Rect r) "," All or part of a child is dirty and needs to be redrawn. <br /><br />"
"android.view.ViewParent.childDrawableStateChanged (View child) "," This method is called on the parent when a child's drawable state has changed. <br /><br />"
"android.view.ViewParent.createContextMenu (ContextMenu menu)   Have the parent populate the specified context menu if it has anything to add  (and then recurse on its parent) "," Have the parent populate the specified context menu if it has anything to add (and then recurse on its parent). <br /><br />"
"android.view.ViewParent.canResolveTextDirection () "," Tells if this view parent can resolve the text direction. <br /><br />"
"android.view.ViewParent.requestChildRectangleOnScreen (View child, Rect rectangle, boolean immediate) "," Called when a child of this group wants a particular rectangle to be positioned onto the screen. <br /><br />"
"android.view.ViewParent.clearChildFocus (View child) "," Called when a child of this parent is giving up focus <br /><br />"
"android.view.ViewParent.getParent () "," Returns the parent if it exists, or null. <br /><br />"
"android.view.ViewParent.onNestedPreFling (View target, float velocityX, float velocityY) "," React to a nested fling before the target view consumes it. <br /><br />"
"android.view.ViewParent.requestFitSystemWindows ()   Ask that a new dispatch of View.fitSystemWindows (Rect) "," Ask that a new dispatch of View.fitSystemWindows(Rect) be performed. <br /><br />"
"android.view.ViewParent.isTextAlignmentResolved () "," Tells if this view parent text alignment is resolved. <br /><br />"
"android.view.ViewPropertyAnimator.translationZ (float value) "," This method will cause the View's translationZ property to be animated to the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.setDuration (long duration) "," Sets the duration for the underlying animator that animates the requested properties. <br /><br />"
"android.view.ViewPropertyAnimator.scaleXBy (float value) "," This method will cause the View's scaleX property to be animated by the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.translationX (float value) "," This method will cause the View's translationX property to be animated to the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.rotationX (float value) "," This method will cause the View's rotationX property to be animated to the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.alphaBy (float value) "," This method will cause the View's alpha property to be animated by the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.setStartDelay (long startDelay) "," Sets the startDelay for the underlying animator that animates the requested properties. <br /><br />"
"android.view.ViewPropertyAnimator.setInterpolator (TimeInterpolator interpolator) "," Sets the interpolator for the underlying animator that animates the requested properties. <br /><br />"
"android.view.ViewPropertyAnimator.withLayer ()   The View associated with this ViewPropertyAnimator will have its "," The View associated with this ViewPropertyAnimator will have its layer type set to LAYER_TYPE_HARDWARE for the duration of the next animation. <br /><br />"
"android.view.ViewPropertyAnimator.scaleY (float value) "," This method will cause the View's scaleY property to be animated to the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.y (float value) "," This method will cause the View's y property to be animated to the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.withEndAction (Runnable runnable) "," Specifies an action to take place when the next animation ends. <br /><br />"
"android.view.ViewPropertyAnimator.setUpdateListener (ValueAnimator.AnimatorUpdateListener listener) "," Sets a listener for update events in the underlying ValueAnimator that runs the property animations. <br /><br />"
"android.view.ViewPropertyAnimator.cancel () "," Cancels all property animations that are currently running or pending. <br /><br />"
"android.view.ViewPropertyAnimator.translationYBy (float value) "," This method will cause the View's translationY property to be animated by the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.withStartAction (Runnable runnable) "," Specifies an action to take place when the next animation runs. <br /><br />"
"android.view.ViewPropertyAnimator.translationZBy (float value) "," This method will cause the View's translationZ property to be animated by the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.getDuration () "," Returns the current duration of property animations. <br /><br />"
"android.view.ViewPropertyAnimator.scaleYBy (float value) "," This method will cause the View's scaleY property to be animated by the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.translationXBy (float value) "," This method will cause the View's translationX property to be animated by the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.rotation (float value) "," This method will cause the View's rotation property to be animated to the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.rotationYBy (float value) "," This method will cause the View's rotationY property to be animated by the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.start () "," Starts the currently pending property animations immediately. <br /><br />"
"android.view.ViewPropertyAnimator.rotationXBy (float value) "," This method will cause the View's rotationX property to be animated by the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.getStartDelay () "," Returns the current startDelay of property animations. <br /><br />"
"android.view.ViewPropertyAnimator.z (float value) "," This method will cause the View's z property to be animated to the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.yBy (float value) "," This method will cause the View's y property to be animated by the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.xBy (float value) "," This method will cause the View's x property to be animated by the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.rotationBy (float value) "," This method will cause the View's rotation property to be animated by the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.scaleX (float value) "," This method will cause the View's scaleX property to be animated to the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.translationY (float value) "," This method will cause the View's translationY property to be animated to the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.alpha (float value) "," This method will cause the View's alpha property to be animated to the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.x (float value) "," This method will cause the View's x property to be animated to the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.zBy (float value) "," This method will cause the View's z property to be animated by the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.setListener (Animator.AnimatorListener listener) "," Sets a listener for events in the underlying Animators that run the property animations. <br /><br />"
"android.view.ViewPropertyAnimator.rotationY (float value) "," This method will cause the View's rotationY property to be animated to the specified value. <br /><br />"
"android.view.ViewPropertyAnimator.getInterpolator () "," Returns the timing interpolator that this animation uses. <br /><br />"
"android.view.ViewStub.getLayoutResource ()   Returns the layout resource that will be used by setVisibility (int) or inflate () "," Returns the layout resource that will be used by setVisibility(int) or inflate() to replace this StubbedView in its parent by another view. <br /><br />"
"android.view.ViewStub.setOnInflateListener (ViewStub.OnInflateListener inflateListener) "," Specifies the inflate listener to be notified after this ViewStub successfully inflated its layout resource. <br /><br />"
"android.view.ViewStub.getInflatedId () "," Returns the id taken by the inflated view. <br /><br />"
"android.view.ViewStub.setLayoutResource (int layoutResource)   Specifies the layout resource to inflate when this StubbedView becomes visible or invisible or when inflate () "," Specifies the layout resource to inflate when this StubbedView becomes visible or invisible or when inflate() is invoked. <br /><br />"
"android.view.ViewStub.setInflatedId (int inflatedId) "," Defines the id taken by the inflated view. <br /><br />"
"android.view.ViewStub.inflate ()   Inflates the layout resource identified by getLayoutResource () "," Inflates the layout resource identified by getLayoutResource() and replaces this StubbedView in its parent by the inflated layout resource. <br /><br />"
"android.view.ViewStub.setVisibility (int visibility)   When visibility is set to VISIBLE or INVISIBLE, inflate () "," When visibility is set to VISIBLE or INVISIBLE, inflate() is invoked and this StubbedView is replaced in its parent by the inflated layout resource. <br /><br />"
"android.view.ViewStub.setLayoutInflater (LayoutInflater inflater)   Set LayoutInflater to use in inflate () "," Set LayoutInflater to use in inflate(), or null to use the default. <br /><br />"
"android.view.ViewStub.draw (Canvas canvas)   Manually render this view  (and all of its children) "," Manually render this view (and all of its children) to the given Canvas. <br /><br />"
"android.view.ViewStub.getLayoutInflater ()   Get current LayoutInflater used in inflate () "," Get current LayoutInflater used in inflate(). <br /><br />"
"android.view.ViewStub.OnInflateListener.onInflate (ViewStub stub, View inflated) "," Invoked after a ViewStub successfully inflated its layout resource. <br /><br />"
"android.view.ViewTreeObserver.OnDrawListener.onDraw () "," Callback method to be invoked when the view tree is about to be drawn. <br /><br />"
"android.view.ViewTreeObserver.OnGlobalFocusChangeListener.onGlobalFocusChanged (View oldFocus, View newFocus) "," Callback method to be invoked when the focus changes in the view tree. <br /><br />"
"android.view.ViewTreeObserver.OnGlobalLayoutListener.onGlobalLayout () "," Callback method to be invoked when the global layout state or the visibility of views within the view tree changes <br /><br />"
"android.view.ViewTreeObserver.OnPreDrawListener.onPreDraw () "," Callback method to be invoked when the view tree is about to be drawn. <br /><br />"
"android.view.ViewTreeObserver.OnScrollChangedListener.onScrollChanged () "," Callback method to be invoked when something in the view tree has been scrolled. <br /><br />"
"android.view.ViewTreeObserver.OnTouchModeChangeListener.onTouchModeChanged (boolean isInTouchMode) "," Callback method to be invoked when the touch mode changes. <br /><br />"
"android.view.ViewTreeObserver.OnWindowAttachListener.onWindowAttached () "," Callback method to be invoked when the view hierarchy is attached to a window <br /><br />"
"android.view.ViewTreeObserver.OnWindowAttachListener.onWindowDetached () "," Callback method to be invoked when the view hierarchy is detached from a window <br /><br />"
"android.view.ViewTreeObserver.OnWindowFocusChangeListener.onWindowFocusChanged (boolean hasFocus) "," Callback method to be invoked when the window focus changes in the view tree. <br /><br />"
"android.view.Window.Callback.onSearchRequested () "," Called when the user signals the desire to start a search. <br /><br />"
"android.view.Window.Callback.dispatchKeyEvent (KeyEvent event) "," Called to process key events. <br /><br />"
"android.view.Window.Callback.onCreatePanelMenu (int featureId, Menu menu) "," Initialize the contents of the menu for panel 'featureId'. <br /><br />"
"android.view.Window.Callback.onPanelClosed (int featureId, Menu menu) "," Called when a panel is being closed. <br /><br />"
"android.view.Window.Callback.onActionModeFinished (ActionMode mode) "," Called when an action mode has been finished. <br /><br />"
"android.view.Window.Callback.dispatchTouchEvent (MotionEvent event) "," Called to process touch screen events. <br /><br />"
"android.view.Window.Callback.dispatchPopulateAccessibilityEvent (AccessibilityEvent event) "," Called to process population of AccessibilityEvents. <br /><br />"
"android.view.Window.Callback.onActionModeStarted (ActionMode mode) "," Called when an action mode has been started. <br /><br />"
"android.view.Window.Callback.dispatchGenericMotionEvent (MotionEvent event) "," Called to process generic motion events. <br /><br />"
"android.view.Window.Callback.onContentChanged ()   This hook is called whenever the content view of the screen changes  (due to a call to Window.setContentView or Window.addContentView) "," This hook is called whenever the content view of the screen changes (due to a call to Window.setContentView or Window.addContentView). <br /><br />"
"android.view.Window.Callback.dispatchTrackballEvent (MotionEvent event) "," Called to process trackball events. <br /><br />"
"android.view.Window.Callback.onPreparePanel (int featureId, View view, Menu menu) "," Prepare a panel to be displayed. <br /><br />"
"android.view.Window.Callback.onDetachedFromWindow () "," Called when the window has been attached to the window manager. <br /><br />"
"android.view.Window.Callback.onWindowFocusChanged (boolean hasFocus) "," This hook is called whenever the window focus changes. <br /><br />"
"android.view.Window.Callback.onWindowStartingActionMode (ActionMode.Callback callback) "," Called when an action mode is being started for this window. <br /><br />"
"android.view.Window.Callback.onWindowAttributesChanged (WindowManager.LayoutParams attrs) "," This is called whenever the current window attributes change. <br /><br />"
"android.view.Window.Callback.onAttachedToWindow () "," Called when the window has been attached to the window manager. <br /><br />"
"android.view.Window.Callback.onCreatePanelView (int featureId) "," Instantiate the view to display in the panel for 'featureId'. <br /><br />"
"android.view.Window.Callback.dispatchKeyShortcutEvent (KeyEvent event) "," Called to process a key shortcut event. <br /><br />"
"android.view.Window.Callback.onMenuOpened (int featureId, Menu menu) "," Called when a panel's menu is opened by the user. <br /><br />"
"android.view.Window.Callback.onMenuItemSelected (int featureId, MenuItem item) "," Called when a panel's menu item has been selected by the user. <br /><br />"
"android.view.Window.setAllowEnterTransitionOverlap (boolean allow)   Controls how the transition set in setEnterTransition (android.transition.Transition) "," Controls how the transition set in setEnterTransition(android.transition.Transition) overlaps with the exit transition of the calling Activity. <br /><br />"
"android.view.Window.setContentView (View view)   Convenience for setContentView (View, android.view.ViewGroup.LayoutParams) "," Convenience for setContentView(View, android.view.ViewGroup.LayoutParams) set the screen content to an explicit view. <br /><br />"
"android.view.Window.getCallback () "," Return the current Callback interface for this window. <br /><br />"
"android.view.Window.getAllowReturnTransitionOverlap ()   Returns how the transition set in setExitTransition (android.transition.Transition) "," Returns how the transition set in setExitTransition(android.transition.Transition) overlaps with the exit transition of the called Activity when reentering after if finishes. <br /><br />"
"android.view.Window.setTransitionManager (TransitionManager tm) "," Set the TransitionManager to use for default transitions in this window. <br /><br />"
"android.view.Window.takeSurface (SurfaceHolder.Callback2 callback) "," Take ownership of this window's surface. <br /><br />"
"android.view.Window.togglePanel (int featureId, KeyEvent event) "," no description <br /><br />"
"android.view.Window.setExitTransition (Transition transition) "," Sets the Transition that will be used to move Views out of the scene when starting a new Activity. <br /><br />"
"android.view.Window.setIcon (int resId) "," Set the primary icon for this window. <br /><br />"
"android.view.Window.setTransitionBackgroundFadeDuration (long fadeDurationMillis) "," Sets the duration, in milliseconds, of the window background fade when transitioning into or away from an Activity when called with an Activity Transition. <br /><br />"
"android.view.Window.takeKeyEvents (boolean get) "," Request that key events come to this activity. <br /><br />"
"android.view.Window.superDispatchKeyShortcutEvent (KeyEvent event) "," Used by custom windows, such as Dialog, to pass the key shortcut press event further down the view hierarchy. <br /><br />"
"android.view.Window.setChildInt (int featureId, int value) "," no description <br /><br />"
"android.view.Window.clearFlags (int flags)   Convenience function to clear the flag bits as specified in flags, as per setFlags (int, int) "," Convenience function to clear the flag bits as specified in flags, as per setFlags(int, int). <br /><br />"
"android.view.Window.performPanelIdentifierAction (int featureId, int id, int flags) "," no description <br /><br />"
"android.view.Window.setFormat (int format) "," Set the format of window, as per the PixelFormat types. <br /><br />"
"android.view.Window.saveHierarchyState () "," no description <br /><br />"
"android.view.Window.setAllowReturnTransitionOverlap (boolean allow)   Controls how the transition set in setExitTransition (android.transition.Transition) "," Controls how the transition set in setExitTransition(android.transition.Transition) overlaps with the exit transition of the called Activity when reentering after if finishes. <br /><br />"
"android.view.Window.getContainer () "," Return the container for this Window. <br /><br />"
"android.view.Window.getLayoutInflater () "," Quick access to the LayoutInflater instance that this Window retrieved from its Context. <br /><br />"
"android.view.Window.setFeatureDrawableAlpha (int featureId, int alpha) "," Set a custom alpha value for the given drawable feature, controlling how much the background is visible through it. <br /><br />"
"android.view.Window.setAttributes (WindowManager.LayoutParams a) "," Specify custom window attributes. <br /><br />"
"android.view.Window.injectInputEvent (InputEvent event) "," Inject an event to window locally. <br /><br />"
"android.view.Window.setContainer (Window container) "," Set the container for this window. <br /><br />"
"android.view.Window.setSharedElementExitTransition (Transition transition) "," Sets the Transition that will be used for shared elements after starting a new Activity before the shared elements are transferred to the called Activity. <br /><br />"
"android.view.Window.restoreHierarchyState (Bundle savedInstanceState) "," no description <br /><br />"
"android.view.Window.setBackgroundDrawableResource (int resId) "," Change the background of this window to a Drawable resource. <br /><br />"
"android.view.Window.setType (int type) "," Set the type of the window, as per the WindowManager.LayoutParams types. <br /><br />"
"android.view.Window.setSharedElementReenterTransition (Transition transition) "," Sets the Transition that will be used for shared elements reentering from a started Activity after it has returned the shared element to it start location. <br /><br />"
"android.view.Window.setVolumeControlStream (int streamType) "," no description <br /><br />"
"android.view.Window.setTitleColor (int textColor) "," no description <br /><br />"
"android.view.Window.setLocalFocus (boolean hasFocus, boolean inTouchMode) "," Set focus locally. <br /><br />"
"android.view.Window.setWindowAnimations (int resId) "," Specify custom animations to use for the window, as per WindowManager.LayoutParams.windowAnimations. <br /><br />"
"android.view.Window.setSoftInputMode (int mode) "," Specify an explicit soft input mode to use for the window, as per WindowManager.LayoutParams.softInputMode. <br /><br />"
"android.view.Window.getSharedElementExitTransition () "," Returns the Transition to use for shared elements in the launching Window prior to transferring to the launched Activity's Window. <br /><br />"
"android.view.Window.superDispatchKeyEvent (KeyEvent event) "," Used by custom windows, such as Dialog, to pass the key press event further down the view hierarchy. <br /><br />"
"android.view.Window.setChildDrawable (int featureId, Drawable drawable) "," no description <br /><br />"
"android.view.Window.setFeatureInt (int featureId, int value) "," Set the integer value for a feature. <br /><br />"
"android.view.Window.getAllowEnterTransitionOverlap ()   Returns how the transition set in setEnterTransition (android.transition.Transition) "," Returns how the transition set in setEnterTransition(android.transition.Transition) overlaps with the exit transition of the calling Activity. <br /><br />"
"android.view.Window.setStatusBarColor (int color) "," Sets the color of the status bar to . <br /><br />"
"android.view.Window.addContentView (View view, ViewGroup.LayoutParams params)   Variation on setContentView (View, android.view.ViewGroup.LayoutParams) "," Variation on setContentView(View, android.view.ViewGroup.LayoutParams) to add an additional content view to the screen. <br /><br />"
"android.view.Window.setDimAmount (float amount) "," Set the amount of dim behind the window when using FLAG_DIM_BEHIND. <br /><br />"
"android.view.Window.getTransitionManager () "," Retrieve the TransitionManager responsible for for default transitions in this window. <br /><br />"
"android.view.Window.setCallback (Window.Callback callback) "," Set the Callback interface for this window, used to intercept key events and other dynamic operations in the window. <br /><br />"
"android.view.Window.setFlags (int flags, int mask) "," Set the flags of the window, as per the WindowManager.LayoutParams flags. <br /><br />"
"android.view.Window.takeInputQueue (InputQueue.Callback callback) "," Take ownership of this window's InputQueue. <br /><br />"
"android.view.Window.getNavigationBarColor () "," no description <br /><br />"
"android.view.Window.getStatusBarColor () "," no description <br /><br />"
"android.view.Window.setContentView (View view, ViewGroup.LayoutParams params) "," Set the screen content to an explicit view. <br /><br />"
"android.view.Window.getSharedElementReturnTransition () "," Returns the Transition that will be used for shared elements transferred back to a calling Activity. <br /><br />"
"android.view.Window.setWindowManager (WindowManager wm, IBinder appToken, String appName, boolean hardwareAccelerated) "," Set the window manager for use by this Window to, for example, display panels. <br /><br />"
"android.view.Window.hasFeature (int feature) "," Query for the availability of a certain feature. <br /><br />"
"android.view.Window.findViewById (int id)   Finds a view that was identified by the id attribute from the XML that was processed in onCreate (Bundle) "," Finds a view that was identified by the id attribute from the XML that was processed in onCreate(Bundle). <br /><br />"
"android.view.Window.setLayout (int width, int height) "," Set the width and height layout parameters of the window. <br /><br />"
"android.view.Window.setSharedElementEnterTransition (Transition transition) "," Sets the Transition that will be used for shared elements transferred into the content Scene. <br /><br />"
"android.view.Window.getVolumeControlStream () "," no description <br /><br />"
"android.view.Window.getDecorView ()   Retrieve the top-level window decor view  (containing the standard window frame/decorations and the client's content inside of that) "," Retrieve the top-level window decor view (containing the standard window frame/decorations and the client's content inside of that), which can be added as a window to the window manager. <br /><br />"
"android.view.Window.getExitTransition () "," Returns the Transition that will be used to move Views out of the scene when starting a new Activity. <br /><br />"
"android.view.Window.getWindowStyle () "," Return the Window attributes from this window's theme. <br /><br />"
"android.view.Window.getSharedElementEnterTransition () "," Returns the Transition that will be used for shared elements transferred into the content Scene. <br /><br />"
"android.view.Window.isShortcutKey (int keyCode, KeyEvent event) "," Is a keypress one of the defined shortcut keys for this window. <br /><br />"
"android.view.Window.setFeatureDrawableUri (int featureId, Uri uri) "," Set the value for a drawable feature of this window, from a URI. <br /><br />"
"android.view.Window.superDispatchTouchEvent (MotionEvent event) "," Used by custom windows, such as Dialog, to pass the touch screen event further down the view hierarchy. <br /><br />"
"android.view.Window.performPanelShortcut (int featureId, int keyCode, KeyEvent event, int flags) "," no description <br /><br />"
"android.view.Window.getDefaultFeatures (Context context) "," Return the feature bits set by default on a window. <br /><br />"
"android.view.Window.performContextMenuIdentifierAction (int id, int flags) "," no description <br /><br />"
"android.view.Window.getMediaController () "," Gets the MediaController that was previously set. <br /><br />"
"android.view.Window.setFeatureDrawableResource (int featureId, int resId) "," Set the value for a drawable feature of this window, from a resource identifier. <br /><br />"
"android.view.Window.peekDecorView () "," Retrieve the current decor view, but only if it has already been created; otherwise returns null. <br /><br />"
"android.view.Window.setLogo (int resId) "," Set the logo for this window. <br /><br />"
"android.view.Window.superDispatchTrackballEvent (MotionEvent event) "," Used by custom windows, such as Dialog, to pass the trackball event further down the view hierarchy. <br /><br />"
"android.view.Window.addFlags (int flags)   Convenience function to set the flag bits as specified in flags, as per setFlags (int, int) "," Convenience function to set the flag bits as specified in flags, as per setFlags(int, int). <br /><br />"
"android.view.Window.getContext () "," Return the Context this window policy is running in, for retrieving resources and other information. <br /><br />"
"android.view.Window.setUiOptions (int uiOptions) "," Set extra options that will influence the UI for this window. <br /><br />"
"android.view.Window.getReturnTransition ()   Returns he Transition that will be used to move Views out of the scene when the Window is preparing to close, for example after a call to finishAfterTransition () "," Returns he Transition that will be used to move Views out of the scene when the Window is preparing to close, for example after a call to finishAfterTransition(). <br /><br />"
"android.view.Window.getWindowManager () "," Return the window manager allowing this Window to display its own windows. <br /><br />"
"android.view.Window.makeActive () "," no description <br /><br />"
"android.view.Window.setEnterTransition (Transition transition) "," Sets the Transition that will be used to move Views into the initial scene. <br /><br />"
"android.view.Window.isFloating ()   Return whether this window is being displayed with a floating style  (based on the windowIsFloating attribute in the style/theme) "," Return whether this window is being displayed with a floating style (based on the windowIsFloating attribute in the style/theme). <br /><br />"
"android.view.Window.getEnterTransition () "," Returns the transition used to move Views into the initial scene. <br /><br />"
"android.view.Window.isActive () "," no description <br /><br />"
"android.view.Window.setSharedElementsUseOverlay (boolean sharedElementsUseOverlay) "," Sets whether or not shared elements should use an Overlay during shared element transitions. <br /><br />"
"android.view.Window.setMediaController (MediaController controller) "," Sets a MediaController to send media keys and volume changes to. <br /><br />"
"android.view.Window.openPanel (int featureId, KeyEvent event) "," no description <br /><br />"
"android.view.Window.requestFeature (int featureId) "," Enable extended screen features. <br /><br />"
"android.view.Window.superDispatchGenericMotionEvent (MotionEvent event) "," Used by custom windows, such as Dialog, to pass the generic motion event further down the view hierarchy. <br /><br />"
"android.view.Window.setNavigationBarColor (int color) "," Sets the color of the navigation bar to . <br /><br />"
"android.view.Window.setElevation (float elevation) "," Sets the window elevation. <br /><br />"
"android.view.Window.setWindowManager (WindowManager wm, IBinder appToken, String appName) "," Set the window manager for use by this Window to, for example, display panels. <br /><br />"
"android.view.Window.getCurrentFocus () "," Return the view in this Window that currently has focus, or null if there are none. <br /><br />"
"android.view.Window.onConfigurationChanged (Configuration newConfig) "," Should be called when the configuration is changed. <br /><br />"
"android.view.Window.setGravity (int gravity) "," Set the gravity of the window, as per the Gravity constants. <br /><br />"
"android.view.Window.closeAllPanels () "," no description <br /><br />"
"android.view.Window.setBackgroundDrawable (Drawable drawable) "," Change the background of this window to a custom Drawable. <br /><br />"
"android.view.Window.hasChildren () "," no description <br /><br />"
"android.view.Window.getReenterTransition () "," Returns the Transition that will be used to move Views in to the scene when returning from a previously-started Activity. <br /><br />"
"android.view.Window.getContentScene () "," Retrieve the Scene representing this window's current content. <br /><br />"
"android.view.Window.setClipToOutline (boolean clipToOutline) "," Sets whether window content should be clipped to the outline of the window background. <br /><br />"
"android.view.Window.setFeatureDrawable (int featureId, Drawable drawable) "," Set an explicit Drawable value for feature of this window. <br /><br />"
"android.view.Window.getSharedElementReenterTransition () "," Returns the Transition that will be used for shared elements reentering from a started Activity after it has returned the shared element to it start location. <br /><br />"
"android.view.Window.invalidatePanelMenu (int featureId) "," no description <br /><br />"
"android.view.Window.getSharedElementsUseOverlay () "," Returns true when shared elements should use an Overlay during shared element transitions or false when they should animate as part of the normal View hierarchy. <br /><br />"
"android.view.Window.setReenterTransition (Transition transition) "," Sets the Transition that will be used to move Views in to the scene when returning from a previously-started Activity. <br /><br />"
"android.view.Window.setSharedElementReturnTransition (Transition transition) "," Sets the Transition that will be used for shared elements transferred back to a calling Activity. <br /><br />"
"android.view.Window.getAttributes () "," Retrieve the current window attributes associated with this panel. <br /><br />"
"android.view.Window.setContentView (int layoutResID)   Convenience for setContentView (View, android.view.ViewGroup.LayoutParams) "," Convenience for setContentView(View, android.view.ViewGroup.LayoutParams) to set the screen content from a layout resource. <br /><br />"
"android.view.Window.closePanel (int featureId) "," no description <br /><br />"
"android.view.Window.setReturnTransition (Transition transition)   Sets the Transition that will be used to move Views out of the scene when the Window is preparing to close, for example after a call to finishAfterTransition () "," Sets the Transition that will be used to move Views out of the scene when the Window is preparing to close, for example after a call to finishAfterTransition(). <br /><br />"
"android.view.Window.getTransitionBackgroundFadeDuration () "," Returns the duration, in milliseconds, of the window background fade when transitioning into or away from an Activity when called with an Activity Transition. <br /><br />"
"android.view.Window.setTitle (CharSequence title) "," no description <br /><br />"
"android.view.Window.setUiOptions (int uiOptions, int mask) "," Set extra options that will influence the UI for this window. <br /><br />"
"android.view.WindowAnimationFrameStats.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.view.WindowAnimationFrameStats.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.WindowAnimationFrameStats.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.view.WindowContentFrameStats.writeToParcel (Parcel parcel, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.view.WindowContentFrameStats.getFramePostedTimeNano (int index) "," Get the time a frame at a given index was posted by the producer (e.g. <br /><br />"
"android.view.WindowContentFrameStats.getFrameReadyTimeNano (int index) "," Get the time a frame at a given index was ready for presentation. <br /><br />"
"android.view.WindowContentFrameStats.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.WindowContentFrameStats.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.view.WindowId.FocusObserver.onFocusGained (WindowId token) "," Called when one of the monitored windows gains input focus. <br /><br />"
"android.view.WindowId.FocusObserver.onFocusLost (WindowId token) "," Called when one of the monitored windows loses input focus. <br /><br />"
"android.view.WindowId.registerFocusObserver (WindowId.FocusObserver observer) "," Start monitoring for changes in the focus state of the window. <br /><br />"
"android.view.WindowId.isFocused () "," Retrieve the current focus state of the associated window. <br /><br />"
"android.view.WindowId.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.view.WindowId.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.view.WindowId.unregisterFocusObserver (WindowId.FocusObserver observer) "," Stop monitoring changes in the focus state of the window. <br /><br />"
"android.view.WindowId.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.WindowId.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.view.WindowId.equals (Object otherObj) "," Comparison operator on two IntentSender objects, such that true is returned then they both represent the same operation from the same package. <br /><br />"
"android.view.WindowInsets.consumeStableInsets () "," Returns a copy of this WindowInsets with the stable insets fully consumed. <br /><br />"
"android.view.WindowInsets.hasStableInsets () "," Returns true if this WindowInsets has nonzero stable insets. <br /><br />"
"android.view.WindowInsets.isRound () "," Returns true if the associated window has a round shape. <br /><br />"
"android.view.WindowInsets.hasSystemWindowInsets () "," Returns true if this WindowInsets has nonzero system window insets. <br /><br />"
"android.view.WindowInsets.consumeSystemWindowInsets () "," Returns a copy of this WindowInsets with the system window insets fully consumed. <br /><br />"
"android.view.WindowInsets.getStableInsetRight () "," Returns the right stable inset in pixels. <br /><br />"
"android.view.WindowInsets.hasInsets () "," Returns true if this WindowInsets has any nonzero insets. <br /><br />"
"android.view.WindowInsets.isConsumed () "," Check if these insets have been fully consumed. <br /><br />"
"android.view.WindowInsets.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.view.WindowInsets.getStableInsetTop () "," Returns the top stable inset in pixels. <br /><br />"
"android.view.WindowInsets.getStableInsetBottom () "," Returns the bottom stable inset in pixels. <br /><br />"
"android.view.WindowInsets.getSystemWindowInsetLeft () "," Returns the left system window inset in pixels. <br /><br />"
"android.view.WindowInsets.getSystemWindowInsetBottom () "," Returns the bottom system window inset in pixels. <br /><br />"
"android.view.WindowInsets.getSystemWindowInsetTop () "," Returns the top system window inset in pixels. <br /><br />"
"android.view.WindowInsets.getSystemWindowInsetRight () "," Returns the right system window inset in pixels. <br /><br />"
"android.view.WindowInsets.getStableInsetLeft () "," Returns the left stable inset in pixels. <br /><br />"
"android.view.WindowInsets.replaceSystemWindowInsets (int left, int top, int right, int bottom) "," Returns a copy of this WindowInsets with selected system window insets replaced with new values. <br /><br />"
"android.view.WindowInsets.replaceSystemWindowInsets (Rect systemWindowInsets) "," Returns a copy of this WindowInsets with selected system window insets replaced with new values. <br /><br />"
"android.view.WindowManager.LayoutParams.mayUseInputMethod (int flags) "," Given a particular set of window manager flags, determine whether such a window may be a target for an input method when it has focus. <br /><br />"
"android.view.WindowManager.LayoutParams.copyFrom (WindowManager.LayoutParams o) "," no description <br /><br />"
"android.view.WindowManager.LayoutParams.debug (String output) "," Returns a String representation of this set of layout parameters. <br /><br />"
"android.view.WindowManager.LayoutParams.writeToParcel (Parcel out, int parcelableFlags) "," Flatten this object in to a Parcel. <br /><br />"
"android.view.WindowManager.LayoutParams.getTitle () "," no description <br /><br />"
"android.view.WindowManager.LayoutParams.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.view.WindowManager.LayoutParams.setTitle (CharSequence title) "," no description <br /><br />"
"android.view.WindowManager.LayoutParams.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.webkit.ClientCertRequest.ignore () "," Ignore the request for now. <br /><br />"
"android.webkit.ClientCertRequest.getHost () "," Returns the host name of the server requesting the certificate. <br /><br />"
"android.webkit.ClientCertRequest.getPort () "," Returns the port number of the server requesting the certificate. <br /><br />"
"android.webkit.ClientCertRequest.cancel () "," Cancel this request. <br /><br />"
"android.webkit.ClientCertRequest.proceed (PrivateKey privateKey, X509Certificate[] chain) "," Proceed with the specified private key and client certificate chain. <br /><br />"
"android.webkit.ClientCertRequest.getKeyTypes ()   Returns the acceptable types of asymmetric keys  (can be null) "," Returns the acceptable types of asymmetric keys (can be null). <br /><br />"
"android.webkit.ClientCertRequest.getPrincipals ()   Returns the acceptable certificate issuers for the certificate matching the private key  (can be null) "," Returns the acceptable certificate issuers for the certificate matching the private key (can be null). <br /><br />"
"android.webkit.ConsoleMessage.message () "," no description <br /><br />"
"android.webkit.ConsoleMessage.lineNumber () "," no description <br /><br />"
"android.webkit.ConsoleMessage.messageLevel () "," no description <br /><br />"
"android.webkit.ConsoleMessage.sourceId () "," no description <br /><br />"
"android.webkit.CookieManager.acceptThirdPartyCookies (WebView webview) "," Gets whether the WebView should allow third party cookies to be set. <br /><br />"
"android.webkit.CookieManager.getCookie (String url) "," Gets the cookies for the given URL. <br /><br />"
"android.webkit.CookieManager.getInstance () "," Gets the singleton CookieManager instance. <br /><br />"
"android.webkit.CookieManager.hasCookies () "," Gets whether there are stored cookies. <br /><br />"
"android.webkit.CookieManager.flush () "," Ensures all cookies currently accessible through the getCookie API are written to persistent storage. <br /><br />"
"android.webkit.CookieManager.removeSessionCookie ()    This method was deprecated in API level 21. use removeSessionCookies (ValueCallback) "," This method was deprecated in API level 21. use removeSessionCookies(ValueCallback) instead. <br /><br />"
"android.webkit.CookieManager.setAcceptCookie (boolean accept) "," Sets whether the application's WebView instances should send and accept cookies. <br /><br />"
"android.webkit.CookieManager.setAcceptFileSchemeCookies (boolean accept) "," Sets whether the application's WebView instances should send and accept cookies for file scheme URLs. <br /><br />"
"android.webkit.CookieManager.setCookie (String url, String value) "," Sets a cookie for the given URL. <br /><br />"
"android.webkit.CookieManager.setAcceptThirdPartyCookies (WebView webview, boolean accept) "," Sets whether the WebView should allow third party cookies to be set. <br /><br />"
"android.webkit.CookieManager.acceptCookie () "," Gets whether the application's WebView instances send and accept cookies. <br /><br />"
"android.webkit.CookieManager.setCookie (String url, String value, ValueCallback< Boolean> callback) "," Sets a cookie for the given URL. <br /><br />"
"android.webkit.CookieManager.removeAllCookies (ValueCallback< Boolean> callback) "," Removes all cookies. <br /><br />"
"android.webkit.CookieManager.removeExpiredCookie () "," This method was deprecated in API level 21. The WebView handles removing expired cookies automatically. <br /><br />"
"android.webkit.CookieManager.allowFileSchemeCookies () "," Gets whether the application's WebView instances send and accept cookies for file scheme URLs. <br /><br />"
"android.webkit.CookieManager.removeAllCookie ()    This method was deprecated in API level 21. Use removeAllCookies (ValueCallback) "," This method was deprecated in API level 21. Use removeAllCookies(ValueCallback) instead. <br /><br />"
"android.webkit.CookieManager.removeSessionCookies (ValueCallback< Boolean> callback) "," Removes all session cookies, which are cookies without an expiration date. <br /><br />"
"android.webkit.CookieSyncManager.stopSync () "," This method is deprecated. Calling stopSync is no longer useful as the WebView automatically syncs cookies. <br /><br />"
"android.webkit.CookieSyncManager.getInstance () "," Singleton access to a CookieSyncManager. <br /><br />"
"android.webkit.CookieSyncManager.createInstance (Context context) "," Create a singleton CookieSyncManager within a context <br /><br />"
"android.webkit.CookieSyncManager.run () "," Starts executing the active part of the class' code. <br /><br />"
"android.webkit.CookieSyncManager.resetSync () "," This method is deprecated. Calling resetSync is no longer necessary as the WebView automatically syncs cookies. <br /><br />"
"android.webkit.CookieSyncManager.startSync () "," This method is deprecated. Calling startSync is no longer necessary as the WebView automatically syncs cookies. <br /><br />"
"android.webkit.CookieSyncManager.sync ()    This method is deprecated. Use flush () "," This method is deprecated. Use flush() instead. <br /><br />"
"android.webkit.DateSorter.getBoundary (int index) "," no description <br /><br />"
"android.webkit.DateSorter.getLabel (int index) "," no description <br /><br />"
"android.webkit.DateSorter.getIndex (long time) "," no description <br /><br />"
"android.webkit.DownloadListener.onDownloadStart (String url, String userAgent, String contentDisposition, String mimetype, long contentLength) "," Notify the host application that a file should be downloaded <br /><br />"
"android.webkit.GeolocationPermissions.Callback.invoke (String origin, boolean allow, boolean retain) "," Sets the Geolocation permission state for the supplied origin. <br /><br />"
"android.webkit.HttpAuthHandler.useHttpAuthUsernamePassword () "," Gets whether the credentials stored for the current host (i.e. <br /><br />"
"android.webkit.HttpAuthHandler.cancel () "," Instructs the WebView to cancel the authentication request. <br /><br />"
"android.webkit.HttpAuthHandler.proceed (String username, String password) "," Instructs the WebView to proceed with the authentication with the given credentials. <br /><br />"
"android.webkit.JsPromptResult.confirm (String result) "," Handle a confirmation response from the user. <br /><br />"
"android.webkit.JsResult.confirm () "," Handle a confirmation response from the user. <br /><br />"
"android.webkit.JsResult.cancel () "," Handle the result if the user cancelled the dialog. <br /><br />"
"android.webkit.MimeTypeMap.hasExtension (String extension) "," Return true if the given extension has a registered MIME type. <br /><br />"
"android.webkit.MimeTypeMap.getMimeTypeFromExtension (String extension) "," Return the MIME type for the given extension. <br /><br />"
"android.webkit.MimeTypeMap.getExtensionFromMimeType (String mimeType) "," Return the registered extension for the given MIME type. <br /><br />"
"android.webkit.MimeTypeMap.getSingleton () "," Get the singleton instance of MimeTypeMap. <br /><br />"
"android.webkit.MimeTypeMap.hasMimeType (String mimeType) "," Return true if the given MIME type has an entry in the map. <br /><br />"
"android.webkit.MimeTypeMap.getFileExtensionFromUrl (String url) "," Returns the file extension or an empty string iff there is no extension. <br /><br />"
"android.webkit.PermissionRequest.getResources () "," Call this method to get the resources the web page is trying to access. <br /><br />"
"android.webkit.PermissionRequest.grant (String[] resources) "," Call this method to grant origin the permission to access the given resources. <br /><br />"
"android.webkit.PermissionRequest.getOrigin () "," Call this method to get the origin of the web page which is trying to access the restricted resources. <br /><br />"
"android.webkit.PermissionRequest.deny () "," Call this method to deny the request. <br /><br />"
"android.webkit.PluginStub.getFullScreenView (int NPP, Context context) "," Return a custom full-screen view to be displayed when the user requests a plugin display as full-screen. <br /><br />"
"android.webkit.PluginStub.getEmbeddedView (int NPP, Context context) "," Return a custom embedded view to draw the plugin. <br /><br />"
"android.webkit.SslErrorHandler.proceed () "," Proceed with the SSL certificate. <br /><br />"
"android.webkit.SslErrorHandler.cancel () "," Cancel this request and all pending requests for the WebView that had the error. <br /><br />"
"android.webkit.URLUtil.isDataUrl (String url) "," no description <br /><br />"
"android.webkit.URLUtil.isValidUrl (String url) "," no description <br /><br />"
"android.webkit.URLUtil.guessUrl (String inUrl)   Cleans up  (if possible) "," Cleans up (if possible) user-entered web addresses <br /><br />"
"android.webkit.URLUtil.decode (byte[] url) "," no description <br /><br />"
"android.webkit.URLUtil.isHttpsUrl (String url) "," no description <br /><br />"
"android.webkit.URLUtil.guessFileName (String url, String contentDisposition, String mimeType) "," Guesses canonical filename that a download would have, using the URL and contentDisposition. <br /><br />"
"android.webkit.URLUtil.isCookielessProxyUrl (String url) "," This method was deprecated in API level 3. Cookieless proxy is no longer supported. <br /><br />"
"android.webkit.URLUtil.isHttpUrl (String url) "," no description <br /><br />"
"android.webkit.URLUtil.composeSearchUrl (String inQuery, String template, String queryPlaceHolder) "," no description <br /><br />"
"android.webkit.URLUtil.stripAnchor (String url) "," Strips the url of the anchor. <br /><br />"
"android.webkit.URLUtil.isAboutUrl (String url) "," no description <br /><br />"
"android.webkit.URLUtil.isFileUrl (String url) "," no description <br /><br />"
"android.webkit.URLUtil.isNetworkUrl (String url) "," no description <br /><br />"
"android.webkit.URLUtil.isJavaScriptUrl (String url) "," no description <br /><br />"
"android.webkit.URLUtil.isAssetUrl (String url) "," no description <br /><br />"
"android.webkit.URLUtil.isContentUrl (String url) "," no description <br /><br />"
"android.webkit.ValueCallback<T>.onReceiveValue (T value) "," Invoked when the value is available. <br /><br />"
"android.webkit.WebBackForwardList.getSize () "," Get the total size of the back/forward list. <br /><br />"
"android.webkit.WebBackForwardList.getItemAtIndex (int index) "," Get the history item at the given index. <br /><br />"
"android.webkit.WebBackForwardList.getCurrentIndex () "," Get the index of the current history item. <br /><br />"
"android.webkit.WebBackForwardList.getCurrentItem () "," Return the current history item. <br /><br />"
"android.webkit.WebChromeClient.CustomViewCallback.onCustomViewHidden () "," Invoked when the host application dismisses the custom view. <br /><br />"
"android.webkit.WebChromeClient.FileChooserParams.isCaptureEnabled () "," Returns preference for a live media captured value (e.g. <br /><br />"
"android.webkit.WebChromeClient.FileChooserParams.getFilenameHint () "," The file name of a default selection if specified, or null. <br /><br />"
"android.webkit.WebChromeClient.FileChooserParams.parseResult (int resultCode, Intent data) "," Parse the result returned by the file picker activity. <br /><br />"
"android.webkit.WebChromeClient.FileChooserParams.createIntent () "," Creates an intent that would start a file picker for file selection. <br /><br />"
"android.webkit.WebChromeClient.FileChooserParams.getAcceptTypes () "," Returns an array of acceptable MIME types. <br /><br />"
"android.webkit.WebChromeClient.FileChooserParams.getTitle () "," Returns the title to use for this file selector, or null. <br /><br />"
"android.webkit.WebChromeClient.FileChooserParams.getMode () "," Returns file chooser mode. <br /><br />"
"android.webkit.WebChromeClient.onShowFileChooser (WebView webView, ValueCallback< Uri[]> filePathCallback, WebChromeClient.FileChooserParams fileChooserParams) "," Tell the client to show a file chooser. <br /><br />"
"android.webkit.WebChromeClient.onConsoleMessage (ConsoleMessage consoleMessage) "," Report a JavaScript console message to the host application. <br /><br />"
"android.webkit.WebChromeClient.onReachedMaxAppCacheSize (long requiredStorage, long quota, WebStorage.QuotaUpdater quotaUpdater) "," This method was deprecated in API level 19. This method is no longer called; WebView now uses the HTML5 / JavaScript Quota Management API. <br /><br />"
"android.webkit.WebChromeClient.onCloseWindow (WebView window) "," Notify the host application to close the given WebView and remove it from the view system if necessary. <br /><br />"
"android.webkit.WebChromeClient.onProgressChanged (WebView view, int newProgress) "," Tell the host application the current progress of loading a page. <br /><br />"
"android.webkit.WebChromeClient.onJsConfirm (WebView view, String url, String message, JsResult result) "," Tell the client to display a confirm dialog to the user. <br /><br />"
"android.webkit.WebChromeClient.onShowCustomView (View view, WebChromeClient.CustomViewCallback callback) "," Notify the host application that the current page would like to show a custom View. <br /><br />"
"android.webkit.WebChromeClient.getDefaultVideoPoster () "," When not playing, video elements are represented by a 'poster' image. <br /><br />"
"android.webkit.WebChromeClient.onPermissionRequestCanceled (PermissionRequest request) "," Notify the host application that the given permission request has been canceled. <br /><br />"
"android.webkit.WebChromeClient.onGeolocationPermissionsHidePrompt ()   Notify the host application that a request for Geolocation permissions, made with a previous call to onGeolocationPermissionsShowPrompt () "," Notify the host application that a request for Geolocation permissions, made with a previous call to onGeolocationPermissionsShowPrompt() has been canceled. <br /><br />"
"android.webkit.WebChromeClient.onShowCustomView (View view, int requestedOrientation, WebChromeClient.CustomViewCallback callback) "," This method was deprecated in API level 18. This method supports the obsolete plugin mechanism, and will not be invoked in future <br /><br />"
"android.webkit.WebChromeClient.onGeolocationPermissionsShowPrompt (String origin, GeolocationPermissions.Callback callback) "," Notify the host application that web content from the specified origin is attempting to use the Geolocation API, but no permission state is currently set for that origin. <br /><br />"
"android.webkit.WebChromeClient.onConsoleMessage (String message, int lineNumber, String sourceID)    This method was deprecated in API level 8. Use onConsoleMessage (ConsoleMessage) "," This method was deprecated in API level 8. Use onConsoleMessage(ConsoleMessage) instead. <br /><br />"
"android.webkit.WebChromeClient.onCreateWindow (WebView view, boolean isDialog, boolean isUserGesture, Message resultMsg) "," Request the host application to create a new window. <br /><br />"
"android.webkit.WebChromeClient.onJsPrompt (WebView view, String url, String message, String defaultValue, JsPromptResult result) "," Tell the client to display a prompt dialog to the user. <br /><br />"
"android.webkit.WebChromeClient.onReceivedIcon (WebView view, Bitmap icon) "," Notify the host application of a new favicon for the current page. <br /><br />"
"android.webkit.WebChromeClient.onJsAlert (WebView view, String url, String message, JsResult result) "," Tell the client to display a javascript alert dialog. <br /><br />"
"android.webkit.WebChromeClient.onPermissionRequest (PermissionRequest request) "," Notify the host application that web content is requesting permission to access the specified resources and the permission currently isn't granted or denied. <br /><br />"
"android.webkit.WebChromeClient.getVisitedHistory (ValueCallback< String[]> callback) "," Obtains a list of all visited history items, used for link coloring <br /><br />"
"android.webkit.WebChromeClient.onHideCustomView () "," Notify the host application that the current page would like to hide its custom view. <br /><br />"
"android.webkit.WebChromeClient.onRequestFocus (WebView view) "," Request display and focus for this WebView. <br /><br />"
"android.webkit.WebChromeClient.onJsTimeout () "," This method was deprecated in API level 17. This method is no longer supported and will not be invoked. <br /><br />"
"android.webkit.WebChromeClient.onExceededDatabaseQuota (String url, String databaseIdentifier, long quota, long estimatedDatabaseSize, long totalQuota, WebStorage.QuotaUpdater quotaUpdater) "," This method was deprecated in API level 19. This method is no longer called; WebView now uses the HTML5 / JavaScript Quota Management API. <br /><br />"
"android.webkit.WebChromeClient.getVideoLoadingProgressView () "," When the user starts to playback a video element, it may take time for enough data to be buffered before the first frames can be rendered. <br /><br />"
"android.webkit.WebChromeClient.onJsBeforeUnload (WebView view, String url, String message, JsResult result) "," Tell the client to display a dialog to confirm navigation away from the current page. <br /><br />"
"android.webkit.WebChromeClient.onReceivedTitle (WebView view, String title) "," Notify the host application of a change in the document title. <br /><br />"
"android.webkit.WebChromeClient.onReceivedTouchIconUrl (WebView view, String url, boolean precomposed) "," Notify the host application of the url for an apple-touch-icon. <br /><br />"
"android.webkit.WebHistoryItem.getFavicon () "," Return the favicon of this history item or null if no favicon was found. <br /><br />"
"android.webkit.WebHistoryItem.getTitle () "," Return the document title of this history item. <br /><br />"
"android.webkit.WebHistoryItem.getOriginalUrl () "," Return the original url of this history item. <br /><br />"
"android.webkit.WebHistoryItem.getUrl () "," Return the url of this history item. <br /><br />"
"android.webkit.WebIconDatabase.releaseIconForPageUrl (String url) "," Release the icon for the given page url. <br /><br />"
"android.webkit.WebIconDatabase.requestIconForPageUrl (String url, WebIconDatabase.IconListener listener) "," Request the Bitmap representing the icon for the given page url. <br /><br />"
"android.webkit.WebIconDatabase.removeAllIcons () "," Removes all the icons in the database. <br /><br />"
"android.webkit.WebIconDatabase.getInstance () "," Get the global instance of WebIconDatabase. <br /><br />"
"android.webkit.WebIconDatabase.open (String path) "," Open a the icon database and store the icons in the given path. <br /><br />"
"android.webkit.WebIconDatabase.close () "," Close the shared instance of the icon database. <br /><br />"
"android.webkit.WebIconDatabase.retainIconForPageUrl (String url) "," Retain the icon for the given page url. <br /><br />"
"android.webkit.WebIconDatabase.IconListener.onReceivedIcon (String url, Bitmap icon) "," Called when the icon has been retrieved from the database and the result is non-null. <br /><br />"
"android.webkit.WebResourceRequest.isForMainFrame () "," Gets whether the request was made for the main frame. <br /><br />"
"android.webkit.WebResourceRequest.getRequestHeaders () "," Gets the headers associated with the request. <br /><br />"
"android.webkit.WebResourceRequest.hasGesture ()   Gets whether a gesture  (such as a click) "," Gets whether a gesture (such as a click) was associated with the request. <br /><br />"
"android.webkit.WebResourceRequest.getMethod () "," Gets the method associated with the request, for example 'GET'. <br /><br />"
"android.webkit.WebResourceRequest.getUrl () "," Gets the URL for which the resource request was made. <br /><br />"
"android.webkit.WebResourceResponse.setMimeType (String mimeType) "," Sets the resource response's MIME type, for example text/html. <br /><br />"
"android.webkit.WebResourceResponse.setData (InputStream data) "," Sets the input stream that provides the resource response's data. <br /><br />"
"android.webkit.WebResourceResponse.setStatusCodeAndReasonPhrase (int statusCode, String reasonPhrase) "," Sets the resource response's status code and reason phrase. <br /><br />"
"android.webkit.WebResourceResponse.setEncoding (String encoding) "," Sets the resource response's encoding, for example UTF-8. <br /><br />"
"android.webkit.WebResourceResponse.getData () "," Gets the input stream that provides the resource response's data. <br /><br />"
"android.webkit.WebResourceResponse.setResponseHeaders (Map< String,  String> headers) "," Sets the headers for the resource response. <br /><br />"
"android.webkit.WebResourceResponse.getStatusCode () "," Gets the resource response's status code. <br /><br />"
"android.webkit.WebResourceResponse.getMimeType () "," Gets the resource response's MIME type. <br /><br />"
"android.webkit.WebResourceResponse.getEncoding () "," Gets the resource response's encoding. <br /><br />"
"android.webkit.WebResourceResponse.getReasonPhrase () "," Gets the description of the resource response's status code. <br /><br />"
"android.webkit.WebResourceResponse.getResponseHeaders () "," Gets the headers for the resource response. <br /><br />"
"android.webkit.WebSettings.setSaveFormData (boolean save) "," Sets whether the WebView should save form data. <br /><br />"
"android.webkit.WebSettings.setAppCacheMaxSize (long appCacheMaxSize) "," This method was deprecated in API level 18. In future quota will be managed automatically. <br /><br />"
"android.webkit.WebSettings.setEnableSmoothTransition (boolean enable) "," This method was deprecated in API level 17. This method is now obsolete, and will become a no-op in future. <br /><br />"
"android.webkit.WebSettings.getLoadsImagesAutomatically () "," Gets whether the WebView loads image resources. <br /><br />"
"android.webkit.WebSettings.getUserAgentString () "," Gets the WebView's user-agent string. <br /><br />"
"android.webkit.WebSettings.getDefaultUserAgent (Context context) "," Returns the default User-Agent used by a WebView. <br /><br />"
"android.webkit.WebSettings.getStandardFontFamily () "," Gets the standard font family name. <br /><br />"
"android.webkit.WebSettings.setSerifFontFamily (String font) "," Sets the serif font family name. <br /><br />"
"android.webkit.WebSettings.setDefaultTextEncodingName (String encoding) "," Sets the default text encoding name to use when decoding html pages. <br /><br />"
"android.webkit.WebSettings.getCacheMode () "," Gets the current setting for overriding the cache mode. <br /><br />"
"android.webkit.WebSettings.setAppCacheEnabled (boolean flag) "," Sets whether the Application Caches API should be enabled. <br /><br />"
"android.webkit.WebSettings.setStandardFontFamily (String font) "," Sets the standard font family name. <br /><br />"
"android.webkit.WebSettings.setUserAgentString (String ua) "," Sets the WebView's user-agent string. <br /><br />"
"android.webkit.WebSettings.setMixedContentMode (int mode) "," Configures the WebView's behavior when a secure origin attempts to load a resource from an insecure origin. <br /><br />"
"android.webkit.WebSettings.setMinimumLogicalFontSize (int size) "," Sets the minimum logical font size. <br /><br />"
"android.webkit.WebSettings.setDefaultFontSize (int size) "," Sets the default font size. <br /><br />"
"android.webkit.WebSettings.getDefaultTextEncodingName () "," Gets the default text encoding name. <br /><br />"
"android.webkit.WebSettings.getSansSerifFontFamily () "," Gets the sans-serif font family name. <br /><br />"
"android.webkit.WebSettings.getDisplayZoomControls () "," Gets whether the WebView displays on-screen zoom controls when using the built-in zoom mechanisms. <br /><br />"
"android.webkit.WebSettings.setLoadsImagesAutomatically (boolean flag) "," Sets whether the WebView should load image resources. <br /><br />"
"android.webkit.WebSettings.setSupportMultipleWindows (boolean support) "," Sets whether the WebView whether supports multiple windows. <br /><br />"
"android.webkit.WebSettings.setBlockNetworkImage (boolean flag)   Sets whether the WebView should not load image resources from the network  (resources accessed via http and https URI schemes) "," Sets whether the WebView should not load image resources from the network (resources accessed via http and https URI schemes). <br /><br />"
"android.webkit.WebSettings.getLoadWithOverviewMode () "," Gets whether this WebView loads pages in overview mode. <br /><br />"
"android.webkit.WebSettings.setAllowContentAccess (boolean allow) "," Enables or disables content URL access within WebView. <br /><br />"
"android.webkit.WebSettings.setAllowFileAccessFromFileURLs (boolean flag) "," Sets whether JavaScript running in the context of a file scheme URL should be allowed to access content from other file scheme URLs. <br /><br />"
"android.webkit.WebSettings.getDefaultFixedFontSize () "," Gets the default fixed font size. <br /><br />"
"android.webkit.WebSettings.setDomStorageEnabled (boolean flag) "," Sets whether the DOM storage API is enabled. <br /><br />"
"android.webkit.WebSettings.setJavaScriptCanOpenWindowsAutomatically (boolean flag) "," Tells JavaScript to open windows automatically. <br /><br />"
"android.webkit.WebSettings.setLightTouchEnabled (boolean enabled) "," This method was deprecated in API level 18. From JELLY_BEAN this setting is obsolete and has no effect. <br /><br />"
"android.webkit.WebSettings.getDomStorageEnabled () "," Gets whether the DOM Storage APIs are enabled. <br /><br />"
"android.webkit.WebSettings.getBlockNetworkImage () "," Gets whether the WebView does not load image resources from the network. <br /><br />"
"android.webkit.WebSettings.setDefaultZoom (WebSettings.ZoomDensity zoom) "," This method was deprecated in API level 19. This method is no longer supported, see the function documentation for recommended alternatives. <br /><br />"
"android.webkit.WebSettings.getFantasyFontFamily () "," Gets the fantasy font family name. <br /><br />"
"android.webkit.WebSettings.setSansSerifFontFamily (String font) "," Sets the sans-serif font family name. <br /><br />"
"android.webkit.WebSettings.getLightTouchEnabled () "," This method was deprecated in API level 18. This setting is obsolete. <br /><br />"
"android.webkit.WebSettings.setSavePassword (boolean save) "," This method was deprecated in API level 18. Saving passwords in WebView will not be supported in future versions. <br /><br />"
"android.webkit.WebSettings.getFixedFontFamily () "," Gets the fixed font family name. <br /><br />"
"android.webkit.WebSettings.setFantasyFontFamily (String font) "," Sets the fantasy font family name. <br /><br />"
"android.webkit.WebSettings.setGeolocationDatabasePath (String databasePath) "," Sets the path where the Geolocation databases should be saved. <br /><br />"
"android.webkit.WebSettings.getMediaPlaybackRequiresUserGesture () "," Gets whether the WebView requires a user gesture to play media. <br /><br />"
"android.webkit.WebSettings.getMinimumFontSize () "," Gets the minimum font size. <br /><br />"
"android.webkit.WebSettings.getDefaultFontSize () "," Gets the default font size. <br /><br />"
"android.webkit.WebSettings.getBlockNetworkLoads () "," Gets whether the WebView does not load any resources from the network. <br /><br />"
"android.webkit.WebSettings.setCursiveFontFamily (String font) "," Sets the cursive font family name. <br /><br />"
"android.webkit.WebSettings.getSaveFormData () "," Gets whether the WebView saves form data. <br /><br />"
"android.webkit.WebSettings.enableSmoothTransition () "," This method was deprecated in API level 17. This method is now obsolete, and will become a no-op in future. <br /><br />"
"android.webkit.WebSettings.getCursiveFontFamily () "," Gets the cursive font family name. <br /><br />"
"android.webkit.WebSettings.getMinimumLogicalFontSize () "," Gets the minimum logical font size. <br /><br />"
"android.webkit.WebSettings.setAllowUniversalAccessFromFileURLs (boolean flag) "," Sets whether JavaScript running in the context of a file scheme URL should be allowed to access content from any origin. <br /><br />"
"android.webkit.WebSettings.setCacheMode (int mode) "," Overrides the way the cache is used. <br /><br />"
"android.webkit.WebSettings.getLayoutAlgorithm () "," Gets the current layout algorithm. <br /><br />"
"android.webkit.WebSettings.getPluginState () "," This method was deprecated in API level 18. Plugins will not be supported in future, and should not be used. <br /><br />"
"android.webkit.WebSettings.setJavaScriptEnabled (boolean flag) "," Tells the WebView to enable JavaScript execution. <br /><br />"
"android.webkit.WebSettings.getUseWideViewPort () "," Gets whether the WebView supports the 'viewport' HTML meta tag or will use a wide viewport. <br /><br />"
"android.webkit.WebSettings.getAllowFileAccess () "," Gets whether this WebView supports file access. <br /><br />"
"android.webkit.WebSettings.setBuiltInZoomControls (boolean enabled) "," Sets whether the WebView should use its built-in zoom mechanisms. <br /><br />"
"android.webkit.WebSettings.setBlockNetworkLoads (boolean flag) "," Sets whether the WebView should not load resources from the network. <br /><br />"
"android.webkit.WebSettings.setAppCachePath (String appCachePath) "," Sets the path to the Application Caches files. <br /><br />"
"android.webkit.WebSettings.setSupportZoom (boolean support) "," Sets whether the WebView should support zooming using its on-screen zoom controls and gestures. <br /><br />"
"android.webkit.WebSettings.setNeedInitialFocus (boolean flag)   Tells the WebView whether it needs to set a node to have focus when requestFocus (int, android.graphics.Rect) "," Tells the WebView whether it needs to set a node to have focus when requestFocus(int, android.graphics.Rect) is called. <br /><br />"
"android.webkit.WebSettings.getAllowUniversalAccessFromFileURLs () "," Gets whether JavaScript running in the context of a file scheme URL can access content from any origin. <br /><br />"
"android.webkit.WebSettings.setRenderPriority (WebSettings.RenderPriority priority) "," This method was deprecated in API level 18. It is not recommended to adjust thread priorities, and this will not be supported in future versions. <br /><br />"
"android.webkit.WebSettings.setLoadWithOverviewMode (boolean overview) "," Sets whether the WebView loads pages in overview mode, that is, zooms out the content to fit on screen by width. <br /><br />"
"android.webkit.WebSettings.setDisplayZoomControls (boolean enabled) "," Sets whether the WebView should display on-screen zoom controls when using the built-in zoom mechanisms. <br /><br />"
"android.webkit.WebSettings.setDatabaseEnabled (boolean flag) "," Sets whether the database storage API is enabled. <br /><br />"
"android.webkit.WebSettings.getJavaScriptEnabled () "," Gets whether JavaScript is enabled. <br /><br />"
"android.webkit.WebSettings.setDatabasePath (String databasePath) "," This method was deprecated in API level 19. Database paths are managed by the implementation and calling this method will have no effect. <br /><br />"
"android.webkit.WebSettings.getBuiltInZoomControls () "," Gets whether the zoom mechanisms built into WebView are being used. <br /><br />"
"android.webkit.WebSettings.getDatabasePath () "," This method was deprecated in API level 19. Database paths are managed by the implementation this method is obsolete. <br /><br />"
"android.webkit.WebSettings.supportMultipleWindows () "," Gets whether the WebView supports multiple windows. <br /><br />"
"android.webkit.WebSettings.getAllowContentAccess () "," Gets whether this WebView supports content URL access. <br /><br />"
"android.webkit.WebSettings.setMediaPlaybackRequiresUserGesture (boolean require) "," Sets whether the WebView requires a user gesture to play media. <br /><br />"
"android.webkit.WebSettings.setDefaultFixedFontSize (int size) "," Sets the default fixed font size. <br /><br />"
"android.webkit.WebSettings.getJavaScriptCanOpenWindowsAutomatically () "," Gets whether JavaScript can open windows automatically. <br /><br />"
"android.webkit.WebSettings.getSerifFontFamily () "," Gets the serif font family name. <br /><br />"
"android.webkit.WebSettings.getAllowFileAccessFromFileURLs () "," Gets whether JavaScript running in the context of a file scheme URL can access content from other file scheme URLs. <br /><br />"
"android.webkit.WebSettings.setMinimumFontSize (int size) "," Sets the minimum font size. <br /><br />"
"android.webkit.WebSettings.setLayoutAlgorithm (WebSettings.LayoutAlgorithm l) "," Sets the underlying layout algorithm. <br /><br />"
"android.webkit.WebSettings.setFixedFontFamily (String font) "," Sets the fixed font family name. <br /><br />"
"android.webkit.WebSettings.supportZoom () "," Gets whether the WebView supports zoom. <br /><br />"
"android.webkit.WebSettings.setPluginState (WebSettings.PluginState state) "," This method was deprecated in API level 18. Plugins will not be supported in future, and should not be used. <br /><br />"
"android.webkit.WebSettings.getTextZoom () "," Gets the text zoom of the page in percent. <br /><br />"
"android.webkit.WebSettings.setUseWideViewPort (boolean use) "," Sets whether the WebView should enable support for the 'viewport' HTML meta tag or should use a wide viewport. <br /><br />"
"android.webkit.WebSettings.getDatabaseEnabled () "," Gets whether the database storage API is enabled. <br /><br />"
"android.webkit.WebSettings.setAllowFileAccess (boolean allow) "," Enables or disables file access within WebView. <br /><br />"
"android.webkit.WebSettings.getSavePassword () "," This method was deprecated in API level 18. Saving passwords in WebView will not be supported in future versions. <br /><br />"
"android.webkit.WebSettings.setGeolocationEnabled (boolean flag) "," Sets whether Geolocation is enabled. <br /><br />"
"android.webkit.WebSettings.getMixedContentMode () "," Gets the current behavior of the WebView with regard to loading insecure content from a secure origin. <br /><br />"
"android.webkit.WebSettings.setTextSize (WebSettings.TextSize t)    This method was deprecated in API level 14. Use setTextZoom (int) "," This method was deprecated in API level 14. Use setTextZoom(int) instead. <br /><br />"
"android.webkit.WebSettings.setTextZoom (int textZoom) "," Sets the text zoom of the page in percent. <br /><br />"
"android.webkit.WebSettings.getTextSize ()    This method was deprecated in API level 14. Use getTextZoom () "," This method was deprecated in API level 14. Use getTextZoom() instead. <br /><br />"
"android.webkit.WebSettings.getDefaultZoom () "," This method was deprecated in API level 19. Will only return the default value. <br /><br />"
"android.webkit.WebStorage.Origin.getUsage () "," Gets the total amount of storage currently being used by this origin, for all JavaScript storage APIs, in bytes. <br /><br />"
"android.webkit.WebStorage.Origin.getOrigin () "," Gets the string representation of this origin. <br /><br />"
"android.webkit.WebStorage.Origin.getQuota () "," Gets the quota for this origin, for the Web SQL Database API, in bytes. <br /><br />"
"android.webkit.WebStorage.QuotaUpdater.updateQuota (long newQuota) "," Provides a new quota, specified in bytes. <br /><br />"
"android.webkit.WebView.FindListener.onFindResultReceived (int activeMatchOrdinal, int numberOfMatches, boolean isDoneCounting) "," Notifies the listener about progress made by a find operation. <br /><br />"
"android.webkit.WebView.HitTestResult.getType () "," Gets the type of the hit test result. <br /><br />"
"android.webkit.WebView.HitTestResult.getExtra () "," Gets additional type-dependant information about the result. <br /><br />"
"android.webkit.WebView.clearSslPreferences () "," Clears the SSL preferences table stored in response to proceeding with SSL certificate errors. <br /><br />"
"android.webkit.WebView.canZoomOut ()    This method was deprecated in API level 17. This method is prone to inaccuracy due to race conditions between the web rendering and UI threads; prefer onScaleChanged (WebView, float, float) "," This method was deprecated in API level 17. This method is prone to inaccuracy due to race conditions between the web rendering and UI threads; prefer onScaleChanged(WebView, float, float). <br /><br />"
"android.webkit.WebView.setHorizontalScrollbarOverlay (boolean overlay) "," Specifies whether the horizontal scrollbar has overlay style. <br /><br />"
"android.webkit.WebView.setWebContentsDebuggingEnabled (boolean enabled)   Enables debugging of web contents  (HTML / CSS / JavaScript) "," Enables debugging of web contents (HTML / CSS / JavaScript) loaded into any WebViews of this application. <br /><br />"
"android.webkit.WebView.savePassword (String host, String username, String password) "," This method was deprecated in API level 18. Saving passwords in WebView will not be supported in future versions. <br /><br />"
"android.webkit.WebView.saveWebArchive (String filename) "," Saves the current view as a web archive. <br /><br />"
"android.webkit.WebView.clearCache (boolean includeDiskFiles) "," Clears the resource cache. <br /><br />"
"android.webkit.WebView.onCreateInputConnection (EditorInfo outAttrs) "," Create a new InputConnection for an InputMethod to interact with the view. <br /><br />"
"android.webkit.WebView.documentHasImages (Message response) "," Queries the document to see if it contains any image references. <br /><br />"
"android.webkit.WebView.freeMemory () "," This method was deprecated in API level 19. Memory caches are automatically dropped when no longer needed, and in response to system memory pressure. <br /><br />"
"android.webkit.WebView.setLayerType (int layerType, Paint paint) "," Specifies the type of layer backing this view. <br /><br />"
"android.webkit.WebView.isPrivateBrowsingEnabled () "," Gets whether private browsing is enabled in this WebView. <br /><br />"
"android.webkit.WebView.pageUp (boolean top) "," Scrolls the contents of this WebView up by half the view size. <br /><br />"
"android.webkit.WebView.saveWebArchive (String basename, boolean autoname, ValueCallback< String> callback) "," Saves the current view as a web archive. <br /><br />"
"android.webkit.WebView.performLongClick () "," Call this view's OnLongClickListener, if it is defined. <br /><br />"
"android.webkit.WebView.getAccessibilityNodeProvider () "," Gets the provider for managing a virtual view hierarchy rooted at this View and reported to AccessibilityServices that explore the window content. <br /><br />"
"android.webkit.WebView.evaluateJavascript (String script, ValueCallback< String> resultCallback) "," Asynchronously evaluates JavaScript in the context of the currently displayed page. <br /><br />"
"android.webkit.WebView.clearHistory () "," Tells this WebView to clear its internal back/forward list. <br /><br />"
"android.webkit.WebView.getOriginalUrl () "," Gets the original URL for the current page. <br /><br />"
"android.webkit.WebView.removeJavascriptInterface (String name) "," Removes a previously injected Java object from this WebView. <br /><br />"
"android.webkit.WebView.onResume ()   Resumes a WebView after a previous call to onPause () "," Resumes a WebView after a previous call to onPause(). <br /><br />"
"android.webkit.WebView.resumeTimers () "," Resumes all layout, parsing, and JavaScript timers for all WebViews. <br /><br />"
"android.webkit.WebView.createPrintDocumentAdapter ()    This method was deprecated in API level 21. Use createPrintDocumentAdapter (String) "," This method was deprecated in API level 21. Use createPrintDocumentAdapter(String) which requires user to provide a print document name. <br /><br />"
"android.webkit.WebView.setWebChromeClient (WebChromeClient client) "," Sets the chrome handler. <br /><br />"
"android.webkit.WebView.canGoBack () "," Gets whether this WebView has a back history item. <br /><br />"
"android.webkit.WebView.setWebViewClient (WebViewClient client) "," Sets the WebViewClient that will receive various notifications and requests. <br /><br />"
"android.webkit.WebView.setHttpAuthUsernamePassword (String host, String realm, String username, String password) "," Stores HTTP authentication credentials for a given host and realm. <br /><br />"
"android.webkit.WebView.setCertificate (SslCertificate certificate) "," This method was deprecated in API level 17. Calling this function has no useful effect, and will be ignored in future releases. <br /><br />"
"android.webkit.WebView.onKeyMultiple (int keyCode, int repeatCount, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyMultiple (): always returns false  (doesn't handle the event) "," Default implementation of KeyEvent.Callback.onKeyMultiple(): always returns false (doesn't handle the event). <br /><br />"
"android.webkit.WebView.findAllAsync (String find) "," Finds all instances of find on the page and highlights them, asynchronously. <br /><br />"
"android.webkit.WebView.setScrollBarStyle (int style) "," Specify the style of the scrollbars. <br /><br />"
"android.webkit.WebView.getCertificate ()   Gets the SSL certificate for the main top-level page or null if there is no certificate  (the site is not secure) "," Gets the SSL certificate for the main top-level page or null if there is no certificate (the site is not secure). <br /><br />"
"android.webkit.WebView.dispatchKeyEvent (KeyEvent event) "," Dispatch a key event to the next view on the focus path. <br /><br />"
"android.webkit.WebView.reload () "," Reloads the current URL. <br /><br />"
"android.webkit.WebView.requestFocusNodeHref (Message hrefMsg) "," Requests the anchor or image element URL at the last tapped point. <br /><br />"
"android.webkit.WebView.invokeZoomPicker () "," Invokes the graphical zoom picker widget for this WebView. <br /><br />"
"android.webkit.WebView.loadUrl (String url, Map< String,  String> additionalHttpHeaders) "," Loads the given URL with the specified additional HTTP headers. <br /><br />"
"android.webkit.WebView.clearClientCertPreferences (Runnable onCleared) "," Clears the client certificate preferences stored in response to proceeding/cancelling client cert requests. <br /><br />"
"android.webkit.WebView.computeScroll () "," Called by a parent to request that a child update its values for mScrollX and mScrollY if necessary. <br /><br />"
"android.webkit.WebView.zoomIn () "," Performs zoom in in this WebView. <br /><br />"
"android.webkit.WebView.stopLoading () "," Stops the current load. <br /><br />"
"android.webkit.WebView.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.webkit.WebView.pauseTimers () "," Pauses all layout, parsing, and JavaScript timers for all WebViews. <br /><br />"
"android.webkit.WebView.setPictureListener (WebView.PictureListener listener) "," This method was deprecated in API level 12. This method is now obsolete. <br /><br />"
"android.webkit.WebView.destroy () "," Destroys the internal state of this WebView. <br /><br />"
"android.webkit.WebView.zoomOut () "," Performs zoom out in this WebView. <br /><br />"
"android.webkit.WebView.setVerticalScrollbarOverlay (boolean overlay) "," Specifies whether the vertical scrollbar has overlay style. <br /><br />"
"android.webkit.WebView.loadDataWithBaseURL (String baseUrl, String data, String mimeType, String encoding, String historyUrl) "," Loads the given data into this WebView, using baseUrl as the base URL for the content. <br /><br />"
"android.webkit.WebView.setInitialScale (int scaleInPercent) "," Sets the initial scale for this WebView. <br /><br />"
"android.webkit.WebView.setLayoutParams (ViewGroup.LayoutParams params) "," Set the layout parameters associated with this view. <br /><br />"
"android.webkit.WebView.onPause () "," Pauses any extra processing associated with this WebView and its associated DOM, plugins, JavaScript etc. <br /><br />"
"android.webkit.WebView.getProgress () "," Gets the progress for the current page. <br /><br />"
"android.webkit.WebView.overlayVerticalScrollbar () "," Gets whether vertical scrollbar has overlay style. <br /><br />"
"android.webkit.WebView.clearMatches ()   Clears the highlighting surrounding text matches created by findAllAsync (String) "," Clears the highlighting surrounding text matches created by findAllAsync(String). <br /><br />"
"android.webkit.WebView.onHoverEvent (MotionEvent event) "," Implement this method to handle hover events. <br /><br />"
"android.webkit.WebView.setMapTrackballToArrowKeys (boolean setMap) "," This method was deprecated in API level 17. Only the default case, true, will be supported in a future version. <br /><br />"
"android.webkit.WebView.requestImageRef (Message msg) "," Requests the URL of the image last touched by the user. <br /><br />"
"android.webkit.WebView.onChildViewRemoved (View p, View child) "," This method was deprecated in API level 8. WebView no longer needs to implement ViewGroup.OnHierarchyChangeListener. This method does nothing now. <br /><br />"
"android.webkit.WebView.getHitTestResult () "," Gets a HitTestResult based on the current cursor node. <br /><br />"
"android.webkit.WebView.canZoomIn ()    This method was deprecated in API level 17. This method is prone to inaccuracy due to race conditions between the web rendering and UI threads; prefer onScaleChanged (WebView, float, float) "," This method was deprecated in API level 17. This method is prone to inaccuracy due to race conditions between the web rendering and UI threads; prefer onScaleChanged(WebView, float, float). <br /><br />"
"android.webkit.WebView.onChildViewAdded (View parent, View child) "," This method was deprecated in API level 8. WebView no longer needs to implement ViewGroup.OnHierarchyChangeListener. This method does nothing now. <br /><br />"
"android.webkit.WebView.getTitle () "," Gets the title for the current page. <br /><br />"
"android.webkit.WebView.onWindowFocusChanged (boolean hasWindowFocus) "," Called when the window containing this view gains or loses focus. <br /><br />"
"android.webkit.WebView.canGoBackOrForward (int steps) "," Gets whether the page can go back or forward the given number of steps. <br /><br />"
"android.webkit.WebView.showFindDialog (String text, boolean showIme)    This method was deprecated in API level 18. This method does not work reliably on all Android versions; implementing a custom find dialog using WebView.findAllAsync () "," This method was deprecated in API level 18. This method does not work reliably on all Android versions; implementing a custom find dialog using WebView.findAllAsync() provides a more robust solution. <br /><br />"
"android.webkit.WebView.createPrintDocumentAdapter (String documentName) "," Creates a PrintDocumentAdapter that provides the content of this Webview for printing. <br /><br />"
"android.webkit.WebView.enableSlowWholeDocumentDraw () "," For apps targeting the L release, WebView has a new default behavior that reduces memory footprint and increases performance by intelligently choosing the portion of the HTML document that needs to be drawn. <br /><br />"
"android.webkit.WebView.canGoForward () "," Gets whether this WebView has a forward history item. <br /><br />"
"android.webkit.WebView.findAll (String find)    This method was deprecated in API level 16. findAllAsync (String) "," This method was deprecated in API level 16. findAllAsync(String) is preferred. <br /><br />"
"android.webkit.WebView.onKeyDown (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyDown () "," Default implementation of KeyEvent.Callback.onKeyDown(): perform press of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released, if the view is enabled and clickable. <br /><br />"
"android.webkit.WebView.onTrackballEvent (MotionEvent event) "," Implement this method to handle trackball motion events. <br /><br />"
"android.webkit.WebView.getUrl () "," Gets the URL for the current page. <br /><br />"
"android.webkit.WebView.setOverScrollMode (int mode) "," Set the over-scroll mode for this view. <br /><br />"
"android.webkit.WebView.saveState (Bundle outState)   Saves the state of this WebView used in onSaveInstanceState (Bundle) "," Saves the state of this WebView used in onSaveInstanceState(Bundle). <br /><br />"
"android.webkit.WebView.onGenericMotionEvent (MotionEvent event) "," Implement this method to handle generic motion events. <br /><br />"
"android.webkit.WebView.performAccessibilityAction (int action, Bundle arguments) "," Performs the specified accessibility action on the view. <br /><br />"
"android.webkit.WebView.getContentHeight () "," Gets the height of the HTML content. <br /><br />"
"android.webkit.WebView.requestFocus (int direction, Rect previouslyFocusedRect)   Call this to try to give focus to a specific view or to one of its descendants and give it hints about the direction and a specific rectangle that the focus is coming from. Looks for a view to give focus to respecting the setting specified by getDescendantFocusability () "," Call this to try to give focus to a specific view or to one of its descendants and give it hints about the direction and a specific rectangle that the focus is coming from. Looks for a view to give focus to respecting the setting specified by getDescendantFocusability(). <br /><br />"
"android.webkit.WebView.findAddress (String addr) "," Gets the first substring consisting of the address of a physical location. <br /><br />"
"android.webkit.WebView.onFinishTemporaryDetach ()   Called after onStartTemporaryDetach () "," Called after onStartTemporaryDetach() when the container is done changing the view. <br /><br />"
"android.webkit.WebView.goBack () "," Goes back in the history of this WebView. <br /><br />"
"android.webkit.WebView.getScale ()    This method was deprecated in API level 17. This method is prone to inaccuracy due to race conditions between the web rendering and UI threads; prefer onScaleChanged (WebView, float, float) "," This method was deprecated in API level 17. This method is prone to inaccuracy due to race conditions between the web rendering and UI threads; prefer onScaleChanged(WebView, float, float). <br /><br />"
"android.webkit.WebView.flingScroll (int vx, int vy) "," no description <br /><br />"
"android.webkit.WebView.goBackOrForward (int steps) "," Goes to the history item that is the number of steps away from the current item. <br /><br />"
"android.webkit.WebView.getHttpAuthUsernamePassword (String host, String realm) "," Retrieves HTTP authentication credentials for a given host and realm. <br /><br />"
"android.webkit.WebView.addJavascriptInterface (Object object, String name) "," Injects the supplied Java object into this WebView. <br /><br />"
"android.webkit.WebView.setDownloadListener (DownloadListener listener) "," Registers the interface to be used when content can not be handled by the rendering engine, and should be downloaded instead. <br /><br />"
"android.webkit.WebView.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.webkit.WebView.clearFormData () "," Removes the autocomplete popup from the currently focused form field, if present. <br /><br />"
"android.webkit.WebView.capturePicture ()    This method was deprecated in API level 19. Use onDraw (Canvas) to obtain a bitmap snapshot of the WebView, or saveWebArchive (String) "," This method was deprecated in API level 19. Use onDraw(Canvas) to obtain a bitmap snapshot of the WebView, or saveWebArchive(String) to save the content to a file. <br /><br />"
"android.webkit.WebView.getFavicon () "," Gets the favicon for the current page. <br /><br />"
"android.webkit.WebView.restoreState (Bundle inState) "," Restores the state of this WebView from the given Bundle. <br /><br />"
"android.webkit.WebView.setFindListener (WebView.FindListener listener) "," Registers the listener to be notified as find-on-page operations progress. <br /><br />"
"android.webkit.WebView.zoomBy (float zoomFactor) "," Performs a zoom operation in this WebView. <br /><br />"
"android.webkit.WebView.copyBackForwardList () "," Gets the WebBackForwardList for this WebView. <br /><br />"
"android.webkit.WebView.onTouchEvent (MotionEvent event) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.webkit.WebView.overlayHorizontalScrollbar () "," Gets whether horizontal scrollbar has overlay style. <br /><br />"
"android.webkit.WebView.loadUrl (String url) "," Loads the given URL. <br /><br />"
"android.webkit.WebView.onGlobalFocusChanged (View oldFocus, View newFocus) "," This method was deprecated in API level 3. WebView should not have implemented ViewTreeObserver.OnGlobalFocusChangeListener. This method does nothing now. <br /><br />"
"android.webkit.WebView.onStartTemporaryDetach ()   This is called when a container is going to temporarily detach a child, with "," This is called when a container is going to temporarily detach a child, with ViewGroup.detachViewFromParent. <br /><br />"
"android.webkit.WebView.setBackgroundColor (int color) "," Sets the background color for this view. <br /><br />"
"android.webkit.WebView.shouldDelayChildPressedState () "," Return true if the pressed state should be delayed for children or descendants of this ViewGroup. <br /><br />"
"android.webkit.WebView.onKeyUp (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyUp () "," Default implementation of KeyEvent.Callback.onKeyUp(): perform clicking of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released. <br /><br />"
"android.webkit.WebView.setNetworkAvailable (boolean networkUp) "," Informs WebView of the network state. <br /><br />"
"android.webkit.WebView.findNext (boolean forward)   Highlights and scrolls to the next match found by findAllAsync (String) "," Highlights and scrolls to the next match found by findAllAsync(String), wrapping around page boundaries as necessary. <br /><br />"
"android.webkit.WebView.pageDown (boolean bottom) "," Scrolls the contents of this WebView down by half the page size. <br /><br />"
"android.webkit.WebView.clearView ()    This method was deprecated in API level 18. Use WebView.loadUrl ('about:blank') to reliably reset the view state and release page resources  (including any running JavaScript) "," This method was deprecated in API level 18. Use WebView.loadUrl('about:blank') to reliably reset the view state and release page resources (including any running JavaScript). <br /><br />"
"android.webkit.WebView.loadData (String data, String mimeType, String encoding) "," Loads the given data into this WebView using a 'data' scheme URL. <br /><br />"
"android.webkit.WebView.goForward () "," Goes forward in the history of this WebView. <br /><br />"
"android.webkit.WebView.postUrl (String url, byte[] postData) "," Loads the URL with postData using 'POST' method into this WebView. <br /><br />"
"android.webkit.WebView.getSettings () "," Gets the WebSettings object used to control the settings for this WebView. <br /><br />"
"android.webkit.WebView.requestChildRectangleOnScreen (View child, Rect rect, boolean immediate) "," Called when a child of this group wants a particular rectangle to be positioned onto the screen. <br /><br />"
"android.webkit.WebView.PictureListener.onNewPicture (WebView view, Picture picture) "," This method was deprecated in API level 12. Deprecated due to internal changes. <br /><br />"
"android.webkit.WebView.WebViewTransport.getWebView () "," Gets the WebView object. <br /><br />"
"android.webkit.WebView.WebViewTransport.setWebView (WebView webview) "," Sets the WebView to the transportation object. <br /><br />"
"android.webkit.WebViewClient.onReceivedLoginRequest (WebView view, String realm, String account, String args) "," Notify the host application that a request to automatically log in the user has been processed. <br /><br />"
"android.webkit.WebViewClient.onReceivedClientCertRequest (WebView view, ClientCertRequest request) "," Notify the host application to handle a SSL client certificate request. <br /><br />"
"android.webkit.WebViewClient.shouldInterceptRequest (WebView view, WebResourceRequest request) "," Notify the host application of a resource request and allow the application to return the data. <br /><br />"
"android.webkit.WebViewClient.onFormResubmission (WebView view, Message dontResend, Message resend) "," As the host application if the browser should resend data as the requested page was a result of a POST. <br /><br />"
"android.webkit.WebViewClient.shouldOverrideUrlLoading (WebView view, String url) "," Give the host application a chance to take over the control when a new url is about to be loaded in the current WebView. <br /><br />"
"android.webkit.WebViewClient.onScaleChanged (WebView view, float oldScale, float newScale) "," Notify the host application that the scale applied to the WebView has changed. <br /><br />"
"android.webkit.WebViewClient.shouldOverrideKeyEvent (WebView view, KeyEvent event) "," Give the host application a chance to handle the key event synchronously. <br /><br />"
"android.webkit.WebViewClient.onReceivedHttpAuthRequest (WebView view, HttpAuthHandler handler, String host, String realm) "," Notifies the host application that the WebView received an HTTP authentication request. <br /><br />"
"android.webkit.WebViewClient.onPageStarted (WebView view, String url, Bitmap favicon) "," Notify the host application that a page has started loading. <br /><br />"
"android.webkit.WebViewClient.onReceivedSslError (WebView view, SslErrorHandler handler, SslError error) "," Notify the host application that an SSL error occurred while loading a resource. <br /><br />"
"android.webkit.WebViewClient.shouldInterceptRequest (WebView view, String url)    This method was deprecated in API level 21. Use shouldInterceptRequest (WebView, WebResourceRequest) "," This method was deprecated in API level 21. Use shouldInterceptRequest(WebView, WebResourceRequest) instead. <br /><br />"
"android.webkit.WebViewClient.onLoadResource (WebView view, String url) "," Notify the host application that the WebView will load the resource specified by the given url. <br /><br />"
"android.webkit.WebViewClient.doUpdateVisitedHistory (WebView view, String url, boolean isReload) "," Notify the host application to update its visited links database. <br /><br />"
"android.webkit.WebViewClient.onPageFinished (WebView view, String url) "," Notify the host application that a page has finished loading. <br /><br />"
"android.webkit.WebViewClient.onUnhandledInputEvent (WebView view, InputEvent event) "," Notify the host application that a input event was not handled by the WebView. <br /><br />"
"android.webkit.WebViewClient.onUnhandledKeyEvent (WebView view, KeyEvent event) "," This method was deprecated in API level 21. This method is subsumed by the more generic onUnhandledInputEvent. <br /><br />"
"android.webkit.WebViewClient.onTooManyRedirects (WebView view, Message cancelMsg, Message continueMsg) "," This method was deprecated in API level 8. This method is no longer called. When the WebView encounters a redirect loop, it will cancel the load. <br /><br />"
"android.webkit.WebViewClient.onReceivedError (WebView view, int errorCode, String description, String failingUrl) "," Report an error to the host application. <br /><br />"
"android.webkit.WebViewDatabase.hasHttpAuthUsernamePassword () "," Gets whether there are any saved credentials for HTTP authentication. <br /><br />"
"android.webkit.WebViewDatabase.clearUsernamePassword () "," This method was deprecated in API level 18. Saving passwords in WebView will not be supported in future versions. <br /><br />"
"android.webkit.WebViewDatabase.clearFormData () "," Clears any saved data for web forms. <br /><br />"
"android.webkit.WebViewDatabase.clearHttpAuthUsernamePassword () "," Clears any saved credentials for HTTP authentication. <br /><br />"
"android.webkit.WebViewDatabase.getInstance (Context context) "," no description <br /><br />"
"android.webkit.WebViewDatabase.hasUsernamePassword () "," This method was deprecated in API level 18. Saving passwords in WebView will not be supported in future versions. <br /><br />"
"android.webkit.WebViewDatabase.hasFormData () "," Gets whether there is any saved data for web forms. <br /><br />"
"android.webkit.WebViewFragment.getWebView () "," Gets the WebView. <br /><br />"
"android.webkit.WebViewFragment.onPause () "," Called when the fragment is visible to the user and actively running. <br /><br />"
"android.webkit.WebViewFragment.onDestroyView () "," Called when the WebView has been detached from the fragment. <br /><br />"
"android.webkit.WebViewFragment.onDestroy () "," Called when the fragment is no longer in use. <br /><br />"
"android.webkit.WebViewFragment.onCreateView (LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) "," Called to instantiate the view. <br /><br />"
"android.webkit.WebViewFragment.onResume () "," Called when the fragment is no longer resumed. <br /><br />"
"android.widget.AbsListView.onRestoreInstanceState (Parcelable state)   Hook allowing a view to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState () "," Hook allowing a view to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState(). <br /><br />"
"android.widget.AbsListView.setSelector (Drawable sel) "," no description <br /><br />"
"android.widget.AbsListView.getListPaddingBottom () "," List padding is the maximum of the normal view's padding and the padding of the selector. <br /><br />"
"android.widget.AbsListView.onRtlPropertiesChanged (int layoutDirection)   Called when any RTL property  (layout direction or text direction or text alignment) "," Called when any RTL property (layout direction or text direction or text alignment) has been changed. <br /><br />"
"android.widget.AbsListView.onCancelPendingInputEvents ()   Called as the result of a call to cancelPendingInputEvents () "," Called as the result of a call to cancelPendingInputEvents() on this view or a parent view. <br /><br />"
"android.widget.AbsListView.onGlobalLayout () "," Callback method to be invoked when the global layout state or the visibility of views within the view tree changes <br /><br />"
"android.widget.AbsListView.getVerticalScrollbarWidth () "," Returns the width of the vertical scrollbar. <br /><br />"
"android.widget.AbsListView.onNestedScroll (View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed) "," React to a nested scroll in progress. <br /><br />"
"android.widget.AbsListView.smoothScrollToPosition (int position, int boundPosition) "," Smoothly scroll to the specified adapter position. <br /><br />"
"android.widget.AbsListView.getListPaddingRight () "," List padding is the maximum of the normal view's padding and the padding of the selector. <br /><br />"
"android.widget.AbsListView.pointToPosition (int x, int y) "," Maps a point to a position in the list. <br /><br />"
"android.widget.AbsListView.smoothScrollToPositionFromTop (int position, int offset, int duration) "," Smoothly scroll to the specified adapter position. <br /><br />"
"android.widget.AbsListView.smoothScrollBy (int distance, int duration) "," Smoothly scroll by distance pixels over duration milliseconds. <br /><br />"
"android.widget.AbsListView.onCreateInputConnection (EditorInfo outAttrs) "," Return an InputConnection for editing of the filter text. <br /><br />"
"android.widget.AbsListView.setVerticalScrollbarPosition (int position) "," Set the position of the vertical scroll bar. <br /><br />"
"android.widget.AbsListView.isTextFilterEnabled () "," Indicates whether type filtering is enabled for this view <br /><br />"
"android.widget.AbsListView.checkInputConnectionProxy (View view) "," For filtering we proxy an input connection to an internal text editor, and this allows the proxying to happen. <br /><br />"
"android.widget.AbsListView.setScrollingCacheEnabled (boolean enabled) "," Enables or disables the children's drawing cache during a scroll. <br /><br />"
"android.widget.AbsListView.onFilterComplete (int count) "," Notifies the end of a filtering operation. <br /><br />"
"android.widget.AbsListView.setFastScrollEnabled (boolean enabled) "," Specifies whether fast scrolling is enabled or disabled. <br /><br />"
"android.widget.AbsListView.hasTextFilter () "," Returns if the ListView currently has a text filter. <br /><br />"
"android.widget.AbsListView.setScrollIndicators (View up, View down) "," no description <br /><br />"
"android.widget.AbsListView.jumpDrawablesToCurrentState ()   Call Drawable.jumpToCurrentState () "," Call Drawable.jumpToCurrentState() on all Drawable objects associated with this view. <br /><br />"
"android.widget.AbsListView.setSelectionFromTop (int position, int y) "," Sets the selected item and positions the selection y pixels from the top edge of the ListView. <br /><br />"
"android.widget.AbsListView.setSmoothScrollbarEnabled (boolean enabled) "," When smooth scrollbar is enabled, the position and size of the scrollbar thumb is computed based on the number of visible pixels in the visible items. <br /><br />"
"android.widget.AbsListView.setFastScrollAlwaysVisible (boolean alwaysShow) "," Set whether or not the fast scroller should always be shown in place of the standard scroll bars. <br /><br />"
"android.widget.AbsListView.setItemChecked (int position, boolean value) "," Sets the checked state of the specified position. <br /><br />"
"android.widget.AbsListView.getFocusedRect (Rect r) "," When a view has focus and the user navigates away from it, the next view is searched for starting from the rectangle filled in by this method. <br /><br />"
"android.widget.AbsListView.onTouchEvent (MotionEvent ev) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.widget.AbsListView.onInterceptHoverEvent (MotionEvent event) "," Implement this method to intercept hover events before they are handled by child views. <br /><br />"
"android.widget.AbsListView.onStartNestedScroll (View child, View target, int nestedScrollAxes) "," React to a descendant view initiating a nestable scroll operation, claiming the nested scroll operation if appropriate. <br /><br />"
"android.widget.AbsListView.setAdapter (ListAdapter adapter) "," Sets the adapter that provides the data and the views to represent the data in this widget. <br /><br />"
"android.widget.AbsListView.scrollListBy (int y) "," Scrolls the list items within the view by a specified number of pixels. <br /><br />"
"android.widget.AbsListView.setCacheColorHint (int color) "," When set to a non-zero value, the cache color hint indicates that this list is always drawn on top of a solid, single-color, opaque background. <br /><br />"
"android.widget.AbsListView.invalidateViews () "," Causes all the views to be rebuilt and redrawn. <br /><br />"
"android.widget.AbsListView.setFilterText (String filterText) "," Sets the initial value for the text filter. <br /><br />"
"android.widget.AbsListView.getCacheColorHint () "," When set to a non-zero value, the cache color hint indicates that this list is always drawn on top of a solid, single-color, opaque background <br /><br />"
"android.widget.AbsListView.dispatchDrawableHotspotChanged (float x, float y)   Dispatches drawable hotspot changes to child views that meet at least one of the following criteria:  Returns false from both isClickable () and isLongClickable () Requests duplication of parent state via setDuplicateParentStateEnabled (boolean) "," Dispatches drawable hotspot changes to child views that meet at least one of the following criteria:  Returns false from both isClickable() and isLongClickable() Requests duplication of parent state via setDuplicateParentStateEnabled(boolean) <br /><br />"
"android.widget.AbsListView.verifyDrawable (Drawable dr) "," If your view subclass is displaying its own Drawable objects, it should override this function and return true for any Drawable it is displaying. <br /><br />"
"android.widget.AbsListView.pointToRowId (int x, int y) "," Maps a point to a the rowId of the item which intersects that point. <br /><br />"
"android.widget.AbsListView.afterTextChanged (Editable s) "," For our text watcher that is associated with the text filter. <br /><br />"
"android.widget.AbsListView.getCheckedItemPosition () "," Returns the currently checked item. <br /><br />"
"android.widget.AbsListView.isStackFromBottom () "," Indicates whether the content of this view is pinned to, or stacked from, the bottom edge. <br /><br />"
"android.widget.AbsListView.showContextMenuForChild (View originalView) "," Bring up a context menu for the specified view or its ancestors. <br /><br />"
"android.widget.AbsListView.onRemoteAdapterConnected () "," Called back when the adapter connects to the RemoteViewsService. <br /><br />"
"android.widget.AbsListView.setVelocityScale (float scale) "," Sets a scale factor for the fling velocity. <br /><br />"
"android.widget.AbsListView.setScrollBarStyle (int style) "," Specify the style of the scrollbars. <br /><br />"
"android.widget.AbsListView.performItemClick (View view, int position, long id) "," Call the OnItemClickListener, if it is defined. <br /><br />"
"android.widget.AbsListView.onInitializeAccessibilityNodeInfoForItem (View view, int position, AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about a particular item in the list. <br /><br />"
"android.widget.AbsListView.clearTextFilter () "," Clear the text filter. <br /><br />"
"android.widget.AbsListView.getChoiceMode () "," no description <br /><br />"
"android.widget.AbsListView.getSelector () "," Returns the selector Drawable that is used to draw the selection in the list. <br /><br />"
"android.widget.AbsListView.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.AbsListView.addTouchables (ArrayList< View> views)   Add any touchable views that are descendants of this view  (possibly including this view if it is touchable itself) "," Add any touchable views that are descendants of this view (possibly including this view if it is touchable itself) to views. <br /><br />"
"android.widget.AbsListView.beforeTextChanged (CharSequence s, int start, int count, int after) "," For our text watcher that is associated with the text filter. <br /><br />"
"android.widget.AbsListView.onTextChanged (CharSequence s, int start, int before, int count) "," For our text watcher that is associated with the text filter. <br /><br />"
"android.widget.AbsListView.isItemChecked (int position) "," Returns the checked state of the specified position. <br /><br />"
"android.widget.AbsListView.setSelector (int resID) "," Set a Drawable that should be used to highlight the currently selected item. <br /><br />"
"android.widget.AbsListView.smoothScrollToPosition (int position) "," Smoothly scroll to the specified adapter position. <br /><br />"
"android.widget.AbsListView.getCheckedItemPositions () "," Returns the set of checked items in the list. <br /><br />"
"android.widget.AbsListView.onNestedScrollAccepted (View child, View target, int axes) "," React to the successful claiming of a nested scroll operation. <br /><br />"
"android.widget.AbsListView.onWindowFocusChanged (boolean hasWindowFocus) "," Called when the window containing this view gains or loses focus. <br /><br />"
"android.widget.AbsListView.setTextFilterEnabled (boolean textFilterEnabled) "," Enables or disables the type filter window. <br /><br />"
"android.widget.AbsListView.getCheckedItemCount () "," Returns the number of items currently selected. <br /><br />"
"android.widget.AbsListView.requestLayout () "," Call this when something has changed which has invalidated the layout of this view. <br /><br />"
"android.widget.AbsListView.setFriction (float friction) "," The amount of friction applied to flings. <br /><br />"
"android.widget.AbsListView.onKeyDown (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyDown () "," Default implementation of KeyEvent.Callback.onKeyDown(): perform press of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released, if the view is enabled and clickable. <br /><br />"
"android.widget.AbsListView.getTextFilter () "," Returns the list's text filter, if available. <br /><br />"
"android.widget.AbsListView.getTranscriptMode () "," Returns the current transcript mode. <br /><br />"
"android.widget.AbsListView.getListPaddingLeft () "," List padding is the maximum of the normal view's padding and the padding of the selector. <br /><br />"
"android.widget.AbsListView.onRemoteAdapterDisconnected () "," Called back when the adapter disconnects from the RemoteViewsService. <br /><br />"
"android.widget.AbsListView.setOverScrollMode (int mode) "," Set the over-scroll mode for this view. <br /><br />"
"android.widget.AbsListView.onTouchModeChanged (boolean isInTouchMode) "," Callback method to be invoked when the touch mode changes. <br /><br />"
"android.widget.AbsListView.setDrawSelectorOnTop (boolean onTop) "," Controls whether the selection highlight drawable should be drawn on top of the item or behind it. <br /><br />"
"android.widget.AbsListView.getSelectedView () "," no description <br /><br />"
"android.widget.AbsListView.onGenericMotionEvent (MotionEvent event) "," Implement this method to handle generic motion events. <br /><br />"
"android.widget.AbsListView.performAccessibilityAction (int action, Bundle arguments) "," Performs the specified accessibility action on the view. <br /><br />"
"android.widget.AbsListView.isFastScrollEnabled () "," Returns true if the fast scroller is enabled. <br /><br />"
"android.widget.AbsListView.onInterceptTouchEvent (MotionEvent ev) "," Implement this method to intercept all touch screen motion events. <br /><br />"
"android.widget.AbsListView.getSolidColor () "," Override this if your view is known to always be drawn on top of a solid color background, and needs to draw fading edges. <br /><br />"
"android.widget.AbsListView.clearChoices () "," Clear any choices previously set <br /><br />"
"android.widget.AbsListView.smoothScrollToPositionFromTop (int position, int offset) "," Smoothly scroll to the specified adapter position. <br /><br />"
"android.widget.AbsListView.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.AbsListView.isSmoothScrollbarEnabled () "," Returns the current state of the fast scroll feature. <br /><br />"
"android.widget.AbsListView.onSaveInstanceState () "," Hook allowing a view to generate a representation of its internal state that can later be used to create a new instance with that same state. <br /><br />"
"android.widget.AbsListView.sendAccessibilityEvent (int eventType) "," Sends an accessibility event of the given type. <br /><br />"
"android.widget.AbsListView.onNestedFling (View target, float velocityX, float velocityY, boolean consumed) "," Request a fling from a nested scroll. <br /><br />"
"android.widget.AbsListView.canScrollList (int direction) "," Check if the items in the list can be scrolled in a certain direction. <br /><br />"
"android.widget.AbsListView.setRemoteViewsAdapter (Intent intent) "," Sets up this AbsListView to use a remote views adapter which connects to a RemoteViewsService through the specified intent. <br /><br />"
"android.widget.AbsListView.setMultiChoiceModeListener (AbsListView.MultiChoiceModeListener listener) "," Set a AbsListView.MultiChoiceModeListener that will manage the lifecycle of the selection ActionMode. <br /><br />"
"android.widget.AbsListView.deferNotifyDataSetChanged () "," This defers a notifyDataSetChanged on the pending RemoteViewsAdapter if it has not connected yet. <br /><br />"
"android.widget.AbsListView.fling (int velocityY) "," Initiate a fling with the given velocity. <br /><br />"
"android.widget.AbsListView.isFastScrollAlwaysVisible () "," Returns true if the fast scroller is set to always show on this view. <br /><br />"
"android.widget.AbsListView.setRecyclerListener (AbsListView.RecyclerListener listener) "," Sets the recycler listener to be notified whenever a View is set aside in the recycler for later reuse. <br /><br />"
"android.widget.AbsListView.onKeyUp (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyUp () "," Default implementation of KeyEvent.Callback.onKeyUp(): perform clicking of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released. <br /><br />"
"android.widget.AbsListView.setStackFromBottom (boolean stackFromBottom) "," When stack from bottom is set to true, the list fills its content starting from the bottom of the view. <br /><br />"
"android.widget.AbsListView.draw (Canvas canvas)   Manually render this view  (and all of its children) "," Manually render this view (and all of its children) to the given Canvas. <br /><br />"
"android.widget.AbsListView.requestDisallowInterceptTouchEvent (boolean disallowIntercept)   Called when a child does not want this parent and its ancestors to intercept touch events with onInterceptTouchEvent (MotionEvent) "," Called when a child does not want this parent and its ancestors to intercept touch events with onInterceptTouchEvent(MotionEvent). <br /><br />"
"android.widget.AbsListView.setOnScrollListener (AbsListView.OnScrollListener l) "," Set the listener that will receive notifications every time the list scrolls. <br /><br />"
"android.widget.AbsListView.setChoiceMode (int choiceMode) "," Defines the choice behavior for the List. <br /><br />"
"android.widget.AbsListView.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.widget.AbsListView.reclaimViews (List< View> views)   Move all views  (excluding headers and footers) "," Move all views (excluding headers and footers) held by this AbsListView into the supplied List. <br /><br />"
"android.widget.AbsListView.setFastScrollStyle (int styleResId) "," Specifies the style of the fast scroller decorations. <br /><br />"
"android.widget.AbsListView.getCheckedItemIds () "," Returns the set of checked items ids. <br /><br />"
"android.widget.AbsListView.setTranscriptMode (int mode) "," Puts the list or grid into transcript mode. <br /><br />"
"android.widget.AbsListView.isScrollingCacheEnabled () "," Indicates whether the children's drawing cache is used during a scroll. <br /><br />"
"android.widget.AbsListView.getListPaddingTop () "," List padding is the maximum of the normal view's padding and the padding of the selector. <br /><br />"
"android.widget.AbsListView.MultiChoiceModeListener.onItemCheckedStateChanged (ActionMode mode, int position, long id, boolean checked) "," Called when an item is checked or unchecked during selection mode. <br /><br />"
"android.widget.AbsListView.OnScrollListener.onScrollStateChanged (AbsListView view, int scrollState) "," Callback method to be invoked while the list view or grid view is being scrolled. <br /><br />"
"android.widget.AbsListView.OnScrollListener.onScroll (AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) "," Callback method to be invoked when the list or grid has been scrolled. <br /><br />"
"android.widget.AbsListView.RecyclerListener.onMovedToScrapHeap (View view) "," Indicates that the specified View was moved into the recycler's scrap heap. <br /><br />"
"android.widget.AbsListView.SelectionBoundsAdjuster.adjustListItemSelectionBounds (Rect bounds) "," Called to allow the list item to adjust the bounds shown for its selection. <br /><br />"
"android.widget.AbsoluteLayout.shouldDelayChildPressedState () "," Return true if the pressed state should be delayed for children or descendants of this ViewGroup. <br /><br />"
"android.widget.AbsoluteLayout.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.widget.AbsoluteLayout.LayoutParams.debug (String output) "," Returns a String representation of this set of layout parameters. <br /><br />"
"android.widget.AbsSeekBar.getSplitTrack () "," Returns whether the track should be split by the thumb. <br /><br />"
"android.widget.AbsSeekBar.drawableHotspotChanged (float x, float y) "," This function is called whenever the view hotspot changes and needs to be propagated to drawables or child views managed by the view. <br /><br />"
"android.widget.AbsSeekBar.getKeyProgressIncrement () "," Returns the amount of progress changed via the arrow keys. <br /><br />"
"android.widget.AbsSeekBar.getThumb () "," Return the drawable used to represent the scroll thumb - the component that the user can drag back and forth indicating the current value by its position. <br /><br />"
"android.widget.AbsSeekBar.getThumbOffset () "," no description <br /><br />"
"android.widget.AbsSeekBar.onKeyDown (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyDown () "," Default implementation of KeyEvent.Callback.onKeyDown(): perform press of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released, if the view is enabled and clickable. <br /><br />"
"android.widget.AbsSeekBar.onRtlPropertiesChanged (int layoutDirection)   Called when any RTL property  (layout direction or text direction or text alignment) "," Called when any RTL property (layout direction or text direction or text alignment) has been changed. <br /><br />"
"android.widget.AbsSeekBar.setThumbTintList (ColorStateList tint) "," Applies a tint to the thumb drawable. <br /><br />"
"android.widget.AbsSeekBar.setKeyProgressIncrement (int increment) "," Sets the amount of progress changed via the arrow keys. <br /><br />"
"android.widget.AbsSeekBar.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.AbsSeekBar.setThumbOffset (int thumbOffset) "," Sets the thumb offset that allows the thumb to extend out of the range of the track. <br /><br />"
"android.widget.AbsSeekBar.jumpDrawablesToCurrentState ()   Call Drawable.jumpToCurrentState () "," Call Drawable.jumpToCurrentState() on all Drawable objects associated with this view. <br /><br />"
"android.widget.AbsSeekBar.getThumbTintList () "," Returns the tint applied to the thumb drawable, if specified. <br /><br />"
"android.widget.AbsSeekBar.performAccessibilityAction (int action, Bundle arguments) "," Performs the specified accessibility action on the view. <br /><br />"
"android.widget.AbsSeekBar.getThumbTintMode () "," Returns the blending mode used to apply the tint to the thumb drawable, if specified. <br /><br />"
"android.widget.AbsSeekBar.setSplitTrack (boolean splitTrack) "," Specifies whether the track should be split by the thumb. <br /><br />"
"android.widget.AbsSeekBar.setThumb (Drawable thumb) "," Sets the thumb that will be drawn at the end of the progress meter within the SeekBar. <br /><br />"
"android.widget.AbsSeekBar.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.AbsSeekBar.onTouchEvent (MotionEvent event) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.widget.AbsSeekBar.setThumbTintMode (PorterDuff.Mode tintMode)   Specifies the blending mode used to apply the tint specified by setThumbTintList (ColorStateList) "," Specifies the blending mode used to apply the tint specified by setThumbTintList(ColorStateList)} to the thumb drawable. <br /><br />"
"android.widget.AbsSeekBar.setMax (int max) "," Set the range of the progress bar to 0... <br /><br />"
"android.widget.AbsSpinner.onSaveInstanceState () "," Hook allowing a view to generate a representation of its internal state that can later be used to create a new instance with that same state. <br /><br />"
"android.widget.AbsSpinner.getSelectedView () "," no description <br /><br />"
"android.widget.AbsSpinner.onRestoreInstanceState (Parcelable state)   Hook allowing a view to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState () "," Hook allowing a view to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState(). <br /><br />"
"android.widget.AbsSpinner.requestLayout () "," Override to prevent spamming ourselves with layout requests as we place views <br /><br />"
"android.widget.AbsSpinner.getAdapter () "," Returns the adapter currently associated with this widget. <br /><br />"
"android.widget.AbsSpinner.pointToPosition (int x, int y) "," Maps a point to a position in the list. <br /><br />"
"android.widget.AbsSpinner.setAdapter (SpinnerAdapter adapter) "," The Adapter is used to provide the data which backs this Spinner. <br /><br />"
"android.widget.AbsSpinner.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.AbsSpinner.getCount () "," no description <br /><br />"
"android.widget.AbsSpinner.setSelection (int position) "," Sets the currently selected item. <br /><br />"
"android.widget.AbsSpinner.setSelection (int position, boolean animate) "," Jump directly to a specific item in the adapter data. <br /><br />"
"android.widget.AbsSpinner.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.ActionMenuView.onConfigurationChanged (Configuration newConfig) "," Called when the current configuration of the resources being used by the application have changed. <br /><br />"
"android.widget.ActionMenuView.isOverflowMenuShowing () "," Check whether the overflow menu is currently showing. <br /><br />"
"android.widget.ActionMenuView.getPopupTheme () "," no description <br /><br />"
"android.widget.ActionMenuView.onDetachedFromWindow () "," This is called when the view is detached from a window. <br /><br />"
"android.widget.ActionMenuView.showOverflowMenu () "," Show the overflow items from the associated menu. <br /><br />"
"android.widget.ActionMenuView.dismissPopupMenus () "," Dismiss any popups associated with this menu view. <br /><br />"
"android.widget.ActionMenuView.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.widget.ActionMenuView.setPopupTheme (int resId) "," Specifies the theme to use when inflating popup menus. <br /><br />"
"android.widget.ActionMenuView.hideOverflowMenu () "," Hide the overflow items from the associated menu. <br /><br />"
"android.widget.ActionMenuView.getMenu () "," Returns the Menu object that this ActionMenuView is currently presenting. <br /><br />"
"android.widget.ActionMenuView.dispatchPopulateAccessibilityEvent (AccessibilityEvent event) "," Dispatches an AccessibilityEvent to the View first and then to its children for adding their text content to the event. <br /><br />"
"android.widget.ActionMenuView.setOnMenuItemClickListener (ActionMenuView.OnMenuItemClickListener listener) "," no description <br /><br />"
"android.widget.ActionMenuView.OnMenuItemClickListener.onMenuItemClick (MenuItem item) "," This method will be invoked when a menu item is clicked if the item itself did not already handle the event. <br /><br />"
"android.widget.Adapter.unregisterDataSetObserver (DataSetObserver observer)   Unregister an observer that has previously been registered with this adapter via registerDataSetObserver (DataSetObserver) "," Unregister an observer that has previously been registered with this adapter via registerDataSetObserver(DataSetObserver). <br /><br />"
"android.widget.Adapter.getItem (int position) "," Get the data item associated with the specified position in the data set. <br /><br />"
"android.widget.Adapter.getViewTypeCount ()    Returns the number of types of Views that will be created by getView (int, View, ViewGroup) "," Returns the number of types of Views that will be created by getView(int, View, ViewGroup). <br /><br />"
"android.widget.Adapter.registerDataSetObserver (DataSetObserver observer) "," Register an observer that is called when changes happen to the data used by this adapter. <br /><br />"
"android.widget.Adapter.isEmpty () "," no description <br /><br />"
"android.widget.Adapter.getView (int position, View convertView, ViewGroup parent) "," Get a View that displays the data at the specified position in the data set. <br /><br />"
"android.widget.Adapter.getCount () "," How many items are in the data set represented by this Adapter. <br /><br />"
"android.widget.Adapter.hasStableIds () "," Indicates whether the item ids are stable across changes to the underlying data. <br /><br />"
"android.widget.Adapter.getItemViewType (int position)   Get the type of View that will be created by getView (int, View, ViewGroup) "," Get the type of View that will be created by getView(int, View, ViewGroup) for the specified item. <br /><br />"
"android.widget.Adapter.getItemId (int position) "," Get the row id associated with the specified position in the list. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.setOnClickListener (View.OnClickListener l) "," Register a callback to be invoked when this view is clicked. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.setOnItemClickListener (AdapterView.OnItemClickListener listener) "," Register a callback to be invoked when an item in this AdapterView has been clicked. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.addView (View child, int index, ViewGroup.LayoutParams params) "," This method is not supported and throws an UnsupportedOperationException when called. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.getItemIdAtPosition (int position) "," no description <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.getOnItemSelectedListener () "," no description <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.addView (View child, ViewGroup.LayoutParams params) "," This method is not supported and throws an UnsupportedOperationException when called. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.dispatchPopulateAccessibilityEvent (AccessibilityEvent event) "," Dispatches an AccessibilityEvent to the View first and then to its children for adding their text content to the event. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.getCount () "," no description <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.getSelectedItem () "," no description <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.removeViewAt (int index) "," This method is not supported and throws an UnsupportedOperationException when called. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.getOnItemLongClickListener () "," no description <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.addView (View child, int index) "," This method is not supported and throws an UnsupportedOperationException when called. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.setEmptyView (View emptyView) "," Sets the view to show if the adapter is empty <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.getSelectedItemPosition () "," Return the position of the currently selected item within the adapter's data set <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.setOnItemSelectedListener (AdapterView.OnItemSelectedListener listener) "," Register a callback to be invoked when an item in this AdapterView has been selected. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.onRequestSendAccessibilityEvent (View child, AccessibilityEvent event) "," Called when a child has requested sending an AccessibilityEvent and gives an opportunity to its parent to augment the event. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.getEmptyView () "," When the current adapter is empty, the AdapterView can display a special view called the empty view. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.getSelectedItemId () "," no description <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.performItemClick (View view, int position, long id) "," Call the OnItemClickListener, if it is defined. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.getPositionForView (View view) "," Get the position within the adapter's data set for the view, where view is a an adapter item or a descendant of an adapter item. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.setFocusableInTouchMode (boolean focusable) "," Set whether this view can receive focus while in touch mode. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.getItemAtPosition (int position) "," Gets the data associated with the specified position in the list. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.getLastVisiblePosition () "," Returns the position within the adapter's data set for the last item displayed on screen. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.getOnItemClickListener () "," no description <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.getFirstVisiblePosition () "," Returns the position within the adapter's data set for the first item displayed on screen. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.setSelection (int position) "," Sets the currently selected item. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.addView (View child) "," This method is not supported and throws an UnsupportedOperationException when called. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.setAdapter (T adapter) "," Sets the adapter that provides the data and the views to represent the data in this widget. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.getSelectedView () "," no description <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.getAdapter () "," Returns the adapter currently associated with this widget. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.setFocusable (boolean focusable) "," Set whether this view can receive the focus. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.removeAllViews () "," This method is not supported and throws an UnsupportedOperationException when called. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.setOnItemLongClickListener (AdapterView.OnItemLongClickListener listener) "," Register a callback to be invoked when an item in this AdapterView has been clicked and held <br /><br />"
"android.widget.AdapterView<T extends android.widget.Adapter>.removeView (View child) "," This method is not supported and throws an UnsupportedOperationException when called. <br /><br />"
"android.widget.AdapterView.OnItemClickListener.onItemClick (AdapterView<?> parent, View view, int position, long id) "," Callback method to be invoked when an item in this AdapterView has been clicked. <br /><br />"
"android.widget.AdapterView.OnItemLongClickListener.onItemLongClick (AdapterView<?> parent, View view, int position, long id) "," Callback method to be invoked when an item in this view has been clicked and held. <br /><br />"
"android.widget.AdapterView.OnItemSelectedListener.onNothingSelected (AdapterView<?> parent) "," Callback method to be invoked when the selection disappears from this view. <br /><br />"
"android.widget.AdapterView.OnItemSelectedListener.onItemSelected (AdapterView<?> parent, View view, int position, long id) "," Callback method to be invoked when an item in this view has been selected. <br /><br />"
"android.widget.AdapterViewAnimator.onRestoreInstanceState (Parcelable state)   Hook allowing a view to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState () "," Hook allowing a view to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState(). <br /><br />"
"android.widget.AdapterViewAnimator.setAnimateFirstView (boolean animate) "," Indicates whether the current View should be animated the first time the ViewAnimation is displayed. <br /><br />"
"android.widget.AdapterViewAnimator.showPrevious () "," Manually shows the previous child. <br /><br />"
"android.widget.AdapterViewAnimator.setInAnimation (ObjectAnimator inAnimation) "," Specifies the animation used to animate a View that enters the screen. <br /><br />"
"android.widget.AdapterViewAnimator.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.AdapterViewAnimator.onSaveInstanceState () "," Hook allowing a view to generate a representation of its internal state that can later be used to create a new instance with that same state. <br /><br />"
"android.widget.AdapterViewAnimator.getOutAnimation () "," Returns the current animation used to animate a View that exits the screen. <br /><br />"
"android.widget.AdapterViewAnimator.getCurrentView () "," Returns the View corresponding to the currently displayed child. <br /><br />"
"android.widget.AdapterViewAnimator.setRemoteViewsAdapter (Intent intent) "," Sets up this AdapterViewAnimator to use a remote views adapter which connects to a RemoteViewsService through the specified intent. <br /><br />"
"android.widget.AdapterViewAnimator.deferNotifyDataSetChanged () "," This defers a notifyDataSetChanged on the pending RemoteViewsAdapter if it has not connected yet. <br /><br />"
"android.widget.AdapterViewAnimator.onRemoteAdapterConnected () "," Called back when the adapter connects to the RemoteViewsService. <br /><br />"
"android.widget.AdapterViewAnimator.setDisplayedChild (int whichChild) "," Sets which child view will be displayed. <br /><br />"
"android.widget.AdapterViewAnimator.getBaseline () "," Return the offset of the widget's text baseline from the widget's top boundary. <br /><br />"
"android.widget.AdapterViewAnimator.setOutAnimation (Context context, int resourceID) "," Specifies the animation used to animate a View that exit the screen. <br /><br />"
"android.widget.AdapterViewAnimator.setSelection (int position) "," Sets the currently selected item. <br /><br />"
"android.widget.AdapterViewAnimator.onRemoteAdapterDisconnected () "," Called back when the adapter disconnects from the RemoteViewsService. <br /><br />"
"android.widget.AdapterViewAnimator.getInAnimation () "," Returns the current animation used to animate a View that enters the screen. <br /><br />"
"android.widget.AdapterViewAnimator.setInAnimation (Context context, int resourceID) "," Specifies the animation used to animate a View that enters the screen. <br /><br />"
"android.widget.AdapterViewAnimator.getSelectedView () "," no description <br /><br />"
"android.widget.AdapterViewAnimator.setAdapter (Adapter adapter) "," Sets the adapter that provides the data and the views to represent the data in this widget. <br /><br />"
"android.widget.AdapterViewAnimator.getAdapter () "," Returns the adapter currently associated with this widget. <br /><br />"
"android.widget.AdapterViewAnimator.advance () "," Called by an AppWidgetHost in order to advance the current view when it is being used within an app widget. <br /><br />"
"android.widget.AdapterViewAnimator.setOutAnimation (ObjectAnimator outAnimation) "," Specifies the animation used to animate a View that exit the screen. <br /><br />"
"android.widget.AdapterViewAnimator.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.AdapterViewAnimator.onTouchEvent (MotionEvent ev) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.widget.AdapterViewAnimator.showNext () "," Manually shows the next child. <br /><br />"
"android.widget.AdapterViewAnimator.fyiWillBeAdvancedByHostKThx ()   Called by an AppWidgetHost to indicate that it will be automatically advancing the views of this AdapterViewAnimator by calling advance () "," Called by an AppWidgetHost to indicate that it will be automatically advancing the views of this AdapterViewAnimator by calling advance() at some point in the future. <br /><br />"
"android.widget.AdapterViewAnimator.getDisplayedChild () "," Returns the index of the currently displayed child view. <br /><br />"
"android.widget.AdapterViewFlipper.isAutoStart ()   Returns true if this view automatically calls startFlipping () "," Returns true if this view automatically calls startFlipping() when it becomes attached to a window. <br /><br />"
"android.widget.AdapterViewFlipper.startFlipping () "," Start a timer to cycle through child views <br /><br />"
"android.widget.AdapterViewFlipper.showPrevious () "," Manually shows the previous child. <br /><br />"
"android.widget.AdapterViewFlipper.getFlipInterval () "," Returns the flip interval, in milliseconds. <br /><br />"
"android.widget.AdapterViewFlipper.stopFlipping () "," No more flips <br /><br />"
"android.widget.AdapterViewFlipper.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.AdapterViewFlipper.setFlipInterval (int flipInterval) "," How long to wait before flipping to the next view. <br /><br />"
"android.widget.AdapterViewFlipper.setAdapter (Adapter adapter) "," Sets the adapter that provides the data and the views to represent the data in this widget. <br /><br />"
"android.widget.AdapterViewFlipper.setAutoStart (boolean autoStart)   Set if this view automatically calls startFlipping () "," Set if this view automatically calls startFlipping() when it becomes attached to a window. <br /><br />"
"android.widget.AdapterViewFlipper.fyiWillBeAdvancedByHostKThx ()   Called by an AppWidgetHost to indicate that it will be automatically advancing the views of this AdapterViewFlipper by calling advance () "," Called by an AppWidgetHost to indicate that it will be automatically advancing the views of this AdapterViewFlipper by calling advance() at some point in the future. <br /><br />"
"android.widget.AdapterViewFlipper.isFlipping () "," Returns true if the child views are flipping. <br /><br />"
"android.widget.AdapterViewFlipper.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.AdapterViewFlipper.showNext () "," Manually shows the next child. <br /><br />"
"android.widget.Advanceable.fyiWillBeAdvancedByHostKThx ()   Called by the AppWidgetHost once before it begins to call advance () "," Called by the AppWidgetHost once before it begins to call advance(), allowing the collection to do any required setup. <br /><br />"
"android.widget.Advanceable.advance () "," Advances this collection, eg. <br /><br />"
"android.widget.AlphabetIndexer.getSectionForPosition (int position) "," Returns the section index for a given position in the list by querying the item and comparing it with all items in the section array. <br /><br />"
"android.widget.AlphabetIndexer.onInvalidated ()   This method is called when the entire data becomes invalid, most likely through a call to deactivate () or close () "," This method is called when the entire data becomes invalid, most likely through a call to deactivate() or close() on a Cursor. <br /><br />"
"android.widget.AlphabetIndexer.getPositionForSection (int sectionIndex) "," Performs a binary search or cache lookup to find the first row that matches a given section's starting letter. <br /><br />"
"android.widget.AlphabetIndexer.getSections () "," Returns the section array constructed from the alphabet provided in the constructor. <br /><br />"
"android.widget.AlphabetIndexer.onChanged ()   This method is called when the entire data set has changed, most likely through a call to requery () "," This method is called when the entire data set has changed, most likely through a call to requery() on a Cursor. <br /><br />"
"android.widget.AlphabetIndexer.setCursor (Cursor cursor) "," Sets a new cursor as the data set and resets the cache of indices. <br /><br />"
"android.widget.ArrayAdapter<T>.remove (T object) "," Removes the specified object from the array. <br /><br />"
"android.widget.ArrayAdapter<T>.setNotifyOnChange (boolean notifyOnChange)   Control whether methods that change the list  (add (T), insert (T, int), remove (T), clear ()) automatically call notifyDataSetChanged () "," Control whether methods that change the list ( add(T), insert(T, int), remove(T), clear()) automatically call notifyDataSetChanged(). <br /><br />"
"android.widget.ArrayAdapter<T>.sort (Comparator<? super T> comparator) "," Sorts the content of this adapter using the specified comparator. <br /><br />"
"android.widget.ArrayAdapter<T>.getView (int position, View convertView, ViewGroup parent) ","  <br /><br />"
"android.widget.ArrayAdapter<T>.getCount () ","  <br /><br />"
"android.widget.ArrayAdapter<T>.addAll (T... items) "," Adds the specified items at the end of the array. <br /><br />"
"android.widget.ArrayAdapter<T>.addAll (Collection<? extends T> collection) "," Adds the specified Collection at the end of the array. <br /><br />"
"android.widget.ArrayAdapter<T>.getDropDownView (int position, View convertView, ViewGroup parent) "," Get a View that displays in the drop down popup the data at the specified position in the data set. <br /><br />"
"android.widget.ArrayAdapter<T>.add (T object) "," Adds the specified object at the end of the array. <br /><br />"
"android.widget.ArrayAdapter<T>.getItemId (int position) ","  <br /><br />"
"android.widget.ArrayAdapter<T>.getItem (int position) ","  <br /><br />"
"android.widget.ArrayAdapter<T>.clear () "," Remove all elements from the list. <br /><br />"
"android.widget.ArrayAdapter<T>.insert (T object, int index) "," Inserts the specified object at the specified index in the array. <br /><br />"
"android.widget.ArrayAdapter<T>.getFilter () "," Returns a filter that can be used to constrain data with a filtering pattern. <br /><br />"
"android.widget.ArrayAdapter<T>.getPosition (T item) "," Returns the position of the specified item in the array. <br /><br />"
"android.widget.ArrayAdapter<T>.createFromResource (Context context, int textArrayResId, int textViewResId) "," Creates a new ArrayAdapter from external resources. <br /><br />"
"android.widget.ArrayAdapter<T>.setDropDownViewResource (int resource) "," Sets the layout resource to create the drop down views. <br /><br />"
"android.widget.ArrayAdapter<T>.notifyDataSetChanged () "," Notifies the attached observers that the underlying data has been changed and any View reflecting the data set should refresh itself. <br /><br />"
"android.widget.ArrayAdapter<T>.getContext () "," Returns the context associated with this array adapter. <br /><br />"
"android.widget.AutoCompleteTextView.setDropDownHeight (int height) "," Sets the current height for the auto-complete drop down list. <br /><br />"
"android.widget.AutoCompleteTextView.getOnItemSelectedListener () "," Returns the listener that is notified whenever the user selects an item in the drop down list. <br /><br />"
"android.widget.AutoCompleteTextView.dismissDropDown () "," Closes the drop down if present on screen. <br /><br />"
"android.widget.AutoCompleteTextView.getDropDownHeight () "," Returns the current height for the auto-complete drop down list. <br /><br />"
"android.widget.AutoCompleteTextView.setDropDownWidth (int width) "," Sets the current width for the auto-complete drop down list. <br /><br />"
"android.widget.AutoCompleteTextView.isPopupShowing () "," Indicates whether the popup menu is showing. <br /><br />"
"android.widget.AutoCompleteTextView.getDropDownAnchor () "," Returns the id for the view that the auto-complete drop down list is anchored to. <br /><br />"
"android.widget.AutoCompleteTextView.getDropDownWidth () "," Returns the current width for the auto-complete drop down list. <br /><br />"
"android.widget.AutoCompleteTextView.setOnDismissListener (AutoCompleteTextView.OnDismissListener dismissListener) "," Set a listener that will be invoked whenever the AutoCompleteTextView's list of completions is dismissed. <br /><br />"
"android.widget.AutoCompleteTextView.setCompletionHint (CharSequence hint) "," Sets the optional hint text that is displayed at the bottom of the the matching list. <br /><br />"
"android.widget.AutoCompleteTextView.isPerformingCompletion () "," Identifies whether the view is currently performing a text completion, so subclasses can decide whether to respond to text changed events. <br /><br />"
"android.widget.AutoCompleteTextView.setOnItemClickListener (AdapterView.OnItemClickListener l) "," Sets the listener that will be notified when the user clicks an item in the drop down list. <br /><br />"
"android.widget.AutoCompleteTextView.setDropDownBackgroundResource (int id) "," Sets the background of the auto-complete drop-down list. <br /><br />"
"android.widget.AutoCompleteTextView.performCompletion () "," Performs the text completion by converting the selected item from the drop down list into a string, replacing the text box's content with this string and finally dismissing the drop down menu. <br /><br />"
"android.widget.AutoCompleteTextView.getValidator ()   Returns the Validator set with setValidator (AutoCompleteTextView.Validator) "," Returns the Validator set with setValidator(AutoCompleteTextView.Validator), or null if it was not set. <br /><br />"
"android.widget.AutoCompleteTextView.setValidator (AutoCompleteTextView.Validator validator) "," Sets the validator used to perform text validation. <br /><br />"
"android.widget.AutoCompleteTextView.setDropDownHorizontalOffset (int offset) "," Sets the horizontal offset used for the auto-complete drop-down list. <br /><br />"
"android.widget.AutoCompleteTextView.onWindowFocusChanged (boolean hasWindowFocus) "," Called when the window containing this view gains or loses focus. <br /><br />"
"android.widget.AutoCompleteTextView.getDropDownHorizontalOffset () "," Gets the horizontal offset used for the auto-complete drop-down list. <br /><br />"
"android.widget.AutoCompleteTextView.setDropDownAnchor (int id) "," Sets the view to which the auto-complete drop down list should anchor. <br /><br />"
"android.widget.AutoCompleteTextView.getItemClickListener ()    This method was deprecated in API level 3. Use getOnItemClickListener () "," This method was deprecated in API level 3. Use getOnItemClickListener() intead <br /><br />"
"android.widget.AutoCompleteTextView.getThreshold () "," Returns the number of characters the user must type before the drop down list is shown. <br /><br />"
"android.widget.AutoCompleteTextView.getDropDownBackground () "," Gets the background of the auto-complete drop-down list. <br /><br />"
"android.widget.AutoCompleteTextView.onFilterComplete (int count) "," Notifies the end of a filtering operation. <br /><br />"
"android.widget.AutoCompleteTextView.performValidation () "," If a validator was set on this view and the current string is not valid, ask the validator to fix it. <br /><br />"
"android.widget.AutoCompleteTextView.getOnItemClickListener () "," Returns the listener that is notified whenever the user clicks an item in the drop down list. <br /><br />"
"android.widget.AutoCompleteTextView.getCompletionHint () "," Gets the optional hint text displayed at the bottom of the the matching list. <br /><br />"
"android.widget.AutoCompleteTextView.onCommitCompletion (CompletionInfo completion)   Called by the framework in response to a text completion from the current input method, provided by it calling InputConnection.commitCompletion () "," Called by the framework in response to a text completion from the current input method, provided by it calling InputConnection.commitCompletion(). <br /><br />"
"android.widget.AutoCompleteTextView.setOnClickListener (View.OnClickListener listener) "," Register a callback to be invoked when this view is clicked. <br /><br />"
"android.widget.AutoCompleteTextView.setDropDownBackgroundDrawable (Drawable d) "," Sets the background of the auto-complete drop-down list. <br /><br />"
"android.widget.AutoCompleteTextView.onKeyUp (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyUp () "," Default implementation of KeyEvent.Callback.onKeyUp(): perform clicking of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released. <br /><br />"
"android.widget.AutoCompleteTextView.getItemSelectedListener ()    This method was deprecated in API level 3. Use getOnItemSelectedListener () "," This method was deprecated in API level 3. Use getOnItemSelectedListener() intead <br /><br />"
"android.widget.AutoCompleteTextView.onKeyDown (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyDown () "," Default implementation of KeyEvent.Callback.onKeyDown(): perform press of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released, if the view is enabled and clickable. <br /><br />"
"android.widget.AutoCompleteTextView.showDropDown () "," Displays the drop down on screen. <br /><br />"
"android.widget.AutoCompleteTextView.setText (CharSequence text, boolean filter)   Like setText (CharSequence) "," Like setText(CharSequence), except that it can disable filtering. <br /><br />"
"android.widget.AutoCompleteTextView.setAdapter (T adapter) "," Changes the list of data used for auto completion. <br /><br />"
"android.widget.AutoCompleteTextView.getDropDownVerticalOffset () "," Gets the vertical offset used for the auto-complete drop-down list. <br /><br />"
"android.widget.AutoCompleteTextView.setDropDownVerticalOffset (int offset) "," Sets the vertical offset used for the auto-complete drop-down list. <br /><br />"
"android.widget.AutoCompleteTextView.clearListSelection () "," Clear the list selection. <br /><br />"
"android.widget.AutoCompleteTextView.enoughToFilter ()   Returns true if the amount of text in the field meets or exceeds the getThreshold () "," Returns true if the amount of text in the field meets or exceeds the getThreshold() requirement. <br /><br />"
"android.widget.AutoCompleteTextView.getAdapter () "," Returns a filterable list adapter used for auto completion. <br /><br />"
"android.widget.AutoCompleteTextView.setListSelection (int position) "," Set the position of the dropdown view selection. <br /><br />"
"android.widget.AutoCompleteTextView.onKeyPreIme (int keyCode, KeyEvent event) "," Handle a key event before it is processed by any input method associated with the view hierarchy. <br /><br />"
"android.widget.AutoCompleteTextView.setThreshold (int threshold) "," Specifies the minimum number of characters the user has to type in the edit box before the drop down list is shown. <br /><br />"
"android.widget.AutoCompleteTextView.setOnItemSelectedListener (AdapterView.OnItemSelectedListener l) "," Sets the listener that will be notified when the user selects an item in the drop down list. <br /><br />"
"android.widget.AutoCompleteTextView.getListSelection () "," Get the position of the dropdown view selection, if there is one. <br /><br />"
"android.widget.AutoCompleteTextView.OnDismissListener.onDismiss () "," This method will be invoked whenever the AutoCompleteTextView's list of completion options has been dismissed and is no longer available for user interaction. <br /><br />"
"android.widget.AutoCompleteTextView.Validator.isValid (CharSequence text) "," Validates the specified text. <br /><br />"
"android.widget.AutoCompleteTextView.Validator.fixText (CharSequence invalidText) "," Corrects the specified text to make it valid. <br /><br />"
"android.widget.BaseAdapter.unregisterDataSetObserver (DataSetObserver observer)   Unregister an observer that has previously been registered with this adapter via registerDataSetObserver (DataSetObserver) "," Unregister an observer that has previously been registered with this adapter via registerDataSetObserver(DataSetObserver). <br /><br />"
"android.widget.BaseAdapter.getViewTypeCount ()    Returns the number of types of Views that will be created by getView (int, View, ViewGroup) "," Returns the number of types of Views that will be created by getView(int, View, ViewGroup). <br /><br />"
"android.widget.BaseAdapter.registerDataSetObserver (DataSetObserver observer) "," Register an observer that is called when changes happen to the data used by this adapter. <br /><br />"
"android.widget.BaseAdapter.isEnabled (int position) "," Returns true if the item at the specified position is not a separator. <br /><br />"
"android.widget.BaseAdapter.isEmpty () "," no description <br /><br />"
"android.widget.BaseAdapter.hasStableIds () "," Indicates whether the item ids are stable across changes to the underlying data. <br /><br />"
"android.widget.BaseAdapter.notifyDataSetInvalidated () "," Notifies the attached observers that the underlying data is no longer valid or available. <br /><br />"
"android.widget.BaseAdapter.getDropDownView (int position, View convertView, ViewGroup parent) "," Get a View that displays in the drop down popup the data at the specified position in the data set. <br /><br />"
"android.widget.BaseAdapter.getItemViewType (int position)   Get the type of View that will be created by getView (int, View, ViewGroup) "," Get the type of View that will be created by getView(int, View, ViewGroup) for the specified item. <br /><br />"
"android.widget.BaseAdapter.areAllItemsEnabled () "," Indicates whether all the items in this adapter are enabled. <br /><br />"
"android.widget.BaseAdapter.notifyDataSetChanged () "," Notifies the attached observers that the underlying data has been changed and any View reflecting the data set should refresh itself. <br /><br />"
"android.widget.BaseExpandableListAdapter.unregisterDataSetObserver (DataSetObserver observer) "," no description <br /><br />"
"android.widget.BaseExpandableListAdapter.getChildTypeCount ()    Returns the number of types of child Views that will be created by getChildView (int, int, boolean, View, ViewGroup) "," Returns the number of types of child Views that will be created by getChildView(int, int, boolean, View, ViewGroup) . <br /><br />"
"android.widget.BaseExpandableListAdapter.onGroupExpanded (int groupPosition) "," Called when a group is expanded. <br /><br />"
"android.widget.BaseExpandableListAdapter.registerDataSetObserver (DataSetObserver observer) "," no description <br /><br />"
"android.widget.BaseExpandableListAdapter.onGroupCollapsed (int groupPosition) "," Called when a group is collapsed. <br /><br />"
"android.widget.BaseExpandableListAdapter.notifyDataSetInvalidated () "," no description <br /><br />"
"android.widget.BaseExpandableListAdapter.areAllItemsEnabled () "," no description <br /><br />"
"android.widget.BaseExpandableListAdapter.getCombinedChildId (long groupId, long childId)   Override this method if you foresee a clash in IDs based on this scheme:  Base implementation returns a long:   bit 0: Whether this ID points to a child  (unset) or group  (set) "," Override this method if you foresee a clash in IDs based on this scheme:  Base implementation returns a long:   bit 0: Whether this ID points to a child (unset) or group (set), so for this method this bit will be 1. <br /><br />"
"android.widget.BaseExpandableListAdapter.getChildType (int groupPosition, int childPosition)   Get the type of child View that will be created by getChildView (int, int, boolean, View, ViewGroup) "," Get the type of child View that will be created by getChildView(int, int, boolean, View, ViewGroup) for the specified child item. <br /><br />"
"android.widget.BaseExpandableListAdapter.getGroupType (int groupPosition)   Get the type of group View that will be created by getGroupView (int, boolean, View, ViewGroup) "," Get the type of group View that will be created by getGroupView(int, boolean, View, ViewGroup) . <br /><br />"
"android.widget.BaseExpandableListAdapter.isEmpty () ","  <br /><br />"
"android.widget.BaseExpandableListAdapter.getCombinedGroupId (long groupId)   Override this method if you foresee a clash in IDs based on this scheme:  Base implementation returns a long:   bit 0: Whether this ID points to a child  (unset) or group  (set) "," Override this method if you foresee a clash in IDs based on this scheme:  Base implementation returns a long:   bit 0: Whether this ID points to a child (unset) or group (set), so for this method this bit will be 0. <br /><br />"
"android.widget.BaseExpandableListAdapter.getGroupTypeCount ()    Returns the number of types of group Views that will be created by getGroupView (int, boolean, View, ViewGroup) "," Returns the number of types of group Views that will be created by getGroupView(int, boolean, View, ViewGroup) . <br /><br />"
"android.widget.BaseExpandableListAdapter.notifyDataSetChanged () "," no description <br /><br />"
"android.widget.Button.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.Button.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.CalendarView.setShowWeekNumber (boolean showWeekNumber) "," Sets whether to show the week number. <br /><br />"
"android.widget.CalendarView.setDate (long date, boolean animate, boolean center)   Sets the selected date in milliseconds since January 1, 1970 00:00:00 in getDefault () "," Sets the selected date in milliseconds since January 1, 1970 00:00:00 in getDefault() time zone. <br /><br />"
"android.widget.CalendarView.getMinDate ()   Gets the minimal date supported by this CalendarView in milliseconds since January 1, 1970 00:00:00 in getDefault () "," Gets the minimal date supported by this CalendarView in milliseconds since January 1, 1970 00:00:00 in getDefault() time zone. <br /><br />"
"android.widget.CalendarView.setFirstDayOfWeek (int firstDayOfWeek) "," Sets the first day of week. <br /><br />"
"android.widget.CalendarView.getShowWeekNumber () "," Gets whether to show the week number. <br /><br />"
"android.widget.CalendarView.getShownWeekCount () "," Gets the number of weeks to be shown. <br /><br />"
"android.widget.CalendarView.getUnfocusedMonthDateColor () "," Gets the color for the dates in a not focused month. <br /><br />"
"android.widget.CalendarView.getDateTextAppearance () "," Gets the text appearance for the calendar dates. <br /><br />"
"android.widget.CalendarView.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.CalendarView.setMaxDate (long maxDate)   Sets the maximal date supported by this CalendarView in milliseconds since January 1, 1970 00:00:00 in getDefault () "," Sets the maximal date supported by this CalendarView in milliseconds since January 1, 1970 00:00:00 in getDefault() time zone. <br /><br />"
"android.widget.CalendarView.setWeekSeparatorLineColor (int color) "," Sets the color for the separator line between weeks. <br /><br />"
"android.widget.CalendarView.setSelectedDateVerticalBar (int resourceId) "," Sets the drawable for the vertical bar shown at the beginning and at the end of the selected date. <br /><br />"
"android.widget.CalendarView.getFocusedMonthDateColor () "," Gets the color for the dates in the focused month. <br /><br />"
"android.widget.CalendarView.setDateTextAppearance (int resourceId) "," Sets the text appearance for the calendar dates. <br /><br />"
"android.widget.CalendarView.getWeekDayTextAppearance () "," Gets the text appearance for the week day abbreviation of the calendar header. <br /><br />"
"android.widget.CalendarView.setOnDateChangeListener (CalendarView.OnDateChangeListener listener) "," Sets the listener to be notified upon selected date change. <br /><br />"
"android.widget.CalendarView.setMinDate (long minDate)   Sets the minimal date supported by this CalendarView in milliseconds since January 1, 1970 00:00:00 in getDefault () "," Sets the minimal date supported by this CalendarView in milliseconds since January 1, 1970 00:00:00 in getDefault() time zone. <br /><br />"
"android.widget.CalendarView.setUnfocusedMonthDateColor (int color) "," Sets the color for the dates of a not focused month. <br /><br />"
"android.widget.CalendarView.setWeekNumberColor (int color) "," Sets the color for the week numbers. <br /><br />"
"android.widget.CalendarView.setFocusedMonthDateColor (int color) "," Sets the color for the dates of the focused month. <br /><br />"
"android.widget.CalendarView.getDate ()   Gets the selected date in milliseconds since January 1, 1970 00:00:00 in getDefault () "," Gets the selected date in milliseconds since January 1, 1970 00:00:00 in getDefault() time zone. <br /><br />"
"android.widget.CalendarView.setShownWeekCount (int count) "," Sets the number of weeks to be shown. <br /><br />"
"android.widget.CalendarView.setSelectedWeekBackgroundColor (int color) "," Sets the background color for the selected week. <br /><br />"
"android.widget.CalendarView.getWeekNumberColor () "," Gets the color for the week numbers. <br /><br />"
"android.widget.CalendarView.getWeekSeparatorLineColor () "," Gets the color for the separator line between weeks. <br /><br />"
"android.widget.CalendarView.setDate (long date)   Sets the selected date in milliseconds since January 1, 1970 00:00:00 in getDefault () "," Sets the selected date in milliseconds since January 1, 1970 00:00:00 in getDefault() time zone. <br /><br />"
"android.widget.CalendarView.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.CalendarView.setWeekDayTextAppearance (int resourceId) "," Sets the text appearance for the week day abbreviation of the calendar header. <br /><br />"
"android.widget.CalendarView.getFirstDayOfWeek () "," Gets the first day of week. <br /><br />"
"android.widget.CalendarView.setSelectedDateVerticalBar (Drawable drawable) "," Sets the drawable for the vertical bar shown at the beginning and at the end of the selected date. <br /><br />"
"android.widget.CalendarView.getSelectedWeekBackgroundColor () "," Gets the background color for the selected week. <br /><br />"
"android.widget.CalendarView.getSelectedDateVerticalBar () "," Gets the drawable for the vertical bar shown at the beginning and at the end of the selected date. <br /><br />"
"android.widget.CalendarView.getMaxDate ()   Gets the maximal date supported by this CalendarView in milliseconds since January 1, 1970 00:00:00 in getDefault () "," Gets the maximal date supported by this CalendarView in milliseconds since January 1, 1970 00:00:00 in getDefault() time zone. <br /><br />"
"android.widget.CalendarView.OnDateChangeListener.onSelectedDayChange (CalendarView view, int year, int month, int dayOfMonth) "," Called upon change of the selected day. <br /><br />"
"android.widget.Checkable.toggle () "," Change the checked state of the view to the inverse of its current state <br /><br />"
"android.widget.Checkable.setChecked (boolean checked) "," Change the checked state of the view <br /><br />"
"android.widget.Checkable.isChecked () "," no description <br /><br />"
"android.widget.CheckBox.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.CheckBox.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.CheckedTextView.toggle () "," Change the checked state of the view to the inverse of its current state <br /><br />"
"android.widget.CheckedTextView.setCheckMarkTintList (ColorStateList tint) "," Applies a tint to the check mark drawable. <br /><br />"
"android.widget.CheckedTextView.setChecked (boolean checked) "," Changes the checked state of this text view. <br /><br />"
"android.widget.CheckedTextView.setVisibility (int visibility) "," Set the enabled state of this view. <br /><br />"
"android.widget.CheckedTextView.getCheckMarkTintMode () "," Returns the blending mode used to apply the tint to the check mark drawable, if specified. <br /><br />"
"android.widget.CheckedTextView.drawableHotspotChanged (float x, float y) "," This function is called whenever the view hotspot changes and needs to be propagated to drawables or child views managed by the view. <br /><br />"
"android.widget.CheckedTextView.onRtlPropertiesChanged (int layoutDirection)   Called when any RTL property  (layout direction or text direction or text alignment) "," Called when any RTL property (layout direction or text direction or text alignment) has been changed. <br /><br />"
"android.widget.CheckedTextView.setCheckMarkDrawable (Drawable d) "," Set the checkmark to a given Drawable. <br /><br />"
"android.widget.CheckedTextView.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.CheckedTextView.jumpDrawablesToCurrentState ()   Call Drawable.jumpToCurrentState () "," Call Drawable.jumpToCurrentState() on all Drawable objects associated with this view. <br /><br />"
"android.widget.CheckedTextView.getCheckMarkDrawable () "," Gets the checkmark drawable <br /><br />"
"android.widget.CheckedTextView.setCheckMarkTintMode (PorterDuff.Mode tintMode)   Specifies the blending mode used to apply the tint specified by setCheckMarkTintList (ColorStateList) "," Specifies the blending mode used to apply the tint specified by setCheckMarkTintList(ColorStateList) to the check mark drawable. <br /><br />"
"android.widget.CheckedTextView.getCheckMarkTintList () "," Returns the tint applied to the check mark drawable, if specified. <br /><br />"
"android.widget.CheckedTextView.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.CheckedTextView.isChecked () "," no description <br /><br />"
"android.widget.CheckedTextView.setCheckMarkDrawable (int resid) "," Set the checkmark to a given Drawable, identified by its resourece id. <br /><br />"
"android.widget.Chronometer.stop () "," Stop counting up. <br /><br />"
"android.widget.Chronometer.getOnChronometerTickListener () "," no description <br /><br />"
"android.widget.Chronometer.setOnChronometerTickListener (Chronometer.OnChronometerTickListener listener) "," Sets the listener to be called when the chronometer changes. <br /><br />"
"android.widget.Chronometer.getBase ()   Return the base time as set through setBase (long) "," Return the base time as set through setBase(long). <br /><br />"
"android.widget.Chronometer.setBase (long base) "," Set the time that the count-up timer is in reference to. <br /><br />"
"android.widget.Chronometer.getFormat ()   Returns the current format string as set through setFormat (String) "," Returns the current format string as set through setFormat(String). <br /><br />"
"android.widget.Chronometer.start () "," Start counting up. <br /><br />"
"android.widget.Chronometer.setFormat (String format) "," Sets the format string used for display. <br /><br />"
"android.widget.Chronometer.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.Chronometer.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.Chronometer.OnChronometerTickListener.onChronometerTick (Chronometer chronometer) "," Notification that the chronometer has changed. <br /><br />"
"android.widget.CompoundButton.toggle () "," Change the checked state of the view to the inverse of its current state <br /><br />"
"android.widget.CompoundButton.onRestoreInstanceState (Parcelable state)   Hook allowing a view to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState () "," Hook allowing a view to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState(). <br /><br />"
"android.widget.CompoundButton.setChecked (boolean checked) "," Changes the checked state of this button. <br /><br />"
"android.widget.CompoundButton.performClick () "," Call this view's OnClickListener, if it is defined. <br /><br />"
"android.widget.CompoundButton.setButtonTintList (ColorStateList tint) "," Applies a tint to the button drawable. <br /><br />"
"android.widget.CompoundButton.drawableHotspotChanged (float x, float y) "," This function is called whenever the view hotspot changes and needs to be propagated to drawables or child views managed by the view. <br /><br />"
"android.widget.CompoundButton.setButtonTintMode (PorterDuff.Mode tintMode)   Specifies the blending mode used to apply the tint specified by setButtonTintList (ColorStateList) "," Specifies the blending mode used to apply the tint specified by setButtonTintList(ColorStateList)} to the button drawable. <br /><br />"
"android.widget.CompoundButton.getButtonTintMode () "," no description <br /><br />"
"android.widget.CompoundButton.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.CompoundButton.setButtonDrawable (int resid) "," Set the button graphic to a given Drawable, identified by its resource id. <br /><br />"
"android.widget.CompoundButton.jumpDrawablesToCurrentState ()   Call Drawable.jumpToCurrentState () "," Call Drawable.jumpToCurrentState() on all Drawable objects associated with this view. <br /><br />"
"android.widget.CompoundButton.onSaveInstanceState () "," Hook allowing a view to generate a representation of its internal state that can later be used to create a new instance with that same state. <br /><br />"
"android.widget.CompoundButton.setOnCheckedChangeListener (CompoundButton.OnCheckedChangeListener listener) "," Register a callback to be invoked when the checked state of this button changes. <br /><br />"
"android.widget.CompoundButton.getButtonTintList () "," no description <br /><br />"
"android.widget.CompoundButton.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.CompoundButton.getCompoundPaddingLeft () "," Returns the left padding of the view, plus space for the left Drawable if any. <br /><br />"
"android.widget.CompoundButton.getCompoundPaddingRight () "," Returns the right padding of the view, plus space for the right Drawable if any. <br /><br />"
"android.widget.CompoundButton.setButtonDrawable (Drawable d) "," Set the button graphic to a given Drawable <br /><br />"
"android.widget.CompoundButton.isChecked () "," no description <br /><br />"
"android.widget.CompoundButton.OnCheckedChangeListener.onCheckedChanged (CompoundButton buttonView, boolean isChecked) "," Called when the checked state of a compound button has changed. <br /><br />"
"android.widget.CursorAdapter.setFilterQueryProvider (FilterQueryProvider filterQueryProvider) "," Sets the query filter provider used to filter the current Cursor. <br /><br />"
"android.widget.CursorAdapter.bindView (View view, Context context, Cursor cursor) "," Bind an existing view to the data pointed to by cursor <br /><br />"
"android.widget.CursorAdapter.newView (Context context, Cursor cursor, ViewGroup parent) "," Makes a new view to hold the data pointed to by cursor. <br /><br />"
"android.widget.CursorAdapter.swapCursor (Cursor newCursor) "," Swap in a new Cursor, returning the old Cursor. <br /><br />"
"android.widget.CursorAdapter.getCursor () "," Returns the cursor. <br /><br />"
"android.widget.CursorAdapter.newDropDownView (Context context, Cursor cursor, ViewGroup parent) "," Makes a new drop down view to hold the data pointed to by cursor. <br /><br />"
"android.widget.CursorAdapter.convertToString (Cursor cursor) "," Converts the cursor into a CharSequence. <br /><br />"
"android.widget.CursorAdapter.getView (int position, View convertView, ViewGroup parent) "," no description <br /><br />"
"android.widget.CursorAdapter.getCount () "," no description <br /><br />"
"android.widget.CursorAdapter.hasStableIds () "," Indicates whether the item ids are stable across changes to the underlying data. <br /><br />"
"android.widget.CursorAdapter.changeCursor (Cursor cursor) "," Change the underlying cursor to a new cursor. <br /><br />"
"android.widget.CursorAdapter.getDropDownView (int position, View convertView, ViewGroup parent) "," Get a View that displays in the drop down popup the data at the specified position in the data set. <br /><br />"
"android.widget.CursorAdapter.getFilterQueryProvider () "," Returns the query filter provider used for filtering. <br /><br />"
"android.widget.CursorAdapter.getItemId (int position) "," no description <br /><br />"
"android.widget.CursorAdapter.getItem (int position) "," no description <br /><br />"
"android.widget.CursorAdapter.getFilter () "," Returns a filter that can be used to constrain data with a filtering pattern. <br /><br />"
"android.widget.CursorAdapter.runQueryOnBackgroundThread (CharSequence constraint) "," Runs a query with the specified constraint. <br /><br />"
"android.widget.CursorTreeAdapter.setFilterQueryProvider (FilterQueryProvider filterQueryProvider) "," no description <br /><br />"
"android.widget.CursorTreeAdapter.getChildId (int groupPosition, int childPosition) "," no description <br /><br />"
"android.widget.CursorTreeAdapter.onGroupCollapsed (int groupPosition) "," Called when a group is collapsed. <br /><br />"
"android.widget.CursorTreeAdapter.getCursor () "," no description <br /><br />"
"android.widget.CursorTreeAdapter.getChild (int groupPosition, int childPosition) "," no description <br /><br />"
"android.widget.CursorTreeAdapter.convertToString (Cursor cursor) "," no description <br /><br />"
"android.widget.CursorTreeAdapter.hasStableIds () "," no description <br /><br />"
"android.widget.CursorTreeAdapter.notifyDataSetInvalidated () "," no description <br /><br />"
"android.widget.CursorTreeAdapter.setGroupCursor (Cursor cursor) "," Sets the group Cursor. <br /><br />"
"android.widget.CursorTreeAdapter.changeCursor (Cursor cursor) "," no description <br /><br />"
"android.widget.CursorTreeAdapter.getGroupView (int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) "," no description <br /><br />"
"android.widget.CursorTreeAdapter.getFilterQueryProvider () "," no description <br /><br />"
"android.widget.CursorTreeAdapter.getGroupCount () "," no description <br /><br />"
"android.widget.CursorTreeAdapter.getGroupId (int groupPosition) "," no description <br /><br />"
"android.widget.CursorTreeAdapter.notifyDataSetChanged (boolean releaseCursors) "," Notifies a data set change, but with the option of not releasing any cached cursors. <br /><br />"
"android.widget.CursorTreeAdapter.setChildrenCursor (int groupPosition, Cursor childrenCursor) "," Sets the children Cursor for a particular group. <br /><br />"
"android.widget.CursorTreeAdapter.getChildrenCount (int groupPosition) "," no description <br /><br />"
"android.widget.CursorTreeAdapter.getChildView (int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent) "," no description <br /><br />"
"android.widget.CursorTreeAdapter.getFilter () "," Returns a filter that can be used to constrain data with a filtering pattern. <br /><br />"
"android.widget.CursorTreeAdapter.getGroup (int groupPosition) "," no description <br /><br />"
"android.widget.CursorTreeAdapter.isChildSelectable (int groupPosition, int childPosition) "," no description <br /><br />"
"android.widget.CursorTreeAdapter.runQueryOnBackgroundThread (CharSequence constraint) "," no description <br /><br />"
"android.widget.CursorTreeAdapter.notifyDataSetChanged () "," no description <br /><br />"
"android.widget.DatePicker.setMinDate (long minDate)   Sets the minimal date supported by this NumberPicker in milliseconds since January 1, 1970 00:00:00 in getDefault () "," Sets the minimal date supported by this NumberPicker in milliseconds since January 1, 1970 00:00:00 in getDefault() time zone. <br /><br />"
"android.widget.DatePicker.setMaxDate (long maxDate)   Sets the maximal date supported by this DatePicker in milliseconds since January 1, 1970 00:00:00 in getDefault () "," Sets the maximal date supported by this DatePicker in milliseconds since January 1, 1970 00:00:00 in getDefault() time zone. <br /><br />"
"android.widget.DatePicker.onPopulateAccessibilityEvent (AccessibilityEvent event)   Called from dispatchPopulateAccessibilityEvent (AccessibilityEvent) "," Called from dispatchPopulateAccessibilityEvent(AccessibilityEvent) giving a chance to this View to populate the accessibility event with its text content. <br /><br />"
"android.widget.DatePicker.updateDate (int year, int month, int dayOfMonth) "," Update the current date. <br /><br />"
"android.widget.DatePicker.getSpinnersShown () "," Gets whether the spinners are shown. <br /><br />"
"android.widget.DatePicker.setFirstDayOfWeek (int firstDayOfWeek) "," Sets the first day of week. <br /><br />"
"android.widget.DatePicker.getCalendarView () "," Gets the CalendarView. <br /><br />"
"android.widget.DatePicker.dispatchPopulateAccessibilityEvent (AccessibilityEvent event) "," Dispatches an AccessibilityEvent to the View first and then to its children for adding their text content to the event. <br /><br />"
"android.widget.DatePicker.getMaxDate ()   Gets the maximal date supported by this DatePicker in milliseconds since January 1, 1970 00:00:00 in getDefault () "," Gets the maximal date supported by this DatePicker in milliseconds since January 1, 1970 00:00:00 in getDefault() time zone. <br /><br />"
"android.widget.DatePicker.getMonth () "," no description <br /><br />"
"android.widget.DatePicker.getDayOfMonth () "," no description <br /><br />"
"android.widget.DatePicker.getMinDate ()   Gets the minimal date supported by this DatePicker in milliseconds since January 1, 1970 00:00:00 in getDefault () "," Gets the minimal date supported by this DatePicker in milliseconds since January 1, 1970 00:00:00 in getDefault() time zone. <br /><br />"
"android.widget.DatePicker.setCalendarViewShown (boolean shown) "," Sets whether the CalendarView is shown. <br /><br />"
"android.widget.DatePicker.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.DatePicker.init (int year, int monthOfYear, int dayOfMonth, DatePicker.OnDateChangedListener onDateChangedListener) "," Initialize the state. <br /><br />"
"android.widget.DatePicker.getCalendarViewShown () "," Gets whether the CalendarView is shown. <br /><br />"
"android.widget.DatePicker.setSpinnersShown (boolean shown) "," Sets whether the spinners are shown. <br /><br />"
"android.widget.DatePicker.isEnabled () "," Returns the enabled status for this view. <br /><br />"
"android.widget.DatePicker.getYear () "," no description <br /><br />"
"android.widget.DatePicker.setEnabled (boolean enabled) "," Set the enabled state of this view. <br /><br />"
"android.widget.DatePicker.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.DatePicker.getFirstDayOfWeek () "," Gets the first day of week. <br /><br />"
"android.widget.DatePicker.OnDateChangedListener.onDateChanged (DatePicker view, int year, int monthOfYear, int dayOfMonth) "," Called upon a date change. <br /><br />"
"android.widget.DialerFilter.getFilterText () "," no description <br /><br />"
"android.widget.DialerFilter.isQwertyKeyboard () "," no description <br /><br />"
"android.widget.DialerFilter.setFilterWatcher (TextWatcher watcher) "," no description <br /><br />"
"android.widget.DialerFilter.clearText () "," Clears both the digits and the filter text. <br /><br />"
"android.widget.DialerFilter.getDigits () "," no description <br /><br />"
"android.widget.DialerFilter.removeFilterWatcher (TextWatcher watcher) "," no description <br /><br />"
"android.widget.DialerFilter.getLetters () "," no description <br /><br />"
"android.widget.DialerFilter.onKeyDown (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyDown () "," Default implementation of KeyEvent.Callback.onKeyDown(): perform press of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released, if the view is enabled and clickable. <br /><br />"
"android.widget.DialerFilter.onKeyUp (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyUp () "," Default implementation of KeyEvent.Callback.onKeyUp(): perform clicking of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released. <br /><br />"
"android.widget.DialerFilter.setLettersWatcher (TextWatcher watcher) "," no description <br /><br />"
"android.widget.DialerFilter.getMode () "," no description <br /><br />"
"android.widget.DialerFilter.setDigitsWatcher (TextWatcher watcher) "," no description <br /><br />"
"android.widget.DialerFilter.append (String text) "," no description <br /><br />"
"android.widget.DialerFilter.setMode (int newMode) "," Change the mode of the widget. <br /><br />"
"android.widget.DigitalClock.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.DigitalClock.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.EdgeEffect.finish () "," Immediately finish the current animation. <br /><br />"
"android.widget.EdgeEffect.onRelease () "," Call when the object is released after being pulled. <br /><br />"
"android.widget.EdgeEffect.isFinished () "," Reports if this EdgeEffect's animation is finished. <br /><br />"
"android.widget.EdgeEffect.setSize (int width, int height) "," Set the size of this edge effect in pixels. <br /><br />"
"android.widget.EdgeEffect.onPull (float deltaDistance) "," A view should call this when content is pulled away from an edge by the user. <br /><br />"
"android.widget.EdgeEffect.onPull (float deltaDistance, float displacement) "," A view should call this when content is pulled away from an edge by the user. <br /><br />"
"android.widget.EdgeEffect.getColor () "," Return the color of this edge effect in argb. <br /><br />"
"android.widget.EdgeEffect.draw (Canvas canvas) "," Draw into the provided canvas. <br /><br />"
"android.widget.EdgeEffect.setColor (int color) "," Set the color of this edge effect in argb. <br /><br />"
"android.widget.EdgeEffect.getMaxHeight ()   Return the maximum height that the edge effect will be drawn at given the original "," Return the maximum height that the edge effect will be drawn at given the original input size. <br /><br />"
"android.widget.EdgeEffect.onAbsorb (int velocity) "," Call when the effect absorbs an impact at the given velocity. <br /><br />"
"android.widget.EditText.performAccessibilityAction (int action, Bundle arguments) "," Performs the specified accessibility action on the view. <br /><br />"
"android.widget.EditText.extendSelection (int index)   Convenience for extendSelection (Spannable, int) "," Convenience for extendSelection(Spannable, int). <br /><br />"
"android.widget.EditText.setSelection (int start, int stop)   Convenience for setSelection (Spannable, int, int) "," Convenience for setSelection(Spannable, int, int). <br /><br />"
"android.widget.EditText.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.EditText.setText (CharSequence text, TextView.BufferType type)   Sets the text that this TextView is to display  (see setText (CharSequence)) "," Sets the text that this TextView is to display (see setText(CharSequence)) and also sets whether it is stored in a styleable/spannable buffer and whether it is editable. <br /><br />"
"android.widget.EditText.setEllipsize (TextUtils.TruncateAt ellipsis) "," Causes words in the text that are longer than the view is wide to be ellipsized instead of broken in the middle. <br /><br />"
"android.widget.EditText.getText () "," Return the text the TextView is displaying. <br /><br />"
"android.widget.EditText.selectAll ()   Convenience for selectAll (Spannable) "," Convenience for selectAll(Spannable). <br /><br />"
"android.widget.EditText.setSelection (int index)   Convenience for setSelection (Spannable, int) "," Convenience for setSelection(Spannable, int). <br /><br />"
"android.widget.EditText.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.ExpandableListAdapter.unregisterDataSetObserver (DataSetObserver observer) "," no description <br /><br />"
"android.widget.ExpandableListAdapter.getChildId (int groupPosition, int childPosition) "," Gets the ID for the given child within the given group. <br /><br />"
"android.widget.ExpandableListAdapter.onGroupExpanded (int groupPosition) "," Called when a group is expanded. <br /><br />"
"android.widget.ExpandableListAdapter.registerDataSetObserver (DataSetObserver observer) "," no description <br /><br />"
"android.widget.ExpandableListAdapter.onGroupCollapsed (int groupPosition) "," Called when a group is collapsed. <br /><br />"
"android.widget.ExpandableListAdapter.getChild (int groupPosition, int childPosition) "," Gets the data associated with the given child within the given group. <br /><br />"
"android.widget.ExpandableListAdapter.hasStableIds () "," Indicates whether the child and group IDs are stable across changes to the underlying data. <br /><br />"
"android.widget.ExpandableListAdapter.getGroupView (int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) "," Gets a View that displays the given group. <br /><br />"
"android.widget.ExpandableListAdapter.areAllItemsEnabled () "," no description <br /><br />"
"android.widget.ExpandableListAdapter.getGroupCount () "," Gets the number of groups. <br /><br />"
"android.widget.ExpandableListAdapter.getCombinedGroupId (long groupId)   Gets an ID for a group that is unique across any item  (either group or child) "," Gets an ID for a group that is unique across any item (either group or child) that is in this list. <br /><br />"
"android.widget.ExpandableListAdapter.getGroupId (int groupPosition) "," Gets the ID for the group at the given position. <br /><br />"
"android.widget.ExpandableListAdapter.isEmpty () "," no description <br /><br />"
"android.widget.ExpandableListAdapter.getChildrenCount (int groupPosition) "," Gets the number of children in a specified group. <br /><br />"
"android.widget.ExpandableListAdapter.getCombinedChildId (long groupId, long childId)   Gets an ID for a child that is unique across any item  (either group or child) "," Gets an ID for a child that is unique across any item (either group or child) that is in this list. <br /><br />"
"android.widget.ExpandableListAdapter.getChildView (int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent) "," Gets a View that displays the data for the given child within the given group. <br /><br />"
"android.widget.ExpandableListAdapter.getGroup (int groupPosition) "," Gets the data associated with the given group. <br /><br />"
"android.widget.ExpandableListAdapter.isChildSelectable (int groupPosition, int childPosition) "," Whether the child at the specified position is selectable. <br /><br />"
"android.widget.ExpandableListView.getExpandableListAdapter () "," Gets the adapter that provides data to this view. <br /><br />"
"android.widget.ExpandableListView.setOnGroupExpandListener (ExpandableListView.OnGroupExpandListener onGroupExpandListener) "," no description <br /><br />"
"android.widget.ExpandableListView.onRestoreInstanceState (Parcelable state)   Hook allowing a view to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState () "," Hook allowing a view to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState(). <br /><br />"
"android.widget.ExpandableListView.setSelectedGroup (int groupPosition) "," Sets the selection to the specified group. <br /><br />"
"android.widget.ExpandableListView.isGroupExpanded (int groupPosition) "," Whether the given group is currently expanded. <br /><br />"
"android.widget.ExpandableListView.setIndicatorBounds (int left, int right)   Sets the drawing bounds for the indicators  (at minimum, the group indicator is affected by this; the child indicator is affected by this if the child indicator bounds are set to inherit) "," Sets the drawing bounds for the indicators (at minimum, the group indicator is affected by this; the child indicator is affected by this if the child indicator bounds are set to inherit). <br /><br />"
"android.widget.ExpandableListView.setChildIndicator (Drawable childIndicator) "," Sets the indicator to be drawn next to a child. <br /><br />"
"android.widget.ExpandableListView.getExpandableListPosition (int flatListPosition)   Converts a flat list position  (the raw position of an item  (child or group) in the list) to a group and/or child position  (represented in a packed position) "," Converts a flat list position (the raw position of an item (child or group) in the list) to a group and/or child position (represented in a packed position). <br /><br />"
"android.widget.ExpandableListView.onRtlPropertiesChanged (int layoutDirection)   Called when any RTL property  (layout direction or text direction or text alignment) "," Called when any RTL property (layout direction or text direction or text alignment) has been changed. <br /><br />"
"android.widget.ExpandableListView.setOnChildClickListener (ExpandableListView.OnChildClickListener onChildClickListener) "," no description <br /><br />"
"android.widget.ExpandableListView.setIndicatorBoundsRelative (int start, int end)   Sets the relative drawing bounds for the indicators  (at minimum, the group indicator is affected by this; the child indicator is affected by this if the child indicator bounds are set to inherit) "," Sets the relative drawing bounds for the indicators (at minimum, the group indicator is affected by this; the child indicator is affected by this if the child indicator bounds are set to inherit). <br /><br />"
"android.widget.ExpandableListView.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.ExpandableListView.setOnItemClickListener (AdapterView.OnItemClickListener l) "," Register a callback to be invoked when an item has been clicked and the caller prefers to receive a ListView-style position instead of a group and/or child position. <br /><br />"
"android.widget.ExpandableListView.onSaveInstanceState () "," Hook allowing a view to generate a representation of its internal state that can later be used to create a new instance with that same state. <br /><br />"
"android.widget.ExpandableListView.getSelectedPosition ()   Gets the position of the currently selected group or child  (along with its type) "," Gets the position of the currently selected group or child (along with its type). <br /><br />"
"android.widget.ExpandableListView.collapseGroup (int groupPos) "," Collapse a group in the grouped list view <br /><br />"
"android.widget.ExpandableListView.getPackedPositionForChild (int groupPosition, int childPosition) "," Returns the packed position representation of a child's position. <br /><br />"
"android.widget.ExpandableListView.performItemClick (View v, int position, long id) "," Call the OnItemClickListener, if it is defined. <br /><br />"
"android.widget.ExpandableListView.getPackedPositionForGroup (int groupPosition) "," Returns the packed position representation of a group's position. <br /><br />"
"android.widget.ExpandableListView.getPackedPositionChild (long packedPosition)   Gets the child position from a packed position that is of PACKED_POSITION_TYPE_CHILD type  (use getPackedPositionType (long)) "," Gets the child position from a packed position that is of PACKED_POSITION_TYPE_CHILD type (use getPackedPositionType(long)). <br /><br />"
"android.widget.ExpandableListView.setChildIndicatorBoundsRelative (int start, int end) "," Sets the relative drawing bounds for the child indicator. <br /><br />"
"android.widget.ExpandableListView.getPackedPositionGroup (long packedPosition) "," Gets the group position from a packed position. <br /><br />"
"android.widget.ExpandableListView.setOnGroupClickListener (ExpandableListView.OnGroupClickListener onGroupClickListener) "," no description <br /><br />"
"android.widget.ExpandableListView.getAdapter ()   This method should not be used, use getExpandableListAdapter () "," This method should not be used, use getExpandableListAdapter(). <br /><br />"
"android.widget.ExpandableListView.setAdapter (ListAdapter adapter)   This overloaded method should not be used, instead use setAdapter (ExpandableListAdapter) "," This overloaded method should not be used, instead use setAdapter(ExpandableListAdapter). <br /><br />"
"android.widget.ExpandableListView.setGroupIndicator (Drawable groupIndicator) "," Sets the indicator to be drawn next to a group. <br /><br />"
"android.widget.ExpandableListView.getFlatListPosition (long packedPosition) "," Converts a group and/or child position to a flat list position. <br /><br />"
"android.widget.ExpandableListView.expandGroup (int groupPos) "," Expand a group in the grouped list view <br /><br />"
"android.widget.ExpandableListView.setChildIndicatorBounds (int left, int right) "," Sets the drawing bounds for the child indicator. <br /><br />"
"android.widget.ExpandableListView.expandGroup (int groupPos, boolean animate) "," Expand a group in the grouped list view <br /><br />"
"android.widget.ExpandableListView.setAdapter (ExpandableListAdapter adapter) "," Sets the adapter that provides data to this view. <br /><br />"
"android.widget.ExpandableListView.setChildDivider (Drawable childDivider) "," Sets the drawable that will be drawn adjacent to every child in the list. <br /><br />"
"android.widget.ExpandableListView.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.ExpandableListView.getPackedPositionType (long packedPosition) "," Gets the type of a packed position. <br /><br />"
"android.widget.ExpandableListView.setSelectedChild (int groupPosition, int childPosition, boolean shouldExpandGroup) "," Sets the selection to the specified child. <br /><br />"
"android.widget.ExpandableListView.setOnGroupCollapseListener (ExpandableListView.OnGroupCollapseListener onGroupCollapseListener) "," no description <br /><br />"
"android.widget.ExpandableListView.getSelectedId () "," Gets the ID of the currently selected group or child. <br /><br />"
"android.widget.ExpandableListView.OnChildClickListener.onChildClick (ExpandableListView parent, View v, int groupPosition, int childPosition, long id) "," Callback method to be invoked when a child in this expandable list has been clicked. <br /><br />"
"android.widget.ExpandableListView.OnGroupClickListener.onGroupClick (ExpandableListView parent, View v, int groupPosition, long id) "," Callback method to be invoked when a group in this expandable list has been clicked. <br /><br />"
"android.widget.ExpandableListView.OnGroupCollapseListener.onGroupCollapse (int groupPosition) "," Callback method to be invoked when a group in this expandable list has been collapsed. <br /><br />"
"android.widget.ExpandableListView.OnGroupExpandListener.onGroupExpand (int groupPosition) "," Callback method to be invoked when a group in this expandable list has been expanded. <br /><br />"
"android.widget.Filter.FilterListener.onFilterComplete (int count) "," Notifies the end of a filtering operation. <br /><br />"
"android.widget.Filter.filter (CharSequence constraint) "," Starts an asynchronous filtering operation. <br /><br />"
"android.widget.Filter.convertResultToString (Object resultValue) "," Converts a value from the filtered set into a CharSequence. <br /><br />"
"android.widget.Filter.filter (CharSequence constraint, Filter.FilterListener listener) "," Starts an asynchronous filtering operation. <br /><br />"
"android.widget.Filterable.getFilter () "," Returns a filter that can be used to constrain data with a filtering pattern. <br /><br />"
"android.widget.FilterQueryProvider.runQuery (CharSequence constraint) "," Runs a query with the specified constraint. <br /><br />"
"android.widget.FrameLayout.getForegroundTintMode () "," no description <br /><br />"
"android.widget.FrameLayout.getMeasureAllChildren () "," Determines whether all children, or just those in the VISIBLE or INVISIBLE state, are considered when measuring. <br /><br />"
"android.widget.FrameLayout.shouldDelayChildPressedState () "," Return true if the pressed state should be delayed for children or descendants of this ViewGroup. <br /><br />"
"android.widget.FrameLayout.setVisibility (int visibility) "," Set the enabled state of this view. <br /><br />"
"android.widget.FrameLayout.drawableHotspotChanged (float x, float y) "," This function is called whenever the view hotspot changes and needs to be propagated to drawables or child views managed by the view. <br /><br />"
"android.widget.FrameLayout.gatherTransparentRegion (Region region) "," This is used by the RootView to perform an optimization when the view hierarchy contains one or several SurfaceView. <br /><br />"
"android.widget.FrameLayout.setForegroundGravity (int foregroundGravity) "," Describes how the foreground is positioned. <br /><br />"
"android.widget.FrameLayout.setForeground (Drawable d) "," Supply a Drawable that is to be rendered on top of all of the child views in the frame layout. <br /><br />"
"android.widget.FrameLayout.setForegroundTintList (ColorStateList tint) "," Applies a tint to the foreground drawable. <br /><br />"
"android.widget.FrameLayout.draw (Canvas canvas)   Manually render this view  (and all of its children) "," Manually render this view (and all of its children) to the given Canvas. <br /><br />"
"android.widget.FrameLayout.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.FrameLayout.setMeasureAllChildren (boolean measureAll) "," Sets whether to consider all children, or just those in the VISIBLE or INVISIBLE state, when measuring. <br /><br />"
"android.widget.FrameLayout.jumpDrawablesToCurrentState ()   Call Drawable.jumpToCurrentState () "," Call Drawable.jumpToCurrentState() on all Drawable objects associated with this view. <br /><br />"
"android.widget.FrameLayout.setForegroundTintMode (PorterDuff.Mode tintMode)   Specifies the blending mode used to apply the tint specified by setForegroundTintList (ColorStateList) "," Specifies the blending mode used to apply the tint specified by setForegroundTintList(ColorStateList)} to the foreground drawable. <br /><br />"
"android.widget.FrameLayout.getForeground () "," Returns the drawable used as the foreground of this FrameLayout. <br /><br />"
"android.widget.FrameLayout.getForegroundTintList () "," no description <br /><br />"
"android.widget.FrameLayout.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.widget.FrameLayout.getForegroundGravity () "," Describes how the foreground is positioned. <br /><br />"
"android.widget.FrameLayout.getConsiderGoneChildrenWhenMeasuring ()    This method was deprecated in API level 14. This method is deprecated in favor of getMeasureAllChildren (), which was renamed for consistency with setMeasureAllChildren () "," This method was deprecated in API level 14. This method is deprecated in favor of getMeasureAllChildren(), which was renamed for consistency with setMeasureAllChildren(). <br /><br />"
"android.widget.FrameLayout.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.Gallery.onDown (MotionEvent e) "," Notified when a tap occurs with the down MotionEvent that triggered it. <br /><br />"
"android.widget.Gallery.onSingleTapUp (MotionEvent e) "," Notified when a tap occurs with the up MotionEvent that triggered it. <br /><br />"
"android.widget.Gallery.dispatchKeyEvent (KeyEvent event) "," Dispatch a key event to the next view on the focus path. <br /><br />"
"android.widget.Gallery.onScroll (MotionEvent e1, MotionEvent e2, float distanceX, float distanceY) "," Notified when a scroll occurs with the initial on down MotionEvent and the current move MotionEvent. <br /><br />"
"android.widget.Gallery.onKeyUp (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyUp () "," Default implementation of KeyEvent.Callback.onKeyUp(): perform clicking of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released. <br /><br />"
"android.widget.Gallery.onShowPress (MotionEvent e) "," The user has performed a down MotionEvent and not performed a move or up yet. <br /><br />"
"android.widget.Gallery.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.Gallery.onLongPress (MotionEvent e) "," Notified when a long press occurs with the initial on down MotionEvent that trigged it. <br /><br />"
"android.widget.Gallery.setGravity (int gravity) "," Describes how the child views are aligned. <br /><br />"
"android.widget.Gallery.setCallbackDuringFling (boolean shouldCallback)   Whether or not to callback on any getOnItemSelectedListener () "," Whether or not to callback on any getOnItemSelectedListener() while the items are being flinged. <br /><br />"
"android.widget.Gallery.onKeyDown (int keyCode, KeyEvent event) "," Handles left, right, and clicking <br /><br />"
"android.widget.Gallery.setAnimationDuration (int animationDurationMillis) "," Sets how long the transition animation should run when a child view changes position. <br /><br />"
"android.widget.Gallery.performAccessibilityAction (int action, Bundle arguments) "," Performs the specified accessibility action on the view. <br /><br />"
"android.widget.Gallery.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.widget.Gallery.setUnselectedAlpha (float unselectedAlpha) "," Sets the alpha of items that are not selected in the Gallery. <br /><br />"
"android.widget.Gallery.setSpacing (int spacing) "," Sets the spacing between items in a Gallery <br /><br />"
"android.widget.Gallery.showContextMenuForChild (View originalView) "," Bring up a context menu for the specified view or its ancestors. <br /><br />"
"android.widget.Gallery.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.Gallery.onTouchEvent (MotionEvent event) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.widget.Gallery.dispatchSetSelected (boolean selected) "," Dispatch setSelected to all of this View's children. <br /><br />"
"android.widget.Gallery.onFling (MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) "," Notified of a fling event when it occurs with the initial on down MotionEvent and the matching up MotionEvent. <br /><br />"
"android.widget.Gallery.showContextMenu () "," Bring up the context menu for this view. <br /><br />"
"android.widget.GridLayout.getOrientation () "," Returns the current orientation. <br /><br />"
"android.widget.GridLayout.spec (int start, int size, GridLayout.Alignment alignment)   Equivalent to: spec (start, size, alignment, 0f) "," Equivalent to: spec(start, size, alignment, 0f). <br /><br />"
"android.widget.GridLayout.setRowOrderPreserved (boolean rowOrderPreserved) "," When this property is true, GridLayout is forced to place the row boundaries so that their associated grid indices are in ascending order in the view. <br /><br />"
"android.widget.GridLayout.spec (int start, int size, float weight)   Equivalent to: spec (start, 1, default_alignment, weight) "," Equivalent to: spec(start, 1, default_alignment, weight) - where default_alignment is specified in GridLayout.LayoutParams. <br /><br />"
"android.widget.GridLayout.spec (int start, float weight)   Equivalent to: spec (start, 1, weight) "," Equivalent to: spec(start, 1, weight). <br /><br />"
"android.widget.GridLayout.getUseDefaultMargins () "," Returns whether or not this GridLayout will allocate default margins when no corresponding layout parameters are defined. <br /><br />"
"android.widget.GridLayout.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.GridLayout.setOrientation (int orientation) "," GridLayout uses the orientation property for two purposes:   To control the 'direction' in which default row/column indices are generated when they are not specified in a component's layout parameters. <br /><br />"
"android.widget.GridLayout.setUseDefaultMargins (boolean useDefaultMargins) "," When true, GridLayout allocates default margins around children based on the child's visual characteristics. <br /><br />"
"android.widget.GridLayout.setRowCount (int rowCount) "," RowCount is used only to generate default row/column indices when they are not specified by a component's layout parameters. <br /><br />"
"android.widget.GridLayout.spec (int start, GridLayout.Alignment alignment) "," Return a Spec, spec, where:   spec.span = [start, start + 1]   spec.alignment = alignment    To leave the start index undefined, use the value UNDEFINED. <br /><br />"
"android.widget.GridLayout.spec (int start) "," Return a Spec, spec, where:   spec.span = [start, start + 1]    To leave the start index undefined, use the value UNDEFINED. <br /><br />"
"android.widget.GridLayout.getRowCount () "," Returns the current number of rows. <br /><br />"
"android.widget.GridLayout.spec (int start, int size, GridLayout.Alignment alignment, float weight) "," Return a Spec, spec, where:   spec.span = [start, start + size]   spec.alignment = alignment   spec.weight = weight    To leave the start index undefined, use the value UNDEFINED. <br /><br />"
"android.widget.GridLayout.setColumnCount (int columnCount) "," ColumnCount is used only to generate default column/column indices when they are not specified by a component's layout parameters. <br /><br />"
"android.widget.GridLayout.isColumnOrderPreserved () "," Returns whether or not column boundaries are ordered by their grid indices. <br /><br />"
"android.widget.GridLayout.requestLayout () "," Call this when something has changed which has invalidated the layout of this view. <br /><br />"
"android.widget.GridLayout.getAlignmentMode () "," Returns the alignment mode. <br /><br />"
"android.widget.GridLayout.setColumnOrderPreserved (boolean columnOrderPreserved) "," When this property is true, GridLayout is forced to place the column boundaries so that their associated grid indices are in ascending order in the view. <br /><br />"
"android.widget.GridLayout.getColumnCount () "," Returns the current number of columns. <br /><br />"
"android.widget.GridLayout.setAlignmentMode (int alignmentMode) "," Sets the alignment mode to be used for all of the alignments between the children of this container. <br /><br />"
"android.widget.GridLayout.spec (int start, GridLayout.Alignment alignment, float weight)   Equivalent to: spec (start, 1, alignment, weight) "," Equivalent to: spec(start, 1, alignment, weight). <br /><br />"
"android.widget.GridLayout.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.widget.GridLayout.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.GridLayout.isRowOrderPreserved () "," Returns whether or not row boundaries are ordered by their grid indices. <br /><br />"
"android.widget.GridLayout.spec (int start, int size) "," Return a Spec, spec, where:   spec.span = [start, start + size]    To leave the start index undefined, use the value UNDEFINED. <br /><br />"
"android.widget.GridLayout.LayoutParams.setGravity (int gravity) "," Describes how the child views are positioned. <br /><br />"
"android.widget.GridLayout.LayoutParams.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.widget.GridLayout.LayoutParams.equals (Object o) "," Compares this instance with the specified object and indicates if they are equal. <br /><br />"
"android.widget.GridLayout.Spec.equals (Object that) "," Returns true if the class, alignment and span properties of this Spec and the supplied parameter are pairwise equal, false otherwise. <br /><br />"
"android.widget.GridLayout.Spec.hashCode () "," Returns an integer hash code for this object. <br /><br />"
"android.widget.GridView.setAdapter (ListAdapter adapter) "," Sets the data behind this GridView. <br /><br />"
"android.widget.GridView.setVerticalSpacing (int verticalSpacing)   Set the amount of vertical  (y) "," Set the amount of vertical (y) spacing to place between each item in the grid. <br /><br />"
"android.widget.GridView.setColumnWidth (int columnWidth) "," Set the width of columns in the grid. <br /><br />"
"android.widget.GridView.getVerticalSpacing () "," Returns the amount of vertical spacing between each item in the grid. <br /><br />"
"android.widget.GridView.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.GridView.setGravity (int gravity) "," Set the gravity for this grid. <br /><br />"
"android.widget.GridView.smoothScrollToPosition (int position) "," Smoothly scroll to the specified adapter position. <br /><br />"
"android.widget.GridView.setNumColumns (int numColumns) "," Set the number of columns in the grid <br /><br />"
"android.widget.GridView.onKeyMultiple (int keyCode, int repeatCount, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyMultiple (): always returns false  (doesn't handle the event) "," Default implementation of KeyEvent.Callback.onKeyMultiple(): always returns false (doesn't handle the event). <br /><br />"
"android.widget.GridView.setRemoteViewsAdapter (Intent intent) "," Sets up this AbsListView to use a remote views adapter which connects to a RemoteViewsService through the specified intent. <br /><br />"
"android.widget.GridView.onInitializeAccessibilityNodeInfoForItem (View view, int position, AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about a particular item in the list. <br /><br />"
"android.widget.GridView.getHorizontalSpacing () "," Returns the amount of horizontal spacing currently used between each item in the grid. <br /><br />"
"android.widget.GridView.smoothScrollByOffset (int offset) "," Smoothly scroll to the specified adapter position offset. <br /><br />"
"android.widget.GridView.getStretchMode () "," no description <br /><br />"
"android.widget.GridView.getNumColumns () "," Get the number of columns in the grid. <br /><br />"
"android.widget.GridView.onKeyDown (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyDown () "," Default implementation of KeyEvent.Callback.onKeyDown(): perform press of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released, if the view is enabled and clickable. <br /><br />"
"android.widget.GridView.onKeyUp (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyUp () "," Default implementation of KeyEvent.Callback.onKeyUp(): perform clicking of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released. <br /><br />"
"android.widget.GridView.getColumnWidth () "," Return the width of a column in the grid. <br /><br />"
"android.widget.GridView.setSelection (int position) "," Sets the currently selected item <br /><br />"
"android.widget.GridView.getGravity () "," Describes how the child views are horizontally aligned. <br /><br />"
"android.widget.GridView.getAdapter () "," Returns the adapter currently associated with this widget. <br /><br />"
"android.widget.GridView.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.GridView.getRequestedColumnWidth () "," Return the requested width of a column in the grid. <br /><br />"
"android.widget.GridView.setHorizontalSpacing (int horizontalSpacing)   Set the amount of horizontal  (x) "," Set the amount of horizontal (x) spacing to place between each item in the grid. <br /><br />"
"android.widget.GridView.setStretchMode (int stretchMode) "," Control how items are stretched to fill their space. <br /><br />"
"android.widget.GridView.getRequestedHorizontalSpacing () "," Returns the requested amount of horizontal spacing between each item in the grid. <br /><br />"
"android.widget.HeaderViewListAdapter.unregisterDataSetObserver (DataSetObserver observer)   Unregister an observer that has previously been registered with this adapter via registerDataSetObserver (DataSetObserver) "," Unregister an observer that has previously been registered with this adapter via registerDataSetObserver(DataSetObserver). <br /><br />"
"android.widget.HeaderViewListAdapter.removeHeader (View v) "," no description <br /><br />"
"android.widget.HeaderViewListAdapter.registerDataSetObserver (DataSetObserver observer) "," Register an observer that is called when changes happen to the data used by this adapter. <br /><br />"
"android.widget.HeaderViewListAdapter.getFootersCount () "," no description <br /><br />"
"android.widget.HeaderViewListAdapter.isEnabled (int position) "," Returns true if the item at the specified position is not a separator. <br /><br />"
"android.widget.HeaderViewListAdapter.getHeadersCount () "," no description <br /><br />"
"android.widget.HeaderViewListAdapter.getView (int position, View convertView, ViewGroup parent) "," Get a View that displays the data at the specified position in the data set. <br /><br />"
"android.widget.HeaderViewListAdapter.getCount () "," How many items are in the data set represented by this Adapter. <br /><br />"
"android.widget.HeaderViewListAdapter.hasStableIds () "," Indicates whether the item ids are stable across changes to the underlying data. <br /><br />"
"android.widget.HeaderViewListAdapter.areAllItemsEnabled () "," Indicates whether all the items in this adapter are enabled. <br /><br />"
"android.widget.HeaderViewListAdapter.getItemViewType (int position)   Get the type of View that will be created by getView (int, View, ViewGroup) "," Get the type of View that will be created by getView(int, View, ViewGroup) for the specified item. <br /><br />"
"android.widget.HeaderViewListAdapter.getItemId (int position) "," Get the row id associated with the specified position in the list. <br /><br />"
"android.widget.HeaderViewListAdapter.getItem (int position) "," Get the data item associated with the specified position in the data set. <br /><br />"
"android.widget.HeaderViewListAdapter.getViewTypeCount ()    Returns the number of types of Views that will be created by getView (int, View, ViewGroup) "," Returns the number of types of Views that will be created by getView(int, View, ViewGroup). <br /><br />"
"android.widget.HeaderViewListAdapter.getWrappedAdapter () "," Returns the adapter wrapped by this list adapter. <br /><br />"
"android.widget.HeaderViewListAdapter.isEmpty () "," no description <br /><br />"
"android.widget.HeaderViewListAdapter.removeFooter (View v) "," no description <br /><br />"
"android.widget.HeaderViewListAdapter.getFilter () "," Returns a filter that can be used to constrain data with a filtering pattern. <br /><br />"
"android.widget.HeterogeneousExpandableList.getChildTypeCount ()    Returns the number of types of child Views that will be created by getChildView (int, int, boolean, View, ViewGroup) "," Returns the number of types of child Views that will be created by getChildView(int, int, boolean, View, ViewGroup) . <br /><br />"
"android.widget.HeterogeneousExpandableList.getChildType (int groupPosition, int childPosition)   Get the type of child View that will be created by getChildView (int, int, boolean, View, ViewGroup) "," Get the type of child View that will be created by getChildView(int, int, boolean, View, ViewGroup) for the specified child item. <br /><br />"
"android.widget.HeterogeneousExpandableList.getGroupType (int groupPosition)   Get the type of group View that will be created by getGroupView (int, boolean, View, ViewGroup) "," Get the type of group View that will be created by getGroupView(int, boolean, View, ViewGroup) . <br /><br />"
"android.widget.HeterogeneousExpandableList.getGroupTypeCount ()    Returns the number of types of group Views that will be created by getGroupView (int, boolean, View, ViewGroup) "," Returns the number of types of group Views that will be created by getGroupView(int, boolean, View, ViewGroup) . <br /><br />"
"android.widget.HorizontalScrollView.addView (View child, int index, ViewGroup.LayoutParams params) "," Adds a child view with the specified layout parameters. <br /><br />"
"android.widget.HorizontalScrollView.setSmoothScrollingEnabled (boolean smoothScrollingEnabled) "," Set whether arrow scrolling will animate its transition. <br /><br />"
"android.widget.HorizontalScrollView.addView (View child, ViewGroup.LayoutParams params) "," Adds a child view with the specified layout parameters. <br /><br />"
"android.widget.HorizontalScrollView.getMaxScrollAmount () "," no description <br /><br />"
"android.widget.HorizontalScrollView.addView (View child, int index) "," Adds a child view. <br /><br />"
"android.widget.HorizontalScrollView.isFillViewport () "," Indicates whether this HorizontalScrollView's content is stretched to fill the viewport. <br /><br />"
"android.widget.HorizontalScrollView.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.HorizontalScrollView.arrowScroll (int direction) "," Handle scrolling in response to a left or right arrow click. <br /><br />"
"android.widget.HorizontalScrollView.isSmoothScrollingEnabled () "," no description <br /><br />"
"android.widget.HorizontalScrollView.smoothScrollTo (int x, int y)   Like scrollTo (int, int) "," Like scrollTo(int, int), but scroll smoothly instead of immediately. <br /><br />"
"android.widget.HorizontalScrollView.smoothScrollBy (int dx, int dy)   Like scrollBy (int, int) "," Like scrollBy(int, int), but scroll smoothly instead of immediately. <br /><br />"
"android.widget.HorizontalScrollView.pageScroll (int direction) "," Handles scrolling in response to a 'page up/down' shortcut press. <br /><br />"
"android.widget.HorizontalScrollView.setFillViewport (boolean fillViewport) "," Indicates this HorizontalScrollView whether it should stretch its content width to fill the viewport or not. <br /><br />"
"android.widget.HorizontalScrollView.dispatchKeyEvent (KeyEvent event) "," Dispatch a key event to the next view on the focus path. <br /><br />"
"android.widget.HorizontalScrollView.shouldDelayChildPressedState () "," Return true if the pressed state should be delayed for children or descendants of this ViewGroup. <br /><br />"
"android.widget.HorizontalScrollView.requestLayout () "," Call this when something has changed which has invalidated the layout of this view. <br /><br />"
"android.widget.HorizontalScrollView.scrollTo (int x, int y) "," Set the scrolled position of your view. This version also clamps the scrolling to the bounds of our child. <br /><br />"
"android.widget.HorizontalScrollView.requestChildFocus (View child, View focused) "," Called when a child of this parent wants focus <br /><br />"
"android.widget.HorizontalScrollView.fullScroll (int direction) "," Handles scrolling in response to a 'home/end' shortcut press. <br /><br />"
"android.widget.HorizontalScrollView.draw (Canvas canvas)   Manually render this view  (and all of its children) "," Manually render this view (and all of its children) to the given Canvas. <br /><br />"
"android.widget.HorizontalScrollView.requestDisallowInterceptTouchEvent (boolean disallowIntercept)   Called when a child does not want this parent and its ancestors to intercept touch events with onInterceptTouchEvent (MotionEvent) "," Called when a child does not want this parent and its ancestors to intercept touch events with onInterceptTouchEvent(MotionEvent). <br /><br />"
"android.widget.HorizontalScrollView.setOverScrollMode (int mode) "," Set the over-scroll mode for this view. <br /><br />"
"android.widget.HorizontalScrollView.computeScroll () "," Called by a parent to request that a child update its values for mScrollX and mScrollY if necessary. <br /><br />"
"android.widget.HorizontalScrollView.addView (View child) "," Adds a child view. <br /><br />"
"android.widget.HorizontalScrollView.onGenericMotionEvent (MotionEvent event) "," Implement this method to handle generic motion events. <br /><br />"
"android.widget.HorizontalScrollView.performAccessibilityAction (int action, Bundle arguments) "," Performs the specified accessibility action on the view. <br /><br />"
"android.widget.HorizontalScrollView.requestChildRectangleOnScreen (View child, Rect rectangle, boolean immediate) "," Called when a child of this group wants a particular rectangle to be positioned onto the screen. <br /><br />"
"android.widget.HorizontalScrollView.executeKeyEvent (KeyEvent event) "," You can call this function yourself to have the scroll view perform scrolling from a key event, just as if the event had been dispatched to it by the view hierarchy. <br /><br />"
"android.widget.HorizontalScrollView.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.HorizontalScrollView.onInterceptTouchEvent (MotionEvent ev) "," Implement this method to intercept all touch screen motion events. <br /><br />"
"android.widget.HorizontalScrollView.onTouchEvent (MotionEvent ev) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.widget.HorizontalScrollView.fling (int velocityX) "," Fling the scroll view <br /><br />"
"android.widget.ImageButton.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.ImageButton.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.ImageSwitcher.setImageResource (int resid) "," no description <br /><br />"
"android.widget.ImageSwitcher.setImageDrawable (Drawable drawable) "," no description <br /><br />"
"android.widget.ImageSwitcher.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.ImageSwitcher.setImageURI (Uri uri) "," no description <br /><br />"
"android.widget.ImageSwitcher.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.ImageView.getAdjustViewBounds () "," True when ImageView is adjusting its bounds to preserve the aspect ratio of its drawable <br /><br />"
"android.widget.ImageView.setColorFilter (ColorFilter cf) "," Apply an arbitrary colorfilter to the image. <br /><br />"
"android.widget.ImageView.setMaxWidth (int maxWidth) "," An optional argument to supply a maximum width for this view. <br /><br />"
"android.widget.ImageView.onCreateDrawableState (int extraSpace) "," Generate the new Drawable state for this view. <br /><br />"
"android.widget.ImageView.setMaxHeight (int maxHeight) "," An optional argument to supply a maximum height for this view. <br /><br />"
"android.widget.ImageView.setBaselineAlignBottom (boolean aligned) "," Set whether to set the baseline of this view to the bottom of the view. <br /><br />"
"android.widget.ImageView.setImageTintList (ColorStateList tint) "," Applies a tint to the image drawable. <br /><br />"
"android.widget.ImageView.setSelected (boolean selected) "," Changes the selection state of this view. <br /><br />"
"android.widget.ImageView.setImageAlpha (int alpha) "," Sets the alpha value that should be applied to the image. <br /><br />"
"android.widget.ImageView.onRtlPropertiesChanged (int layoutDirection)   Called when any RTL property  (layout direction or text direction or text alignment) "," Called when any RTL property (layout direction or text direction or text alignment) has been changed. <br /><br />"
"android.widget.ImageView.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.ImageView.setImageResource (int resId) "," Sets a drawable as the content of this ImageView. <br /><br />"
"android.widget.ImageView.getCropToPadding () "," Return whether this ImageView crops to padding. <br /><br />"
"android.widget.ImageView.isOpaque () "," Indicates whether this View is opaque. <br /><br />"
"android.widget.ImageView.setScaleType (ImageView.ScaleType scaleType) "," Controls how the image should be resized or moved to match the size of this ImageView. <br /><br />"
"android.widget.ImageView.getMaxWidth () "," The maximum width of this view. <br /><br />"
"android.widget.ImageView.setCropToPadding (boolean cropToPadding) "," Sets whether this ImageView will crop to padding. <br /><br />"
"android.widget.ImageView.getImageTintList () "," no description <br /><br />"
"android.widget.ImageView.setImageLevel (int level) "," Sets the image level, when it is constructed from a LevelListDrawable. <br /><br />"
"android.widget.ImageView.onPopulateAccessibilityEvent (AccessibilityEvent event)   Called from dispatchPopulateAccessibilityEvent (AccessibilityEvent) "," Called from dispatchPopulateAccessibilityEvent(AccessibilityEvent) giving a chance to this View to populate the accessibility event with its text content. <br /><br />"
"android.widget.ImageView.setVisibility (int visibility) "," Set the enabled state of this view. <br /><br />"
"android.widget.ImageView.getImageTintMode () "," no description <br /><br />"
"android.widget.ImageView.getBaseline () "," Return the offset of the widget's text baseline from the widget's top boundary. <br /><br />"
"android.widget.ImageView.drawableHotspotChanged (float x, float y) "," This function is called whenever the view hotspot changes and needs to be propagated to drawables or child views managed by the view. <br /><br />"
"android.widget.ImageView.getScaleType () "," Return the current scale type in use by this ImageView. <br /><br />"
"android.widget.ImageView.invalidateDrawable (Drawable dr) "," Invalidates the specified Drawable. <br /><br />"
"android.widget.ImageView.setColorFilter (int color, PorterDuff.Mode mode) "," Set a tinting option for the image. <br /><br />"
"android.widget.ImageView.getImageAlpha () "," Returns the alpha that will be applied to the drawable of this ImageView. <br /><br />"
"android.widget.ImageView.getDrawable () "," Return the view's drawable, or null if no drawable has been assigned. <br /><br />"
"android.widget.ImageView.setImageURI (Uri uri) "," Sets the content of this ImageView to the specified Uri. <br /><br />"
"android.widget.ImageView.setBaseline (int baseline) "," Set the offset of the widget's text baseline from the widget's top boundary. <br /><br />"
"android.widget.ImageView.getMaxHeight () "," The maximum height of this view. <br /><br />"
"android.widget.ImageView.hasOverlappingRendering () "," Returns whether this View has content which overlaps. <br /><br />"
"android.widget.ImageView.setImageState (int[] state, boolean merge) "," no description <br /><br />"
"android.widget.ImageView.jumpDrawablesToCurrentState ()   Call Drawable.jumpToCurrentState () "," Call Drawable.jumpToCurrentState() on all Drawable objects associated with this view. <br /><br />"
"android.widget.ImageView.getBaselineAlignBottom () "," Return whether this view's baseline will be considered the bottom of the view. <br /><br />"
"android.widget.ImageView.clearColorFilter () "," no description <br /><br />"
"android.widget.ImageView.setImageMatrix (Matrix matrix) "," no description <br /><br />"
"android.widget.ImageView.setImageDrawable (Drawable drawable) "," Sets a drawable as the content of this ImageView. <br /><br />"
"android.widget.ImageView.setImageBitmap (Bitmap bm) "," Sets a Bitmap as the content of this ImageView. <br /><br />"
"android.widget.ImageView.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.ImageView.setImageTintMode (PorterDuff.Mode tintMode)   Specifies the blending mode used to apply the tint specified by setImageTintList (ColorStateList) "," Specifies the blending mode used to apply the tint specified by setImageTintList(ColorStateList)} to the image drawable. <br /><br />"
"android.widget.ImageView.setAdjustViewBounds (boolean adjustViewBounds) "," Set this to true if you want the ImageView to adjust its bounds to preserve the aspect ratio of its drawable. <br /><br />"
"android.widget.ImageView.getColorFilter () "," Returns the active color filter for this ImageView. <br /><br />"
"android.widget.ImageView.setAlpha (int alpha)    This method was deprecated in API level 16. use #setImageAlpha (int) "," This method was deprecated in API level 16. use #setImageAlpha(int) instead <br /><br />"
"android.widget.ImageView.getImageMatrix () "," Return the view's optional matrix. <br /><br />"
"android.widget.ImageView.setColorFilter (int color) "," Set a tinting option for the image. <br /><br />"
"android.widget.LinearLayout.setWeightSum (float weightSum) "," Defines the desired weights sum. <br /><br />"
"android.widget.LinearLayout.getDividerPadding () "," Get the padding size used to inset dividers in pixels <br /><br />"
"android.widget.LinearLayout.shouldDelayChildPressedState () "," Return true if the pressed state should be delayed for children or descendants of this ViewGroup. <br /><br />"
"android.widget.LinearLayout.getOrientation () "," Returns the current orientation. <br /><br />"
"android.widget.LinearLayout.setBaselineAlignedChildIndex (int i) "," no description <br /><br />"
"android.widget.LinearLayout.getBaseline () "," Return the offset of the widget's text baseline from the widget's top boundary. <br /><br />"
"android.widget.LinearLayout.setShowDividers (int showDividers) "," Set how dividers should be shown between items in this layout <br /><br />"
"android.widget.LinearLayout.getBaselineAlignedChildIndex () "," no description <br /><br />"
"android.widget.LinearLayout.setDividerPadding (int padding) "," Set padding displayed on both ends of dividers. <br /><br />"
"android.widget.LinearLayout.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.LinearLayout.setOrientation (int orientation) "," Should the layout be a column or a row. <br /><br />"
"android.widget.LinearLayout.setDividerDrawable (Drawable divider) "," Set a drawable to be used as a divider between items. <br /><br />"
"android.widget.LinearLayout.setGravity (int gravity) "," Describes how the child views are positioned. <br /><br />"
"android.widget.LinearLayout.setBaselineAligned (boolean baselineAligned) "," Defines whether widgets contained in this layout are baseline-aligned or not. <br /><br />"
"android.widget.LinearLayout.getShowDividers () "," no description <br /><br />"
"android.widget.LinearLayout.getWeightSum () "," Returns the desired weights sum. <br /><br />"
"android.widget.LinearLayout.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.widget.LinearLayout.isBaselineAligned () "," Indicates whether widgets contained within this layout are aligned on their baseline or not. <br /><br />"
"android.widget.LinearLayout.getDividerDrawable () "," no description <br /><br />"
"android.widget.LinearLayout.setHorizontalGravity (int horizontalGravity) "," no description <br /><br />"
"android.widget.LinearLayout.setMeasureWithLargestChildEnabled (boolean enabled) "," When set to true, all children with a weight will be considered having the minimum size of the largest child. <br /><br />"
"android.widget.LinearLayout.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.LinearLayout.setVerticalGravity (int verticalGravity) "," no description <br /><br />"
"android.widget.LinearLayout.isMeasureWithLargestChildEnabled () "," When true, all children with a weight will be considered having the minimum size of the largest child. <br /><br />"
"android.widget.LinearLayout.LayoutParams.debug (String output) "," Returns a String representation of this set of layout parameters. <br /><br />"
"android.widget.ListAdapter.isEnabled (int position) "," Returns true if the item at the specified position is not a separator. <br /><br />"
"android.widget.ListAdapter.areAllItemsEnabled () "," Indicates whether all the items in this adapter are enabled. <br /><br />"
"android.widget.ListPopupWindow.setAdapter (ListAdapter adapter) "," Sets the adapter that provides the data and the views to represent the data in this popup window. <br /><br />"
"android.widget.ListPopupWindow.setOnDismissListener (PopupWindow.OnDismissListener listener) "," Set a listener to receive a callback when the popup is dismissed. <br /><br />"
"android.widget.ListPopupWindow.setWidth (int width) "," Sets the width of the popup window in pixels. <br /><br />"
"android.widget.ListPopupWindow.setAnchorView (View anchor) "," Sets the popup's anchor view. <br /><br />"
"android.widget.ListPopupWindow.getSelectedItem () "," no description <br /><br />"
"android.widget.ListPopupWindow.setBackgroundDrawable (Drawable d) "," Sets a drawable to be the background for the popup window. <br /><br />"
"android.widget.ListPopupWindow.setOnItemSelectedListener (AdapterView.OnItemSelectedListener selectedListener) "," Sets a listener to receive events when a list item is selected. <br /><br />"
"android.widget.ListPopupWindow.getAnchorView () "," Returns the view that will be used to anchor this popup. <br /><br />"
"android.widget.ListPopupWindow.setPromptView (View prompt) "," Set a view to act as a user prompt for this popup window. <br /><br />"
"android.widget.ListPopupWindow.getHeight () "," no description <br /><br />"
"android.widget.ListPopupWindow.dismiss () "," Dismiss the popup window. <br /><br />"
"android.widget.ListPopupWindow.getSelectedItemPosition () "," no description <br /><br />"
"android.widget.ListPopupWindow.isShowing () "," no description <br /><br />"
"android.widget.ListPopupWindow.onKeyDown (int keyCode, KeyEvent event) "," Filter key down events. <br /><br />"
"android.widget.ListPopupWindow.setHorizontalOffset (int offset) "," Set the horizontal offset of this popup from its anchor view in pixels. <br /><br />"
"android.widget.ListPopupWindow.getSoftInputMode ()   Returns the current value in setSoftInputMode (int) "," Returns the current value in setSoftInputMode(int). <br /><br />"
"android.widget.ListPopupWindow.setListSelector (Drawable selector) "," Sets a drawable to use as the list item selector. <br /><br />"
"android.widget.ListPopupWindow.performItemClick (int position) "," Perform an item click operation on the specified list adapter position. <br /><br />"
"android.widget.ListPopupWindow.isModal () "," Returns whether the popup window will be modal when shown. <br /><br />"
"android.widget.ListPopupWindow.setVerticalOffset (int offset) "," Set the vertical offset of this popup from its anchor view in pixels. <br /><br />"
"android.widget.ListPopupWindow.getSelectedItemId () "," no description <br /><br />"
"android.widget.ListPopupWindow.postShow ()   Post a show () "," Post a show() call to the UI thread. <br /><br />"
"android.widget.ListPopupWindow.getWidth () "," no description <br /><br />"
"android.widget.ListPopupWindow.setSoftInputMode (int mode) "," Sets the operating mode for the soft input area. <br /><br />"
"android.widget.ListPopupWindow.setOnItemClickListener (AdapterView.OnItemClickListener clickListener) "," Sets a listener to receive events when a list item is clicked. <br /><br />"
"android.widget.ListPopupWindow.getListView () "," no description <br /><br />"
"android.widget.ListPopupWindow.setPromptPosition (int position) "," Set where the optional prompt view should appear. <br /><br />"
"android.widget.ListPopupWindow.getPromptPosition () "," no description <br /><br />"
"android.widget.ListPopupWindow.getInputMethodMode ()   Return the current value in setInputMethodMode (int) "," Return the current value in setInputMethodMode(int). <br /><br />"
"android.widget.ListPopupWindow.createDragToOpenListener (View src) "," Returns an View.OnTouchListener that can be added to the source view to implement drag-to-open behavior. <br /><br />"
"android.widget.ListPopupWindow.onKeyUp (int keyCode, KeyEvent event) "," Filter key down events. <br /><br />"
"android.widget.ListPopupWindow.setSelection (int position) "," Set the selected position of the list. <br /><br />"
"android.widget.ListPopupWindow.setAnimationStyle (int animationStyle) "," Set an animation style to use when the popup window is shown or dismissed. <br /><br />"
"android.widget.ListPopupWindow.setModal (boolean modal) "," Set whether this window should be modal when shown. <br /><br />"
"android.widget.ListPopupWindow.setDropDownGravity (int gravity) "," Set the gravity of the dropdown list. <br /><br />"
"android.widget.ListPopupWindow.getSelectedView () "," no description <br /><br />"
"android.widget.ListPopupWindow.show () "," Show the popup list. <br /><br />"
"android.widget.ListPopupWindow.getVerticalOffset () "," no description <br /><br />"
"android.widget.ListPopupWindow.getHorizontalOffset () "," no description <br /><br />"
"android.widget.ListPopupWindow.getAnimationStyle () "," Returns the animation style that will be used when the popup window is shown or dismissed. <br /><br />"
"android.widget.ListPopupWindow.clearListSelection () "," Clear any current list selection. <br /><br />"
"android.widget.ListPopupWindow.setHeight (int height) "," Sets the height of the popup window in pixels. <br /><br />"
"android.widget.ListPopupWindow.setContentWidth (int width) "," Sets the width of the popup window by the size of its content. <br /><br />"
"android.widget.ListPopupWindow.getBackground () "," no description <br /><br />"
"android.widget.ListPopupWindow.setInputMethodMode (int mode) "," Control how the popup operates with an input method: one of INPUT_METHOD_FROM_FOCUSABLE, INPUT_METHOD_NEEDED, or INPUT_METHOD_NOT_NEEDED. <br /><br />"
"android.widget.ListPopupWindow.isInputMethodNotNeeded () "," no description <br /><br />"
"android.widget.ListPopupWindow.onKeyPreIme (int keyCode, KeyEvent event) "," Filter pre-IME key events. <br /><br />"
"android.widget.ListView.setAdapter (ListAdapter adapter) "," Sets the data behind this ListView. <br /><br />"
"android.widget.ListView.removeHeaderView (View v) "," Removes a previously-added header view. <br /><br />"
"android.widget.ListView.setCacheColorHint (int color) "," When set to a non-zero value, the cache color hint indicates that this list is always drawn on top of a solid, single-color, opaque background. <br /><br />"
"android.widget.ListView.setDivider (Drawable divider) "," Sets the drawable that will be drawn between each item in the list. <br /><br />"
"android.widget.ListView.getMaxScrollAmount () "," no description <br /><br />"
"android.widget.ListView.areHeaderDividersEnabled () "," no description <br /><br />"
"android.widget.ListView.setDividerHeight (int height) "," Sets the height of the divider that will be drawn between each item in the list. <br /><br />"
"android.widget.ListView.getHeaderViewsCount () "," Returns the number of header views in the list. <br /><br />"
"android.widget.ListView.setItemsCanFocus (boolean itemsCanFocus) "," Indicates that the views created by the ListAdapter can contain focusable items. <br /><br />"
"android.widget.ListView.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.ListView.getFooterViewsCount () "," Returns the number of footer views in the list. <br /><br />"
"android.widget.ListView.getOverscrollFooter () "," no description <br /><br />"
"android.widget.ListView.smoothScrollToPosition (int position) "," Smoothly scroll to the specified adapter position. <br /><br />"
"android.widget.ListView.getDividerHeight () "," no description <br /><br />"
"android.widget.ListView.isOpaque () "," Indicates whether this View is opaque. <br /><br />"
"android.widget.ListView.getOverscrollHeader () "," no description <br /><br />"
"android.widget.ListView.addFooterView (View v) "," Add a fixed view to appear at the bottom of the list. <br /><br />"
"android.widget.ListView.onKeyMultiple (int keyCode, int repeatCount, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyMultiple (): always returns false  (doesn't handle the event) "," Default implementation of KeyEvent.Callback.onKeyMultiple(): always returns false (doesn't handle the event). <br /><br />"
"android.widget.ListView.setRemoteViewsAdapter (Intent intent) "," Sets up this AbsListView to use a remote views adapter which connects to a RemoteViewsService through the specified intent. <br /><br />"
"android.widget.ListView.setSelectionAfterHeaderView () "," setSelectionAfterHeaderView set the selection to be the first list item after the header views. <br /><br />"
"android.widget.ListView.setHeaderDividersEnabled (boolean headerDividersEnabled) "," Enables or disables the drawing of the divider for header views. <br /><br />"
"android.widget.ListView.addHeaderView (View v) "," Add a fixed view to appear at the top of the list. <br /><br />"
"android.widget.ListView.addFooterView (View v, Object data, boolean isSelectable) "," Add a fixed view to appear at the bottom of the list. <br /><br />"
"android.widget.ListView.dispatchKeyEvent (KeyEvent event) "," Dispatch a key event to the next view on the focus path. <br /><br />"
"android.widget.ListView.addHeaderView (View v, Object data, boolean isSelectable) "," Add a fixed view to appear at the top of the list. <br /><br />"
"android.widget.ListView.setOverscrollFooter (Drawable footer) "," Sets the drawable that will be drawn below all other list content. <br /><br />"
"android.widget.ListView.onInitializeAccessibilityNodeInfoForItem (View view, int position, AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about a particular item in the list. <br /><br />"
"android.widget.ListView.removeFooterView (View v) "," Removes a previously-added footer view. <br /><br />"
"android.widget.ListView.getDivider () "," Returns the drawable that will be drawn between each item in the list. <br /><br />"
"android.widget.ListView.smoothScrollByOffset (int offset) "," Smoothly scroll to the specified adapter position offset. <br /><br />"
"android.widget.ListView.onKeyDown (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyDown () "," Default implementation of KeyEvent.Callback.onKeyDown(): perform press of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released, if the view is enabled and clickable. <br /><br />"
"android.widget.ListView.onKeyUp (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyUp () "," Default implementation of KeyEvent.Callback.onKeyUp(): perform clicking of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released. <br /><br />"
"android.widget.ListView.setSelection (int position) "," Sets the currently selected item. <br /><br />"
"android.widget.ListView.setFooterDividersEnabled (boolean footerDividersEnabled) "," Enables or disables the drawing of the divider for footer views. <br /><br />"
"android.widget.ListView.getAdapter () "," Returns the adapter currently in use in this ListView. <br /><br />"
"android.widget.ListView.setOverscrollHeader (Drawable header) "," Sets the drawable that will be drawn above all other list content. <br /><br />"
"android.widget.ListView.getCheckItemIds ()    This method was deprecated in API level 8. Use getCheckedItemIds () "," This method was deprecated in API level 8. Use getCheckedItemIds() instead. <br /><br />"
"android.widget.ListView.getItemsCanFocus () "," no description <br /><br />"
"android.widget.ListView.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.ListView.areFooterDividersEnabled () "," no description <br /><br />"
"android.widget.ListView.requestChildRectangleOnScreen (View child, Rect rect, boolean immediate) "," Called when a child of this group wants a particular rectangle to be positioned onto the screen. <br /><br />"
"android.widget.MediaController.dispatchKeyEvent (KeyEvent event) "," Dispatch a key event to the next view on the focus path. <br /><br />"
"android.widget.MediaController.setAnchorView (View view) "," Set the view that acts as the anchor for the control view. <br /><br />"
"android.widget.MediaController.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.MediaController.hide () "," Remove the controller from the screen. <br /><br />"
"android.widget.MediaController.show () "," Show the controller on screen. <br /><br />"
"android.widget.MediaController.isShowing () "," no description <br /><br />"
"android.widget.MediaController.onTrackballEvent (MotionEvent ev) "," Implement this method to handle trackball motion events. <br /><br />"
"android.widget.MediaController.setMediaPlayer (MediaController.MediaPlayerControl player) "," no description <br /><br />"
"android.widget.MediaController.show (int timeout) "," Show the controller on screen. <br /><br />"
"android.widget.MediaController.setEnabled (boolean enabled) "," Set the enabled state of this view. <br /><br />"
"android.widget.MediaController.setPrevNextListeners (View.OnClickListener next, View.OnClickListener prev) "," no description <br /><br />"
"android.widget.MediaController.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.MediaController.onFinishInflate () "," Finalize inflating a view from XML. <br /><br />"
"android.widget.MediaController.onTouchEvent (MotionEvent event) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.widget.MediaController.MediaPlayerControl.isPlaying () "," no description <br /><br />"
"android.widget.MediaController.MediaPlayerControl.canSeekForward () "," no description <br /><br />"
"android.widget.MediaController.MediaPlayerControl.getBufferPercentage () "," no description <br /><br />"
"android.widget.MediaController.MediaPlayerControl.start () "," no description <br /><br />"
"android.widget.MediaController.MediaPlayerControl.getCurrentPosition () "," no description <br /><br />"
"android.widget.MediaController.MediaPlayerControl.canSeekBackward () "," no description <br /><br />"
"android.widget.MediaController.MediaPlayerControl.canPause () "," no description <br /><br />"
"android.widget.MediaController.MediaPlayerControl.seekTo (int pos) "," no description <br /><br />"
"android.widget.MediaController.MediaPlayerControl.pause () "," no description <br /><br />"
"android.widget.MediaController.MediaPlayerControl.getAudioSessionId () "," Get the audio session id for the player used by this VideoView. <br /><br />"
"android.widget.MediaController.MediaPlayerControl.getDuration () "," no description <br /><br />"
"android.widget.MultiAutoCompleteTextView.CommaTokenizer.findTokenStart (CharSequence text, int cursor) "," Returns the start of the token that ends at offset cursor within text. <br /><br />"
"android.widget.MultiAutoCompleteTextView.CommaTokenizer.findTokenEnd (CharSequence text, int cursor)   Returns the end of the token  (minus trailing punctuation) "," Returns the end of the token (minus trailing punctuation) that begins at offset cursor within text. <br /><br />"
"android.widget.MultiAutoCompleteTextView.CommaTokenizer.terminateToken (CharSequence text)   Returns text, modified, if necessary, to ensure that it ends with a token terminator  (for example a space or comma) "," Returns text, modified, if necessary, to ensure that it ends with a token terminator (for example a space or comma). <br /><br />"
"android.widget.MultiAutoCompleteTextView.performValidation () "," Instead of validating the entire text, this subclass method validates each token of the text individually. <br /><br />"
"android.widget.MultiAutoCompleteTextView.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.MultiAutoCompleteTextView.setTokenizer (MultiAutoCompleteTextView.Tokenizer t) "," Sets the Tokenizer that will be used to determine the relevant range of the text where the user is typing. <br /><br />"
"android.widget.MultiAutoCompleteTextView.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.MultiAutoCompleteTextView.enoughToFilter ()   Instead of filtering whenever the total length of the text exceeds the threshhold, this subclass filters only when the length of the range from findTokenStart (CharSequence, int) to getSelectionEnd () meets or exceeds getThreshold () "," Instead of filtering whenever the total length of the text exceeds the threshhold, this subclass filters only when the length of the range from findTokenStart(CharSequence, int) to getSelectionEnd() meets or exceeds getThreshold(). <br /><br />"
"android.widget.MultiAutoCompleteTextView.Tokenizer.findTokenStart (CharSequence text, int cursor) "," Returns the start of the token that ends at offset cursor within text. <br /><br />"
"android.widget.MultiAutoCompleteTextView.Tokenizer.findTokenEnd (CharSequence text, int cursor)   Returns the end of the token  (minus trailing punctuation) "," Returns the end of the token (minus trailing punctuation) that begins at offset cursor within text. <br /><br />"
"android.widget.MultiAutoCompleteTextView.Tokenizer.terminateToken (CharSequence text)   Returns text, modified, if necessary, to ensure that it ends with a token terminator  (for example a space or comma) "," Returns text, modified, if necessary, to ensure that it ends with a token terminator (for example a space or comma). <br /><br />"
"android.widget.NumberPicker.Formatter.format (int value) "," Formats a string representation of the current value. <br /><br />"
"android.widget.NumberPicker.setMaxValue (int maxValue) "," Sets the max value of the picker. <br /><br />"
"android.widget.NumberPicker.onInterceptTouchEvent (MotionEvent event) "," Implement this method to intercept all touch screen motion events. <br /><br />"
"android.widget.NumberPicker.dispatchTouchEvent (MotionEvent event) "," Pass the touch screen motion event down to the target view, or this view if it is the target. <br /><br />"
"android.widget.NumberPicker.scrollBy (int x, int y) "," Move the scrolled position of your view. <br /><br />"
"android.widget.NumberPicker.setWrapSelectorWheel (boolean wrapSelectorWheel)   Sets whether the selector wheel shown during flinging/scrolling should wrap around the getMinValue () and getMaxValue () "," Sets whether the selector wheel shown during flinging/scrolling should wrap around the getMinValue() and getMaxValue() values. <br /><br />"
"android.widget.NumberPicker.setFormatter (NumberPicker.Formatter formatter) "," Set the formatter to be used for formatting the current value. <br /><br />"
"android.widget.NumberPicker.dispatchTrackballEvent (MotionEvent event) "," Pass a trackball motion event down to the focused view. <br /><br />"
"android.widget.NumberPicker.getMaxValue () "," Returns the max value of the picker. <br /><br />"
"android.widget.NumberPicker.setValue (int value) "," Set the current value for the number picker. <br /><br />"
"android.widget.NumberPicker.getMinValue () "," Returns the min value of the picker. <br /><br />"
"android.widget.NumberPicker.setEnabled (boolean enabled) "," Set the enabled state of this view. <br /><br />"
"android.widget.NumberPicker.setOnValueChangedListener (NumberPicker.OnValueChangeListener onValueChangedListener) "," Sets the listener to be notified on change of the current value. <br /><br />"
"android.widget.NumberPicker.onTouchEvent (MotionEvent event) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.widget.NumberPicker.getWrapSelectorWheel () "," Gets whether the selector wheel wraps when reaching the min/max value. <br /><br />"
"android.widget.NumberPicker.dispatchKeyEvent (KeyEvent event) "," Dispatch a key event to the next view on the focus path. <br /><br />"
"android.widget.NumberPicker.setOnLongPressUpdateInterval (long intervalMillis) "," Sets the speed at which the numbers be incremented and decremented when the up and down buttons are long pressed respectively. <br /><br />"
"android.widget.NumberPicker.setOnScrollListener (NumberPicker.OnScrollListener onScrollListener) "," Set listener to be notified for scroll state changes. <br /><br />"
"android.widget.NumberPicker.performClick () "," Call this view's OnClickListener, if it is defined. <br /><br />"
"android.widget.NumberPicker.getDisplayedValues () "," Gets the values to be displayed instead of string values. <br /><br />"
"android.widget.NumberPicker.getValue () "," Returns the value of the picker. <br /><br />"
"android.widget.NumberPicker.computeScroll () "," Called by a parent to request that a child update its values for mScrollX and mScrollY if necessary. <br /><br />"
"android.widget.NumberPicker.performLongClick () "," Call this view's OnLongClickListener, if it is defined. <br /><br />"
"android.widget.NumberPicker.setDisplayedValues (String[] displayedValues) "," Sets the values to be displayed. <br /><br />"
"android.widget.NumberPicker.getAccessibilityNodeProvider () "," Gets the provider for managing a virtual view hierarchy rooted at this View and reported to AccessibilityServices that explore the window content. <br /><br />"
"android.widget.NumberPicker.setMinValue (int minValue) "," Sets the min value of the picker. <br /><br />"
"android.widget.NumberPicker.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.NumberPicker.getSolidColor () "," Override this if your view is known to always be drawn on top of a solid color background, and needs to draw fading edges. <br /><br />"
"android.widget.NumberPicker.OnScrollListener.onScrollStateChange (NumberPicker view, int scrollState) "," Callback invoked while the number picker scroll state has changed. <br /><br />"
"android.widget.NumberPicker.OnValueChangeListener.onValueChange (NumberPicker picker, int oldVal, int newVal) "," Called upon a change of the current value. <br /><br />"
"android.widget.OverScroller.getFinalX () "," Returns where the scroll will end. <br /><br />"
"android.widget.OverScroller.computeScrollOffset () "," Call this when you want to know the new location. <br /><br />"
"android.widget.OverScroller.isFinished () "," Returns whether the scroller has finished scrolling. <br /><br />"
"android.widget.OverScroller.setFriction (float friction) "," The amount of friction applied to flings. <br /><br />"
"android.widget.OverScroller.notifyVerticalEdgeReached (int startY, int finalY, int overY) "," Notify the scroller that we've reached a vertical boundary. <br /><br />"
"android.widget.OverScroller.notifyHorizontalEdgeReached (int startX, int finalX, int overX) "," Notify the scroller that we've reached a horizontal boundary. <br /><br />"
"android.widget.OverScroller.forceFinished (boolean finished) "," Force the finished field to a particular value. <br /><br />"
"android.widget.OverScroller.getCurrX () "," Returns the current X offset in the scroll. <br /><br />"
"android.widget.OverScroller.abortAnimation () "," Stops the animation. <br /><br />"
"android.widget.OverScroller.getCurrVelocity () "," Returns the absolute value of the current velocity. <br /><br />"
"android.widget.OverScroller.isOverScrolled () "," Returns whether the current Scroller is currently returning to a valid position. <br /><br />"
"android.widget.OverScroller.getStartX () "," Returns the start X offset in the scroll. <br /><br />"
"android.widget.OverScroller.fling (int startX, int startY, int velocityX, int velocityY, int minX, int maxX, int minY, int maxY) "," no description <br /><br />"
"android.widget.OverScroller.springBack (int startX, int startY, int minX, int maxX, int minY, int maxY) "," Call this when you want to 'spring back' into a valid coordinate range. <br /><br />"
"android.widget.OverScroller.startScroll (int startX, int startY, int dx, int dy) "," Start scrolling by providing a starting point and the distance to travel. <br /><br />"
"android.widget.OverScroller.getStartY () "," Returns the start Y offset in the scroll. <br /><br />"
"android.widget.OverScroller.getCurrY () "," Returns the current Y offset in the scroll. <br /><br />"
"android.widget.OverScroller.getFinalY () "," Returns where the scroll will end. <br /><br />"
"android.widget.OverScroller.startScroll (int startX, int startY, int dx, int dy, int duration) "," Start scrolling by providing a starting point and the distance to travel. <br /><br />"
"android.widget.OverScroller.fling (int startX, int startY, int velocityX, int velocityY, int minX, int maxX, int minY, int maxY, int overX, int overY) "," Start scrolling based on a fling gesture. <br /><br />"
"android.widget.PopupMenu.show () "," Show the menu popup anchored to the view specified during construction. <br /><br />"
"android.widget.PopupMenu.dismiss () "," Dismiss the menu popup. <br /><br />"
"android.widget.PopupMenu.getMenu () "," no description <br /><br />"
"android.widget.PopupMenu.getDragToOpenListener () "," Returns an View.OnTouchListener that can be added to the anchor view to implement drag-to-open behavior. <br /><br />"
"android.widget.PopupMenu.setOnDismissListener (PopupMenu.OnDismissListener listener) "," Set a listener that will be notified when this menu is dismissed. <br /><br />"
"android.widget.PopupMenu.inflate (int menuRes) "," Inflate a menu resource into this PopupMenu. <br /><br />"
"android.widget.PopupMenu.getMenuInflater () "," no description <br /><br />"
"android.widget.PopupMenu.setOnMenuItemClickListener (PopupMenu.OnMenuItemClickListener listener) "," Set a listener that will be notified when the user selects an item from the menu. <br /><br />"
"android.widget.PopupMenu.OnDismissListener.onDismiss (PopupMenu menu) "," Called when the associated menu has been dismissed. <br /><br />"
"android.widget.PopupMenu.OnMenuItemClickListener.onMenuItemClick (MenuItem item) "," This method will be invoked when a menu item is clicked if the item itself did not already handle the event. <br /><br />"
"android.widget.PopupWindow.setClippingEnabled (boolean enabled) "," Allows the popup window to extend beyond the bounds of the screen. <br /><br />"
"android.widget.PopupWindow.setOutsideTouchable (boolean touchable) "," Controls whether the pop-up will be informed of touch events outside of its window. <br /><br />"
"android.widget.PopupWindow.isOutsideTouchable () "," Indicates whether the popup window will be informed of touch events outside of its window. <br /><br />"
"android.widget.PopupWindow.setWindowLayoutMode (int widthSpec, int heightSpec) "," Change the width and height measure specs that are given to the window manager by the popup. <br /><br />"
"android.widget.PopupWindow.setWidth (int width) "," Change the popup's width MeasureSpec If the popup is showing, calling this method will take effect only the next time the popup is shown. <br /><br />"
"android.widget.PopupWindow.isAttachedInDecor () "," Indicates whether the popup window will be attached in the decor frame of its parent window. <br /><br />"
"android.widget.PopupWindow.update (int x, int y, int width, int height) "," Updates the position and the dimension of the popup window. <br /><br />"
"android.widget.PopupWindow.getContentView () "," Return the view used as the content of the popup window. <br /><br />"
"android.widget.PopupWindow.setElevation (float elevation) "," Specifies the elevation for this popup window. <br /><br />"
"android.widget.PopupWindow.setTouchable (boolean touchable) "," Changes the touchability of the popup window. <br /><br />"
"android.widget.PopupWindow.getHeight () "," Return this popup's height MeasureSpec <br /><br />"
"android.widget.PopupWindow.dismiss () "," Dispose of the popup window. <br /><br />"
"android.widget.PopupWindow.isShowing () "," Indicate whether this popup window is showing on screen. <br /><br />"
"android.widget.PopupWindow.showAsDropDown (View anchor) "," Display the content view in a popup window anchored to the bottom-left corner of the anchor view. <br /><br />"
"android.widget.PopupWindow.showAsDropDown (View anchor, int xoff, int yoff, int gravity) "," Display the content view in a popup window anchored to the bottom-left corner of the anchor view offset by the specified x and y coordinates. <br /><br />"
"android.widget.PopupWindow.getSoftInputMode ()   Returns the current value in setSoftInputMode (int) "," Returns the current value in setSoftInputMode(int). <br /><br />"
"android.widget.PopupWindow.showAtLocation (View parent, int gravity, int x, int y) "," Display the content view in a popup window at the specified location. <br /><br />"
"android.widget.PopupWindow.setIgnoreCheekPress () "," Set the flag on popup to ignore cheek press event; by default this flag is set to false which means the pop wont ignore cheek press dispatch events. <br /><br />"
"android.widget.PopupWindow.isFocusable () "," Indicate whether the popup window can grab the focus. <br /><br />"
"android.widget.PopupWindow.update () "," Updates the state of the popup window, if it is currently being displayed, from the currently set state. <br /><br />"
"android.widget.PopupWindow.update (int width, int height) "," Updates the dimension of the popup window. <br /><br />"
"android.widget.PopupWindow.isTouchable () "," Indicates whether the popup window receives touch events. <br /><br />"
"android.widget.PopupWindow.getWidth () "," Return this popup's width MeasureSpec <br /><br />"
"android.widget.PopupWindow.setSoftInputMode (int mode) "," Sets the operating mode for the soft input area. <br /><br />"
"android.widget.PopupWindow.showAsDropDown (View anchor, int xoff, int yoff) "," Display the content view in a popup window anchored to the bottom-left corner of the anchor view offset by the specified x and y coordinates. <br /><br />"
"android.widget.PopupWindow.setBackgroundDrawable (Drawable background) "," Specifies the background drawable for this popup window. <br /><br />"
"android.widget.PopupWindow.getInputMethodMode ()   Return the current value in setInputMethodMode (int) "," Return the current value in setInputMethodMode(int). <br /><br />"
"android.widget.PopupWindow.isClippingEnabled () "," Indicates whether clipping of the popup window is enabled. <br /><br />"
"android.widget.PopupWindow.setTouchInterceptor (View.OnTouchListener l) "," Set a callback for all touch events being dispatched to the popup window. <br /><br />"
"android.widget.PopupWindow.getMaxAvailableHeight (View anchor) "," Returns the maximum height that is available for the popup to be completely shown. <br /><br />"
"android.widget.PopupWindow.getElevation () "," no description <br /><br />"
"android.widget.PopupWindow.setAnimationStyle (int animationStyle) "," Change the animation style resource for this popup. <br /><br />"
"android.widget.PopupWindow.setContentView (View contentView) "," Change the popup's content. <br /><br />"
"android.widget.PopupWindow.setSplitTouchEnabled (boolean enabled) "," Allows the popup window to split touches across other windows that also support split touch. <br /><br />"
"android.widget.PopupWindow.isSplitTouchEnabled () "," Indicates whether the popup window supports splitting touches. <br /><br />"
"android.widget.PopupWindow.getMaxAvailableHeight (View anchor, int yOffset) "," Returns the maximum height that is available for the popup to be completely shown. <br /><br />"
"android.widget.PopupWindow.isAboveAnchor ()   Indicates whether the popup is showing above  (the y coordinate of the popup's bottom is less than the y coordinate of the anchor) or below the anchor view  (the y coordinate of the popup is greater than y coordinate of the anchor's bottom) "," Indicates whether the popup is showing above (the y coordinate of the popup's bottom is less than the y coordinate of the anchor) or below the anchor view (the y coordinate of the popup is greater than y coordinate of the anchor's bottom). <br /><br />"
"android.widget.PopupWindow.getAnimationStyle () "," Return the animation style to use the popup appears and disappears <br /><br />"
"android.widget.PopupWindow.setHeight (int height) "," Change the popup's height MeasureSpec If the popup is showing, calling this method will take effect only the next time the popup is shown. <br /><br />"
"android.widget.PopupWindow.setFocusable (boolean focusable) "," Changes the focusability of the popup window. <br /><br />"
"android.widget.PopupWindow.update (View anchor, int width, int height) "," Updates the position and the dimension of the popup window. <br /><br />"
"android.widget.PopupWindow.getBackground () "," Return the drawable used as the popup window's background. <br /><br />"
"android.widget.PopupWindow.setInputMethodMode (int mode) "," Control how the popup operates with an input method: one of INPUT_METHOD_FROM_FOCUSABLE, INPUT_METHOD_NEEDED, or INPUT_METHOD_NOT_NEEDED. <br /><br />"
"android.widget.PopupWindow.setAttachedInDecor (boolean enabled) "," This will attach the popup window to the decor frame of the parent window to avoid overlaping with screen decorations like the navigation bar. <br /><br />"
"android.widget.PopupWindow.update (int x, int y, int width, int height, boolean force) "," Updates the position and the dimension of the popup window. <br /><br />"
"android.widget.PopupWindow.update (View anchor, int xoff, int yoff, int width, int height) "," Updates the position and the dimension of the popup window. <br /><br />"
"android.widget.PopupWindow.setOnDismissListener (PopupWindow.OnDismissListener onDismissListener) "," Sets the listener to be called when the window is dismissed. <br /><br />"
"android.widget.PopupWindow.OnDismissListener.onDismiss () "," Called when this popup window is dismissed. <br /><br />"
"android.widget.ProgressBar.getSecondaryProgress () "," Get the progress bar's current level of secondary progress. <br /><br />"
"android.widget.ProgressBar.onRestoreInstanceState (Parcelable state)   Hook allowing a view to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState () "," Hook allowing a view to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState(). <br /><br />"
"android.widget.ProgressBar.setIndeterminate (boolean indeterminate) "," Change the indeterminate mode for this progress bar. <br /><br />"
"android.widget.ProgressBar.setVisibility (int v) "," Set the enabled state of this view. <br /><br />"
"android.widget.ProgressBar.getProgressDrawable () "," Get the drawable used to draw the progress bar in progress mode. <br /><br />"
"android.widget.ProgressBar.getMax () "," Return the upper limit of this progress bar's range. <br /><br />"
"android.widget.ProgressBar.getProgress () "," Get the progress bar's current level of progress. <br /><br />"
"android.widget.ProgressBar.setIndeterminateDrawable (Drawable d) "," Define the drawable used to draw the progress bar in indeterminate mode. <br /><br />"
"android.widget.ProgressBar.getProgressBackgroundTintList () "," Returns the tint applied to the progress background, if specified. <br /><br />"
"android.widget.ProgressBar.getProgressBackgroundTintMode () "," no description <br /><br />"
"android.widget.ProgressBar.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.ProgressBar.onSaveInstanceState () "," Hook allowing a view to generate a representation of its internal state that can later be used to create a new instance with that same state. <br /><br />"
"android.widget.ProgressBar.setProgress (int progress) "," Set the current progress to the specified value. <br /><br />"
"android.widget.ProgressBar.setProgressTintList (ColorStateList tint) "," Applies a tint to the progress indicator, if one exists, or to the entire progress drawable otherwise. <br /><br />"
"android.widget.ProgressBar.getProgressTintMode () "," Returns the blending mode used to apply the tint to the progress drawable, if specified. <br /><br />"
"android.widget.ProgressBar.getIndeterminateTintList () "," no description <br /><br />"
"android.widget.ProgressBar.setProgressDrawable (Drawable d) "," Define the drawable used to draw the progress bar in progress mode. <br /><br />"
"android.widget.ProgressBar.incrementProgressBy (int diff) "," Increase the progress bar's progress by the specified amount. <br /><br />"
"android.widget.ProgressBar.getSecondaryProgressTintList () "," Returns the tint applied to the secondary progress drawable, if specified. <br /><br />"
"android.widget.ProgressBar.setProgressBackgroundTintMode (PorterDuff.Mode tintMode)   Specifies the blending mode used to apply the tint specified by setProgressBackgroundTintList (ColorStateList) "," Specifies the blending mode used to apply the tint specified by setProgressBackgroundTintList(ColorStateList)} to the progress background. <br /><br />"
"android.widget.ProgressBar.setSecondaryProgress (int secondaryProgress) "," Set the current secondary progress to the specified value. <br /><br />"
"android.widget.ProgressBar.setIndeterminateTintMode (PorterDuff.Mode tintMode)   Specifies the blending mode used to apply the tint specified by setIndeterminateTintList (ColorStateList) "," Specifies the blending mode used to apply the tint specified by setIndeterminateTintList(ColorStateList) to the indeterminate drawable. <br /><br />"
"android.widget.ProgressBar.incrementSecondaryProgressBy (int diff) "," Increase the progress bar's secondary progress by the specified amount. <br /><br />"
"android.widget.ProgressBar.setProgressDrawableTiled (Drawable d) "," Define the tileable drawable used to draw the progress bar in progress mode. <br /><br />"
"android.widget.ProgressBar.getProgressTintList () "," Returns the tint applied to the progress drawable, if specified. <br /><br />"
"android.widget.ProgressBar.setProgressBackgroundTintList (ColorStateList tint) "," Applies a tint to the progress background, if one exists. <br /><br />"
"android.widget.ProgressBar.setInterpolator (Context context, int resID) "," Sets the acceleration curve for the indeterminate animation. <br /><br />"
"android.widget.ProgressBar.getIndeterminateTintMode () "," Returns the blending mode used to apply the tint to the indeterminate drawable, if specified. <br /><br />"
"android.widget.ProgressBar.drawableHotspotChanged (float x, float y) "," This function is called whenever the view hotspot changes and needs to be propagated to drawables or child views managed by the view. <br /><br />"
"android.widget.ProgressBar.invalidateDrawable (Drawable dr) "," Invalidates the specified Drawable. <br /><br />"
"android.widget.ProgressBar.getSecondaryProgressTintMode () "," Returns the blending mode used to apply the tint to the secondary progress drawable, if specified. <br /><br />"
"android.widget.ProgressBar.jumpDrawablesToCurrentState ()   Call Drawable.jumpToCurrentState () "," Call Drawable.jumpToCurrentState() on all Drawable objects associated with this view. <br /><br />"
"android.widget.ProgressBar.getIndeterminateDrawable () "," Get the drawable used to draw the progress bar in indeterminate mode. <br /><br />"
"android.widget.ProgressBar.setSecondaryProgressTintMode (PorterDuff.Mode tintMode)   Specifies the blending mode used to apply the tint specified by setSecondaryProgressTintList (ColorStateList) "," Specifies the blending mode used to apply the tint specified by setSecondaryProgressTintList(ColorStateList)} to the secondary progress indicator. <br /><br />"
"android.widget.ProgressBar.postInvalidate () "," Cause an invalidate to happen on a subsequent cycle through the event loop. <br /><br />"
"android.widget.ProgressBar.getInterpolator () "," Gets the acceleration curve type for the indeterminate animation. <br /><br />"
"android.widget.ProgressBar.setIndeterminateTintList (ColorStateList tint) "," Applies a tint to the indeterminate drawable. <br /><br />"
"android.widget.ProgressBar.setInterpolator (Interpolator interpolator) "," Sets the acceleration curve for the indeterminate animation. <br /><br />"
"android.widget.ProgressBar.setProgressTintMode (PorterDuff.Mode tintMode)   Specifies the blending mode used to apply the tint specified by setProgressTintList (ColorStateList) "," Specifies the blending mode used to apply the tint specified by setProgressTintList(ColorStateList)} to the progress indicator. <br /><br />"
"android.widget.ProgressBar.setIndeterminateDrawableTiled (Drawable d) "," Define the tileable drawable used to draw the progress bar in indeterminate mode. <br /><br />"
"android.widget.ProgressBar.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.ProgressBar.setSecondaryProgressTintList (ColorStateList tint) "," Applies a tint to the secondary progress indicator, if one exists. <br /><br />"
"android.widget.ProgressBar.setMax (int max) "," Set the range of the progress bar to 0... <br /><br />"
"android.widget.ProgressBar.isIndeterminate () "," Indicate whether this progress bar is in indeterminate mode. <br /><br />"
"android.widget.QuickContactBadge.setOverlay (Drawable overlay) "," Assigns the drawable that is to be drawn on top of the assigned contact photo. <br /><br />"
"android.widget.QuickContactBadge.setMode (int size) "," This call has no effect anymore, as there is only one QuickContact mode <br /><br />"
"android.widget.QuickContactBadge.setExcludeMimes (String[] excludeMimes) "," Set a list of specific MIME-types to exclude and not display. <br /><br />"
"android.widget.QuickContactBadge.assignContactFromEmail (String emailAddress, boolean lazyLookup) "," Assign a contact based on an email address. <br /><br />"
"android.widget.QuickContactBadge.assignContactFromPhone (String phoneNumber, boolean lazyLookup) "," Assign a contact based on a phone number. <br /><br />"
"android.widget.QuickContactBadge.drawableHotspotChanged (float x, float y) "," This function is called whenever the view hotspot changes and needs to be propagated to drawables or child views managed by the view. <br /><br />"
"android.widget.QuickContactBadge.assignContactFromEmail (String emailAddress, boolean lazyLookup, Bundle extras) "," Assign a contact based on an email address. <br /><br />"
"android.widget.QuickContactBadge.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.QuickContactBadge.assignContactUri (Uri contactUri) "," Assign the contact uri that this QuickContactBadge should be associated with. <br /><br />"
"android.widget.QuickContactBadge.onClick (View v) "," Called when a view has been clicked. <br /><br />"
"android.widget.QuickContactBadge.assignContactFromPhone (String phoneNumber, boolean lazyLookup, Bundle extras) "," Assign a contact based on a phone number. <br /><br />"
"android.widget.QuickContactBadge.setImageToDefault () "," Resets the contact photo to the default state. <br /><br />"
"android.widget.QuickContactBadge.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.RadioButton.toggle () "," Change the checked state of the view to the inverse of its current state  If the radio button is already checked, this method will not toggle the radio button. <br /><br />"
"android.widget.RadioButton.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.RadioButton.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.RadioGroup.addView (View child, int index, ViewGroup.LayoutParams params) "," Adds a child view with the specified layout parameters. <br /><br />"
"android.widget.RadioGroup.getCheckedRadioButtonId () "," Returns the identifier of the selected radio button in this group. <br /><br />"
"android.widget.RadioGroup.setOnCheckedChangeListener (RadioGroup.OnCheckedChangeListener listener) "," Register a callback to be invoked when the checked radio button changes in this group. <br /><br />"
"android.widget.RadioGroup.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.widget.RadioGroup.check (int id) "," Sets the selection to the radio button whose identifier is passed in parameter. <br /><br />"
"android.widget.RadioGroup.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.RadioGroup.setOnHierarchyChangeListener (ViewGroup.OnHierarchyChangeListener listener) "," Register a callback to be invoked when a child is added to or removed from this view. <br /><br />"
"android.widget.RadioGroup.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.RadioGroup.clearCheck () "," Clears the selection. <br /><br />"
"android.widget.RadioGroup.OnCheckedChangeListener.onCheckedChanged (RadioGroup group, int checkedId) "," Called when the checked radio button has changed. <br /><br />"
"android.widget.RatingBar.setStepSize (float stepSize)   Sets the step size  (granularity) "," Sets the step size (granularity) of this rating bar. <br /><br />"
"android.widget.RatingBar.setOnRatingBarChangeListener (RatingBar.OnRatingBarChangeListener listener) "," Sets the listener to be called when the rating changes. <br /><br />"
"android.widget.RatingBar.isIndicator () "," no description <br /><br />"
"android.widget.RatingBar.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.RatingBar.getOnRatingBarChangeListener () "," no description <br /><br />"
"android.widget.RatingBar.setRating (float rating)   Sets the rating  (the number of stars filled) "," Sets the rating (the number of stars filled). <br /><br />"
"android.widget.RatingBar.setNumStars (int numStars) "," Sets the number of stars to show. <br /><br />"
"android.widget.RatingBar.setIsIndicator (boolean isIndicator)   Whether this rating bar should only be an indicator  (thus non-changeable by the user) "," Whether this rating bar should only be an indicator (thus non-changeable by the user). <br /><br />"
"android.widget.RatingBar.getNumStars () "," Returns the number of stars shown. <br /><br />"
"android.widget.RatingBar.getStepSize () "," Gets the step size of this rating bar. <br /><br />"
"android.widget.RatingBar.setMax (int max) "," Set the range of the progress bar to 0... <br /><br />"
"android.widget.RatingBar.getRating ()   Gets the current rating  (number of stars filled) "," Gets the current rating (number of stars filled). <br /><br />"
"android.widget.RatingBar.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.RatingBar.OnRatingBarChangeListener.onRatingChanged (RatingBar ratingBar, float rating, boolean fromUser) "," Notification that the rating has changed. <br /><br />"
"android.widget.RelativeLayout.setGravity (int gravity) "," Describes how the child views are positioned. <br /><br />"
"android.widget.RelativeLayout.shouldDelayChildPressedState () "," Return true if the pressed state should be delayed for children or descendants of this ViewGroup. <br /><br />"
"android.widget.RelativeLayout.getGravity () "," Describes how the child views are positioned. <br /><br />"
"android.widget.RelativeLayout.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.widget.RelativeLayout.requestLayout () "," Call this when something has changed which has invalidated the layout of this view. <br /><br />"
"android.widget.RelativeLayout.dispatchPopulateAccessibilityEvent (AccessibilityEvent event) "," Dispatches an AccessibilityEvent to the View first and then to its children for adding their text content to the event. <br /><br />"
"android.widget.RelativeLayout.setHorizontalGravity (int horizontalGravity) "," no description <br /><br />"
"android.widget.RelativeLayout.getBaseline () "," Return the offset of the widget's text baseline from the widget's top boundary. <br /><br />"
"android.widget.RelativeLayout.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.RelativeLayout.setVerticalGravity (int verticalGravity) "," no description <br /><br />"
"android.widget.RelativeLayout.setIgnoreGravity (int viewId) "," Defines which View is ignored when the gravity is applied. <br /><br />"
"android.widget.RelativeLayout.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.RelativeLayout.LayoutParams.addRule (int verb, int anchor) "," Adds a layout rule to be interpreted by the RelativeLayout. <br /><br />"
"android.widget.RelativeLayout.LayoutParams.resolveLayoutDirection (int layoutDirection)   This will be called by requestLayout () "," This will be called by requestLayout(). <br /><br />"
"android.widget.RelativeLayout.LayoutParams.debug (String output) "," Returns a String representation of this set of layout parameters. <br /><br />"
"android.widget.RelativeLayout.LayoutParams.getRules () "," Retrieves a complete list of all supported rules, where the index is the rule verb, and the element value is the value specified, or 'false' if it was never set. <br /><br />"
"android.widget.RelativeLayout.LayoutParams.removeRule (int verb) "," Removes a layout rule to be interpreted by the RelativeLayout. <br /><br />"
"android.widget.RelativeLayout.LayoutParams.addRule (int verb) "," Adds a layout rule to be interpreted by the RelativeLayout. <br /><br />"
"android.widget.RemoteViews.showPrevious (int viewId)   Equivalent to calling showPrevious () "," Equivalent to calling showPrevious() <br /><br />"
"android.widget.RemoteViews.setOnClickFillInIntent (int viewId, Intent fillInIntent) "," When using collections (eg. <br /><br />"
"android.widget.RemoteViews.showNext (int viewId)   Equivalent to calling showNext () "," Equivalent to calling showNext() <br /><br />"
"android.widget.RemoteViews.setShort (int viewId, String methodName, short value) "," Call a method taking one short on a view in the layout for this RemoteViews. <br /><br />"
"android.widget.RemoteViews.setBitmap (int viewId, String methodName, Bitmap value) "," Call a method taking one Bitmap on a view in the layout for this RemoteViews. <br /><br />"
"android.widget.RemoteViews.setTextViewCompoundDrawables (int viewId, int left, int top, int right, int bottom)   Equivalent to calling setCompoundDrawablesWithIntrinsicBounds (int, int, int, int) "," Equivalent to calling setCompoundDrawablesWithIntrinsicBounds(int, int, int, int). <br /><br />"
"android.widget.RemoteViews.setPendingIntentTemplate (int viewId, PendingIntent pendingIntentTemplate) "," When using collections (eg. <br /><br />"
"android.widget.RemoteViews.setString (int viewId, String methodName, String value) "," Call a method taking one String on a view in the layout for this RemoteViews. <br /><br />"
"android.widget.RemoteViews.apply (Context context, ViewGroup parent) "," Inflates the view hierarchy represented by this object and applies all of the actions. <br /><br />"
"android.widget.RemoteViews.setRemoteAdapter (int viewId, Intent intent)   Equivalent to calling setRemoteViewsAdapter (Intent) "," Equivalent to calling setRemoteViewsAdapter(Intent). <br /><br />"
"android.widget.RemoteViews.writeToParcel (Parcel dest, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.widget.RemoteViews.setAccessibilityTraversalBefore (int viewId, int nextId)   Equivalent to calling setAccessibilityTraversalBefore (int) "," Equivalent to calling setAccessibilityTraversalBefore(int). <br /><br />"
"android.widget.RemoteViews.getLayoutId () "," Reutrns the layout id of the root layout associated with this RemoteViews. <br /><br />"
"android.widget.RemoteViews.setCharSequence (int viewId, String methodName, CharSequence value) "," Call a method taking one CharSequence on a view in the layout for this RemoteViews. <br /><br />"
"android.widget.RemoteViews.setBundle (int viewId, String methodName, Bundle value) "," Call a method taking one Bundle on a view in the layout for this RemoteViews. <br /><br />"
"android.widget.RemoteViews.setUri (int viewId, String methodName, Uri value) "," Call a method taking one Uri on a view in the layout for this RemoteViews. <br /><br />"
"android.widget.RemoteViews.setDisplayedChild (int viewId, int childIndex)   Equivalent to calling setDisplayedChild (int) "," Equivalent to calling setDisplayedChild(int) <br /><br />"
"android.widget.RemoteViews.setByte (int viewId, String methodName, byte value) "," Call a method taking one byte on a view in the layout for this RemoteViews. <br /><br />"
"android.widget.RemoteViews.setRemoteAdapter (int appWidgetId, int viewId, Intent intent)    This method was deprecated in API level 14. This method has been deprecated. See setRemoteAdapter (int, Intent) "," This method was deprecated in API level 14. This method has been deprecated. See setRemoteAdapter(int, Intent) <br /><br />"
"android.widget.RemoteViews.reapply (Context context, View v) "," Applies all of the actions to the provided view. <br /><br />"
"android.widget.RemoteViews.setIntent (int viewId, String methodName, Intent value) "," Call a method taking one Intent on a view in the layout for this RemoteViews. <br /><br />"
"android.widget.RemoteViews.setTextViewTextSize (int viewId, int units, float size)   Equivalent to calling setTextSize (int, float) "," Equivalent to calling setTextSize(int, float) <br /><br />"
"android.widget.RemoteViews.setDouble (int viewId, String methodName, double value) "," Call a method taking one double on a view in the layout for this RemoteViews. <br /><br />"
"android.widget.RemoteViews.setBoolean (int viewId, String methodName, boolean value) "," Call a method taking one boolean on a view in the layout for this RemoteViews. <br /><br />"
"android.widget.RemoteViews.onLoadClass (Class clazz) "," Hook to allow clients of the LayoutInflater to restrict the set of Views that are allowed to be inflated. <br /><br />"
"android.widget.RemoteViews.setLabelFor (int viewId, int labeledId)   Equivalent to calling View.setLabelFor (int) "," Equivalent to calling View.setLabelFor(int). <br /><br />"
"android.widget.RemoteViews.setChar (int viewId, String methodName, char value) "," Call a method taking one char on a view in the layout for this RemoteViews. <br /><br />"
"android.widget.RemoteViews.setImageViewBitmap (int viewId, Bitmap bitmap) "," Equivalent to calling ImageView.setImageBitmap <br /><br />"
"android.widget.RemoteViews.getPackage () "," no description <br /><br />"
"android.widget.RemoteViews.setViewPadding (int viewId, int left, int top, int right, int bottom)   Equivalent to calling setPadding (int, int, int, int) "," Equivalent to calling setPadding(int, int, int, int). <br /><br />"
"android.widget.RemoteViews.setTextViewCompoundDrawablesRelative (int viewId, int start, int top, int end, int bottom)   Equivalent to calling setCompoundDrawablesRelativeWithIntrinsicBounds (int, int, int, int) "," Equivalent to calling setCompoundDrawablesRelativeWithIntrinsicBounds(int, int, int, int). <br /><br />"
"android.widget.RemoteViews.setOnClickPendingIntent (int viewId, PendingIntent pendingIntent)   Equivalent to calling setOnClickListener (android.view.View.OnClickListener) "," Equivalent to calling setOnClickListener(android.view.View.OnClickListener) to launch the provided PendingIntent. <br /><br />"
"android.widget.RemoteViews.setFloat (int viewId, String methodName, float value) "," Call a method taking one float on a view in the layout for this RemoteViews. <br /><br />"
"android.widget.RemoteViews.setRelativeScrollPosition (int viewId, int offset)   Equivalent to calling smoothScrollToPosition (int, int) "," Equivalent to calling smoothScrollToPosition(int, int). <br /><br />"
"android.widget.RemoteViews.setAccessibilityTraversalAfter (int viewId, int nextId)   Equivalent to calling setAccessibilityTraversalAfter (int) "," Equivalent to calling setAccessibilityTraversalAfter(int). <br /><br />"
"android.widget.RemoteViews.setLong (int viewId, String methodName, long value) "," Call a method taking one long on a view in the layout for this RemoteViews. <br /><br />"
"android.widget.RemoteViews.setTextViewText (int viewId, CharSequence text) "," Equivalent to calling TextView.setText <br /><br />"
"android.widget.RemoteViews.setImageViewUri (int viewId, Uri uri) "," Equivalent to calling ImageView.setImageURI <br /><br />"
"android.widget.RemoteViews.setEmptyView (int viewId, int emptyViewId) "," Equivalent to calling AdapterView.setEmptyView <br /><br />"
"android.widget.RemoteViews.removeAllViews (int viewId)   Equivalent to calling removeAllViews () "," Equivalent to calling removeAllViews(). <br /><br />"
"android.widget.RemoteViews.setViewVisibility (int viewId, int visibility) "," Equivalent to calling View.setVisibility <br /><br />"
"android.widget.RemoteViews.setContentDescription (int viewId, CharSequence contentDescription)   Equivalent to calling View.setContentDescription (CharSequence) "," Equivalent to calling View.setContentDescription(CharSequence). <br /><br />"
"android.widget.RemoteViews.setChronometer (int viewId, long base, String format, boolean started)   Equivalent to calling Chronometer.setBase, Chronometer.setFormat, and Chronometer.start () or Chronometer.stop () "," Equivalent to calling Chronometer.setBase, Chronometer.setFormat, and Chronometer.start() or Chronometer.stop(). <br /><br />"
"android.widget.RemoteViews.setProgressBar (int viewId, int max, int progress, boolean indeterminate)   Equivalent to calling ProgressBar.setMax, ProgressBar.setProgress, and "," Equivalent to calling ProgressBar.setMax, ProgressBar.setProgress, and ProgressBar.setIndeterminate If indeterminate is true, then the values for max and progress are ignored. <br /><br />"
"android.widget.RemoteViews.describeContents () "," Describe the kinds of special objects contained in this Parcelable's marshalled representation. <br /><br />"
"android.widget.RemoteViews.addView (int viewId, RemoteViews nestedView)   Equivalent to calling addView (View) "," Equivalent to calling addView(View) after inflating the given RemoteViews. <br /><br />"
"android.widget.RemoteViews.clone () "," Creates and returns a copy of this Object. <br /><br />"
"android.widget.RemoteViews.setTextColor (int viewId, int color)   Equivalent to calling setTextColor (int) "," Equivalent to calling setTextColor(int). <br /><br />"
"android.widget.RemoteViews.setImageViewResource (int viewId, int srcId) "," Equivalent to calling ImageView.setImageResource <br /><br />"
"android.widget.RemoteViews.setScrollPosition (int viewId, int position)   Equivalent to calling smoothScrollToPosition (int, int) "," Equivalent to calling smoothScrollToPosition(int, int). <br /><br />"
"android.widget.RemoteViews.setInt (int viewId, String methodName, int value) "," Call a method taking one int on a view in the layout for this RemoteViews. <br /><br />"
"android.widget.RemoteViewsService.onGetViewFactory (Intent intent) "," To be implemented by the derived service to generate appropriate factories for the data. <br /><br />"
"android.widget.RemoteViewsService.onBind (Intent intent) "," Return the communication channel to the service. <br /><br />"
"android.widget.RemoteViewsService.RemoteViewsFactory.getCount ()   See getCount () "," See getCount() <br /><br />"
"android.widget.RemoteViewsService.RemoteViewsFactory.getLoadingView ()   This allows for the use of a custom loading view which appears between the time that getViewAt (int) "," This allows for the use of a custom loading view which appears between the time that getViewAt(int) is called and returns. <br /><br />"
"android.widget.RemoteViewsService.RemoteViewsFactory.onCreate () "," Called when your factory is first constructed. <br /><br />"
"android.widget.RemoteViewsService.RemoteViewsFactory.getViewAt (int position)   See getView (int, android.view.View, android.view.ViewGroup) "," See getView(int, android.view.View, android.view.ViewGroup). <br /><br />"
"android.widget.RemoteViewsService.RemoteViewsFactory.onDataSetChanged ()   Called when notifyDataSetChanged () "," Called when notifyDataSetChanged() is triggered on the remote adapter. <br /><br />"
"android.widget.RemoteViewsService.RemoteViewsFactory.onDestroy () "," Called when the last RemoteViewsAdapter that is associated with this factory is unbound. <br /><br />"
"android.widget.RemoteViewsService.RemoteViewsFactory.getItemId (int position)   See getItemId (int) "," See getItemId(int). <br /><br />"
"android.widget.RemoteViewsService.RemoteViewsFactory.hasStableIds ()   See hasStableIds () "," See hasStableIds(). <br /><br />"
"android.widget.RemoteViewsService.RemoteViewsFactory.getViewTypeCount ()   See getViewTypeCount () "," See getViewTypeCount(). <br /><br />"
"android.widget.ResourceCursorAdapter.setViewResource (int layout) "," Sets the layout resource of the item views. <br /><br />"
"android.widget.ResourceCursorAdapter.newView (Context context, Cursor cursor, ViewGroup parent)   Inflates view (s) "," Inflates view(s) from the specified XML file. <br /><br />"
"android.widget.ResourceCursorAdapter.newDropDownView (Context context, Cursor cursor, ViewGroup parent) "," Makes a new drop down view to hold the data pointed to by cursor. <br /><br />"
"android.widget.ResourceCursorAdapter.setDropDownViewResource (int dropDownLayout) "," Sets the layout resource of the drop down views. <br /><br />"
"android.widget.ResourceCursorTreeAdapter.newGroupView (Context context, Cursor cursor, boolean isExpanded, ViewGroup parent) "," Makes a new group view to hold the group data pointed to by cursor. <br /><br />"
"android.widget.ResourceCursorTreeAdapter.newChildView (Context context, Cursor cursor, boolean isLastChild, ViewGroup parent) "," Makes a new child view to hold the data pointed to by cursor. <br /><br />"
"android.widget.Scroller.getFinalX () "," Returns where the scroll will end. <br /><br />"
"android.widget.Scroller.computeScrollOffset () "," Call this when you want to know the new location. <br /><br />"
"android.widget.Scroller.isFinished () "," Returns whether the scroller has finished scrolling. <br /><br />"
"android.widget.Scroller.setFinalX (int newX)   Sets the final position  (X) "," Sets the final position (X) for this scroller. <br /><br />"
"android.widget.Scroller.setFriction (float friction) "," The amount of friction applied to flings. <br /><br />"
"android.widget.Scroller.forceFinished (boolean finished) "," Force the finished field to a particular value. <br /><br />"
"android.widget.Scroller.getCurrX () "," Returns the current X offset in the scroll. <br /><br />"
"android.widget.Scroller.setFinalY (int newY)   Sets the final position  (Y) "," Sets the final position (Y) for this scroller. <br /><br />"
"android.widget.Scroller.abortAnimation () "," Stops the animation. <br /><br />"
"android.widget.Scroller.timePassed () "," Returns the time elapsed since the beginning of the scrolling. <br /><br />"
"android.widget.Scroller.getCurrVelocity () "," Returns the current velocity. <br /><br />"
"android.widget.Scroller.getStartX () "," Returns the start X offset in the scroll. <br /><br />"
"android.widget.Scroller.fling (int startX, int startY, int velocityX, int velocityY, int minX, int maxX, int minY, int maxY) "," Start scrolling based on a fling gesture. <br /><br />"
"android.widget.Scroller.startScroll (int startX, int startY, int dx, int dy) "," Start scrolling by providing a starting point and the distance to travel. <br /><br />"
"android.widget.Scroller.getStartY () "," Returns the start Y offset in the scroll. <br /><br />"
"android.widget.Scroller.getCurrY () "," Returns the current Y offset in the scroll. <br /><br />"
"android.widget.Scroller.getFinalY () "," Returns where the scroll will end. <br /><br />"
"android.widget.Scroller.startScroll (int startX, int startY, int dx, int dy, int duration) "," Start scrolling by providing a starting point, the distance to travel, and the duration of the scroll. <br /><br />"
"android.widget.Scroller.extendDuration (int extend) "," Extend the scroll animation. <br /><br />"
"android.widget.Scroller.getDuration () "," Returns how long the scroll event will take, in milliseconds. <br /><br />"
"android.widget.ScrollView.addView (View child, int index, ViewGroup.LayoutParams params) "," Adds a child view with the specified layout parameters. <br /><br />"
"android.widget.ScrollView.setSmoothScrollingEnabled (boolean smoothScrollingEnabled) "," Set whether arrow scrolling will animate its transition. <br /><br />"
"android.widget.ScrollView.onStartNestedScroll (View child, View target, int nestedScrollAxes) "," React to a descendant view initiating a nestable scroll operation, claiming the nested scroll operation if appropriate. <br /><br />"
"android.widget.ScrollView.addView (View child, ViewGroup.LayoutParams params) "," Adds a child view with the specified layout parameters. <br /><br />"
"android.widget.ScrollView.getMaxScrollAmount () "," no description <br /><br />"
"android.widget.ScrollView.addView (View child, int index) "," Adds a child view. <br /><br />"
"android.widget.ScrollView.isFillViewport () "," Indicates whether this ScrollView's content is stretched to fill the viewport. <br /><br />"
"android.widget.ScrollView.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.ScrollView.onStopNestedScroll (View target) "," React to a nested scroll operation ending. <br /><br />"
"android.widget.ScrollView.onNestedScroll (View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed) "," React to a nested scroll in progress. <br /><br />"
"android.widget.ScrollView.arrowScroll (int direction) "," Handle scrolling in response to an up or down arrow click. <br /><br />"
"android.widget.ScrollView.isSmoothScrollingEnabled () "," no description <br /><br />"
"android.widget.ScrollView.onNestedFling (View target, float velocityX, float velocityY, boolean consumed) "," Request a fling from a nested scroll. <br /><br />"
"android.widget.ScrollView.onNestedScrollAccepted (View child, View target, int axes) "," React to the successful claiming of a nested scroll operation. <br /><br />"
"android.widget.ScrollView.smoothScrollTo (int x, int y)   Like scrollTo (int, int) "," Like scrollTo(int, int), but scroll smoothly instead of immediately. <br /><br />"
"android.widget.ScrollView.smoothScrollBy (int dx, int dy)   Like scrollBy (int, int) "," Like scrollBy(int, int), but scroll smoothly instead of immediately. <br /><br />"
"android.widget.ScrollView.pageScroll (int direction) "," Handles scrolling in response to a 'page up/down' shortcut press. <br /><br />"
"android.widget.ScrollView.fling (int velocityY) "," Fling the scroll view <br /><br />"
"android.widget.ScrollView.setFillViewport (boolean fillViewport) "," Indicates this ScrollView whether it should stretch its content height to fill the viewport or not. <br /><br />"
"android.widget.ScrollView.dispatchKeyEvent (KeyEvent event) "," Dispatch a key event to the next view on the focus path. <br /><br />"
"android.widget.ScrollView.shouldDelayChildPressedState () "," Return true if the pressed state should be delayed for children or descendants of this ViewGroup. <br /><br />"
"android.widget.ScrollView.requestLayout () "," Call this when something has changed which has invalidated the layout of this view. <br /><br />"
"android.widget.ScrollView.scrollTo (int x, int y) "," Set the scrolled position of your view. This version also clamps the scrolling to the bounds of our child. <br /><br />"
"android.widget.ScrollView.requestChildFocus (View child, View focused) "," Called when a child of this parent wants focus <br /><br />"
"android.widget.ScrollView.fullScroll (int direction) "," Handles scrolling in response to a 'home/end' shortcut press. <br /><br />"
"android.widget.ScrollView.requestDisallowInterceptTouchEvent (boolean disallowIntercept)   Called when a child does not want this parent and its ancestors to intercept touch events with onInterceptTouchEvent (MotionEvent) "," Called when a child does not want this parent and its ancestors to intercept touch events with onInterceptTouchEvent(MotionEvent). <br /><br />"
"android.widget.ScrollView.draw (Canvas canvas)   Manually render this view  (and all of its children) "," Manually render this view (and all of its children) to the given Canvas. <br /><br />"
"android.widget.ScrollView.setOverScrollMode (int mode) "," Set the over-scroll mode for this view. <br /><br />"
"android.widget.ScrollView.computeScroll () "," Called by a parent to request that a child update its values for mScrollX and mScrollY if necessary. <br /><br />"
"android.widget.ScrollView.addView (View child) "," Adds a child view. <br /><br />"
"android.widget.ScrollView.onGenericMotionEvent (MotionEvent event) "," Implement this method to handle generic motion events. <br /><br />"
"android.widget.ScrollView.performAccessibilityAction (int action, Bundle arguments) "," Performs the specified accessibility action on the view. <br /><br />"
"android.widget.ScrollView.requestChildRectangleOnScreen (View child, Rect rectangle, boolean immediate) "," Called when a child of this group wants a particular rectangle to be positioned onto the screen. <br /><br />"
"android.widget.ScrollView.executeKeyEvent (KeyEvent event) "," You can call this function yourself to have the scroll view perform scrolling from a key event, just as if the event had been dispatched to it by the view hierarchy. <br /><br />"
"android.widget.ScrollView.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.ScrollView.onInterceptTouchEvent (MotionEvent ev) "," Implement this method to intercept all touch screen motion events. <br /><br />"
"android.widget.ScrollView.onTouchEvent (MotionEvent ev) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.widget.SearchView.getInputType () "," Returns the input type set on the query text field. <br /><br />"
"android.widget.SearchView.setMaxWidth (int maxpixels) "," Makes the view at most this many pixels wide <br /><br />"
"android.widget.SearchView.onActionViewCollapsed () "," Called when this view is collapsed as an action view. <br /><br />"
"android.widget.SearchView.isIconfiedByDefault () "," Returns the default iconified state of the search field. <br /><br />"
"android.widget.SearchView.setInputType (int inputType) "," Sets the input type on the query text field. <br /><br />"
"android.widget.SearchView.onActionViewExpanded () "," Called when this view is expanded as an action view. <br /><br />"
"android.widget.SearchView.setOnQueryTextListener (SearchView.OnQueryTextListener listener) "," Sets a listener for user actions within the SearchView. <br /><br />"
"android.widget.SearchView.getImeOptions () "," Returns the IME options set on the query text field. <br /><br />"
"android.widget.SearchView.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.SearchView.onKeyDown (int keyCode, KeyEvent event) "," Handles the key down event for dealing with action keys. <br /><br />"
"android.widget.SearchView.setSuggestionsAdapter (CursorAdapter adapter) "," You can set a custom adapter if you wish. <br /><br />"
"android.widget.SearchView.getQueryHint () "," Gets the hint text to display in the query text field. <br /><br />"
"android.widget.SearchView.getQuery () "," Returns the query string currently in the text field. <br /><br />"
"android.widget.SearchView.getMaxWidth () "," Gets the specified maximum width in pixels, if set. <br /><br />"
"android.widget.SearchView.onWindowFocusChanged (boolean hasWindowFocus) "," Called when the window containing this view gains or loses focus. <br /><br />"
"android.widget.SearchView.setIconified (boolean iconify) "," Iconifies or expands the SearchView. <br /><br />"
"android.widget.SearchView.isIconified () "," Returns the current iconified state of the SearchView. <br /><br />"
"android.widget.SearchView.setQueryRefinementEnabled (boolean enable) "," Specifies if a query refinement button should be displayed alongside each suggestion or if it should depend on the flags set in the individual items retrieved from the suggestions provider. <br /><br />"
"android.widget.SearchView.setOnSearchClickListener (View.OnClickListener listener) "," Sets a listener to inform when the search button is pressed. <br /><br />"
"android.widget.SearchView.setOnSuggestionListener (SearchView.OnSuggestionListener listener) "," Sets a listener to inform when a suggestion is focused or clicked. <br /><br />"
"android.widget.SearchView.setSubmitButtonEnabled (boolean enabled) "," Enables showing a submit button when the query is non-empty. <br /><br />"
"android.widget.SearchView.setOnCloseListener (SearchView.OnCloseListener listener) "," Sets a listener to inform when the user closes the SearchView. <br /><br />"
"android.widget.SearchView.getSuggestionsAdapter () "," Returns the adapter used for suggestions, if any. <br /><br />"
"android.widget.SearchView.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.SearchView.setIconifiedByDefault (boolean iconified) "," Sets the default or resting state of the search field. <br /><br />"
"android.widget.SearchView.setOnQueryTextFocusChangeListener (View.OnFocusChangeListener listener) "," Sets a listener to inform when the focus of the query text field changes. <br /><br />"
"android.widget.SearchView.setQuery (CharSequence query, boolean submit) "," Sets a query string in the text field and optionally submits the query as well. <br /><br />"
"android.widget.SearchView.setSearchableInfo (SearchableInfo searchable) "," Sets the SearchableInfo for this SearchView. <br /><br />"
"android.widget.SearchView.isQueryRefinementEnabled () "," Returns whether query refinement is enabled for all items or only specific ones. <br /><br />"
"android.widget.SearchView.setQueryHint (CharSequence hint) "," Sets the hint text to display in the query text field. <br /><br />"
"android.widget.SearchView.isSubmitButtonEnabled () "," Returns whether the submit button is enabled when necessary or never displayed. <br /><br />"
"android.widget.SearchView.setImeOptions (int imeOptions) "," Sets the IME options on the query text field. <br /><br />"
"android.widget.SearchView.OnCloseListener.onClose () "," The user is attempting to close the SearchView. <br /><br />"
"android.widget.SearchView.OnQueryTextListener.onQueryTextChange (String newText) "," Called when the query text is changed by the user. <br /><br />"
"android.widget.SearchView.OnQueryTextListener.onQueryTextSubmit (String query) "," Called when the user submits the query. <br /><br />"
"android.widget.SearchView.OnSuggestionListener.onSuggestionClick (int position) "," Called when a suggestion was clicked. <br /><br />"
"android.widget.SearchView.OnSuggestionListener.onSuggestionSelect (int position) "," Called when a suggestion was selected by navigating to it. <br /><br />"
"android.widget.SectionIndexer.getSectionForPosition (int position) "," Given a position within the adapter, returns the index of the corresponding section within the array of section objects. <br /><br />"
"android.widget.SectionIndexer.getPositionForSection (int sectionIndex) "," Given the index of a section within the array of section objects, returns the starting position of that section within the adapter. <br /><br />"
"android.widget.SectionIndexer.getSections () "," Returns an array of objects representing sections of the list. <br /><br />"
"android.widget.SeekBar.setOnSeekBarChangeListener (SeekBar.OnSeekBarChangeListener l) "," Sets a listener to receive notifications of changes to the SeekBar's progress level. <br /><br />"
"android.widget.SeekBar.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.SeekBar.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.SeekBar.OnSeekBarChangeListener.onStopTrackingTouch (SeekBar seekBar) "," Notification that the user has finished a touch gesture. <br /><br />"
"android.widget.SeekBar.OnSeekBarChangeListener.onStartTrackingTouch (SeekBar seekBar) "," Notification that the user has started a touch gesture. <br /><br />"
"android.widget.SeekBar.OnSeekBarChangeListener.onProgressChanged (SeekBar seekBar, int progress, boolean fromUser) "," Notification that the progress level has changed. <br /><br />"
"android.widget.ShareActionProvider.setShareIntent (Intent shareIntent) "," Sets an intent with information about the share action. <br /><br />"
"android.widget.ShareActionProvider.onPrepareSubMenu (SubMenu subMenu) "," Called to prepare an associated submenu for the menu item backed by this ActionProvider. <br /><br />"
"android.widget.ShareActionProvider.onCreateActionView ()    This method is deprecated. use onCreateActionView (MenuItem) "," This method is deprecated. use onCreateActionView(MenuItem) <br /><br />"
"android.widget.ShareActionProvider.setShareHistoryFileName (String shareHistoryFile) "," Sets the file name of a file for persisting the share history which history will be used for ordering share targets. <br /><br />"
"android.widget.ShareActionProvider.hasSubMenu () "," Determines if this ActionProvider has a submenu associated with it. <br /><br />"
"android.widget.ShareActionProvider.setOnShareTargetSelectedListener (ShareActionProvider.OnShareTargetSelectedListener listener) "," Sets a listener to be notified when a share target has been selected. <br /><br />"
"android.widget.ShareActionProvider.OnShareTargetSelectedListener.onShareTargetSelected (ShareActionProvider source, Intent intent) "," Called when a share target has been selected. <br /><br />"
"android.widget.SimpleAdapter.getItem (int position) "," no description <br /><br />"
"android.widget.SimpleAdapter.setViewImage (ImageView v, int value)   Called by bindView () "," Called by bindView() to set the image for an ImageView but only if there is no existing ViewBinder or if the existing ViewBinder cannot handle binding to an ImageView. <br /><br />"
"android.widget.SimpleAdapter.setViewBinder (SimpleAdapter.ViewBinder viewBinder) "," Sets the binder used to bind data to views. <br /><br />"
"android.widget.SimpleAdapter.setViewText (TextView v, String text)   Called by bindView () "," Called by bindView() to set the text for a TextView but only if there is no existing ViewBinder or if the existing ViewBinder cannot handle binding to a TextView. <br /><br />"
"android.widget.SimpleAdapter.getView (int position, View convertView, ViewGroup parent) "," no description <br /><br />"
"android.widget.SimpleAdapter.getCount () "," no description <br /><br />"
"android.widget.SimpleAdapter.setViewImage (ImageView v, String value)   Called by bindView () "," Called by bindView() to set the image for an ImageView but only if there is no existing ViewBinder or if the existing ViewBinder cannot handle binding to an ImageView. <br /><br />"
"android.widget.SimpleAdapter.getFilter () "," Returns a filter that can be used to constrain data with a filtering pattern. <br /><br />"
"android.widget.SimpleAdapter.getDropDownView (int position, View convertView, ViewGroup parent) "," Get a View that displays in the drop down popup the data at the specified position in the data set. <br /><br />"
"android.widget.SimpleAdapter.getViewBinder () "," Returns the SimpleAdapter.ViewBinder used to bind data to views. <br /><br />"
"android.widget.SimpleAdapter.setDropDownViewResource (int resource) "," Sets the layout resource to create the drop down views. <br /><br />"
"android.widget.SimpleAdapter.getItemId (int position) "," no description <br /><br />"
"android.widget.SimpleAdapter.ViewBinder.setViewValue (View view, Object data, String textRepresentation) "," Binds the specified data to the specified view. <br /><br />"
"android.widget.SimpleCursorAdapter.CursorToStringConverter.convertToString (Cursor cursor) "," Returns a CharSequence representing the specified Cursor. <br /><br />"
"android.widget.SimpleCursorAdapter.getCursorToStringConverter () "," Returns the converter used to convert the filtering Cursor into a String. <br /><br />"
"android.widget.SimpleCursorAdapter.bindView (View view, Context context, Cursor cursor) "," Binds all of the field names passed into the 'to' parameter of the constructor with their corresponding cursor columns as specified in the 'from' parameter. <br /><br />"
"android.widget.SimpleCursorAdapter.setViewText (TextView v, String text)   Called by bindView () "," Called by bindView() to set the text for a TextView but only if there is no existing ViewBinder or if the existing ViewBinder cannot handle binding to a TextView. <br /><br />"
"android.widget.SimpleCursorAdapter.setStringConversionColumn (int stringConversionColumn) "," Defines the index of the column in the Cursor used to get a String representation of that Cursor. <br /><br />"
"android.widget.SimpleCursorAdapter.swapCursor (Cursor c) "," Swap in a new Cursor, returning the old Cursor. <br /><br />"
"android.widget.SimpleCursorAdapter.getStringConversionColumn () "," Return the index of the column used to get a String representation of the Cursor. <br /><br />"
"android.widget.SimpleCursorAdapter.convertToString (Cursor cursor) "," Returns a CharSequence representation of the specified Cursor as defined by the current CursorToStringConverter. <br /><br />"
"android.widget.SimpleCursorAdapter.changeCursorAndColumns (Cursor c, String[] from, int[] to) "," Change the cursor and change the column-to-view mappings at the same time. <br /><br />"
"android.widget.SimpleCursorAdapter.setViewBinder (SimpleCursorAdapter.ViewBinder viewBinder) "," Sets the binder used to bind data to views. <br /><br />"
"android.widget.SimpleCursorAdapter.setCursorToStringConverter (SimpleCursorAdapter.CursorToStringConverter cursorToStringConverter) "," Sets the converter used to convert the filtering Cursor into a String. <br /><br />"
"android.widget.SimpleCursorAdapter.setViewImage (ImageView v, String value)   Called by bindView () "," Called by bindView() to set the image for an ImageView but only if there is no existing ViewBinder or if the existing ViewBinder cannot handle binding to an ImageView. <br /><br />"
"android.widget.SimpleCursorAdapter.getViewBinder () "," Returns the SimpleCursorAdapter.ViewBinder used to bind data to views. <br /><br />"
"android.widget.SimpleCursorAdapter.ViewBinder.setViewValue (View view, Cursor cursor, int columnIndex) "," Binds the Cursor column defined by the specified index to the specified view. <br /><br />"
"android.widget.SimpleCursorTreeAdapter.setViewText (TextView v, String text)   Called by bindView () "," Called by bindView() to set the text for a TextView but only if there is no existing ViewBinder or if the existing ViewBinder cannot handle binding to a TextView. <br /><br />"
"android.widget.SimpleCursorTreeAdapter.setViewBinder (SimpleCursorTreeAdapter.ViewBinder viewBinder) "," Sets the binder used to bind data to views. <br /><br />"
"android.widget.SimpleCursorTreeAdapter.getViewBinder () "," Returns the SimpleCursorTreeAdapter.ViewBinder used to bind data to views. <br /><br />"
"android.widget.SimpleCursorTreeAdapter.ViewBinder.setViewValue (View view, Cursor cursor, int columnIndex) "," Binds the Cursor column defined by the specified index to the specified view. <br /><br />"
"android.widget.SimpleExpandableListAdapter.newGroupView (boolean isExpanded, ViewGroup parent) "," Instantiates a new View for a group. <br /><br />"
"android.widget.SimpleExpandableListAdapter.getChildId (int groupPosition, int childPosition) "," no description <br /><br />"
"android.widget.SimpleExpandableListAdapter.getGroupId (int groupPosition) "," no description <br /><br />"
"android.widget.SimpleExpandableListAdapter.getChild (int groupPosition, int childPosition) "," no description <br /><br />"
"android.widget.SimpleExpandableListAdapter.newChildView (boolean isLastChild, ViewGroup parent) "," Instantiates a new View for a child. <br /><br />"
"android.widget.SimpleExpandableListAdapter.hasStableIds () "," no description <br /><br />"
"android.widget.SimpleExpandableListAdapter.getChildrenCount (int groupPosition) "," no description <br /><br />"
"android.widget.SimpleExpandableListAdapter.getGroup (int groupPosition) "," no description <br /><br />"
"android.widget.SimpleExpandableListAdapter.getChildView (int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent) "," no description <br /><br />"
"android.widget.SimpleExpandableListAdapter.isChildSelectable (int groupPosition, int childPosition) "," no description <br /><br />"
"android.widget.SimpleExpandableListAdapter.getGroupView (int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) "," no description <br /><br />"
"android.widget.SimpleExpandableListAdapter.getGroupCount () "," no description <br /><br />"
"android.widget.SlidingDrawer.setOnDrawerOpenListener (SlidingDrawer.OnDrawerOpenListener onDrawerOpenListener) "," Sets the listener that receives a notification when the drawer becomes open. <br /><br />"
"android.widget.SlidingDrawer.toggle () "," Toggles the drawer open and close. <br /><br />"
"android.widget.SlidingDrawer.onInterceptTouchEvent (MotionEvent event) "," Implement this method to intercept all touch screen motion events. <br /><br />"
"android.widget.SlidingDrawer.open () "," Opens the drawer immediately. <br /><br />"
"android.widget.SlidingDrawer.close () "," Closes the drawer immediately. <br /><br />"
"android.widget.SlidingDrawer.setOnDrawerScrollListener (SlidingDrawer.OnDrawerScrollListener onDrawerScrollListener) "," Sets the listener that receives a notification when the drawer starts or ends a scroll. <br /><br />"
"android.widget.SlidingDrawer.getHandle () "," Returns the handle of the drawer. <br /><br />"
"android.widget.SlidingDrawer.lock () "," Locks the SlidingDrawer so that touch events are ignores. <br /><br />"
"android.widget.SlidingDrawer.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.SlidingDrawer.isOpened () "," Indicates whether the drawer is currently fully opened. <br /><br />"
"android.widget.SlidingDrawer.setOnDrawerCloseListener (SlidingDrawer.OnDrawerCloseListener onDrawerCloseListener) "," Sets the listener that receives a notification when the drawer becomes close. <br /><br />"
"android.widget.SlidingDrawer.animateToggle () "," Toggles the drawer open and close with an animation. <br /><br />"
"android.widget.SlidingDrawer.isMoving () "," Indicates whether the drawer is scrolling or flinging. <br /><br />"
"android.widget.SlidingDrawer.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.SlidingDrawer.onTouchEvent (MotionEvent event) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.widget.SlidingDrawer.unlock () "," Unlocks the SlidingDrawer so that touch events are processed. <br /><br />"
"android.widget.SlidingDrawer.animateOpen () "," Opens the drawer with an animation. <br /><br />"
"android.widget.SlidingDrawer.animateClose () "," Closes the drawer with an animation. <br /><br />"
"android.widget.SlidingDrawer.getContent () "," Returns the content of the drawer. <br /><br />"
"android.widget.SlidingDrawer.OnDrawerCloseListener.onDrawerClosed () "," Invoked when the drawer becomes fully closed. <br /><br />"
"android.widget.SlidingDrawer.OnDrawerOpenListener.onDrawerOpened () "," Invoked when the drawer becomes fully open. <br /><br />"
"android.widget.SlidingDrawer.OnDrawerScrollListener.onScrollStarted () "," Invoked when the user starts dragging/flinging the drawer's handle. <br /><br />"
"android.widget.SlidingDrawer.OnDrawerScrollListener.onScrollEnded () "," Invoked when the user stops dragging/flinging the drawer's handle. <br /><br />"
"android.widget.Space.draw (Canvas canvas) "," Draw nothing. <br /><br />"
"android.widget.Spinner.onClick (DialogInterface dialog, int which) "," This method will be invoked when a button in the dialog is clicked. <br /><br />"
"android.widget.Spinner.getDropDownHorizontalOffset () "," Get the configured horizontal offset in pixels for the spinner's popup window of choices. <br /><br />"
"android.widget.Spinner.onRestoreInstanceState (Parcelable state)   Hook allowing a view to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState () "," Hook allowing a view to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState(). <br /><br />"
"android.widget.Spinner.performClick () "," Call this view's OnClickListener, if it is defined. <br /><br />"
"android.widget.Spinner.getBaseline () "," Return the offset of the widget's text baseline from the widget's top boundary. <br /><br />"
"android.widget.Spinner.getPopupBackground () "," Get the background drawable for the spinner's popup window of choices. <br /><br />"
"android.widget.Spinner.setAdapter (SpinnerAdapter adapter) "," Sets the Adapter used to provide the data which backs this Spinner. <br /><br />"
"android.widget.Spinner.getPrompt () "," no description <br /><br />"
"android.widget.Spinner.getDropDownWidth () "," Get the configured width of the spinner's popup window of choices in pixels. <br /><br />"
"android.widget.Spinner.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.Spinner.setOnItemClickListener (AdapterView.OnItemClickListener l) "," A spinner does not support item click events. <br /><br />"
"android.widget.Spinner.onSaveInstanceState () "," Hook allowing a view to generate a representation of its internal state that can later be used to create a new instance with that same state. <br /><br />"
"android.widget.Spinner.setPopupBackgroundResource (int resId) "," Set the background drawable for the spinner's popup window of choices. <br /><br />"
"android.widget.Spinner.setGravity (int gravity) "," Describes how the selected item view is positioned. <br /><br />"
"android.widget.Spinner.getDropDownVerticalOffset () "," Get the configured vertical offset in pixels for the spinner's popup window of choices. <br /><br />"
"android.widget.Spinner.setPopupBackgroundDrawable (Drawable background) "," Set the background drawable for the spinner's popup window of choices. <br /><br />"
"android.widget.Spinner.setDropDownWidth (int pixels) "," Set the width of the spinner's popup window of choices in pixels. <br /><br />"
"android.widget.Spinner.getGravity () "," Describes how the selected item view is positioned. <br /><br />"
"android.widget.Spinner.setDropDownHorizontalOffset (int pixels) "," Set a horizontal offset in pixels for the spinner's popup window of choices. <br /><br />"
"android.widget.Spinner.setPrompt (CharSequence prompt) "," Sets the prompt to display when the dialog is shown. <br /><br />"
"android.widget.Spinner.setEnabled (boolean enabled) "," Set the enabled state of this view. <br /><br />"
"android.widget.Spinner.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.Spinner.onTouchEvent (MotionEvent event) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.widget.Spinner.setPromptId (int promptId) "," Sets the prompt to display when the dialog is shown. <br /><br />"
"android.widget.Spinner.setDropDownVerticalOffset (int pixels) "," Set a vertical offset in pixels for the spinner's popup window of choices. <br /><br />"
"android.widget.SpinnerAdapter.getDropDownView (int position, View convertView, ViewGroup parent) "," Get a View that displays in the drop down popup the data at the specified position in the data set. <br /><br />"
"android.widget.StackView.onGenericMotionEvent (MotionEvent event) "," Implement this method to handle generic motion events. <br /><br />"
"android.widget.StackView.showPrevious () "," Manually shows the previous child. <br /><br />"
"android.widget.StackView.performAccessibilityAction (int action, Bundle arguments) "," Performs the specified accessibility action on the view. <br /><br />"
"android.widget.StackView.advance () "," Called by an AppWidgetHost in order to advance the current view when it is being used within an app widget. <br /><br />"
"android.widget.StackView.onInterceptTouchEvent (MotionEvent ev) "," Implement this method to intercept all touch screen motion events. <br /><br />"
"android.widget.StackView.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.StackView.onTouchEvent (MotionEvent ev) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.widget.StackView.showNext () "," Manually shows the next child. <br /><br />"
"android.widget.StackView.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.Switch.toggle () "," Change the checked state of the view to the inverse of its current state <br /><br />"
"android.widget.Switch.setThumbResource (int resId) "," Set the drawable used for the switch 'thumb' - the piece that the user can physically touch and drag along the track. <br /><br />"
"android.widget.Switch.getSplitTrack () "," Returns whether the track should be split by the thumb. <br /><br />"
"android.widget.Switch.setChecked (boolean checked) "," Changes the checked state of this button. <br /><br />"
"android.widget.Switch.getTrackDrawable () "," Get the drawable used for the track that the switch slides within. <br /><br />"
"android.widget.Switch.setSwitchMinWidth (int pixels) "," Set the minimum width of the switch in pixels. <br /><br />"
"android.widget.Switch.getShowText () "," no description <br /><br />"
"android.widget.Switch.setThumbDrawable (Drawable thumb) "," Set the drawable used for the switch 'thumb' - the piece that the user can physically touch and drag along the track. <br /><br />"
"android.widget.Switch.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.Switch.getSwitchPadding () "," Get the amount of horizontal padding between the switch and the associated text. <br /><br />"
"android.widget.Switch.getTextOff () "," Returns the text displayed when the button is not in the checked state. <br /><br />"
"android.widget.Switch.getSwitchMinWidth () "," Get the minimum width of the switch in pixels. <br /><br />"
"android.widget.Switch.onMeasure (int widthMeasureSpec, int heightMeasureSpec) "," Measure the view and its content to determine the measured width and the measured height. <br /><br />"
"android.widget.Switch.setSplitTrack (boolean splitTrack) "," Specifies whether the track should be split by the thumb. <br /><br />"
"android.widget.Switch.setSwitchTypeface (Typeface tf, int style) "," Sets the typeface and style in which the text should be displayed on the switch, and turns on the fake bold and italic bits in the Paint if the Typeface that you provided does not have all the bits in the style that you specified. <br /><br />"
"android.widget.Switch.getTextOn () "," Returns the text displayed when the button is in the checked state. <br /><br />"
"android.widget.Switch.getCompoundPaddingRight () "," Returns the right padding of the view, plus space for the right Drawable if any. <br /><br />"
"android.widget.Switch.setTextOn (CharSequence textOn) "," Sets the text displayed when the button is in the checked state. <br /><br />"
"android.widget.Switch.setSwitchPadding (int pixels) "," Set the amount of horizontal padding between the switch and the associated text. <br /><br />"
"android.widget.Switch.onPopulateAccessibilityEvent (AccessibilityEvent event)   Called from dispatchPopulateAccessibilityEvent (AccessibilityEvent) "," Called from dispatchPopulateAccessibilityEvent(AccessibilityEvent) giving a chance to this View to populate the accessibility event with its text content. <br /><br />"
"android.widget.Switch.draw (Canvas c)   Manually render this view  (and all of its children) "," Manually render this view (and all of its children) to the given Canvas. <br /><br />"
"android.widget.Switch.setSwitchTextAppearance (Context context, int resid) "," Sets the switch text color, size, style, hint color, and highlight color from the specified TextAppearance resource. <br /><br />"
"android.widget.Switch.drawableHotspotChanged (float x, float y) "," This function is called whenever the view hotspot changes and needs to be propagated to drawables or child views managed by the view. <br /><br />"
"android.widget.Switch.setThumbTextPadding (int pixels) "," Set the horizontal padding around the text drawn on the switch itself. <br /><br />"
"android.widget.Switch.setTextOff (CharSequence textOff) "," Sets the text displayed when the button is not in the checked state. <br /><br />"
"android.widget.Switch.getThumbTextPadding () "," Get the horizontal padding around the text drawn on the switch itself. <br /><br />"
"android.widget.Switch.jumpDrawablesToCurrentState ()   Call Drawable.jumpToCurrentState () "," Call Drawable.jumpToCurrentState() on all Drawable objects associated with this view. <br /><br />"
"android.widget.Switch.getThumbDrawable () "," Get the drawable used for the switch 'thumb' - the piece that the user can physically touch and drag along the track. <br /><br />"
"android.widget.Switch.setTrackResource (int resId) "," Set the drawable used for the track that the switch slides within. <br /><br />"
"android.widget.Switch.setSwitchTypeface (Typeface tf) "," Sets the typeface in which the text should be displayed on the switch. <br /><br />"
"android.widget.Switch.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.Switch.getCompoundPaddingLeft () "," Returns the left padding of the view, plus space for the left Drawable if any. <br /><br />"
"android.widget.Switch.onTouchEvent (MotionEvent ev) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.widget.Switch.setTrackDrawable (Drawable track) "," Set the drawable used for the track that the switch slides within. <br /><br />"
"android.widget.Switch.setShowText (boolean showText) "," Sets whether the on/off text should be displayed. <br /><br />"
"android.widget.TabHost.dispatchKeyEvent (KeyEvent event) "," Dispatch a key event to the next view on the focus path. <br /><br />"
"android.widget.TabHost.addTab (TabHost.TabSpec tabSpec) "," Add a tab. <br /><br />"
"android.widget.TabHost.getTabContentView () "," Get the FrameLayout which holds tab content <br /><br />"
"android.widget.TabHost.getTabWidget () "," no description <br /><br />"
"android.widget.TabHost.setOnTabChangedListener (TabHost.OnTabChangeListener l) "," Register a callback to be invoked when the selected state of any of the items in this list changes <br /><br />"
"android.widget.TabHost.dispatchWindowFocusChanged (boolean hasFocus) "," Called when the window containing this view gains or loses window focus. <br /><br />"
"android.widget.TabHost.getCurrentTabTag () "," no description <br /><br />"
"android.widget.TabHost.getCurrentTab () "," no description <br /><br />"
"android.widget.TabHost.setCurrentTabByTag (String tag) "," no description <br /><br />"
"android.widget.TabHost.clearAllTabs () "," Removes all tabs from the tab widget associated with this tab host. <br /><br />"
"android.widget.TabHost.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.TabHost.onTouchModeChanged (boolean isInTouchMode) "," Callback method to be invoked when the touch mode changes. <br /><br />"
"android.widget.TabHost.setup (LocalActivityManager activityGroup)   If you are using setContent (android.content.Intent) "," If you are using setContent(android.content.Intent), this must be called since the activityGroup is needed to launch the local activity. <br /><br />"
"android.widget.TabHost.sendAccessibilityEvent (int eventType) "," Sends an accessibility event of the given type. <br /><br />"
"android.widget.TabHost.setup ()   Call setup () before adding tabs if loading TabHost using findViewById () "," Call setup() before adding tabs if loading TabHost using findViewById(). <br /><br />"
"android.widget.TabHost.getCurrentTabView () "," no description <br /><br />"
"android.widget.TabHost.newTabSpec (String tag) "," Get a new TabHost.TabSpec associated with this tab host. <br /><br />"
"android.widget.TabHost.getCurrentView () "," no description <br /><br />"
"android.widget.TabHost.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.TabHost.setCurrentTab (int index) "," no description <br /><br />"
"android.widget.TabHost.OnTabChangeListener.onTabChanged (String tabId) "," no description <br /><br />"
"android.widget.TabHost.TabContentFactory.createTabContent (String tag) "," Callback to make the tab contents <br /><br />"
"android.widget.TabHost.TabSpec.setContent (Intent intent) "," Specify an intent to use to launch an activity as the tab content. <br /><br />"
"android.widget.TabHost.TabSpec.setIndicator (CharSequence label) "," Specify a label as the tab indicator. <br /><br />"
"android.widget.TabHost.TabSpec.setContent (TabHost.TabContentFactory contentFactory) "," Specify a TabHost.TabContentFactory to use to create the content of the tab. <br /><br />"
"android.widget.TabHost.TabSpec.getTag () "," no description <br /><br />"
"android.widget.TabHost.TabSpec.setIndicator (CharSequence label, Drawable icon) "," Specify a label and icon as the tab indicator. <br /><br />"
"android.widget.TabHost.TabSpec.setIndicator (View view) "," Specify a view as the tab indicator. <br /><br />"
"android.widget.TabHost.TabSpec.setContent (int viewId) "," Specify the id of the view that should be used as the content of the tab. <br /><br />"
"android.widget.TableLayout.addView (View child, int index, ViewGroup.LayoutParams params) "," Adds a child view with the specified layout parameters. <br /><br />"
"android.widget.TableLayout.setStretchAllColumns (boolean stretchAllColumns) "," Convenience method to mark all columns as stretchable. <br /><br />"
"android.widget.TableLayout.addView (View child, ViewGroup.LayoutParams params) "," Adds a child view with the specified layout parameters. <br /><br />"
"android.widget.TableLayout.requestLayout () "," Call this when something has changed which has invalidated the layout of this view. <br /><br />"
"android.widget.TableLayout.isColumnStretchable (int columnIndex) "," Returns whether the specified column is stretchable or not. <br /><br />"
"android.widget.TableLayout.setColumnShrinkable (int columnIndex, boolean isShrinkable) "," Makes the given column shrinkable or not. <br /><br />"
"android.widget.TableLayout.isColumnCollapsed (int columnIndex) "," Returns the collapsed state of the specified column. <br /><br />"
"android.widget.TableLayout.addView (View child, int index) "," Adds a child view. <br /><br />"
"android.widget.TableLayout.setOnHierarchyChangeListener (ViewGroup.OnHierarchyChangeListener listener) "," Register a callback to be invoked when a child is added to or removed from this view. <br /><br />"
"android.widget.TableLayout.isColumnShrinkable (int columnIndex) "," Returns whether the specified column is shrinkable or not. <br /><br />"
"android.widget.TableLayout.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.TableLayout.addView (View child) "," Adds a child view. <br /><br />"
"android.widget.TableLayout.setColumnCollapsed (int columnIndex, boolean isCollapsed) "," Collapses or restores a given column. <br /><br />"
"android.widget.TableLayout.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.widget.TableLayout.setShrinkAllColumns (boolean shrinkAllColumns) "," Convenience method to mark all columns as shrinkable. <br /><br />"
"android.widget.TableLayout.setColumnStretchable (int columnIndex, boolean isStretchable) "," Makes the given column stretchable or not. <br /><br />"
"android.widget.TableLayout.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.TableLayout.isShrinkAllColumns () "," Indicates whether all columns are shrinkable or not. <br /><br />"
"android.widget.TableLayout.isStretchAllColumns () "," Indicates whether all columns are stretchable or not. <br /><br />"
"android.widget.TableRow.getVirtualChildCount () "," Returns the virtual number of children. <br /><br />"
"android.widget.TableRow.getVirtualChildAt (int i) "," Returns the view at the specified index. <br /><br />"
"android.widget.TableRow.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.widget.TableRow.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.TableRow.setOnHierarchyChangeListener (ViewGroup.OnHierarchyChangeListener listener) "," Register a callback to be invoked when a child is added to or removed from this view. <br /><br />"
"android.widget.TableRow.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.TabWidget.dispatchDraw (Canvas canvas) "," Called by draw to draw the child views. <br /><br />"
"android.widget.TabWidget.dispatchPopulateAccessibilityEvent (AccessibilityEvent event) "," Dispatches an AccessibilityEvent to the View first and then to its children for adding their text content to the event. <br /><br />"
"android.widget.TabWidget.getChildTabViewAt (int index) "," Returns the tab indicator view at the given index. <br /><br />"
"android.widget.TabWidget.getTabCount () "," Returns the number of tab indicator views. <br /><br />"
"android.widget.TabWidget.onFocusChange (View v, boolean hasFocus) "," Called when the focus state of a view has changed. <br /><br />"
"android.widget.TabWidget.focusCurrentTab (int index) "," Sets the current tab and focuses the UI on it. <br /><br />"
"android.widget.TabWidget.setRightStripDrawable (int resId) "," Sets the drawable to use as the right part of the strip below the tab indicators. <br /><br />"
"android.widget.TabWidget.setLeftStripDrawable (Drawable drawable) "," Sets the drawable to use as the left part of the strip below the tab indicators. <br /><br />"
"android.widget.TabWidget.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.TabWidget.addView (View child) "," Adds a child view. <br /><br />"
"android.widget.TabWidget.childDrawableStateChanged (View child)   If addStatesFromChildren () is true, refreshes this group's drawable state  (to include the states from its children) "," If addStatesFromChildren() is true, refreshes this group's drawable state (to include the states from its children). <br /><br />"
"android.widget.TabWidget.sendAccessibilityEventUnchecked (AccessibilityEvent event)   This method behaves exactly as sendAccessibilityEvent (int) "," This method behaves exactly as sendAccessibilityEvent(int) but takes as an argument an empty AccessibilityEvent and does not perform a check whether accessibility is enabled. <br /><br />"
"android.widget.TabWidget.setDividerDrawable (int resId) "," Sets the drawable to use as a divider between the tab indicators. <br /><br />"
"android.widget.TabWidget.setEnabled (boolean enabled) "," Set the enabled state of this view. <br /><br />"
"android.widget.TabWidget.removeAllViews () "," Call this method to remove all child views from the ViewGroup. <br /><br />"
"android.widget.TabWidget.setRightStripDrawable (Drawable drawable) "," Sets the drawable to use as the right part of the strip below the tab indicators. <br /><br />"
"android.widget.TabWidget.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.TabWidget.setStripEnabled (boolean stripEnabled) "," Controls whether the bottom strips on the tab indicators are drawn or not. <br /><br />"
"android.widget.TabWidget.setLeftStripDrawable (int resId) "," Sets the drawable to use as the left part of the strip below the tab indicators. <br /><br />"
"android.widget.TabWidget.isStripEnabled () "," Indicates whether the bottom strips on the tab indicators are drawn or not. <br /><br />"
"android.widget.TabWidget.setDividerDrawable (Drawable drawable) "," Sets the drawable to use as a divider between the tab indicators. <br /><br />"
"android.widget.TabWidget.setCurrentTab (int index) "," Sets the current tab. <br /><br />"
"android.widget.TextClock.setFormat24Hour (CharSequence format) "," Specifies the formatting pattern used to display the date and/or time in 24-hour mode. <br /><br />"
"android.widget.TextClock.getTimeZone () "," Indicates which time zone is currently used by this view. <br /><br />"
"android.widget.TextClock.setFormat12Hour (CharSequence format) "," Specifies the formatting pattern used to display the date and/or time in 12-hour mode. <br /><br />"
"android.widget.TextClock.setTimeZone (String timeZone) "," Sets the specified time zone to use in this clock. <br /><br />"
"android.widget.TextClock.is24HourModeEnabled () "," Indicates whether the system is currently using the 24-hour mode. <br /><br />"
"android.widget.TextClock.getFormat12Hour () "," Returns the formatting pattern used to display the date and/or time in 12-hour mode. <br /><br />"
"android.widget.TextClock.getFormat24Hour () "," Returns the formatting pattern used to display the date and/or time in 24-hour mode. <br /><br />"
"android.widget.TextSwitcher.addView (View child, int index, ViewGroup.LayoutParams params) "," Adds a child view with the specified layout parameters. <br /><br />"
"android.widget.TextSwitcher.setCurrentText (CharSequence text) "," Sets the text of the text view that is currently showing. <br /><br />"
"android.widget.TextSwitcher.setText (CharSequence text) "," Sets the text of the next view and switches to the next view. <br /><br />"
"android.widget.TextSwitcher.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.TextSwitcher.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.TextView.setText (CharSequence text) "," Sets the string value of the TextView. <br /><br />"
"android.widget.TextView.setText (int resid, TextView.BufferType type) "," no description <br /><br />"
"android.widget.TextView.setHintTextColor (ColorStateList colors) "," Sets the color of the hint text. <br /><br />"
"android.widget.TextView.onRtlPropertiesChanged (int layoutDirection)   Called when any RTL property  (layout direction or text direction or text alignment) "," Called when any RTL property (layout direction or text direction or text alignment) has been changed. <br /><br />"
"android.widget.TextView.setMovementMethod (MovementMethod movement)   Sets the movement method  (arrow key handler) "," Sets the movement method (arrow key handler) to be used for this TextView. <br /><br />"
"android.widget.TextView.getTextLocale () "," Get the default Locale of the text in this TextView. <br /><br />"
"android.widget.TextView.getCompoundDrawablesRelative () "," Returns drawables for the start, top, end, and bottom borders. <br /><br />"
"android.widget.TextView.setLinkTextColor (int color) "," Sets the color of links in the text. <br /><br />"
"android.widget.TextView.getEllipsize () "," Returns where, if anywhere, words that are longer than the view is wide should be ellipsized. <br /><br />"
"android.widget.TextView.setTextSize (int unit, float size) "," Set the default text size to a given unit and value. <br /><br />"
"android.widget.TextView.setLineSpacing (float add, float mult) "," Sets line spacing for this TextView. <br /><br />"
"android.widget.TextView.onPopulateAccessibilityEvent (AccessibilityEvent event)   Called from dispatchPopulateAccessibilityEvent (AccessibilityEvent) "," Called from dispatchPopulateAccessibilityEvent(AccessibilityEvent) giving a chance to this View to populate the accessibility event with its text content. <br /><br />"
"android.widget.TextView.getTextColors ()   Gets the text colors for the different states  (normal, selected, focused) "," Gets the text colors for the different states (normal, selected, focused) of the TextView. <br /><br />"
"android.widget.TextView.setAutoLinkMask (int mask) "," Sets the autolink mask of the text. <br /><br />"
"android.widget.TextView.setMarqueeRepeatLimit (int marqueeLimit) "," Sets how many times to repeat the marquee animation. <br /><br />"
"android.widget.TextView.getError ()   Returns the error message that was set to be displayed with setError (CharSequence) "," Returns the error message that was set to be displayed with setError(CharSequence), or null if no error was set or if it the error was cleared by the widget after user input. <br /><br />"
"android.widget.TextView.setCompoundDrawablesRelativeWithIntrinsicBounds (Drawable start, Drawable top, Drawable end, Drawable bottom)   Sets the Drawables  (if any) "," Sets the Drawables (if any) to appear to the start of, above, to the end of, and below the text. <br /><br />"
"android.widget.TextView.setLinkTextColor (ColorStateList colors) "," Sets the color of links in the text. <br /><br />"
"android.widget.TextView.getSelectionEnd ()   Convenience for getSelectionEnd (CharSequence) "," Convenience for getSelectionEnd(CharSequence). <br /><br />"
"android.widget.TextView.setFontFeatureSettings (String fontFeatureSettings) "," Sets font feature settings. <br /><br />"
"android.widget.TextView.jumpDrawablesToCurrentState ()   Call Drawable.jumpToCurrentState () "," Call Drawable.jumpToCurrentState() on all Drawable objects associated with this view. <br /><br />"
"android.widget.TextView.getFreezesText () "," Return whether this text view is including its entire text contents in frozen icicles. <br /><br />"
"android.widget.TextView.cancelLongPress () "," Cancels a pending long press. <br /><br />"
"android.widget.TextView.getLinksClickable ()   Returns whether the movement method will automatically be set to LinkMovementMethod if setAutoLinkMask (int) has been set to nonzero and links are detected in setText (char[], int, int) "," Returns whether the movement method will automatically be set to LinkMovementMethod if setAutoLinkMask(int) has been set to nonzero and links are detected in setText(char[], int, int). <br /><br />"
"android.widget.TextView.getFocusedRect (Rect r) "," When a view has focus and the user navigates away from it, the next view is searched for starting from the rectangle filled in by this method. <br /><br />"
"android.widget.TextView.isTextSelectable ()   Returns the state of the textIsSelectable flag  (See setTextIsSelectable ()) "," Returns the state of the textIsSelectable flag (See setTextIsSelectable()). <br /><br />"
"android.widget.TextView.findViewsWithText (ArrayList< View> outViews, CharSequence searched, int flags) "," Finds the Views that contain given text. <br /><br />"
"android.widget.TextView.setTextIsSelectable (boolean selectable) "," Sets whether the content of this view is selectable by the user. <br /><br />"
"android.widget.TextView.setShadowLayer (float radius, float dx, float dy, int color) "," Gives the text a shadow of the specified blur radius and color, the specified distance from its drawn position. <br /><br />"
"android.widget.TextView.setLetterSpacing (float letterSpacing) "," Sets text letter-spacing. <br /><br />"
"android.widget.TextView.getCompoundDrawables () "," Returns drawables for the left, top, right, and bottom borders. <br /><br />"
"android.widget.TextView.setLines (int lines) "," Makes the TextView exactly this many lines tall. <br /><br />"
"android.widget.TextView.setHint (int resid) "," Sets the text to be displayed when the text of the TextView is empty, from a resource. <br /><br />"
"android.widget.TextView.getSelectionStart ()   Convenience for getSelectionStart (CharSequence) "," Convenience for getSelectionStart(CharSequence). <br /><br />"
"android.widget.TextView.getTotalPaddingRight () "," Returns the total right padding of the view, including the right Drawable if any. <br /><br />"
"android.widget.TextView.setSingleLine (boolean singleLine)   If true, sets the properties of this field  (number of lines, horizontally scrolling, transformation method) "," If true, sets the properties of this field (number of lines, horizontally scrolling, transformation method) to be for a single-line input; if false, restores these to the default conditions. <br /><br />"
"android.widget.TextView.setEditableFactory (Editable.Factory factory) "," Sets the Factory used to create new Editables. <br /><br />"
"android.widget.TextView.setTypeface (Typeface tf) "," Sets the typeface and style in which the text should be displayed. <br /><br />"
"android.widget.TextView.getMinEms () "," no description <br /><br />"
"android.widget.TextView.setFreezesText (boolean freezesText) "," Control whether this text view saves its entire text contents when freezing to an icicle, in addition to dynamic state such as cursor position. <br /><br />"
"android.widget.TextView.onKeyMultiple (int keyCode, int repeatCount, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyMultiple (): always returns false  (doesn't handle the event) "," Default implementation of KeyEvent.Callback.onKeyMultiple(): always returns false (doesn't handle the event). <br /><br />"
"android.widget.TextView.setPrivateImeOptions (String type) "," Set the private content type of the text, which is the EditorInfo.privateImeOptions field that will be filled in when creating an input connection. <br /><br />"
"android.widget.TextView.setMinLines (int minlines) "," Makes the TextView at least this many lines tall. <br /><br />"
"android.widget.TextView.getLetterSpacing () "," no description <br /><br />"
"android.widget.TextView.getFilters () "," Returns the current list of input filters. <br /><br />"
"android.widget.TextView.append (CharSequence text, int start, int end) "," Convenience method: Append the specified text slice to the TextView's display buffer, upgrading it to BufferType.EDITABLE if it was not already editable. <br /><br />"
"android.widget.TextView.getCurrentHintTextColor () "," Return the current color selected to paint the hint text. <br /><br />"
"android.widget.TextView.computeScroll () "," Called by a parent to request that a child update its values for mScrollX and mScrollY if necessary. <br /><br />"
"android.widget.TextView.setSpannableFactory (Spannable.Factory factory) "," Sets the Factory used to create new Spannables. <br /><br />"
"android.widget.TextView.setCompoundDrawablePadding (int pad) "," Sets the size of the padding between the compound drawables and the text. <br /><br />"
"android.widget.TextView.setOnEditorActionListener (TextView.OnEditorActionListener l) "," Set a special listener to be called when an action is performed on the text view. <br /><br />"
"android.widget.TextView.setExtractedText (ExtractedText text)   Apply to this text view the given extracted text, as previously returned by extractText (ExtractedTextRequest, ExtractedText) "," Apply to this text view the given extracted text, as previously returned by extractText(ExtractedTextRequest, ExtractedText). <br /><br />"
"android.widget.TextView.getTotalPaddingEnd () "," Returns the total end padding of the view, including the end Drawable if any. <br /><br />"
"android.widget.TextView.getTotalPaddingLeft () "," Returns the total left padding of the view, including the left Drawable if any. <br /><br />"
"android.widget.TextView.getOffsetForPosition (float x, float y) "," Get the character offset closest to the specified absolute position. <br /><br />"
"android.widget.TextView.setShowSoftInputOnFocus (boolean show) "," Sets whether the soft input method will be made visible when this TextView gets focused. <br /><br />"
"android.widget.TextView.getCompoundDrawablePadding () "," Returns the padding between the compound drawables and the text. <br /><br />"
"android.widget.TextView.setEllipsize (TextUtils.TruncateAt where) "," Causes words in the text that are longer than the view is wide to be ellipsized instead of broken in the middle. <br /><br />"
"android.widget.TextView.getMaxEms () "," no description <br /><br />"
"android.widget.TextView.debug (int depth) "," Prints information about this view in the log output, with the tag VIEW_LOG_TAG. <br /><br />"
"android.widget.TextView.clearComposingText ()   Use BaseInputConnection.removeComposingSpans () "," Use BaseInputConnection.removeComposingSpans() to remove any IME composing state from this text view. <br /><br />"
"android.widget.TextView.getLineSpacingMultiplier () "," Gets the line spacing multiplier <br /><br />"
"android.widget.TextView.isSuggestionsEnabled () "," Return whether or not suggestions are enabled on this TextView. <br /><br />"
"android.widget.TextView.setError (CharSequence error, Drawable icon) "," Sets the right-hand compound drawable of the TextView to the specified icon and sets an error message that will be displayed in a popup when the TextView has focus. <br /><br />"
"android.widget.TextView.setEnabled (boolean enabled) "," Set the enabled state of this view. <br /><br />"
"android.widget.TextView.getCompoundPaddingStart () "," Returns the start padding of the view, plus space for the start Drawable if any. <br /><br />"
"android.widget.TextView.setCompoundDrawablesWithIntrinsicBounds (Drawable left, Drawable top, Drawable right, Drawable bottom)   Sets the Drawables  (if any) "," Sets the Drawables (if any) to appear to the left of, above, to the right of, and below the text. <br /><br />"
"android.widget.TextView.removeTextChangedListener (TextWatcher watcher) "," Removes the specified TextWatcher from the list of those whose methods are called whenever this TextView's text changes. <br /><br />"
"android.widget.TextView.setCompoundDrawablesWithIntrinsicBounds (int left, int top, int right, int bottom)   Sets the Drawables  (if any) "," Sets the Drawables (if any) to appear to the left of, above, to the right of, and below the text. <br /><br />"
"android.widget.TextView.setSelectAllOnFocus (boolean selectAllOnFocus) "," Set the TextView so that when it takes focus, all the text is selected. <br /><br />"
"android.widget.TextView.getImeActionLabel ()   Get the IME action label previous set with setImeActionLabel (CharSequence, int) "," Get the IME action label previous set with setImeActionLabel(CharSequence, int). <br /><br />"
"android.widget.TextView.didTouchFocusSelect () "," Returns true, only while processing a touch gesture, if the initial touch down event caused focus to move to the text view and as a result its selection changed. <br /><br />"
"android.widget.TextView.onTrackballEvent (MotionEvent event) "," Implement this method to handle trackball motion events. <br /><br />"
"android.widget.TextView.getTotalPaddingTop () "," Returns the total top padding of the view, including the top Drawable if any, the extra space to keep more than maxLines from showing, and the vertical offset for gravity, if any. <br /><br />"
"android.widget.TextView.setTypeface (Typeface tf, int style) "," Sets the typeface and style in which the text should be displayed, and turns on the fake bold and italic bits in the Paint if the Typeface that you provided does not have all the bits in the style that you specified. <br /><br />"
"android.widget.TextView.getPaint () "," no description <br /><br />"
"android.widget.TextView.setTextKeepState (CharSequence text)   Like setText (CharSequence), except that the cursor position  (if any) "," Like setText(CharSequence), except that the cursor position (if any) is retained in the new text. <br /><br />"
"android.widget.TextView.getGravity () "," Returns the horizontal and vertical alignment of this TextView. <br /><br />"
"android.widget.TextView.hasSelection () "," Return true iff there is a selection inside this text view. <br /><br />"
"android.widget.TextView.onFinishTemporaryDetach ()   Called after onStartTemporaryDetach () "," Called after onStartTemporaryDetach() when the container is done changing the view. <br /><br />"
"android.widget.TextView.endBatchEdit () "," no description <br /><br />"
"android.widget.TextView.setImeOptions (int imeOptions) "," Change the editor type integer associated with the text view, which will be reported to an IME with imeOptions when it has focus. <br /><br />"
"android.widget.TextView.getCustomSelectionActionModeCallback ()   Retrieves the value set in setCustomSelectionActionModeCallback (ActionMode.Callback) "," Retrieves the value set in setCustomSelectionActionModeCallback(ActionMode.Callback). <br /><br />"
"android.widget.TextView.getImeActionId ()   Get the IME action ID previous set with setImeActionLabel (CharSequence, int) "," Get the IME action ID previous set with setImeActionLabel(CharSequence, int). <br /><br />"
"android.widget.TextView.getExtendedPaddingTop () "," Returns the extended top padding of the view, including both the top Drawable if any and any extra space to keep more than maxLines of text from showing. <br /><br />"
"android.widget.TextView.getShadowDy () "," no description <br /><br />"
"android.widget.TextView.onDragEvent (DragEvent event)   Handles drag events sent by the system following a call to startDrag () "," Handles drag events sent by the system following a call to startDrag(). <br /><br />"
"android.widget.TextView.getPrivateImeOptions () "," Get the private type of the content. <br /><br />"
"android.widget.TextView.setSelected (boolean selected) "," Changes the selection state of this view. <br /><br />"
"android.widget.TextView.getShadowDx () "," no description <br /><br />"
"android.widget.TextView.getShadowColor () "," no description <br /><br />"
"android.widget.TextView.onTextContextMenuItem (int id) "," Called when a context menu option for the text view is selected. <br /><br />"
"android.widget.TextView.getMaxLines () "," no description <br /><br />"
"android.widget.TextView.onCommitCorrection (CorrectionInfo info)   Called by the framework in response to a text auto-correction  (such as fixing a typo using a a dictionnary) from the current input method, provided by it calling commitCorrection (CorrectionInfo) InputConnection.commitCorrection () "," Called by the framework in response to a text auto-correction (such as fixing a typo using a a dictionnary) from the current input method, provided by it calling commitCorrection(CorrectionInfo) InputConnection.commitCorrection()}. <br /><br />"
"android.widget.TextView.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.TextView.onSaveInstanceState () "," Hook allowing a view to generate a representation of its internal state that can later be used to create a new instance with that same state. <br /><br />"
"android.widget.TextView.onCheckIsTextEditor () "," Check whether the called view is a text editor, in which case it would make sense to automatically display a soft input window for it. <br /><br />"
"android.widget.TextView.sendAccessibilityEvent (int eventType) "," Sends an accessibility event of the given type. <br /><br />"
"android.widget.TextView.setImeActionLabel (CharSequence label, int actionId) "," Change the custom IME action associated with the text view, which will be reported to an IME with actionLabel and actionId when it has focus. <br /><br />"
"android.widget.TextView.setIncludeFontPadding (boolean includepad) "," Set whether the TextView includes extra top and bottom padding to make room for accents that go above the normal ascent and descent. <br /><br />"
"android.widget.TextView.getLineBounds (int line, Rect bounds)   Return the baseline for the specified line  (0...getLineCount () - 1) "," Return the baseline for the specified line (0...getLineCount() - 1) If bounds is not null, return the top, left, right, bottom extents of the specified line in it. <br /><br />"
"android.widget.TextView.getCompoundPaddingRight () "," Returns the right padding of the view, plus space for the right Drawable if any. <br /><br />"
"android.widget.TextView.getLineHeight () "," no description <br /><br />"
"android.widget.TextView.setText (char[] text, int start, int len) "," Sets the TextView to display the specified slice of the specified char array. <br /><br />"
"android.widget.TextView.onBeginBatchEdit ()   Called by the framework in response to a request to begin a batch of edit operations through a call to link beginBatchEdit () "," Called by the framework in response to a request to begin a batch of edit operations through a call to link beginBatchEdit(). <br /><br />"
"android.widget.TextView.setTextKeepState (CharSequence text, TextView.BufferType type)   Like setText (CharSequence, android.widget.TextView.BufferType), except that the cursor position  (if any) "," Like setText(CharSequence, android.widget.TextView.BufferType), except that the cursor position (if any) is retained in the new text. <br /><br />"
"android.widget.TextView.getExtendedPaddingBottom () "," Returns the extended bottom padding of the view, including both the bottom Drawable if any and any extra space to keep more than maxLines of text from showing. <br /><br />"
"android.widget.TextView.getShadowRadius () "," Gets the radius of the shadow layer. <br /><br />"
"android.widget.TextView.getBaseline () "," Return the offset of the widget's text baseline from the widget's top boundary. <br /><br />"
"android.widget.TextView.getIncludeFontPadding () "," Gets whether the TextView includes extra top and bottom padding to make room for accents that go above the normal ascent and descent. <br /><br />"
"android.widget.TextView.onKeyShortcut (int keyCode, KeyEvent event) "," Called on the focused view when a key shortcut event is not handled. <br /><br />"
"android.widget.TextView.setFilters (InputFilter[] filters) "," Sets the list of input filters that will be used if the buffer is Editable. <br /><br />"
"android.widget.TextView.setHighlightColor (int color) "," Sets the color used to display the selection highlight. <br /><br />"
"android.widget.TextView.getTypeface () "," no description <br /><br />"
"android.widget.TextView.setCustomSelectionActionModeCallback (ActionMode.Callback actionModeCallback) "," If provided, this ActionMode.Callback will be used to create the ActionMode when text selection is initiated in this View. <br /><br />"
"android.widget.TextView.setText (int resid) "," no description <br /><br />"
"android.widget.TextView.onRestoreInstanceState (Parcelable state)   Hook allowing a view to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState () "," Hook allowing a view to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState(). <br /><br />"
"android.widget.TextView.getCompoundPaddingBottom () "," Returns the bottom padding of the view, plus space for the bottom Drawable if any. <br /><br />"
"android.widget.TextView.setTextAppearance (Context context, int resid) "," Sets the text color, size, style, hint color, and highlight color from the specified TextAppearance resource. <br /><br />"
"android.widget.TextView.setTransformationMethod (TransformationMethod method) "," Sets the transformation that is applied to the text that this TextView is displaying. <br /><br />"
"android.widget.TextView.setCompoundDrawables (Drawable left, Drawable top, Drawable right, Drawable bottom)   Sets the Drawables  (if any) "," Sets the Drawables (if any) to appear to the left of, above, to the right of, and below the text. <br /><br />"
"android.widget.TextView.extractText (ExtractedTextRequest request, ExtractedText outText) "," If this TextView contains editable content, extract a portion of it based on the information in request in to outText. <br /><br />"
"android.widget.TextView.getMaxWidth () "," no description <br /><br />"
"android.widget.TextView.getHintTextColors () "," no description <br /><br />"
"android.widget.TextView.onCreateInputConnection (EditorInfo outAttrs) "," Create a new InputConnection for an InputMethod to interact with the view. <br /><br />"
"android.widget.TextView.setCursorVisible (boolean visible) "," Set whether the cursor is visible. <br /><br />"
"android.widget.TextView.hasOverlappingRendering () "," Returns whether this View has content which overlaps. <br /><br />"
"android.widget.TextView.setHeight (int pixels) "," Makes the TextView exactly this many pixels tall. <br /><br />"
"android.widget.TextView.performLongClick () "," Call this view's OnLongClickListener, if it is defined. <br /><br />"
"android.widget.TextView.onPrivateIMECommand (String action, Bundle data)   Called by the framework in response to a private command from the current method, provided by it calling InputConnection.performPrivateCommand () "," Called by the framework in response to a private command from the current method, provided by it calling InputConnection.performPrivateCommand(). <br /><br />"
"android.widget.TextView.setScroller (Scroller s) "," no description <br /><br />"
"android.widget.TextView.getShowSoftInputOnFocus () "," Returns whether the soft input method will be made visible when this TextView gets focused. <br /><br />"
"android.widget.TextView.beginBatchEdit () "," no description <br /><br />"
"android.widget.TextView.setTextLocale (Locale locale) "," Set the default Locale of the text in this TextView to the given value. <br /><br />"
"android.widget.TextView.addTextChangedListener (TextWatcher watcher) "," Adds a TextWatcher to the list of those whose methods are called whenever this TextView's text changes. <br /><br />"
"android.widget.TextView.length () "," Returns the length, in characters, of the text managed by this TextView <br /><br />"
"android.widget.TextView.setMaxHeight (int maxHeight) "," Makes the TextView at most this many pixels tall. <br /><br />"
"android.widget.TextView.invalidateDrawable (Drawable drawable) "," Invalidates the specified Drawable. <br /><br />"
"android.widget.TextView.getCompoundPaddingTop () "," Returns the top padding of the view, plus space for the top Drawable if any. <br /><br />"
"android.widget.TextView.getInputExtras (boolean create) "," Retrieve the input extras currently associated with the text view, which can be viewed as well as modified. <br /><br />"
"android.widget.TextView.setMaxLines (int maxlines) "," Makes the TextView at most this many lines tall. <br /><br />"
"android.widget.TextView.setLinksClickable (boolean whether)   Sets whether the movement method will automatically be set to LinkMovementMethod if setAutoLinkMask (int) has been set to nonzero and links are detected in setText (char[], int, int) "," Sets whether the movement method will automatically be set to LinkMovementMethod if setAutoLinkMask(int) has been set to nonzero and links are detected in setText(char[], int, int). <br /><br />"
"android.widget.TextView.getLineSpacingExtra () "," Gets the line spacing extra space <br /><br />"
"android.widget.TextView.getEditableText () "," Return the text the TextView is displaying as an Editable object. <br /><br />"
"android.widget.TextView.setHintTextColor (int color)   Sets the color of the hint text for all the states  (disabled, focussed, selected...) "," Sets the color of the hint text for all the states (disabled, focussed, selected...) of this TextView. <br /><br />"
"android.widget.TextView.getKeyListener () "," no description <br /><br />"
"android.widget.TextView.setPadding (int left, int top, int right, int bottom) "," Sets the padding. <br /><br />"
"android.widget.TextView.getLayout () "," no description <br /><br />"
"android.widget.TextView.setMinEms (int minems) "," Makes the TextView at least this many ems wide <br /><br />"
"android.widget.TextView.onCommitCompletion (CompletionInfo text)   Called by the framework in response to a text completion from the current input method, provided by it calling InputConnection.commitCompletion () "," Called by the framework in response to a text completion from the current input method, provided by it calling InputConnection.commitCompletion(). <br /><br />"
"android.widget.TextView.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.TextView.getMarqueeRepeatLimit () "," Gets the number of times the marquee animation is repeated. <br /><br />"
"android.widget.TextView.setEms (int ems) "," Makes the TextView exactly this many ems wide <br /><br />"
"android.widget.TextView.getPaintFlags () "," no description <br /><br />"
"android.widget.TextView.setMinWidth (int minpixels) "," Makes the TextView at least this many pixels wide <br /><br />"
"android.widget.TextView.getTransformationMethod () "," no description <br /><br />"
"android.widget.TextView.append (CharSequence text) "," Convenience method: Append the specified text to the TextView's display buffer, upgrading it to BufferType.EDITABLE if it was not already editable. <br /><br />"
"android.widget.TextView.setText (CharSequence text, TextView.BufferType type)   Sets the text that this TextView is to display  (see setText (CharSequence)) "," Sets the text that this TextView is to display (see setText(CharSequence)) and also sets whether it is stored in a styleable/spannable buffer and whether it is editable. <br /><br />"
"android.widget.TextView.setMinHeight (int minHeight) "," Makes the TextView at least this many pixels tall. <br /><br />"
"android.widget.TextView.onEditorAction (int actionCode)   Called when an attached input method calls InputConnection.performEditorAction () "," Called when an attached input method calls InputConnection.performEditorAction() for this text view. <br /><br />"
"android.widget.TextView.getUrls ()   Returns the list of URLSpans attached to the text  (by Linkify or otherwise) "," Returns the list of URLSpans attached to the text (by Linkify or otherwise) if any. <br /><br />"
"android.widget.TextView.getLinkTextColors () "," no description <br /><br />"
"android.widget.TextView.onWindowFocusChanged (boolean hasWindowFocus) "," Called when the window containing this view gains or loses focus. <br /><br />"
"android.widget.TextView.getAutoLinkMask () "," Gets the autolink mask of the text. <br /><br />"
"android.widget.TextView.getMinWidth () "," no description <br /><br />"
"android.widget.TextView.getFontFeatureSettings () "," no description <br /><br />"
"android.widget.TextView.setMaxEms (int maxems) "," Makes the TextView at most this many ems wide <br /><br />"
"android.widget.TextView.setAllCaps (boolean allCaps) "," Sets the properties of this field to transform input to ALL CAPS display. <br /><br />"
"android.widget.TextView.getCompoundPaddingEnd () "," Returns the end padding of the view, plus space for the end Drawable if any. <br /><br />"
"android.widget.TextView.getMinHeight () "," no description <br /><br />"
"android.widget.TextView.drawableHotspotChanged (float x, float y) "," This function is called whenever the view hotspot changes and needs to be propagated to drawables or child views managed by the view. <br /><br />"
"android.widget.TextView.isInputMethodTarget () "," Returns whether this text view is a current input method target. <br /><br />"
"android.widget.TextView.moveCursorToVisibleOffset () "," Move the cursor, if needed, so that it is at an offset that is visible to the user. <br /><br />"
"android.widget.TextView.onKeyDown (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyDown () "," Default implementation of KeyEvent.Callback.onKeyDown(): perform press of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released, if the view is enabled and clickable. <br /><br />"
"android.widget.TextView.getMaxHeight () "," no description <br /><br />"
"android.widget.TextView.setKeyListener (KeyListener input) "," Sets the key listener to be used with this TextView. <br /><br />"
"android.widget.TextView.onGenericMotionEvent (MotionEvent event) "," Implement this method to handle generic motion events. <br /><br />"
"android.widget.TextView.setHint (CharSequence hint) "," Sets the text to be displayed when the text of the TextView is empty. <br /><br />"
"android.widget.TextView.setCompoundDrawablesRelative (Drawable start, Drawable top, Drawable end, Drawable bottom)   Sets the Drawables  (if any) "," Sets the Drawables (if any) to appear to the start of, above, to the end of, and below the text. <br /><br />"
"android.widget.TextView.setElegantTextHeight (boolean elegant) "," Set the TextView's elegant height metrics flag. <br /><br />"
"android.widget.TextView.setRawInputType (int type) "," Directly change the content type integer of the text view, without modifying any other state. <br /><br />"
"android.widget.TextView.setTextScaleX (float size) "," Sets the extent by which text should be stretched horizontally. <br /><br />"
"android.widget.TextView.getHighlightColor () "," no description <br /><br />"
"android.widget.TextView.setTextSize (float size) "," Set the default text size to the given value, interpreted as 'scaled pixel' units. <br /><br />"
"android.widget.TextView.getTextSize () "," no description <br /><br />"
"android.widget.TextView.getInputType () "," Get the type of the editable content. <br /><br />"
"android.widget.TextView.bringPointIntoView (int offset) "," Move the point, specified by the offset, into the view if it is needed. <br /><br />"
"android.widget.TextView.setMaxWidth (int maxpixels) "," Makes the TextView at most this many pixels wide <br /><br />"
"android.widget.TextView.getTotalPaddingBottom () "," Returns the total bottom padding of the view, including the bottom Drawable if any, the extra space to keep more than maxLines from showing, and the vertical offset for gravity, if any. <br /><br />"
"android.widget.TextView.getMovementMethod () "," no description <br /><br />"
"android.widget.TextView.getTextScaleX () "," no description <br /><br />"
"android.widget.TextView.getImeOptions () "," Get the type of the IME editor. <br /><br />"
"android.widget.TextView.setInputExtras (int xmlResId) "," Set the extra input data of the text, which is the TextBoxAttribute.extras Bundle that will be filled in when creating an input connection. <br /><br />"
"android.widget.TextView.onPreDraw () "," Callback method to be invoked when the view tree is about to be drawn. <br /><br />"
"android.widget.TextView.setHorizontallyScrolling (boolean whether) "," Sets whether the text should be allowed to be wider than the View is. <br /><br />"
"android.widget.TextView.getHint () "," Returns the hint that is displayed when the text of the TextView is empty. <br /><br />"
"android.widget.TextView.setGravity (int gravity) "," Sets the horizontal alignment of the text and the vertical gravity that will be used when there is extra space in the TextView beyond what is required for the text itself. <br /><br />"
"android.widget.TextView.getMinLines () "," no description <br /><br />"
"android.widget.TextView.setError (CharSequence error) "," Sets the right-hand compound drawable of the TextView to the 'error' icon and sets an error message that will be displayed in a popup when the TextView has focus. <br /><br />"
"android.widget.TextView.setPaintFlags (int flags) "," Sets flags on the Paint being used to display the text and reflows the text if they are different from the old flags. <br /><br />"
"android.widget.TextView.setTextColor (ColorStateList colors) "," Sets the text color. <br /><br />"
"android.widget.TextView.onTouchEvent (MotionEvent event) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.widget.TextView.setTextColor (int color)   Sets the text color for all the states  (normal, selected, focused) "," Sets the text color for all the states (normal, selected, focused) to be this color. <br /><br />"
"android.widget.TextView.onStartTemporaryDetach ()   This is called when a container is going to temporarily detach a child, with "," This is called when a container is going to temporarily detach a child, with ViewGroup.detachViewFromParent. <br /><br />"
"android.widget.TextView.setInputType (int type) "," Set the type of the content with a constant as defined for inputType. <br /><br />"
"android.widget.TextView.setPaddingRelative (int start, int top, int end, int bottom) "," Sets the relative padding. <br /><br />"
"android.widget.TextView.onKeyUp (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyUp () "," Default implementation of KeyEvent.Callback.onKeyUp(): perform clicking of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released. <br /><br />"
"android.widget.TextView.getText () "," Return the text the TextView is displaying. <br /><br />"
"android.widget.TextView.getLineCount () "," Return the number of lines of text, or 0 if the internal Layout has not been built. <br /><br />"
"android.widget.TextView.setSingleLine ()   Sets the properties of this field  (lines, horizontally scrolling, transformation method) "," Sets the properties of this field (lines, horizontally scrolling, transformation method) to be for a single-line input. <br /><br />"
"android.widget.TextView.setWidth (int pixels) "," Makes the TextView exactly this many pixels wide. <br /><br />"
"android.widget.TextView.isCursorVisible () "," no description <br /><br />"
"android.widget.TextView.onScreenStateChanged (int screenState) "," This method is called whenever the state of the screen this view is attached to changes. <br /><br />"
"android.widget.TextView.onEndBatchEdit ()   Called by the framework in response to a request to end a batch of edit operations through a call to link endBatchEdit () "," Called by the framework in response to a request to end a batch of edit operations through a call to link endBatchEdit(). <br /><br />"
"android.widget.TextView.getTotalPaddingStart () "," Returns the total start padding of the view, including the start Drawable if any. <br /><br />"
"android.widget.TextView.setCompoundDrawablesRelativeWithIntrinsicBounds (int start, int top, int end, int bottom)   Sets the Drawables  (if any) "," Sets the Drawables (if any) to appear to the start of, above, to the end of, and below the text. <br /><br />"
"android.widget.TextView.getCompoundPaddingLeft () "," Returns the left padding of the view, plus space for the left Drawable if any. <br /><br />"
"android.widget.TextView.getCurrentTextColor () "," Return the current color selected for normal text. <br /><br />"
"android.widget.TextView.onKeyPreIme (int keyCode, KeyEvent event) "," Handle a key event before it is processed by any input method associated with the view hierarchy. <br /><br />"
"android.widget.TextView.OnEditorActionListener.onEditorAction (TextView v, int actionId, KeyEvent event) "," Called when an action is being performed. <br /><br />"
"android.widget.TextView.SavedState.writeToParcel (Parcel out, int flags) "," Flatten this object in to a Parcel. <br /><br />"
"android.widget.TextView.SavedState.toString () "," Returns a string containing a concise, human-readable description of this object. <br /><br />"
"android.widget.TimePicker.onPopulateAccessibilityEvent (AccessibilityEvent event)   Called from dispatchPopulateAccessibilityEvent (AccessibilityEvent) "," Called from dispatchPopulateAccessibilityEvent(AccessibilityEvent) giving a chance to this View to populate the accessibility event with its text content. <br /><br />"
"android.widget.TimePicker.is24HourView () "," no description <br /><br />"
"android.widget.TimePicker.dispatchPopulateAccessibilityEvent (AccessibilityEvent event) "," Dispatches an AccessibilityEvent to the View first and then to its children for adding their text content to the event. <br /><br />"
"android.widget.TimePicker.getBaseline () "," Return the offset of the widget's text baseline from the widget's top boundary. <br /><br />"
"android.widget.TimePicker.getCurrentMinute () "," no description <br /><br />"
"android.widget.TimePicker.setIs24HourView (Boolean is24HourView) "," Set whether in 24 hour or AM/PM mode. <br /><br />"
"android.widget.TimePicker.getCurrentHour () "," no description <br /><br />"
"android.widget.TimePicker.setOnTimeChangedListener (TimePicker.OnTimeChangedListener onTimeChangedListener) "," Set the callback that indicates the time has been adjusted by the user. <br /><br />"
"android.widget.TimePicker.setCurrentMinute (Integer currentMinute)   Set the current minute  (0-59) "," Set the current minute (0-59). <br /><br />"
"android.widget.TimePicker.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.TimePicker.setCurrentHour (Integer currentHour) "," Set the current hour. <br /><br />"
"android.widget.TimePicker.isEnabled () "," Returns the enabled status for this view. <br /><br />"
"android.widget.TimePicker.setEnabled (boolean enabled) "," Set the enabled state of this view. <br /><br />"
"android.widget.TimePicker.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.TimePicker.OnTimeChangedListener.onTimeChanged (TimePicker view, int hourOfDay, int minute) "," no description <br /><br />"
"android.widget.Toast.setGravity (int gravity, int xOffset, int yOffset) "," Set the location at which the notification should appear on the screen. <br /><br />"
"android.widget.Toast.setText (int resId)   Update the text in a Toast that was previously created using one of the makeText () "," Update the text in a Toast that was previously created using one of the makeText() methods. <br /><br />"
"android.widget.Toast.getView () "," Return the view. <br /><br />"
"android.widget.Toast.setText (CharSequence s)   Update the text in a Toast that was previously created using one of the makeText () "," Update the text in a Toast that was previously created using one of the makeText() methods. <br /><br />"
"android.widget.Toast.getYOffset () "," Return the Y offset in pixels to apply to the gravity's location. <br /><br />"
"android.widget.Toast.setMargin (float horizontalMargin, float verticalMargin) "," Set the margins of the view. <br /><br />"
"android.widget.Toast.setDuration (int duration) "," Set how long to show the view for. <br /><br />"
"android.widget.Toast.setView (View view) "," Set the view to show. <br /><br />"
"android.widget.Toast.makeText (Context context, CharSequence text, int duration) "," Make a standard toast that just contains a text view. <br /><br />"
"android.widget.Toast.show () "," Show the view for the specified duration. <br /><br />"
"android.widget.Toast.getHorizontalMargin () "," Return the horizontal margin. <br /><br />"
"android.widget.Toast.getGravity () "," Get the location at which the notification should appear on the screen. <br /><br />"
"android.widget.Toast.cancel () "," Close the view if it's showing, or don't show it if it isn't showing yet. <br /><br />"
"android.widget.Toast.getXOffset () "," Return the X offset in pixels to apply to the gravity's location. <br /><br />"
"android.widget.Toast.getVerticalMargin () "," Return the vertical margin. <br /><br />"
"android.widget.Toast.makeText (Context context, int resId, int duration) "," Make a standard toast that just contains a text view with the text from a resource. <br /><br />"
"android.widget.Toast.getDuration () "," Return the duration. <br /><br />"
"android.widget.ToggleButton.setChecked (boolean checked) "," Changes the checked state of this button. <br /><br />"
"android.widget.ToggleButton.getTextOff () "," Returns the text for when the button is not in the checked state. <br /><br />"
"android.widget.ToggleButton.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.ToggleButton.setTextOff (CharSequence textOff) "," Sets the text for when the button is not in the checked state. <br /><br />"
"android.widget.ToggleButton.getTextOn () "," Returns the text for when the button is in the checked state. <br /><br />"
"android.widget.ToggleButton.setTextOn (CharSequence textOn) "," Sets the text for when the button is in the checked state. <br /><br />"
"android.widget.ToggleButton.setBackgroundDrawable (Drawable d)    This method is deprecated. use setBackground (Drawable) "," This method is deprecated. use setBackground(Drawable) instead <br /><br />"
"android.widget.ToggleButton.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.Toolbar.getPopupTheme () "," no description <br /><br />"
"android.widget.Toolbar.setLogo (Drawable drawable) "," Set a logo drawable. <br /><br />"
"android.widget.Toolbar.dismissPopupMenus () "," Dismiss all currently showing popup menus, including overflow or submenus. <br /><br />"
"android.widget.Toolbar.setLogoDescription (int resId) "," Set a description of the toolbar's logo. <br /><br />"
"android.widget.Toolbar.getMenu () "," Return the Menu shown in the toolbar. <br /><br />"
"android.widget.Toolbar.getNavigationIcon () "," Return the current drawable used as the navigation icon. <br /><br />"
"android.widget.Toolbar.setSubtitle (int resId) "," Set the subtitle of this toolbar. <br /><br />"
"android.widget.Toolbar.onRtlPropertiesChanged (int layoutDirection)   Called when any RTL property  (layout direction or text direction or text alignment) "," Called when any RTL property (layout direction or text direction or text alignment) has been changed. <br /><br />"
"android.widget.Toolbar.setSubtitle (CharSequence subtitle) "," Set the subtitle of this toolbar. <br /><br />"
"android.widget.Toolbar.setTitle (int resId) "," Set the title of this toolbar. <br /><br />"
"android.widget.Toolbar.setNavigationIcon (int resId) "," Set the icon to use for the toolbar's navigation button. <br /><br />"
"android.widget.Toolbar.getSubtitle () "," Return the subtitle of this toolbar. <br /><br />"
"android.widget.Toolbar.setTitleTextAppearance (Context context, int resId) "," Sets the text color, size, style, hint color, and highlight color from the specified TextAppearance resource. <br /><br />"
"android.widget.Toolbar.getContentInsetStart () "," Get the starting content inset for this toolbar. <br /><br />"
"android.widget.Toolbar.hideOverflowMenu () "," Hide the overflow items from the associated menu. <br /><br />"
"android.widget.Toolbar.setLogo (int resId) "," Set a logo drawable from a resource id. <br /><br />"
"android.widget.Toolbar.setSubtitleTextAppearance (Context context, int resId) "," Sets the text color, size, style, hint color, and highlight color from the specified TextAppearance resource. <br /><br />"
"android.widget.Toolbar.getTitle () "," Returns the title of this toolbar. <br /><br />"
"android.widget.Toolbar.setOnMenuItemClickListener (Toolbar.OnMenuItemClickListener listener) "," Set a listener to respond to menu item click events. <br /><br />"
"android.widget.Toolbar.setNavigationIcon (Drawable icon) "," Set the icon to use for the toolbar's navigation button. <br /><br />"
"android.widget.Toolbar.setNavigationContentDescription (int resId) "," Set a content description for the navigation button if one is present. <br /><br />"
"android.widget.Toolbar.showOverflowMenu () "," Show the overflow items from the associated menu. <br /><br />"
"android.widget.Toolbar.getLogo () "," Return the current logo drawable. <br /><br />"
"android.widget.Toolbar.setPopupTheme (int resId) "," Specifies the theme to use when inflating popup menus. <br /><br />"
"android.widget.Toolbar.getContentInsetRight () "," Get the right content inset for this toolbar. <br /><br />"
"android.widget.Toolbar.setContentInsetsAbsolute (int contentInsetLeft, int contentInsetRight) "," Set the content insets for this toolbar. <br /><br />"
"android.widget.Toolbar.getLogoDescription () "," Return the description of the toolbar's logo. <br /><br />"
"android.widget.Toolbar.setNavigationContentDescription (CharSequence description) "," Set a content description for the navigation button if one is present. <br /><br />"
"android.widget.Toolbar.setSubtitleTextColor (int color) "," Sets the text color of the subtitle, if present. <br /><br />"
"android.widget.Toolbar.getContentInsetEnd () "," Get the ending content inset for this toolbar. <br /><br />"
"android.widget.Toolbar.isOverflowMenuShowing () "," Check whether the overflow menu is currently showing. <br /><br />"
"android.widget.Toolbar.getContentInsetLeft () "," Get the left content inset for this toolbar. <br /><br />"
"android.widget.Toolbar.collapseActionView () "," Collapse a currently expanded action view. <br /><br />"
"android.widget.Toolbar.setNavigationOnClickListener (View.OnClickListener listener) "," Set a listener to respond to navigation events. <br /><br />"
"android.widget.Toolbar.setContentInsetsRelative (int contentInsetStart, int contentInsetEnd) "," Set the content insets for this toolbar relative to layout direction. <br /><br />"
"android.widget.Toolbar.generateLayoutParams (AttributeSet attrs) "," Returns a new set of layout parameters based on the supplied attributes set. <br /><br />"
"android.widget.Toolbar.setTitleTextColor (int color) "," Sets the text color of the title, if present. <br /><br />"
"android.widget.Toolbar.onTouchEvent (MotionEvent ev) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.widget.Toolbar.setTitle (CharSequence title) "," Set the title of this toolbar. <br /><br />"
"android.widget.Toolbar.hasExpandedActionView () "," Check whether this Toolbar is currently hosting an expanded action view. <br /><br />"
"android.widget.Toolbar.setLogoDescription (CharSequence description) "," Set a description of the toolbar's logo. <br /><br />"
"android.widget.Toolbar.getNavigationContentDescription () "," Retrieve the currently configured content description for the navigation button view. <br /><br />"
"android.widget.Toolbar.inflateMenu (int resId) "," Inflate a menu resource into this toolbar. <br /><br />"
"android.widget.Toolbar.OnMenuItemClickListener.onMenuItemClick (MenuItem item) "," This method will be invoked when a menu item is clicked if the item itself did not already handle the event. <br /><br />"
"android.widget.TwoLineListItem.getText2 () "," Returns a handle to the item with ID text2. <br /><br />"
"android.widget.TwoLineListItem.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.TwoLineListItem.getText1 () "," Returns a handle to the item with ID text1. <br /><br />"
"android.widget.TwoLineListItem.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.VideoView.setMediaController (MediaController controller) "," no description <br /><br />"
"android.widget.VideoView.setVideoPath (String path) "," Sets video path. <br /><br />"
"android.widget.VideoView.setOnInfoListener (MediaPlayer.OnInfoListener l) "," Register a callback to be invoked when an informational event occurs during playback or setup. <br /><br />"
"android.widget.VideoView.setOnCompletionListener (MediaPlayer.OnCompletionListener l) "," Register a callback to be invoked when the end of a media file has been reached during playback. <br /><br />"
"android.widget.VideoView.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.VideoView.isPlaying () "," no description <br /><br />"
"android.widget.VideoView.canSeekForward () "," no description <br /><br />"
"android.widget.VideoView.onTrackballEvent (MotionEvent ev) "," Implement this method to handle trackball motion events. <br /><br />"
"android.widget.VideoView.resume () "," no description <br /><br />"
"android.widget.VideoView.setOnErrorListener (MediaPlayer.OnErrorListener l) "," Register a callback to be invoked when an error occurs during playback or setup. <br /><br />"
"android.widget.VideoView.setVideoURI (Uri uri) "," Sets video URI. <br /><br />"
"android.widget.VideoView.canSeekBackward () "," no description <br /><br />"
"android.widget.VideoView.getDuration () "," no description <br /><br />"
"android.widget.VideoView.suspend () "," no description <br /><br />"
"android.widget.VideoView.getBufferPercentage () "," no description <br /><br />"
"android.widget.VideoView.setOnPreparedListener (MediaPlayer.OnPreparedListener l) "," Register a callback to be invoked when the media file is loaded and ready to go. <br /><br />"
"android.widget.VideoView.start () "," no description <br /><br />"
"android.widget.VideoView.onKeyDown (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyDown () "," Default implementation of KeyEvent.Callback.onKeyDown(): perform press of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released, if the view is enabled and clickable. <br /><br />"
"android.widget.VideoView.draw (Canvas canvas)   Manually render this view  (and all of its children) "," Manually render this view (and all of its children) to the given Canvas. <br /><br />"
"android.widget.VideoView.seekTo (int msec) "," no description <br /><br />"
"android.widget.VideoView.setVideoURI (Uri uri, Map< String,  String> headers) "," Sets video URI using specific headers. <br /><br />"
"android.widget.VideoView.stopPlayback () "," no description <br /><br />"
"android.widget.VideoView.resolveAdjustedSize (int desiredSize, int measureSpec) "," no description <br /><br />"
"android.widget.VideoView.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.VideoView.getCurrentPosition () "," no description <br /><br />"
"android.widget.VideoView.canPause () "," no description <br /><br />"
"android.widget.VideoView.addSubtitleSource (InputStream is, MediaFormat format)   Adds an external subtitle source file  (from the provided input stream.) "," Adds an external subtitle source file (from the provided input stream.) Note that a single external subtitle source may contain multiple or no supported tracks in it. <br /><br />"
"android.widget.VideoView.onTouchEvent (MotionEvent ev) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.widget.VideoView.getAudioSessionId () "," Get the audio session id for the player used by this VideoView. <br /><br />"
"android.widget.VideoView.pause () "," no description <br /><br />"
"android.widget.ViewAnimator.addView (View child, int index, ViewGroup.LayoutParams params) "," Adds a child view with the specified layout parameters. <br /><br />"
"android.widget.ViewAnimator.setAnimateFirstView (boolean animate) "," Indicates whether the current View should be animated the first time the ViewAnimator is displayed. <br /><br />"
"android.widget.ViewAnimator.showPrevious () "," Manually shows the previous child. <br /><br />"
"android.widget.ViewAnimator.getAnimateFirstView () "," Returns whether the current View should be animated the first time the ViewAnimator is displayed. <br /><br />"
"android.widget.ViewAnimator.setOutAnimation (Context context, int resourceID) "," Specifies the animation used to animate a View that exit the screen. <br /><br />"
"android.widget.ViewAnimator.getBaseline () "," Return the offset of the widget's text baseline from the widget's top boundary. <br /><br />"
"android.widget.ViewAnimator.removeViewInLayout (View view) "," Removes a view during layout. <br /><br />"
"android.widget.ViewAnimator.removeViews (int start, int count) "," Removes the specified range of views from the group. <br /><br />"
"android.widget.ViewAnimator.setOutAnimation (Animation outAnimation) "," Specifies the animation used to animate a View that exit the screen. <br /><br />"
"android.widget.ViewAnimator.removeViewAt (int index) "," Removes the view at the specified position in the group. <br /><br />"
"android.widget.ViewAnimator.removeView (View view)   Note: do not invoke this method from draw (android.graphics.Canvas), onDraw (android.graphics.Canvas), dispatchDraw (android.graphics.Canvas) "," Note: do not invoke this method from draw(android.graphics.Canvas), onDraw(android.graphics.Canvas), dispatchDraw(android.graphics.Canvas) or any related method. <br /><br />"
"android.widget.ViewAnimator.getInAnimation () "," Returns the current animation used to animate a View that enters the screen. <br /><br />"
"android.widget.ViewAnimator.setInAnimation (Context context, int resourceID) "," Specifies the animation used to animate a View that enters the screen. <br /><br />"
"android.widget.ViewAnimator.removeViewsInLayout (int start, int count) "," Removes a range of views during layout. <br /><br />"
"android.widget.ViewAnimator.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.ViewAnimator.getOutAnimation () "," Returns the current animation used to animate a View that exits the screen. <br /><br />"
"android.widget.ViewAnimator.setInAnimation (Animation inAnimation) "," Specifies the animation used to animate a View that enters the screen. <br /><br />"
"android.widget.ViewAnimator.getCurrentView () "," Returns the View corresponding to the currently displayed child. <br /><br />"
"android.widget.ViewAnimator.removeAllViews () "," Call this method to remove all child views from the ViewGroup. <br /><br />"
"android.widget.ViewAnimator.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.ViewAnimator.showNext () "," Manually shows the next child. <br /><br />"
"android.widget.ViewAnimator.setDisplayedChild (int whichChild) "," Sets which child view will be displayed. <br /><br />"
"android.widget.ViewAnimator.getDisplayedChild () "," Returns the index of the currently displayed child view. <br /><br />"
"android.widget.ViewFlipper.isAutoStart ()   Returns true if this view automatically calls startFlipping () "," Returns true if this view automatically calls startFlipping() when it becomes attached to a window. <br /><br />"
"android.widget.ViewFlipper.startFlipping () "," Start a timer to cycle through child views <br /><br />"
"android.widget.ViewFlipper.setAutoStart (boolean autoStart)   Set if this view automatically calls startFlipping () "," Set if this view automatically calls startFlipping() when it becomes attached to a window. <br /><br />"
"android.widget.ViewFlipper.setFlipInterval (int milliseconds) "," How long to wait before flipping to the next view <br /><br />"
"android.widget.ViewFlipper.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.ViewFlipper.isFlipping () "," Returns true if the child views are flipping. <br /><br />"
"android.widget.ViewFlipper.stopFlipping () "," No more flips <br /><br />"
"android.widget.ViewFlipper.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.ViewSwitcher.addView (View child, int index, ViewGroup.LayoutParams params) "," Adds a child view with the specified layout parameters. <br /><br />"
"android.widget.ViewSwitcher.setFactory (ViewSwitcher.ViewFactory factory) "," Sets the factory used to create the two views between which the ViewSwitcher will flip. <br /><br />"
"android.widget.ViewSwitcher.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.ViewSwitcher.reset () "," Reset the ViewSwitcher to hide all of the existing views and to make it think that the first time animation has not yet played. <br /><br />"
"android.widget.ViewSwitcher.getNextView () "," Returns the next view to be displayed. <br /><br />"
"android.widget.ViewSwitcher.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.ViewSwitcher.ViewFactory.makeView () "," Creates a new View to be added in a ViewSwitcher. <br /><br />"
"android.widget.WrapperListAdapter.getWrappedAdapter () "," Returns the adapter wrapped by this list adapter. <br /><br />"
"android.widget.ZoomButton.setZoomSpeed (long speed) "," no description <br /><br />"
"android.widget.ZoomButton.dispatchUnhandledMove (View focused, int direction) "," This method is the last chance for the focused view and its ancestors to respond to an arrow key. <br /><br />"
"android.widget.ZoomButton.setEnabled (boolean enabled) "," Set the enabled state of this view. <br /><br />"
"android.widget.ZoomButton.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.ZoomButton.onTouchEvent (MotionEvent event) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.widget.ZoomButton.onKeyUp (int keyCode, KeyEvent event)   Default implementation of KeyEvent.Callback.onKeyUp () "," Default implementation of KeyEvent.Callback.onKeyUp(): perform clicking of the view when KEYCODE_DPAD_CENTER or KEYCODE_ENTER is released. <br /><br />"
"android.widget.ZoomButton.onLongClick (View v) "," Called when a view has been clicked and held. <br /><br />"
"android.widget.ZoomButton.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
"android.widget.ZoomButtonsController.setZoomSpeed (long speed) "," Sets the delay between zoom callbacks as the user holds a zoom button. <br /><br />"
"android.widget.ZoomButtonsController.setZoomOutEnabled (boolean enabled) "," Whether to enable the zoom out control. <br /><br />"
"android.widget.ZoomButtonsController.isVisible () "," Whether the zoom controls are visible to the user. <br /><br />"
"android.widget.ZoomButtonsController.isAutoDismissed () "," Whether the zoom controls will be automatically dismissed after showing. <br /><br />"
"android.widget.ZoomButtonsController.getZoomControls () "," Gets the view for the zoom controls. <br /><br />"
"android.widget.ZoomButtonsController.setFocusable (boolean focusable) "," Sets whether the zoom controls should be focusable. <br /><br />"
"android.widget.ZoomButtonsController.setAutoDismissed (boolean autoDismiss) "," Sets whether the zoom controls will be automatically dismissed after showing. <br /><br />"
"android.widget.ZoomButtonsController.setZoomInEnabled (boolean enabled) "," Whether to enable the zoom in control. <br /><br />"
"android.widget.ZoomButtonsController.setVisible (boolean visible) "," Sets whether the zoom controls should be visible to the user. <br /><br />"
"android.widget.ZoomButtonsController.getContainer () "," Gets the container that is the parent of the zoom controls. <br /><br />"
"android.widget.ZoomButtonsController.setOnZoomListener (ZoomButtonsController.OnZoomListener listener) "," Sets the ZoomButtonsController.OnZoomListener listener that receives callbacks to zoom. <br /><br />"
"android.widget.ZoomButtonsController.OnZoomListener.onZoom (boolean zoomIn) "," Called when the owner view needs to be zoomed. <br /><br />"
"android.widget.ZoomButtonsController.OnZoomListener.onVisibilityChanged (boolean visible) "," Called when the zoom controls' visibility changes. <br /><br />"
"android.widget.ZoomControls.setZoomSpeed (long speed) "," no description <br /><br />"
"android.widget.ZoomControls.hide () "," no description <br /><br />"
"android.widget.ZoomControls.show () "," no description <br /><br />"
"android.widget.ZoomControls.setIsZoomOutEnabled (boolean isEnabled) "," no description <br /><br />"
"android.widget.ZoomControls.onInitializeAccessibilityEvent (AccessibilityEvent event) "," Initializes an AccessibilityEvent with information about this View which is the event source. <br /><br />"
"android.widget.ZoomControls.setOnZoomInClickListener (View.OnClickListener listener) "," no description <br /><br />"
"android.widget.ZoomControls.onTouchEvent (MotionEvent event) "," Implement this method to handle touch screen motion events. <br /><br />"
"android.widget.ZoomControls.setOnZoomOutClickListener (View.OnClickListener listener) "," no description <br /><br />"
"android.widget.ZoomControls.setIsZoomInEnabled (boolean isEnabled) "," no description <br /><br />"
"android.widget.ZoomControls.hasFocus () "," Returns true if this view has or contains focus <br /><br />"
"android.widget.ZoomControls.onInitializeAccessibilityNodeInfo (AccessibilityNodeInfo info) "," Initializes an AccessibilityNodeInfo with information about this view. <br /><br />"
