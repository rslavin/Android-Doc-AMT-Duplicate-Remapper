method,description,names,ontology phrase(s),notes
"android.accounts.AccountManager.getAuthToken(Account account, String authTokenType, Bundle options, boolean notifyAuthFailure, AccountManagerCallback< Bundle> callback, Handler handler)","Gets an auth token of the specified type for a particular account, optionally raising a notification if the user must enter credentials.",account auth token,,not platform specific
android.location.Address.getAdminArea(),"Returns the administrative area name of the address, for example, 'CA', or null if it is unknown",administrative area,location_tags,
android.location.Location.getAltitude(),"Get the altitude if available, in meters above the WGS 84 reference ellipsoid.",altitude,gps_information,
"android.content.pm.PackageManager.getApplicationInfo(String packageName, int flags)",Retrieve all of the information we know about a particular package/application.,"application information, app name, app path, app permissions, app process name, app sdk version, app uid, screen size","unique_application_number, application_software",
"android.test.mock.MockPackageManager.getApplicationInfo(String packageName, int flags)",Retrieve all of the information we know about a particular package/application.,"application information, app name, app path, app permissions, app process name, app sdk version, app uid, screen size","unique_application_number, application_software",
android.hardware.Camera.open(),Creates a new Camera object to access the first back-facing camera on the device.,back-facing camera,,
"android.app.backup.BackupDataInput.readEntityData(byte[] data, int offset, int size)",Read a record's raw data from the restore stream.,backup data,data,
android.location.Location.getBearing(),"Get the bearing, in degrees.",bearing,gps_information,
"android.location.LocationManager.getBestProvider(Criteria criteria, boolean enabledOnly)",Returns the name of the provider that best meets the given criteria.,best location provider,"carrier_network, cell_towers, gps",
android.bluetooth.BluetoothAdapter.getState(),Get the current state of the local Bluetooth adapter.,bluetooth adapter status,bluetooth_settings,
android.bluetooth.BluetoothAdapter.isEnabled(),Return true if Bluetooth is currently enabled and ready for use.,bluetooth adapter status,bluetooth_settings,
android.bluetooth.BluetoothClass.getDeviceClass(),Return the (major and minor) device class component of this BluetoothClass.,bluetooth device class,bluetooth_settings,
android.bluetooth.BluetoothClass.getMajorDeviceClass(),Return the major device class component of this BluetoothClass.,bluetooth device class,bluetooth_settings,
android.bluetooth.BluetoothDevice.getBluetoothClass(),Get the Bluetooth class of the remote device.,bluetooth device class,bluetooth_settings,
android.bluetooth.BluetoothDevice.getName(),Get the friendly Bluetooth name of the remote device.,bluetooth device name,bluetooth_settings,
android.bluetooth.BluetoothAdapter.getAddress(),Returns the hardware address of the local Bluetooth adapter.,bluetooth hardware address,bluetooth_settings,
android.bluetooth.BluetoothAdapter.getState(),Get the current state of the local Bluetooth adapter.,bluetooth status,bluetooth_settings,
android.bluetooth.BluetoothAdapter.getBondedDevices(),Return the set of BluetoothDevice objects that are bonded (paired) to the local adapter.,bonded bluetooth devices,bluetooth_settings,
android.webkit.WebSettings.getUserAgentString(),Gets the WebView's user-agent string.,browser user agent,browser_type,
android.webkit.WebSettings.getDefaultUserAgent(Context context),Returns the default User-Agent used by a WebView.,"browser user agent, browser type, browser version, browser language","browser_type, browser_language, application_version_number",
android.hardware.Camera.startPreview(),Starts capturing and drawing preview frames to the screen.,camera preview,,
android.app.admin.DevicePolicyManager.getCameraDisabled(ComponentName admin),"Determine whether or not the device's cameras have been disabled for this user, either by the current admin, if specified, or all admins.",camera status,,
android.telephony.TelephonyManager.getNeighboringCellInfo(),Returns the neighboring cell information of the device.,"cell information, cid, lac, network type, psc, rssi","cell_towers, carrier_network, network_measurements, network_protocol, area_code",
android.text.ClipboardManager.getText(),Returns the text on the clipboard.,clipboard text,,not platform specific
android.net.NetworkInfo.getState(),Reports the current coarse-grained state of the network.,coarse-grained network status,network_measurements,
android.webkit.CookieManager.getCookie(String url),Gets the cookies for the given URL.,cookies,cookies,
android.location.Address.getCountryCode(),"Returns the country code of the address, for example 'US', or null if it is unknown.",country code,"country, location_tags",
android.telephony.TelephonyManager.getSimCountryIso(),Returns the ISO country code equivalent for the SIM provider's country code.,country code,"country, location_tags",
android.telephony.TelephonyManager.getCellLocation(),Returns the current location of the device.,current location,"cell_towers, cell_towers",
android.telephony.TelephonyManager.getDataActivity(),Returns a constant indicating the type of activity on a data connection (cellular).,data connection activity type,"service_usage_details, network_type",
android.net.ConnectivityManager.getActiveNetworkInfo(),Returns details about the currently active default data network.,"data network details, fine-grained network state, coarse-grained network state, network availability, network connection status",network_measurements,
android.net.ConnectivityManager.isActiveNetworkMetered(),Returns if the currently active data network is metered.,data network metering,"network_information, network_measurements",
android.app.admin.DevicePolicyManager.getActiveAdmins(),Return a list of all currently active device administrator's component names.,device administrator's component names,user_information,
android.app.ActivityManager.getDeviceConfigurationInfo(),Get the device configuration attributes.,"device configuration, GLES version, input preference, keyboard type, touch screen type","devices_hardware, hardware_settings, mobile_device_language_setting",
android.view.InputEvent.getDeviceId(),Gets the id for the device that this event came from.,device id,device_id,
android.view.KeyEvent.getDeviceId(),Gets the id for the device that this event came from.,device id,device_id,
android.view.MotionEvent.getDeviceId(),Gets the id for the device that this event came from.,device id,device_id,
android.view.InputDevice.getMotionRanges(),Gets the ranges for all axes supported by the device.,device supported axes ranges,"device_capability, device_characteristics",
android.location.Location.distanceTo(Location dest),Returns the approximate distance in meters between this location and the given location.,distance,"location_information, high-level_geographic_information",
android.telephony.TelephonyManager.getDeviceId(),"Returns the unique device ID, for example, the IMEI for GSM and the MEID or ESN for CDMA phones.",esn,"unique_device_id, udid, imei",
android.net.NetworkInfo.getDetailedState(),Reports the current fine-grained state of the network.,"fine-grained network status, fine-grained network state",network_measurements,
"android.content.pm.PackageManager.queryPermissionsByGroup(String group, int flags)",Query for all of the permissions associated with a particular group.,group permissions,operating_system_information,
"android.test.mock.MockPackageManager.queryPermissionsByGroup(String group, int flags)",Query for all of the permissions associated with a particular group.,group permissions,operating_system_information,
android.location.LocationProvider.getAccuracy(),Returns a constant describing horizontal accuracy of this provider.,horizontal provider accuracy,gps_information,
android.telephony.TelephonyManager.getDeviceId(),"Returns the unique device ID, for example, the IMEI for GSM and the MEID or ESN for CDMA phones.",imei,"unique_device_id, udid, imei",
android.telephony.TelephonyManager.getSubscriberId(),"Returns the unique subscriber ID, for example, the IMSI for a GSM phone.",imsi,unique_device_id,
android.view.InputDevice.getName(),Gets the name of this input device.,input device,device_name,
android.view.InputDevice.getDescriptor(),"Gets the input device descriptor, which is a stable identifier for an input device.",input device description,device_characteristics,
android.hardware.input.InputManager.getInputDevice(int id),Gets information about the input device with the specified id.,input device information,device_information,
android.hardware.input.InputManager.getInputDeviceIds(),Gets the ids of all input devices in the system.,input devices,"hardware_device_id, peripherals, ",
android.content.pm.PackageManager.getInstalledApplications(int flags),Return a List of all application packages that are installed on the device.,installed applications,installed_applications,
android.test.mock.MockPackageManager.getInstalledApplications(int flags),Return a List of all application packages that are installed on the device.,installed applications,installed_applications,
android.content.pm.PackageManager.getInstalledPackages(int flags),Return a List of all packages that are installed on the device.,installed applications,installed_applications,
android.test.mock.MockPackageManager.getInstalledPackages(int flags),Return a List of all packages that are installed on the device.,installed applications,installed_applications,
"android.content.pm.PackageManager.queryBroadcastReceivers(Intent intent, int flags)",Retrieve all receivers that can handle a broadcast of the given intent.,intent receivers,,
"android.test.mock.MockPackageManager.queryBroadcastReceivers(Intent intent, int flags)",Retrieve all receivers that can handle a broadcast of the given intent.,intent receivers,,
"android.content.pm.PackageManager.queryIntentServices(Intent intent, int flags)",Retrieve all services that can match the given intent.,intent receivers,,
"android.test.mock.MockPackageManager.queryIntentServices(Intent intent, int flags)",Retrieve all services that can match the given intent.,intent receivers,,
android.net.wifi.WifiManager.getDhcpInfo(),"Return the DHCP-assigned addresses from the last successful DHCP request, if any.","ip address, dns servers, gateway, ip address, lease duration, netmask server address","ip_address, domain_servers",
android.telephony.TelephonyManager.getNetworkCountryIso(),Returns the ISO country code equivalent of the current registered operator's MCC (Mobile Country Code).,iso country code,mobile_country_code,
android.media.ExifInterface.getThumbnail(),"Returns the thumbnail inside the JPEG file, or null if there is no thumbnail.",jpeg thumbnail,,
android.view.KeyCharacterMap.load(int deviceId),Loads the key character maps for the keyboard with the specified device id.,keyboard character maps,mobile_device_language_setting,
android.app.SearchableInfo.getVoiceLanguageId(),Gets the resource id of the spoken language to recognize in voice search.,language id,mobile_device_language_setting,
android.app.SearchableInfo.getVoiceLanguageModeId(),Gets the resource id of the voice search language model string.,language model id,mobile_device_language_setting,
android.location.LocationManager.getLastKnownLocation(String provider),Returns a Location indicating the data from the last known location fix obtained from the given provider.,last known location,real-time_location-based_information,
android.location.Location.getLatitude(),"Get the latitude, in degrees.",latitude,latitude,
android.location.Address.getCountryName(),"Returns the localized country name of the address, for example 'Iceland', or null if it is unknown.",localized country name,country,
"android.location.LocationManager.requestLocationUpdates(long minTime, float minDistance, Criteria criteria, LocationListener listener, Looper looper)","Register for location updates using a Criteria, and a callback on the specified looper thread.",location,location,
"android.location.LocationManager.requestLocationUpdates(long minTime, float minDistance, Criteria criteria, PendingIntent intent)",Register for location updates using a Criteria and pending intent.,location,location,
"android.location.LocationManager.requestLocationUpdates(String provider, long minTime, float minDistance, LocationListener listener, Looper looper)","Register for location updates using the named provider, and a callback on the specified looper thread.",location,location,
"android.location.LocationManager.requestLocationUpdates(String provider, long minTime, float minDistance, LocationListener listener)","Register for location updates using the named provider, and a pending intent.",location,location,
"android.location.LocationManager.requestSingleUpdate(Criteria criteria, LocationListener listener, Looper looper)",Register for a single location update using a Criteria and a callback.,location,location,
"android.location.LocationManager.requestSingleUpdate(Criteria criteria, PendingIntent intent)",Register for a single location update using a Criteria and pending intent.,location,location,
"android.location.LocationManager.requestSingleUpdate(String provider, LocationListener listener, Looper looper)",Register for a single location update using the named provider and a callback.,location,location,
"android.location.LocationManager.requestSingleUpdate(String provider, PendingIntent intent)",Register for a single location update using a named provider and pending intent.,location,location,
android.location.Location.getAccuracy(),"Get the estimated accuracy of this location, in meters.",location accuracy,gps_information,
android.location.LocationManager.getProvider(String name),"Returns the information associated with the location provider of the given name, or null if no provider exists by that name.",location provider,"carrier_network, cell_towers, gps",
android.location.LocationManager.getProviders(boolean enabledOnly),Returns a list of the names of location providers.,location provider,"carrier_network, cell_towers, gps",
android.hardware.display.DisplayManager.getDisplay(int displayId),Gets information about a logical display.,logical display information,,
android.support.v4.hardware.display.DisplayManagerCompat.getDisplay(int displayId),Gets information about a logical display.,logical display information,,
android.hardware.display.DisplayManager.getDisplays(),Gets all currently valid logical displays.,logical displays,,
android.support.v4.hardware.display.DisplayManagerCompat.getDisplays(),Gets all currently valid logical displays.,logical displays,,
android.hardware.display.DisplayManager.getDisplays(String category),Gets all currently valid logical displays of the specified category.,logical displays,,
android.support.v4.hardware.display.DisplayManagerCompat.getDisplays(String category),Gets all currently valid logical displays of the specified category.,logical displays,,
android.location.Location.getLongitude(),"Get the longitude, in degrees.",longitude,longitude,
android.location.Location.setLongitude(double longitude),"Set the longitude, in degrees.",longitude,longitude,
android.location.Address.getAddressLine(int index),"Returns a line of the address numbered by the given index (starting at 0), or null if no such line is present.",mailing address,"zip_code, location_tags",
android.location.Address.getLocality(),"Returns the locality of the address, for example 'Mountain View', or null if it is unknown.",mailing address,"zip_code, location_tags",
"android.location.Geocoder.getFromLocationName(String locationName, int maxResults)","Returns an array of Addresses that are known to describe the named location, which may be a place name such as 'Dalvik, Iceland', an address such as '1600 Amphitheatre Parkway, Mountain View, CA', an airport code such as 'SFO', etc..",mailing addresses,"zip_code, location_tags",
"android.location.Geocoder.getFromLocationName(String locationName, int maxResults)","Returns an array of Addresses that are known to describe the named location, which may be a place name such as 'Dalvik, Iceland', an address such as '1600 Amphitheatre Parkway, Mountain View, CA', an airport code such as 'SFO', etc..",mailing addresses,"zip_code, location_tags",
android.telephony.TelephonyManager.getNetworkCountryIso(),Returns the ISO country code equivalent of the current registered operator's MCC (Mobile Country Code).,mcc,mcc,
android.telephony.TelephonyManager.getNetworkOperator(),Returns the numeric name (MCC+MNC) of current registered operator.,"mcc, mnc","mcc, carrier_network",
android.telephony.TelephonyManager.getSimOperator(),Returns the MCC+MNC (mobile country code + mobile network code) of the provider of the SIM.,"mcc, mnc","mcc, carrier_network",
android.telephony.TelephonyManager.getDeviceId(),"Returns the unique device ID, for example, the IMEI for GSM and the MEID or ESN for CDMA phones.",meid,udid,
android.telephony.TelephonyManager.getNetworkOperator(),Returns the numeric name (MCC+MNC) of current registered operator.,mnc,"mcc, carrier_network",
android.telephony.TelephonyManager.getSimOperator(),Returns the MCC+MNC (mobile country code + mobile network code) of the provider of the SIM.,mnc,"mcc, carrier_network",
android.telephony.TelephonyManager.getNetworkCountryIso(),Returns the ISO country code equivalent of the current registered operator's MCC (Mobile Country Code).,mobile country code,"mcc, carrier_network",
android.telephony.TelephonyManager.getSimOperator(),Returns the MCC+MNC (mobile country code + mobile network code) of the provider of the SIM.,mobile country code,"mcc, carrier_network",
android.telephony.TelephonyManager.getNetworkOperator(),Returns the numeric name (MCC+MNC) of current registered operator.,mobile network code,"mcc, carrier_network",
android.telephony.TelephonyManager.getSimOperator(),Returns the MCC+MNC (mobile country code + mobile network code) of the provider of the SIM.,mobile network code,"mcc, carrier_network",
android.telephony.TelephonyManager.getLine1Number(),"Returns the phone number string for line 1, for example, the MSISDN for a GSM phone.",msisdn,phone_number,
android.net.ConnectivityManager.getNetworkInfo(int networkType),Returns connection status information about a particular network type.,network connection status,network_measurements,
android.net.ConnectivityManager.getNetworkInfo(Network network),Returns connection status information about a particular Network.,network connection status,network_measurements,
android.net.ConnectivityManager.getAllNetworkInfo(),Returns connection status information about all network types supported by the device.,"network connection status, fine-grained network state, coarse-grained network state, network availability, network connection status",network_measurements,
android.net.NetworkInfo.getSubtypeName(),Return a human-readable name describing the subtype of the network.,network name,"network_protocol, telecommunications_carrier_information, network_type",
android.net.NetworkInfo.isRoaming(),Indicates whether the device is currently roaming on this network.,network roaming,telecommunications_carrier_information,
android.telephony.ServiceState.getRoaming(),Get current roaming indicator of phone (note: not just decoding from TS 27.007 7.2),network roaming,telecommunications_carrier_information,
android.telephony.TelephonyManager.isNetworkRoaming(),"Returns true if the device is considered roaming on the current network, for GSM purposes.",network roaming,telecommunications_carrier_information,
android.net.NetworkInfo.getExtraInfo(),"Report the extra information about the network state, if any was provided by the lower networking layers.","network state, network information (this is a string that could contain anything)",network_information,
android.net.NetworkInfo.getSubtype(),Return a network-type-specific integer describing the subtype of the network.,network type,"network_protocol, telecommunications_carrier_information, network_type",
android.net.NetworkInfo.getType(),Reports the type of network to which the info in this NetworkInfo pertains.,network type,"network_protocol, telecommunications_carrier_information, network_type",
android.net.NetworkInfo.getTypeName(),"Return a human-readable name describe the type of the network, for example 'WIFI' or 'MOBILE'.",network type,"network_protocol, network_type",
android.os.Handler.obtainMessage(),Returns a new Message from the global message pool.,os message,,
android.os.Environment.getDataDirectory(),Return the user data directory.,os user data,user_content,
android.content.pm.PackageManager.getNameForUid(int uid),Retrieve the official name associated with a user id.,os user's name,,
android.test.mock.MockPackageManager.getNameForUid(int uid),Retrieve the official name associated with a user id.,os user's name,,
android.content.pm.PackageManager.getPackagesForUid(int uid),Retrieve the names of all packages that are associated with a particular user id.,os user's packages,installed_applications,
android.test.mock.MockPackageManager.getPackagesForUid(int uid),Retrieve the names of all packages that are associated with a particular user id.,os user's packages,installed_applications,
android.support.v4.view.accessibility.AccessibilityRecordCompat.isPassword(),Gets if the source is a password field.,password,user_information,
android.view.accessibility.AccessibilityRecord.isPassword(),Gets if the source is a password field.,password,user_information,
android.telephony.TelephonyManager.getLine1Number(),"Returns the phone number string for line 1, for example, the MSISDN for a GSM phone.",phone number,phone_number,
android.telephony.TelephonyManager.getPhoneType(),Returns a constant indicating the device phone type.,phone type,"mobile_device_type, mobile_phone_model",
"android.location.Geocoder.getFromLocationName(String locationName, int maxResults)","Returns an array of Addresses that are known to describe the named location, which may be a place name such as 'Dalvik, Iceland', an address such as '1600 Amphitheatre Parkway, Mountain View, CA', an airport code such as 'SFO', etc..",place name,"location_tags, specifc_location_data, specific_geolocation",
android.location.Address.getPostalCode(),"Returns the postal code of the address, for example '94110', or null if it is unknown.",postal code,postal_code,
android.content.Context.openFileInput(String name),Open a private file associated with this Context's application package for reading.,private file,files,
android.content.ContextWrapper.openFileInput(String name),Open a private file associated with this Context's application package for reading.,private file,files,
android.test.mock.MockContext.openFileInput(String name),Open a private file associated with this Context's application package for reading.,private file,files,
android.test.RenamingDelegatingContext.openFileInput(String name),Open a private file associated with this Context's application package for reading.,private file,files,
"android.content.Context.checkPermission(String permission, int pid, int uid)",Determine whether the given permission is allowed for a particular process and user ID running in the system.,process permission,operating_system_information,
"android.content.ContextWrapper.checkPermission(String permission, int pid, int uid)",Determine whether the given permission is allowed for a particular process and user ID running in the system.,process permission,operating_system_information,
"android.test.mock.MockContext.checkPermission(String permission, int pid, int uid)",Determine whether the given permission is allowed for a particular process and user ID running in the system.,process permission,operating_system_information,
android.os.Build.getRadioVersion(),Returns the version string for the radio firmware.,radio firmware version,hardware_information,
android.accounts.AccountManager.getAccounts(),Lists all accounts of any type registered on the device.,registered device accounts,,
android.accounts.AccountManager.getAccountsByType(String type),Lists all accounts of a particular type.,registered device accounts,,
android.telephony.TelephonyManager.getNetworkOperatorName(),Returns the alphabetic name of current registered operator.,registered operator's alphabetic name,,
"android.hardware.SensorManager.getDefaultSensor(int type, boolean wakeUp)",Return a Sensor with the given type and wakeUp properties.,sensor,sensors,
android.hardware.SensorManager.getDefaultSensor(int type),Use this method to get the default sensor for a given type.,sensor,sensors,
"android.hardware.SensorManager.registerListener(SensorEventListener listener, Sensor sensor, int samplingPeriodUs, int maxReportLatencyUs)",Registers a SensorEventListener for the given sensor at the given sampling frequency and the given maximum reporting latency.,sensor,sensors,
"android.content.pm.PackageManager.getServiceInfo(ComponentName component, int flags)",Retrieve all of the information we know about a particular service class.,service information,"operating_system_information, application_information",service as in daemon
android.telephony.TelephonyManager.getSimOperatorName(),Returns the Service Provider Name (SPN).,service provider name,mobile_service_carrier_name,
android.telephony.TelephonyManager.getSimState(),Returns a constant indicating the state of the default SIM card.,SIM card state,"telecommunications_carrier_information, network_measurements",
android.telephony.TelephonyManager.getSimSerialNumber(),"Returns the serial number of the SIM, if applicable.",SIM serial number,mobile_device_id,
android.telephony.SmsMessage.getOriginatingAddress(),Returns the originating address (sender) of this SMS message in String form or null if unavailable,sms address,phone_number,
android.telephony.SmsMessage.getDisplayMessageBody(),"Returns the message body, or email message body if this message was from an email gateway.",sms message body,"sms_messages, chat_text, text_messages",
android.telephony.SmsMessage.getMessageBody(),"Returns the message body as a String, if it exists and is text based.",sms message body,"sms_messages, chat_text, text_messages",
"android.media.SoundPool.play(int soundID, float leftVolume, float rightVolume, int priority, int loop, float rate)",Play a sound from a sound ID.,sound playback,,
android.location.Location.getSpeed(),"Get the speed if it is available, in meters/second over ground.",speed,gps_information,
android.telephony.TelephonyManager.getSimOperatorName(),Returns the Service Provider Name (SPN).,spm (service provider name),mobile_service_carrier_name,
android.content.pm.PackageManager.getSystemAvailableFeatures(),Get a list of features that are available on the system.,system features,device_characteristics,
android.test.mock.MockPackageManager.getSystemAvailableFeatures(),Get a list of features that are available on the system.,system features,device_characteristics,
android.text.format.Time.getCurrentTimezone(),Returns the timezone string that is currently set for the device.,timezone,time_zone,
android.telephony.TelephonyManager.getDeviceId(),"Returns the unique device ID, for example, the IMEI for GSM and the MEID or ESN for CDMA phones.",unique device id,"unique_device_id, udid, imei",
android.telephony.TelephonyManager.getSubscriberId(),"Returns the unique subscriber ID, for example, the IMSI for a GSM phone.",unique subscriber id,unique_device_id,
android.webkit.WebView.getOriginalUrl(),Gets the original URL for the current page.,url,"url, referral_url",
android.webkit.WebView.getOriginalUrl(),Gets the original URL for the current page.,url,"url, referral_url",
"android.accounts.AccountManager.getUserData(Account account, String key)",Gets the user data named by 'key' associated with the account.,user data,"address_book, calendar_entries, chat_histories, preferred_language, phone_number, user_content, users_internet_protocol",
android.location.Location.getTime(),"Return the UTC time of this fix, in milliseconds since January 1, 1970.",utc time,time,
android.telephony.ServiceState.getState(),Get current voice service state,voice service,telecommunications_carrier_information,
android.net.wifi.WifiManager.getScanResults(),Return the results of the latest access point scan.,wifi access points,wi-fi_access_points,
android.net.wifi.WifiInfo.getBSSID(),Return the basic service set identifier (BSSID) of the current access point.,wifi basic service set identifier,wi-fi_access_point_information,
android.net.wifi.WifiInfo.getBSSID(),Return the basic service set identifier (BSSID) of the current access point.,wifi bssid,wi-fi_access_point_information,
android.net.wifi.WifiManager.getConnectionInfo(),"Return dynamic information about the current Wi-Fi connection, if any is active.","wifi connections, bssid, frequency, ssid, ip address, link speed, mac address, network id, rssi, detailed connection state","wi-fi_access_point_information, wifi_signal_strength, ip_address, domain_servers, network_measurements",
android.net.wifi.WifiManager.getWifiState(),Gets the Wi-Fi enabled state.,wifi enabled state,wi-fi_access_point_information,
android.net.wifi.WifiInfo.getLinkSpeed(),Returns the current link speed in LINK_SPEED_UNITS.,wifi link speed,"wi-fi_access_point_information, wifi_signal_strength",
android.net.wifi.WifiInfo.getNetworkId(),"Each configured network has a unique small integer ID, used to identify the network when performing operations on the supplicant.",wifi network id,wi-fi_access_point_information,
android.net.wifi.WifiManager.getConfiguredNetworks(),Return a list of all the networks configured in the supplicant.,wifi networks,wi-fi_access_point_information,
android.net.wifi.WifiInfo.getRssi(),"Returns the received signal strength indicator of the current 802.11 network, in dBm.",wifi received signal strength indicator,"wi-fi_access_point_information, wifi_signal_strength",
android.net.wifi.WifiInfo.getSSID(),Returns the service set identifier (SSID) of the current 802.11 network.,wifi service set identifier,wi-fi_access_point_information,
